; ModuleID = '../../third_party/freetype/src/src/type1/type1.c'
source_filename = "../../third_party/freetype/src/src/type1/type1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, {}*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_ServiceDescRec_ = type { i8*, i8* }
%struct.FT_Service_PsFontNameRec_ = type { i8* (%struct.FT_FaceRec_*)* }
%struct.FT_Service_GlyphDictRec_ = type { i32 (%struct.FT_FaceRec_*, i32, i8*, i32)*, i32 (%struct.FT_FaceRec_*, i8*)* }
%struct.FT_Service_PsInfoRec_ = type { i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.PS_FontExtraRec_*)*, i32 (%struct.FT_FaceRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)*, i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)* }
%struct.PS_FontInfoRec_ = type { i8*, i8*, i8*, i8*, i8*, i64, i8, i16, i16 }
%struct.PS_FontExtraRec_ = type { i16 }
%struct.PS_PrivateRec_ = type { i32, i32, i8, i8, i8, i8, [14 x i16], [10 x i16], [14 x i16], [10 x i16], i64, i32, i32, [1 x i16], [1 x i16], i8, i8, i8, i8, [13 x i16], [13 x i16], i64, i64, i64, [2 x i16] }
%struct.FT_Service_PropertiesRec_ = type { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)*, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* }
%struct.FT_Service_KerningRec_ = type { i32 (%struct.FT_FaceRec_*, i64, i32, i64*)* }
%struct.FT_Service_MultiMastersRec_ = type { i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*, void (%struct.FT_FaceRec_*)* }
%struct.FT_Multi_Master_ = type { i32, i32, [4 x %struct.FT_MM_Axis_] }
%struct.FT_MM_Axis_ = type { i8*, i64, i64 }
%struct.FT_MM_Var_ = type { i32, i32, i32, %struct.FT_Var_Axis_*, %struct.FT_Var_Named_Style_* }
%struct.FT_Var_Axis_ = type { i8*, i64, i64, i64, i64, i32 }
%struct.FT_Var_Named_Style_ = type { i64*, i32, i32 }
%struct.T1_FieldRec_ = type { i8*, i32, i32, void (%struct.FT_FaceRec_*, i8*)*, i32, i8, i32, i32, i32 }
%struct.PS_DriverRec_ = type { %struct.FT_DriverRec_, i32, i8, [8 x i32], i32 }
%struct.T1_DecoderRec_ = type { %struct.T1_BuilderRec_, [512 x i64], i64*, [17 x %struct.T1_Decoder_ZoneRec_], %struct.T1_Decoder_ZoneRec_*, %struct.FT_Service_PsCMapsRec_*, i32, i8**, i32, i32, i8**, i32*, %struct.FT_HashRec_*, %struct.FT_Matrix_, %struct.FT_Vector_, i32, i32, [7 x %struct.FT_Vector_], %struct.PS_BlendRec_*, i32, i32 (%struct.T1_DecoderRec_*, i32)*, %struct.T1_Decoder_FuncsRec_, i64*, i32, i8, %struct.FT_Generic_ }
%struct.T1_BuilderRec_ = type { %struct.FT_MemoryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64, i64, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_BBox_, i32, i8, i8, i8, i8*, i8*, %struct.T1_Builder_FuncsRec_ }
%struct.T1_Builder_FuncsRec_ = type { void (%struct.T1_BuilderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8)*, void (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i32)*, void (%struct.T1_BuilderRec_*, i64, i64, i8)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, i32 (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, void (%struct.T1_BuilderRec_*)* }
%struct.T1_Decoder_ZoneRec_ = type { i8*, i8*, i8* }
%struct.FT_Service_PsCMapsRec_ = type { i32 (i8*)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)*, i32 (%struct.PS_UnicodesRec_*, i32)*, i32 (%struct.PS_UnicodesRec_*, i32*)*, i8* (i32)*, i8* (i32)*, i16*, i16* }
%struct.PS_UnicodesRec_ = type { %struct.FT_CMapRec_, i32, %struct.PS_UniMap_* }
%struct.FT_CMapRec_ = type { %struct.FT_CharMapRec_, %struct.FT_CMap_ClassRec_* }
%struct.FT_CMap_ClassRec_ = type { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }
%struct.PS_UniMap_ = type { i32, i32 }
%struct.FT_HashRec_ = type { i32, i32, i32, i64 (%union.FT_Hashkey_*)*, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)*, %struct.FT_HashnodeRec_** }
%union.FT_Hashkey_ = type { i8* }
%struct.FT_HashnodeRec_ = type { %union.FT_Hashkey_, i64 }
%struct.PS_BlendRec_ = type { i32, i32, [4 x i8*], [16 x i64*], [4 x %struct.PS_DesignMap_], i64*, i64*, [17 x %struct.PS_FontInfoRec_*], [17 x %struct.PS_PrivateRec_*], i64, [17 x %struct.FT_BBox_*], [16 x i32], i32 }
%struct.PS_DesignMap_ = type { i8, i64*, i64* }
%struct.T1_Decoder_FuncsRec_ = type { i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, void (%struct.T1_DecoderRec_*)*, i32 (%struct.T1_DecoderRec_*, i8*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }
%struct.PS_Decoder_ = type { %struct.PS_Builder_, [49 x i64], i64*, [17 x %struct.PS_Decoder_Zone_], %struct.PS_Decoder_Zone_*, i32, i32, [7 x %struct.FT_Vector_], %struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, %struct.FT_Generic_*, i64*, i8, i32, i32, i32, i32, i32, i8**, i8**, i8**, i32, i32, i8, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*, %struct.FT_Service_PsCMapsRec_*, i32, i32*, %struct.FT_HashRec_*, %struct.FT_Matrix_, %struct.FT_Vector_, %struct.PS_BlendRec_*, i64*, i32 }
%struct.PS_Builder_ = type { %struct.FT_MemoryRec_*, %struct.FT_FaceRec_*, %struct.CFF_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64*, i64*, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_BBox_*, i8, i8, i8, i8, i8, %struct.PS_Builder_FuncsRec_ }
%struct.CFF_GlyphSlotRec_ = type { %struct.FT_GlyphSlotRec_, i8, i8, i64, i64 }
%struct.PS_Builder_FuncsRec_ = type { void (%struct.PS_Builder_*, i8*, i8)*, void (%struct.PS_Builder_*)* }
%struct.PS_Decoder_Zone_ = type { i8*, i8*, i8* }
%struct.CFF_FontRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_StreamRec_*, %struct.FT_MemoryRec_*, i64, i32, i32, i8, i8, i8, i32, i8, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_EncodingRec_, %struct.CFF_CharsetRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, i8*, i8**, i32, i8**, i8*, i64, %struct.CFF_SubFontRec_, i32, [256 x %struct.CFF_SubFontRec_*], %struct.CFF_FDSelectRec_, %struct.PSHinter_Interface_*, %struct.FT_Service_PsCMapsRec_*, i8*, %struct.PS_FontInfoRec_*, i8*, i8*, %struct.FT_Generic_, %struct.CFF_VStoreRec_, %struct.PS_FontExtraRec_* }
%struct.CFF_EncodingRec_ = type { i32, i64, i32, [256 x i16], [256 x i16] }
%struct.CFF_CharsetRec_ = type { i32, i64, i16*, i16*, i32, i32 }
%struct.CFF_IndexRec_ = type { %struct.FT_StreamRec_*, i64, i32, i32, i8, i64, i64, i64*, i8* }
%struct.CFF_SubFontRec_ = type { %struct.CFF_FontRecDictRec_, %struct.CFF_PrivateRec_, %struct.CFF_BlendRec_, i32, i64*, i8*, i8*, i32, i32, %struct.CFF_IndexRec_, i8**, i32 }
%struct.CFF_FontRecDictRec_ = type { i32, i32, i32, i32, i32, i32, i8, i64, i64, i64, i32, i32, %struct.FT_Matrix_, i8, i64, %struct.FT_Vector_, i64, %struct.FT_BBox_, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i16, i16, i64, i32 }
%struct.CFF_PrivateRec_ = type { i8, i8, i8, i8, [14 x i64], [10 x i64], [14 x i64], [10 x i64], i64, i64, i64, i64, i64, i8, i8, [13 x i64], [13 x i64], i8, i64, i32, i32, i64, i64, i64, i64, i64, i32, %struct.CFF_SubFontRec_* }
%struct.CFF_BlendRec_ = type { i8, i8, %struct.CFF_FontRec_*, i32, i32, i64*, i32, i32* }
%struct.CFF_FDSelectRec_ = type { i8, i32, i8*, i32, i32, i32, i8 }
%struct.PSHinter_Interface_ = type { %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T1_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T2_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)* }
%struct.PSH_Globals_FuncsRec_ = type { i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*)* }
%struct.PSH_GlobalsRec_ = type opaque
%struct.T1_Hints_FuncsRec_ = type { %struct.T1_HintsRec_*, void (%struct.T1_HintsRec_*)*, i32 (%struct.T1_HintsRec_*, i32)*, void (%struct.T1_HintsRec_*, i32, i64*)*, void (%struct.T1_HintsRec_*, i32, i64*)*, void (%struct.T1_HintsRec_*, i32)*, i32 (%struct.T1_HintsRec_*, %struct.FT_Outline_*, %struct.PSH_GlobalsRec_*, i32)* }
%struct.T1_HintsRec_ = type opaque
%struct.T2_Hints_FuncsRec_ = type { %struct.T2_HintsRec_*, void (%struct.T2_HintsRec_*)*, i32 (%struct.T2_HintsRec_*, i32)*, void (%struct.T2_HintsRec_*, i32, i32, i64*)*, void (%struct.T2_HintsRec_*, i32, i32, i8*)*, void (%struct.T2_HintsRec_*, i32, i8*)*, i32 (%struct.T2_HintsRec_*, %struct.FT_Outline_*, %struct.PSH_GlobalsRec_*, i32)* }
%struct.T2_HintsRec_ = type opaque
%struct.CFF_VStoreRec_ = type { i32, %struct.CFF_VarData_*, i16, i32, %struct.CFF_VarRegion_* }
%struct.CFF_VarData_ = type { i32, i32* }
%struct.CFF_VarRegion_ = type { %struct.CFF_AxisCoords_* }
%struct.CFF_AxisCoords_ = type { i64, i64, i64 }
%struct.TT_FaceRec_ = type { %struct.FT_FaceRec_, %struct.TTC_HeaderRec_, i64, i16, %struct.TT_TableRec_*, %struct.TT_Header_, %struct.TT_HoriHeader_, %struct.TT_MaxProfile_, i8, %struct.TT_VertHeader_, i16, %struct.TT_NameTableRec_, %struct.TT_OS2_, %struct.TT_Postscript_, i8*, i64, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)*, void (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i8*, i8*, i8*, i8*, i8*, %struct.TT_Gasp_, %struct.TT_PCLT_, i64, %struct.TT_SBit_ScaleRec_*, %struct.TT_Post_NamesRec_, %struct.FT_Palette_Data_, i16, %struct.FT_Color_*, i8, %struct.FT_Color_, i64, i8*, i64, i8*, i64, i32*, i32 (i8*)*, %struct.FT_Generic_, i8*, i64, i64, i8, i8, %struct.GX_BlendRec_*, i32, i8*, i32, i64, i64, i64, i8*, i8*, i64, i32, i64, i8*, i8*, i64, i32, i32, i32*, i8*, i64, i32, i32, i32, i64, i64, i64, i64, i8*, i8* }
%struct.TTC_HeaderRec_ = type { i64, i64, i64, i64* }
%struct.TT_TableRec_ = type { i64, i64, i64, i64 }
%struct.TT_Header_ = type { i64, i64, i64, i64, i16, i16, [2 x i64], [2 x i64], i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_HoriHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_MaxProfile_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_VertHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_NameTableRec_ = type { i16, i32, i32, %struct.TT_NameRec_*, i32, %struct.TT_LangTagRec_*, %struct.FT_StreamRec_* }
%struct.TT_NameRec_ = type { i16, i16, i16, i16, i16, i64, i8* }
%struct.TT_LangTagRec_ = type { i16, i64, i8* }
%struct.TT_OS2_ = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [10 x i8], i64, i64, i64, i64, [4 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i64, i64, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_Postscript_ = type { i64, i64, i16, i16, i64, i64, i64, i64, i64 }
%struct.TT_LoaderRec_ = type { %struct.TT_FaceRec_*, %struct.TT_SizeRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, i64, i32, %struct.FT_StreamRec_*, i32, i16, %struct.FT_BBox_, i32, i32, i32, i8, %struct.FT_Vector_, %struct.FT_Vector_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_ExecContextRec_*, i8*, i64, i8*, i32, i32, %struct.FT_Vector_, %struct.FT_Vector_, i8*, i8*, %struct.FT_ListRec_ }
%struct.TT_SizeRec_ = type opaque
%struct.TT_GlyphZoneRec_ = type { %struct.FT_MemoryRec_*, i16, i16, i16, i16, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*, i16*, i16 }
%struct.TT_ExecContextRec_ = type opaque
%struct.TT_Gasp_ = type { i16, i16, %struct.TT_GaspRangeRec_* }
%struct.TT_GaspRangeRec_ = type { i16, i16 }
%struct.TT_PCLT_ = type { i64, i64, i16, i16, i16, i16, i16, i16, [16 x i8], [8 x i8], [6 x i8], i8, i8, i8, i8 }
%struct.TT_SBit_ScaleRec_ = type { %struct.TT_SBit_LineMetricsRec_, %struct.TT_SBit_LineMetricsRec_, i8, i8, i8, i8 }
%struct.TT_SBit_LineMetricsRec_ = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.TT_Post_NamesRec_ = type { i8, %union.anon }
%union.anon = type { %struct.TT_Post_20Rec_ }
%struct.TT_Post_20Rec_ = type { i16, i16, i16*, i8** }
%struct.FT_Palette_Data_ = type { i16, i16*, i16*, i16, i16* }
%struct.FT_Color_ = type { i8, i8, i8, i8 }
%struct.GX_BlendRec_ = type opaque
%struct.T1_Loader_ = type { %struct.T1_ParserRec_, i32, %struct.PS_TableRec_, i32, %struct.PS_TableRec_, %struct.PS_TableRec_, %struct.PS_TableRec_, i32, %struct.PS_TableRec_, %struct.FT_HashRec_*, i8, i32 }
%struct.T1_ParserRec_ = type { %struct.PS_ParserRec_, %struct.FT_StreamRec_*, i8*, i64, i8*, i64, i8, i8, i8 }
%struct.PS_ParserRec_ = type { i8*, i8*, i8*, i32, %struct.FT_MemoryRec_*, %struct.PS_Parser_FuncsRec_ }
%struct.PS_Parser_FuncsRec_ = type { void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*, i32)*, i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)*, i32 (%struct.PS_ParserRec_*, i32, i16*)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)* }
%struct.T1_TokenRec_ = type { i8*, i8*, i32 }
%struct.PS_TableRec_ = type { i8*, i64, i64, i64, i32, i32, i8**, i32*, %struct.FT_MemoryRec_*, %struct.PS_Table_FuncsRec_ }
%struct.PS_Table_FuncsRec_ = type { i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, void (%struct.PS_TableRec_*)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, void (%struct.PS_TableRec_*)* }
%struct.T1_FaceRec_ = type { %struct.FT_FaceRec_, %struct.T1_FontRec_, i8*, i8*, i8*, [2 x %struct.FT_CharMapRec_], [2 x %struct.FT_CharMapRec_*], %struct.PS_BlendRec_*, i32, i32, i32, i64*, i8* }
%struct.T1_FontRec_ = type { %struct.PS_FontInfoRec_, %struct.PS_FontExtraRec_, %struct.PS_PrivateRec_, i8*, i32, %struct.T1_EncodingRecRec_, i8*, i8*, i8*, i32, i8**, i32*, %struct.FT_HashRec_*, i32, i8**, i8**, i32*, i8, i8, %struct.FT_Matrix_, %struct.FT_Vector_, %struct.FT_BBox_, i64, i64 }
%struct.T1_EncodingRecRec_ = type { i32, i32, i32, i16*, i8** }
%struct.PSAux_ServiceRec_ = type { %struct.PS_Table_FuncsRec_*, %struct.PS_Parser_FuncsRec_*, %struct.T1_Builder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_*, void (i8*, i64, i16)*, i32 (i32)*, void (%struct.PS_Decoder_*, i8*, i8)*, void (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*, %struct.CFF_SubFontRec_*)*, %struct.T1_CMap_ClassesRec_*, %struct.AFM_Parser_FuncsRec_*, %struct.CFF_Decoder_FuncsRec_* }
%struct.T1_CMap_ClassesRec_ = type { %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_* }
%struct.AFM_Parser_FuncsRec_ = type { i32 (%struct.AFM_ParserRec_*, %struct.FT_MemoryRec_*, i8*, i8*)*, void (%struct.AFM_ParserRec_*)*, i32 (%struct.AFM_ParserRec_*)* }
%struct.AFM_ParserRec_ = type { %struct.FT_MemoryRec_*, %struct.AFM_StreamRec_*, %struct.AFM_FontInfoRec_*, i32 (i8*, i64, i8*)*, i8* }
%struct.AFM_StreamRec_ = type opaque
%struct.AFM_FontInfoRec_ = type { i8, %struct.FT_BBox_, i64, i64, %struct.AFM_TrackKernRec_*, i32, %struct.AFM_KernPairRec_*, i32 }
%struct.AFM_TrackKernRec_ = type { i32, i64, i64, i64, i64 }
%struct.AFM_KernPairRec_ = type { i32, i32, i32, i32 }
%struct.CFF_Decoder_FuncsRec_ = type { void (%struct.CFF_Decoder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8, i32, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*)*, i32 (%struct.CFF_Decoder_*, %struct.CFF_SizeRec_*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }
%struct.CFF_Decoder_ = type { %struct.CFF_Builder_, %struct.CFF_FontRec_*, [49 x i64], i64*, [17 x %struct.CFF_Decoder_Zone_], %struct.CFF_Decoder_Zone_*, i32, i32, [7 x %struct.FT_Vector_], i64, i64, i8, i8, i32, [32 x i64], i32, i32, i32, i32, i8**, i8**, i8**, i32, i32, i8, %struct.CFF_SubFontRec_*, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)* }
%struct.CFF_Builder_ = type { %struct.FT_MemoryRec_*, %struct.TT_FaceRec_*, %struct.CFF_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64, i64, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_BBox_, i8, i8, i8, i8, i8*, i8*, %struct.CFF_Builder_FuncsRec_ }
%struct.CFF_Builder_FuncsRec_ = type { void (%struct.CFF_Builder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8)*, void (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i32)*, void (%struct.CFF_Builder_*, i64, i64, i8)*, i32 (%struct.CFF_Builder_*, i64, i64)*, i32 (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i64, i64)*, void (%struct.CFF_Builder_*)* }
%struct.CFF_Decoder_Zone_ = type { i8*, i8*, i8* }
%struct.CFF_SizeRec_ = type { %struct.FT_SizeRec_, i64 }
%struct.T1_GlyphSlotRec_ = type { %struct.FT_GlyphSlotRec_, i8, i8, i64, i64, i32, i32 }

@.str = private unnamed_addr constant [6 x i8] c"type1\00", align 1
@t1_driver_class = hidden local_unnamed_addr constant { { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* } { { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* } { i64 1281, i64 104, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i64 65536, i64 131072, i8* null, i32 (%struct.FT_ModuleRec_*)* @T1_Driver_Init, void (%struct.FT_ModuleRec_*)* @T1_Driver_Done, i8* (%struct.FT_ModuleRec_*, i8*)* @Get_Interface }, i64 888, i64 88, i64 336, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)* @T1_Face_Init, void (%struct.FT_FaceRec_*)* @T1_Face_Done, i32 (%struct.FT_SizeRec_*)* @T1_Size_Init, void (%struct.FT_SizeRec_*)* @T1_Size_Done, i32 (%struct.FT_GlyphSlotRec_*)* @T1_GlyphSlot_Init, void (%struct.FT_GlyphSlotRec_*)* @T1_GlyphSlot_Done, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)* @T1_Load_Glyph, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)* @Get_Kerning, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)* @T1_Read_Metrics, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)* @T1_Get_Advances, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)* @T1_Size_Request, i32 (%struct.FT_SizeRec_*, i64)* null }, align 8
@t1_services = internal constant [8 x %struct.FT_ServiceDescRec_] [%struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PsFontNameRec_* @t1_service_ps_name to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* bitcast (%struct.FT_Service_GlyphDictRec_* @t1_service_glyph_dict to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PsInfoRec_* @t1_service_ps_info to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PropertiesRec_* @t1_service_properties to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.FT_Service_KerningRec_* @t1_service_kerning to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.FT_Service_MultiMastersRec_* @t1_service_multi_masters to i8*) }, %struct.FT_ServiceDescRec_ zeroinitializer], align 16
@.str.1 = private unnamed_addr constant [21 x i8] c"postscript-font-name\00", align 1
@t1_service_ps_name = internal constant %struct.FT_Service_PsFontNameRec_ { i8* (%struct.FT_FaceRec_*)* bitcast (i8* (%struct.T1_FaceRec_*)* @t1_get_ps_name to i8* (%struct.FT_FaceRec_*)*) }, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"glyph-dict\00", align 1
@t1_service_glyph_dict = internal constant %struct.FT_Service_GlyphDictRec_ { i32 (%struct.FT_FaceRec_*, i32, i8*, i32)* bitcast (i32 (%struct.T1_FaceRec_*, i32, i8*, i32)* @t1_get_glyph_name to i32 (%struct.FT_FaceRec_*, i32, i8*, i32)*), i32 (%struct.FT_FaceRec_*, i8*)* bitcast (i32 (%struct.T1_FaceRec_*, i8*)* @t1_get_name_index to i32 (%struct.FT_FaceRec_*, i8*)*) }, align 8
@.str.3 = private unnamed_addr constant [12 x i8] c"font-format\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"Type 1\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"postscript-info\00", align 1
@t1_service_ps_info = internal constant %struct.FT_Service_PsInfoRec_ { i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)* @t1_ps_get_font_info, i32 (%struct.FT_FaceRec_*, %struct.PS_FontExtraRec_*)* @t1_ps_get_font_extra, i32 (%struct.FT_FaceRec_*)* @t1_ps_has_glyph_names, i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)* @t1_ps_get_font_private, i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)* @t1_ps_get_font_value }, align 8
@.str.6 = private unnamed_addr constant [11 x i8] c"properties\00", align 1
@t1_service_properties = internal constant %struct.FT_Service_PropertiesRec_ { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)* @ps_property_set, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* @ps_property_get }, align 8
@.str.7 = private unnamed_addr constant [8 x i8] c"kerning\00", align 1
@t1_service_kerning = internal constant %struct.FT_Service_KerningRec_ { i32 (%struct.FT_FaceRec_*, i64, i32, i64*)* @T1_Get_Track_Kerning }, align 8
@.str.8 = private unnamed_addr constant [14 x i8] c"multi-masters\00", align 1
@t1_service_multi_masters = internal constant %struct.FT_Service_MultiMastersRec_ { i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)* bitcast (i32 (%struct.T1_FaceRec_*, %struct.FT_Multi_Master_*)* @T1_Get_Multi_Master to i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.T1_FaceRec_*, i32, i64*)* @T1_Set_MM_Design to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.T1_FaceRec_*, i32, i64*)* @T1_Set_MM_Blend to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.T1_FaceRec_*, i32, i64*)* @T1_Get_MM_Blend to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)* bitcast (i32 (%struct.T1_FaceRec_*, %struct.FT_MM_Var_**)* @T1_Get_MM_Var to i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.T1_FaceRec_*, i32, i64*)* @T1_Set_Var_Design to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.T1_FaceRec_*, i32, i64*)* @T1_Get_Var_Design to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32)* bitcast (i32 (%struct.T1_FaceRec_*, i32)* @T1_Reset_MM_Blend to i32 (%struct.FT_FaceRec_*, i32)*), i32 (%struct.FT_FaceRec_*, i32, i64*)* bitcast (i32 (%struct.T1_FaceRec_*, i32, i64*)* @T1_Set_MM_WeightVector to i32 (%struct.FT_FaceRec_*, i32, i64*)*), i32 (%struct.FT_FaceRec_*, i32*, i64*)* bitcast (i32 (%struct.T1_FaceRec_*, i32*, i64*)* @T1_Get_MM_WeightVector to i32 (%struct.FT_FaceRec_*, i32*, i64*)*), i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)* null, void (%struct.FT_FaceRec_*)* bitcast (void (%struct.T1_FaceRec_*)* @T1_Done_Blend to void (%struct.FT_FaceRec_*)*) }, align 8
@.str.9 = private unnamed_addr constant [7 x i8] c"Weight\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"Width\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"OpticalSize\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"pshinter\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"postscript-cmaps\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"psaux\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"Regular\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"Bold\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"Black\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c".notdef\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"%!PS-AdobeFont\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"%!FontType\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"eexec\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"closefile\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"FontDirectory\00", align 1
@t1_keywords = internal constant [47 x %struct.T1_FieldRec_] [%struct.T1_FieldRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 0, i8 8, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 8, i8 8, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 16, i8 8, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 24, i8 8, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 32, i8 8, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i32 0, i32 0), i32 3, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 40, i8 8, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i32 0, i32 0), i32 3, i32 1, void (%struct.FT_FaceRec_*, i8*)* null, i32 48, i8 1, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i32 0, i32 0), i32 3, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 50, i8 2, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i32 0, i32 0), i32 3, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 52, i8 2, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i32 2, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 0, i8 2, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 0, i8 4, i32 0, i32 0, i32 3 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 4, i8 4, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 200, i8 8, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 208, i8 8, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i32 4, i32 4, void (%struct.FT_FaceRec_*, i8*)* null, i32 112, i8 8, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 120, i8 4, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 124, i8 4, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 12, i8 2, i32 14, i32 8, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 40, i8 2, i32 10, i32 9, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 60, i8 2, i32 14, i32 10, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 88, i8 2, i32 10, i32 11, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 128, i8 2, i32 1, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 130, i8 2, i32 1, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 216, i8 2, i32 2, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 136, i8 2, i32 12, i32 132, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 162, i8 2, i32 12, i32 133, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i32 0, i32 0), i32 4, i32 3, void (%struct.FT_FaceRec_*, i8*)* null, i32 192, i8 8, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i32 0, i32 0), i32 4, i32 1, void (%struct.FT_FaceRec_*, i8*)* null, i32 134, i8 1, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i32 1, i32 6, void (%struct.FT_FaceRec_*, i8*)* null, i32 288, i8 8, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i32 0, i32 0), i32 1, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 424, i8 1, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i32 1, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 425, i8 1, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), i32 1, i32 3, void (%struct.FT_FaceRec_*, i8*)* null, i32 520, i8 8, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i32 0, i32 0), i32 5, i32 7, void (%struct.FT_FaceRec_*, i8*)* null, i32 0, i8 8, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0), i32 7, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 856, i8 4, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i32 0, i32 0), i32 7, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 860, i8 4, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i32 0, i32 0), i32 8, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 696, i8 4, i32 16, i32 760, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @t1_parse_font_matrix to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @parse_encoding to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @parse_subrs to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @parse_charstrings to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @parse_private to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @parse_blend_design_positions to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @parse_blend_design_map to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @parse_blend_axis_types to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @parse_weight_vector to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 1 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i32 8, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.T1_FaceRec_*, %struct.T1_Loader_*)* @parse_buildchar to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 2 }, %struct.T1_FieldRec_ zeroinitializer], align 16
@.str.24 = private unnamed_addr constant [12 x i8] c"CharStrings\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"Notice\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"FullName\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"FamilyName\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"ItalicAngle\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"isFixedPitch\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"UnderlinePosition\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"UnderlineThickness\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"FSType\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"UniqueID\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"lenIV\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"LanguageGroup\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"BlueScale\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"BlueShift\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"BlueFuzz\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"BlueValues\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"OtherBlues\00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"FamilyBlues\00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c"FamilyOtherBlues\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"StdHW\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"StdVW\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"MinFeature\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"StemSnapH\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"StemSnapV\00", align 1
@.str.50 = private unnamed_addr constant [16 x i8] c"ExpansionFactor\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"ForceBold\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"FontName\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"PaintType\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"FontType\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"StrokeWidth\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"FontBBox\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"NDV\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"CDV\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"DesignVector\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"FontMatrix\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"Encoding\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"Subrs\00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"Private\00", align 1
@.str.64 = private unnamed_addr constant [21 x i8] c"BlendDesignPositions\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"BlendDesignMap\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"BlendAxisTypes\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"WeightVector\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"BuildCharArray\00", align 1
@.str.69 = private unnamed_addr constant [17 x i8] c"StandardEncoding\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"ExpertEncoding\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c"ISOLatin1Encoding\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"dup\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"put\00", align 1
@__const.parse_charstrings.notdef_glyph = private unnamed_addr constant [5 x i8] c"\8B\F7\E1\0D\0E", align 1

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Driver_Init(%struct.FT_ModuleRec_*) #0 {
  %2 = alloca %struct.FT_ModuleRec_*, align 8
  %3 = alloca i32, align 4
  store %struct.FT_ModuleRec_* %0, %struct.FT_ModuleRec_** %2, align 8
  %4 = bitcast %struct.FT_ModuleRec_* %0 to %struct.PS_DriverRec_*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  %6 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 1
  %7 = bitcast %struct.FT_LibraryRec_** %6 to i32*
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %4, i64 0, i32 2
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 2
  %10 = bitcast %struct.FT_MemoryRec_** %9 to <4 x i32>*
  store <4 x i32> <i32 500, i32 400, i32 1000, i32 275>, <4 x i32>* %10, align 8
  %11 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %9, i64 2
  %12 = bitcast %struct.FT_MemoryRec_** %11 to <4 x i32>*
  store <4 x i32> <i32 1667, i32 275, i32 2333, i32 0>, <4 x i32>* %12, align 8
  %13 = ptrtoint i32* %3 to i64
  %14 = ptrtoint %struct.FT_ModuleRec_** %2 to i64
  %15 = xor i64 %13, %14
  %16 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 0, i32 2
  %17 = bitcast %struct.FT_MemoryRec_** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = xor i64 %15, %18
  %20 = trunc i64 %19 to i32
  %21 = lshr i32 %20, 10
  %22 = xor i32 %21, %20
  %23 = lshr i32 %20, 20
  %24 = xor i32 %22, %23
  store i32 %24, i32* %3, align 4
  %25 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 4
  %26 = bitcast %struct.FT_ModuleRec_* %25 to i32*
  store i32 %24, i32* %26, align 8
  %27 = icmp slt i32 %24, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %1
  %29 = sub nsw i32 0, %24
  br label %32

30:                                               ; preds = %1
  %31 = icmp eq i32 %24, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ 123456789, %30 ]
  store i32 %33, i32* %26, align 8
  br label %34

34:                                               ; preds = %32, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @T1_Driver_Done(%struct.FT_ModuleRec_* nocapture) #1 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Get_Interface(%struct.FT_ModuleRec_* nocapture readnone, i8*) #0 {
  %3 = tail call i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_* getelementptr inbounds ([8 x %struct.FT_ServiceDescRec_], [8 x %struct.FT_ServiceDescRec_]* @t1_services, i64 0, i64 0), i8* %1) #11
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Face_Init(%struct.FT_StreamRec_* nocapture readnone, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_* nocapture readnone) #0 {
  %6 = alloca %struct.FT_Data_, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.T1_DecoderRec_, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.T1_Loader_, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.FT_CharMapRec_, align 8
  %18 = bitcast %struct.FT_FaceRec_* %1 to %struct.T1_FaceRec_*
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1
  %20 = bitcast %struct.FT_FaceRec_* %19 to %struct.PS_FontInfoRec_*
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 0
  store i64 1, i64* %21, align 8
  %22 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 24
  %23 = bitcast %struct.FT_DriverRec_** %22 to %struct.FT_ModuleRec_**
  %24 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %23, align 8
  %25 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8 zeroext 1) #11
  %26 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 4
  %27 = bitcast i64* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %22, align 8
  %29 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %28, i64 0, i32 0, i32 1
  %30 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %29, align 8
  %31 = tail call i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #11
  %32 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 5
  store i8* %31, i8** %32, align 8
  %33 = icmp eq i8* %31, null
  br i1 %33, label %991, label %34

34:                                               ; preds = %5
  %35 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %22, align 8
  %36 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %35, i64 0, i32 0, i32 1
  %37 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %36, align 8
  %38 = tail call i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* %37, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #11
  %39 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 13
  %40 = bitcast i16* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = bitcast %struct.T1_Loader_* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 712, i8* nonnull %41) #11
  %42 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #11
  store i32 -1431655766, i32* %16, align 4
  %43 = bitcast i8** %32 to %struct.PSAux_ServiceRec_**
  %44 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %43, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 712, i1 false) #11
  %45 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 12, i32 1
  %46 = bitcast i64* %45 to i32*
  store i32 -1, i32* %46, align 8
  %47 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %18, i64 0, i32 9
  store i32 -1, i32* %47, align 4
  %48 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 12, i32 2
  %49 = bitcast i64* %48 to i32*
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 25
  %51 = bitcast %struct.FT_MemoryRec_** %50 to i32*
  store i32 7, i32* %51, align 8
  %52 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %18, i64 0, i32 1, i32 2, i32 12
  store i32 1, i32* %52, align 4
  %53 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %18, i64 0, i32 1, i32 2, i32 1
  store i32 4, i32* %53, align 4
  %54 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 1
  store i64 3932, i64* %54, align 8
  %55 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 24
  %56 = bitcast %struct.FT_DriverRec_** %55 to i64*
  store i64 2596864, i64* %56, align 8
  %57 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 26
  %58 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %57, align 8
  %59 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 25
  %60 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %59, align 8
  %61 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #11
  %62 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %44, i64 0, i32 1
  %63 = load %struct.PS_Parser_FuncsRec_*, %struct.PS_Parser_FuncsRec_** %62, align 8
  %64 = getelementptr inbounds %struct.PS_Parser_FuncsRec_, %struct.PS_Parser_FuncsRec_* %63, i64 0, i32 0
  %65 = load void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)*, void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)** %64, align 8
  %66 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0
  call void %65(%struct.PS_ParserRec_* nonnull %66, i8* null, i8* null, %struct.FT_MemoryRec_* %60) #11
  %67 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 1
  store %struct.FT_StreamRec_* %58, %struct.FT_StreamRec_** %67, align 8
  %68 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 3
  %69 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 2
  %70 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 7
  %72 = bitcast i8** %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 35, i1 false) #11
  %73 = call fastcc i32 @check_type1_format(%struct.FT_StreamRec_* %58, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i64 14) #11
  store i32 %73, i32* %14, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %34
  %76 = and i32 %73, 255
  %77 = icmp eq i32 %76, 2
  br i1 %77, label %78, label %141

78:                                               ; preds = %75
  %79 = call fastcc i32 @check_type1_format(%struct.FT_StreamRec_* %58, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i64 10) #11
  store i32 %79, i32* %14, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %141

81:                                               ; preds = %78, %34
  %82 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %58, i64 0) #11
  store i32 %82, i32* %14, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %141

84:                                               ; preds = %81
  %85 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #11
  store i32 -1431655766, i32* %13, align 4
  %86 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %58, i32* nonnull %13) #11
  %87 = load i32, i32* %13, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %97

89:                                               ; preds = %84
  %90 = add i16 %86, 32767
  %91 = icmp ult i16 %90, 2
  br i1 %91, label %93, label %92

92:                                               ; preds = %89
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #11
  store i32 0, i32* %14, align 4
  br label %101

93:                                               ; preds = %89
  %94 = call i64 @FT_Stream_ReadULongLE(%struct.FT_StreamRec_* %58, i32* nonnull %13) #11
  %95 = load i32, i32* %13, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %93, %84
  %98 = phi i32 [ %87, %84 ], [ %95, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #11
  store i32 %98, i32* %14, align 4
  br label %141

99:                                               ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #11
  store i32 0, i32* %14, align 4
  %100 = icmp eq i16 %86, -32767
  br i1 %100, label %107, label %101

101:                                              ; preds = %99, %92
  %102 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %58, i64 0) #11
  store i32 %102, i32* %14, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %141

104:                                              ; preds = %101
  %105 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %58, i64 0, i32 1
  %106 = load i64, i64* %105, align 8
  br label %108

107:                                              ; preds = %99
  store i8 1, i8* %70, align 8
  br label %108

108:                                              ; preds = %107, %104
  %109 = phi i64 [ %94, %107 ], [ %106, %104 ]
  %110 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %58, i64 0, i32 5
  %111 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %110, align 8
  %112 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %111, null
  br i1 %112, label %113, label %123

113:                                              ; preds = %108
  %114 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %58, i64 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %58, i64 0, i32 2
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds i8, i8* %115, i64 %117
  store i8* %118, i8** %69, align 8
  store i64 %109, i64* %68, align 8
  store i8 1, i8* %71, align 1
  %119 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %58, i64 %109) #11
  store i32 %119, i32* %14, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %141

121:                                              ; preds = %113
  %122 = load i64, i64* %68, align 8
  br label %131

123:                                              ; preds = %108
  %124 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %60, i64 %109, i32* nonnull %14) #11
  store i8* %124, i8** %69, align 8
  %125 = load i32, i32* %14, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %141

127:                                              ; preds = %123
  %128 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %58, i8* %124, i64 %109) #11
  store i32 %128, i32* %14, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %141

130:                                              ; preds = %127
  store i64 %109, i64* %68, align 8
  br label %131

131:                                              ; preds = %130, %121
  %132 = phi i64 [ %122, %121 ], [ %109, %130 ]
  %133 = bitcast i8** %69 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 1
  %136 = bitcast i8** %135 to i64*
  store i64 %134, i64* %136, align 8
  %137 = inttoptr i64 %134 to i8*
  %138 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 0
  store i8* %137, i8** %138, align 8
  %139 = getelementptr inbounds i8, i8* %137, i64 %132
  %140 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 2
  store i8* %139, i8** %140, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #11
  store i32 0, i32* %16, align 4
  br label %152

141:                                              ; preds = %127, %123, %113, %101, %97, %81, %78, %75
  %142 = phi i32 [ %82, %81 ], [ %119, %113 ], [ %125, %123 ], [ %128, %127 ], [ %102, %101 ], [ %73, %75 ], [ %79, %78 ], [ %98, %97 ]
  %143 = load i8, i8* %71, align 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %141
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #11
  store i32 %142, i32* %16, align 4
  br label %671

146:                                              ; preds = %141
  %147 = load i8*, i8** %69, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %60, i8* %147) #11
  store i8* null, i8** %69, align 8
  %148 = load i32, i32* %14, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #11
  store i32 %148, i32* %16, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %671

150:                                              ; preds = %146
  %151 = load i64, i64* %68, align 8
  br label %152

152:                                              ; preds = %150, %131
  %153 = phi i64 [ %132, %131 ], [ %151, %150 ]
  %154 = phi i8* [ %137, %131 ], [ null, %150 ]
  %155 = call fastcc i32 @parse_dict(%struct.T1_FaceRec_* %18, %struct.T1_Loader_* nonnull %15, i8* %154, i64 %153) #11
  store i32 %155, i32* %16, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %671

157:                                              ; preds = %152
  %158 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %67, align 8
  %159 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 4
  %160 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %159, align 8
  %161 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #11
  store i32 0, i32* %11, align 4
  %162 = load i8, i8* %70, align 8
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %232, label %164

164:                                              ; preds = %157
  %165 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %158) #11
  %166 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 5
  store i64 0, i64* %166, align 8
  %167 = bitcast i32* %10 to i8*
  br label %168

168:                                              ; preds = %184, %164
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167) #11
  store i32 -1431655766, i32* %10, align 4
  %169 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %158, i32* nonnull %10) #11
  %170 = load i32, i32* %10, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %180

172:                                              ; preds = %168
  %173 = add i16 %169, 32767
  %174 = icmp ult i16 %173, 2
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #11
  store i32 0, i32* %11, align 4
  br label %189

176:                                              ; preds = %172
  %177 = call i64 @FT_Stream_ReadULongLE(%struct.FT_StreamRec_* %158, i32* nonnull %10) #11
  %178 = load i32, i32* %10, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %176, %168
  %181 = phi i32 [ %170, %168 ], [ %178, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #11
  store i32 %181, i32* %11, align 4
  br label %426

182:                                              ; preds = %176
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #11
  store i32 0, i32* %11, align 4
  %183 = icmp eq i16 %169, -32766
  br i1 %183, label %184, label %189

184:                                              ; preds = %182
  %185 = load i64, i64* %166, align 8
  %186 = add i64 %185, %177
  store i64 %186, i64* %166, align 8
  %187 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %158, i64 %177) #11
  store i32 %187, i32* %11, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %168, label %426

189:                                              ; preds = %182, %175
  %190 = load i64, i64* %166, align 8
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  store i32 3, i32* %11, align 4
  br label %426

193:                                              ; preds = %189
  %194 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %158, i64 %165) #11
  store i32 %194, i32* %11, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %426

196:                                              ; preds = %193
  %197 = load i64, i64* %166, align 8
  %198 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %160, i64 %197, i32* nonnull %11) #11
  %199 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 4
  store i8* %198, i8** %199, align 8
  %200 = load i32, i32* %11, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %426

202:                                              ; preds = %196
  store i64 0, i64* %166, align 8
  %203 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203) #11
  store i32 -1431655766, i32* %9, align 4
  %204 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %158, i32* nonnull %9) #11
  %205 = load i32, i32* %9, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %215

207:                                              ; preds = %202, %225
  %208 = phi i16 [ %228, %225 ], [ %204, %202 ]
  %209 = add i16 %208, 32767
  %210 = icmp ult i16 %209, 2
  br i1 %210, label %211, label %215

211:                                              ; preds = %207
  %212 = call i64 @FT_Stream_ReadULongLE(%struct.FT_StreamRec_* %158, i32* nonnull %9) #11
  %213 = load i32, i32* %9, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %217, label %215

215:                                              ; preds = %225, %211, %207, %202
  %216 = phi i32 [ %205, %202 ], [ %229, %225 ], [ %213, %211 ], [ 0, %207 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203) #11
  store i32 %216, i32* %11, align 4
  br label %231

217:                                              ; preds = %211
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203) #11
  store i32 0, i32* %11, align 4
  %218 = icmp eq i16 %208, -32766
  br i1 %218, label %219, label %231

219:                                              ; preds = %217
  %220 = load i8*, i8** %199, align 8
  %221 = load i64, i64* %166, align 8
  %222 = getelementptr inbounds i8, i8* %220, i64 %221
  %223 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %158, i8* %222, i64 %212) #11
  store i32 %223, i32* %11, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %426

225:                                              ; preds = %219
  %226 = load i64, i64* %166, align 8
  %227 = add i64 %226, %212
  store i64 %227, i64* %166, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203) #11
  store i32 -1431655766, i32* %9, align 4
  %228 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %158, i32* nonnull %9) #11
  %229 = load i32, i32* %9, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %207, label %215

231:                                              ; preds = %217, %215
  store i32 0, i32* %11, align 4
  br label %416

232:                                              ; preds = %157
  %233 = load i8*, i8** %69, align 8
  %234 = load i64, i64* %68, align 8
  %235 = getelementptr inbounds i8, i8* %233, i64 %234
  %236 = bitcast i8** %69 to i64*
  %237 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 0
  %238 = bitcast %struct.T1_Loader_* %15 to i64*
  %239 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 2
  %240 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 5, i32 3
  %241 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 3
  %242 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 5, i32 2
  br label %243

243:                                              ; preds = %313, %232
  %244 = phi i64 [ %234, %232 ], [ %314, %313 ]
  %245 = phi i8* [ %233, %232 ], [ %315, %313 ]
  %246 = phi i8* [ %233, %232 ], [ %277, %313 ]
  %247 = phi i8* [ %235, %232 ], [ %316, %313 ]
  %248 = ptrtoint i8* %245 to i64
  br label %249

249:                                              ; preds = %272, %243
  %250 = phi i8* [ %246, %243 ], [ %273, %272 ]
  %251 = load i8, i8* %250, align 1
  %252 = icmp eq i8 %251, 101
  %253 = getelementptr inbounds i8, i8* %250, i64 9
  %254 = icmp ult i8* %253, %247
  %255 = and i1 %252, %254
  br i1 %255, label %256, label %272

256:                                              ; preds = %249
  %257 = getelementptr inbounds i8, i8* %250, i64 1
  %258 = load i8, i8* %257, align 1
  %259 = icmp eq i8 %258, 101
  br i1 %259, label %260, label %272

260:                                              ; preds = %256
  %261 = getelementptr inbounds i8, i8* %250, i64 2
  %262 = load i8, i8* %261, align 1
  %263 = icmp eq i8 %262, 120
  br i1 %263, label %264, label %272

264:                                              ; preds = %260
  %265 = getelementptr inbounds i8, i8* %250, i64 3
  %266 = load i8, i8* %265, align 1
  %267 = icmp eq i8 %266, 101
  br i1 %267, label %268, label %272

268:                                              ; preds = %264
  %269 = getelementptr inbounds i8, i8* %250, i64 4
  %270 = load i8, i8* %269, align 1
  %271 = icmp eq i8 %270, 99
  br i1 %271, label %276, label %272

272:                                              ; preds = %268, %264, %260, %256, %249
  %273 = getelementptr inbounds i8, i8* %250, i64 1
  %274 = icmp ult i8* %273, %247
  br i1 %274, label %249, label %275

275:                                              ; preds = %272
  store i32 3, i32* %11, align 4
  br label %426

276:                                              ; preds = %268
  store i64 %248, i64* %238, align 8
  %277 = getelementptr inbounds i8, i8* %250, i64 10
  store i8* %277, i8** %239, align 8
  %278 = icmp ugt i8* %277, %245
  br i1 %278, label %279, label %313

279:                                              ; preds = %276, %306
  %280 = phi i8* [ %308, %306 ], [ %245, %276 ]
  %281 = load i8, i8* %280, align 1
  %282 = icmp eq i8 %281, 101
  %283 = getelementptr inbounds i8, i8* %280, i64 5
  %284 = icmp ult i8* %283, %277
  %285 = and i1 %284, %282
  br i1 %285, label %286, label %302

286:                                              ; preds = %279
  %287 = getelementptr inbounds i8, i8* %280, i64 1
  %288 = load i8, i8* %287, align 1
  %289 = icmp eq i8 %288, 101
  br i1 %289, label %290, label %302

290:                                              ; preds = %286
  %291 = getelementptr inbounds i8, i8* %280, i64 2
  %292 = load i8, i8* %291, align 1
  %293 = icmp eq i8 %292, 120
  br i1 %293, label %294, label %302

294:                                              ; preds = %290
  %295 = getelementptr inbounds i8, i8* %280, i64 3
  %296 = load i8, i8* %295, align 1
  %297 = icmp eq i8 %296, 101
  br i1 %297, label %298, label %302

298:                                              ; preds = %294
  %299 = getelementptr inbounds i8, i8* %280, i64 4
  %300 = load i8, i8* %299, align 1
  %301 = icmp eq i8 %300, 99
  br i1 %301, label %319, label %302

302:                                              ; preds = %298, %294, %290, %286, %279
  %303 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %240, align 8
  call void %303(%struct.PS_ParserRec_* nonnull %66) #11
  %304 = load i32, i32* %241, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %310

306:                                              ; preds = %302
  %307 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %242, align 8
  call void %307(%struct.PS_ParserRec_* nonnull %66) #11
  %308 = load i8*, i8** %237, align 8
  %309 = icmp ult i8* %308, %277
  br i1 %309, label %279, label %310

310:                                              ; preds = %306, %302
  %311 = load i8*, i8** %69, align 8
  %312 = load i64, i64* %68, align 8
  br label %313

313:                                              ; preds = %310, %276
  %314 = phi i64 [ %312, %310 ], [ %244, %276 ]
  %315 = phi i8* [ %311, %310 ], [ %245, %276 ]
  %316 = getelementptr inbounds i8, i8* %315, i64 %314
  %317 = icmp ult i8* %277, %316
  br i1 %317, label %243, label %318

318:                                              ; preds = %313
  store i32 3, i32* %11, align 4
  br label %426

319:                                              ; preds = %298
  %320 = load i8*, i8** %69, align 8
  %321 = load i64, i64* %68, align 8
  %322 = getelementptr inbounds i8, i8* %320, i64 %321
  store i8* %322, i8** %239, align 8
  %323 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %240, align 8
  call void %323(%struct.PS_ParserRec_* nonnull %66) #11
  %324 = load i8*, i8** %237, align 8
  %325 = load i8*, i8** %239, align 8
  %326 = ptrtoint i8* %325 to i64
  %327 = ptrtoint i8* %324 to i64
  %328 = sub i64 %326, %327
  %329 = call i8* @memchr(i8* %324, i32 10, i64 %328) #12
  %330 = icmp eq i8* %329, null
  br i1 %330, label %335, label %331

331:                                              ; preds = %319
  %332 = call i8* @memchr(i8* %324, i32 13, i64 %328) #12
  %333 = icmp ugt i8* %329, %332
  %334 = zext i1 %333 to i32
  br label %335

335:                                              ; preds = %331, %319
  %336 = phi i32 [ 1, %319 ], [ %334, %331 ]
  %337 = icmp ult i8* %324, %325
  br i1 %337, label %338, label %351

338:                                              ; preds = %335
  %339 = icmp ne i32 %336, 0
  br label %340

340:                                              ; preds = %348, %338
  %341 = phi i8* [ %324, %338 ], [ %349, %348 ]
  %342 = load i8, i8* %341, align 1
  switch i8 %342, label %343 [
    i8 32, label %348
    i8 9, label %348
  ]

343:                                              ; preds = %340
  %344 = icmp eq i8 %342, 13
  %345 = and i1 %339, %344
  %346 = icmp eq i8 %342, 10
  %347 = or i1 %346, %345
  br i1 %347, label %348, label %352

348:                                              ; preds = %343, %340, %340
  %349 = getelementptr inbounds i8, i8* %341, i64 1
  %350 = icmp eq i8* %349, %325
  br i1 %350, label %351, label %340

351:                                              ; preds = %348, %335
  store i32 3, i32* %11, align 4
  br label %426

352:                                              ; preds = %343
  %353 = load i64, i64* %68, align 8
  %354 = load i64, i64* %236, align 8
  %355 = ptrtoint i8* %341 to i64
  %356 = sub i64 %354, %355
  %357 = add i64 %356, %353
  %358 = load i8, i8* %71, align 1
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %368, label %360

360:                                              ; preds = %352
  %361 = add i64 %357, 1
  %362 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %160, i64 %361, i32* nonnull %11) #11
  %363 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 4
  store i8* %362, i8** %363, align 8
  %364 = load i32, i32* %11, align 4
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %426

366:                                              ; preds = %360
  %367 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 5
  store i64 %357, i64* %367, align 8
  br label %374

368:                                              ; preds = %352
  %369 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 8
  store i8 1, i8* %369, align 2
  %370 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 4
  %371 = bitcast i8** %370 to i64*
  store i64 %354, i64* %371, align 8
  %372 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 5
  store i64 %357, i64* %372, align 8
  %373 = inttoptr i64 %354 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 16, i1 false) #11
  br label %374

374:                                              ; preds = %368, %366
  %375 = phi i8* [ %373, %368 ], [ %362, %366 ]
  %376 = getelementptr inbounds i8, i8* %341, i64 3
  %377 = icmp ult i8* %376, %325
  br i1 %377, label %378, label %415

378:                                              ; preds = %374
  %379 = load i8, i8* %341, align 1
  %380 = zext i8 %379 to i32
  %381 = add nsw i32 %380, -48
  %382 = icmp ult i32 %381, 10
  br i1 %382, label %384, label %383

383:                                              ; preds = %378
  switch i8 %379, label %415 [
    i8 102, label %384
    i8 101, label %384
    i8 100, label %384
    i8 99, label %384
    i8 98, label %384
    i8 97, label %384
    i8 70, label %384
    i8 69, label %384
    i8 68, label %384
    i8 67, label %384
    i8 66, label %384
    i8 65, label %384
  ]

384:                                              ; preds = %383, %383, %383, %383, %383, %383, %383, %383, %383, %383, %383, %383, %378
  %385 = getelementptr inbounds i8, i8* %341, i64 1
  %386 = load i8, i8* %385, align 1
  %387 = zext i8 %386 to i32
  %388 = add nsw i32 %387, -48
  %389 = icmp ult i32 %388, 10
  br i1 %389, label %391, label %390

390:                                              ; preds = %384
  switch i8 %386, label %415 [
    i8 102, label %391
    i8 101, label %391
    i8 100, label %391
    i8 99, label %391
    i8 98, label %391
    i8 97, label %391
    i8 70, label %391
    i8 69, label %391
    i8 68, label %391
    i8 67, label %391
    i8 66, label %391
    i8 65, label %391
  ]

391:                                              ; preds = %390, %390, %390, %390, %390, %390, %390, %390, %390, %390, %390, %390, %384
  %392 = getelementptr inbounds i8, i8* %341, i64 2
  %393 = load i8, i8* %392, align 1
  %394 = zext i8 %393 to i32
  %395 = add nsw i32 %394, -48
  %396 = icmp ult i32 %395, 10
  br i1 %396, label %398, label %397

397:                                              ; preds = %391
  switch i8 %393, label %415 [
    i8 102, label %398
    i8 101, label %398
    i8 100, label %398
    i8 99, label %398
    i8 98, label %398
    i8 97, label %398
    i8 70, label %398
    i8 69, label %398
    i8 68, label %398
    i8 67, label %398
    i8 66, label %398
    i8 65, label %398
  ]

398:                                              ; preds = %397, %397, %397, %397, %397, %397, %397, %397, %397, %397, %397, %397, %391
  %399 = load i8, i8* %376, align 1
  %400 = zext i8 %399 to i32
  %401 = add nsw i32 %400, -48
  %402 = icmp ult i32 %401, 10
  br i1 %402, label %404, label %403

403:                                              ; preds = %398
  switch i8 %399, label %415 [
    i8 102, label %404
    i8 101, label %404
    i8 100, label %404
    i8 99, label %404
    i8 98, label %404
    i8 97, label %404
    i8 70, label %404
    i8 69, label %404
    i8 68, label %404
    i8 67, label %404
    i8 66, label %404
    i8 65, label %404
  ]

404:                                              ; preds = %403, %403, %403, %403, %403, %403, %403, %403, %403, %403, %403, %403, %398
  %405 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %405) #11
  store i64 -6148914691236517206, i64* %12, align 8
  store i8* %341, i8** %237, align 8
  %406 = load %struct.PS_Parser_FuncsRec_*, %struct.PS_Parser_FuncsRec_** %62, align 8
  %407 = getelementptr inbounds %struct.PS_Parser_FuncsRec_, %struct.PS_Parser_FuncsRec_* %406, i64 0, i32 6
  %408 = load i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)*, i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)** %407, align 8
  %409 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 4
  %410 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 5
  %411 = call i32 %408(%struct.PS_ParserRec_* nonnull %66, i8* %375, i64 %357, i64* nonnull %12, i8 zeroext 0) #11
  %412 = load i64, i64* %12, align 8
  store i64 %412, i64* %410, align 8
  %413 = load i8*, i8** %409, align 8
  %414 = getelementptr inbounds i8, i8* %413, i64 %412
  store i8 0, i8* %414, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %405) #11
  br label %416

415:                                              ; preds = %403, %397, %390, %383, %374
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %375, i8* align 1 %341, i64 %357, i1 false) #11
  br label %416

416:                                              ; preds = %415, %404, %231
  %417 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %44, i64 0, i32 4
  %418 = load void (i8*, i64, i16)*, void (i8*, i64, i16)** %417, align 8
  %419 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 4
  %420 = load i8*, i8** %419, align 8
  %421 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 5
  %422 = load i64, i64* %421, align 8
  call void %418(i8* %420, i64 %422, i16 zeroext -9871) #11
  %423 = load i64, i64* %421, align 8
  %424 = icmp ult i64 %423, 4
  br i1 %424, label %425, label %428

425:                                              ; preds = %416
  store i32 3, i32* %11, align 4
  br label %426

426:                                              ; preds = %184, %219, %425, %360, %351, %318, %275, %196, %193, %192, %180
  %427 = phi i32 [ 3, %425 ], [ 3, %192 ], [ %181, %180 ], [ %200, %196 ], [ %194, %193 ], [ 3, %351 ], [ 3, %318 ], [ 3, %275 ], [ %364, %360 ], [ %223, %219 ], [ %187, %184 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #11
  store i32 %427, i32* %16, align 4
  br label %671

428:                                              ; preds = %416
  %429 = load i8*, i8** %419, align 8
  store i8 32, i8* %429, align 1
  %430 = load i8*, i8** %419, align 8
  %431 = getelementptr inbounds i8, i8* %430, i64 1
  store i8 32, i8* %431, align 1
  %432 = load i8*, i8** %419, align 8
  %433 = getelementptr inbounds i8, i8* %432, i64 2
  store i8 32, i8* %433, align 1
  %434 = load i8*, i8** %419, align 8
  %435 = getelementptr inbounds i8, i8* %434, i64 3
  store i8 32, i8* %435, align 1
  %436 = bitcast i8** %419 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 1
  %439 = bitcast i8** %438 to i64*
  store i64 %437, i64* %439, align 8
  %440 = inttoptr i64 %437 to i8*
  %441 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 0
  store i8* %440, i8** %441, align 8
  %442 = load i64, i64* %421, align 8
  %443 = getelementptr inbounds i8, i8* %440, i64 %442
  %444 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 2
  store i8* %443, i8** %444, align 8
  %445 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #11
  store i32 %445, i32* %16, align 4
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %671

447:                                              ; preds = %428
  %448 = call fastcc i32 @parse_dict(%struct.T1_FaceRec_* %18, %struct.T1_Loader_* nonnull %15, i8* %440, i64 %442) #11
  store i32 %448, i32* %16, align 4
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %671

450:                                              ; preds = %447
  %451 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 9
  %452 = bitcast i32* %451 to i8*
  %453 = load i8, i8* %452, align 8
  %454 = and i8 %453, -2
  store i8 %454, i8* %452, align 8
  %455 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 12
  %456 = bitcast %struct.FT_BBox_* %455 to %struct.PS_BlendRec_**
  %457 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %456, align 8
  %458 = icmp eq %struct.PS_BlendRec_* %457, null
  br i1 %458, label %526, label %459

459:                                              ; preds = %450
  %460 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %457, i64 0, i32 0
  %461 = load i32, i32* %460, align 8
  %462 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %457, i64 0, i32 1
  %463 = load i32, i32* %462, align 4
  %464 = shl i32 1, %463
  %465 = icmp eq i32 %461, %464
  br i1 %465, label %469, label %466

466:                                              ; preds = %459
  call void @T1_Done_Blend(%struct.T1_FaceRec_* %18) #11
  %467 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %456, align 8
  %468 = icmp eq %struct.PS_BlendRec_* %467, null
  br i1 %468, label %526, label %469

469:                                              ; preds = %466, %459
  %470 = phi %struct.PS_BlendRec_* [ %467, %466 ], [ %457, %459 ]
  %471 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %470, i64 0, i32 12
  %472 = load i32, i32* %471, align 8
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %481, label %474

474:                                              ; preds = %469
  %475 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %470, i64 0, i32 1
  %476 = load i32, i32* %475, align 4
  %477 = icmp eq i32 %472, %476
  br i1 %477, label %481, label %478

478:                                              ; preds = %474
  store i32 0, i32* %471, align 8
  %479 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %456, align 8
  %480 = icmp eq %struct.PS_BlendRec_* %479, null
  br i1 %480, label %526, label %481

481:                                              ; preds = %478, %474, %469
  %482 = phi %struct.PS_BlendRec_* [ %479, %478 ], [ %470, %474 ], [ %470, %469 ]
  %483 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %482, i64 0, i32 0
  %484 = load i32, i32* %483, align 8
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %490, label %486

486:                                              ; preds = %481
  %487 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %482, i64 0, i32 1
  %488 = load i32, i32* %487, align 4
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %497

490:                                              ; preds = %486, %481
  call void @T1_Done_Blend(%struct.T1_FaceRec_* %18) #11
  %491 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %456, align 8
  %492 = icmp eq %struct.PS_BlendRec_* %491, null
  br i1 %492, label %526, label %493

493:                                              ; preds = %490
  %494 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %491, i64 0, i32 1
  %495 = load i32, i32* %494, align 4
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %514, label %497

497:                                              ; preds = %486, %493
  %498 = phi %struct.PS_BlendRec_* [ %491, %493 ], [ %482, %486 ]
  %499 = phi i32 [ %495, %493 ], [ %488, %486 ]
  %500 = zext i32 %499 to i64
  br label %503

501:                                              ; preds = %503
  %502 = icmp eq i64 %508, %500
  br i1 %502, label %511, label %503

503:                                              ; preds = %501, %497
  %504 = phi i64 [ 0, %497 ], [ %508, %501 ]
  %505 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %498, i64 0, i32 4, i64 %504, i32 0
  %506 = load i8, i8* %505, align 8
  %507 = icmp eq i8 %506, 0
  %508 = add nuw nsw i64 %504, 1
  br i1 %507, label %509, label %501

509:                                              ; preds = %503
  call void @T1_Done_Blend(%struct.T1_FaceRec_* %18) #11
  %510 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %456, align 8
  br label %511

511:                                              ; preds = %501, %509
  %512 = phi %struct.PS_BlendRec_* [ %510, %509 ], [ %498, %501 ]
  %513 = icmp eq %struct.PS_BlendRec_* %512, null
  br i1 %513, label %526, label %514

514:                                              ; preds = %511, %493
  %515 = load i32, i32* %49, align 8
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %527, label %517

517:                                              ; preds = %514
  %518 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %59, align 8
  %519 = zext i32 %515 to i64
  %520 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %518, i64 8, i64 0, i64 %519, i8* null, i32* nonnull %16) #11
  %521 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 12, i32 3
  %522 = bitcast i64* %521 to i8**
  store i8* %520, i8** %522, align 8
  %523 = load i32, i32* %16, align 4
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %527, label %525

525:                                              ; preds = %517
  store i32 0, i32* %49, align 8
  br label %671

526:                                              ; preds = %511, %490, %478, %466, %450
  store i32 0, i32* %49, align 8
  br label %527

527:                                              ; preds = %526, %517, %514
  %528 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 3
  %529 = load i32, i32* %528, align 8
  %530 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 17
  %531 = bitcast i16* %530 to i32*
  store i32 %529, i32* %531, align 8
  %532 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 8, i32 3
  %533 = load i64, i64* %532, align 8
  %534 = icmp eq i64 %533, 0
  br i1 %534, label %555, label %535

535:                                              ; preds = %527
  %536 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 8
  %537 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 7
  %538 = load i32, i32* %537, align 8
  %539 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 12, i32 1
  %540 = bitcast i64* %539 to i32*
  store i32 %538, i32* %540, align 8
  %541 = bitcast %struct.PS_TableRec_* %536 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 11, i32 0
  %544 = bitcast i8** %543 to i64*
  store i64 %542, i64* %544, align 8
  %545 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 8, i32 6
  %546 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 12, i32 2
  %547 = bitcast i8*** %545 to <2 x i64>*
  %548 = load <2 x i64>, <2 x i64>* %547, align 8
  %549 = bitcast i64* %546 to <2 x i64>*
  store <2 x i64> %548, <2 x i64>* %549, align 8
  %550 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 9
  %551 = bitcast %struct.FT_HashRec_** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 13
  %554 = bitcast i16* %553 to i64*
  store i64 %552, i64* %554, align 8
  store i64 0, i64* %532, align 8
  store %struct.FT_HashRec_* null, %struct.FT_HashRec_** %550, align 8
  br label %555

555:                                              ; preds = %535, %527
  %556 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 30
  %557 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %556, align 8
  %558 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %557, i64 0, i32 4
  %559 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %558, align 8
  %560 = icmp eq %struct.FT_Incremental_InterfaceRec_* %559, null
  br i1 %560, label %561, label %566

561:                                              ; preds = %555
  %562 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 5, i32 3
  %563 = load i64, i64* %562, align 8
  %564 = icmp eq i64 %563, 0
  br i1 %564, label %565, label %566

565:                                              ; preds = %561
  store i32 3, i32* %16, align 4
  br label %566

566:                                              ; preds = %565, %561, %555
  %567 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 5
  %568 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 5, i32 3
  store i64 0, i64* %568, align 8
  %569 = bitcast %struct.PS_TableRec_* %567 to i64*
  %570 = load i64, i64* %569, align 8
  %571 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 11, i32 1
  %572 = bitcast void (i8*)** %571 to i64*
  store i64 %570, i64* %572, align 8
  %573 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 5, i32 6
  %574 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 22
  %575 = bitcast i8*** %573 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8
  %577 = bitcast %struct.FT_SizeRec_** %574 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %577, align 8
  %578 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 4
  %579 = getelementptr inbounds %struct.PS_TableRec_, %struct.PS_TableRec_* %578, i64 0, i32 0
  %580 = bitcast %struct.PS_TableRec_* %578 to i64*
  %581 = load i64, i64* %580, align 8
  %582 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 12, i32 0
  store i64 %581, i64* %582, align 8
  %583 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 4, i32 6
  %584 = bitcast i8*** %583 to i64*
  %585 = load i64, i64* %584, align 8
  %586 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 21
  %587 = bitcast %struct.FT_GlyphSlotRec_** %586 to i8***
  %588 = bitcast %struct.FT_GlyphSlotRec_** %586 to i64*
  store i64 %585, i64* %588, align 8
  store i8* null, i8** %579, align 8
  store i8** null, i8*** %583, align 8
  %589 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 6
  %590 = bitcast i8** %589 to i32*
  %591 = load i32, i32* %590, align 8
  %592 = icmp eq i32 %591, 1
  br i1 %592, label %593, label %663

593:                                              ; preds = %566
  %594 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 2, i32 4
  %595 = load i32, i32* %594, align 8
  %596 = icmp sgt i32 %595, 0
  br i1 %596, label %597, label %654

597:                                              ; preds = %593
  %598 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 2, i32 6
  %599 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 9
  %600 = bitcast i32* %599 to i16**
  %601 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 10
  %602 = bitcast %struct.FT_CharMapRec_*** %601 to i8***
  br label %603

603:                                              ; preds = %647, %597
  %604 = phi i64 [ 0, %597 ], [ %650, %647 ]
  %605 = phi i32 [ 0, %597 ], [ %649, %647 ]
  %606 = phi i32 [ 0, %597 ], [ %648, %647 ]
  %607 = load i8**, i8*** %598, align 8
  %608 = getelementptr inbounds i8*, i8** %607, i64 %604
  %609 = load i8*, i8** %608, align 8
  %610 = load i16*, i16** %600, align 8
  %611 = getelementptr inbounds i16, i16* %610, i64 %604
  store i16 0, i16* %611, align 2
  %612 = load i8**, i8*** %602, align 8
  %613 = getelementptr inbounds i8*, i8** %612, i64 %604
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8** %613, align 8
  %614 = icmp eq i8* %609, null
  br i1 %614, label %647, label %615

615:                                              ; preds = %603
  %616 = load i32, i32* %531, align 8
  %617 = icmp sgt i32 %616, 0
  br i1 %617, label %618, label %647

618:                                              ; preds = %615
  %619 = load i8**, i8*** %587, align 8
  %620 = sext i32 %616 to i64
  br label %621

621:                                              ; preds = %644, %618
  %622 = phi i64 [ 0, %618 ], [ %645, %644 ]
  %623 = getelementptr inbounds i8*, i8** %619, i64 %622
  %624 = load i8*, i8** %623, align 8
  %625 = call i32 @strcmp(i8* nonnull %609, i8* %624) #12
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %644

627:                                              ; preds = %621
  %628 = trunc i64 %622 to i16
  %629 = load i16*, i16** %600, align 8
  %630 = getelementptr inbounds i16, i16* %629, i64 %604
  store i16 %628, i16* %630, align 2
  %631 = load i8**, i8*** %602, align 8
  %632 = getelementptr inbounds i8*, i8** %631, i64 %604
  store i8* %624, i8** %632, align 8
  %633 = call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8* %624) #12
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %647, label %635

635:                                              ; preds = %627
  %636 = sext i32 %606 to i64
  %637 = icmp slt i64 %604, %636
  %638 = trunc i64 %604 to i32
  %639 = select i1 %637, i32 %638, i32 %606
  %640 = sext i32 %605 to i64
  %641 = icmp slt i64 %604, %640
  %642 = add i32 %638, 1
  %643 = select i1 %641, i32 %605, i32 %642
  br label %647

644:                                              ; preds = %621
  %645 = add nuw nsw i64 %622, 1
  %646 = icmp eq i64 %645, %620
  br i1 %646, label %647, label %621

647:                                              ; preds = %644, %635, %627, %615, %603
  %648 = phi i32 [ %606, %603 ], [ %639, %635 ], [ %606, %627 ], [ %606, %615 ], [ %606, %644 ]
  %649 = phi i32 [ %605, %603 ], [ %643, %635 ], [ %605, %627 ], [ %605, %615 ], [ %605, %644 ]
  %650 = add nuw nsw i64 %604, 1
  %651 = load i32, i32* %594, align 8
  %652 = sext i32 %651 to i64
  %653 = icmp slt i64 %650, %652
  br i1 %653, label %603, label %654

654:                                              ; preds = %647, %593
  %655 = phi i32 [ 0, %593 ], [ %648, %647 ]
  %656 = phi i32 [ 0, %593 ], [ %649, %647 ]
  %657 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %18, i64 0, i32 1, i32 5, i32 1
  store i32 %655, i32* %657, align 4
  %658 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 8
  %659 = bitcast %struct.FT_Bitmap_Size_** %658 to i32*
  store i32 %656, i32* %659, align 8
  %660 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 1
  %661 = load i32, i32* %660, align 8
  %662 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 7
  store i32 %661, i32* %662, align 8
  br label %663

663:                                              ; preds = %654, %566
  %664 = load i32, i32* %51, align 8
  %665 = icmp ugt i32 %664, 1000
  br i1 %665, label %666, label %667

666:                                              ; preds = %663
  store i32 7, i32* %51, align 8
  br label %667

667:                                              ; preds = %666, %663
  %668 = load i32, i32* %52, align 4
  %669 = icmp ugt i32 %668, 1000
  br i1 %669, label %670, label %671

670:                                              ; preds = %667
  store i32 1, i32* %52, align 4
  br label %671

671:                                              ; preds = %670, %667, %525, %447, %428, %426, %152, %146, %145
  %672 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 4
  %673 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %672, align 8
  %674 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 2, i32 9, i32 3
  %675 = load void (%struct.PS_TableRec_*)*, void (%struct.PS_TableRec_*)** %674, align 8
  %676 = icmp eq void (%struct.PS_TableRec_*)* %675, null
  br i1 %676, label %679, label %677

677:                                              ; preds = %671
  %678 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 2
  call void %675(%struct.PS_TableRec_* %678) #11
  br label %679

679:                                              ; preds = %677, %671
  %680 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 5, i32 9, i32 3
  %681 = load void (%struct.PS_TableRec_*)*, void (%struct.PS_TableRec_*)** %680, align 8
  %682 = icmp eq void (%struct.PS_TableRec_*)* %681, null
  br i1 %682, label %685, label %683

683:                                              ; preds = %679
  %684 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 5
  call void %681(%struct.PS_TableRec_* %684) #11
  br label %685

685:                                              ; preds = %683, %679
  %686 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 4, i32 9, i32 3
  %687 = load void (%struct.PS_TableRec_*)*, void (%struct.PS_TableRec_*)** %686, align 8
  %688 = icmp eq void (%struct.PS_TableRec_*)* %687, null
  br i1 %688, label %691, label %689

689:                                              ; preds = %685
  %690 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 4
  call void %687(%struct.PS_TableRec_* %690) #11
  br label %691

691:                                              ; preds = %689, %685
  %692 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 6, i32 9, i32 3
  %693 = load void (%struct.PS_TableRec_*)*, void (%struct.PS_TableRec_*)** %692, align 8
  %694 = icmp eq void (%struct.PS_TableRec_*)* %693, null
  br i1 %694, label %697, label %695

695:                                              ; preds = %691
  %696 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 6
  call void %693(%struct.PS_TableRec_* %696) #11
  br label %697

697:                                              ; preds = %695, %691
  %698 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 8, i32 9, i32 3
  %699 = load void (%struct.PS_TableRec_*)*, void (%struct.PS_TableRec_*)** %698, align 8
  %700 = icmp eq void (%struct.PS_TableRec_*)* %699, null
  br i1 %700, label %703, label %701

701:                                              ; preds = %697
  %702 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 8
  call void %699(%struct.PS_TableRec_* %702) #11
  br label %703

703:                                              ; preds = %701, %697
  %704 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 9
  %705 = load %struct.FT_HashRec_*, %struct.FT_HashRec_** %704, align 8
  call void @ft_hash_str_free(%struct.FT_HashRec_* %705, %struct.FT_MemoryRec_* %673) #11
  %706 = bitcast %struct.FT_HashRec_** %704 to i8**
  %707 = load i8*, i8** %706, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %673, i8* %707) #11
  store %struct.FT_HashRec_* null, %struct.FT_HashRec_** %704, align 8
  %708 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %672, align 8
  %709 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 4
  %710 = load i8*, i8** %709, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %708, i8* %710) #11
  store i8* null, i8** %709, align 8
  %711 = load i8, i8* %71, align 1
  %712 = icmp eq i8 %711, 0
  br i1 %712, label %713, label %715

713:                                              ; preds = %703
  %714 = load i8*, i8** %69, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %708, i8* %714) #11
  store i8* null, i8** %69, align 8
  br label %715

715:                                              ; preds = %703, %713
  %716 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %15, i64 0, i32 0, i32 0, i32 5, i32 1
  %717 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %716, align 8
  call void %717(%struct.PS_ParserRec_* nonnull %66) #11
  %718 = load i32, i32* %16, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 712, i8* nonnull %41) #11
  %719 = icmp ne i32 %718, 0
  %720 = icmp slt i32 %2, 0
  %721 = or i1 %720, %719
  br i1 %721, label %991, label %722

722:                                              ; preds = %715
  %723 = and i32 %2, 65535
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %725, label %991

725:                                              ; preds = %722
  %726 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 17
  %727 = bitcast i16* %726 to i32*
  %728 = load i32, i32* %727, align 8
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 4
  store i64 %729, i64* %730, align 8
  %731 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 1
  store i64 0, i64* %731, align 8
  %732 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 2
  %733 = load i64, i64* %732, align 8
  %734 = or i64 %733, 2577
  store i64 %734, i64* %732, align 8
  %735 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 6
  %736 = bitcast i8** %735 to i8*
  %737 = load i8, i8* %736, align 8
  %738 = icmp eq i8 %737, 0
  br i1 %738, label %741, label %739

739:                                              ; preds = %725
  %740 = or i64 %733, 2581
  store i64 %740, i64* %732, align 8
  br label %741

741:                                              ; preds = %725, %739
  %742 = phi i64 [ %734, %725 ], [ %740, %739 ]
  %743 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 12
  %744 = bitcast %struct.FT_BBox_* %743 to %struct.PS_BlendRec_**
  %745 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %744, align 8
  %746 = icmp eq %struct.PS_BlendRec_* %745, null
  br i1 %746, label %749, label %747

747:                                              ; preds = %741
  %748 = or i64 %742, 256
  store i64 %748, i64* %732, align 8
  br label %749

749:                                              ; preds = %741, %747
  %750 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 3
  %751 = load i64, i64* %750, align 8
  %752 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 5
  %753 = bitcast i8** %752 to i64*
  store i64 %751, i64* %753, align 8
  %754 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 6
  store i8* null, i8** %754, align 8
  %755 = icmp eq i64 %751, 0
  br i1 %755, label %786, label %756

756:                                              ; preds = %749
  %757 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 2
  %758 = bitcast i64* %757 to i8**
  %759 = load i8*, i8** %758, align 8
  %760 = icmp eq i8* %759, null
  br i1 %760, label %793, label %761

761:                                              ; preds = %756
  %762 = load i8, i8* %759, align 1
  %763 = icmp eq i8 %762, 0
  br i1 %763, label %799, label %764

764:                                              ; preds = %761
  %765 = inttoptr i64 %751 to i8*
  br label %766

766:                                              ; preds = %764, %781
  %767 = phi i8 [ %784, %781 ], [ %762, %764 ]
  %768 = phi i8* [ %783, %781 ], [ %765, %764 ]
  %769 = phi i8* [ %782, %781 ], [ %759, %764 ]
  %770 = load i8, i8* %768, align 1
  %771 = icmp eq i8 %767, %770
  br i1 %771, label %772, label %775

772:                                              ; preds = %766
  %773 = getelementptr inbounds i8, i8* %768, i64 1
  %774 = getelementptr inbounds i8, i8* %769, i64 1
  br label %781

775:                                              ; preds = %766
  switch i8 %767, label %778 [
    i8 32, label %776
    i8 45, label %776
  ]

776:                                              ; preds = %775, %775
  %777 = getelementptr inbounds i8, i8* %769, i64 1
  br label %781

778:                                              ; preds = %775
  switch i8 %770, label %793 [
    i8 32, label %779
    i8 45, label %779
    i8 0, label %791
  ]

779:                                              ; preds = %778, %778
  %780 = getelementptr inbounds i8, i8* %768, i64 1
  br label %781

781:                                              ; preds = %776, %779, %772
  %782 = phi i8* [ %774, %772 ], [ %777, %776 ], [ %769, %779 ]
  %783 = phi i8* [ %773, %772 ], [ %768, %776 ], [ %780, %779 ]
  %784 = load i8, i8* %782, align 1
  %785 = icmp eq i8 %784, 0
  br i1 %785, label %799, label %766

786:                                              ; preds = %749
  %787 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 5
  %788 = load i8*, i8** %787, align 8
  %789 = icmp eq i8* %788, null
  br i1 %789, label %793, label %790

790:                                              ; preds = %786
  store i8* %788, i8** %752, align 8
  br label %793

791:                                              ; preds = %778
  store i8* %769, i8** %754, align 8
  %792 = icmp eq i8* %769, null
  br i1 %792, label %793, label %801

793:                                              ; preds = %778, %756, %786, %790, %791
  %794 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 4
  %795 = bitcast i64* %794 to i8**
  %796 = load i8*, i8** %795, align 8
  %797 = icmp eq i8* %796, null
  %798 = select i1 %797, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i8* %796
  br label %799

799:                                              ; preds = %781, %793, %761
  %800 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), %761 ], [ %798, %793 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), %781 ]
  store i8* %800, i8** %754, align 8
  br label %801

801:                                              ; preds = %799, %791
  %802 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 3
  %803 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 5
  %804 = bitcast i8** %803 to i64*
  %805 = load i64, i64* %804, align 8
  %806 = icmp ne i64 %805, 0
  %807 = zext i1 %806 to i64
  store i64 %807, i64* %802, align 8
  %808 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 4
  %809 = bitcast i64* %808 to i8**
  %810 = load i8*, i8** %809, align 8
  %811 = icmp eq i8* %810, null
  br i1 %811, label %820, label %812

812:                                              ; preds = %801
  %813 = call i32 @strcmp(i8* nonnull %810, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)) #12
  %814 = icmp eq i32 %813, 0
  br i1 %814, label %818, label %815

815:                                              ; preds = %812
  %816 = call i32 @strcmp(i8* nonnull %810, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #12
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %820

818:                                              ; preds = %815, %812
  %819 = or i64 %807, 2
  store i64 %819, i64* %802, align 8
  br label %820

820:                                              ; preds = %815, %801, %818
  %821 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 7
  store i32 0, i32* %821, align 8
  %822 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 8
  store %struct.FT_Bitmap_Size_* null, %struct.FT_Bitmap_Size_** %822, align 8
  %823 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 29
  %824 = bitcast i8** %823 to i64*
  %825 = load i64, i64* %824, align 8
  %826 = ashr i64 %825, 16
  %827 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 0
  store i64 %826, i64* %827, align 8
  %828 = getelementptr inbounds i8*, i8** %823, i64 1
  %829 = bitcast i8** %828 to i64*
  %830 = load i64, i64* %829, align 8
  %831 = ashr i64 %830, 16
  %832 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 1
  store i64 %831, i64* %832, align 8
  %833 = getelementptr inbounds i8*, i8** %823, i64 2
  %834 = bitcast i8** %833 to i64*
  %835 = load i64, i64* %834, align 8
  %836 = add nsw i64 %835, 65535
  %837 = ashr i64 %836, 16
  %838 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 2
  store i64 %837, i64* %838, align 8
  %839 = getelementptr inbounds i8*, i8** %823, i64 3
  %840 = bitcast i8** %839 to i64*
  %841 = load i64, i64* %840, align 8
  %842 = add nsw i64 %841, 65535
  %843 = ashr i64 %842, 16
  %844 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 3
  store i64 %843, i64* %844, align 8
  %845 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  %846 = load i16, i16* %845, align 8
  %847 = icmp eq i16 %846, 0
  br i1 %847, label %848, label %849

848:                                              ; preds = %820
  store i16 1000, i16* %845, align 8
  br label %849

849:                                              ; preds = %820, %848
  %850 = phi i16 [ %846, %820 ], [ 1000, %848 ]
  %851 = trunc i64 %843 to i16
  %852 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 14
  store i16 %851, i16* %852, align 2
  %853 = trunc i64 %831 to i16
  %854 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 15
  store i16 %853, i16* %854, align 4
  %855 = zext i16 %850 to i32
  %856 = mul nuw nsw i32 %855, 12
  %857 = udiv i32 %856, 10
  %858 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 16
  %859 = shl i32 %857, 16
  %860 = ashr exact i32 %859, 16
  %861 = sext i16 %851 to i32
  %862 = sext i16 %853 to i32
  %863 = sub nsw i32 %861, %862
  %864 = icmp slt i32 %860, %863
  %865 = select i1 %864, i32 %863, i32 %857
  %866 = trunc i32 %865 to i16
  store i16 %866, i16* %858, align 2
  %867 = trunc i64 %837 to i16
  %868 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 17
  store i16 %867, i16* %868, align 8
  %869 = bitcast %struct.T1_DecoderRec_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 5048, i8* nonnull %869) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %869, i8 -86, i64 5048, i1 false) #11
  %870 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %43, align 8
  %871 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %870, i64 0, i32 3
  %872 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %871, align 8
  %873 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %872, i64 0, i32 0
  %874 = load i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)** %873, align 8
  %875 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 21
  %876 = bitcast %struct.FT_GlyphSlotRec_** %875 to i8***
  %877 = load i8**, i8*** %876, align 8
  %878 = call i32 %874(%struct.T1_DecoderRec_* nonnull %8, %struct.FT_FaceRec_* %1, %struct.FT_SizeRec_* null, %struct.FT_GlyphSlotRec_* null, i8** %877, %struct.PS_BlendRec_* %745, i8 zeroext 0, i32 0, i32 (%struct.T1_DecoderRec_*, i32)* nonnull @T1_Parse_Glyph) #11
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %880, label %938

880:                                              ; preds = %849
  %881 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %8, i64 0, i32 0, i32 14
  store i8 1, i8* %881, align 2
  %882 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %8, i64 0, i32 0, i32 12
  store i8 0, i8* %882, align 4
  %883 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 12, i32 1
  %884 = bitcast i64* %883 to i32*
  %885 = load i32, i32* %884, align 8
  %886 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %8, i64 0, i32 9
  store i32 %885, i32* %886, align 4
  %887 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 12, i32 2
  %888 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %8, i64 0, i32 10
  %889 = bitcast i64* %887 to <2 x i64>*
  %890 = load <2 x i64>, <2 x i64>* %889, align 8
  %891 = bitcast i8*** %888 to <2 x i64>*
  store <2 x i64> %890, <2 x i64>* %891, align 8
  %892 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 13
  %893 = bitcast i16* %892 to i64*
  %894 = load i64, i64* %893, align 8
  %895 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %8, i64 0, i32 12
  %896 = bitcast %struct.FT_HashRec_** %895 to i64*
  store i64 %894, i64* %896, align 8
  %897 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 3, i32 12, i32 3
  %898 = load i64, i64* %897, align 8
  %899 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %8, i64 0, i32 22
  %900 = bitcast i64** %899 to i64*
  store i64 %898, i64* %900, align 8
  %901 = load i32, i32* %49, align 8
  %902 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %8, i64 0, i32 23
  store i32 %901, i32* %902, align 8
  %903 = load i32, i32* %727, align 8
  %904 = icmp sgt i32 %903, 0
  br i1 %904, label %905, label %939

905:                                              ; preds = %880
  %906 = bitcast %struct.FT_Data_* %6 to i8*
  %907 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %8, i64 0, i32 0, i32 1
  %908 = bitcast %struct.FT_FaceRec_** %907 to %struct.T1_FaceRec_**
  %909 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %8, i64 0, i32 0, i32 9, i32 0
  br label %910

910:                                              ; preds = %929, %905
  %911 = phi i64 [ 0, %905 ], [ %934, %929 ]
  %912 = phi i32 [ 0, %905 ], [ %935, %929 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %906) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %906, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 0, i8* %7, align 1
  %913 = call fastcc i32 @T1_Parse_Glyph_And_Get_Char_String(%struct.T1_DecoderRec_* nonnull %8, i32 %912, %struct.FT_Data_* nonnull %6, i8* nonnull %7) #11
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %915, label %929

915:                                              ; preds = %910
  %916 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %908, align 8
  %917 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %916, i64 0, i32 0, i32 30
  %918 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %917, align 8
  %919 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %918, i64 0, i32 4
  %920 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %919, align 8
  %921 = icmp eq %struct.FT_Incremental_InterfaceRec_* %920, null
  br i1 %921, label %929, label %922

922:                                              ; preds = %915
  %923 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %920, i64 0, i32 0
  %924 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %923, align 8
  %925 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %924, i64 0, i32 1
  %926 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %925, align 8
  %927 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %920, i64 0, i32 1
  %928 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %927, align 8
  call void %926(%struct.FT_IncrementalRec_* %928, %struct.FT_Data_* nonnull %6) #11
  br label %929

929:                                              ; preds = %922, %915, %910
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %906) #11
  %930 = icmp eq i32 %912, 0
  %931 = load i64, i64* %909, align 8
  %932 = icmp sgt i64 %931, %911
  %933 = or i1 %930, %932
  %934 = select i1 %933, i64 %931, i64 %911
  %935 = add nuw nsw i32 %912, 1
  %936 = load i32, i32* %727, align 8
  %937 = icmp slt i32 %935, %936
  br i1 %937, label %910, label %939

938:                                              ; preds = %849
  call void @llvm.lifetime.end.p0i8(i64 5048, i8* nonnull %869) #11
  br label %947

939:                                              ; preds = %929, %880
  %940 = phi i64 [ 0, %880 ], [ %934, %929 ]
  %941 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %871, align 8
  %942 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %941, i64 0, i32 1
  %943 = load void (%struct.T1_DecoderRec_*)*, void (%struct.T1_DecoderRec_*)** %942, align 8
  call void %943(%struct.T1_DecoderRec_* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 5048, i8* nonnull %869) #11
  %944 = call i64 @FT_RoundFix(i64 %940) #11
  %945 = lshr i64 %944, 16
  %946 = trunc i64 %945 to i16
  store i16 %946, i16* %868, align 8
  br label %947

947:                                              ; preds = %938, %939
  %948 = load i16, i16* %858, align 2
  %949 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 18
  store i16 %948, i16* %949, align 2
  %950 = getelementptr inbounds %struct.PS_FontInfoRec_, %struct.PS_FontInfoRec_* %20, i64 0, i32 7
  %951 = load i16, i16* %950, align 2
  %952 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 19
  store i16 %951, i16* %952, align 4
  %953 = getelementptr inbounds %struct.PS_FontInfoRec_, %struct.PS_FontInfoRec_* %20, i64 0, i32 8
  %954 = load i16, i16* %953, align 4
  %955 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 20
  store i16 %954, i16* %955, align 2
  %956 = icmp eq i8* %25, null
  br i1 %956, label %991, label %957

957:                                              ; preds = %947
  %958 = bitcast %struct.FT_CharMapRec_* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %958) #11
  %959 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %17, i64 0, i32 0
  %960 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %17, i64 0, i32 1
  %961 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %17, i64 0, i32 2
  %962 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %17, i64 0, i32 3
  %963 = getelementptr inbounds i8, i8* %31, i64 64
  %964 = bitcast i8* %963 to %struct.T1_CMap_ClassesRec_**
  %965 = load %struct.T1_CMap_ClassesRec_*, %struct.T1_CMap_ClassesRec_** %964, align 8
  store %struct.FT_FaceRec_* %1, %struct.FT_FaceRec_** %959, align 8
  store i16 3, i16* %961, align 4
  store i16 1, i16* %962, align 2
  store i32 1970170211, i32* %960, align 8
  %966 = getelementptr inbounds %struct.T1_CMap_ClassesRec_, %struct.T1_CMap_ClassesRec_* %965, i64 0, i32 3
  %967 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %966, align 8
  %968 = call i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_* %967, i8* null, %struct.FT_CharMapRec_* nonnull %17, %struct.FT_CMapRec_** null) #11
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %972, label %970

970:                                              ; preds = %957
  %971 = trunc i32 %968 to i8
  switch i8 %971, label %989 [
    i8 -93, label %972
    i8 7, label %972
  ]

972:                                              ; preds = %970, %970, %957
  store i16 7, i16* %961, align 4
  %973 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 6
  %974 = bitcast i8** %973 to i32*
  %975 = load i32, i32* %974, align 8
  switch i32 %975, label %989 [
    i32 2, label %976
    i32 4, label %978
    i32 1, label %980
    i32 3, label %982
  ]

976:                                              ; preds = %972
  store i32 1094995778, i32* %960, align 8
  store i16 0, i16* %962, align 2
  %977 = getelementptr inbounds %struct.T1_CMap_ClassesRec_, %struct.T1_CMap_ClassesRec_* %965, i64 0, i32 0
  br label %983

978:                                              ; preds = %972
  store i32 1094992453, i32* %960, align 8
  store i16 1, i16* %962, align 2
  %979 = getelementptr inbounds %struct.T1_CMap_ClassesRec_, %struct.T1_CMap_ClassesRec_* %965, i64 0, i32 1
  br label %983

980:                                              ; preds = %972
  store i32 1094992451, i32* %960, align 8
  store i16 2, i16* %962, align 2
  %981 = getelementptr inbounds %struct.T1_CMap_ClassesRec_, %struct.T1_CMap_ClassesRec_* %965, i64 0, i32 2
  br label %983

982:                                              ; preds = %972
  store i32 1818326065, i32* %960, align 8
  store i16 3, i16* %962, align 2
  br label %983

983:                                              ; preds = %982, %980, %978, %976
  %984 = phi %struct.FT_CMap_ClassRec_** [ %966, %982 ], [ %981, %980 ], [ %979, %978 ], [ %977, %976 ]
  %985 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %984, align 8
  %986 = icmp eq %struct.FT_CMap_ClassRec_* %985, null
  br i1 %986, label %989, label %987

987:                                              ; preds = %983
  %988 = call i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_* nonnull %985, i8* null, %struct.FT_CharMapRec_* nonnull %17, %struct.FT_CMapRec_** null) #11
  br label %989

989:                                              ; preds = %972, %987, %983, %970
  %990 = phi i32 [ %968, %970 ], [ %988, %987 ], [ 0, %983 ], [ 0, %972 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %958) #11
  ret i32 %990

991:                                              ; preds = %947, %715, %5, %722
  %992 = phi i32 [ %718, %715 ], [ 11, %5 ], [ 6, %722 ], [ 0, %947 ]
  ret i32 %992
}

; Function Attrs: nounwind ssp uwtable
define internal void @T1_Face_Done(%struct.FT_FaceRec_*) #0 {
  %2 = bitcast %struct.FT_FaceRec_* %0 to %struct.T1_FaceRec_*
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %96, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 12, i32 3
  %9 = bitcast i64* %8 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = bitcast i64* %10 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* nonnull %13) #11
  store i64* null, i64** %9, align 8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 12, i32 2
  %15 = bitcast i64* %14 to i32*
  store i32 0, i32* %15, align 8
  br label %16

16:                                               ; preds = %4, %12
  tail call void @T1_Done_Blend(%struct.T1_FaceRec_* nonnull %2)
  %17 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 12
  %18 = bitcast %struct.FT_BBox_* %17 to %struct.PS_BlendRec_**
  store %struct.PS_BlendRec_* null, %struct.PS_BlendRec_** %18, align 8
  %19 = bitcast %struct.FT_FaceRec_* %7 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %20) #11
  store i8* null, i8** %19, align 8
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 1
  %22 = bitcast i64* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %23) #11
  store i8* null, i8** %22, align 8
  %24 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 2
  %25 = bitcast i64* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %26) #11
  store i8* null, i8** %25, align 8
  %27 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 3
  %28 = bitcast i64* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %29) #11
  store i8* null, i8** %28, align 8
  %30 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 4
  %31 = bitcast i64* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %32) #11
  store i8* null, i8** %31, align 8
  %33 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 23
  %34 = bitcast %struct.FT_CharMapRec_** %33 to i32**
  %35 = bitcast %struct.FT_CharMapRec_** %33 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %36) #11
  store i32* null, i32** %34, align 8
  %37 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 22
  %38 = bitcast %struct.FT_SizeRec_** %37 to i8***
  %39 = bitcast %struct.FT_SizeRec_** %37 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %40) #11
  store i8** null, i8*** %38, align 8
  %41 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 21
  %42 = bitcast %struct.FT_GlyphSlotRec_** %41 to i8***
  %43 = bitcast %struct.FT_GlyphSlotRec_** %41 to i8**
  %44 = load i8*, i8** %43, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %44) #11
  store i8** null, i8*** %42, align 8
  %45 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 2
  %46 = bitcast i64* %45 to i8***
  %47 = bitcast i64* %45 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %48) #11
  store i8** null, i8*** %46, align 8
  %49 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 3
  %50 = bitcast i64* %49 to i32**
  %51 = bitcast i64* %49 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %52) #11
  store i32* null, i32** %50, align 8
  %53 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 13
  %54 = bitcast i16* %53 to %struct.FT_HashRec_**
  %55 = load %struct.FT_HashRec_*, %struct.FT_HashRec_** %54, align 8
  tail call void @ft_hash_str_free(%struct.FT_HashRec_* %55, %struct.FT_MemoryRec_* %6) #11
  %56 = bitcast i16* %53 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %57) #11
  store %struct.FT_HashRec_* null, %struct.FT_HashRec_** %54, align 8
  %58 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 11, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %59) #11
  store i8* null, i8** %58, align 8
  %60 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 11, i32 1
  %61 = bitcast void (i8*)** %60 to i8**
  %62 = load i8*, i8** %61, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %62) #11
  store i8* null, i8** %61, align 8
  %63 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12
  %64 = bitcast %struct.FT_BBox_* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %65) #11
  store i8* null, i8** %64, align 8
  %66 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 7
  %67 = getelementptr inbounds i32, i32* %66, i64 4
  %68 = bitcast i32* %67 to i16**
  %69 = bitcast i32* %67 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %70) #11
  store i16* null, i16** %68, align 8
  %71 = getelementptr inbounds i32, i32* %66, i64 6
  %72 = bitcast i32* %71 to i8***
  %73 = bitcast i32* %71 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %74) #11
  store i8** null, i8*** %72, align 8
  %75 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 5
  %76 = load i8*, i8** %75, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %76) #11
  store i8* null, i8** %75, align 8
  %77 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 6
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %16
  %81 = getelementptr inbounds i8, i8* %78, i64 72
  %82 = bitcast i8* %81 to %struct.AFM_KernPairRec_**
  %83 = bitcast i8* %81 to i8**
  %84 = load i8*, i8** %83, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %84) #11
  store %struct.AFM_KernPairRec_* null, %struct.AFM_KernPairRec_** %82, align 8
  %85 = getelementptr inbounds i8, i8* %78, i64 80
  %86 = bitcast i8* %85 to i32*
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds i8, i8* %78, i64 56
  %88 = bitcast i8* %87 to %struct.AFM_TrackKernRec_**
  %89 = bitcast i8* %87 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %90) #11
  store %struct.AFM_TrackKernRec_* null, %struct.AFM_TrackKernRec_** %88, align 8
  %91 = getelementptr inbounds i8, i8* %78, i64 64
  %92 = bitcast i8* %91 to i32*
  store i32 0, i32* %92, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* nonnull %78) #11
  br label %93

93:                                               ; preds = %16, %80
  %94 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 5
  %95 = bitcast i8** %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false)
  br label %96

96:                                               ; preds = %1, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Size_Init(%struct.FT_SizeRec_* nocapture readonly) #0 {
  %2 = alloca %struct.PSH_GlobalsRec_*, align 8
  %3 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 3, i32 13
  %6 = bitcast i16* %5 to %struct.PSHinter_Interface_**
  %7 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 24
  %9 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %9, i64 0, i32 0, i32 1
  %11 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %10, align 8
  %12 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #11
  %13 = icmp ne %struct.FT_ModuleRec_* %12, null
  %14 = icmp ne %struct.PSHinter_Interface_* %7, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %41

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %7, i64 0, i32 0
  %18 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %17, align 8
  %19 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %18, null
  br i1 %19, label %41, label %20

20:                                               ; preds = %16
  %21 = tail call %struct.PSH_Globals_FuncsRec_* %18(%struct.FT_ModuleRec_* nonnull %12) #11
  %22 = icmp eq %struct.PSH_Globals_FuncsRec_* %21, null
  br i1 %22, label %41, label %23

23:                                               ; preds = %20
  %24 = bitcast %struct.PSH_GlobalsRec_** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store %struct.PSH_GlobalsRec_* inttoptr (i64 -6148914691236517206 to %struct.PSH_GlobalsRec_*), %struct.PSH_GlobalsRec_** %2, align 8
  %25 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %26 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %21, i64 0, i32 0
  %27 = load i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)** %26, align 8
  %28 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %25, i64 0, i32 25
  %29 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %28, align 8
  %30 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %25, i64 1, i32 8
  %31 = bitcast %struct.FT_Bitmap_Size_** %30 to %struct.PS_PrivateRec_*
  %32 = call i32 %27(%struct.FT_MemoryRec_* %29, %struct.PS_PrivateRec_* %31, %struct.PSH_GlobalsRec_** nonnull %2) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %23
  %35 = bitcast %struct.PSH_GlobalsRec_** %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %38 = bitcast %struct.FT_Size_InternalRec_** %37 to i64**
  %39 = load i64*, i64** %38, align 8
  store i64 %36, i64* %39, align 8
  br label %40

40:                                               ; preds = %23, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %41

41:                                               ; preds = %1, %16, %20, %40
  %42 = phi i32 [ %32, %40 ], [ 0, %20 ], [ 0, %16 ], [ 0, %1 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define internal void @T1_Size_Done(%struct.FT_SizeRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %3 = load %struct.FT_Size_InternalRec_*, %struct.FT_Size_InternalRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 3, i32 13
  %11 = bitcast i16* %10 to %struct.PSHinter_Interface_**
  %12 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 24
  %14 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %14, i64 0, i32 0, i32 1
  %16 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %15, align 8
  %17 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #11
  %18 = icmp ne %struct.FT_ModuleRec_* %17, null
  %19 = icmp ne %struct.PSHinter_Interface_* %12, null
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %34

21:                                               ; preds = %7
  %22 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %12, i64 0, i32 0
  %23 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %22, align 8
  %24 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %23, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %21
  %26 = tail call %struct.PSH_Globals_FuncsRec_* %23(%struct.FT_ModuleRec_* nonnull %17) #11
  %27 = icmp eq %struct.PSH_Globals_FuncsRec_* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %26, i64 0, i32 2
  %30 = load void (%struct.PSH_GlobalsRec_*)*, void (%struct.PSH_GlobalsRec_*)** %29, align 8
  %31 = bitcast %struct.FT_Size_InternalRec_** %2 to %struct.PSH_GlobalsRec_***
  %32 = load %struct.PSH_GlobalsRec_**, %struct.PSH_GlobalsRec_*** %31, align 8
  %33 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %32, align 8
  tail call void %30(%struct.PSH_GlobalsRec_* %33) #11
  br label %34

34:                                               ; preds = %7, %21, %25, %28
  %35 = load %struct.FT_Size_InternalRec_*, %struct.FT_Size_InternalRec_** %2, align 8
  %36 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %35, i64 0, i32 0
  store i8* null, i8** %36, align 8
  br label %37

37:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_GlyphSlot_Init(%struct.FT_GlyphSlotRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %3 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 3, i32 13
  %5 = bitcast i16* %4 to %struct.PSHinter_Interface_**
  %6 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %5, align 8
  %7 = icmp eq %struct.PSHinter_Interface_* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 24
  %10 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %10, i64 0, i32 0, i32 1
  %12 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %11, align 8
  %13 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #11
  %14 = icmp eq %struct.FT_ModuleRec_* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %6, i64 0, i32 1
  %17 = load %struct.T1_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T1_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)** %16, align 8
  %18 = tail call %struct.T1_Hints_FuncsRec_* %17(%struct.FT_ModuleRec_* nonnull %13) #11
  %19 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %20 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %20, i64 0, i32 5
  %22 = bitcast i8** %21 to %struct.T1_Hints_FuncsRec_**
  store %struct.T1_Hints_FuncsRec_* %18, %struct.T1_Hints_FuncsRec_** %22, align 8
  br label %23

23:                                               ; preds = %15, %8, %1
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @T1_GlyphSlot_Done(%struct.FT_GlyphSlotRec_* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %3 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %3, i64 0, i32 5
  store i8* null, i8** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Load_Glyph(%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32) #0 {
  %5 = alloca %struct.T1_DecoderRec_, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.FT_Matrix_, align 8
  %8 = alloca %struct.FT_Data_, align 8
  %9 = alloca %struct.FT_BBox_, align 16
  %10 = bitcast %struct.FT_GlyphSlotRec_* %0 to %struct.T1_GlyphSlotRec_*
  %11 = bitcast %struct.T1_DecoderRec_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 5048, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 5048, i1 false)
  %12 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %13 = bitcast %struct.FT_FaceRec_** %12 to %struct.T1_FaceRec_**
  %14 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %15 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 3
  %16 = bitcast i8** %15 to %struct.PSAux_ServiceRec_**
  %17 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %16, align 8
  %18 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %17, i64 0, i32 3
  %19 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %18, align 8
  %20 = bitcast %struct.FT_Matrix_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #11
  %21 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %7, i64 0, i32 0
  %22 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %7, i64 0, i32 1
  %23 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %7, i64 0, i32 2
  %24 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %7, i64 0, i32 3
  %25 = bitcast %struct.FT_Data_* %8 to i8*
  %26 = bitcast %struct.FT_Matrix_* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %27 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 0, i32 4
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = icmp ugt i32 %29, %2
  %31 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 0
  br i1 %30, label %38, label %32

32:                                               ; preds = %4
  %33 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 0, i32 30
  %34 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %33, align 8
  %35 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %34, i64 0, i32 4
  %36 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %35, align 8
  %37 = icmp eq %struct.FT_Incremental_InterfaceRec_* %36, null
  br i1 %37, label %362, label %38

38:                                               ; preds = %32, %4
  %39 = and i32 %3, 1024
  %40 = icmp eq i32 %39, 0
  %41 = or i32 %3, 3
  %42 = select i1 %40, i32 %3, i32 %41
  %43 = icmp ne %struct.FT_SizeRec_* %1, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 2, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1, i32 1
  %48 = bitcast %struct.FT_FaceRec_** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 2, i32 3
  %50 = load i64, i64* %49, align 8
  br label %54

51:                                               ; preds = %38
  %52 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1, i32 1
  %53 = bitcast %struct.FT_FaceRec_** %52 to i64*
  store i64 65536, i64* %53, align 8
  br label %54

54:                                               ; preds = %51, %44
  %55 = phi i64 [ 65536, %51 ], [ %50, %44 ]
  %56 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1, i32 2
  %57 = bitcast %struct.FT_GlyphSlotRec_** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13
  %59 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 1
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %58, i64 0, i32 0
  store i16 0, i16* %60, align 8
  %61 = sext i32 %42 to i64
  %62 = and i64 %61, 1
  %63 = icmp ne i64 %62, 0
  %64 = and i64 %61, 2
  %65 = icmp eq i64 %64, 0
  %66 = xor i1 %63, true
  %67 = and i1 %65, %66
  %68 = zext i1 %67 to i8
  %69 = zext i1 %66 to i8
  %70 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1
  %71 = bitcast %struct.FT_GlyphSlotRec_* %70 to i8*
  store i8 %68, i8* %71, align 8
  %72 = getelementptr inbounds %struct.T1_GlyphSlotRec_, %struct.T1_GlyphSlotRec_* %10, i64 0, i32 2
  store i8 %69, i8* %72, align 1
  %73 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 9
  store i32 1869968492, i32* %73, align 8
  %74 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %19, i64 0, i32 0
  %75 = load i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)** %74, align 8
  %76 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 1, i32 14
  %77 = load i8**, i8*** %76, align 8
  %78 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 7
  %79 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %78, align 8
  %80 = lshr i32 %42, 16
  %81 = and i32 %80, 15
  %82 = call i32 %75(%struct.T1_DecoderRec_* nonnull %5, %struct.FT_FaceRec_* %31, %struct.FT_SizeRec_* %1, %struct.FT_GlyphSlotRec_* %0, i8** %77, %struct.PS_BlendRec_* %79, i8 zeroext %68, i32 %81, i32 (%struct.T1_DecoderRec_*, i32)* nonnull @T1_Parse_Glyph) #11
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %362

84:                                               ; preds = %54
  %85 = and i64 %61, 1024
  %86 = lshr exact i64 %85, 10
  %87 = trunc i64 %86 to i8
  %88 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 13
  store i8 %87, i8* %88, align 1
  %89 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 1, i32 9
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 9
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 1, i32 10
  %93 = bitcast i8*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 10
  %96 = bitcast i8*** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 1, i32 11
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 11
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 1, i32 12
  %103 = bitcast %struct.FT_HashRec_** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 12
  %106 = bitcast %struct.FT_HashRec_** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 11
  %108 = bitcast i64** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 22
  %111 = bitcast i64** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 10
  %113 = load i32, i32* %112, align 8
  %114 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 23
  store i32 %113, i32* %114, align 8
  %115 = call fastcc i32 @T1_Parse_Glyph_And_Get_Char_String(%struct.T1_DecoderRec_* nonnull %5, i32 %2, %struct.FT_Data_* nonnull %8, i8* nonnull %6)
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %359

117:                                              ; preds = %84
  %118 = icmp eq i64 %85, 0
  %119 = load i8, i8* %71, align 8
  %120 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 13
  %121 = bitcast %struct.FT_Matrix_* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %121, i64 32, i1 false)
  %122 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 14, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 14, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %19, i64 0, i32 1
  %127 = load void (%struct.T1_DecoderRec_*)*, void (%struct.T1_DecoderRec_*)** %126, align 8
  call void %127(%struct.T1_DecoderRec_* nonnull %5) #11
  %128 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 5
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 1
  %131 = or i32 %130, 4
  store i32 %131, i32* %128, align 8
  br i1 %118, label %150, label %132

132:                                              ; preds = %117
  %133 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %134 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %133, align 8
  %135 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 8, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = call i64 @FT_RoundFix(i64 %136) #11
  %138 = ashr i64 %137, 16
  %139 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 9, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = call i64 @FT_RoundFix(i64 %141) #11
  %143 = ashr i64 %142, 16
  %144 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 4
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %134, i64 0, i32 3
  %146 = bitcast %struct.FT_Matrix_* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* nonnull align 8 %20, i64 32, i1 false)
  %147 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %134, i64 0, i32 4, i32 0
  store i64 %123, i64* %147, align 8
  %148 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %134, i64 0, i32 4, i32 1
  store i64 %125, i64* %148, align 8
  %149 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %134, i64 0, i32 2
  store i8 1, i8* %149, align 4
  br label %337

150:                                              ; preds = %117
  %151 = bitcast %struct.FT_BBox_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %151) #11
  %152 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %9, i64 0, i32 2
  %153 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5
  %154 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 9, i32 0
  %155 = bitcast %struct.FT_BBox_* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %155, i8 -86, i64 32, i1 false)
  %156 = load i64, i64* %154, align 8
  %157 = call i64 @FT_RoundFix(i64 %156) #11
  %158 = ashr i64 %157, 16
  %159 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 4
  store i64 %158, i64* %159, align 8
  %160 = load i64, i64* %154, align 8
  %161 = call i64 @FT_RoundFix(i64 %160) #11
  %162 = ashr i64 %161, 16
  %163 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 6
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %165 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %164, align 8
  %166 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %165, i64 0, i32 2
  store i8 0, i8* %166, align 4
  %167 = and i64 %61, 16
  %168 = icmp ne i64 %167, 0
  br i1 %168, label %169, label %177

169:                                              ; preds = %150
  %170 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 1, i32 21, i32 3
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 1, i32 21, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = sub nsw i64 %171, %173
  %175 = ashr i64 %174, 16
  %176 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  store i64 %175, i64* %176, align 8
  br label %186

177:                                              ; preds = %150
  %178 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 9, i32 1
  %179 = load i64, i64* %178, align 8
  %180 = call i64 @FT_RoundFix(i64 %179) #11
  %181 = ashr i64 %180, 16
  %182 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  store i64 %181, i64* %182, align 8
  %183 = load i64, i64* %178, align 8
  %184 = call i64 @FT_RoundFix(i64 %183) #11
  %185 = ashr i64 %184, 16
  br label %186

186:                                              ; preds = %177, %169
  %187 = phi i64 [ %185, %177 ], [ %175, %169 ]
  %188 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 7
  store i64 %187, i64* %188, align 8
  store i32 1869968492, i32* %73, align 8
  br i1 %43, label %189, label %196

189:                                              ; preds = %186
  %190 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 2, i32 1
  %191 = load i16, i16* %190, align 2
  %192 = icmp ult i16 %191, 24
  br i1 %192, label %193, label %196

193:                                              ; preds = %189
  %194 = load i32, i32* %128, align 8
  %195 = or i32 %194, 256
  store i32 %195, i32* %128, align 8
  br label %196

196:                                              ; preds = %193, %189, %186
  %197 = load i64, i64* %21, align 8
  %198 = icmp eq i64 %197, 65536
  %199 = load i64, i64* %24, align 8
  %200 = icmp eq i64 %199, 65536
  %201 = and i1 %198, %200
  %202 = load i64, i64* %22, align 8
  %203 = load i64, i64* %23, align 8
  %204 = or i64 %203, %202
  %205 = icmp eq i64 %204, 0
  %206 = and i1 %201, %205
  br i1 %206, label %233, label %207

207:                                              ; preds = %196
  call void @FT_Outline_Transform(%struct.FT_Outline_* %58, %struct.FT_Matrix_* nonnull %7) #11
  %208 = load i64, i64* %159, align 8
  %209 = load i64, i64* %21, align 8
  %210 = shl i64 %208, 32
  %211 = ashr exact i64 %210, 32
  %212 = shl i64 %209, 32
  %213 = ashr exact i64 %212, 32
  %214 = mul nsw i64 %213, %211
  %215 = ashr i64 %214, 63
  %216 = add nsw i64 %214, 32768
  %217 = add nsw i64 %216, %215
  %218 = shl i64 %217, 16
  %219 = ashr i64 %218, 32
  store i64 %219, i64* %159, align 8
  %220 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  %221 = load i64, i64* %220, align 8
  %222 = load i64, i64* %24, align 8
  %223 = shl i64 %221, 32
  %224 = ashr exact i64 %223, 32
  %225 = shl i64 %222, 32
  %226 = ashr exact i64 %225, 32
  %227 = mul nsw i64 %226, %224
  %228 = ashr i64 %227, 63
  %229 = add nsw i64 %227, 32768
  %230 = add nsw i64 %229, %228
  %231 = shl i64 %230, 16
  %232 = ashr i64 %231, 32
  store i64 %232, i64* %220, align 8
  br label %233

233:                                              ; preds = %196, %207
  %234 = or i64 %125, %123
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %242, label %236

236:                                              ; preds = %233
  call void @FT_Outline_Translate(%struct.FT_Outline_* %58, i64 %123, i64 %125) #11
  %237 = load i64, i64* %159, align 8
  %238 = add nsw i64 %237, %123
  store i64 %238, i64* %159, align 8
  %239 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  %240 = load i64, i64* %239, align 8
  %241 = add nsw i64 %240, %125
  store i64 %241, i64* %239, align 8
  br label %242

242:                                              ; preds = %233, %236
  %243 = load i8, i8* %6, align 1
  %244 = icmp eq i8 %243, 0
  %245 = and i1 %63, %244
  br i1 %245, label %322, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 4
  %248 = load %struct.FT_Outline_*, %struct.FT_Outline_** %247, align 8
  %249 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %248, i64 0, i32 2
  %250 = load %struct.FT_Vector_*, %struct.FT_Vector_** %249, align 8
  %251 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1, i32 1
  %252 = bitcast %struct.FT_FaceRec_** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1, i32 2
  %255 = bitcast %struct.FT_GlyphSlotRec_** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = icmp eq i8 %119, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %246
  %259 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 15
  %260 = load i8*, i8** %259, align 8
  %261 = icmp eq i8* %260, null
  br i1 %261, label %262, label %298

262:                                              ; preds = %258, %246
  %263 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %248, i64 0, i32 1
  %264 = load i16, i16* %263, align 2
  %265 = icmp sgt i16 %264, 0
  br i1 %265, label %266, label %298

266:                                              ; preds = %262
  %267 = sext i16 %264 to i32
  %268 = shl i64 %253, 32
  %269 = ashr exact i64 %268, 32
  %270 = shl i64 %256, 32
  %271 = ashr exact i64 %270, 32
  br label %272

272:                                              ; preds = %266, %272
  %273 = phi %struct.FT_Vector_* [ %250, %266 ], [ %296, %272 ]
  %274 = phi i32 [ %267, %266 ], [ %295, %272 ]
  %275 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %273, i64 0, i32 0
  %276 = load i64, i64* %275, align 8
  %277 = shl i64 %276, 32
  %278 = ashr exact i64 %277, 32
  %279 = mul nsw i64 %278, %269
  %280 = ashr i64 %279, 63
  %281 = add nsw i64 %279, 32768
  %282 = add nsw i64 %281, %280
  %283 = shl i64 %282, 16
  %284 = ashr i64 %283, 32
  store i64 %284, i64* %275, align 8
  %285 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %273, i64 0, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = shl i64 %286, 32
  %288 = ashr exact i64 %287, 32
  %289 = mul nsw i64 %288, %271
  %290 = ashr i64 %289, 63
  %291 = add nsw i64 %289, 32768
  %292 = add nsw i64 %291, %290
  %293 = shl i64 %292, 16
  %294 = ashr i64 %293, 32
  store i64 %294, i64* %285, align 8
  %295 = add nsw i32 %274, -1
  %296 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %273, i64 1
  %297 = icmp sgt i32 %295, 0
  br i1 %297, label %272, label %298

298:                                              ; preds = %272, %262, %258
  %299 = load i64, i64* %159, align 8
  %300 = shl i64 %299, 32
  %301 = ashr exact i64 %300, 32
  %302 = shl i64 %253, 32
  %303 = ashr exact i64 %302, 32
  %304 = mul nsw i64 %301, %303
  %305 = ashr i64 %304, 63
  %306 = add nsw i64 %304, 32768
  %307 = add nsw i64 %306, %305
  %308 = shl i64 %307, 16
  %309 = ashr i64 %308, 32
  store i64 %309, i64* %159, align 8
  %310 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  %311 = load i64, i64* %310, align 8
  %312 = shl i64 %311, 32
  %313 = ashr exact i64 %312, 32
  %314 = shl i64 %256, 32
  %315 = ashr exact i64 %314, 32
  %316 = mul nsw i64 %313, %315
  %317 = ashr i64 %316, 63
  %318 = add nsw i64 %316, 32768
  %319 = add nsw i64 %318, %317
  %320 = shl i64 %319, 16
  %321 = ashr i64 %320, 32
  store i64 %321, i64* %310, align 8
  br label %322

322:                                              ; preds = %242, %298
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %58, %struct.FT_BBox_* nonnull %9) #11
  %323 = bitcast i64* %152 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 16
  %325 = bitcast %struct.FT_BBox_* %9 to <2 x i64>*
  %326 = load <2 x i64>, <2 x i64>* %325, align 16
  %327 = sub nsw <2 x i64> %324, %326
  %328 = bitcast %struct.FT_Glyph_Metrics_* %153 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %328, align 8
  %329 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  %330 = extractelement <2 x i64> %326, i32 0
  store i64 %330, i64* %329, align 8
  %331 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 3
  %332 = extractelement <2 x i64> %324, i32 1
  store i64 %332, i64* %331, align 8
  br i1 %168, label %333, label %336

333:                                              ; preds = %322
  %334 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  %335 = load i64, i64* %334, align 8
  call void @ft_synthesize_vertical_metrics(%struct.FT_Glyph_Metrics_* %153, i64 %335) #11
  br label %336

336:                                              ; preds = %333, %322
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %151) #11
  br label %337

337:                                              ; preds = %336, %132
  %338 = bitcast %struct.FT_Data_* %8 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 16
  %341 = bitcast i8** %340 to i64*
  store i64 %339, i64* %341, align 8
  %342 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %8, i64 0, i32 1
  %343 = load i32, i32* %342, align 8
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 17
  store i64 %344, i64* %345, align 8
  %346 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %14, i64 0, i32 0, i32 30
  %347 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %346, align 8
  %348 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %347, i64 0, i32 4
  %349 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %348, align 8
  %350 = icmp eq %struct.FT_Incremental_InterfaceRec_* %349, null
  br i1 %350, label %362, label %351

351:                                              ; preds = %337
  %352 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %349, i64 0, i32 0
  %353 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %352, align 8
  %354 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %353, i64 0, i32 1
  %355 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %354, align 8
  %356 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %349, i64 0, i32 1
  %357 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %356, align 8
  call void %355(%struct.FT_IncrementalRec_* %357, %struct.FT_Data_* nonnull %8) #11
  %358 = bitcast i8** %340 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %358, i8 0, i64 16, i1 false)
  br label %362

359:                                              ; preds = %84
  %360 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %19, i64 0, i32 1
  %361 = load void (%struct.T1_DecoderRec_*)*, void (%struct.T1_DecoderRec_*)** %360, align 8
  call void %361(%struct.T1_DecoderRec_* nonnull %5) #11
  br label %362

362:                                              ; preds = %54, %32, %351, %337, %359
  %363 = phi i32 [ %115, %359 ], [ 0, %337 ], [ 0, %351 ], [ %82, %54 ], [ 6, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 5048, i8* nonnull %11) #11
  ret i32 %363
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Get_Kerning(%struct.FT_FaceRec_* nocapture readonly, i32, i32, %struct.FT_Vector_* nocapture) #0 {
  %5 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 1
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 6
  %8 = bitcast %struct.FT_Vector_* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %60, label %11

11:                                               ; preds = %4
  %12 = zext i32 %1 to i64
  %13 = shl nuw nsw i64 %12, 16
  %14 = zext i32 %2 to i64
  %15 = or i64 %13, %14
  %16 = getelementptr inbounds i8, i8* %9, i64 72
  %17 = bitcast i8* %16 to %struct.AFM_KernPairRec_**
  %18 = load %struct.AFM_KernPairRec_*, %struct.AFM_KernPairRec_** %17, align 8
  %19 = getelementptr inbounds i8, i8* %9, i64 80
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %18, i64 %22
  %24 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %23, i64 -1
  %25 = icmp ugt %struct.AFM_KernPairRec_* %18, %24
  br i1 %25, label %58, label %26

26:                                               ; preds = %11, %51
  %27 = phi %struct.AFM_KernPairRec_* [ %56, %51 ], [ %24, %11 ]
  %28 = phi %struct.AFM_KernPairRec_* [ %55, %51 ], [ %18, %11 ]
  %29 = ptrtoint %struct.AFM_KernPairRec_* %27 to i64
  %30 = ptrtoint %struct.AFM_KernPairRec_* %28 to i64
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 4
  %33 = sdiv i64 %32, 2
  %34 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %28, i64 %33
  %35 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 16
  %39 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %28, i64 %33, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %38, %41
  %43 = icmp eq i64 %42, %15
  br i1 %43, label %44, label %51

44:                                               ; preds = %26
  %45 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %28, i64 %33, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  store i64 %47, i64* %5, align 8
  %48 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %28, i64 %33, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  store i64 %50, i64* %6, align 8
  br label %60

51:                                               ; preds = %26
  %52 = icmp ult i64 %42, %15
  %53 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %34, i64 1
  %54 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %34, i64 -1
  %55 = select i1 %52, %struct.AFM_KernPairRec_* %53, %struct.AFM_KernPairRec_* %28
  %56 = select i1 %52, %struct.AFM_KernPairRec_* %27, %struct.AFM_KernPairRec_* %54
  %57 = icmp ugt %struct.AFM_KernPairRec_* %55, %56
  br i1 %57, label %58, label %26

58:                                               ; preds = %51, %11
  %59 = bitcast %struct.FT_Vector_* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #11
  br label %60

60:                                               ; preds = %58, %44, %4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Read_Metrics(%struct.FT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.AFM_ParserRec_, align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 7
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = bitcast %struct.AFM_ParserRec_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #11
  %9 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %4, i64 0, i32 2
  %10 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %4, i64 0, i32 3
  %11 = getelementptr inbounds %struct.AFM_ParserRec_, %struct.AFM_ParserRec_* %4, i64 0, i32 4
  %12 = bitcast i32* %5 to i8*
  %13 = bitcast %struct.AFM_ParserRec_* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 2, i32* %5, align 4
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 6
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds i8, i8* %16, i64 72
  %20 = bitcast i8* %19 to %struct.AFM_KernPairRec_**
  %21 = bitcast i8* %19 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %22) #11
  store %struct.AFM_KernPairRec_* null, %struct.AFM_KernPairRec_** %20, align 8
  %23 = getelementptr inbounds i8, i8* %16, i64 80
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %16, i64 56
  %26 = bitcast i8* %25 to %struct.AFM_TrackKernRec_**
  %27 = bitcast i8* %25 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %28) #11
  store %struct.AFM_TrackKernRec_* null, %struct.AFM_TrackKernRec_** %26, align 8
  %29 = getelementptr inbounds i8, i8* %16, i64 64
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %31

31:                                               ; preds = %2, %18
  %32 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %7, i64 88, i32* nonnull %5) #11
  %33 = bitcast i8* %32 to %struct.AFM_FontInfoRec_*
  %34 = load i32, i32* %5, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %321

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 %38) #11
  store i32 %39, i32* %5, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %321

41:                                               ; preds = %36
  %42 = getelementptr inbounds i8, i8* %32, i64 8
  %43 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 29
  %44 = bitcast i8** %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %44, i64 32, i1 false)
  %45 = getelementptr inbounds i8*, i8** %43, i64 3
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %32, i64 40
  %49 = bitcast i8* %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds i8*, i8** %43, i64 1
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds i8, i8* %32, i64 48
  %54 = bitcast i8* %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 5
  %56 = bitcast i8** %55 to %struct.PSAux_ServiceRec_**
  %57 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %56, align 8
  %58 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %57, i64 0, i32 9
  %59 = load %struct.AFM_Parser_FuncsRec_*, %struct.AFM_Parser_FuncsRec_** %58, align 8
  %60 = icmp eq %struct.AFM_Parser_FuncsRec_* %59, null
  br i1 %60, label %279, label %61

61:                                               ; preds = %41
  %62 = getelementptr inbounds %struct.AFM_Parser_FuncsRec_, %struct.AFM_Parser_FuncsRec_* %59, i64 0, i32 0
  %63 = load i32 (%struct.AFM_ParserRec_*, %struct.FT_MemoryRec_*, i8*, i8*)*, i32 (%struct.AFM_ParserRec_*, %struct.FT_MemoryRec_*, i8*, i8*)** %62, align 8
  %64 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %65 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 8
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 9
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 %63(%struct.AFM_ParserRec_* nonnull %4, %struct.FT_MemoryRec_* %64, i8* %66, i8* %68) #11
  store i32 %69, i32* %5, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %82

71:                                               ; preds = %61
  %72 = bitcast %struct.AFM_FontInfoRec_** %9 to i8**
  store i8* %32, i8** %72, align 8
  store i32 (i8*, i64, i8*)* @t1_get_index, i32 (i8*, i64, i8*)** %10, align 8
  %73 = bitcast i8** %11 to %struct.FT_FaceRec_**
  store %struct.FT_FaceRec_* %14, %struct.FT_FaceRec_** %73, align 8
  %74 = load %struct.AFM_Parser_FuncsRec_*, %struct.AFM_Parser_FuncsRec_** %58, align 8
  %75 = getelementptr inbounds %struct.AFM_Parser_FuncsRec_, %struct.AFM_Parser_FuncsRec_* %74, i64 0, i32 2
  %76 = load i32 (%struct.AFM_ParserRec_*)*, i32 (%struct.AFM_ParserRec_*)** %75, align 8
  %77 = call i32 %76(%struct.AFM_ParserRec_* nonnull %4) #11
  store i32 %77, i32* %5, align 4
  %78 = load %struct.AFM_Parser_FuncsRec_*, %struct.AFM_Parser_FuncsRec_** %58, align 8
  %79 = getelementptr inbounds %struct.AFM_Parser_FuncsRec_, %struct.AFM_Parser_FuncsRec_* %78, i64 0, i32 1
  %80 = load void (%struct.AFM_ParserRec_*)*, void (%struct.AFM_ParserRec_*)** %79, align 8
  call void %80(%struct.AFM_ParserRec_* nonnull %4) #11
  %81 = load i32, i32* %5, align 4
  br label %82

82:                                               ; preds = %61, %71
  %83 = phi i32 [ %69, %61 ], [ %81, %71 ]
  %84 = and i32 %83, 255
  %85 = icmp eq i32 %84, 2
  br i1 %85, label %86, label %276

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 8
  %88 = load i8*, i8** %87, align 8
  %89 = load i64, i64* %37, align 8
  %90 = icmp ugt i64 %89, 6
  br i1 %90, label %91, label %276

91:                                               ; preds = %86
  %92 = getelementptr inbounds i8, i8* %88, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp ult i8 %93, 4
  br i1 %94, label %95, label %276

95:                                               ; preds = %91
  %96 = getelementptr inbounds i8, i8* %88, i64 2
  %97 = getelementptr inbounds i8, i8* %88, i64 5
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = shl nuw nsw i64 %99, 24
  %101 = getelementptr inbounds i8, i8* %88, i64 4
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i64
  %104 = shl nuw nsw i64 %103, 16
  %105 = or i64 %104, %100
  %106 = getelementptr inbounds i8, i8* %88, i64 3
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i64
  %109 = shl nuw nsw i64 %108, 8
  %110 = or i64 %105, %109
  %111 = load i8, i8* %96, align 1
  %112 = zext i8 %111 to i64
  %113 = or i64 %110, %112
  %114 = icmp eq i64 %113, %89
  br i1 %114, label %115, label %276

115:                                              ; preds = %95
  %116 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116) #11
  store i32 0, i32* %3, align 4
  %117 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %118 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 9
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds i8, i8* %88, i64 99
  %121 = getelementptr inbounds i8, i8* %88, i64 101
  %122 = icmp ugt i8* %121, %119
  br i1 %122, label %123, label %124

123:                                              ; preds = %115
  store i32 2, i32* %3, align 4
  br label %266

124:                                              ; preds = %115
  %125 = getelementptr inbounds i8, i8* %88, i64 100
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = shl nuw nsw i64 %127, 8
  %129 = load i8, i8* %120, align 1
  %130 = zext i8 %129 to i64
  %131 = or i64 %128, %130
  %132 = add nuw nsw i64 %131, 18
  %133 = getelementptr inbounds i8, i8* %120, i64 %132
  %134 = getelementptr inbounds i8, i8* %133, i64 18
  %135 = icmp ugt i8* %134, %119
  br i1 %135, label %274, label %136

136:                                              ; preds = %124
  %137 = getelementptr inbounds i8, i8* %133, i64 1
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl nuw nsw i32 %139, 8
  %141 = load i8, i8* %133, align 1
  %142 = zext i8 %141 to i32
  %143 = or i32 %140, %142
  %144 = icmp ult i32 %143, 18
  br i1 %144, label %274, label %145

145:                                              ; preds = %136
  %146 = getelementptr inbounds i8, i8* %133, i64 14
  %147 = getelementptr inbounds i8, i8* %146, i64 3
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i64
  %150 = shl nuw nsw i64 %149, 24
  %151 = getelementptr inbounds i8, i8* %146, i64 2
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i64
  %154 = shl nuw nsw i64 %153, 16
  %155 = or i64 %154, %150
  %156 = getelementptr inbounds i8, i8* %146, i64 1
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = shl nuw nsw i64 %158, 8
  %160 = or i64 %155, %159
  %161 = load i8, i8* %146, align 1
  %162 = zext i8 %161 to i64
  %163 = or i64 %160, %162
  %164 = getelementptr inbounds i8, i8* %88, i64 %163
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %274, label %166

166:                                              ; preds = %145
  %167 = getelementptr inbounds i8, i8* %164, i64 2
  %168 = icmp ugt i8* %167, %119
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  store i32 2, i32* %3, align 4
  br label %266

170:                                              ; preds = %166
  %171 = getelementptr inbounds i8, i8* %164, i64 1
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = shl nuw nsw i32 %173, 8
  %175 = load i8, i8* %164, align 1
  %176 = zext i8 %175 to i32
  %177 = or i32 %174, %176
  %178 = getelementptr inbounds i8, i8* %32, i64 80
  %179 = bitcast i8* %178 to i32*
  store i32 %177, i32* %179, align 8
  %180 = shl nuw nsw i32 %177, 2
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %167, i64 %181
  %183 = icmp ugt i8* %182, %119
  br i1 %183, label %184, label %185

184:                                              ; preds = %170
  store i32 2, i32* %3, align 4
  br label %266

185:                                              ; preds = %170
  %186 = icmp eq i32 %177, 0
  br i1 %186, label %274, label %187

187:                                              ; preds = %185
  %188 = zext i32 %177 to i64
  %189 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %117, i64 16, i64 0, i64 %188, i8* null, i32* nonnull %3) #11
  %190 = bitcast i8* %189 to %struct.AFM_KernPairRec_*
  %191 = getelementptr inbounds i8, i8* %32, i64 72
  %192 = bitcast i8* %191 to i8**
  store i8* %189, i8** %192, align 8
  %193 = load i32, i32* %3, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %266

195:                                              ; preds = %187
  %196 = load i32, i32* %179, align 8
  %197 = shl i32 %196, 2
  %198 = or i32 %197, 2
  %199 = zext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %164, i64 %199
  %201 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  %202 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %201, align 8
  %203 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %204 = load i32, i32* %203, align 8
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %206, label %223

206:                                              ; preds = %195
  %207 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %208 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %207, align 8
  %209 = sext i32 %204 to i64
  br label %212

210:                                              ; preds = %212
  %211 = icmp eq i64 %219, %209
  br i1 %211, label %223, label %212

212:                                              ; preds = %210, %206
  %213 = phi i64 [ 0, %206 ], [ %219, %210 ]
  %214 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %208, i64 %213
  %215 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %214, align 8
  %216 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %215, i64 0, i32 2
  %217 = load i16, i16* %216, align 4
  %218 = icmp eq i16 %217, 7
  %219 = add nuw nsw i64 %213, 1
  br i1 %218, label %220, label %210

220:                                              ; preds = %212
  %221 = call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* %0, %struct.FT_CharMapRec_* %215) #11
  store i32 %221, i32* %3, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %266

223:                                              ; preds = %210, %220, %195
  %224 = icmp eq i32 %198, 2
  br i1 %224, label %251, label %225

225:                                              ; preds = %223, %225
  %226 = phi %struct.AFM_KernPairRec_* [ %248, %225 ], [ %190, %223 ]
  %227 = phi i8* [ %249, %225 ], [ %167, %223 ]
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i64
  %230 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %0, i64 %229) #11
  %231 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %226, i64 0, i32 0
  store i32 %230, i32* %231, align 4
  %232 = getelementptr inbounds i8, i8* %227, i64 1
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %0, i64 %234) #11
  %236 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %226, i64 0, i32 1
  store i32 %235, i32* %236, align 4
  %237 = getelementptr inbounds i8, i8* %227, i64 2
  %238 = getelementptr inbounds i8, i8* %227, i64 3
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i16
  %241 = shl nuw i16 %240, 8
  %242 = load i8, i8* %237, align 1
  %243 = zext i8 %242 to i16
  %244 = or i16 %241, %243
  %245 = sext i16 %244 to i32
  %246 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %226, i64 0, i32 2
  store i32 %245, i32* %246, align 4
  %247 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %226, i64 0, i32 3
  store i32 0, i32* %247, align 4
  %248 = getelementptr inbounds %struct.AFM_KernPairRec_, %struct.AFM_KernPairRec_* %226, i64 1
  %249 = getelementptr inbounds i8, i8* %227, i64 4
  %250 = icmp ult i8* %249, %200
  br i1 %250, label %225, label %251

251:                                              ; preds = %225, %223
  %252 = icmp eq %struct.FT_CharMapRec_* %202, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %251
  %254 = call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* %0, %struct.FT_CharMapRec_* nonnull %202) #11
  store i32 %254, i32* %3, align 4
  br label %257

255:                                              ; preds = %251
  %256 = load i32, i32* %3, align 4
  br label %257

257:                                              ; preds = %255, %253
  %258 = phi i32 [ %256, %255 ], [ %254, %253 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %266

260:                                              ; preds = %257
  %261 = load i8*, i8** %192, align 8
  %262 = load i32, i32* %179, align 8
  %263 = zext i32 %262 to i64
  call void @qsort(i8* %261, i64 %263, i64 16, i32 (i8*, i8*)* nonnull @compare_kern_pairs) #11
  %264 = load i32, i32* %3, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %274, label %266

266:                                              ; preds = %260, %257, %220, %187, %184, %169, %123
  %267 = getelementptr inbounds i8, i8* %32, i64 72
  %268 = bitcast i8* %267 to %struct.AFM_KernPairRec_**
  %269 = bitcast i8* %267 to i8**
  %270 = load i8*, i8** %269, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %117, i8* %270) #11
  store %struct.AFM_KernPairRec_* null, %struct.AFM_KernPairRec_** %268, align 8
  %271 = getelementptr inbounds i8, i8* %32, i64 80
  %272 = bitcast i8* %271 to i32*
  store i32 0, i32* %272, align 8
  %273 = load i32, i32* %3, align 4
  br label %274

274:                                              ; preds = %124, %136, %145, %185, %260, %266
  %275 = phi i32 [ 0, %260 ], [ %273, %266 ], [ 0, %185 ], [ 0, %145 ], [ 0, %124 ], [ 0, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116) #11
  store i32 %275, i32* %5, align 4
  br label %276

276:                                              ; preds = %86, %91, %95, %274, %82
  %277 = phi i32 [ %275, %274 ], [ %83, %82 ], [ %83, %95 ], [ %83, %91 ], [ %83, %86 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %319

279:                                              ; preds = %41, %276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %42, i64 32, i1 false)
  %280 = bitcast i8* %42 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = ashr i64 %281, 16
  %283 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 12, i32 0
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds i8, i8* %32, i64 16
  %285 = bitcast i8* %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = ashr i64 %286, 16
  %288 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 12, i32 1
  store i64 %287, i64* %288, align 8
  %289 = getelementptr inbounds i8, i8* %32, i64 24
  %290 = bitcast i8* %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = add nsw i64 %291, 65535
  %293 = ashr i64 %292, 16
  %294 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 12, i32 2
  store i64 %293, i64* %294, align 8
  %295 = getelementptr inbounds i8, i8* %32, i64 32
  %296 = bitcast i8* %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = add nsw i64 %297, 65535
  %299 = ashr i64 %298, 16
  %300 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 12, i32 3
  store i64 %299, i64* %300, align 8
  %301 = load i64, i64* %49, align 8
  %302 = add nsw i64 %301, 32768
  %303 = lshr i64 %302, 16
  %304 = trunc i64 %303 to i16
  %305 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 14
  store i16 %304, i16* %305, align 2
  %306 = load i64, i64* %54, align 8
  %307 = add nsw i64 %306, 32768
  %308 = lshr i64 %307, 16
  %309 = trunc i64 %308 to i16
  %310 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 15
  store i16 %309, i16* %310, align 4
  %311 = getelementptr inbounds i8, i8* %32, i64 80
  %312 = bitcast i8* %311 to i32*
  %313 = load i32, i32* %312, align 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %319, label %315

315:                                              ; preds = %279
  %316 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %317 = load i64, i64* %316, align 8
  %318 = or i64 %317, 64
  store i64 %318, i64* %316, align 8
  store i8* %32, i8** %15, align 8
  br label %319

319:                                              ; preds = %279, %276, %315
  %320 = phi %struct.AFM_FontInfoRec_* [ %33, %276 ], [ null, %315 ], [ %33, %279 ]
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #11
  br label %321

321:                                              ; preds = %36, %31, %319
  %322 = phi %struct.AFM_FontInfoRec_* [ %33, %31 ], [ %33, %36 ], [ %320, %319 ]
  %323 = icmp eq %struct.AFM_FontInfoRec_* %322, null
  br i1 %323, label %334, label %324

324:                                              ; preds = %321
  %325 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %322, i64 0, i32 6
  %326 = bitcast %struct.AFM_KernPairRec_** %325 to i8**
  %327 = load i8*, i8** %326, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %327) #11
  store %struct.AFM_KernPairRec_* null, %struct.AFM_KernPairRec_** %325, align 8
  %328 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %322, i64 0, i32 7
  store i32 0, i32* %328, align 8
  %329 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %322, i64 0, i32 4
  %330 = bitcast %struct.AFM_TrackKernRec_** %329 to i8**
  %331 = load i8*, i8** %330, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %331) #11
  store %struct.AFM_TrackKernRec_* null, %struct.AFM_TrackKernRec_** %329, align 8
  %332 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %322, i64 0, i32 5
  store i32 0, i32* %332, align 8
  %333 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %322, i64 0, i32 0
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %333) #11
  br label %334

334:                                              ; preds = %321, %324
  %335 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #11
  ret i32 %335
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Get_Advances(%struct.FT_FaceRec_*, i32, i32, i32, i64* nocapture) #0 {
  %6 = bitcast i64* %4 to i8*
  %7 = alloca %struct.FT_Data_, align 8
  %8 = alloca i8, align 1
  %9 = alloca %struct.T1_DecoderRec_, align 8
  %10 = bitcast %struct.T1_DecoderRec_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 5048, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 5048, i1 false)
  %11 = and i32 %3, 16
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %96, label %15

15:                                               ; preds = %13
  %16 = zext i32 %2 to i64
  %17 = shl nuw nsw i64 %16, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 %17, i1 false)
  br label %96

18:                                               ; preds = %5
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 5
  %20 = bitcast i8** %19 to %struct.PSAux_ServiceRec_**
  %21 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %20, align 8
  %22 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %21, i64 0, i32 3
  %23 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %22, align 8
  %24 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %23, i64 0, i32 0
  %25 = load i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)** %24, align 8
  %26 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 21
  %27 = bitcast %struct.FT_GlyphSlotRec_** %26 to i8***
  %28 = load i8**, i8*** %27, align 8
  %29 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 12
  %30 = bitcast %struct.FT_BBox_* %29 to %struct.PS_BlendRec_**
  %31 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %30, align 8
  %32 = call i32 %25(%struct.T1_DecoderRec_* nonnull %9, %struct.FT_FaceRec_* %0, %struct.FT_SizeRec_* null, %struct.FT_GlyphSlotRec_* null, i8** %28, %struct.PS_BlendRec_* %31, i8 zeroext 0, i32 0, i32 (%struct.T1_DecoderRec_*, i32)* nonnull @T1_Parse_Glyph) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %96

34:                                               ; preds = %18
  %35 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %9, i64 0, i32 0, i32 14
  store i8 1, i8* %35, align 2
  %36 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %9, i64 0, i32 0, i32 12
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 1
  %38 = bitcast i64* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %9, i64 0, i32 9
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 2
  %42 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %9, i64 0, i32 10
  %43 = bitcast i64* %41 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = bitcast i8*** %42 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 13
  %47 = bitcast i16* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %9, i64 0, i32 12
  %50 = bitcast %struct.FT_HashRec_** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 12, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %9, i64 0, i32 22
  %54 = bitcast i64** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 12, i32 2
  %56 = bitcast i64* %55 to i32*
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %9, i64 0, i32 23
  store i32 %57, i32* %58, align 8
  %59 = icmp eq i32 %2, 0
  br i1 %59, label %96, label %60

60:                                               ; preds = %34
  %61 = bitcast %struct.FT_Data_* %7 to i8*
  %62 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %9, i64 0, i32 0, i32 1
  %63 = bitcast %struct.FT_FaceRec_** %62 to %struct.T1_FaceRec_**
  %64 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %9, i64 0, i32 0, i32 9, i32 0
  %65 = zext i32 %2 to i64
  br label %66

66:                                               ; preds = %91, %60
  %67 = phi i64 [ 0, %60 ], [ %94, %91 ]
  %68 = trunc i64 %67 to i32
  %69 = add i32 %68, %1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 0, i8* %8, align 1
  %70 = call fastcc i32 @T1_Parse_Glyph_And_Get_Char_String(%struct.T1_DecoderRec_* nonnull %9, i32 %69, %struct.FT_Data_* nonnull %7, i8* nonnull %8) #11
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %90

72:                                               ; preds = %66
  %73 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %63, align 8
  %74 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %73, i64 0, i32 0, i32 30
  %75 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %74, align 8
  %76 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %75, i64 0, i32 4
  %77 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %76, align 8
  %78 = icmp eq %struct.FT_Incremental_InterfaceRec_* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %77, i64 0, i32 0
  %81 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %80, align 8
  %82 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %81, i64 0, i32 1
  %83 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %82, align 8
  %84 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %77, i64 0, i32 1
  %85 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %84, align 8
  call void %83(%struct.FT_IncrementalRec_* %85, %struct.FT_Data_* nonnull %7) #11
  br label %86

86:                                               ; preds = %72, %79
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #11
  %87 = load i64, i64* %64, align 8
  %88 = call i64 @FT_RoundFix(i64 %87) #11
  %89 = ashr i64 %88, 16
  br label %91

90:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #11
  br label %91

91:                                               ; preds = %90, %86
  %92 = phi i64 [ 0, %90 ], [ %89, %86 ]
  %93 = getelementptr inbounds i64, i64* %4, i64 %67
  store i64 %92, i64* %93, align 8
  %94 = add nuw nsw i64 %67, 1
  %95 = icmp eq i64 %94, %65
  br i1 %95, label %96, label %66

96:                                               ; preds = %91, %15, %34, %13, %18
  %97 = phi i32 [ %32, %18 ], [ 0, %34 ], [ 0, %13 ], [ 0, %15 ], [ 0, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 5048, i8* nonnull %10) #11
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Size_Request(%struct.FT_SizeRec_* nocapture readonly, %struct.FT_Size_RequestRec_*) #0 {
  %3 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 3, i32 13
  %6 = bitcast i16* %5 to %struct.PSHinter_Interface_**
  %7 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 24
  %9 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %9, i64 0, i32 0, i32 1
  %11 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %10, align 8
  %12 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #11
  %13 = icmp ne %struct.FT_ModuleRec_* %12, null
  %14 = icmp ne %struct.PSHinter_Interface_* %7, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %7, i64 0, i32 0
  %18 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %17, align 8
  %19 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %16, %2
  %21 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  tail call void @FT_Request_Metrics(%struct.FT_FaceRec_* %21, %struct.FT_Size_RequestRec_* %1) #11
  br label %37

22:                                               ; preds = %16
  %23 = tail call %struct.PSH_Globals_FuncsRec_* %18(%struct.FT_ModuleRec_* nonnull %12) #11
  %24 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  tail call void @FT_Request_Metrics(%struct.FT_FaceRec_* %24, %struct.FT_Size_RequestRec_* %1) #11
  %25 = icmp eq %struct.PSH_Globals_FuncsRec_* %23, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %23, i64 0, i32 1
  %28 = load void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)** %27, align 8
  %29 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %30 = bitcast %struct.FT_Size_InternalRec_** %29 to %struct.PSH_GlobalsRec_***
  %31 = load %struct.PSH_GlobalsRec_**, %struct.PSH_GlobalsRec_*** %30, align 8
  %32 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %31, align 8
  %33 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2, i32 3
  %36 = load i64, i64* %35, align 8
  tail call void %28(%struct.PSH_GlobalsRec_* %32, i64 %34, i64 %36, i64 0, i64 0) #11
  br label %37

37:                                               ; preds = %20, %22, %26
  ret i32 0
}

declare hidden i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @t1_get_ps_name(%struct.T1_FaceRec_* nocapture readonly) #4 {
  %2 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 3
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_get_glyph_name(%struct.T1_FaceRec_* nocapture readonly, i32, i8*, i32) #0 {
  %5 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 14
  %6 = load i8**, i8*** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds i8*, i8** %6, i64 %7
  %9 = load i8*, i8** %8, align 8
  %10 = zext i32 %3 to i64
  %11 = tail call i32 @ft_mem_strcpyn(i8* %2, i8* %9, i64 %10) #11
  ret i32 0
}

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @t1_get_name_index(%struct.T1_FaceRec_* nocapture readonly, i8* nocapture readonly) #5 {
  %3 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 13
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 14
  %8 = load i8**, i8*** %7, align 8
  %9 = sext i32 %4 to i64
  br label %12

10:                                               ; preds = %12
  %11 = icmp slt i64 %18, %9
  br i1 %11, label %12, label %21

12:                                               ; preds = %6, %10
  %13 = phi i64 [ 0, %6 ], [ %18, %10 ]
  %14 = getelementptr inbounds i8*, i8** %8, i64 %13
  %15 = load i8*, i8** %14, align 8
  %16 = tail call i32 @strcmp(i8* %1, i8* %15) #12
  %17 = icmp eq i32 %16, 0
  %18 = add nuw nsw i64 %13, 1
  br i1 %17, label %19, label %10

19:                                               ; preds = %12
  %20 = trunc i64 %13 to i32
  br label %21

21:                                               ; preds = %10, %19, %2
  %22 = phi i32 [ 0, %2 ], [ %20, %19 ], [ 0, %10 ]
  ret i32 %22
}

declare hidden i32 @ft_mem_strcpyn(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_ps_get_font_info(%struct.FT_FaceRec_* nocapture readonly, %struct.PS_FontInfoRec_* nocapture) #0 {
  %3 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1
  %4 = bitcast %struct.PS_FontInfoRec_* %1 to i8*
  %5 = bitcast %struct.FT_FaceRec_* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 56, i1 false)
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @t1_ps_get_font_extra(%struct.FT_FaceRec_* nocapture readonly, %struct.PS_FontExtraRec_* nocapture) #2 {
  %3 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 7
  %4 = bitcast i32* %3 to i16*
  %5 = getelementptr inbounds %struct.PS_FontExtraRec_, %struct.PS_FontExtraRec_* %1, i64 0, i32 0
  %6 = load i16, i16* %4, align 8
  store i16 %6, i16* %5, align 2
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @t1_ps_has_glyph_names(%struct.FT_FaceRec_* nocapture readnone) #1 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @t1_ps_get_font_private(%struct.FT_FaceRec_* nocapture readonly, %struct.PS_PrivateRec_* nocapture) #0 {
  %3 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %4 = bitcast %struct.PS_PrivateRec_* %1 to i8*
  %5 = bitcast %struct.FT_Bitmap_Size_** %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 224, i1 false)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @t1_ps_get_font_value(%struct.FT_FaceRec_* readonly, i32, i32, i8*, i64) #0 {
  %6 = icmp sgt i64 %4, 0
  %7 = select i1 %6, i64 %4, i64 0
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1
  %9 = bitcast %struct.FT_FaceRec_* %8 to %struct.T1_FontRec_*
  switch i32 %1, label %603 [
    i32 0, label %10
    i32 1, label %17
    i32 2, label %42
    i32 3, label %67
    i32 4, label %75
    i32 5, label %86
    i32 6, label %95
    i32 7, label %104
    i32 8, label %123
    i32 9, label %148
    i32 10, label %157
    i32 11, label %180
    i32 12, label %189
    i32 13, label %228
    i32 14, label %238
    i32 15, label %248
    i32 16, label %257
    i32 24, label %274
    i32 17, label %284
    i32 25, label %294
    i32 18, label %304
    i32 19, label %313
    i32 20, label %331
    i32 21, label %340
    i32 22, label %356
    i32 23, label %365
    i32 26, label %383
    i32 27, label %392
    i32 28, label %410
    i32 29, label %419
    i32 31, label %435
    i32 30, label %444
    i32 32, label %453
    i32 33, label %467
    i32 34, label %477
    i32 35, label %487
    i32 41, label %497
    i32 42, label %505
    i32 43, label %514
    i32 44, label %523
    i32 36, label %532
    i32 37, label %543
    i32 38, label %555
    i32 39, label %567
    i32 40, label %579
    i32 45, label %591
  ]

10:                                               ; preds = %5
  %11 = icmp eq i8* %3, null
  %12 = xor i1 %6, true
  %13 = or i1 %11, %12
  br i1 %13, label %604, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.T1_FontRec_, %struct.T1_FontRec_* %9, i64 0, i32 18
  %16 = load i8, i8* %15, align 1
  store i8 %16, i8* %3, align 1
  br label %604

17:                                               ; preds = %5
  %18 = icmp ult i32 %2, 4
  br i1 %18, label %19, label %603

19:                                               ; preds = %17
  %20 = icmp ne i8* %3, null
  %21 = icmp ugt i64 %7, 7
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %604

23:                                               ; preds = %19
  switch i32 %2, label %39 [
    i32 0, label %24
    i32 1, label %26
    i32 2, label %29
    i32 3, label %32
  ]

24:                                               ; preds = %23
  %25 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 25
  br label %35

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 25
  %28 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %27, i64 1
  br label %35

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 25
  %31 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %30, i64 2
  br label %35

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 25
  %34 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %33, i64 3
  br label %35

35:                                               ; preds = %24, %26, %29, %32
  %36 = phi %struct.FT_MemoryRec_** [ %34, %32 ], [ %31, %29 ], [ %28, %26 ], [ %25, %24 ]
  %37 = bitcast %struct.FT_MemoryRec_** %36 to i64*
  %38 = load i64, i64* %37, align 8
  br label %39

39:                                               ; preds = %35, %23
  %40 = phi i64 [ 0, %23 ], [ %38, %35 ]
  %41 = bitcast i8* %3 to i64*
  store i64 %40, i64* %41, align 8
  br label %604

42:                                               ; preds = %5
  %43 = icmp ult i32 %2, 4
  br i1 %43, label %44, label %603

44:                                               ; preds = %42
  %45 = icmp ne i8* %3, null
  %46 = icmp ugt i64 %7, 7
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %604

48:                                               ; preds = %44
  switch i32 %2, label %64 [
    i32 0, label %49
    i32 1, label %51
    i32 2, label %54
    i32 3, label %57
  ]

49:                                               ; preds = %48
  %50 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 29
  br label %60

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 29
  %53 = getelementptr inbounds i8*, i8** %52, i64 1
  br label %60

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 29
  %56 = getelementptr inbounds i8*, i8** %55, i64 2
  br label %60

57:                                               ; preds = %48
  %58 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 29
  %59 = getelementptr inbounds i8*, i8** %58, i64 3
  br label %60

60:                                               ; preds = %49, %51, %54, %57
  %61 = phi i8** [ %59, %57 ], [ %56, %54 ], [ %53, %51 ], [ %50, %49 ]
  %62 = bitcast i8** %61 to i64*
  %63 = load i64, i64* %62, align 8
  br label %64

64:                                               ; preds = %60, %48
  %65 = phi i64 [ 0, %48 ], [ %63, %60 ]
  %66 = bitcast i8* %3 to i64*
  store i64 %65, i64* %66, align 8
  br label %604

67:                                               ; preds = %5
  %68 = icmp eq i8* %3, null
  %69 = xor i1 %6, true
  %70 = or i1 %68, %69
  br i1 %70, label %604, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 24
  %73 = bitcast %struct.FT_DriverRec_** %72 to i8*
  %74 = load i8, i8* %73, align 8
  store i8 %74, i8* %3, align 1
  br label %604

75:                                               ; preds = %5
  %76 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 5
  %77 = load i8*, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %603, label %79

79:                                               ; preds = %75
  %80 = tail call i64 @strlen(i8* nonnull %77) #12
  %81 = add i64 %80, 1
  %82 = icmp eq i8* %3, null
  %83 = icmp ult i64 %7, %81
  %84 = or i1 %82, %83
  br i1 %84, label %600, label %85

85:                                               ; preds = %79
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* nonnull align 1 %77, i64 %81, i1 false)
  br label %600

86:                                               ; preds = %5
  %87 = icmp ne i8* %3, null
  %88 = icmp ugt i64 %7, 3
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %604

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %92 = bitcast %struct.FT_Bitmap_Size_** %91 to i32*
  %93 = load i32, i32* %92, align 8
  %94 = bitcast i8* %3 to i32*
  store i32 %93, i32* %94, align 4
  br label %604

95:                                               ; preds = %5
  %96 = icmp ne i8* %3, null
  %97 = icmp ugt i64 %7, 3
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %604

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 17
  %101 = bitcast i16* %100 to i32*
  %102 = load i32, i32* %101, align 8
  %103 = bitcast i8* %3 to i32*
  store i32 %102, i32* %103, align 4
  br label %604

104:                                              ; preds = %5
  %105 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 17
  %106 = bitcast i16* %105 to i32*
  %107 = load i32, i32* %106, align 8
  %108 = icmp ugt i32 %107, %2
  br i1 %108, label %109, label %603

109:                                              ; preds = %104
  %110 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 21
  %111 = bitcast %struct.FT_GlyphSlotRec_** %110 to i8***
  %112 = load i8**, i8*** %111, align 8
  %113 = zext i32 %2 to i64
  %114 = getelementptr inbounds i8*, i8** %112, i64 %113
  %115 = load i8*, i8** %114, align 8
  %116 = tail call i64 @strlen(i8* %115) #12
  %117 = add i64 %116, 1
  %118 = icmp eq i8* %3, null
  %119 = icmp ult i64 %7, %117
  %120 = or i1 %118, %119
  br i1 %120, label %600, label %121

121:                                              ; preds = %109
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 1 %115, i64 %117, i1 false)
  %122 = getelementptr inbounds i8, i8* %3, i64 %116
  store i8 0, i8* %122, align 1
  br label %600

123:                                              ; preds = %5
  %124 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 17
  %125 = bitcast i16* %124 to i32*
  %126 = load i32, i32* %125, align 8
  %127 = icmp ugt i32 %126, %2
  br i1 %127, label %128, label %603

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 23
  %130 = bitcast %struct.FT_CharMapRec_** %129 to i32**
  %131 = load i32*, i32** %130, align 8
  %132 = zext i32 %2 to i64
  %133 = getelementptr inbounds i32, i32* %131, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, 1
  %136 = zext i32 %135 to i64
  %137 = icmp eq i8* %3, null
  %138 = icmp ult i64 %7, %136
  %139 = or i1 %137, %138
  br i1 %139, label %600, label %140

140:                                              ; preds = %128
  %141 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 22
  %142 = bitcast %struct.FT_SizeRec_** %141 to i8***
  %143 = load i8**, i8*** %142, align 8
  %144 = getelementptr inbounds i8*, i8** %143, i64 %132
  %145 = load i8*, i8** %144, align 8
  %146 = add nsw i64 %136, -1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 1 %145, i64 %146, i1 false)
  %147 = getelementptr inbounds i8, i8* %3, i64 %146
  store i8 0, i8* %147, align 1
  br label %600

148:                                              ; preds = %5
  %149 = icmp ne i8* %3, null
  %150 = icmp ugt i64 %7, 3
  %151 = and i1 %149, %150
  br i1 %151, label %152, label %604

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 6
  %154 = bitcast i8** %153 to i32*
  %155 = load i32, i32* %154, align 8
  %156 = bitcast i8* %3 to i32*
  store i32 %155, i32* %156, align 4
  br label %604

157:                                              ; preds = %5
  %158 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 6
  %159 = bitcast i8** %158 to i32*
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %603

162:                                              ; preds = %157
  %163 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 7
  %164 = load i32, i32* %163, align 8
  %165 = icmp ugt i32 %164, %2
  br i1 %165, label %166, label %603

166:                                              ; preds = %162
  %167 = getelementptr inbounds i32, i32* %163, i64 6
  %168 = bitcast i32* %167 to i8***
  %169 = load i8**, i8*** %168, align 8
  %170 = zext i32 %2 to i64
  %171 = getelementptr inbounds i8*, i8** %169, i64 %170
  %172 = load i8*, i8** %171, align 8
  %173 = tail call i64 @strlen(i8* %172) #12
  %174 = add i64 %173, 1
  %175 = icmp eq i8* %3, null
  %176 = icmp ult i64 %7, %174
  %177 = or i1 %175, %176
  br i1 %177, label %600, label %178

178:                                              ; preds = %166
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 1 %172, i64 %173, i1 false)
  %179 = getelementptr inbounds i8, i8* %3, i64 %173
  store i8 0, i8* %179, align 1
  br label %600

180:                                              ; preds = %5
  %181 = icmp ne i8* %3, null
  %182 = icmp ugt i64 %7, 3
  %183 = and i1 %181, %182
  br i1 %183, label %184, label %604

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 1
  %186 = bitcast i64* %185 to i32*
  %187 = load i32, i32* %186, align 8
  %188 = bitcast i8* %3 to i32*
  store i32 %187, i32* %188, align 4
  br label %604

189:                                              ; preds = %5
  %190 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 13
  %191 = bitcast i16* %190 to %struct.FT_HashRec_**
  %192 = load %struct.FT_HashRec_*, %struct.FT_HashRec_** %191, align 8
  %193 = icmp eq %struct.FT_HashRec_* %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %189
  %195 = tail call i64* @ft_hash_num_lookup(i32 %2, %struct.FT_HashRec_* nonnull %192) #11
  %196 = icmp eq i64* %195, null
  br i1 %196, label %603, label %197

197:                                              ; preds = %194
  %198 = load i64, i64* %195, align 8
  %199 = trunc i64 %198 to i32
  br label %205

200:                                              ; preds = %189
  %201 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 1
  %202 = bitcast i64* %201 to i32*
  %203 = load i32, i32* %202, align 8
  %204 = icmp ugt i32 %203, %2
  br i1 %204, label %205, label %603

205:                                              ; preds = %200, %197
  %206 = phi i32 [ %199, %197 ], [ %2, %200 ]
  %207 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 2
  %208 = bitcast i64* %207 to i8***
  %209 = load i8**, i8*** %208, align 8
  %210 = icmp eq i8** %209, null
  br i1 %210, label %603, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 3
  %213 = bitcast i64* %212 to i32**
  %214 = load i32*, i32** %213, align 8
  %215 = zext i32 %206 to i64
  %216 = getelementptr inbounds i32, i32* %214, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = add i32 %217, 1
  %219 = zext i32 %218 to i64
  %220 = icmp eq i8* %3, null
  %221 = icmp ult i64 %7, %219
  %222 = or i1 %220, %221
  br i1 %222, label %600, label %223

223:                                              ; preds = %211
  %224 = getelementptr inbounds i8*, i8** %209, i64 %215
  %225 = load i8*, i8** %224, align 8
  %226 = add nsw i64 %219, -1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 1 %225, i64 %226, i1 false)
  %227 = getelementptr inbounds i8, i8* %3, i64 %226
  store i8 0, i8* %227, align 1
  br label %600

228:                                              ; preds = %5
  %229 = icmp ne i8* %3, null
  %230 = icmp ugt i64 %7, 1
  %231 = and i1 %229, %230
  br i1 %231, label %232, label %604

232:                                              ; preds = %228
  %233 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %234 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %233, i64 16
  %235 = bitcast %struct.FT_Bitmap_Size_** %234 to i16*
  %236 = load i16, i16* %235, align 8
  %237 = bitcast i8* %3 to i16*
  store i16 %236, i16* %237, align 2
  br label %604

238:                                              ; preds = %5
  %239 = icmp ne i8* %3, null
  %240 = icmp ugt i64 %7, 1
  %241 = and i1 %239, %240
  br i1 %241, label %242, label %604

242:                                              ; preds = %238
  %243 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %244 = bitcast %struct.FT_Bitmap_Size_** %243 to %struct.PS_PrivateRec_*
  %245 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %244, i64 0, i32 14, i64 0
  %246 = load i16, i16* %245, align 2
  %247 = bitcast i8* %3 to i16*
  store i16 %246, i16* %247, align 2
  br label %604

248:                                              ; preds = %5
  %249 = icmp eq i8* %3, null
  %250 = xor i1 %6, true
  %251 = or i1 %249, %250
  br i1 %251, label %604, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %254 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %253, i64 1
  %255 = bitcast %struct.FT_Bitmap_Size_** %254 to i8*
  %256 = load i8, i8* %255, align 8
  store i8 %256, i8* %3, align 1
  br label %604

257:                                              ; preds = %5
  %258 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %259 = bitcast %struct.FT_Bitmap_Size_** %258 to %struct.PS_PrivateRec_*
  %260 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %258, i64 1
  %261 = bitcast %struct.FT_Bitmap_Size_** %260 to i8*
  %262 = load i8, i8* %261, align 8
  %263 = zext i8 %262 to i32
  %264 = icmp ugt i32 %263, %2
  br i1 %264, label %265, label %603

265:                                              ; preds = %257
  %266 = icmp ne i8* %3, null
  %267 = icmp ugt i64 %7, 1
  %268 = and i1 %266, %267
  br i1 %268, label %269, label %604

269:                                              ; preds = %265
  %270 = zext i32 %2 to i64
  %271 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %259, i64 0, i32 6, i64 %270
  %272 = load i16, i16* %271, align 2
  %273 = bitcast i8* %3 to i16*
  store i16 %272, i16* %273, align 2
  br label %604

274:                                              ; preds = %5
  %275 = icmp ne i8* %3, null
  %276 = icmp ugt i64 %7, 7
  %277 = and i1 %275, %276
  br i1 %277, label %278, label %604

278:                                              ; preds = %274
  %279 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %280 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %279, i64 14
  %281 = bitcast %struct.FT_Bitmap_Size_** %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast i8* %3 to i64*
  store i64 %282, i64* %283, align 8
  br label %604

284:                                              ; preds = %5
  %285 = icmp ne i8* %3, null
  %286 = icmp ugt i64 %7, 3
  %287 = and i1 %285, %286
  br i1 %287, label %288, label %604

288:                                              ; preds = %284
  %289 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %290 = bitcast %struct.FT_Bitmap_Size_** %289 to %struct.PS_PrivateRec_*
  %291 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %290, i64 0, i32 12
  %292 = load i32, i32* %291, align 4
  %293 = bitcast i8* %3 to i32*
  store i32 %292, i32* %293, align 4
  br label %604

294:                                              ; preds = %5
  %295 = icmp ne i8* %3, null
  %296 = icmp ugt i64 %7, 3
  %297 = and i1 %295, %296
  br i1 %297, label %298, label %604

298:                                              ; preds = %294
  %299 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %300 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %299, i64 15
  %301 = bitcast %struct.FT_Bitmap_Size_** %300 to i32*
  %302 = load i32, i32* %301, align 8
  %303 = bitcast i8* %3 to i32*
  store i32 %302, i32* %303, align 4
  br label %604

304:                                              ; preds = %5
  %305 = icmp eq i8* %3, null
  %306 = xor i1 %6, true
  %307 = or i1 %305, %306
  br i1 %307, label %604, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %310 = bitcast %struct.FT_Bitmap_Size_** %309 to %struct.PS_PrivateRec_*
  %311 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %310, i64 0, i32 3
  %312 = load i8, i8* %311, align 1
  store i8 %312, i8* %3, align 1
  br label %604

313:                                              ; preds = %5
  %314 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %315 = bitcast %struct.FT_Bitmap_Size_** %314 to %struct.PS_PrivateRec_*
  %316 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %315, i64 0, i32 3
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  %319 = icmp ugt i32 %318, %2
  br i1 %319, label %320, label %603

320:                                              ; preds = %313
  %321 = icmp ne i8* %3, null
  %322 = icmp ugt i64 %7, 1
  %323 = and i1 %321, %322
  br i1 %323, label %324, label %604

324:                                              ; preds = %320
  %325 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %314, i64 5
  %326 = bitcast %struct.FT_Bitmap_Size_** %325 to [10 x i16]*
  %327 = zext i32 %2 to i64
  %328 = getelementptr inbounds [10 x i16], [10 x i16]* %326, i64 0, i64 %327
  %329 = load i16, i16* %328, align 2
  %330 = bitcast i8* %3 to i16*
  store i16 %329, i16* %330, align 2
  br label %604

331:                                              ; preds = %5
  %332 = icmp eq i8* %3, null
  %333 = xor i1 %6, true
  %334 = or i1 %332, %333
  br i1 %334, label %604, label %335

335:                                              ; preds = %331
  %336 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %337 = bitcast %struct.FT_Bitmap_Size_** %336 to %struct.PS_PrivateRec_*
  %338 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %337, i64 0, i32 4
  %339 = load i8, i8* %338, align 2
  store i8 %339, i8* %3, align 1
  br label %604

340:                                              ; preds = %5
  %341 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %342 = bitcast %struct.FT_Bitmap_Size_** %341 to %struct.PS_PrivateRec_*
  %343 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %342, i64 0, i32 4
  %344 = load i8, i8* %343, align 2
  %345 = zext i8 %344 to i32
  %346 = icmp ugt i32 %345, %2
  br i1 %346, label %347, label %603

347:                                              ; preds = %340
  %348 = icmp ne i8* %3, null
  %349 = icmp ugt i64 %7, 1
  %350 = and i1 %348, %349
  br i1 %350, label %351, label %604

351:                                              ; preds = %347
  %352 = zext i32 %2 to i64
  %353 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %342, i64 0, i32 8, i64 %352
  %354 = load i16, i16* %353, align 2
  %355 = bitcast i8* %3 to i16*
  store i16 %354, i16* %355, align 2
  br label %604

356:                                              ; preds = %5
  %357 = icmp eq i8* %3, null
  %358 = xor i1 %6, true
  %359 = or i1 %357, %358
  br i1 %359, label %604, label %360

360:                                              ; preds = %356
  %361 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %362 = bitcast %struct.FT_Bitmap_Size_** %361 to %struct.PS_PrivateRec_*
  %363 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %362, i64 0, i32 5
  %364 = load i8, i8* %363, align 1
  store i8 %364, i8* %3, align 1
  br label %604

365:                                              ; preds = %5
  %366 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %367 = bitcast %struct.FT_Bitmap_Size_** %366 to %struct.PS_PrivateRec_*
  %368 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %367, i64 0, i32 5
  %369 = load i8, i8* %368, align 1
  %370 = zext i8 %369 to i32
  %371 = icmp ugt i32 %370, %2
  br i1 %371, label %372, label %603

372:                                              ; preds = %365
  %373 = icmp ne i8* %3, null
  %374 = icmp ugt i64 %7, 1
  %375 = and i1 %373, %374
  br i1 %375, label %376, label %604

376:                                              ; preds = %372
  %377 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %366, i64 11
  %378 = bitcast %struct.FT_Bitmap_Size_** %377 to [10 x i16]*
  %379 = zext i32 %2 to i64
  %380 = getelementptr inbounds [10 x i16], [10 x i16]* %378, i64 0, i64 %379
  %381 = load i16, i16* %380, align 2
  %382 = bitcast i8* %3 to i16*
  store i16 %381, i16* %382, align 2
  br label %604

383:                                              ; preds = %5
  %384 = icmp eq i8* %3, null
  %385 = xor i1 %6, true
  %386 = or i1 %384, %385
  br i1 %386, label %604, label %387

387:                                              ; preds = %383
  %388 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %389 = bitcast %struct.FT_Bitmap_Size_** %388 to %struct.PS_PrivateRec_*
  %390 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %389, i64 0, i32 15
  %391 = load i8, i8* %390, align 4
  store i8 %391, i8* %3, align 1
  br label %604

392:                                              ; preds = %5
  %393 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %394 = bitcast %struct.FT_Bitmap_Size_** %393 to %struct.PS_PrivateRec_*
  %395 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %394, i64 0, i32 15
  %396 = load i8, i8* %395, align 4
  %397 = zext i8 %396 to i32
  %398 = icmp ugt i32 %397, %2
  br i1 %398, label %399, label %603

399:                                              ; preds = %392
  %400 = icmp ne i8* %3, null
  %401 = icmp ugt i64 %7, 1
  %402 = and i1 %400, %401
  br i1 %402, label %403, label %604

403:                                              ; preds = %399
  %404 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %393, i64 17
  %405 = bitcast %struct.FT_Bitmap_Size_** %404 to [13 x i16]*
  %406 = zext i32 %2 to i64
  %407 = getelementptr inbounds [13 x i16], [13 x i16]* %405, i64 0, i64 %406
  %408 = load i16, i16* %407, align 2
  %409 = bitcast i8* %3 to i16*
  store i16 %408, i16* %409, align 2
  br label %604

410:                                              ; preds = %5
  %411 = icmp eq i8* %3, null
  %412 = xor i1 %6, true
  %413 = or i1 %411, %412
  br i1 %413, label %604, label %414

414:                                              ; preds = %410
  %415 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %416 = bitcast %struct.FT_Bitmap_Size_** %415 to %struct.PS_PrivateRec_*
  %417 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %416, i64 0, i32 16
  %418 = load i8, i8* %417, align 1
  store i8 %418, i8* %3, align 1
  br label %604

419:                                              ; preds = %5
  %420 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %421 = bitcast %struct.FT_Bitmap_Size_** %420 to %struct.PS_PrivateRec_*
  %422 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %421, i64 0, i32 16
  %423 = load i8, i8* %422, align 1
  %424 = zext i8 %423 to i32
  %425 = icmp ugt i32 %424, %2
  br i1 %425, label %426, label %603

426:                                              ; preds = %419
  %427 = icmp ne i8* %3, null
  %428 = icmp ugt i64 %7, 1
  %429 = and i1 %427, %428
  br i1 %429, label %430, label %604

430:                                              ; preds = %426
  %431 = zext i32 %2 to i64
  %432 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %421, i64 0, i32 20, i64 %431
  %433 = load i16, i16* %432, align 2
  %434 = bitcast i8* %3 to i16*
  store i16 %433, i16* %434, align 2
  br label %604

435:                                              ; preds = %5
  %436 = icmp eq i8* %3, null
  %437 = xor i1 %6, true
  %438 = or i1 %436, %437
  br i1 %438, label %604, label %439

439:                                              ; preds = %435
  %440 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %441 = bitcast %struct.FT_Bitmap_Size_** %440 to %struct.PS_PrivateRec_*
  %442 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %441, i64 0, i32 18
  %443 = load i8, i8* %442, align 1
  store i8 %443, i8* %3, align 1
  br label %604

444:                                              ; preds = %5
  %445 = icmp eq i8* %3, null
  %446 = xor i1 %6, true
  %447 = or i1 %445, %446
  br i1 %447, label %604, label %448

448:                                              ; preds = %444
  %449 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %450 = bitcast %struct.FT_Bitmap_Size_** %449 to %struct.PS_PrivateRec_*
  %451 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %450, i64 0, i32 17
  %452 = load i8, i8* %451, align 2
  store i8 %452, i8* %3, align 1
  br label %604

453:                                              ; preds = %5
  %454 = zext i32 %2 to i64
  %455 = icmp ult i32 %2, 2
  br i1 %455, label %456, label %603

456:                                              ; preds = %453
  %457 = icmp ne i8* %3, null
  %458 = icmp ugt i64 %7, 1
  %459 = and i1 %457, %458
  br i1 %459, label %460, label %604

460:                                              ; preds = %456
  %461 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %462 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %461, i64 27
  %463 = bitcast %struct.FT_Bitmap_Size_** %462 to [2 x i16]*
  %464 = getelementptr inbounds [2 x i16], [2 x i16]* %463, i64 0, i64 %454
  %465 = load i16, i16* %464, align 2
  %466 = bitcast i8* %3 to i16*
  store i16 %465, i16* %466, align 2
  br label %604

467:                                              ; preds = %5
  %468 = icmp ne i8* %3, null
  %469 = icmp ugt i64 %7, 3
  %470 = and i1 %468, %469
  br i1 %470, label %471, label %604

471:                                              ; preds = %467
  %472 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %473 = bitcast %struct.FT_Bitmap_Size_** %472 to %struct.PS_PrivateRec_*
  %474 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %473, i64 0, i32 1
  %475 = load i32, i32* %474, align 4
  %476 = bitcast i8* %3 to i32*
  store i32 %475, i32* %476, align 4
  br label %604

477:                                              ; preds = %5
  %478 = icmp ne i8* %3, null
  %479 = icmp ugt i64 %7, 7
  %480 = and i1 %478, %479
  br i1 %480, label %481, label %604

481:                                              ; preds = %477
  %482 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %483 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %482, i64 26
  %484 = bitcast %struct.FT_Bitmap_Size_** %483 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = bitcast i8* %3 to i64*
  store i64 %485, i64* %486, align 8
  br label %604

487:                                              ; preds = %5
  %488 = icmp ne i8* %3, null
  %489 = icmp ugt i64 %7, 7
  %490 = and i1 %488, %489
  br i1 %490, label %491, label %604

491:                                              ; preds = %487
  %492 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 8
  %493 = getelementptr inbounds %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %492, i64 25
  %494 = bitcast %struct.FT_Bitmap_Size_** %493 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = bitcast i8* %3 to i64*
  store i64 %495, i64* %496, align 8
  br label %604

497:                                              ; preds = %5
  %498 = icmp eq i8* %3, null
  %499 = xor i1 %6, true
  %500 = or i1 %498, %499
  br i1 %500, label %604, label %501

501:                                              ; preds = %497
  %502 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 6
  %503 = bitcast i8** %502 to i8*
  %504 = load i8, i8* %503, align 8
  store i8 %504, i8* %3, align 1
  br label %604

505:                                              ; preds = %5
  %506 = icmp ne i8* %3, null
  %507 = icmp ugt i64 %7, 1
  %508 = and i1 %506, %507
  br i1 %508, label %509, label %604

509:                                              ; preds = %505
  %510 = bitcast %struct.FT_FaceRec_* %8 to %struct.PS_FontInfoRec_*
  %511 = getelementptr inbounds %struct.PS_FontInfoRec_, %struct.PS_FontInfoRec_* %510, i64 0, i32 7
  %512 = load i16, i16* %511, align 2
  %513 = bitcast i8* %3 to i16*
  store i16 %512, i16* %513, align 2
  br label %604

514:                                              ; preds = %5
  %515 = icmp ne i8* %3, null
  %516 = icmp ugt i64 %7, 1
  %517 = and i1 %515, %516
  br i1 %517, label %518, label %604

518:                                              ; preds = %514
  %519 = bitcast %struct.FT_FaceRec_* %8 to %struct.PS_FontInfoRec_*
  %520 = getelementptr inbounds %struct.PS_FontInfoRec_, %struct.PS_FontInfoRec_* %519, i64 0, i32 8
  %521 = load i16, i16* %520, align 4
  %522 = bitcast i8* %3 to i16*
  store i16 %521, i16* %522, align 2
  br label %604

523:                                              ; preds = %5
  %524 = icmp ne i8* %3, null
  %525 = icmp ugt i64 %7, 1
  %526 = and i1 %524, %525
  br i1 %526, label %527, label %604

527:                                              ; preds = %523
  %528 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 7
  %529 = bitcast i32* %528 to i16*
  %530 = load i16, i16* %529, align 8
  %531 = bitcast i8* %3 to i16*
  store i16 %530, i16* %531, align 2
  br label %604

532:                                              ; preds = %5
  %533 = bitcast %struct.FT_FaceRec_* %8 to i8**
  %534 = load i8*, i8** %533, align 8
  %535 = icmp eq i8* %534, null
  br i1 %535, label %603, label %536

536:                                              ; preds = %532
  %537 = tail call i64 @strlen(i8* nonnull %534) #12
  %538 = add i64 %537, 1
  %539 = icmp eq i8* %3, null
  %540 = icmp ult i64 %7, %538
  %541 = or i1 %539, %540
  br i1 %541, label %600, label %542

542:                                              ; preds = %536
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* nonnull align 1 %534, i64 %538, i1 false)
  br label %600

543:                                              ; preds = %5
  %544 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 1
  %545 = bitcast i64* %544 to i8**
  %546 = load i8*, i8** %545, align 8
  %547 = icmp eq i8* %546, null
  br i1 %547, label %603, label %548

548:                                              ; preds = %543
  %549 = tail call i64 @strlen(i8* nonnull %546) #12
  %550 = add i64 %549, 1
  %551 = icmp eq i8* %3, null
  %552 = icmp ult i64 %7, %550
  %553 = or i1 %551, %552
  br i1 %553, label %600, label %554

554:                                              ; preds = %548
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* nonnull align 1 %546, i64 %550, i1 false)
  br label %600

555:                                              ; preds = %5
  %556 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 2
  %557 = bitcast i64* %556 to i8**
  %558 = load i8*, i8** %557, align 8
  %559 = icmp eq i8* %558, null
  br i1 %559, label %603, label %560

560:                                              ; preds = %555
  %561 = tail call i64 @strlen(i8* nonnull %558) #12
  %562 = add i64 %561, 1
  %563 = icmp eq i8* %3, null
  %564 = icmp ult i64 %7, %562
  %565 = or i1 %563, %564
  br i1 %565, label %600, label %566

566:                                              ; preds = %560
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* nonnull align 1 %558, i64 %562, i1 false)
  br label %600

567:                                              ; preds = %5
  %568 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 3
  %569 = bitcast i64* %568 to i8**
  %570 = load i8*, i8** %569, align 8
  %571 = icmp eq i8* %570, null
  br i1 %571, label %603, label %572

572:                                              ; preds = %567
  %573 = tail call i64 @strlen(i8* nonnull %570) #12
  %574 = add i64 %573, 1
  %575 = icmp eq i8* %3, null
  %576 = icmp ult i64 %7, %574
  %577 = or i1 %575, %576
  br i1 %577, label %600, label %578

578:                                              ; preds = %572
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* nonnull align 1 %570, i64 %574, i1 false)
  br label %600

579:                                              ; preds = %5
  %580 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 4
  %581 = bitcast i64* %580 to i8**
  %582 = load i8*, i8** %581, align 8
  %583 = icmp eq i8* %582, null
  br i1 %583, label %603, label %584

584:                                              ; preds = %579
  %585 = tail call i64 @strlen(i8* nonnull %582) #12
  %586 = add i64 %585, 1
  %587 = icmp eq i8* %3, null
  %588 = icmp ult i64 %7, %586
  %589 = or i1 %587, %588
  br i1 %589, label %600, label %590

590:                                              ; preds = %584
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* nonnull align 1 %582, i64 %586, i1 false)
  br label %600

591:                                              ; preds = %5
  %592 = icmp ne i8* %3, null
  %593 = icmp ugt i64 %7, 7
  %594 = and i1 %592, %593
  br i1 %594, label %595, label %604

595:                                              ; preds = %591
  %596 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 5
  %597 = bitcast i8** %596 to i64*
  %598 = load i64, i64* %597, align 8
  %599 = bitcast i8* %3 to i64*
  store i64 %598, i64* %599, align 8
  br label %604

600:                                              ; preds = %223, %211, %79, %109, %128, %166, %536, %548, %560, %572, %584, %590, %578, %566, %554, %542, %178, %140, %121, %85
  %601 = phi i64 [ %586, %590 ], [ %586, %584 ], [ %574, %578 ], [ %574, %572 ], [ %562, %566 ], [ %562, %560 ], [ %550, %554 ], [ %550, %548 ], [ %538, %542 ], [ %538, %536 ], [ %174, %178 ], [ %174, %166 ], [ %136, %140 ], [ %136, %128 ], [ %117, %121 ], [ %117, %109 ], [ %81, %85 ], [ %81, %79 ], [ %219, %223 ], [ %219, %211 ]
  %602 = icmp eq i64 %601, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %200, %194, %205, %17, %42, %75, %104, %123, %157, %162, %257, %313, %340, %365, %392, %419, %453, %532, %543, %555, %567, %579, %5, %600
  br label %604

604:                                              ; preds = %64, %44, %39, %19, %10, %14, %67, %71, %86, %90, %95, %99, %148, %152, %180, %184, %228, %232, %238, %242, %248, %252, %265, %269, %274, %278, %284, %288, %294, %298, %304, %308, %320, %324, %331, %335, %347, %351, %356, %360, %372, %376, %383, %387, %399, %403, %410, %414, %426, %430, %435, %439, %444, %448, %456, %460, %467, %471, %477, %481, %487, %491, %497, %501, %505, %509, %514, %518, %523, %527, %591, %595, %600, %603
  %605 = phi i64 [ -1, %603 ], [ %601, %600 ], [ 8, %64 ], [ 8, %44 ], [ 8, %39 ], [ 8, %19 ], [ 1, %10 ], [ 1, %14 ], [ 1, %67 ], [ 1, %71 ], [ 4, %86 ], [ 4, %90 ], [ 4, %95 ], [ 4, %99 ], [ 4, %148 ], [ 4, %152 ], [ 4, %180 ], [ 4, %184 ], [ 2, %228 ], [ 2, %232 ], [ 2, %238 ], [ 2, %242 ], [ 1, %248 ], [ 1, %252 ], [ 2, %265 ], [ 2, %269 ], [ 8, %274 ], [ 8, %278 ], [ 4, %284 ], [ 4, %288 ], [ 4, %294 ], [ 4, %298 ], [ 1, %304 ], [ 1, %308 ], [ 2, %320 ], [ 2, %324 ], [ 1, %331 ], [ 1, %335 ], [ 2, %347 ], [ 2, %351 ], [ 1, %356 ], [ 1, %360 ], [ 2, %372 ], [ 2, %376 ], [ 1, %383 ], [ 1, %387 ], [ 2, %399 ], [ 2, %403 ], [ 1, %410 ], [ 1, %414 ], [ 2, %426 ], [ 2, %430 ], [ 1, %435 ], [ 1, %439 ], [ 1, %444 ], [ 1, %448 ], [ 2, %456 ], [ 2, %460 ], [ 4, %467 ], [ 4, %471 ], [ 8, %477 ], [ 8, %481 ], [ 8, %487 ], [ 8, %491 ], [ 1, %497 ], [ 1, %501 ], [ 2, %505 ], [ 2, %509 ], [ 2, %514 ], [ 2, %518 ], [ 2, %523 ], [ 2, %527 ], [ 8, %591 ], [ 8, %595 ]
  ret i64 %605
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare i64* @ft_hash_num_lookup(i32, %struct.FT_HashRec_*) local_unnamed_addr #3

declare i32 @ps_property_set(%struct.FT_ModuleRec_*, i8*, i8*, i8 zeroext) #3

declare i32 @ps_property_get(%struct.FT_ModuleRec_*, i8*, i8*) #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Get_Track_Kerning(%struct.FT_FaceRec_* nocapture readonly, i64, i32, i64* nocapture) #0 {
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 6
  %6 = bitcast i8** %5 to %struct.AFM_FontInfoRec_**
  %7 = load %struct.AFM_FontInfoRec_*, %struct.AFM_FontInfoRec_** %6, align 8
  %8 = icmp eq %struct.AFM_FontInfoRec_* %7, null
  br i1 %8, label %53, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %7, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %53, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.AFM_FontInfoRec_, %struct.AFM_FontInfoRec_* %7, i64 0, i32 4
  br label %15

15:                                               ; preds = %13, %48
  %16 = phi i64 [ 0, %13 ], [ %49, %48 ]
  %17 = load %struct.AFM_TrackKernRec_*, %struct.AFM_TrackKernRec_** %14, align 8
  %18 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %17, i64 %16, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, %2
  br i1 %20, label %21, label %48

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %17, i64 %16, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp sgt i64 %23, %1
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %17, i64 %16, i32 2
  %27 = load i64, i64* %26, align 8
  br label %46

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %17, i64 %16, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %30, %1
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %17, i64 %16, i32 4
  %34 = load i64, i64* %33, align 8
  br label %46

35:                                               ; preds = %28
  %36 = sub nsw i64 %1, %23
  %37 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %17, i64 %16, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.AFM_TrackKernRec_, %struct.AFM_TrackKernRec_* %17, i64 %16, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = sub nsw i64 %38, %40
  %42 = sub nsw i64 %30, %23
  %43 = tail call i64 @FT_MulDiv(i64 %36, i64 %41, i64 %42) #11
  %44 = load i64, i64* %39, align 8
  %45 = add nsw i64 %44, %43
  br label %46

46:                                               ; preds = %32, %35, %25
  %47 = phi i64 [ %27, %25 ], [ %45, %35 ], [ %34, %32 ]
  store i64 %47, i64* %3, align 8
  br label %48

48:                                               ; preds = %46, %15
  %49 = add nuw nsw i64 %16, 1
  %50 = load i32, i32* %10, align 8
  %51 = zext i32 %50 to i64
  %52 = icmp ult i64 %49, %51
  br i1 %52, label %15, label %53

53:                                               ; preds = %48, %9, %4
  %54 = phi i32 [ 6, %4 ], [ 0, %9 ], [ 0, %48 ]
  ret i32 %54
}

declare i64 @FT_MulDiv(i64, i64, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @T1_Get_Multi_Master(%struct.T1_FaceRec_* nocapture readonly, %struct.FT_Multi_Master_* nocapture) #2 {
  %3 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %4 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %3, align 8
  %5 = icmp eq %struct.PS_BlendRec_* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %1, i64 0, i32 0
  store i32 %8, i32* %9, align 8
  %10 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %4, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %1, i64 0, i32 1
  store i32 %11, i32* %12, align 4
  %13 = load i32, i32* %7, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %6, %15
  %16 = phi i64 [ %34, %15 ], [ 0, %6 ]
  %17 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %1, i64 0, i32 2, i64 %16
  %18 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %4, i64 0, i32 2, i64 %16
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %struct.FT_MM_Axis_* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %4, i64 0, i32 4, i64 %16, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %1, i64 0, i32 2, i64 %16, i32 1
  store i64 %24, i64* %25, align 8
  %26 = load i64*, i64** %22, align 8
  %27 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %4, i64 0, i32 4, i64 %16, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = zext i8 %28 to i64
  %30 = add nsw i64 %29, -1
  %31 = getelementptr inbounds i64, i64* %26, i64 %30
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %1, i64 0, i32 2, i64 %16, i32 2
  store i64 %32, i64* %33, align 8
  %34 = add nuw nsw i64 %16, 1
  %35 = load i32, i32* %7, align 4
  %36 = zext i32 %35 to i64
  %37 = icmp ult i64 %34, %36
  br i1 %37, label %15, label %38

38:                                               ; preds = %15, %6, %2
  %39 = phi i32 [ 6, %2 ], [ 0, %6 ], [ 0, %15 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Set_MM_Design(%struct.T1_FaceRec_* nocapture, i32, i64* nocapture readonly) #0 {
  %4 = alloca [16 x i64], align 16
  %5 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %6 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %5, align 8
  %7 = bitcast [16 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 128, i1 false)
  %8 = icmp eq %struct.PS_BlendRec_* %6, null
  br i1 %8, label %179, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %1
  %13 = select i1 %12, i32 %11, i32 %1
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %99, label %15

15:                                               ; preds = %9
  %16 = zext i32 %13 to i64
  br label %17

17:                                               ; preds = %15, %89
  %18 = phi i32 [ %11, %15 ], [ %90, %89 ]
  %19 = phi i64 [ 0, %15 ], [ %93, %89 ]
  %20 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 4, i64 %19
  %21 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 4, i64 %19, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 4, i64 %19, i32 2
  %24 = load i64*, i64** %23, align 8
  %25 = icmp ult i64 %19, %16
  br i1 %25, label %26, label %31

26:                                               ; preds = %17
  %27 = getelementptr inbounds i64, i64* %2, i64 %19
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.PS_DesignMap_, %struct.PS_DesignMap_* %20, i64 0, i32 0
  %30 = load i8, i8* %29, align 8
  br label %41

31:                                               ; preds = %17
  %32 = getelementptr inbounds %struct.PS_DesignMap_, %struct.PS_DesignMap_* %20, i64 0, i32 0
  %33 = load i8, i8* %32, align 8
  %34 = zext i8 %33 to i64
  %35 = add nsw i64 %34, -1
  %36 = getelementptr inbounds i64, i64* %22, i64 %35
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %22, align 8
  %39 = sub nsw i64 %37, %38
  %40 = sdiv i64 %39, 2
  br label %41

41:                                               ; preds = %31, %26
  %42 = phi i8 [ %30, %26 ], [ %33, %31 ]
  %43 = phi i64 [ %28, %26 ], [ %40, %31 ]
  %44 = getelementptr inbounds %struct.PS_DesignMap_, %struct.PS_DesignMap_* %20, i64 0, i32 0
  %45 = icmp eq i8 %42, 0
  br i1 %45, label %66, label %46

46:                                               ; preds = %41, %59
  %47 = phi i32 [ %48, %59 ], [ -1, %41 ]
  %48 = phi i32 [ %60, %59 ], [ 0, %41 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i64, i64* %22, i64 %49
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %43, %51
  br i1 %52, label %55, label %53

53:                                               ; preds = %46
  %54 = icmp slt i64 %43, %51
  br i1 %54, label %64, label %59

55:                                               ; preds = %46
  %56 = zext i32 %48 to i64
  %57 = getelementptr inbounds i64, i64* %24, i64 %56
  %58 = load i64, i64* %57, align 8
  br label %89

59:                                               ; preds = %53
  %60 = add nuw nsw i32 %48, 1
  %61 = load i8, i8* %44, align 8
  %62 = zext i8 %61 to i32
  %63 = icmp ult i32 %60, %62
  br i1 %63, label %46, label %68

64:                                               ; preds = %53
  %65 = icmp slt i32 %47, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %41, %64
  %67 = load i64, i64* %24, align 8
  br label %89

68:                                               ; preds = %59
  %69 = zext i8 %61 to i64
  %70 = add nsw i64 %69, -1
  %71 = getelementptr inbounds i64, i64* %24, i64 %70
  %72 = load i64, i64* %71, align 8
  br label %89

73:                                               ; preds = %64
  %74 = sext i32 %47 to i64
  %75 = getelementptr inbounds i64, i64* %22, i64 %74
  %76 = load i64, i64* %75, align 8
  %77 = sub nsw i64 %43, %76
  %78 = zext i32 %48 to i64
  %79 = getelementptr inbounds i64, i64* %24, i64 %78
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds i64, i64* %24, i64 %74
  %82 = load i64, i64* %81, align 8
  %83 = sub nsw i64 %80, %82
  %84 = getelementptr inbounds i64, i64* %22, i64 %78
  %85 = load i64, i64* %84, align 8
  %86 = sub nsw i64 %85, %76
  %87 = tail call i64 @FT_MulDiv(i64 %77, i64 %83, i64 %86) #11
  %88 = load i32, i32* %10, align 4
  br label %89

89:                                               ; preds = %55, %66, %73, %68
  %90 = phi i32 [ %18, %55 ], [ %18, %66 ], [ %18, %68 ], [ %88, %73 ]
  %91 = phi i64 [ %58, %55 ], [ %67, %66 ], [ %72, %68 ], [ %87, %73 ]
  %92 = getelementptr inbounds [16 x i64], [16 x i64]* %4, i64 0, i64 %19
  store i64 %91, i64* %92, align 8
  %93 = add nuw nsw i64 %19, 1
  %94 = zext i32 %90 to i64
  %95 = icmp ult i64 %93, %94
  br i1 %95, label %17, label %96

96:                                               ; preds = %89
  %97 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %5, align 8
  %98 = icmp eq %struct.PS_BlendRec_* %97, null
  br i1 %98, label %179, label %99

99:                                               ; preds = %9, %96
  %100 = phi i32 [ %90, %96 ], [ 0, %9 ]
  %101 = phi %struct.PS_BlendRec_* [ %97, %96 ], [ %6, %9 ]
  %102 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %101, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %101, i64 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %179, label %107

107:                                              ; preds = %99
  %108 = icmp ult i32 %103, %100
  %109 = select i1 %108, i32 %103, i32 %100
  %110 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %101, i64 0, i32 5
  %111 = zext i32 %109 to i64
  br label %112

112:                                              ; preds = %168, %107
  %113 = phi i32 [ %105, %107 ], [ %163, %168 ]
  %114 = phi i32 [ %103, %107 ], [ %169, %168 ]
  %115 = phi i64 [ 0, %107 ], [ %165, %168 ]
  %116 = phi i8 [ 0, %107 ], [ %164, %168 ]
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %154, label %118

118:                                              ; preds = %112
  %119 = trunc i64 %115 to i32
  %120 = zext i32 %114 to i64
  br label %121

121:                                              ; preds = %150, %118
  %122 = phi i64 [ 0, %118 ], [ %152, %150 ]
  %123 = phi i64 [ 65536, %118 ], [ %151, %150 ]
  %124 = icmp ult i64 %122, %111
  br i1 %124, label %127, label %125

125:                                              ; preds = %121
  %126 = ashr i64 %123, 1
  br label %150

127:                                              ; preds = %121
  %128 = getelementptr inbounds [16 x i64], [16 x i64]* %4, i64 0, i64 %122
  %129 = load i64, i64* %128, align 8
  %130 = trunc i64 %122 to i32
  %131 = shl i32 1, %130
  %132 = and i32 %131, %119
  %133 = icmp eq i32 %132, 0
  %134 = sub nsw i64 65536, %129
  %135 = select i1 %133, i64 %134, i64 %129
  %136 = icmp slt i64 %135, 1
  br i1 %136, label %154, label %137

137:                                              ; preds = %127
  %138 = icmp sgt i64 %135, 65535
  br i1 %138, label %150, label %139

139:                                              ; preds = %137
  %140 = shl i64 %123, 32
  %141 = ashr exact i64 %140, 32
  %142 = shl i64 %135, 32
  %143 = ashr exact i64 %142, 32
  %144 = mul nsw i64 %143, %141
  %145 = ashr i64 %144, 63
  %146 = add nsw i64 %144, 32768
  %147 = add nsw i64 %146, %145
  %148 = shl i64 %147, 16
  %149 = ashr i64 %148, 32
  br label %150

150:                                              ; preds = %139, %137, %125
  %151 = phi i64 [ %126, %125 ], [ %123, %137 ], [ %149, %139 ]
  %152 = add nuw nsw i64 %122, 1
  %153 = icmp eq i64 %152, %120
  br i1 %153, label %154, label %121

154:                                              ; preds = %127, %150, %112
  %155 = phi i64 [ 65536, %112 ], [ %151, %150 ], [ 0, %127 ]
  %156 = load i64*, i64** %110, align 8
  %157 = getelementptr inbounds i64, i64* %156, i64 %115
  %158 = load i64, i64* %157, align 8
  %159 = icmp eq i64 %158, %155
  br i1 %159, label %162, label %160

160:                                              ; preds = %154
  store i64 %155, i64* %157, align 8
  %161 = load i32, i32* %104, align 8
  br label %162

162:                                              ; preds = %160, %154
  %163 = phi i32 [ %161, %160 ], [ %113, %154 ]
  %164 = phi i8 [ 1, %160 ], [ %116, %154 ]
  %165 = add nuw nsw i64 %115, 1
  %166 = zext i32 %163 to i64
  %167 = icmp ult i64 %165, %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %162
  %169 = load i32, i32* %102, align 4
  br label %112

170:                                              ; preds = %162
  %171 = icmp eq i8 %164, 0
  br i1 %171, label %179, label %172

172:                                              ; preds = %170
  %173 = icmp eq i32 %13, 0
  %174 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 2
  %175 = load i64, i64* %174, align 8
  %176 = and i64 %175, -32769
  %177 = or i64 %175, 32768
  %178 = select i1 %173, i64 %176, i64 %177
  store i64 %178, i64* %174, align 8
  br label %179

179:                                              ; preds = %170, %99, %96, %3, %172
  %180 = phi i32 [ 0, %172 ], [ 6, %3 ], [ -1, %170 ], [ 6, %96 ], [ -1, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #11
  ret i32 %180
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @T1_Set_MM_Blend(%struct.T1_FaceRec_* nocapture, i32, i64* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %5 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %4, align 8
  %6 = icmp eq %struct.PS_BlendRec_* %5, null
  br i1 %6, label %85, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %85, label %13

13:                                               ; preds = %7
  %14 = icmp ult i32 %9, %1
  %15 = select i1 %14, i32 %9, i32 %1
  %16 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 5
  %17 = zext i32 %15 to i64
  br label %18

18:                                               ; preds = %74, %13
  %19 = phi i32 [ %11, %13 ], [ %69, %74 ]
  %20 = phi i32 [ %9, %13 ], [ %75, %74 ]
  %21 = phi i64 [ 0, %13 ], [ %71, %74 ]
  %22 = phi i8 [ 0, %13 ], [ %70, %74 ]
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %60, label %24

24:                                               ; preds = %18
  %25 = trunc i64 %21 to i32
  %26 = zext i32 %20 to i64
  br label %27

27:                                               ; preds = %56, %24
  %28 = phi i64 [ 0, %24 ], [ %58, %56 ]
  %29 = phi i64 [ 65536, %24 ], [ %57, %56 ]
  %30 = icmp ult i64 %28, %17
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = ashr i64 %29, 1
  br label %56

33:                                               ; preds = %27
  %34 = getelementptr inbounds i64, i64* %2, i64 %28
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %28 to i32
  %37 = shl i32 1, %36
  %38 = and i32 %37, %25
  %39 = icmp eq i32 %38, 0
  %40 = sub nsw i64 65536, %35
  %41 = select i1 %39, i64 %40, i64 %35
  %42 = icmp slt i64 %41, 1
  br i1 %42, label %60, label %43

43:                                               ; preds = %33
  %44 = icmp sgt i64 %41, 65535
  br i1 %44, label %56, label %45

45:                                               ; preds = %43
  %46 = shl i64 %29, 32
  %47 = ashr exact i64 %46, 32
  %48 = shl i64 %41, 32
  %49 = ashr exact i64 %48, 32
  %50 = mul nsw i64 %49, %47
  %51 = ashr i64 %50, 63
  %52 = add nsw i64 %50, 32768
  %53 = add nsw i64 %52, %51
  %54 = shl i64 %53, 16
  %55 = ashr i64 %54, 32
  br label %56

56:                                               ; preds = %45, %43, %31
  %57 = phi i64 [ %32, %31 ], [ %29, %43 ], [ %55, %45 ]
  %58 = add nuw nsw i64 %28, 1
  %59 = icmp eq i64 %58, %26
  br i1 %59, label %60, label %27

60:                                               ; preds = %33, %56, %18
  %61 = phi i64 [ 65536, %18 ], [ %57, %56 ], [ 0, %33 ]
  %62 = load i64*, i64** %16, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 %21
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %61
  br i1 %65, label %68, label %66

66:                                               ; preds = %60
  store i64 %61, i64* %63, align 8
  %67 = load i32, i32* %10, align 8
  br label %68

68:                                               ; preds = %66, %60
  %69 = phi i32 [ %67, %66 ], [ %19, %60 ]
  %70 = phi i8 [ 1, %66 ], [ %22, %60 ]
  %71 = add nuw nsw i64 %21, 1
  %72 = zext i32 %69 to i64
  %73 = icmp ult i64 %71, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = load i32, i32* %8, align 4
  br label %18

76:                                               ; preds = %68
  %77 = icmp eq i8 %70, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %76
  %79 = icmp eq i32 %1, 0
  %80 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 2
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, -32769
  %83 = or i64 %81, 32768
  %84 = select i1 %79, i64 %82, i64 %83
  store i64 %84, i64* %80, align 8
  br label %85

85:                                               ; preds = %76, %7, %3, %78
  %86 = phi i32 [ 0, %78 ], [ -1, %76 ], [ 6, %3 ], [ -1, %7 ]
  ret i32 %86
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Get_MM_Blend(%struct.T1_FaceRec_* nocapture readonly, i32, i64* nocapture) #0 {
  %4 = bitcast i64* %2 to i8*
  %5 = alloca [4 x i64], align 16
  %6 = bitcast [4 x i64]* %5 to i8*
  %7 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %8 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %9 = icmp eq %struct.PS_BlendRec_* %8, null
  %10 = bitcast [4 x i64]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 32, i1 false)
  br i1 %9, label %118, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 0
  %13 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %8, i64 0, i32 5
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %8, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  call fastcc void @mm_weights_unmap(i64* %14, i64* nonnull %12, i32 %16)
  %17 = load i32, i32* %15, align 4
  %18 = icmp ult i32 %17, %1
  %19 = select i1 %18, i32 %17, i32 %1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %42, label %21

21:                                               ; preds = %11
  %22 = zext i32 %19 to i64
  %23 = shl nuw nsw i64 %22, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* nonnull align 16 %6, i64 %23, i1 false)
  %24 = add nsw i64 %22, -1
  %25 = and i64 %22, 7
  %26 = icmp ult i64 %24, 7
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = sub nsw i64 %22, %25
  br label %107

29:                                               ; preds = %107, %21
  %30 = phi i64 [ undef, %21 ], [ %110, %107 ]
  %31 = phi i64 [ 0, %21 ], [ %110, %107 ]
  %32 = icmp eq i64 %25, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi i64 [ %36, %33 ], [ %31, %29 ]
  %35 = phi i64 [ %37, %33 ], [ %25, %29 ]
  %36 = add nuw nsw i64 %34, 1
  %37 = add i64 %35, -1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %33, !llvm.loop !2

39:                                               ; preds = %33, %29
  %40 = phi i64 [ %30, %29 ], [ %36, %33 ]
  %41 = trunc i64 %40 to i32
  br label %42

42:                                               ; preds = %39, %11
  %43 = phi i32 [ 0, %11 ], [ %41, %39 ]
  %44 = icmp ult i32 %43, %1
  br i1 %44, label %45, label %118

45:                                               ; preds = %42
  %46 = zext i32 %43 to i64
  %47 = zext i32 %1 to i64
  %48 = sub nsw i64 %47, %46
  %49 = icmp ult i64 %48, 4
  br i1 %49, label %50, label %52

50:                                               ; preds = %105, %45
  %51 = phi i64 [ %46, %45 ], [ %54, %105 ]
  br label %113

52:                                               ; preds = %45
  %53 = and i64 %48, -4
  %54 = add nsw i64 %53, %46
  %55 = add nsw i64 %53, -4
  %56 = lshr exact i64 %55, 2
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 12
  br i1 %59, label %91, label %60

60:                                               ; preds = %52
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %88, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %89, %62 ]
  %65 = add i64 %63, %46
  %66 = getelementptr inbounds i64, i64* %2, i64 %65
  %67 = bitcast i64* %66 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %67, align 8
  %68 = getelementptr inbounds i64, i64* %66, i64 2
  %69 = bitcast i64* %68 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %69, align 8
  %70 = or i64 %63, 4
  %71 = add i64 %70, %46
  %72 = getelementptr inbounds i64, i64* %2, i64 %71
  %73 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %73, align 8
  %74 = getelementptr inbounds i64, i64* %72, i64 2
  %75 = bitcast i64* %74 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %75, align 8
  %76 = or i64 %63, 8
  %77 = add i64 %76, %46
  %78 = getelementptr inbounds i64, i64* %2, i64 %77
  %79 = bitcast i64* %78 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %79, align 8
  %80 = getelementptr inbounds i64, i64* %78, i64 2
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %81, align 8
  %82 = or i64 %63, 12
  %83 = add i64 %82, %46
  %84 = getelementptr inbounds i64, i64* %2, i64 %83
  %85 = bitcast i64* %84 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %85, align 8
  %86 = getelementptr inbounds i64, i64* %84, i64 2
  %87 = bitcast i64* %86 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %87, align 8
  %88 = add i64 %63, 16
  %89 = add i64 %64, -4
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %62, !llvm.loop !4

91:                                               ; preds = %62, %52
  %92 = phi i64 [ 0, %52 ], [ %88, %62 ]
  %93 = icmp eq i64 %58, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %102, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %103, %94 ], [ %58, %91 ]
  %97 = add i64 %95, %46
  %98 = getelementptr inbounds i64, i64* %2, i64 %97
  %99 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %99, align 8
  %100 = getelementptr inbounds i64, i64* %98, i64 2
  %101 = bitcast i64* %100 to <2 x i64>*
  store <2 x i64> <i64 32768, i64 32768>, <2 x i64>* %101, align 8
  %102 = add i64 %95, 4
  %103 = add i64 %96, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %94, !llvm.loop !6

105:                                              ; preds = %94, %91
  %106 = icmp eq i64 %48, %53
  br i1 %106, label %118, label %50

107:                                              ; preds = %107, %27
  %108 = phi i64 [ 0, %27 ], [ %110, %107 ]
  %109 = phi i64 [ %28, %27 ], [ %111, %107 ]
  %110 = add nuw nsw i64 %108, 8
  %111 = add i64 %109, -8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %29, label %107

113:                                              ; preds = %50, %113
  %114 = phi i64 [ %116, %113 ], [ %51, %50 ]
  %115 = getelementptr inbounds i64, i64* %2, i64 %114
  store i64 32768, i64* %115, align 8
  %116 = add nuw nsw i64 %114, 1
  %117 = icmp eq i64 %116, %47
  br i1 %117, label %118, label %113, !llvm.loop !7

118:                                              ; preds = %113, %105, %42, %3
  %119 = phi i32 [ 6, %3 ], [ 0, %42 ], [ 0, %105 ], [ 0, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Get_MM_Var(%struct.T1_FaceRec_* nocapture readonly, %struct.FT_MM_Var_** nocapture) #0 {
  %3 = alloca %struct.FT_Multi_Master_, align 8
  %4 = alloca i32, align 4
  %5 = alloca [4 x i64], align 16
  %6 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 25
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = bitcast %struct.FT_Multi_Master_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 104, i1 false)
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 -1431655766, i32* %4, align 4
  %10 = bitcast [4 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 0
  %12 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %13 = bitcast [4 x i64]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 32, i1 false)
  %14 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %12, align 8
  %15 = icmp eq %struct.PS_BlendRec_* %14, null
  br i1 %15, label %46, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %3, i64 0, i32 0
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %3, i64 0, i32 1
  store i32 %21, i32* %22, align 4
  %23 = icmp eq i32 %18, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i64 [ %44, %26 ], [ 0, %24 ]
  %28 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %3, i64 0, i32 2, i64 %27
  %29 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 2, i64 %27
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.FT_MM_Axis_* %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 4, i64 %27, i32 1
  %34 = load i64*, i64** %33, align 8
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %3, i64 0, i32 2, i64 %27, i32 1
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 4, i64 %27, i32 0
  %38 = load i8, i8* %37, align 8
  %39 = zext i8 %38 to i64
  %40 = add nsw i64 %39, -1
  %41 = getelementptr inbounds i64, i64* %34, i64 %40
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %3, i64 0, i32 2, i64 %27, i32 2
  store i64 %42, i64* %43, align 8
  %44 = add nuw nsw i64 %27, 1
  %45 = icmp eq i64 %44, %25
  br i1 %45, label %47, label %26

46:                                               ; preds = %2
  store i32 6, i32* %4, align 4
  br label %193

47:                                               ; preds = %26, %16
  %48 = phi i64 [ 0, %16 ], [ %25, %26 ]
  store i32 0, i32* %4, align 4
  %49 = shl nuw nsw i64 %48, 1
  %50 = add nuw nsw i64 %49, 7
  %51 = and i64 %50, 17179869176
  %52 = mul nuw nsw i64 %48, 48
  %53 = add nuw nsw i64 %52, 32
  %54 = add nuw nsw i64 %53, %51
  %55 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %7, i64 %54, i32* nonnull %4) #11
  %56 = load i32, i32* %4, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %193

58:                                               ; preds = %47
  %59 = bitcast i8* %55 to i32*
  store i32 %18, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %55, i64 4
  %61 = bitcast i8* %60 to i32*
  store i32 %21, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %55, i64 8
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %55, i64 32
  br i1 %23, label %65, label %72

65:                                               ; preds = %58
  %66 = getelementptr inbounds i8, i8* %64, i64 %51
  %67 = getelementptr inbounds i8, i8* %55, i64 16
  %68 = bitcast i8* %67 to %struct.FT_Var_Axis_**
  %69 = bitcast i8* %67 to i8**
  store i8* %66, i8** %69, align 8
  %70 = getelementptr inbounds i8, i8* %55, i64 24
  %71 = bitcast i8* %70 to %struct.FT_Var_Named_Style_**
  store %struct.FT_Var_Named_Style_* null, %struct.FT_Var_Named_Style_** %71, align 8
  br label %126

72:                                               ; preds = %58
  call void @llvm.memset.p0i8.i64(i8* align 2 %64, i8 0, i64 %49, i1 false)
  %73 = getelementptr inbounds i8, i8* %64, i64 %51
  %74 = getelementptr inbounds i8, i8* %55, i64 16
  %75 = bitcast i8* %74 to %struct.FT_Var_Axis_**
  %76 = bitcast i8* %74 to i8**
  store i8* %73, i8** %76, align 8
  %77 = getelementptr inbounds i8, i8* %55, i64 24
  %78 = bitcast i8* %77 to %struct.FT_Var_Named_Style_**
  store %struct.FT_Var_Named_Style_* null, %struct.FT_Var_Named_Style_** %78, align 8
  %79 = bitcast i8* %73 to %struct.FT_Var_Axis_*
  br label %80

80:                                               ; preds = %124, %72
  %81 = phi %struct.FT_Var_Axis_* [ %79, %72 ], [ %125, %124 ]
  %82 = phi i64 [ 0, %72 ], [ %122, %124 ]
  %83 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %3, i64 0, i32 2, i64 %82
  %84 = bitcast %struct.FT_MM_Axis_* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %81, i64 %82
  %87 = bitcast %struct.FT_Var_Axis_* %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %3, i64 0, i32 2, i64 %82, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = shl nsw i64 %89, 16
  %91 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %75, align 8
  %92 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %91, i64 %82, i32 1
  store i64 %90, i64* %92, align 8
  %93 = getelementptr inbounds %struct.FT_Multi_Master_, %struct.FT_Multi_Master_* %3, i64 0, i32 2, i64 %82, i32 2
  %94 = load i64, i64* %93, align 8
  %95 = shl nsw i64 %94, 16
  %96 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %75, align 8
  %97 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %96, i64 %82, i32 3
  store i64 %95, i64* %97, align 8
  %98 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %75, align 8
  %99 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %98, i64 %82, i32 5
  store i32 -1, i32* %99, align 8
  %100 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %75, align 8
  %101 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %100, i64 %82, i32 4
  store i64 4294967295, i64* %101, align 8
  %102 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %75, align 8
  %103 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %102, i64 %82, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %121, label %106

106:                                              ; preds = %80
  %107 = call i32 @strcmp(i8* nonnull %104, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #12
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %102, i64 %82, i32 4
  store i64 2003265652, i64* %110, align 8
  br label %121

111:                                              ; preds = %106
  %112 = call i32 @strcmp(i8* nonnull %104, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)) #12
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %102, i64 %82, i32 4
  store i64 2003072104, i64* %115, align 8
  br label %121

116:                                              ; preds = %111
  %117 = call i32 @strcmp(i8* nonnull %104, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)) #12
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  %120 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %102, i64 %82, i32 4
  store i64 1869640570, i64* %120, align 8
  br label %121

121:                                              ; preds = %80, %109, %116, %119, %114
  %122 = add nuw nsw i64 %82, 1
  %123 = icmp eq i64 %122, %48
  br i1 %123, label %126, label %124

124:                                              ; preds = %121
  %125 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %75, align 8
  br label %80

126:                                              ; preds = %121, %65
  %127 = phi %struct.FT_Var_Axis_** [ %68, %65 ], [ %75, %121 ]
  %128 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 6
  %129 = load i64*, i64** %128, align 8
  %130 = load i32, i32* %17, align 4
  call fastcc void @mm_weights_unmap(i64* %129, i64* nonnull %11, i32 %130)
  br i1 %23, label %190, label %131

131:                                              ; preds = %126, %184
  %132 = phi i64 [ %188, %184 ], [ 0, %126 ]
  %133 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 %132
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 4, i64 %132, i32 2
  %136 = load i64*, i64** %135, align 8
  %137 = load i64, i64* %136, align 8
  %138 = icmp slt i64 %137, %134
  br i1 %138, label %139, label %144

139:                                              ; preds = %131
  %140 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 4, i64 %132, i32 0
  %141 = load i8, i8* %140, align 8
  %142 = icmp ugt i8 %141, 1
  %143 = zext i8 %141 to i64
  br i1 %142, label %149, label %177

144:                                              ; preds = %131
  %145 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 4, i64 %132, i32 1
  %146 = load i64*, i64** %145, align 8
  %147 = load i64, i64* %146, align 8
  %148 = shl nsw i64 %147, 16
  br label %184

149:                                              ; preds = %139, %174
  %150 = phi i64 [ %175, %174 ], [ 1, %139 ]
  %151 = getelementptr inbounds i64, i64* %136, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = icmp slt i64 %152, %134
  br i1 %153, label %174, label %154

154:                                              ; preds = %149
  %155 = and i64 %150, 4294967295
  %156 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 4, i64 %132, i32 1
  %157 = load i64*, i64** %156, align 8
  %158 = shl i64 %150, 32
  %159 = add i64 %158, -4294967296
  %160 = ashr exact i64 %159, 32
  %161 = getelementptr inbounds i64, i64* %157, i64 %160
  %162 = load i64, i64* %161, align 8
  %163 = shl i64 %162, 16
  %164 = getelementptr inbounds i64, i64* %157, i64 %155
  %165 = load i64, i64* %164, align 8
  %166 = sub nsw i64 %165, %162
  %167 = getelementptr inbounds i64, i64* %136, i64 %160
  %168 = load i64, i64* %167, align 8
  %169 = sub nsw i64 %134, %168
  %170 = sub nsw i64 %152, %168
  %171 = call i64 @FT_DivFix(i64 %169, i64 %170) #11
  %172 = mul nsw i64 %171, %166
  %173 = add nsw i64 %172, %163
  br label %184

174:                                              ; preds = %149
  %175 = add nuw nsw i64 %150, 1
  %176 = icmp eq i64 %175, %143
  br i1 %176, label %177, label %149

177:                                              ; preds = %174, %139
  %178 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %14, i64 0, i32 4, i64 %132, i32 1
  %179 = load i64*, i64** %178, align 8
  %180 = add nsw i64 %143, -1
  %181 = getelementptr inbounds i64, i64* %179, i64 %180
  %182 = load i64, i64* %181, align 8
  %183 = shl nsw i64 %182, 16
  br label %184

184:                                              ; preds = %144, %154, %177
  %185 = phi i64 [ %148, %144 ], [ %173, %154 ], [ %183, %177 ]
  %186 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %127, align 8
  %187 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %186, i64 %132, i32 2
  store i64 %185, i64* %187, align 8
  %188 = add nuw nsw i64 %132, 1
  %189 = icmp eq i64 %188, %48
  br i1 %189, label %190, label %131

190:                                              ; preds = %184, %126
  %191 = bitcast %struct.FT_MM_Var_** %1 to i8**
  store i8* %55, i8** %191, align 8
  %192 = load i32, i32* %4, align 4
  br label %193

193:                                              ; preds = %46, %47, %190
  %194 = phi i32 [ 6, %46 ], [ %56, %47 ], [ %192, %190 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %8) #11
  ret i32 %194
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Set_Var_Design(%struct.T1_FaceRec_* nocapture, i32, i64* nocapture readonly) #0 {
  %4 = alloca [4 x i64], align 16
  %5 = bitcast [4 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  %6 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 0, i64 0
  %7 = icmp ult i32 %1, 4
  %8 = select i1 %7, i32 %1, i32 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast [4 x i64]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 32, i1 false)
  br i1 %9, label %22, label %11

11:                                               ; preds = %3
  %12 = zext i32 %8 to i64
  br label %13

13:                                               ; preds = %11, %13
  %14 = phi i64 [ 0, %11 ], [ %20, %13 ]
  %15 = getelementptr inbounds i64, i64* %2, i64 %14
  %16 = load i64, i64* %15, align 8
  %17 = tail call i64 @FT_RoundFix(i64 %16) #11
  %18 = ashr i64 %17, 16
  %19 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 0, i64 %14
  store i64 %18, i64* %19, align 8
  %20 = add nuw nsw i64 %14, 1
  %21 = icmp ult i64 %20, %12
  br i1 %21, label %13, label %22

22:                                               ; preds = %13, %3
  %23 = call i32 @T1_Set_MM_Design(%struct.T1_FaceRec_* %0, i32 %8, i64* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Get_Var_Design(%struct.T1_FaceRec_* nocapture readonly, i32, i64* nocapture) #0 {
  %4 = alloca [4 x i64], align 16
  %5 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %6 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %5, align 8
  %7 = bitcast [4 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  %8 = icmp eq %struct.PS_BlendRec_* %6, null
  %9 = bitcast [4 x i64]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  br i1 %8, label %94, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 0, i64 0
  %12 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 5
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  call fastcc void @mm_weights_unmap(i64* %13, i64* nonnull %11, i32 %15)
  %16 = load i32, i32* %14, align 4
  %17 = icmp ult i32 %16, %1
  %18 = select i1 %17, i32 %16, i32 %1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %10
  %21 = zext i32 %18 to i64
  br label %36

22:                                               ; preds = %89
  %23 = trunc i64 %92 to i32
  br label %24

24:                                               ; preds = %22, %10
  %25 = phi i32 [ 0, %10 ], [ %23, %22 ]
  %26 = icmp ult i32 %25, %1
  br i1 %26, label %27, label %94

27:                                               ; preds = %24
  %28 = zext i32 %25 to i64
  %29 = getelementptr i64, i64* %2, i64 %28
  %30 = bitcast i64* %29 to i8*
  %31 = xor i32 %25, -1
  %32 = add i32 %31, %1
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = add nuw nsw i64 %34, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 %35, i1 false)
  br label %94

36:                                               ; preds = %20, %89
  %37 = phi i64 [ 0, %20 ], [ %92, %89 ]
  %38 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 0, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 4, i64 %37, i32 2
  %41 = load i64*, i64** %40, align 8
  %42 = load i64, i64* %41, align 8
  %43 = icmp slt i64 %42, %39
  br i1 %43, label %44, label %49

44:                                               ; preds = %36
  %45 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 4, i64 %37, i32 0
  %46 = load i8, i8* %45, align 8
  %47 = icmp ugt i8 %46, 1
  %48 = zext i8 %46 to i64
  br i1 %47, label %54, label %82

49:                                               ; preds = %36
  %50 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 4, i64 %37, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = load i64, i64* %51, align 8
  %53 = shl nsw i64 %52, 16
  br label %89

54:                                               ; preds = %44, %79
  %55 = phi i64 [ %80, %79 ], [ 1, %44 ]
  %56 = getelementptr inbounds i64, i64* %41, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = icmp slt i64 %57, %39
  br i1 %58, label %79, label %59

59:                                               ; preds = %54
  %60 = and i64 %55, 4294967295
  %61 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 4, i64 %37, i32 1
  %62 = load i64*, i64** %61, align 8
  %63 = shl i64 %55, 32
  %64 = add i64 %63, -4294967296
  %65 = ashr exact i64 %64, 32
  %66 = getelementptr inbounds i64, i64* %62, i64 %65
  %67 = load i64, i64* %66, align 8
  %68 = shl i64 %67, 16
  %69 = getelementptr inbounds i64, i64* %62, i64 %60
  %70 = load i64, i64* %69, align 8
  %71 = sub nsw i64 %70, %67
  %72 = getelementptr inbounds i64, i64* %41, i64 %65
  %73 = load i64, i64* %72, align 8
  %74 = sub nsw i64 %39, %73
  %75 = sub nsw i64 %57, %73
  %76 = tail call i64 @FT_DivFix(i64 %74, i64 %75) #11
  %77 = mul nsw i64 %76, %71
  %78 = add nsw i64 %77, %68
  br label %89

79:                                               ; preds = %54
  %80 = add nuw nsw i64 %55, 1
  %81 = icmp eq i64 %80, %48
  br i1 %81, label %82, label %54

82:                                               ; preds = %79, %44
  %83 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %6, i64 0, i32 4, i64 %37, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = add nsw i64 %48, -1
  %86 = getelementptr inbounds i64, i64* %84, i64 %85
  %87 = load i64, i64* %86, align 8
  %88 = shl nsw i64 %87, 16
  br label %89

89:                                               ; preds = %49, %59, %82
  %90 = phi i64 [ %53, %49 ], [ %78, %59 ], [ %88, %82 ]
  %91 = getelementptr inbounds i64, i64* %2, i64 %37
  store i64 %90, i64* %91, align 8
  %92 = add nuw nsw i64 %37, 1
  %93 = icmp ult i64 %92, %21
  br i1 %93, label %36, label %22

94:                                               ; preds = %27, %24, %3
  %95 = phi i32 [ 6, %3 ], [ 0, %24 ], [ 0, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret i32 %95
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @T1_Reset_MM_Blend(%struct.T1_FaceRec_* nocapture, i32) #2 {
  %3 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %4 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %3, align 8
  %5 = icmp eq %struct.PS_BlendRec_* %4, null
  br i1 %5, label %62, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %4, i64 0, i32 1
  %8 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %4, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %62, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %4, i64 0, i32 5
  br label %13

13:                                               ; preds = %50, %11
  %14 = phi i32 [ %9, %11 ], [ %51, %50 ]
  %15 = phi i64 [ 0, %11 ], [ %53, %50 ]
  %16 = phi i8 [ 0, %11 ], [ %52, %50 ]
  %17 = load i32, i32* %7, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %42, label %19

19:                                               ; preds = %13
  %20 = zext i32 %17 to i64
  %21 = add nsw i64 %20, -1
  %22 = and i64 %20, 7
  %23 = icmp ult i64 %21, 7
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = sub nsw i64 %20, %22
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i64 [ 65536, %24 ], [ %29, %26 ]
  %28 = phi i64 [ %25, %24 ], [ %30, %26 ]
  %29 = ashr i64 %27, 8
  %30 = add i64 %28, -8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %26

32:                                               ; preds = %26, %19
  %33 = phi i64 [ undef, %19 ], [ %29, %26 ]
  %34 = phi i64 [ 65536, %19 ], [ %29, %26 ]
  %35 = icmp eq i64 %22, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %39, %36 ], [ %34, %32 ]
  %38 = phi i64 [ %40, %36 ], [ %22, %32 ]
  %39 = ashr i64 %37, 1
  %40 = add i64 %38, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %36, !llvm.loop !9

42:                                               ; preds = %32, %36, %13
  %43 = phi i64 [ 65536, %13 ], [ %33, %32 ], [ %39, %36 ]
  %44 = load i64*, i64** %12, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 %15
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, %43
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  store i64 %43, i64* %45, align 8
  %49 = load i32, i32* %8, align 8
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i32 [ %49, %48 ], [ %14, %42 ]
  %52 = phi i8 [ 1, %48 ], [ %16, %42 ]
  %53 = add nuw nsw i64 %15, 1
  %54 = zext i32 %51 to i64
  %55 = icmp ult i64 %53, %54
  br i1 %55, label %13, label %56

56:                                               ; preds = %50
  %57 = icmp eq i8 %52, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, -32769
  store i64 %61, i64* %59, align 8
  br label %62

62:                                               ; preds = %2, %6, %56, %58
  %63 = phi i32 [ 0, %58 ], [ -1, %56 ], [ 6, %2 ], [ -1, %6 ]
  ret i32 %63
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @T1_Set_MM_WeightVector(%struct.T1_FaceRec_* nocapture, i32, i64* readonly) #2 {
  %4 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %5 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %4, align 8
  %6 = icmp eq %struct.PS_BlendRec_* %5, null
  br i1 %6, label %109, label %7

7:                                                ; preds = %3
  %8 = icmp ne i32 %1, 0
  %9 = icmp ne i64* %2, null
  %10 = or i1 %8, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %109, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 6
  %17 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 5
  br label %18

18:                                               ; preds = %15, %18
  %19 = phi i64 [ 0, %15 ], [ %25, %18 ]
  %20 = load i64*, i64** %16, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 %19
  %22 = load i64, i64* %21, align 8
  %23 = load i64*, i64** %17, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 %19
  store i64 %22, i64* %24, align 8
  %25 = add nuw nsw i64 %19, 1
  %26 = load i32, i32* %12, align 8
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 %25, %27
  br i1 %28, label %18, label %109

29:                                               ; preds = %7
  br i1 %9, label %30, label %109

30:                                               ; preds = %29
  %31 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp ugt i32 %32, %1
  %34 = select i1 %33, i32 %1, i32 %32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %62, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 5
  %38 = zext i32 %34 to i64
  %39 = add nsw i64 %38, -1
  %40 = and i64 %38, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  %43 = sub nsw i64 %38, %40
  br label %69

44:                                               ; preds = %69, %36
  %45 = phi i64 [ undef, %36 ], [ %91, %69 ]
  %46 = phi i64 [ 0, %36 ], [ %91, %69 ]
  %47 = icmp eq i64 %40, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %44, %48
  %49 = phi i64 [ %55, %48 ], [ %46, %44 ]
  %50 = phi i64 [ %56, %48 ], [ %40, %44 ]
  %51 = getelementptr inbounds i64, i64* %2, i64 %49
  %52 = load i64, i64* %51, align 8
  %53 = load i64*, i64** %37, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 %49
  store i64 %52, i64* %54, align 8
  %55 = add nuw nsw i64 %49, 1
  %56 = add i64 %50, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %48, !llvm.loop !10

58:                                               ; preds = %48, %44
  %59 = phi i64 [ %45, %44 ], [ %55, %48 ]
  %60 = trunc i64 %59 to i32
  %61 = load i32, i32* %31, align 8
  br label %62

62:                                               ; preds = %58, %30
  %63 = phi i32 [ %32, %30 ], [ %61, %58 ]
  %64 = phi i32 [ 0, %30 ], [ %60, %58 ]
  %65 = icmp ult i32 %64, %63
  br i1 %65, label %66, label %102

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 5
  %68 = zext i32 %64 to i64
  br label %94

69:                                               ; preds = %69, %42
  %70 = phi i64 [ 0, %42 ], [ %91, %69 ]
  %71 = phi i64 [ %43, %42 ], [ %92, %69 ]
  %72 = getelementptr inbounds i64, i64* %2, i64 %70
  %73 = load i64, i64* %72, align 8
  %74 = load i64*, i64** %37, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 %70
  store i64 %73, i64* %75, align 8
  %76 = or i64 %70, 1
  %77 = getelementptr inbounds i64, i64* %2, i64 %76
  %78 = load i64, i64* %77, align 8
  %79 = load i64*, i64** %37, align 8
  %80 = getelementptr inbounds i64, i64* %79, i64 %76
  store i64 %78, i64* %80, align 8
  %81 = or i64 %70, 2
  %82 = getelementptr inbounds i64, i64* %2, i64 %81
  %83 = load i64, i64* %82, align 8
  %84 = load i64*, i64** %37, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 %81
  store i64 %83, i64* %85, align 8
  %86 = or i64 %70, 3
  %87 = getelementptr inbounds i64, i64* %2, i64 %86
  %88 = load i64, i64* %87, align 8
  %89 = load i64*, i64** %37, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 %86
  store i64 %88, i64* %90, align 8
  %91 = add nuw nsw i64 %70, 4
  %92 = add i64 %71, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %44, label %69

94:                                               ; preds = %66, %94
  %95 = phi i64 [ %68, %66 ], [ %98, %94 ]
  %96 = load i64*, i64** %67, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 %95
  store i64 0, i64* %97, align 8
  %98 = add nuw nsw i64 %95, 1
  %99 = load i32, i32* %31, align 8
  %100 = zext i32 %99 to i64
  %101 = icmp ult i64 %98, %100
  br i1 %101, label %94, label %102

102:                                              ; preds = %94, %62
  %103 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 2
  %104 = load i64, i64* %103, align 8
  br i1 %8, label %105, label %107

105:                                              ; preds = %102
  %106 = or i64 %104, 32768
  store i64 %106, i64* %103, align 8
  br label %109

107:                                              ; preds = %102
  %108 = and i64 %104, -32769
  store i64 %108, i64* %103, align 8
  br label %109

109:                                              ; preds = %18, %11, %107, %105, %29, %3
  %110 = phi i32 [ 6, %3 ], [ 6, %29 ], [ 0, %105 ], [ 0, %107 ], [ 0, %11 ], [ 0, %18 ]
  ret i32 %110
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @T1_Get_MM_WeightVector(%struct.T1_FaceRec_* nocapture readonly, i32* nocapture, i64* nocapture) #2 {
  %4 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %5 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %4, align 8
  %6 = icmp eq %struct.PS_BlendRec_* %5, null
  br i1 %6, label %48, label %7

7:                                                ; preds = %3
  %8 = load i32, i32* %1, align 4
  %9 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %8, %10
  br i1 %11, label %45, label %12

12:                                               ; preds = %7
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 5
  br label %26

16:                                               ; preds = %26
  %17 = trunc i64 %32 to i32
  %18 = load i32, i32* %1, align 4
  br label %19

19:                                               ; preds = %16, %12
  %20 = phi i32 [ 0, %12 ], [ %33, %16 ]
  %21 = phi i32 [ %8, %12 ], [ %18, %16 ]
  %22 = phi i32 [ 0, %12 ], [ %17, %16 ]
  %23 = icmp ult i32 %22, %21
  br i1 %23, label %24, label %45

24:                                               ; preds = %19
  %25 = zext i32 %22 to i64
  br label %36

26:                                               ; preds = %14, %26
  %27 = phi i64 [ 0, %14 ], [ %32, %26 ]
  %28 = load i64*, i64** %15, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 %27
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i64, i64* %2, i64 %27
  store i64 %30, i64* %31, align 8
  %32 = add nuw nsw i64 %27, 1
  %33 = load i32, i32* %9, align 8
  %34 = zext i32 %33 to i64
  %35 = icmp ult i64 %32, %34
  br i1 %35, label %26, label %16

36:                                               ; preds = %24, %36
  %37 = phi i64 [ %25, %24 ], [ %39, %36 ]
  %38 = getelementptr inbounds i64, i64* %2, i64 %37
  store i64 0, i64* %38, align 8
  %39 = add nuw nsw i64 %37, 1
  %40 = load i32, i32* %1, align 4
  %41 = zext i32 %40 to i64
  %42 = icmp ult i64 %39, %41
  br i1 %42, label %36, label %43

43:                                               ; preds = %36
  %44 = load i32, i32* %9, align 8
  br label %45

45:                                               ; preds = %19, %43, %7
  %46 = phi i32 [ %10, %7 ], [ %44, %43 ], [ %20, %19 ]
  %47 = phi i32 [ 6, %7 ], [ 0, %43 ], [ 0, %19 ]
  store i32 %46, i32* %1, align 4
  br label %48

48:                                               ; preds = %45, %3
  %49 = phi i32 [ 6, %3 ], [ %47, %45 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define internal void @T1_Done_Blend(%struct.T1_FaceRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 25
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %5 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %4, align 8
  %6 = icmp eq %struct.PS_BlendRec_* %5, null
  br i1 %6, label %89, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 3
  %13 = getelementptr inbounds [16 x i64*], [16 x i64*]* %12, i64 0, i64 0
  %14 = bitcast [16 x i64*]* %12 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %15) #11
  store i64* null, i64** %13, align 8
  %16 = icmp ugt i32 %9, 1
  br i1 %16, label %17, label %24

17:                                               ; preds = %7
  %18 = getelementptr %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 3, i64 1
  %19 = bitcast i64** %18 to i8*
  %20 = add i32 %9, -2
  %21 = zext i32 %20 to i64
  %22 = shl nuw nsw i64 %21, 3
  %23 = add nuw nsw i64 %22, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 %23, i1 false)
  br label %24

24:                                               ; preds = %17, %7
  %25 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 8, i64 1
  %26 = bitcast %struct.PS_PrivateRec_** %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %27) #11
  store %struct.PS_PrivateRec_* null, %struct.PS_PrivateRec_** %25, align 8
  %28 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 7, i64 1
  %29 = bitcast %struct.PS_FontInfoRec_** %28 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %30) #11
  store %struct.PS_FontInfoRec_* null, %struct.PS_FontInfoRec_** %28, align 8
  %31 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 10, i64 1
  %32 = bitcast %struct.FT_BBox_** %31 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %33) #11
  store %struct.FT_BBox_* null, %struct.FT_BBox_** %31, align 8
  %34 = icmp eq i32 %9, 0
  br i1 %34, label %61, label %35

35:                                               ; preds = %24
  %36 = zext i32 %9 to i64
  %37 = and i64 %36, 1
  %38 = icmp eq i32 %9, 1
  br i1 %38, label %54, label %39

39:                                               ; preds = %35
  %40 = sub nsw i64 %36, %37
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i64 [ 0, %39 ], [ %51, %41 ]
  %43 = phi i64 [ %40, %39 ], [ %52, %41 ]
  %44 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 8, i64 %42
  store %struct.PS_PrivateRec_* null, %struct.PS_PrivateRec_** %44, align 8
  %45 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 7, i64 %42
  store %struct.PS_FontInfoRec_* null, %struct.PS_FontInfoRec_** %45, align 8
  %46 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 10, i64 %42
  store %struct.FT_BBox_* null, %struct.FT_BBox_** %46, align 8
  %47 = or i64 %42, 1
  %48 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 8, i64 %47
  store %struct.PS_PrivateRec_* null, %struct.PS_PrivateRec_** %48, align 8
  %49 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 7, i64 %47
  store %struct.PS_FontInfoRec_* null, %struct.PS_FontInfoRec_** %49, align 8
  %50 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 10, i64 %47
  store %struct.FT_BBox_* null, %struct.FT_BBox_** %50, align 8
  %51 = add nuw nsw i64 %42, 2
  %52 = add i64 %43, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %41

54:                                               ; preds = %41, %35
  %55 = phi i64 [ 0, %35 ], [ %51, %41 ]
  %56 = icmp eq i64 %37, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 8, i64 %55
  store %struct.PS_PrivateRec_* null, %struct.PS_PrivateRec_** %58, align 8
  %59 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 7, i64 %55
  store %struct.PS_FontInfoRec_* null, %struct.PS_FontInfoRec_** %59, align 8
  %60 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 10, i64 %55
  store %struct.FT_BBox_* null, %struct.FT_BBox_** %60, align 8
  br label %61

61:                                               ; preds = %57, %54, %24
  %62 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 5
  %63 = bitcast i64** %62 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %64) #11
  %65 = icmp eq i32 %11, 0
  %66 = bitcast i64** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false)
  br i1 %65, label %86, label %67

67:                                               ; preds = %61
  %68 = zext i32 %11 to i64
  br label %72

69:                                               ; preds = %72
  br i1 %65, label %86, label %70

70:                                               ; preds = %69
  %71 = zext i32 %11 to i64
  br label %78

72:                                               ; preds = %72, %67
  %73 = phi i64 [ 0, %67 ], [ %76, %72 ]
  %74 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 2, i64 %73
  %75 = load i8*, i8** %74, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %75) #11
  store i8* null, i8** %74, align 8
  %76 = add nuw nsw i64 %73, 1
  %77 = icmp eq i64 %76, %68
  br i1 %77, label %69, label %72

78:                                               ; preds = %78, %70
  %79 = phi i64 [ 0, %70 ], [ %84, %78 ]
  %80 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 4, i64 %79, i32 1
  %81 = bitcast i64** %80 to i8**
  %82 = load i8*, i8** %81, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %82) #11
  store i64* null, i64** %80, align 8
  %83 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %5, i64 0, i32 4, i64 %79, i32 0
  store i8 0, i8* %83, align 8
  %84 = add nuw nsw i64 %79, 1
  %85 = icmp eq i64 %84, %71
  br i1 %85, label %86, label %78

86:                                               ; preds = %78, %61, %69
  %87 = bitcast %struct.PS_BlendRec_** %4 to i8**
  %88 = load i8*, i8** %87, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %88) #11
  store %struct.PS_BlendRec_* null, %struct.PS_BlendRec_** %4, align 8
  br label %89

89:                                               ; preds = %1, %86
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @mm_weights_unmap(i64* readonly, i64* nocapture, i32) unnamed_addr #2 {
  switch i32 %2, label %49 [
    i32 1, label %4
    i32 2, label %7
    i32 3, label %18
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds i64, i64* %0, i64 1
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %1, align 8
  br label %128

7:                                                ; preds = %3
  %8 = getelementptr inbounds i64, i64* %0, i64 3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i64, i64* %0, i64 1
  %11 = load i64, i64* %10, align 8
  %12 = add nsw i64 %11, %9
  store i64 %12, i64* %1, align 8
  %13 = load i64, i64* %8, align 8
  %14 = getelementptr inbounds i64, i64* %0, i64 2
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, %13
  %17 = getelementptr inbounds i64, i64* %1, i64 1
  store i64 %16, i64* %17, align 8
  br label %128

18:                                               ; preds = %3
  %19 = getelementptr inbounds i64, i64* %0, i64 7
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i64, i64* %0, i64 5
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, %20
  %24 = getelementptr inbounds i64, i64* %0, i64 3
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %23, %25
  %27 = getelementptr inbounds i64, i64* %0, i64 1
  %28 = load i64, i64* %27, align 8
  %29 = add nsw i64 %26, %28
  store i64 %29, i64* %1, align 8
  %30 = load i64, i64* %19, align 8
  %31 = getelementptr inbounds i64, i64* %0, i64 6
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, %30
  %34 = load i64, i64* %24, align 8
  %35 = add nsw i64 %33, %34
  %36 = getelementptr inbounds i64, i64* %0, i64 2
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %35, %37
  %39 = getelementptr inbounds i64, i64* %1, i64 1
  store i64 %38, i64* %39, align 8
  %40 = load i64, i64* %19, align 8
  %41 = load i64, i64* %31, align 8
  %42 = add nsw i64 %41, %40
  %43 = load i64, i64* %21, align 8
  %44 = add nsw i64 %42, %43
  %45 = getelementptr inbounds i64, i64* %0, i64 4
  %46 = load i64, i64* %45, align 8
  %47 = add nsw i64 %44, %46
  %48 = getelementptr inbounds i64, i64* %1, i64 2
  store i64 %47, i64* %48, align 8
  br label %128

49:                                               ; preds = %3
  %50 = getelementptr inbounds i64, i64* %0, i64 15
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i64, i64* %0, i64 13
  %53 = load i64, i64* %52, align 8
  %54 = add nsw i64 %53, %51
  %55 = getelementptr inbounds i64, i64* %0, i64 11
  %56 = load i64, i64* %55, align 8
  %57 = add nsw i64 %54, %56
  %58 = getelementptr inbounds i64, i64* %0, i64 9
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %57, %59
  %61 = getelementptr inbounds i64, i64* %0, i64 7
  %62 = load i64, i64* %61, align 8
  %63 = add nsw i64 %60, %62
  %64 = getelementptr inbounds i64, i64* %0, i64 5
  %65 = load i64, i64* %64, align 8
  %66 = add nsw i64 %63, %65
  %67 = getelementptr inbounds i64, i64* %0, i64 3
  %68 = load i64, i64* %67, align 8
  %69 = add nsw i64 %66, %68
  %70 = getelementptr inbounds i64, i64* %0, i64 1
  %71 = load i64, i64* %70, align 8
  %72 = add nsw i64 %69, %71
  store i64 %72, i64* %1, align 8
  %73 = load i64, i64* %50, align 8
  %74 = getelementptr inbounds i64, i64* %0, i64 14
  %75 = load i64, i64* %74, align 8
  %76 = add nsw i64 %75, %73
  %77 = load i64, i64* %55, align 8
  %78 = add nsw i64 %76, %77
  %79 = getelementptr inbounds i64, i64* %0, i64 10
  %80 = load i64, i64* %79, align 8
  %81 = add nsw i64 %78, %80
  %82 = load i64, i64* %61, align 8
  %83 = add nsw i64 %81, %82
  %84 = getelementptr inbounds i64, i64* %0, i64 6
  %85 = load i64, i64* %84, align 8
  %86 = add nsw i64 %83, %85
  %87 = load i64, i64* %67, align 8
  %88 = add nsw i64 %86, %87
  %89 = getelementptr inbounds i64, i64* %0, i64 2
  %90 = load i64, i64* %89, align 8
  %91 = add nsw i64 %88, %90
  %92 = getelementptr inbounds i64, i64* %1, i64 1
  store i64 %91, i64* %92, align 8
  %93 = load i64, i64* %50, align 8
  %94 = load i64, i64* %74, align 8
  %95 = add nsw i64 %94, %93
  %96 = load i64, i64* %52, align 8
  %97 = add nsw i64 %95, %96
  %98 = getelementptr inbounds i64, i64* %0, i64 12
  %99 = load i64, i64* %98, align 8
  %100 = add nsw i64 %97, %99
  %101 = load i64, i64* %61, align 8
  %102 = add nsw i64 %100, %101
  %103 = load i64, i64* %84, align 8
  %104 = add nsw i64 %102, %103
  %105 = load i64, i64* %64, align 8
  %106 = add nsw i64 %104, %105
  %107 = getelementptr inbounds i64, i64* %0, i64 4
  %108 = load i64, i64* %107, align 8
  %109 = add nsw i64 %106, %108
  %110 = getelementptr inbounds i64, i64* %1, i64 2
  store i64 %109, i64* %110, align 8
  %111 = load i64, i64* %50, align 8
  %112 = load i64, i64* %74, align 8
  %113 = add nsw i64 %112, %111
  %114 = load i64, i64* %52, align 8
  %115 = add nsw i64 %113, %114
  %116 = load i64, i64* %98, align 8
  %117 = add nsw i64 %115, %116
  %118 = load i64, i64* %55, align 8
  %119 = add nsw i64 %117, %118
  %120 = load i64, i64* %79, align 8
  %121 = add nsw i64 %119, %120
  %122 = load i64, i64* %58, align 8
  %123 = add nsw i64 %121, %122
  %124 = getelementptr inbounds i64, i64* %0, i64 8
  %125 = load i64, i64* %124, align 8
  %126 = add nsw i64 %123, %125
  %127 = getelementptr inbounds i64, i64* %1, i64 3
  store i64 %126, i64* %127, align 8
  br label %128

128:                                              ; preds = %7, %49, %18, %4
  ret void
}

declare hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #3

declare i64 @FT_DivFix(i64, i64) local_unnamed_addr #3

declare i64 @FT_RoundFix(i64) local_unnamed_addr #3

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #3

declare hidden i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_*, i64) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @t1_get_index(i8* nocapture readonly, i64, i8* nocapture readonly) #5 {
  %4 = icmp ugt i64 %1, 65535
  br i1 %4, label %35, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %2, i64 392
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %2, i64 400
  %12 = bitcast i8* %11 to i8***
  %13 = load i8**, i8*** %12, align 8
  %14 = sext i32 %8 to i64
  br label %15

15:                                               ; preds = %10, %30
  %16 = phi i64 [ 0, %10 ], [ %31, %30 ]
  %17 = getelementptr inbounds i8*, i8** %13, i64 %16
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %15
  %21 = load i8, i8* %18, align 1
  %22 = load i8, i8* %0, align 1
  %23 = icmp eq i8 %21, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = tail call i64 @strlen(i8* nonnull %18) #12
  %26 = icmp eq i64 %25, %1
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = tail call i32 @strncmp(i8* nonnull %18, i8* %0, i64 %1) #12
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %20, %24, %27, %15
  %31 = add nuw nsw i64 %16, 1
  %32 = icmp slt i64 %31, %14
  br i1 %32, label %15, label %35

33:                                               ; preds = %27
  %34 = trunc i64 %16 to i32
  br label %35

35:                                               ; preds = %30, %33, %5, %3
  %36 = phi i32 [ 0, %3 ], [ 0, %5 ], [ %34, %33 ], [ 0, %30 ]
  ret i32 %36
}

declare hidden void @FT_Stream_ExitFrame(%struct.FT_StreamRec_*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

declare hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #3

declare i32 @FT_Set_Charmap(%struct.FT_FaceRec_*, %struct.FT_CharMapRec_*) local_unnamed_addr #3

declare i32 @FT_Get_Char_Index(%struct.FT_FaceRec_*, i64) local_unnamed_addr #3

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @compare_kern_pairs(i8* nocapture readonly, i8* nocapture readonly) #4 {
  %3 = bitcast i8* %0 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = shl nuw nsw i64 %5, 16
  %7 = getelementptr inbounds i8, i8* %0, i64 4
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = bitcast i8* %1 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = shl nuw nsw i64 %14, 16
  %16 = getelementptr inbounds i8, i8* %1, i64 4
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = icmp ugt i64 %11, %20
  %22 = icmp ult i64 %11, %20
  %23 = sext i1 %22 to i32
  %24 = select i1 %21, i32 1, i32 %23
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @T1_Parse_Glyph(%struct.T1_DecoderRec_*, i32) #0 {
  %3 = alloca %struct.FT_Data_, align 8
  %4 = alloca i8, align 1
  %5 = bitcast %struct.FT_Data_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 0, i8* %4, align 1
  %6 = call fastcc i32 @T1_Parse_Glyph_And_Get_Char_String(%struct.T1_DecoderRec_* %0, i32 %1, %struct.FT_Data_* nonnull %3, i8* nonnull %4)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 1
  %10 = bitcast %struct.FT_FaceRec_** %9 to %struct.T1_FaceRec_**
  %11 = load %struct.T1_FaceRec_*, %struct.T1_FaceRec_** %10, align 8
  %12 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %11, i64 0, i32 0, i32 30
  %13 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %13, i64 0, i32 4
  %15 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %14, align 8
  %16 = icmp eq %struct.FT_Incremental_InterfaceRec_* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %15, i64 0, i32 0
  %19 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %18, align 8
  %20 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %19, i64 0, i32 1
  %21 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %20, align 8
  %22 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %15, i64 0, i32 1
  %23 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %22, align 8
  call void %21(%struct.FT_IncrementalRec_* %23, %struct.FT_Data_* nonnull %3) #11
  br label %24

24:                                               ; preds = %17, %8, %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @T1_Parse_Glyph_And_Get_Char_String(%struct.T1_DecoderRec_*, i32, %struct.FT_Data_*, i8* nocapture) unnamed_addr #0 {
  %5 = alloca %struct.PS_Decoder_, align 8
  %6 = alloca %struct.CFF_SubFontRec_, align 8
  %7 = alloca %struct.FT_Incremental_MetricsRec_, align 8
  %8 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 1
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 3, i32 5
  %11 = bitcast i8** %10 to %struct.PSAux_ServiceRec_**
  %12 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %11, align 8
  %13 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %12, i64 0, i32 3
  %14 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %13, align 8
  %15 = bitcast %struct.PS_Decoder_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1264, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 1264, i1 false)
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 30
  %17 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %17, i64 0, i32 4
  %19 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %18, align 8
  %20 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 13
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 2, i32 25
  %22 = bitcast %struct.FT_Matrix_* %20 to i8*
  %23 = bitcast %struct.FT_MemoryRec_** %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 14
  %25 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 2, i32 28
  %26 = bitcast %struct.FT_Vector_* %24 to i8*
  %27 = bitcast %struct.FT_Generic_* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = icmp ne %struct.FT_Incremental_InterfaceRec_* %19, null
  br i1 %28, label %44, label %29

29:                                               ; preds = %4
  %30 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 2, i32 22
  %31 = bitcast %struct.FT_SizeRec_** %30 to i8***
  %32 = load i8**, i8*** %31, align 8
  %33 = zext i32 %1 to i64
  %34 = getelementptr inbounds i8*, i8** %32, i64 %33
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %struct.FT_Data_* %2 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 2, i32 23
  %39 = bitcast %struct.FT_CharMapRec_** %38 to i32**
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 %33
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %2, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  br label %53

44:                                               ; preds = %4
  %45 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %19, i64 0, i32 0
  %46 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %45, align 8
  %47 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %46, i64 0, i32 0
  %48 = load i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)** %47, align 8
  %49 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %19, i64 0, i32 1
  %50 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %49, align 8
  %51 = tail call i32 %48(%struct.FT_IncrementalRec_* %50, i32 %1, %struct.FT_Data_* %2) #11
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %137

53:                                               ; preds = %29, %44
  %54 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 14
  %55 = load i8, i8* %54, align 2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %14, i64 0, i32 2
  %59 = load i32 (%struct.T1_DecoderRec_*, i8*, i32)*, i32 (%struct.T1_DecoderRec_*, i8*, i32)** %58, align 8
  %60 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %2, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %2, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = tail call i32 %59(%struct.T1_DecoderRec_* %0, i8* %61, i32 %63) #11
  br label %97

65:                                               ; preds = %53
  %66 = bitcast %struct.CFF_SubFontRec_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1224, i8* nonnull %66) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 1224, i1 false)
  %67 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %12, i64 0, i32 6
  %68 = load void (%struct.PS_Decoder_*, i8*, i8)*, void (%struct.PS_Decoder_*, i8*, i8)** %67, align 8
  %69 = bitcast %struct.T1_DecoderRec_* %0 to i8*
  call void %68(%struct.PS_Decoder_* nonnull %5, i8* %69, i8 zeroext 1) #11
  %70 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %12, i64 0, i32 7
  %71 = load void (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*, %struct.CFF_SubFontRec_*)*, void (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*, %struct.CFF_SubFontRec_*)** %70, align 8
  %72 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 1, i32 8
  %73 = bitcast %struct.FT_Bitmap_Size_** %72 to %struct.PS_PrivateRec_*
  call void %71(%struct.FT_FaceRec_* %9, %struct.PS_PrivateRec_* %73, %struct.CFF_SubFontRec_* nonnull %6) #11
  %74 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 9
  store %struct.CFF_SubFontRec_* %6, %struct.CFF_SubFontRec_** %74, align 8
  %75 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %14, i64 0, i32 3
  %76 = load i32 (%struct.PS_Decoder_*, i8*, i64)*, i32 (%struct.PS_Decoder_*, i8*, i64)** %75, align 8
  %77 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %2, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %2, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = sext i32 %80 to i64
  %82 = call i32 %76(%struct.PS_Decoder_* nonnull %5, i8* %78, i64 %81) #11
  %83 = and i32 %82, 255
  %84 = icmp eq i32 %83, 164
  br i1 %84, label %85, label %95

85:                                               ; preds = %65
  %86 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 2
  %87 = bitcast %struct.FT_GlyphSlotRec_** %86 to %struct.T1_GlyphSlotRec_**
  %88 = load %struct.T1_GlyphSlotRec_*, %struct.T1_GlyphSlotRec_** %87, align 8
  %89 = getelementptr inbounds %struct.T1_GlyphSlotRec_, %struct.T1_GlyphSlotRec_* %88, i64 0, i32 1
  store i8 0, i8* %89, align 8
  store i8 1, i8* %3, align 1
  %90 = load i32 (%struct.PS_Decoder_*, i8*, i64)*, i32 (%struct.PS_Decoder_*, i8*, i64)** %75, align 8
  %91 = load i8*, i8** %77, align 8
  %92 = load i32, i32* %79, align 8
  %93 = sext i32 %92 to i64
  %94 = call i32 %90(%struct.PS_Decoder_* nonnull %5, i8* %91, i64 %93) #11
  br label %95

95:                                               ; preds = %85, %65
  %96 = phi i32 [ %94, %85 ], [ %82, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 1224, i8* nonnull %66) #11
  br label %97

97:                                               ; preds = %57, %95
  %98 = phi i32 [ %64, %57 ], [ %96, %95 ]
  %99 = icmp eq i32 %98, 0
  %100 = and i1 %28, %99
  br i1 %100, label %101, label %137

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %19, i64 0, i32 0
  %103 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %102, align 8
  %104 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %103, i64 0, i32 2
  %105 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %104, align 8
  %106 = icmp eq i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* %105, null
  br i1 %106, label %137, label %107

107:                                              ; preds = %101
  %108 = bitcast %struct.FT_Incremental_MetricsRec_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #11
  %109 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 0
  %110 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 1
  %111 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 2
  %112 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 3
  %113 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 8, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = call i64 @FT_RoundFix(i64 %114) #11
  %116 = ashr i64 %115, 16
  store i64 %116, i64* %109, align 8
  store i64 0, i64* %110, align 8
  %117 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 9, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = call i64 @FT_RoundFix(i64 %118) #11
  %120 = ashr i64 %119, 16
  store i64 %120, i64* %111, align 8
  %121 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 9, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = call i64 @FT_RoundFix(i64 %122) #11
  %124 = ashr i64 %123, 16
  store i64 %124, i64* %112, align 8
  %125 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %102, align 8
  %126 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %125, i64 0, i32 2
  %127 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %126, align 8
  %128 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %19, i64 0, i32 1
  %129 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %128, align 8
  %130 = call i32 %127(%struct.FT_IncrementalRec_* %129, i32 %1, i8 zeroext 0, %struct.FT_Incremental_MetricsRec_* nonnull %7) #11
  %131 = load i64, i64* %109, align 8
  %132 = shl nsw i64 %131, 16
  store i64 %132, i64* %113, align 8
  %133 = bitcast i64* %111 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8
  %135 = shl nsw <2 x i64> %134, <i64 16, i64 16>
  %136 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %136, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #11
  br label %137

137:                                              ; preds = %44, %101, %97, %107
  %138 = phi i32 [ %130, %107 ], [ 0, %101 ], [ %98, %97 ], [ %51, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 1264, i8* nonnull %15) #11
  ret i32 %138
}

declare void @FT_Outline_Transform(%struct.FT_Outline_*, %struct.FT_Matrix_*) local_unnamed_addr #3

declare void @FT_Outline_Translate(%struct.FT_Outline_*, i64, i64) local_unnamed_addr #3

declare void @FT_Outline_Get_CBox(%struct.FT_Outline_*, %struct.FT_BBox_*) local_unnamed_addr #3

declare hidden void @ft_synthesize_vertical_metrics(%struct.FT_Glyph_Metrics_*, i64) local_unnamed_addr #3

declare %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #3

declare hidden void @FT_Request_Metrics(%struct.FT_FaceRec_*, %struct.FT_Size_RequestRec_*) local_unnamed_addr #3

declare void @ft_hash_str_free(%struct.FT_HashRec_*, %struct.FT_MemoryRec_*) local_unnamed_addr #3

declare hidden i8* @ft_module_get_service(%struct.FT_ModuleRec_*, i8*, i8 zeroext) local_unnamed_addr #3

declare hidden i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #3

declare hidden i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_*, i8*, %struct.FT_CharMapRec_*, %struct.FT_CMapRec_**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @parse_dict(%struct.T1_FaceRec_*, %struct.T1_Loader_*, i8*, i64) unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 0
  store i8* %2, i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %3
  %9 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 2
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 2
  %12 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %11, align 8
  tail call void %12(%struct.PS_ParserRec_* %6) #11
  %13 = load i8*, i8** %7, align 8
  %14 = icmp ult i8* %13, %8
  br i1 %14, label %15, label %318

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 11
  %17 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 3
  %18 = bitcast i8** %5 to i8*
  %19 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %20 = bitcast i8** %5 to i64*
  %21 = bitcast i8** %5 to %struct.T1_FaceRec_**
  %22 = bitcast %struct.T1_FaceRec_* %0 to i8*
  %23 = bitcast i8** %5 to %struct.T1_Loader_**
  %24 = bitcast %struct.T1_Loader_* %1 to i8*
  %25 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 21
  %26 = bitcast i8** %5 to %struct.FT_BBox_**
  %27 = bitcast %struct.FT_BBox_* %25 to i8*
  %28 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 2
  %29 = bitcast i8** %5 to %struct.PS_PrivateRec_**
  %30 = bitcast %struct.PS_PrivateRec_* %28 to i8*
  %31 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 1
  %32 = bitcast i8** %5 to %struct.PS_FontExtraRec_**
  %33 = bitcast %struct.PS_FontExtraRec_* %31 to i8*
  %34 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 0
  %35 = bitcast i8** %5 to %struct.PS_FontInfoRec_**
  %36 = bitcast %struct.PS_FontInfoRec_* %34 to i8*
  %37 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1
  %38 = bitcast i8** %5 to %struct.T1_FontRec_**
  %39 = bitcast %struct.T1_FontRec_* %37 to i8*
  %40 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 11
  %41 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 12
  %42 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0
  %43 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 30
  %44 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 4
  br label %45

45:                                               ; preds = %15, %312
  %46 = phi i8* [ %13, %15 ], [ %316, %312 ]
  %47 = phi i8 [ 0, %15 ], [ %314, %312 ]
  %48 = phi i8* [ null, %15 ], [ %313, %312 ]
  %49 = load i8, i8* %46, align 1
  switch i8 %49, label %91 [
    i8 101, label %50
    i8 99, label %61
    i8 70, label %72
  ]

50:                                               ; preds = %45
  %51 = getelementptr inbounds i8, i8* %46, i64 6
  %52 = icmp eq i8* %51, %8
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = icmp ult i8* %51, %8
  br i1 %54, label %55, label %91

55:                                               ; preds = %53
  %56 = getelementptr inbounds i8, i8* %46, i64 5
  %57 = load i8, i8* %56, align 1
  switch i8 %57, label %91 [
    i8 32, label %58
    i8 13, label %58
    i8 10, label %58
    i8 9, label %58
    i8 12, label %58
    i8 0, label %58
    i8 47, label %58
    i8 40, label %58
    i8 41, label %58
    i8 60, label %58
    i8 62, label %58
    i8 91, label %58
    i8 93, label %58
    i8 123, label %58
    i8 125, label %58
    i8 37, label %58
  ]

58:                                               ; preds = %55, %55, %55, %55, %55, %55, %55, %55, %55, %55, %55, %55, %55, %55, %55, %55, %50
  %59 = call i32 @strncmp(i8* %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i64 5) #12
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %318, label %91

61:                                               ; preds = %45
  %62 = getelementptr inbounds i8, i8* %46, i64 10
  %63 = icmp eq i8* %62, %8
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = icmp ult i8* %62, %8
  br i1 %65, label %66, label %91

66:                                               ; preds = %64
  %67 = getelementptr inbounds i8, i8* %46, i64 9
  %68 = load i8, i8* %67, align 1
  switch i8 %68, label %91 [
    i8 32, label %69
    i8 13, label %69
    i8 10, label %69
    i8 9, label %69
    i8 12, label %69
    i8 0, label %69
    i8 47, label %69
    i8 40, label %69
    i8 41, label %69
    i8 60, label %69
    i8 62, label %69
    i8 91, label %69
    i8 93, label %69
    i8 123, label %69
    i8 125, label %69
    i8 37, label %69
  ]

69:                                               ; preds = %66, %66, %66, %66, %66, %66, %66, %66, %66, %66, %66, %66, %66, %66, %66, %66, %61
  %70 = call i32 @strncmp(i8* %46, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i64 9) #12
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %318, label %91

72:                                               ; preds = %45
  %73 = getelementptr inbounds i8, i8* %46, i64 14
  %74 = icmp eq i8* %73, %8
  br i1 %74, label %80, label %75

75:                                               ; preds = %72
  %76 = icmp ult i8* %73, %8
  br i1 %76, label %77, label %91

77:                                               ; preds = %75
  %78 = getelementptr inbounds i8, i8* %46, i64 13
  %79 = load i8, i8* %78, align 1
  switch i8 %79, label %91 [
    i8 32, label %80
    i8 13, label %80
    i8 10, label %80
    i8 9, label %80
    i8 12, label %80
    i8 0, label %80
    i8 47, label %80
    i8 40, label %80
    i8 41, label %80
    i8 60, label %80
    i8 62, label %80
    i8 91, label %80
    i8 93, label %80
    i8 123, label %80
    i8 125, label %80
    i8 37, label %80
  ]

80:                                               ; preds = %77, %77, %77, %77, %77, %77, %77, %77, %77, %77, %77, %77, %77, %77, %77, %77, %72
  %81 = call i32 @strncmp(i8* %46, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0), i64 13) #12
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %91

83:                                               ; preds = %80
  %84 = load i32, i32* %16, align 4
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = or i32 %84, 2
  store i32 %88, i32* %16, align 4
  br label %89

89:                                               ; preds = %83, %87
  %90 = getelementptr inbounds i8, i8* %46, i64 13
  store i8* %90, i8** %7, align 8
  br label %312

91:                                               ; preds = %45, %53, %58, %55, %64, %69, %66, %77, %80, %75
  %92 = zext i8 %49 to i32
  %93 = add nsw i32 %92, -48
  %94 = icmp ult i32 %93, 10
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %17, align 8
  call void %96(%struct.PS_ParserRec_* %6) #11
  %97 = load i32, i32* %10, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %312, label %318

99:                                               ; preds = %91
  %100 = icmp eq i8 %49, 82
  %101 = getelementptr inbounds i8, i8* %46, i64 6
  %102 = icmp ult i8* %101, %8
  %103 = and i1 %102, %100
  br i1 %103, label %104, label %143

104:                                              ; preds = %99
  %105 = getelementptr inbounds i8, i8* %46, i64 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp ne i8 %106, 68
  %108 = icmp eq i8 %47, 0
  %109 = or i1 %108, %107
  br i1 %109, label %308, label %110

110:                                              ; preds = %104
  store i8* %48, i8** %7, align 8
  %111 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %43, align 8
  %112 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %111, i64 0, i32 4
  %113 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %112, align 8
  %114 = load i8*, i8** %9, align 8
  %115 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %11, align 8
  call void %115(%struct.PS_ParserRec_* %6) #11
  %116 = load i8*, i8** %7, align 8
  %117 = icmp ult i8* %116, %114
  br i1 %117, label %118, label %135

118:                                              ; preds = %110
  %119 = load i8, i8* %116, align 1
  %120 = zext i8 %119 to i32
  %121 = add nsw i32 %120, -48
  %122 = icmp ult i32 %121, 10
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %44, align 8
  %125 = call i64 %124(%struct.PS_ParserRec_* %6) #11
  %126 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %17, align 8
  call void %126(%struct.PS_ParserRec_* %6) #11
  %127 = load i8*, i8** %7, align 8
  %128 = icmp sgt i64 %125, -1
  br i1 %128, label %129, label %135

129:                                              ; preds = %123
  %130 = getelementptr inbounds i8, i8* %127, i64 1
  %131 = ptrtoint i8* %114 to i64
  %132 = ptrtoint i8* %130 to i64
  %133 = sub i64 %131, %132
  %134 = icmp slt i64 %125, %133
  br i1 %134, label %138, label %135

135:                                              ; preds = %129, %123, %118, %110
  %136 = icmp eq %struct.FT_Incremental_InterfaceRec_* %113, null
  br i1 %136, label %137, label %320

137:                                              ; preds = %135
  store i32 3, i32* %10, align 8
  br label %320

138:                                              ; preds = %129
  %139 = add nuw nsw i64 %125, 1
  %140 = getelementptr inbounds i8, i8* %127, i64 %139
  store i8* %140, i8** %7, align 8
  %141 = load i32, i32* %10, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %312, label %320

143:                                              ; preds = %99
  %144 = icmp eq i8 %49, 45
  %145 = and i1 %102, %144
  br i1 %145, label %146, label %185

146:                                              ; preds = %143
  %147 = getelementptr inbounds i8, i8* %46, i64 1
  %148 = load i8, i8* %147, align 1
  %149 = icmp ne i8 %148, 124
  %150 = icmp eq i8 %47, 0
  %151 = or i1 %150, %149
  br i1 %151, label %308, label %152

152:                                              ; preds = %146
  store i8* %48, i8** %7, align 8
  %153 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %43, align 8
  %154 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %153, i64 0, i32 4
  %155 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %154, align 8
  %156 = load i8*, i8** %9, align 8
  %157 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %11, align 8
  call void %157(%struct.PS_ParserRec_* %6) #11
  %158 = load i8*, i8** %7, align 8
  %159 = icmp ult i8* %158, %156
  br i1 %159, label %160, label %177

160:                                              ; preds = %152
  %161 = load i8, i8* %158, align 1
  %162 = zext i8 %161 to i32
  %163 = add nsw i32 %162, -48
  %164 = icmp ult i32 %163, 10
  br i1 %164, label %165, label %177

165:                                              ; preds = %160
  %166 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %44, align 8
  %167 = call i64 %166(%struct.PS_ParserRec_* %6) #11
  %168 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %17, align 8
  call void %168(%struct.PS_ParserRec_* %6) #11
  %169 = load i8*, i8** %7, align 8
  %170 = icmp sgt i64 %167, -1
  br i1 %170, label %171, label %177

171:                                              ; preds = %165
  %172 = getelementptr inbounds i8, i8* %169, i64 1
  %173 = ptrtoint i8* %156 to i64
  %174 = ptrtoint i8* %172 to i64
  %175 = sub i64 %173, %174
  %176 = icmp slt i64 %167, %175
  br i1 %176, label %180, label %177

177:                                              ; preds = %171, %165, %160, %152
  %178 = icmp eq %struct.FT_Incremental_InterfaceRec_* %155, null
  br i1 %178, label %179, label %320

179:                                              ; preds = %177
  store i32 3, i32* %10, align 8
  br label %320

180:                                              ; preds = %171
  %181 = add nuw nsw i64 %167, 1
  %182 = getelementptr inbounds i8, i8* %169, i64 %181
  store i8* %182, i8** %7, align 8
  %183 = load i32, i32* %10, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %312, label %320

185:                                              ; preds = %143
  %186 = icmp eq i8 %49, 47
  %187 = getelementptr inbounds i8, i8* %46, i64 2
  %188 = icmp ult i8* %187, %8
  %189 = and i1 %188, %186
  br i1 %189, label %190, label %308

190:                                              ; preds = %185
  %191 = getelementptr inbounds i8, i8* %46, i64 1
  store i8* %191, i8** %7, align 8
  %192 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %17, align 8
  call void %192(%struct.PS_ParserRec_* %6) #11
  %193 = load i32, i32* %10, align 8
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %318

195:                                              ; preds = %190
  %196 = load i8*, i8** %7, align 8
  %197 = ptrtoint i8* %196 to i64
  %198 = ptrtoint i8* %191 to i64
  %199 = sub i64 %197, %198
  %200 = trunc i64 %199 to i32
  %201 = add i32 %200, -1
  %202 = icmp ult i32 %201, 21
  %203 = icmp ult i8* %196, %8
  %204 = and i1 %203, %202
  br i1 %204, label %205, label %312

205:                                              ; preds = %195
  %206 = load i8, i8* %191, align 1
  %207 = and i64 %199, 4294967295
  br label %208

208:                                              ; preds = %205, %303
  %209 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), %205 ], [ %306, %303 ]
  %210 = phi %struct.T1_FieldRec_* [ getelementptr inbounds ([47 x %struct.T1_FieldRec_], [47 x %struct.T1_FieldRec_]* @t1_keywords, i64 0, i64 0), %205 ], [ %304, %303 ]
  %211 = load i8, i8* %209, align 1
  %212 = icmp eq i8 %206, %211
  br i1 %212, label %213, label %303

213:                                              ; preds = %208
  %214 = call i64 @strlen(i8* nonnull %209) #12
  %215 = icmp eq i64 %207, %214
  br i1 %215, label %216, label %303

216:                                              ; preds = %213
  %217 = call i32 @bcmp(i8* %191, i8* nonnull %209, i64 %207)
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %303

219:                                              ; preds = %216
  %220 = load i32, i32* %16, align 4
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = select i1 %222, i32 1, i32 2
  %224 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %210, i64 0, i32 8
  %225 = load i32, i32* %224, align 8
  %226 = and i32 %223, %225
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %312, label %228

228:                                              ; preds = %219
  %229 = and i32 %220, 2
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %234, label %231

231:                                              ; preds = %228
  %232 = call i32 @strcmp(i8* nonnull %209, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0)) #12
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %312

234:                                              ; preds = %228, %231
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %235 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %19, align 8
  %236 = icmp eq %struct.PS_BlendRec_* %235, null
  %237 = ptrtoint %struct.PS_BlendRec_* %235 to i64
  br i1 %236, label %243, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %235, i64 0, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, 0
  %242 = select i1 %241, %struct.PS_BlendRec_* null, %struct.PS_BlendRec_* %235
  br label %243

243:                                              ; preds = %238, %234
  %244 = phi %struct.PS_BlendRec_* [ null, %234 ], [ %242, %238 ]
  %245 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %210, i64 0, i32 2
  %246 = load i32, i32* %245, align 4
  %247 = icmp eq i32 %246, 11
  br i1 %247, label %248, label %252

248:                                              ; preds = %243
  %249 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %210, i64 0, i32 3
  %250 = load void (%struct.FT_FaceRec_*, i8*)*, void (%struct.FT_FaceRec_*, i8*)** %249, align 8
  call void %250(%struct.FT_FaceRec_* %42, i8* %24) #11
  %251 = load i32, i32* %10, align 8
  br label %296

252:                                              ; preds = %243
  %253 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %210, i64 0, i32 1
  %254 = load i32, i32* %253, align 8
  switch i32 %254, label %275 [
    i32 3, label %255
    i32 2, label %260
    i32 4, label %261
    i32 5, label %266
    i32 6, label %271
    i32 7, label %272
    i32 8, label %273
  ]

255:                                              ; preds = %252
  store %struct.PS_FontInfoRec_* %34, %struct.PS_FontInfoRec_** %35, align 8
  %256 = icmp eq %struct.PS_BlendRec_* %244, null
  br i1 %256, label %281, label %257

257:                                              ; preds = %255
  %258 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %244, i64 0, i32 7, i64 0
  %259 = bitcast %struct.PS_FontInfoRec_** %258 to i8**
  br label %276

260:                                              ; preds = %252
  store %struct.PS_FontExtraRec_* %31, %struct.PS_FontExtraRec_** %32, align 8
  br label %281

261:                                              ; preds = %252
  store %struct.PS_PrivateRec_* %28, %struct.PS_PrivateRec_** %29, align 8
  %262 = icmp eq %struct.PS_BlendRec_* %244, null
  br i1 %262, label %281, label %263

263:                                              ; preds = %261
  %264 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %244, i64 0, i32 8, i64 0
  %265 = bitcast %struct.PS_PrivateRec_** %264 to i8**
  br label %276

266:                                              ; preds = %252
  store %struct.FT_BBox_* %25, %struct.FT_BBox_** %26, align 8
  %267 = icmp eq %struct.PS_BlendRec_* %244, null
  br i1 %267, label %281, label %268

268:                                              ; preds = %266
  %269 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %244, i64 0, i32 10, i64 0
  %270 = bitcast %struct.FT_BBox_** %269 to i8**
  br label %276

271:                                              ; preds = %252
  store %struct.T1_Loader_* %1, %struct.T1_Loader_** %23, align 8
  br label %281

272:                                              ; preds = %252
  store %struct.T1_FaceRec_* %0, %struct.T1_FaceRec_** %21, align 8
  br label %281

273:                                              ; preds = %252
  store i64 %237, i64* %20, align 8
  %274 = bitcast %struct.PS_BlendRec_* %235 to i8*
  br label %281

275:                                              ; preds = %252
  store %struct.T1_FontRec_* %37, %struct.T1_FontRec_** %38, align 8
  br label %281

276:                                              ; preds = %268, %263, %257
  %277 = phi i8** [ %259, %257 ], [ %265, %263 ], [ %270, %268 ]
  %278 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %244, i64 0, i32 0
  %279 = load i32, i32* %278, align 8
  %280 = load i8*, i8** %277, align 8
  br label %281

281:                                              ; preds = %276, %275, %273, %272, %271, %266, %261, %260, %255
  %282 = phi i8* [ %280, %276 ], [ %36, %255 ], [ %30, %261 ], [ %27, %266 ], [ %33, %260 ], [ %24, %271 ], [ %22, %272 ], [ %274, %273 ], [ %39, %275 ]
  %283 = phi i8** [ %277, %276 ], [ %5, %255 ], [ %5, %261 ], [ %5, %266 ], [ %5, %260 ], [ %5, %271 ], [ %5, %272 ], [ %5, %273 ], [ %5, %275 ]
  %284 = phi i32 [ %279, %276 ], [ 0, %255 ], [ 0, %261 ], [ 0, %266 ], [ 0, %260 ], [ 0, %271 ], [ 0, %272 ], [ 0, %273 ], [ 0, %275 ]
  %285 = icmp eq i8* %282, null
  br i1 %285, label %286, label %287

286:                                              ; preds = %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  store i32 0, i32* %10, align 8
  br label %312

287:                                              ; preds = %281
  %288 = add i32 %246, -9
  %289 = icmp ult i32 %288, 2
  br i1 %289, label %290, label %293

290:                                              ; preds = %287
  %291 = load i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)** %41, align 8
  %292 = call i32 %291(%struct.PS_ParserRec_* %6, %struct.T1_FieldRec_* %210, i8** %283, i32 %284, i64* null) #11
  br label %296

293:                                              ; preds = %287
  %294 = load i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)** %40, align 8
  %295 = call i32 %294(%struct.PS_ParserRec_* %6, %struct.T1_FieldRec_* %210, i8** %283, i32 %284, i64* null) #11
  br label %296

296:                                              ; preds = %248, %290, %293
  %297 = phi i32 [ %251, %248 ], [ %292, %290 ], [ %295, %293 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  store i32 %297, i32* %10, align 8
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %312, label %299

299:                                              ; preds = %296
  %300 = and i32 %297, 255
  %301 = icmp eq i32 %300, 162
  br i1 %301, label %302, label %320

302:                                              ; preds = %299
  store i32 0, i32* %10, align 8
  br label %312

303:                                              ; preds = %208, %213, %216
  %304 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %210, i64 1
  %305 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %304, i64 0, i32 0
  %306 = load i8*, i8** %305, align 8
  %307 = icmp eq i8* %306, null
  br i1 %307, label %312, label %208

308:                                              ; preds = %104, %146, %185
  %309 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %17, align 8
  call void %309(%struct.PS_ParserRec_* %6) #11
  %310 = load i32, i32* %10, align 8
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %318

312:                                              ; preds = %303, %138, %180, %286, %231, %302, %296, %219, %195, %89, %95, %308
  %313 = phi i8* [ %48, %89 ], [ %48, %138 ], [ %48, %180 ], [ %46, %95 ], [ %48, %308 ], [ %48, %195 ], [ %48, %219 ], [ %48, %296 ], [ %48, %302 ], [ %48, %231 ], [ %48, %286 ], [ %48, %303 ]
  %314 = phi i8 [ %47, %89 ], [ 0, %138 ], [ 0, %180 ], [ 1, %95 ], [ 0, %308 ], [ 0, %195 ], [ 0, %219 ], [ 0, %296 ], [ 0, %302 ], [ 0, %231 ], [ 0, %286 ], [ 0, %303 ]
  %315 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %11, align 8
  call void %315(%struct.PS_ParserRec_* %6) #11
  %316 = load i8*, i8** %7, align 8
  %317 = icmp ult i8* %316, %8
  br i1 %317, label %45, label %318

318:                                              ; preds = %312, %58, %69, %95, %308, %190, %4
  %319 = load i32, i32* %10, align 8
  br label %320

320:                                              ; preds = %138, %180, %299, %179, %177, %137, %135, %318
  %321 = phi i32 [ %319, %318 ], [ 3, %135 ], [ 3, %137 ], [ 3, %177 ], [ 3, %179 ], [ 3, %138 ], [ 3, %180 ], [ %297, %299 ]
  ret i32 %321
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @check_type1_format(%struct.FT_StreamRec_*, i8* nocapture readonly, i64) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 0) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %36

7:                                                ; preds = %3
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 -1431655766, i32* %4, align 4
  %9 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %4) #11
  %10 = load i32, i32* %4, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = add i16 %9, 32767
  %14 = icmp ult i16 %13, 2
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  br label %24

16:                                               ; preds = %12
  %17 = call i64 @FT_Stream_ReadULongLE(%struct.FT_StreamRec_* %0, i32* nonnull %4) #11
  %18 = load i32, i32* %4, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16, %7
  %21 = phi i32 [ %10, %7 ], [ %18, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  br label %36

22:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  %23 = icmp eq i16 %9, -32767
  br i1 %23, label %27, label %24

24:                                               ; preds = %15, %22
  %25 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 0) #11
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %36

27:                                               ; preds = %24, %22
  %28 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %0, i64 %2) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %32 = load i8*, i8** %31, align 8
  %33 = call i32 @bcmp(i8* %32, i8* %1, i64 %2)
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i32 0, i32 2
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %0) #11
  br label %36

36:                                               ; preds = %20, %24, %27, %3, %30
  %37 = phi i32 [ %5, %3 ], [ %21, %20 ], [ %25, %24 ], [ %28, %27 ], [ %35, %30 ]
  ret i32 %37
}

declare hidden i32 @FT_Stream_Seek(%struct.FT_StreamRec_*, i64) local_unnamed_addr #3

declare hidden i32 @FT_Stream_Skip(%struct.FT_StreamRec_*, i64) local_unnamed_addr #3

declare hidden i8* @ft_mem_qalloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #3

declare hidden i32 @FT_Stream_Read(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #3

declare hidden zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #3

declare hidden i64 @FT_Stream_ReadULongLE(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @t1_parse_font_matrix(%struct.T1_FaceRec_*, %struct.T1_Loader_*) #0 {
  %3 = alloca [6 x i64], align 16
  %4 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 19
  %5 = bitcast [6 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #11
  %6 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 0
  %7 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 1
  %8 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 2
  %9 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 3
  %10 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 4
  %11 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 5
  %12 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 8
  %14 = bitcast [6 x i64]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 48, i1 false)
  %15 = load i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)** %13, align 8
  %16 = call i32 %15(%struct.PS_ParserRec_* %12, i32 6, i64* nonnull %6, i32 3) #11
  %17 = icmp slt i32 %16, 6
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 3, i32* %19, align 8
  br label %65

20:                                               ; preds = %2
  %21 = load i64, i64* %9, align 8
  %22 = icmp slt i64 %21, 0
  %23 = sub nsw i64 0, %21
  %24 = select i1 %22, i64 %23, i64 %21
  switch i64 %24, label %27 [
    i64 0, label %25
    i64 65536, label %44
  ]

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 3, i32* %26, align 8
  br label %65

27:                                               ; preds = %20
  %28 = call i64 @FT_DivFix(i64 1000, i64 %24) #11
  %29 = trunc i64 %28 to i16
  %30 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 13
  store i16 %29, i16* %30, align 8
  %31 = load i64, i64* %6, align 16
  %32 = call i64 @FT_DivFix(i64 %31, i64 %24) #11
  store i64 %32, i64* %6, align 16
  %33 = load i64, i64* %7, align 8
  %34 = call i64 @FT_DivFix(i64 %33, i64 %24) #11
  store i64 %34, i64* %7, align 8
  %35 = load i64, i64* %8, align 16
  %36 = call i64 @FT_DivFix(i64 %35, i64 %24) #11
  store i64 %36, i64* %8, align 16
  %37 = load i64, i64* %10, align 16
  %38 = call i64 @FT_DivFix(i64 %37, i64 %24) #11
  store i64 %38, i64* %10, align 16
  %39 = load i64, i64* %11, align 8
  %40 = call i64 @FT_DivFix(i64 %39, i64 %24) #11
  store i64 %40, i64* %11, align 8
  %41 = load i64, i64* %9, align 8
  %42 = icmp slt i64 %41, 0
  %43 = select i1 %42, i64 -65536, i64 65536
  store i64 %43, i64* %9, align 8
  br label %44

44:                                               ; preds = %20, %27
  %45 = phi i64 [ %21, %20 ], [ %43, %27 ]
  %46 = load i64, i64* %6, align 16
  %47 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %4, i64 0, i32 0
  store i64 %46, i64* %47, align 8
  %48 = bitcast i64* %7 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  %50 = shufflevector <2 x i64> %49, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %51 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 19, i32 1
  %52 = bitcast i64* %51 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %52, align 8
  %53 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 19, i32 3
  store i64 %45, i64* %53, align 8
  %54 = call zeroext i8 @FT_Matrix_Check(%struct.FT_Matrix_* %4) #11
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %44
  %57 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 3, i32* %57, align 8
  br label %65

58:                                               ; preds = %44
  %59 = load i64, i64* %10, align 16
  %60 = ashr i64 %59, 16
  %61 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 20, i32 0
  store i64 %60, i64* %61, align 8
  %62 = load i64, i64* %11, align 8
  %63 = ashr i64 %62, 16
  %64 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 20, i32 1
  store i64 %63, i64* %64, align 8
  br label %65

65:                                               ; preds = %58, %56, %25, %18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @parse_encoding(%struct.T1_FaceRec_* nocapture, %struct.T1_Loader_*) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 3
  %8 = bitcast i8** %7 to %struct.PSAux_ServiceRec_**
  %9 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %8, align 8
  %10 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 2
  %11 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %10, align 8
  tail call void %11(%struct.PS_ParserRec_* %4) #11
  %12 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ult i8* %13, %6
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 3, i32* %16, align 8
  br label %219

17:                                               ; preds = %2
  %18 = load i8, i8* %13, align 1
  %19 = zext i8 %18 to i32
  %20 = add nsw i32 %19, -48
  %21 = icmp ult i32 %20, 10
  %22 = icmp eq i8 %18, 91
  %23 = or i1 %22, %21
  br i1 %23, label %24, label %193

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 2
  %26 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 4
  %27 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %26, align 8
  %28 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #11
  store i32 -1431655766, i32* %3, align 4
  %29 = load i8, i8* %13, align 1
  %30 = icmp eq i8 %29, 91
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = getelementptr inbounds i8, i8* %13, i64 1
  store i8* %32, i8** %12, align 8
  br label %40

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 4
  %35 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %34, align 8
  %36 = tail call i64 %35(%struct.PS_ParserRec_* %4) #11
  %37 = trunc i64 %36 to i32
  %38 = icmp slt i32 %37, 256
  %39 = select i1 %38, i32 %37, i32 256
  br label %40

40:                                               ; preds = %33, %31
  %41 = phi i8 [ 1, %31 ], [ 0, %33 ]
  %42 = phi i32 [ 256, %31 ], [ %37, %33 ]
  %43 = phi i32 [ 256, %31 ], [ %39, %33 ]
  %44 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %10, align 8
  tail call void %44(%struct.PS_ParserRec_* %4) #11
  %45 = load i8*, i8** %12, align 8
  %46 = icmp ult i8* %45, %6
  br i1 %46, label %47, label %192

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 5, i32 3
  %49 = load i16*, i16** %48, align 8
  %50 = icmp eq i16* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %47
  %52 = bitcast i16* %49 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %27, i8* nonnull %52) #11
  store i16* null, i16** %48, align 8
  %53 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 5, i32 4
  %54 = bitcast i8*** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %27, i8* %55) #11
  store i8** null, i8*** %53, align 8
  %56 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 2, i32 9, i32 3
  %57 = load void (%struct.PS_TableRec_*)*, void (%struct.PS_TableRec_*)** %56, align 8
  %58 = icmp eq void (%struct.PS_TableRec_*)* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %51
  tail call void %57(%struct.PS_TableRec_* %25) #11
  br label %60

60:                                               ; preds = %51, %47, %59
  %61 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 5, i32 0
  store i32 %43, i32* %61, align 8
  %62 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 1
  store i32 %43, i32* %62, align 8
  %63 = sext i32 %43 to i64
  %64 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %27, i64 2, i64 0, i64 %63, i8* null, i32* nonnull %3) #11
  %65 = bitcast i16** %48 to i8**
  store i8* %64, i8** %65, align 8
  %66 = load i32, i32* %3, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %85

68:                                               ; preds = %60
  %69 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %27, i64 8, i64 0, i64 %63, i8* null, i32* nonnull %3) #11
  %70 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 5, i32 4
  %71 = bitcast i8*** %70 to i8**
  store i8* %69, i8** %71, align 8
  %72 = load i32, i32* %3, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %85

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %9, i64 0, i32 0
  %76 = load %struct.PS_Table_FuncsRec_*, %struct.PS_Table_FuncsRec_** %75, align 8
  %77 = getelementptr inbounds %struct.PS_Table_FuncsRec_, %struct.PS_Table_FuncsRec_* %76, i64 0, i32 0
  %78 = load i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)** %77, align 8
  %79 = call i32 %78(%struct.PS_TableRec_* %25, i32 %43, %struct.FT_MemoryRec_* %27) #11
  store i32 %79, i32* %3, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %74
  %82 = icmp sgt i32 %43, 0
  br i1 %82, label %83, label %94

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 2, i32 9, i32 2
  br label %88

85:                                               ; preds = %74, %68, %60
  %86 = phi i32 [ %79, %74 ], [ %72, %68 ], [ %66, %60 ]
  %87 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 %86, i32* %87, align 8
  br label %192

88:                                               ; preds = %88, %83
  %89 = phi i32 [ 0, %83 ], [ %92, %88 ]
  %90 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %84, align 8
  %91 = call i32 %90(%struct.PS_TableRec_* %25, i32 %89, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i32 8) #11
  %92 = add nuw nsw i32 %89, 1
  %93 = icmp eq i32 %92, %43
  br i1 %93, label %94, label %88

94:                                               ; preds = %88, %81
  %95 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %10, align 8
  call void %95(%struct.PS_ParserRec_* %4) #11
  %96 = load i8*, i8** %12, align 8
  %97 = icmp ult i8* %96, %6
  br i1 %97, label %98, label %189

98:                                               ; preds = %94
  %99 = icmp eq i8 %41, 0
  %100 = icmp ne i8 %41, 0
  %101 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 4
  %102 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 3
  %103 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  %104 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 2, i32 9, i32 2
  %105 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 2, i32 6
  br label %106

106:                                              ; preds = %98, %183
  %107 = phi i8* [ %96, %98 ], [ %187, %183 ]
  %108 = phi i32 [ 0, %98 ], [ %185, %183 ]
  %109 = load i8, i8* %107, align 1
  switch i8 %109, label %125 [
    i8 100, label %110
    i8 93, label %123
  ]

110:                                              ; preds = %106
  %111 = getelementptr inbounds i8, i8* %107, i64 3
  %112 = icmp ult i8* %111, %6
  br i1 %112, label %113, label %125

113:                                              ; preds = %110
  %114 = getelementptr inbounds i8, i8* %107, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %115, 101
  br i1 %116, label %117, label %125

117:                                              ; preds = %113
  %118 = getelementptr inbounds i8, i8* %107, i64 2
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 102
  br i1 %120, label %121, label %125

121:                                              ; preds = %117
  %122 = load i8, i8* %111, align 1
  switch i8 %122, label %125 [
    i8 32, label %189
    i8 13, label %189
    i8 10, label %189
    i8 9, label %189
    i8 12, label %189
    i8 0, label %189
    i8 47, label %189
    i8 40, label %189
    i8 41, label %189
    i8 60, label %189
    i8 62, label %189
    i8 91, label %189
    i8 93, label %189
    i8 123, label %189
    i8 125, label %189
    i8 37, label %189
  ]

123:                                              ; preds = %106
  %124 = getelementptr inbounds i8, i8* %107, i64 1
  br label %189

125:                                              ; preds = %106, %110, %117, %113, %121
  %126 = zext i8 %109 to i32
  %127 = add nsw i32 %126, -48
  %128 = icmp ugt i32 %127, 9
  %129 = and i1 %99, %128
  br i1 %129, label %179, label %130

130:                                              ; preds = %125
  br i1 %100, label %139, label %131

131:                                              ; preds = %130
  %132 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %101, align 8
  %133 = call i64 %132(%struct.PS_ParserRec_* %4) #11
  %134 = trunc i64 %133 to i32
  %135 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %10, align 8
  call void %135(%struct.PS_ParserRec_* %4) #11
  %136 = load i8*, i8** %12, align 8
  %137 = icmp eq i8* %107, %136
  br i1 %137, label %138, label %139

138:                                              ; preds = %131
  store i32 2, i32* %103, align 8
  br label %192

139:                                              ; preds = %130, %131
  %140 = phi i8* [ %136, %131 ], [ %107, %130 ]
  %141 = phi i32 [ %134, %131 ], [ %108, %130 ]
  %142 = getelementptr inbounds i8, i8* %140, i64 2
  %143 = icmp ult i8* %142, %6
  br i1 %143, label %144, label %177

144:                                              ; preds = %139
  %145 = load i8, i8* %140, align 1
  %146 = icmp eq i8 %145, 47
  %147 = icmp slt i32 %108, %42
  %148 = and i1 %147, %146
  br i1 %148, label %149, label %177

149:                                              ; preds = %144
  %150 = getelementptr inbounds i8, i8* %140, i64 1
  store i8* %150, i8** %12, align 8
  %151 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %102, align 8
  call void %151(%struct.PS_ParserRec_* %4) #11
  %152 = load i8*, i8** %12, align 8
  %153 = icmp ult i8* %152, %6
  br i1 %153, label %154, label %192

154:                                              ; preds = %149
  %155 = load i32, i32* %103, align 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %192

157:                                              ; preds = %154
  %158 = ptrtoint i8* %152 to i64
  %159 = ptrtoint i8* %150 to i64
  %160 = sub i64 %158, %159
  %161 = icmp slt i32 %108, %43
  br i1 %161, label %162, label %175

162:                                              ; preds = %157
  %163 = trunc i64 %160 to i32
  %164 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %104, align 8
  %165 = add i32 %163, 1
  %166 = call i32 %164(%struct.PS_TableRec_* %25, i32 %141, i8* %150, i32 %165) #11
  store i32 %166, i32* %103, align 8
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %192

168:                                              ; preds = %162
  %169 = load i8**, i8*** %105, align 8
  %170 = sext i32 %141 to i64
  %171 = getelementptr inbounds i8*, i8** %169, i64 %170
  %172 = load i8*, i8** %171, align 8
  %173 = and i64 %160, 4294967295
  %174 = getelementptr inbounds i8, i8* %172, i64 %173
  store i8 0, i8* %174, align 1
  br label %175

175:                                              ; preds = %157, %168
  %176 = add nsw i32 %108, 1
  br label %183

177:                                              ; preds = %144, %139
  br i1 %100, label %178, label %183

178:                                              ; preds = %177
  store i32 2, i32* %103, align 8
  br label %192

179:                                              ; preds = %125
  %180 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %102, align 8
  call void %180(%struct.PS_ParserRec_* %4) #11
  %181 = load i32, i32* %103, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %192

183:                                              ; preds = %175, %177, %179
  %184 = phi i8* [ %107, %179 ], [ %150, %175 ], [ %140, %177 ]
  %185 = phi i32 [ %108, %179 ], [ %176, %175 ], [ %108, %177 ]
  %186 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %10, align 8
  call void %186(%struct.PS_ParserRec_* %4) #11
  %187 = load i8*, i8** %12, align 8
  %188 = icmp ult i8* %187, %6
  br i1 %188, label %106, label %189

189:                                              ; preds = %183, %121, %121, %121, %121, %121, %121, %121, %121, %121, %121, %121, %121, %121, %121, %121, %121, %94, %123
  %190 = phi i8* [ %124, %123 ], [ %13, %94 ], [ %184, %183 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ], [ %111, %121 ]
  %191 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 4
  store i32 1, i32* %191, align 8
  store i8* %190, i8** %12, align 8
  br label %192

192:                                              ; preds = %162, %154, %149, %179, %138, %178, %40, %189, %85
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  ret void

193:                                              ; preds = %17
  %194 = getelementptr inbounds i8, i8* %13, i64 17
  %195 = icmp ult i8* %194, %6
  br i1 %195, label %196, label %201

196:                                              ; preds = %193
  %197 = tail call i32 @strncmp(i8* %13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.69, i64 0, i64 0), i64 16) #12
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %201

199:                                              ; preds = %196
  %200 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 4
  store i32 2, i32* %200, align 8
  br label %219

201:                                              ; preds = %196, %193
  %202 = getelementptr inbounds i8, i8* %13, i64 15
  %203 = icmp ult i8* %202, %6
  br i1 %203, label %204, label %209

204:                                              ; preds = %201
  %205 = tail call i32 @strncmp(i8* %13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i64 0, i64 0), i64 14) #12
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %204
  %208 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 4
  store i32 4, i32* %208, align 8
  br label %219

209:                                              ; preds = %204, %201
  %210 = getelementptr inbounds i8, i8* %13, i64 18
  %211 = icmp ult i8* %210, %6
  br i1 %211, label %212, label %217

212:                                              ; preds = %209
  %213 = tail call i32 @strncmp(i8* %13, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i64 0, i64 0), i64 17) #12
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %212
  %216 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 4
  store i32 3, i32* %216, align 8
  br label %219

217:                                              ; preds = %212, %209
  %218 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 162, i32* %218, align 8
  br label %219

219:                                              ; preds = %207, %217, %215, %199, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @parse_subrs(%struct.T1_FaceRec_* nocapture readonly, %struct.T1_Loader_*) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 8
  %5 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 4
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 -1431655766, i32* %3, align 4
  %9 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 3
  %10 = bitcast i8** %9 to %struct.PSAux_ServiceRec_**
  %11 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %10, align 8
  %12 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 2
  %13 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %12, align 8
  tail call void %13(%struct.PS_ParserRec_* %5) #11
  %14 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = icmp ult i8* %15, %17
  br i1 %18, label %19, label %34

19:                                               ; preds = %2
  %20 = load i8, i8* %15, align 1
  %21 = icmp eq i8 %20, 91
  br i1 %21, label %22, label %34

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 3
  %24 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %23, align 8
  tail call void %24(%struct.PS_ParserRec_* %5) #11
  %25 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %12, align 8
  tail call void %25(%struct.PS_ParserRec_* %5) #11
  %26 = load i8*, i8** %14, align 8
  %27 = load i8*, i8** %16, align 8
  %28 = icmp ult i8* %26, %27
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = load i8, i8* %26, align 1
  %31 = icmp eq i8 %30, 93
  br i1 %31, label %209, label %32

32:                                               ; preds = %29, %22
  %33 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 3, i32* %33, align 8
  br label %209

34:                                               ; preds = %19, %2
  %35 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 4
  %36 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %35, align 8
  %37 = tail call i64 %36(%struct.PS_ParserRec_* %5) #11
  %38 = trunc i64 %37 to i32
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 3, i32* %41, align 8
  br label %209

42:                                               ; preds = %34
  %43 = load i8*, i8** %16, align 8
  %44 = load i8*, i8** %14, align 8
  %45 = icmp ult i8* %43, %44
  br i1 %45, label %68, label %46

46:                                               ; preds = %42
  %47 = shl i64 %37, 32
  %48 = ashr exact i64 %47, 32
  %49 = ptrtoint i8* %43 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = sub i64 %49, %50
  %52 = ashr i64 %51, 3
  %53 = icmp sgt i64 %48, %52
  br i1 %53, label %54, label %68

54:                                               ; preds = %46
  %55 = trunc i64 %52 to i32
  %56 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 9
  %57 = load %struct.FT_HashRec_*, %struct.FT_HashRec_** %56, align 8
  %58 = icmp eq %struct.FT_HashRec_* %57, null
  br i1 %58, label %59, label %68

59:                                               ; preds = %54
  %60 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %7, i64 40, i32* nonnull %3) #11
  %61 = bitcast %struct.FT_HashRec_** %56 to i8**
  store i8* %60, i8** %61, align 8
  %62 = load i32, i32* %3, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %206

64:                                               ; preds = %59
  %65 = bitcast i8* %60 to %struct.FT_HashRec_*
  %66 = call i32 @ft_hash_num_init(%struct.FT_HashRec_* %65, %struct.FT_MemoryRec_* %7) #11
  store i32 %66, i32* %3, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %206

68:                                               ; preds = %64, %54, %42, %46
  %69 = phi i32 [ %55, %54 ], [ %55, %64 ], [ %38, %46 ], [ %38, %42 ]
  %70 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 3
  %71 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %70, align 8
  call void %71(%struct.PS_ParserRec_* %5) #11
  %72 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %209

75:                                               ; preds = %68
  %76 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %12, align 8
  call void %76(%struct.PS_ParserRec_* %5) #11
  %77 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 7
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %75
  %81 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %11, i64 0, i32 0
  %82 = load %struct.PS_Table_FuncsRec_*, %struct.PS_Table_FuncsRec_** %81, align 8
  %83 = getelementptr inbounds %struct.PS_Table_FuncsRec_, %struct.PS_Table_FuncsRec_* %82, i64 0, i32 0
  %84 = load i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)** %83, align 8
  %85 = call i32 %84(%struct.PS_TableRec_* %4, i32 %69, %struct.FT_MemoryRec_* %7) #11
  store i32 %85, i32* %3, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %206

87:                                               ; preds = %80, %75
  %88 = load i8*, i8** %14, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 4
  %90 = load i8*, i8** %16, align 8
  %91 = icmp ult i8* %89, %90
  br i1 %91, label %92, label %202

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 30
  %94 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 9
  %95 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 2, i32 1
  %96 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 8, i32 9, i32 2
  %97 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %11, i64 0, i32 4
  br label %98

98:                                               ; preds = %92, %196
  %99 = phi i8* [ %88, %92 ], [ %198, %196 ]
  %100 = phi i32 [ 0, %92 ], [ %197, %196 ]
  %101 = call i32 @strncmp(i8* %99, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i64 3) #12
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %202

103:                                              ; preds = %98
  %104 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %70, align 8
  call void %104(%struct.PS_ParserRec_* %5) #11
  %105 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %35, align 8
  %106 = call i64 %105(%struct.PS_ParserRec_* %5) #11
  %107 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %93, align 8
  %108 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %107, i64 0, i32 4
  %109 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %108, align 8
  %110 = load i8*, i8** %16, align 8
  %111 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %12, align 8
  call void %111(%struct.PS_ParserRec_* %5) #11
  %112 = load i8*, i8** %14, align 8
  %113 = icmp ult i8* %112, %110
  br i1 %113, label %114, label %131

114:                                              ; preds = %103
  %115 = load i8, i8* %112, align 1
  %116 = zext i8 %115 to i32
  %117 = add nsw i32 %116, -48
  %118 = icmp ult i32 %117, 10
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %35, align 8
  %121 = call i64 %120(%struct.PS_ParserRec_* %5) #11
  %122 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %70, align 8
  call void %122(%struct.PS_ParserRec_* %5) #11
  %123 = load i8*, i8** %14, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  %125 = icmp sgt i64 %121, -1
  br i1 %125, label %126, label %131

126:                                              ; preds = %119
  %127 = ptrtoint i8* %110 to i64
  %128 = ptrtoint i8* %124 to i64
  %129 = sub i64 %127, %128
  %130 = icmp slt i64 %121, %129
  br i1 %130, label %134, label %131

131:                                              ; preds = %126, %119, %114, %103
  %132 = icmp eq %struct.FT_Incremental_InterfaceRec_* %109, null
  br i1 %132, label %133, label %209

133:                                              ; preds = %131
  store i32 3, i32* %72, align 8
  br label %209

134:                                              ; preds = %126
  %135 = add nuw nsw i64 %121, 1
  %136 = getelementptr inbounds i8, i8* %123, i64 %135
  store i8* %136, i8** %14, align 8
  %137 = load i32, i32* %72, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %209

139:                                              ; preds = %134
  %140 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %70, align 8
  call void %140(%struct.PS_ParserRec_* %5) #11
  %141 = load i32, i32* %72, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %209

143:                                              ; preds = %139
  %144 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %12, align 8
  call void %144(%struct.PS_ParserRec_* %5) #11
  %145 = load i8*, i8** %14, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 4
  %147 = load i8*, i8** %16, align 8
  %148 = icmp ult i8* %146, %147
  br i1 %148, label %149, label %155

149:                                              ; preds = %143
  %150 = call i32 @strncmp(i8* %145, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i64 0, i64 0), i64 3) #12
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %149
  %153 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %70, align 8
  call void %153(%struct.PS_ParserRec_* %5) #11
  %154 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %12, align 8
  call void %154(%struct.PS_ParserRec_* %5) #11
  br label %155

155:                                              ; preds = %152, %149, %143
  %156 = load %struct.FT_HashRec_*, %struct.FT_HashRec_** %94, align 8
  %157 = icmp eq %struct.FT_HashRec_* %156, null
  br i1 %157, label %162, label %158

158:                                              ; preds = %155
  %159 = trunc i64 %106 to i32
  %160 = zext i32 %100 to i64
  %161 = call i32 @ft_hash_num_insert(i32 %159, i64 %160, %struct.FT_HashRec_* nonnull %156, %struct.FT_MemoryRec_* %7) #11
  br label %162

162:                                              ; preds = %155, %158
  %163 = phi i64 [ %160, %158 ], [ %106, %155 ]
  %164 = load i32, i32* %77, align 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %196

166:                                              ; preds = %162
  %167 = load i32, i32* %95, align 4
  %168 = icmp sgt i32 %167, -1
  br i1 %168, label %169, label %188

169:                                              ; preds = %166
  %170 = sext i32 %167 to i64
  %171 = icmp ult i64 %121, %170
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  store i32 3, i32* %3, align 4
  br label %206

173:                                              ; preds = %169
  %174 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %7, i64 %121, i32* nonnull %3) #11
  %175 = load i32, i32* %3, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %206

177:                                              ; preds = %173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %174, i8* align 1 %124, i64 %121, i1 false)
  %178 = load void (i8*, i64, i16)*, void (i8*, i64, i16)** %97, align 8
  call void %178(i8* %174, i64 %121, i16 zeroext 4330) #11
  %179 = load i32, i32* %95, align 4
  %180 = sext i32 %179 to i64
  %181 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %96, align 8
  %182 = trunc i64 %163 to i32
  %183 = getelementptr inbounds i8, i8* %174, i64 %180
  %184 = trunc i64 %121 to i32
  %185 = sub i32 %184, %179
  %186 = call i32 %181(%struct.PS_TableRec_* %4, i32 %182, i8* %183, i32 %185) #11
  store i32 %186, i32* %3, align 4
  call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %174) #11
  %187 = load i32, i32* %3, align 4
  br label %193

188:                                              ; preds = %166
  %189 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %96, align 8
  %190 = trunc i64 %163 to i32
  %191 = trunc i64 %121 to i32
  %192 = call i32 %189(%struct.PS_TableRec_* %4, i32 %190, i8* %124, i32 %191) #11
  store i32 %192, i32* %3, align 4
  br label %193

193:                                              ; preds = %177, %188
  %194 = phi i32 [ %187, %177 ], [ %192, %188 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %206

196:                                              ; preds = %193, %162
  %197 = add i32 %100, 1
  %198 = load i8*, i8** %14, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 4
  %200 = load i8*, i8** %16, align 8
  %201 = icmp ult i8* %199, %200
  br i1 %201, label %98, label %202

202:                                              ; preds = %196, %98, %87
  %203 = load i32, i32* %77, align 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %209

205:                                              ; preds = %202
  store i32 %69, i32* %77, align 8
  br label %209

206:                                              ; preds = %173, %193, %172, %64, %59, %80
  %207 = phi i32 [ 3, %172 ], [ %66, %64 ], [ %62, %59 ], [ %85, %80 ], [ %175, %173 ], [ %194, %193 ]
  %208 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 %207, i32* %208, align 8
  br label %209

209:                                              ; preds = %134, %139, %133, %131, %205, %202, %68, %32, %29, %206, %40
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @parse_charstrings(%struct.T1_FaceRec_* nocapture readonly, %struct.T1_Loader_*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca [5 x i8], align 1
  %5 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 5
  %6 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 4
  %7 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 6
  %8 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 4
  %10 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %9, align 8
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 -1431655766, i32* %3, align 4
  %12 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 3
  %13 = bitcast i8** %12 to %struct.PSAux_ServiceRec_**
  %14 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %13, align 8
  %15 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %struct.T1_Loader_* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 4
  %21 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %20, align 8
  %22 = tail call i64 %21(%struct.PS_ParserRec_* %8) #11
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %2
  store i32 3, i32* %3, align 4
  br label %382

26:                                               ; preds = %2
  %27 = shl i64 %22, 32
  %28 = ashr exact i64 %27, 32
  %29 = ptrtoint i8* %19 to i64
  %30 = sub i64 %29, %17
  %31 = ashr i64 %30, 3
  %32 = icmp sgt i64 %28, %31
  %33 = trunc i64 %31 to i32
  %34 = select i1 %32, i32 %33, i32 %23
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %385, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %385

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %64

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %14, i64 0, i32 0
  %46 = load %struct.PS_Table_FuncsRec_*, %struct.PS_Table_FuncsRec_** %45, align 8
  %47 = getelementptr inbounds %struct.PS_Table_FuncsRec_, %struct.PS_Table_FuncsRec_* %46, i64 0, i32 0
  %48 = load i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)** %47, align 8
  %49 = add nsw i32 %34, 6
  %50 = tail call i32 %48(%struct.PS_TableRec_* %5, i32 %49, %struct.FT_MemoryRec_* %10) #11
  store i32 %50, i32* %3, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %382

52:                                               ; preds = %44
  %53 = load %struct.PS_Table_FuncsRec_*, %struct.PS_Table_FuncsRec_** %45, align 8
  %54 = getelementptr inbounds %struct.PS_Table_FuncsRec_, %struct.PS_Table_FuncsRec_* %53, i64 0, i32 0
  %55 = load i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)** %54, align 8
  %56 = tail call i32 %55(%struct.PS_TableRec_* %6, i32 %49, %struct.FT_MemoryRec_* %10) #11
  store i32 %56, i32* %3, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %382

58:                                               ; preds = %52
  %59 = load %struct.PS_Table_FuncsRec_*, %struct.PS_Table_FuncsRec_** %45, align 8
  %60 = getelementptr inbounds %struct.PS_Table_FuncsRec_, %struct.PS_Table_FuncsRec_* %59, i64 0, i32 0
  %61 = load i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)** %60, align 8
  %62 = tail call i32 %61(%struct.PS_TableRec_* %7, i32 4, %struct.FT_MemoryRec_* %10) #11
  store i32 %62, i32* %3, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %382

64:                                               ; preds = %58, %40
  %65 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 2
  %66 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %65, align 8
  call void %66(%struct.PS_ParserRec_* %8) #11
  %67 = load i8*, i8** %15, align 8
  %68 = icmp ult i8* %67, %19
  br i1 %68, label %69, label %230

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 3
  %71 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 30
  %72 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 4, i32 9, i32 2
  %73 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 4, i32 6
  %74 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 2, i32 1
  %75 = add nsw i32 %34, 5
  %76 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 5, i32 9, i32 2
  %77 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %14, i64 0, i32 4
  br label %78

78:                                               ; preds = %69, %218
  %79 = phi i8* [ %67, %69 ], [ %223, %218 ]
  %80 = phi i8 [ 0, %69 ], [ %219, %218 ]
  %81 = phi i32 [ 0, %69 ], [ %220, %218 ]
  %82 = phi i32 [ 0, %69 ], [ %221, %218 ]
  %83 = getelementptr inbounds i8, i8* %79, i64 3
  %84 = icmp ult i8* %83, %19
  br i1 %84, label %85, label %107

85:                                               ; preds = %78
  %86 = load i8, i8* %83, align 1
  switch i8 %86, label %107 [
    i8 32, label %87
    i8 13, label %87
    i8 10, label %87
    i8 9, label %87
    i8 12, label %87
    i8 0, label %87
    i8 47, label %87
    i8 40, label %87
    i8 41, label %87
    i8 60, label %87
    i8 62, label %87
    i8 91, label %87
    i8 93, label %87
    i8 123, label %87
    i8 125, label %87
    i8 37, label %87
  ]

87:                                               ; preds = %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85
  %88 = load i8, i8* %79, align 1
  switch i8 %88, label %107 [
    i8 100, label %89
    i8 101, label %99
  ]

89:                                               ; preds = %87
  %90 = getelementptr inbounds i8, i8* %79, i64 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 101
  br i1 %92, label %93, label %107

93:                                               ; preds = %89
  %94 = getelementptr inbounds i8, i8* %79, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 102
  %97 = icmp ne i32 %82, 0
  %98 = and i1 %97, %96
  br i1 %98, label %231, label %107

99:                                               ; preds = %87
  %100 = getelementptr inbounds i8, i8* %79, i64 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, 110
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = getelementptr inbounds i8, i8* %79, i64 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 100
  br i1 %106, label %225, label %107

107:                                              ; preds = %87, %89, %93, %85, %99, %103, %78
  %108 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %70, align 8
  call void %108(%struct.PS_ParserRec_* %8) #11
  %109 = load i8*, i8** %15, align 8
  %110 = icmp ult i8* %109, %19
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  store i32 3, i32* %3, align 4
  br label %382

112:                                              ; preds = %107
  %113 = load i32, i32* %37, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %385

115:                                              ; preds = %112
  %116 = load i8, i8* %79, align 1
  %117 = icmp eq i8 %116, 47
  br i1 %117, label %118, label %218

118:                                              ; preds = %115
  %119 = getelementptr inbounds i8, i8* %79, i64 2
  %120 = icmp ult i8* %119, %19
  br i1 %120, label %122, label %121

121:                                              ; preds = %118
  store i32 3, i32* %3, align 4
  br label %380

122:                                              ; preds = %118
  %123 = getelementptr inbounds i8, i8* %79, i64 1
  %124 = ptrtoint i8* %109 to i64
  %125 = ptrtoint i8* %123 to i64
  %126 = sub i64 %124, %125
  %127 = trunc i64 %126 to i32
  %128 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %71, align 8
  %129 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %128, i64 0, i32 4
  %130 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %129, align 8
  %131 = load i8*, i8** %18, align 8
  %132 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %65, align 8
  call void %132(%struct.PS_ParserRec_* %8) #11
  %133 = load i8*, i8** %15, align 8
  %134 = icmp ult i8* %133, %131
  br i1 %134, label %135, label %152

135:                                              ; preds = %122
  %136 = load i8, i8* %133, align 1
  %137 = zext i8 %136 to i32
  %138 = add nsw i32 %137, -48
  %139 = icmp ult i32 %138, 10
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %20, align 8
  %142 = call i64 %141(%struct.PS_ParserRec_* %8) #11
  %143 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %70, align 8
  call void %143(%struct.PS_ParserRec_* %8) #11
  %144 = load i8*, i8** %15, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  %146 = icmp sgt i64 %142, -1
  br i1 %146, label %147, label %152

147:                                              ; preds = %140
  %148 = ptrtoint i8* %131 to i64
  %149 = ptrtoint i8* %145 to i64
  %150 = sub i64 %148, %149
  %151 = icmp slt i64 %142, %150
  br i1 %151, label %155, label %152

152:                                              ; preds = %147, %140, %135, %122
  %153 = icmp eq %struct.FT_Incremental_InterfaceRec_* %130, null
  br i1 %153, label %154, label %385

154:                                              ; preds = %152
  store i32 3, i32* %37, align 8
  br label %385

155:                                              ; preds = %147
  %156 = add nuw nsw i64 %142, 1
  %157 = getelementptr inbounds i8, i8* %144, i64 %156
  store i8* %157, i8** %15, align 8
  %158 = load i32, i32* %37, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %385

160:                                              ; preds = %155
  %161 = load i32, i32* %41, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %218

163:                                              ; preds = %160
  %164 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %72, align 8
  %165 = add i32 %127, 1
  %166 = call i32 %164(%struct.PS_TableRec_* %6, i32 %82, i8* %123, i32 %165) #11
  store i32 %166, i32* %3, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %380

168:                                              ; preds = %163
  %169 = load i8**, i8*** %73, align 8
  %170 = sext i32 %82 to i64
  %171 = getelementptr inbounds i8*, i8** %169, i64 %170
  %172 = load i8*, i8** %171, align 8
  %173 = and i64 %126, 4294967295
  %174 = getelementptr inbounds i8, i8* %172, i64 %173
  store i8 0, i8* %174, align 1
  %175 = load i8, i8* %123, align 1
  %176 = icmp eq i8 %175, 46
  br i1 %176, label %177, label %185

177:                                              ; preds = %168
  %178 = load i8**, i8*** %73, align 8
  %179 = getelementptr inbounds i8*, i8** %178, i64 %170
  %180 = load i8*, i8** %179, align 8
  %181 = call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8* %180) #12
  %182 = icmp eq i32 %181, 0
  %183 = select i1 %182, i32 %82, i32 %81
  %184 = select i1 %182, i8 1, i8 %80
  br label %185

185:                                              ; preds = %177, %168
  %186 = phi i32 [ %81, %168 ], [ %183, %177 ]
  %187 = phi i8 [ %80, %168 ], [ %184, %177 ]
  %188 = load i32, i32* %74, align 4
  %189 = icmp sgt i32 %188, -1
  %190 = icmp slt i32 %82, %75
  %191 = and i1 %190, %189
  br i1 %191, label %192, label %210

192:                                              ; preds = %185
  %193 = sext i32 %188 to i64
  %194 = icmp ugt i64 %142, %193
  br i1 %194, label %196, label %195

195:                                              ; preds = %192
  store i32 3, i32* %3, align 4
  br label %380

196:                                              ; preds = %192
  %197 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %10, i64 %142, i32* nonnull %3) #11
  %198 = load i32, i32* %3, align 4
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %380

200:                                              ; preds = %196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %145, i64 %142, i1 false)
  %201 = load void (i8*, i64, i16)*, void (i8*, i64, i16)** %77, align 8
  call void %201(i8* %197, i64 %142, i16 zeroext 4330) #11
  %202 = load i32, i32* %74, align 4
  %203 = sext i32 %202 to i64
  %204 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %76, align 8
  %205 = getelementptr inbounds i8, i8* %197, i64 %203
  %206 = trunc i64 %142 to i32
  %207 = sub i32 %206, %202
  %208 = call i32 %204(%struct.PS_TableRec_* %5, i32 %82, i8* %205, i32 %207) #11
  store i32 %208, i32* %3, align 4
  call void @ft_mem_free(%struct.FT_MemoryRec_* %10, i8* %197) #11
  %209 = load i32, i32* %3, align 4
  br label %214

210:                                              ; preds = %185
  %211 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %76, align 8
  %212 = trunc i64 %142 to i32
  %213 = call i32 %211(%struct.PS_TableRec_* %5, i32 %82, i8* %145, i32 %212) #11
  store i32 %213, i32* %3, align 4
  br label %214

214:                                              ; preds = %200, %210
  %215 = phi i32 [ %209, %200 ], [ %213, %210 ]
  %216 = icmp eq i32 %215, 0
  %217 = add nsw i32 %82, 1
  br i1 %216, label %218, label %380

218:                                              ; preds = %214, %115, %160
  %219 = phi i8 [ %80, %160 ], [ %187, %214 ], [ %80, %115 ]
  %220 = phi i32 [ %81, %160 ], [ %186, %214 ], [ %81, %115 ]
  %221 = phi i32 [ %82, %160 ], [ %217, %214 ], [ %82, %115 ]
  %222 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %65, align 8
  call void %222(%struct.PS_ParserRec_* %8) #11
  %223 = load i8*, i8** %15, align 8
  %224 = icmp ult i8* %223, %19
  br i1 %224, label %78, label %225

225:                                              ; preds = %218, %103
  %226 = phi i8 [ %219, %218 ], [ %80, %103 ]
  %227 = phi i32 [ %220, %218 ], [ %81, %103 ]
  %228 = phi i32 [ %221, %218 ], [ %82, %103 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %64, %225
  store i32 3, i32* %3, align 4
  br label %382

231:                                              ; preds = %93, %225
  %232 = phi i32 [ %228, %225 ], [ %82, %93 ]
  %233 = phi i32 [ %227, %225 ], [ %81, %93 ]
  %234 = phi i8 [ %226, %225 ], [ %80, %93 ]
  store i32 %232, i32* %41, align 8
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %323, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 4, i32 6
  %238 = load i8**, i8*** %237, align 8
  %239 = load i8*, i8** %238, align 8
  %240 = call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8* %239) #12
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %385, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 6, i32 9, i32 2
  %244 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %243, align 8
  %245 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 4, i32 7
  %246 = load i32*, i32** %245, align 8
  %247 = load i32, i32* %246, align 4
  %248 = call i32 %244(%struct.PS_TableRec_* %7, i32 0, i8* %239, i32 %247) #11
  store i32 %248, i32* %3, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %382

250:                                              ; preds = %242
  %251 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %243, align 8
  %252 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 5, i32 6
  %253 = load i8**, i8*** %252, align 8
  %254 = load i8*, i8** %253, align 8
  %255 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 5, i32 7
  %256 = load i32*, i32** %255, align 8
  %257 = load i32, i32* %256, align 4
  %258 = call i32 %251(%struct.PS_TableRec_* %7, i32 1, i8* %254, i32 %257) #11
  store i32 %258, i32* %3, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %382

260:                                              ; preds = %250
  %261 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %243, align 8
  %262 = load i8**, i8*** %237, align 8
  %263 = sext i32 %233 to i64
  %264 = getelementptr inbounds i8*, i8** %262, i64 %263
  %265 = load i8*, i8** %264, align 8
  %266 = load i32*, i32** %245, align 8
  %267 = getelementptr inbounds i32, i32* %266, i64 %263
  %268 = load i32, i32* %267, align 4
  %269 = call i32 %261(%struct.PS_TableRec_* %7, i32 2, i8* %265, i32 %268) #11
  store i32 %269, i32* %3, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %382

271:                                              ; preds = %260
  %272 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %243, align 8
  %273 = load i8**, i8*** %252, align 8
  %274 = getelementptr inbounds i8*, i8** %273, i64 %263
  %275 = load i8*, i8** %274, align 8
  %276 = load i32*, i32** %255, align 8
  %277 = getelementptr inbounds i32, i32* %276, i64 %263
  %278 = load i32, i32* %277, align 4
  %279 = call i32 %272(%struct.PS_TableRec_* %7, i32 3, i8* %275, i32 %278) #11
  store i32 %279, i32* %3, align 4
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %382

281:                                              ; preds = %271
  %282 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 4, i32 9, i32 2
  %283 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %282, align 8
  %284 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 6, i32 6
  %285 = load i8**, i8*** %284, align 8
  %286 = load i8*, i8** %285, align 8
  %287 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 6, i32 7
  %288 = load i32*, i32** %287, align 8
  %289 = load i32, i32* %288, align 4
  %290 = call i32 %283(%struct.PS_TableRec_* %6, i32 %233, i8* %286, i32 %289) #11
  store i32 %290, i32* %3, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %382

292:                                              ; preds = %281
  %293 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 5, i32 9, i32 2
  %294 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %293, align 8
  %295 = load i8**, i8*** %284, align 8
  %296 = getelementptr inbounds i8*, i8** %295, i64 1
  %297 = load i8*, i8** %296, align 8
  %298 = load i32*, i32** %287, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 1
  %300 = load i32, i32* %299, align 4
  %301 = call i32 %294(%struct.PS_TableRec_* %5, i32 %233, i8* %297, i32 %300) #11
  store i32 %301, i32* %3, align 4
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %382

303:                                              ; preds = %292
  %304 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %282, align 8
  %305 = load i8**, i8*** %284, align 8
  %306 = getelementptr inbounds i8*, i8** %305, i64 2
  %307 = load i8*, i8** %306, align 8
  %308 = load i32*, i32** %287, align 8
  %309 = getelementptr inbounds i32, i32* %308, i64 2
  %310 = load i32, i32* %309, align 4
  %311 = call i32 %304(%struct.PS_TableRec_* %6, i32 0, i8* %307, i32 %310) #11
  store i32 %311, i32* %3, align 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %382

313:                                              ; preds = %303
  %314 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %293, align 8
  %315 = load i8**, i8*** %284, align 8
  %316 = getelementptr inbounds i8*, i8** %315, i64 3
  %317 = load i8*, i8** %316, align 8
  %318 = load i32*, i32** %287, align 8
  %319 = getelementptr inbounds i32, i32* %318, i64 3
  %320 = load i32, i32* %319, align 4
  %321 = call i32 %314(%struct.PS_TableRec_* %5, i32 0, i8* %317, i32 %320) #11
  store i32 %321, i32* %3, align 4
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %385, label %382

323:                                              ; preds = %231
  %324 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %324) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %324, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @__const.parse_charstrings.notdef_glyph, i64 0, i64 0), i64 5, i1 false)
  %325 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 6, i32 9, i32 2
  %326 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %325, align 8
  %327 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 4, i32 6
  %328 = load i8**, i8*** %327, align 8
  %329 = load i8*, i8** %328, align 8
  %330 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 4, i32 7
  %331 = load i32*, i32** %330, align 8
  %332 = load i32, i32* %331, align 4
  %333 = call i32 %326(%struct.PS_TableRec_* %7, i32 0, i8* %329, i32 %332) #11
  store i32 %333, i32* %3, align 4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %375

335:                                              ; preds = %323
  %336 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %325, align 8
  %337 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 5, i32 6
  %338 = load i8**, i8*** %337, align 8
  %339 = load i8*, i8** %338, align 8
  %340 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 5, i32 7
  %341 = load i32*, i32** %340, align 8
  %342 = load i32, i32* %341, align 4
  %343 = call i32 %336(%struct.PS_TableRec_* %7, i32 1, i8* %339, i32 %342) #11
  store i32 %343, i32* %3, align 4
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %375

345:                                              ; preds = %335
  %346 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 4, i32 9, i32 2
  %347 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %346, align 8
  %348 = call i32 %347(%struct.PS_TableRec_* %6, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i32 8) #11
  store i32 %348, i32* %3, align 4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %375

350:                                              ; preds = %345
  %351 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 5, i32 9, i32 2
  %352 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %351, align 8
  %353 = call i32 %352(%struct.PS_TableRec_* %5, i32 0, i8* nonnull %324, i32 5) #11
  store i32 %353, i32* %3, align 4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %375

355:                                              ; preds = %350
  %356 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %346, align 8
  %357 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 6, i32 6
  %358 = load i8**, i8*** %357, align 8
  %359 = load i8*, i8** %358, align 8
  %360 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 6, i32 7
  %361 = load i32*, i32** %360, align 8
  %362 = load i32, i32* %361, align 4
  %363 = call i32 %356(%struct.PS_TableRec_* %6, i32 %232, i8* %359, i32 %362) #11
  store i32 %363, i32* %3, align 4
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %375

365:                                              ; preds = %355
  %366 = load i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)** %351, align 8
  %367 = load i8**, i8*** %357, align 8
  %368 = getelementptr inbounds i8*, i8** %367, i64 1
  %369 = load i8*, i8** %368, align 8
  %370 = load i32*, i32** %360, align 8
  %371 = getelementptr inbounds i32, i32* %370, i64 1
  %372 = load i32, i32* %371, align 4
  %373 = call i32 %366(%struct.PS_TableRec_* %5, i32 %232, i8* %369, i32 %372) #11
  store i32 %373, i32* %3, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %377, label %375

375:                                              ; preds = %323, %335, %345, %350, %355, %365
  %376 = phi i32 [ %333, %323 ], [ %343, %335 ], [ %348, %345 ], [ %353, %350 ], [ %363, %355 ], [ %373, %365 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %324) #11
  br label %382

377:                                              ; preds = %365
  %378 = load i32, i32* %41, align 8
  %379 = add nsw i32 %378, 1
  store i32 %379, i32* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %324) #11
  br label %385

380:                                              ; preds = %214, %163, %196, %121, %195
  %381 = load i32, i32* %3, align 4
  br label %382

382:                                              ; preds = %380, %375, %111, %313, %303, %292, %281, %271, %260, %250, %242, %58, %52, %44, %230, %25
  %383 = phi i32 [ %381, %380 ], [ %376, %375 ], [ 3, %111 ], [ %321, %313 ], [ %311, %303 ], [ %301, %292 ], [ %290, %281 ], [ %279, %271 ], [ %269, %260 ], [ %258, %250 ], [ %248, %242 ], [ %62, %58 ], [ %56, %52 ], [ %50, %44 ], [ 3, %230 ], [ 3, %25 ]
  %384 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 %383, i32* %384, align 8
  br label %385

385:                                              ; preds = %155, %112, %154, %152, %377, %236, %313, %26, %36, %382
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @parse_private(%struct.T1_FaceRec_* nocapture readnone, %struct.T1_Loader_* nocapture) #2 {
  %3 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 11
  %4 = load i32, i32* %3, align 4
  %5 = or i32 %4, 1
  store i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @parse_blend_design_positions(%struct.T1_FaceRec_*, %struct.T1_Loader_*) #0 {
  %3 = alloca [16 x %struct.T1_TokenRec_], align 16
  %4 = alloca i32, align 4
  %5 = alloca [4 x %struct.T1_TokenRec_], align 16
  %6 = alloca i32, align 4
  %7 = bitcast [16 x %struct.T1_TokenRec_]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 384, i1 false)
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 -1431655766, i32* %4, align 4
  %9 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 10
  %11 = load void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)** %10, align 8
  %12 = getelementptr inbounds [16 x %struct.T1_TokenRec_], [16 x %struct.T1_TokenRec_]* %3, i64 0, i64 0
  call void %11(%struct.PS_ParserRec_* %9, %struct.T1_TokenRec_* nonnull %12, i32 16, i32* nonnull %4) #11
  %13 = load i32, i32* %4, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %89, label %15

15:                                               ; preds = %2
  %16 = icmp eq i32 %13, 0
  %17 = icmp sgt i32 %13, 16
  %18 = or i1 %16, %17
  br i1 %18, label %89, label %19

19:                                               ; preds = %15
  %20 = bitcast %struct.T1_Loader_* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %26 = icmp sgt i32 %13, 0
  br i1 %26, label %27, label %88

27:                                               ; preds = %19
  %28 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %25, align 8
  %29 = bitcast [4 x %struct.T1_TokenRec_]* %5 to i8*
  %30 = bitcast i32* %6 to i8*
  %31 = getelementptr inbounds [4 x %struct.T1_TokenRec_], [4 x %struct.T1_TokenRec_]* %5, i64 0, i64 0
  %32 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 5
  br label %33

33:                                               ; preds = %27, %83
  %34 = phi i64 [ 0, %27 ], [ %84, %83 ]
  %35 = phi i32 [ 0, %27 ], [ %61, %83 ]
  %36 = phi %struct.PS_BlendRec_* [ %28, %27 ], [ %60, %83 ]
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -86, i64 96, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #11
  store i32 -1431655766, i32* %6, align 4
  %37 = getelementptr inbounds [16 x %struct.T1_TokenRec_], [16 x %struct.T1_TokenRec_]* %3, i64 0, i64 %34
  %38 = bitcast %struct.T1_TokenRec_* %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %20, align 8
  %40 = getelementptr inbounds [16 x %struct.T1_TokenRec_], [16 x %struct.T1_TokenRec_]* %3, i64 0, i64 %34, i32 1
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %23, align 8
  %43 = load void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)** %10, align 8
  call void %43(%struct.PS_ParserRec_* %9, %struct.T1_TokenRec_* nonnull %31, i32 4, i32* nonnull %6) #11
  %44 = icmp eq i64 %34, 0
  %45 = load i32, i32* %6, align 4
  br i1 %44, label %46, label %56

46:                                               ; preds = %33
  %47 = add i32 %45, -1
  %48 = icmp ugt i32 %47, 3
  br i1 %48, label %81, label %49

49:                                               ; preds = %46
  %50 = load i32, i32* %4, align 4
  %51 = call fastcc i32 @t1_allocate_blend(%struct.T1_FaceRec_* %0, i32 %50, i32 %45)
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %81

53:                                               ; preds = %49
  %54 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %25, align 8
  %55 = load i32, i32* %6, align 4
  br label %58

56:                                               ; preds = %33
  %57 = icmp eq i32 %45, %35
  br i1 %57, label %58, label %81

58:                                               ; preds = %56, %53
  %59 = phi i32 [ %55, %53 ], [ %35, %56 ]
  %60 = phi %struct.PS_BlendRec_* [ %54, %53 ], [ %36, %56 ]
  %61 = phi i32 [ %45, %53 ], [ %35, %56 ]
  %62 = icmp sgt i32 %59, 0
  br i1 %62, label %63, label %83

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %60, i64 0, i32 3, i64 %34
  br label %65

65:                                               ; preds = %63, %65
  %66 = phi i64 [ 0, %63 ], [ %77, %65 ]
  %67 = getelementptr inbounds [4 x %struct.T1_TokenRec_], [4 x %struct.T1_TokenRec_]* %5, i64 0, i64 %66
  %68 = bitcast %struct.T1_TokenRec_* %67 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %20, align 8
  %70 = getelementptr inbounds [4 x %struct.T1_TokenRec_], [4 x %struct.T1_TokenRec_]* %5, i64 0, i64 %66, i32 1
  %71 = bitcast i8** %70 to i64*
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %23, align 8
  %73 = load i64 (%struct.PS_ParserRec_*, i32)*, i64 (%struct.PS_ParserRec_*, i32)** %32, align 8
  %74 = call i64 %73(%struct.PS_ParserRec_* %9, i32 0) #11
  %75 = load i64*, i64** %64, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 %66
  store i64 %74, i64* %76, align 8
  %77 = add nuw nsw i64 %66, 1
  %78 = load i32, i32* %6, align 4
  %79 = sext i32 %78 to i64
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %65, label %83

81:                                               ; preds = %46, %49, %56
  %82 = phi i32 [ 3, %56 ], [ %51, %49 ], [ 3, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %29) #11
  br label %89

83:                                               ; preds = %65, %58
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %29) #11
  %84 = add nuw nsw i64 %34, 1
  %85 = load i32, i32* %4, align 4
  %86 = sext i32 %85 to i64
  %87 = icmp slt i64 %84, %86
  br i1 %87, label %33, label %88

88:                                               ; preds = %83, %19
  store i64 %21, i64* %20, align 8
  store i64 %24, i64* %23, align 8
  br label %89

89:                                               ; preds = %81, %88, %15, %2
  %90 = phi i32 [ 162, %2 ], [ 3, %15 ], [ 0, %88 ], [ %82, %81 ]
  %91 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 %90, i32* %91, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @parse_blend_design_map(%struct.T1_FaceRec_*, %struct.T1_Loader_*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca [4 x %struct.T1_TokenRec_], align 16
  %5 = alloca i32, align 4
  %6 = alloca [20 x %struct.T1_TokenRec_], align 16
  %7 = alloca i32, align 4
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 0, i32* %3, align 4
  %9 = bitcast [4 x %struct.T1_TokenRec_]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 96, i1 false)
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 -1431655766, i32* %5, align 4
  %11 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 25
  %12 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %11, align 8
  %13 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 10
  %15 = load void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)** %14, align 8
  %16 = getelementptr inbounds [4 x %struct.T1_TokenRec_], [4 x %struct.T1_TokenRec_]* %4, i64 0, i64 0
  call void %15(%struct.PS_ParserRec_* %13, %struct.T1_TokenRec_* nonnull %16, i32 4, i32* nonnull %5) #11
  %17 = load i32, i32* %5, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  store i32 162, i32* %3, align 4
  br label %110

20:                                               ; preds = %2
  %21 = icmp eq i32 %17, 0
  %22 = icmp sgt i32 %17, 4
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  store i32 3, i32* %3, align 4
  br label %110

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %struct.T1_Loader_* %1 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = call fastcc i32 @t1_allocate_blend(%struct.T1_FaceRec_* %0, i32 0, i32 %17)
  store i32 %32, i32* %3, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %110

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %36 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %35, align 8
  %37 = load i32, i32* %5, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %107

39:                                               ; preds = %34
  %40 = bitcast [20 x %struct.T1_TokenRec_]* %6 to i8*
  %41 = bitcast i32* %7 to i8*
  %42 = getelementptr inbounds [20 x %struct.T1_TokenRec_], [20 x %struct.T1_TokenRec_]* %6, i64 0, i64 0
  %43 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 4
  %44 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 5
  br label %45

45:                                               ; preds = %39, %100
  %46 = phi i64 [ 0, %39 ], [ %101, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 480, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #11
  store i32 -1431655766, i32* %7, align 4
  %47 = getelementptr inbounds [4 x %struct.T1_TokenRec_], [4 x %struct.T1_TokenRec_]* %4, i64 0, i64 %46
  %48 = bitcast %struct.T1_TokenRec_* %47 to i64*
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %27, align 8
  %50 = getelementptr inbounds [4 x %struct.T1_TokenRec_], [4 x %struct.T1_TokenRec_]* %4, i64 0, i64 %46, i32 1
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %30, align 8
  %53 = load void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)** %14, align 8
  call void %53(%struct.PS_ParserRec_* %13, %struct.T1_TokenRec_* nonnull %42, i32 20, i32* nonnull %7) #11
  %54 = load i32, i32* %7, align 4
  %55 = add i32 %54, -1
  %56 = icmp ugt i32 %55, 19
  br i1 %56, label %57, label %58

57:                                               ; preds = %45
  store i32 3, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %40) #11
  br label %110

58:                                               ; preds = %45
  %59 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %36, i64 0, i32 4, i64 %46, i32 1
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  store i32 3, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %40) #11
  br label %110

63:                                               ; preds = %58
  %64 = shl nsw i32 %54, 1
  %65 = sext i32 %64 to i64
  %66 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %12, i64 8, i64 0, i64 %65, i8* null, i32* nonnull %3) #11
  %67 = bitcast i64** %59 to i8**
  store i8* %66, i8** %67, align 8
  %68 = load i32, i32* %3, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %109

70:                                               ; preds = %63
  %71 = bitcast i8* %66 to i64*
  %72 = load i32, i32* %7, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i64, i64* %71, i64 %73
  %75 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %36, i64 0, i32 4, i64 %46, i32 2
  store i64* %74, i64** %75, align 8
  %76 = trunc i32 %72 to i8
  %77 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %36, i64 0, i32 4, i64 %46, i32 0
  store i8 %76, i8* %77, align 8
  %78 = load i32, i32* %7, align 4
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %100

80:                                               ; preds = %70, %80
  %81 = phi i64 [ %96, %80 ], [ 0, %70 ]
  %82 = getelementptr inbounds [20 x %struct.T1_TokenRec_], [20 x %struct.T1_TokenRec_]* %6, i64 0, i64 %81, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  store i8* %84, i8** %26, align 8
  %85 = getelementptr inbounds [20 x %struct.T1_TokenRec_], [20 x %struct.T1_TokenRec_]* %6, i64 0, i64 %81, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 -1
  store i8* %87, i8** %29, align 8
  %88 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %43, align 8
  %89 = call i64 %88(%struct.PS_ParserRec_* %13) #11
  %90 = load i64*, i64** %59, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 %81
  store i64 %89, i64* %91, align 8
  %92 = load i64 (%struct.PS_ParserRec_*, i32)*, i64 (%struct.PS_ParserRec_*, i32)** %44, align 8
  %93 = call i64 %92(%struct.PS_ParserRec_* %13, i32 0) #11
  %94 = load i64*, i64** %75, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 %81
  store i64 %93, i64* %95, align 8
  %96 = add nuw nsw i64 %81, 1
  %97 = load i32, i32* %7, align 4
  %98 = sext i32 %97 to i64
  %99 = icmp slt i64 %96, %98
  br i1 %99, label %80, label %100

100:                                              ; preds = %80, %70
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %40) #11
  %101 = add nuw nsw i64 %46, 1
  %102 = load i32, i32* %5, align 4
  %103 = sext i32 %102 to i64
  %104 = icmp slt i64 %101, %103
  br i1 %104, label %45, label %105

105:                                              ; preds = %100
  %106 = load i32, i32* %3, align 4
  br label %107

107:                                              ; preds = %105, %34
  %108 = phi i32 [ %106, %105 ], [ 0, %34 ]
  store i64 %28, i64* %27, align 8
  store i64 %31, i64* %30, align 8
  br label %110

109:                                              ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %40) #11
  br label %110

110:                                              ; preds = %109, %62, %57, %25, %107, %24, %19
  %111 = phi i32 [ %68, %109 ], [ 3, %62 ], [ 3, %57 ], [ %32, %25 ], [ %108, %107 ], [ 3, %24 ], [ 162, %19 ]
  %112 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 %111, i32* %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @parse_blend_axis_types(%struct.T1_FaceRec_*, %struct.T1_Loader_*) #0 {
  %3 = alloca [4 x %struct.T1_TokenRec_], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast [4 x %struct.T1_TokenRec_]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 96, i1 false)
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 -1431655766, i32* %4, align 4
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 0, i32* %5, align 4
  %9 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 10
  %11 = load void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)** %10, align 8
  %12 = getelementptr inbounds [4 x %struct.T1_TokenRec_], [4 x %struct.T1_TokenRec_]* %3, i64 0, i64 0
  call void %11(%struct.PS_ParserRec_* %9, %struct.T1_TokenRec_* nonnull %12, i32 4, i32* nonnull %4) #11
  %13 = load i32, i32* %4, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i32 162, i32* %5, align 4
  br label %70

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  %18 = icmp sgt i32 %13, 4
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store i32 3, i32* %5, align 4
  br label %70

21:                                               ; preds = %16
  %22 = call fastcc i32 @t1_allocate_blend(%struct.T1_FaceRec_* %0, i32 0, i32 %13)
  store i32 %22, i32* %5, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %70

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %26 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %25, align 8
  %27 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 25
  %28 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %27, align 8
  %29 = load i32, i32* %4, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %70

31:                                               ; preds = %24, %60
  %32 = phi i64 [ %64, %60 ], [ 0, %24 ]
  %33 = getelementptr inbounds [4 x %struct.T1_TokenRec_], [4 x %struct.T1_TokenRec_]* %3, i64 0, i64 %32, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 47
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %38, i8** %33, align 8
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i8* [ %38, %37 ], [ %34, %31 ]
  %41 = ptrtoint i8* %40 to i64
  %42 = getelementptr inbounds [4 x %struct.T1_TokenRec_], [4 x %struct.T1_TokenRec_]* %3, i64 0, i64 %32, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %44, %41
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %39
  store i32 3, i32* %5, align 4
  br label %70

49:                                               ; preds = %39
  %50 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %26, i64 0, i32 2, i64 %32
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  call void @ft_mem_free(%struct.FT_MemoryRec_* %28, i8* nonnull %51) #11
  br label %54

54:                                               ; preds = %49, %53
  %55 = add i64 %45, 1
  %56 = and i64 %55, 4294967295
  %57 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %28, i64 %56, i32* nonnull %5) #11
  store i8* %57, i8** %50, align 8
  %58 = load i32, i32* %5, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %54
  %61 = load i8*, i8** %33, align 8
  %62 = and i64 %45, 4294967295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 1 %61, i64 %62, i1 false)
  %63 = getelementptr inbounds i8, i8* %57, i64 %62
  store i8 0, i8* %63, align 1
  %64 = add nuw nsw i64 %32, 1
  %65 = load i32, i32* %4, align 4
  %66 = sext i32 %65 to i64
  %67 = icmp slt i64 %64, %66
  br i1 %67, label %31, label %68

68:                                               ; preds = %60
  %69 = load i32, i32* %5, align 4
  br label %70

70:                                               ; preds = %54, %68, %24, %48, %21, %20, %15
  %71 = phi i32 [ 0, %24 ], [ 3, %48 ], [ %22, %21 ], [ 3, %20 ], [ 162, %15 ], [ %69, %68 ], [ %58, %54 ]
  %72 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 %71, i32* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @parse_weight_vector(%struct.T1_FaceRec_*, %struct.T1_Loader_*) #0 {
  %3 = alloca [16 x %struct.T1_TokenRec_], align 16
  %4 = alloca i32, align 4
  %5 = bitcast [16 x %struct.T1_TokenRec_]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 384, i1 false)
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  store i32 -1431655766, i32* %4, align 4
  %7 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %8 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %7, align 8
  %9 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 10
  %11 = load void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)** %10, align 8
  %12 = getelementptr inbounds [16 x %struct.T1_TokenRec_], [16 x %struct.T1_TokenRec_]* %3, i64 0, i64 0
  call void %11(%struct.PS_ParserRec_* %9, %struct.T1_TokenRec_* nonnull %12, i32 16, i32* nonnull %4) #11
  %13 = load i32, i32* %4, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %65, label %15

15:                                               ; preds = %2
  %16 = icmp eq i32 %13, 0
  %17 = icmp sgt i32 %13, 16
  %18 = or i1 %16, %17
  br i1 %18, label %65, label %19

19:                                               ; preds = %15
  %20 = icmp eq %struct.PS_BlendRec_* %8, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %8, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %21, %19
  %26 = call fastcc i32 @t1_allocate_blend(%struct.T1_FaceRec_* %0, i32 %13, i32 0)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %65

28:                                               ; preds = %25
  %29 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %7, align 8
  %30 = load i32, i32* %4, align 4
  br label %33

31:                                               ; preds = %21
  %32 = icmp eq i32 %23, %13
  br i1 %32, label %33, label %65

33:                                               ; preds = %31, %28
  %34 = phi i32 [ %13, %31 ], [ %30, %28 ]
  %35 = phi %struct.PS_BlendRec_* [ %8, %31 ], [ %29, %28 ]
  %36 = bitcast %struct.T1_Loader_* %1 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 2
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp sgt i32 %34, 0
  br i1 %41, label %42, label %64

42:                                               ; preds = %33
  %43 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 5
  %44 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %35, i64 0, i32 5
  %45 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %35, i64 0, i32 6
  br label %46

46:                                               ; preds = %42, %46
  %47 = phi i64 [ 0, %42 ], [ %60, %46 ]
  %48 = getelementptr inbounds [16 x %struct.T1_TokenRec_], [16 x %struct.T1_TokenRec_]* %3, i64 0, i64 %47
  %49 = bitcast %struct.T1_TokenRec_* %48 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %36, align 8
  %51 = getelementptr inbounds [16 x %struct.T1_TokenRec_], [16 x %struct.T1_TokenRec_]* %3, i64 0, i64 %47, i32 1
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %39, align 8
  %54 = load i64 (%struct.PS_ParserRec_*, i32)*, i64 (%struct.PS_ParserRec_*, i32)** %43, align 8
  %55 = call i64 %54(%struct.PS_ParserRec_* %9, i32 0) #11
  %56 = load i64*, i64** %44, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 %47
  store i64 %55, i64* %57, align 8
  %58 = load i64*, i64** %45, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %47
  store i64 %55, i64* %59, align 8
  %60 = add nuw nsw i64 %47, 1
  %61 = load i32, i32* %4, align 4
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %46, label %64

64:                                               ; preds = %46, %33
  store i64 %37, i64* %36, align 8
  store i64 %40, i64* %39, align 8
  br label %65

65:                                               ; preds = %31, %15, %2, %25, %64
  %66 = phi i32 [ 0, %64 ], [ %26, %25 ], [ 162, %2 ], [ 3, %15 ], [ 3, %31 ]
  %67 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 3
  store i32 %66, i32* %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @parse_buildchar(%struct.T1_FaceRec_* nocapture, %struct.T1_Loader_*) #0 {
  %3 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %struct.T1_Loader_, %struct.T1_Loader_* %1, i64 0, i32 0, i32 0, i32 5, i32 8
  %5 = load i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)** %4, align 8
  %6 = tail call i32 %5(%struct.PS_ParserRec_* %3, i32 0, i64* null, i32 0) #11
  %7 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 10
  store i32 %6, i32* %7, align 8
  ret void
}

declare hidden zeroext i8 @FT_Matrix_Check(%struct.FT_Matrix_*) local_unnamed_addr #3

declare i32 @ft_hash_num_init(%struct.FT_HashRec_*, %struct.FT_MemoryRec_*) local_unnamed_addr #3

declare i32 @ft_hash_num_insert(i32, i64, %struct.FT_HashRec_*, %struct.FT_MemoryRec_*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @t1_allocate_blend(%struct.T1_FaceRec_*, i32, i32) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 0, i32 25
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %4, align 4
  %8 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 7
  %9 = load %struct.PS_BlendRec_*, %struct.PS_BlendRec_** %8, align 8
  %10 = icmp eq %struct.PS_BlendRec_* %9, null
  br i1 %10, label %11, label %20

11:                                               ; preds = %3
  %12 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %6, i64 768, i32* nonnull %4) #11
  %13 = load i32, i32* %4, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %180

15:                                               ; preds = %11
  %16 = bitcast i8* %12 to %struct.PS_BlendRec_*
  %17 = getelementptr inbounds i8, i8* %12, i64 760
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  %19 = bitcast %struct.PS_BlendRec_** %8 to i8**
  store i8* %12, i8** %19, align 8
  br label %20

20:                                               ; preds = %3, %15
  %21 = phi %struct.PS_BlendRec_* [ %9, %3 ], [ %16, %15 ]
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %88, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %86

27:                                               ; preds = %23
  %28 = zext i32 %1 to i64
  %29 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %6, i64 56, i64 0, i64 %28, i8* null, i32* nonnull %4) #11
  %30 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 7, i64 1
  %31 = bitcast %struct.PS_FontInfoRec_** %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = load i32, i32* %4, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %180

34:                                               ; preds = %27
  %35 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %6, i64 224, i64 0, i64 %28, i8* null, i32* nonnull %4) #11
  %36 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 8, i64 1
  %37 = bitcast %struct.PS_PrivateRec_** %36 to i8**
  store i8* %35, i8** %37, align 8
  %38 = load i32, i32* %4, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %180

40:                                               ; preds = %34
  %41 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %6, i64 32, i64 0, i64 %28, i8* null, i32* nonnull %4) #11
  %42 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 10, i64 1
  %43 = bitcast %struct.FT_BBox_** %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = load i32, i32* %4, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %180

46:                                               ; preds = %40
  %47 = shl i32 %1, 1
  %48 = zext i32 %47 to i64
  %49 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %6, i64 8, i64 0, i64 %48, i8* null, i32* nonnull %4) #11
  %50 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 5
  %51 = bitcast i64** %50 to i8**
  store i8* %49, i8** %51, align 8
  %52 = load i32, i32* %4, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %180

54:                                               ; preds = %46
  %55 = bitcast i8* %49 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %28
  %57 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 6
  store i64* %56, i64** %57, align 8
  %58 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 7, i64 0
  store %struct.PS_FontInfoRec_* %58, %struct.PS_FontInfoRec_** %59, align 8
  %60 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 2
  %61 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 8, i64 0
  store %struct.PS_PrivateRec_* %60, %struct.PS_PrivateRec_** %61, align 8
  %62 = getelementptr inbounds %struct.T1_FaceRec_, %struct.T1_FaceRec_* %0, i64 0, i32 1, i32 21
  %63 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 10, i64 0
  store %struct.FT_BBox_* %62, %struct.FT_BBox_** %63, align 8
  %64 = icmp ult i32 %1, 2
  br i1 %64, label %85, label %65

65:                                               ; preds = %54
  %66 = load %struct.PS_FontInfoRec_*, %struct.PS_FontInfoRec_** %30, align 8
  br label %67

67:                                               ; preds = %65, %67
  %68 = phi %struct.PS_FontInfoRec_* [ %72, %67 ], [ %66, %65 ]
  %69 = phi i32 [ %83, %67 ], [ 2, %65 ]
  %70 = add i32 %69, -1
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %struct.PS_FontInfoRec_, %struct.PS_FontInfoRec_* %68, i64 1
  %73 = zext i32 %69 to i64
  %74 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 7, i64 %73
  store %struct.PS_FontInfoRec_* %72, %struct.PS_FontInfoRec_** %74, align 8
  %75 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 8, i64 %71
  %76 = load %struct.PS_PrivateRec_*, %struct.PS_PrivateRec_** %75, align 8
  %77 = getelementptr inbounds %struct.PS_PrivateRec_, %struct.PS_PrivateRec_* %76, i64 1
  %78 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 8, i64 %73
  store %struct.PS_PrivateRec_* %77, %struct.PS_PrivateRec_** %78, align 8
  %79 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 10, i64 %71
  %80 = load %struct.FT_BBox_*, %struct.FT_BBox_** %79, align 8
  %81 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %80, i64 1
  %82 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 10, i64 %73
  store %struct.FT_BBox_* %81, %struct.FT_BBox_** %82, align 8
  %83 = add i32 %69, 1
  %84 = icmp ugt i32 %83, %1
  br i1 %84, label %85, label %67

85:                                               ; preds = %67, %54
  store i32 %1, i32* %24, align 8
  br label %88

86:                                               ; preds = %23
  %87 = icmp eq i32 %25, %1
  br i1 %87, label %88, label %182

88:                                               ; preds = %85, %86, %20
  %89 = icmp eq i32 %2, 0
  %90 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %97, label %92

92:                                               ; preds = %88
  %93 = icmp eq i32 %91, 0
  %94 = icmp eq i32 %91, %2
  %95 = or i1 %93, %94
  br i1 %95, label %96, label %182

96:                                               ; preds = %92
  store i32 %2, i32* %90, align 4
  br label %97

97:                                               ; preds = %88, %96
  %98 = phi i32 [ %2, %96 ], [ %91, %88 ]
  %99 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = icmp ne i32 %100, 0
  %102 = icmp ne i32 %98, 0
  %103 = and i1 %101, %102
  br i1 %103, label %104, label %180

104:                                              ; preds = %97
  %105 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 3
  %106 = getelementptr inbounds [16 x i64*], [16 x i64*]* %105, i64 0, i64 0
  %107 = load i64*, i64** %106, align 8
  %108 = icmp eq i64* %107, null
  br i1 %108, label %109, label %180

109:                                              ; preds = %104
  %110 = mul i32 %98, %100
  %111 = zext i32 %110 to i64
  %112 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %6, i64 8, i64 0, i64 %111, i8* null, i32* nonnull %4) #11
  %113 = bitcast [16 x i64*]* %105 to i8**
  store i8* %112, i8** %113, align 8
  %114 = load i32, i32* %4, align 4
  %115 = icmp eq i32 %114, 0
  %116 = icmp ugt i32 %100, 1
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %180

118:                                              ; preds = %109
  %119 = bitcast i8* %112 to i64*
  %120 = zext i32 %100 to i64
  %121 = zext i32 %98 to i64
  %122 = getelementptr inbounds i64, i64* %119, i64 %121
  %123 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 3, i64 1
  store i64* %122, i64** %123, align 8
  %124 = icmp eq i32 %100, 2
  br i1 %124, label %180, label %125

125:                                              ; preds = %118
  %126 = add nsw i64 %120, -2
  %127 = add nsw i64 %120, -3
  %128 = and i64 %126, 3
  %129 = icmp ult i64 %127, 3
  br i1 %129, label %165, label %130

130:                                              ; preds = %125
  %131 = sub nsw i64 %126, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 2, %130 ], [ %162, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %163, %132 ]
  %135 = load i64*, i64** %106, align 8
  %136 = trunc i64 %133 to i32
  %137 = mul i32 %98, %136
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds i64, i64* %135, i64 %138
  %140 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 3, i64 %133
  store i64* %139, i64** %140, align 8
  %141 = or i64 %133, 1
  %142 = load i64*, i64** %106, align 8
  %143 = trunc i64 %141 to i32
  %144 = mul i32 %98, %143
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds i64, i64* %142, i64 %145
  %147 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 3, i64 %141
  store i64* %146, i64** %147, align 8
  %148 = add nuw nsw i64 %133, 2
  %149 = load i64*, i64** %106, align 8
  %150 = trunc i64 %148 to i32
  %151 = mul i32 %98, %150
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i64, i64* %149, i64 %152
  %154 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 3, i64 %148
  store i64* %153, i64** %154, align 8
  %155 = add nuw nsw i64 %133, 3
  %156 = load i64*, i64** %106, align 8
  %157 = trunc i64 %155 to i32
  %158 = mul i32 %98, %157
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds i64, i64* %156, i64 %159
  %161 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 3, i64 %155
  store i64* %160, i64** %161, align 8
  %162 = add nuw nsw i64 %133, 4
  %163 = add i64 %134, -4
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %132

165:                                              ; preds = %132, %125
  %166 = phi i64 [ 2, %125 ], [ %162, %132 ]
  %167 = icmp eq i64 %128, 0
  br i1 %167, label %180, label %168

168:                                              ; preds = %165, %168
  %169 = phi i64 [ %177, %168 ], [ %166, %165 ]
  %170 = phi i64 [ %178, %168 ], [ %128, %165 ]
  %171 = load i64*, i64** %106, align 8
  %172 = trunc i64 %169 to i32
  %173 = mul i32 %98, %172
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds i64, i64* %171, i64 %174
  %176 = getelementptr inbounds %struct.PS_BlendRec_, %struct.PS_BlendRec_* %21, i64 0, i32 3, i64 %169
  store i64* %175, i64** %176, align 8
  %177 = add nuw nsw i64 %169, 1
  %178 = add i64 %170, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %168, !llvm.loop !11

180:                                              ; preds = %165, %168, %118, %27, %34, %40, %46, %109, %11, %97, %104, %182
  %181 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i32 %181

182:                                              ; preds = %92, %86
  store i32 3, i32* %4, align 4
  br label %180
}

declare hidden i64 @FT_Stream_Pos(%struct.FT_StreamRec_*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !8, !5}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
