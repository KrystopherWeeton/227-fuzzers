; ModuleID = '../../third_party/blink/renderer/core/animation/worklet_animation_controller.cc'
source_filename = "../../third_party/blink/renderer/core/animation/worklet_animation_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.218", i32, [4 x i8], %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.354", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.364", %"class.std::__1::unique_ptr.370", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.382", %"class.std::__1::unique_ptr.388", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.395", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.334", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { i64 }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::Worklist.265"* }
%"class.blink::Worklist.265" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::Worklist.272"* }
%"class.blink::Worklist.272" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::Worklist.279"* }
%"class.blink::Worklist.279" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::Worklist.286"* }
%"class.blink::Worklist.286" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::Worklist.293"* }
%"class.blink::Worklist.293" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::Worklist.300"* }
%"class.blink::Worklist.300" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::Worklist.307"* }
%"class.blink::Worklist.307" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.254" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.314", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.326", %"class.std::__1::__compressed_pair.328", [4 x i8] }>
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316", %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { i64 }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { float }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.337", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.346" }
%"class.WTF::Vector.346" = type { %"class.WTF::VectorBuffer.347" }
%"class.WTF::VectorBuffer.347" = type { %"class.WTF::VectorBufferBase.348" }
%"class.WTF::VectorBufferBase.348" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.363" }
%"class.WTF::VectorBufferBase.363" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.376" }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.265"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.272"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.279"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.286"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.293"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.761" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.394 }
%class.scoped_refptr.394 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.395" = type { %"struct.std::__1::__atomic_base.396" }
%"struct.std::__1::__atomic_base.396" = type { %"struct.std::__1::__cxx_atomic_impl.397" }
%"struct.std::__1::__cxx_atomic_impl.397" = type { %"struct.std::__1::__cxx_atomic_base_impl.398" }
%"struct.std::__1::__cxx_atomic_base_impl.398" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::WorkletAnimationController" = type { %"class.blink::MutatorClient", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.WTF::HashSet.8", %"class.std::__1::unique_ptr", %"class.blink::Member.57" }
%"class.blink::MutatorClient" = type { i32 (...)** }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::WorkletAnimationBase"* }
%"class.blink::WorkletAnimationBase" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.6" }
%"class.WTF::HashTable.6" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.blink::Member" }
%"class.WTF::HashSet.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MainThreadMutatorClient"* }
%"class.blink::MainThreadMutatorClient" = type { %"class.blink::MutatorClient", %"class.std::__1::unique_ptr.12", %"class.blink::MutatorClient"* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::AnimationWorkletMutatorDispatcherImpl"* }
%"class.blink::AnimationWorkletMutatorDispatcherImpl" = type { %"class.blink::AnimationWorkletMutatorDispatcher", %"class.WTF::HashMap.15", %class.scoped_refptr.20, %"class.blink::MutatorClient"*, %"class.WTF::HashMap.26", %class.scoped_refptr.31, %"class.WTF::CrossThreadOnceFunction", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.38", %"class.base::WeakPtrFactory" }
%"class.blink::AnimationWorkletMutatorDispatcher" = type { i32 (...)** }
%"class.WTF::HashMap.15" = type { %"class.WTF::HashTable.16" }
%"class.WTF::HashTable.16" = type <{ %"struct.WTF::KeyValuePair.19"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.19" = type opaque
%class.scoped_refptr.20 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.21" }
%"class.WTF::HashMap.26" = type { %"class.WTF::HashTable.27" }
%"class.WTF::HashTable.27" = type <{ %"struct.WTF::KeyValuePair.30"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.30" = type opaque
%class.scoped_refptr.31 = type { %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* }
%"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef" = type opaque
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.33", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.33" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* }
%"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::TickClock"* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.44 }
%class.scoped_refptr.44 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.45", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.45" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.166", %"class.WTF::Vector.166", i8, i32, %"class.blink::Member.172", %"class.blink::Member.174", %"class.blink::Member.176", %"class.blink::Member.178", %"class.blink::Member.180", %"class.blink::Member.182", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.190", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.196", %"class.blink::Member.198", %"class.blink::Member.123", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.201", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.84", %"class.blink::Member.403", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::UserActionElementSet", %"class.blink::Member.412", double, double, i64, i64, %"class.blink::HeapHashSet.414", %"class.blink::HeapHashSet.421", i16, i8, %"class.blink::Member.428", %"class.blink::Member.430", %"class.blink::Member.432", %"class.blink::Member.434", %"class.blink::TextLinkColors", %"class.blink::Member.436", i8, [7 x i8], %"class.blink::HeapHashMap.438", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.84", %"class.WTF::Vector.445", %"class.blink::Member.450", %"class.blink::Member.452", i8, %"class.blink::Member.84", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.454", %"class.blink::HeapVector.456", %"class.std::__1::unique_ptr.464", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.470", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.483", %"class.WTF::Vector.485", i8, i8, %"class.std::__1::unique_ptr.490", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.496", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.504", i8, i32, %"class.blink::Member.506", %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.512", %"class.WTF::HashMap.514", %"class.blink::Member.519", %"class.blink::Member.521", %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::Member.57", %"class.blink::Member.57", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.658", i8, i32, %"class.blink::Member.665", %"class.blink::Member.667", i32, %"class.blink::Member.669", %"class.blink::Member.671", %"class.blink::Member.673", %"class.std::__1::unique_ptr.675", i64, %"class.std::__1::unique_ptr.681", i32, i32, %"class.blink::Member.687", %"class.blink::Member.689", %"class.blink::Member.691", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.693", %"class.WTF::Vector.695", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.700", %"class.blink::Member.707", %"class.std::__1::unique_ptr.709", %"class.blink::Member.715", i8, i8, %"class.WTF::String", %"class.blink::Member.717", i8, [7 x i8], %"class.blink::HeapHashMap.719", %"class.blink::HeapObserverSet.726", %"class.blink::Member.734", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.736", i32, i8, i8, %"class.blink::WeakMember.738", %"class.blink::Member.739" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.59", %"class.blink::Member.59" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.59", %"class.blink::Member.61", %"class.blink::Member.59", %"class.blink::Member.59", %"class.blink::Member.63" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.67", %"class.blink::Member.57", %"class.blink::Member.61", %"class.blink::Member.69", %"class.blink::Member.69", %"class.blink::Member.106", %"class.blink::Member.108", %"class.blink::Member.110", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.115", %"class.blink::HeapVector.117" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.73" }
%"class.blink::HeapHashMap.73" = type { %"class.WTF::HashMap.76" }
%"class.WTF::HashMap.76" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"struct.WTF::KeyValuePair.79"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.79" = type { %"class.WTF::AtomicString", %"class.blink::Member.80" }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.84", i32, %"class.blink::HeapVector" }
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.112" }
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::HeapHashMap.114"* }
%"class.blink::HeapHashMap.114" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.117" = type { %"class.WTF::Vector.120" }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122" }
%"class.WTF::VectorBufferBase.122" = type { %"class.blink::Member.123"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.159" }
%"class.blink::HeapHashMap.159" = type { %"class.WTF::HashMap.162" }
%"class.WTF::HashMap.162" = type { %"class.WTF::HashTable.163" }
%"class.WTF::HashTable.163" = type <{ %"struct.WTF::KeyValuePair.165"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.165" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.166" = type { %"class.WTF::VectorBuffer.167" }
%"class.WTF::VectorBuffer.167" = type { %"class.WTF::VectorBufferBase.168" }
%"class.WTF::VectorBufferBase.168" = type { %"class.base::OnceCallback.169"*, i32, i32 }
%"class.base::OnceCallback.169" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Member.172" = type { %"class.blink::MemberBase.173" }
%"class.blink::MemberBase.173" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.174" = type { %"class.blink::MemberBase.175" }
%"class.blink::MemberBase.175" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.766", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.799", i32, i8, [3 x i8], %"class.blink::HeapVector.801", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.809", %"class.blink::Member.811", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.820", %"class.blink::Member.826", %"class.blink::Member.828", i8, [7 x i8] }>
%"class.blink::Supplementable.766" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.767" }
%"class.blink::HeapHashMap.767" = type { %"class.WTF::HashMap.770" }
%"class.WTF::HashMap.770" = type { %"class.WTF::HashTable.771" }
%"class.WTF::HashTable.771" = type <{ %"struct.WTF::KeyValuePair.773"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.773" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.774" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.554" }
%"class.blink::HeapHashSet.554" = type { %"class.WTF::HashSet.557" }
%"class.WTF::HashSet.557" = type { %"class.WTF::HashTable.558" }
%"class.WTF::HashTable.558" = type <{ %"class.blink::WeakMember.560"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.560" = type opaque
%"class.blink::Supplementable.774" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.775" }
%"class.blink::HeapHashMap.775" = type { %"class.WTF::HashMap.778" }
%"class.WTF::HashMap.778" = type { %"class.WTF::HashTable.779" }
%"class.WTF::HashTable.779" = type <{ %"struct.WTF::KeyValuePair.781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.781" = type { i8*, %"class.blink::Member.1174" }
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1176" }
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.782, %"class.std::__1::unique_ptr.783", %"class.std::__1::unique_ptr.783", %"class.std::__1::unique_ptr.789", %"class.std::__1::unique_ptr.789", %"class.blink::Member.174", i32, [4 x i8], %"class.WTF::HashSet.795", i32, i32 }
%class.scoped_refptr.782 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.795" = type { %"class.WTF::HashTable.796" }
%"class.WTF::HashTable.796" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.801" = type { %"class.WTF::Vector.804" }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.blink::Member.807"*, i32, i32 }
%"class.blink::Member.807" = type opaque
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.813", i32, i32 }
%"class.blink::HeapHashMap.813" = type { %"class.WTF::HashMap.816" }
%"class.WTF::HashMap.816" = type { %"class.WTF::HashTable.817" }
%"class.WTF::HashTable.817" = type <{ %"struct.WTF::KeyValuePair.819"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.819" = type opaque
%"class.std::__1::unique_ptr.820" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.184" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::KURL"* }
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.125", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.127, %"class.WTF::Vector.128", %"class.WTF::Vector.128", %"class.blink::Member.59", %"class.blink::Member.133", %"class.blink::HeapHashSet.137", %"class.blink::Member.57", %"class.WTF::HashSet.143", %"class.WTF::TextPosition", %"class.blink::Member.147", %"class.blink::HeapVector.149", %"class.blink::Member.156" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.127 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.128" = type { %"class.WTF::VectorBuffer.129" }
%"class.WTF::VectorBuffer.129" = type { %"class.WTF::VectorBufferBase.130" }
%"class.WTF::VectorBufferBase.130" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.135" }
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.137" = type { %"class.WTF::HashSet.140" }
%"class.WTF::HashSet.140" = type { %"class.WTF::HashTable.141" }
%"class.WTF::HashTable.141" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.62" }
%"class.WTF::HashSet.143" = type { %"class.WTF::HashTable.144" }
%"class.WTF::HashTable.144" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.149" = type { %"class.WTF::Vector.152" }
%"class.WTF::Vector.152" = type { %"class.WTF::VectorBuffer.153" }
%"class.WTF::VectorBuffer.153" = type { %"class.WTF::VectorBufferBase.154" }
%"class.WTF::VectorBufferBase.154" = type { %"class.blink::Member.133"*, i32, i32 }
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.200 }
%class.scoped_refptr.200 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.201" = type { %"class.WTF::VectorBuffer.202" }
%"class.WTF::VectorBuffer.202" = type { %"class.WTF::VectorBufferBase.203" }
%"class.WTF::VectorBufferBase.203" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.205", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.205" = type { %"class.base::RefCounted.206" }
%"class.base::RefCounted.206" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.209" }
%"class.blink::HeapHashMap.209" = type { %"class.WTF::HashMap.212" }
%"class.WTF::HashMap.212" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"struct.WTF::KeyValuePair.215"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.215" = type { %"class.blink::WeakMember.216", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.405" }
%"class.blink::HeapHashMap.405" = type { %"class.WTF::HashMap.408" }
%"class.WTF::HashMap.408" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ %"struct.WTF::KeyValuePair.411"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.411" = type opaque
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.414" = type { %"class.WTF::HashSet.417" }
%"class.WTF::HashSet.417" = type { %"class.WTF::HashTable.418" }
%"class.WTF::HashTable.418" = type <{ %"class.blink::WeakMember.420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.420" = type opaque
%"class.blink::HeapHashSet.421" = type { %"class.WTF::HashSet.424" }
%"class.WTF::HashSet.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"class.blink::WeakMember.427"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.427" = type opaque
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.438" = type { %"class.WTF::HashMap.441" }
%"class.WTF::HashMap.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ %"struct.WTF::KeyValuePair.444"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.444" = type opaque
%"class.WTF::Vector.445" = type { %"class.WTF::VectorBuffer.446" }
%"class.WTF::VectorBuffer.446" = type { %"class.WTF::VectorBufferBase.447" }
%"class.WTF::VectorBufferBase.447" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.87" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.86 }
%class.scoped_refptr.86 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.91", %"class.blink::Member.93", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.91" = type { %"class.WTF::SingleThreadedBitField.92" }
%"class.WTF::SingleThreadedBitField.92" = type { i32 }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.95 }
%class.scoped_refptr.95 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.96", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.96" = type { %"class.base::RefCounted.97" }
%"class.base::RefCounted.97" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.456" = type { %"class.WTF::Vector.459" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::Member.462"*, i32, i32 }
%"class.blink::Member.462" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.470" = type { %"class.WTF::HashSet.473" }
%"class.WTF::HashSet.473" = type { %"class.WTF::HashTable.474" }
%"class.WTF::HashTable.474" = type <{ %"class.blink::WeakMember.476"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.476" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.477", i32, [4 x i8] }>
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"struct.std::__1::pair.480"*, i32, i32 }
%"struct.std::__1::pair.480" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487" }
%"class.WTF::VectorBufferBase.487" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.102" }
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.blink::HeapVector.496" = type { %"class.WTF::Vector.499" }
%"class.WTF::Vector.499" = type { %"class.WTF::VectorBuffer.500" }
%"class.WTF::VectorBuffer.500" = type { %"class.WTF::VectorBufferBase.501" }
%"class.WTF::VectorBufferBase.501" = type { %"class.blink::Member.502"*, i32, i32 }
%"class.blink::Member.502" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.57" }
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.514" = type { %"class.WTF::HashTable.515" }
%"class.WTF::HashTable.515" = type <{ %"struct.WTF::KeyValuePair.518"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.518" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type { %"class.blink::AnimationTimeline", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, double, %"class.blink::Member.650" }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.57", i32, [4 x i8], %"class.blink::HeapHashSet.523", %"class.blink::HeapHashSet.600", %"class.std::__1::unique_ptr.607", %"class.absl::optional.640" }
%"class.blink::HeapHashSet.523" = type { %"class.WTF::HashSet.526" }
%"class.WTF::HashSet.526" = type { %"class.WTF::HashTable.527" }
%"class.WTF::HashTable.527" = type <{ %"class.blink::Member.529"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional", %"class.absl::optional.561", %"class.absl::optional.561", %"class.absl::optional.566", %"class.absl::optional.561", i8, [3 x i8], i32, %"class.blink::Member.571", %"class.blink::Member.571", %"class.blink::Member.573", %"class.blink::Member.57", %"class.blink::Member.588", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.590", %"class.blink::Member.590", %"class.blink::Member.590", %"class.std::__1::unique_ptr.592", i8, [3 x i8], i32, %"class.blink::Member.598", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.545" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.533" }
%"class.blink::HeapVector.533" = type { %"class.WTF::Vector.536" }
%"class.WTF::Vector.536" = type { %"class.WTF::VectorBuffer.537" }
%"class.WTF::VectorBuffer.537" = type { %"class.WTF::VectorBufferBase.538", [32 x i8] }
%"class.WTF::VectorBufferBase.538" = type { %"struct.std::__1::pair.539"*, i32, i32 }
%"struct.std::__1::pair.539" = type { %"class.WTF::AtomicString", %"class.blink::Member.540" }
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::HeapVector.542"* }
%"class.blink::HeapVector.542" = type opaque
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.WTF::Vector.548"* }
%"class.WTF::Vector.548" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.552" }
%"class.blink::WeakMember.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.absl::optional.566" = type { %"class.absl::optional_internal::optional_data.567" }
%"class.absl::optional_internal::optional_data.567" = type { %"class.absl::optional_internal::optional_data_base.568" }
%"class.absl::optional_internal::optional_data_base.568" = type { %"class.absl::optional_internal::optional_data_dtor_base.569" }
%"class.absl::optional_internal::optional_data_dtor_base.569" = type { i8, %union.anon.570 }
%union.anon.570 = type { i32 }
%"class.absl::optional.561" = type { %"class.absl::optional_internal::optional_data.562" }
%"class.absl::optional_internal::optional_data.562" = type { %"class.absl::optional_internal::optional_data_base.563" }
%"class.absl::optional_internal::optional_data_base.563" = type { %"class.absl::optional_internal::optional_data_dtor_base.564" }
%"class.absl::optional_internal::optional_data_dtor_base.564" = type { i8, %union.anon.565 }
%union.anon.565 = type { %"class.blink::AnimationTimeDelta" }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::AnimationEffect"* }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.575", %"struct.blink::Timing", %"class.blink::Member.579", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.561", %"class.absl::optional.583", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::AnimationEffectOwner"* }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.561", i32, [4 x i8], %class.scoped_refptr.577, i16, [6 x i8] }>
%class.scoped_refptr.577 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.578" }
%"class.base::RefCountedThreadSafe.578" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional", %"class.absl::optional", i8, i8, i8, %"class.absl::optional.561", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.583" = type { %"class.absl::optional_internal::optional_data.584" }
%"class.absl::optional_internal::optional_data.584" = type { %"class.absl::optional_internal::optional_data_base.585" }
%"class.absl::optional_internal::optional_data_base.585" = type { %"class.absl::optional_internal::optional_data_dtor_base.586" }
%"class.absl::optional_internal::optional_data_dtor_base.586" = type { i8, %union.anon.587 }
%union.anon.587 = type { i32 }
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional", %"class.absl::optional", double, i8, i32 }
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.754", %"class.std::__1::unique_ptr.755", %"class.blink::Member.529" }
%"class.blink::ThreadState::PrefinalizerRegistration.754" = type { i8 }
%"class.std::__1::unique_ptr.755" = type { %"class.std::__1::__compressed_pair.756" }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.600" = type { %"class.WTF::HashSet.603" }
%"class.WTF::HashSet.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"class.blink::WeakMember.606"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.606" = type opaque
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.610 }
%class.scoped_refptr.610 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.611", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.611" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.612" }
%"class.std::__1::__hash_table.612" = type <{ %"class.std::__1::unique_ptr.613", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632", [4 x i8] }>
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615", %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"struct.std::__1::__hash_node_base.616"** }
%"struct.std::__1::__hash_node_base.616" = type { %"struct.std::__1::__hash_node_base.616"* }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.std::__1::__bucket_list_deallocator.618" }
%"class.std::__1::__bucket_list_deallocator.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::__hash_node_base.616" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.640" = type { %"class.absl::optional_internal::optional_data.641" }
%"class.absl::optional_internal::optional_data.641" = type { %"class.absl::optional_internal::optional_data_base.642" }
%"class.absl::optional_internal::optional_data_base.642" = type { %"class.absl::optional_internal::optional_data_dtor_base.643" }
%"class.absl::optional_internal::optional_data_dtor_base.643" = type { i8, %union.anon.644 }
%union.anon.644 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.645" }
%"class.absl::optional.645" = type { %"class.absl::optional_internal::optional_data.646" }
%"class.absl::optional_internal::optional_data.646" = type { %"class.absl::optional_internal::optional_data_base.647" }
%"class.absl::optional_internal::optional_data_base.647" = type { %"class.absl::optional_internal::optional_data_dtor_base.648" }
%"class.absl::optional_internal::optional_data_dtor_base.648" = type { i8, %union.anon.649 }
%union.anon.649 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::DocumentTimeline::PlatformTiming"* }
%"class.blink::DocumentTimeline::PlatformTiming" = type { i32 (...)** }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.402", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.20, %"class.base::WeakPtrFactory.401" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.401" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.402" = type { %"class.blink::MemberBase.58" }
%"class.blink::HeapHashSet.658" = type { %"class.WTF::HashSet.661" }
%"class.WTF::HashSet.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ %"class.blink::Member.664"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.664" = type opaque
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.691" = type { %"class.blink::MemberBase.692" }
%"class.blink::MemberBase.692" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.693" = type { %"class.blink::MemberBase.694" }
%"class.blink::MemberBase.694" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.695" = type { %"class.WTF::VectorBuffer.696" }
%"class.WTF::VectorBuffer.696" = type { %"class.WTF::VectorBufferBase.697" }
%"class.WTF::VectorBufferBase.697" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.700" = type { %"class.WTF::HashMap.703" }
%"class.WTF::HashMap.703" = type { %"class.WTF::HashTable.704" }
%"class.WTF::HashTable.704" = type <{ %"struct.WTF::KeyValuePair.706"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.706" = type opaque
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.719" = type { %"class.WTF::HashMap.722" }
%"class.WTF::HashMap.722" = type { %"class.WTF::HashTable.723" }
%"class.WTF::HashTable.723" = type <{ %"struct.WTF::KeyValuePair.725"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.725" = type opaque
%"class.blink::HeapObserverSet.726" = type { i32, [4 x i8], %"class.blink::HeapHashSet.727" }
%"class.blink::HeapHashSet.727" = type { %"class.WTF::HashSet.730" }
%"class.WTF::HashSet.730" = type { %"class.WTF::HashTable.731" }
%"class.WTF::HashTable.731" = type <{ %"class.blink::WeakMember.733"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.733" = type opaque
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.57", %"class.blink::HeapHashSet.743", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.750", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.743" = type { %"class.WTF::HashSet.746" }
%"class.WTF::HashSet.746" = type { %"class.WTF::HashTable.747" }
%"class.WTF::HashTable.747" = type <{ %"class.blink::Member.749"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.749" = type opaque
%"class.blink::HeapTaskRunnerTimer.750" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.751", { i64, i64 } }
%"class.blink::WeakMember.751" = type { %"class.blink::MemberBase.737" }
%"class.blink::WeakMember.738" = type { %"class.blink::MemberBase.60" }
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.832", %"class.blink::Member.837", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.839", i8, i32, %"class.blink::Color", %"class.absl::optional.842", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.847", %"class.blink::Member.849", %"class.blink::Member.849", %"class.std::__1::unique_ptr.852", i32, [4 x i8], %"class.WTF::HashSet.855", %"class.blink::Member.862", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.864", %"class.blink::HeapHashSet.871", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.879", i8, %"class.blink::Member.885", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.897", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.911", i8, %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.1036", %"class.WTF::Vector.1042", i32, %class.scoped_refptr.1047, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1048", %"class.blink::Member.1050", %"class.blink::Member.1052", %"class.blink::HeapHashSet.1054", %"class.blink::HeapHashSet.1061", %"class.std::__1::unique_ptr.1068", %"class.std::__1::unique_ptr.1075", %"class.WTF::Vector.166" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.832" = type { %"class.WTF::HashTable.833" }
%"class.WTF::HashTable.833" = type <{ %class.scoped_refptr.836*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.836 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.839" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.840", { i64, i64 } }
%"class.blink::WeakMember.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.842" = type { %"class.absl::optional_internal::optional_data.843" }
%"class.absl::optional_internal::optional_data.843" = type { %"class.absl::optional_internal::optional_data_base.844" }
%"class.absl::optional_internal::optional_data_base.844" = type { %"class.absl::optional_internal::optional_data_dtor_base.845" }
%"class.absl::optional_internal::optional_data_dtor_base.845" = type { i8, %union.anon.846 }
%union.anon.846 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::HeapHashSet.851"* }
%"class.blink::HeapHashSet.851" = type opaque
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.WTF::HashSet.855"* }
%"class.WTF::HashSet.855" = type { %"class.WTF::HashTable.856" }
%"class.WTF::HashTable.856" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.864" = type { %"class.WTF::HashSet.867" }
%"class.WTF::HashSet.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ %"class.blink::Member.870"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.870" = type opaque
%"class.blink::HeapHashSet.871" = type { %"class.WTF::HashSet.874" }
%"class.WTF::HashSet.874" = type { %"class.WTF::HashTable.875" }
%"class.WTF::HashTable.875" = type <{ %"class.blink::Member.877"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.889", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.889" = type { %"class.WTF::HashTable.890" }
%"class.WTF::HashTable.890" = type <{ %"struct.WTF::KeyValuePair.892"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.892" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.893", i32, i32 }
%"class.WTF::Vector.893" = type { %"class.WTF::VectorBuffer.894" }
%"class.WTF::VectorBuffer.894" = type { %"class.WTF::VectorBufferBase.895" }
%"class.WTF::VectorBufferBase.895" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.897" = type { %"class.WTF::LinkedHashSet.900" }
%"class.WTF::LinkedHashSet.900" = type { %"class.WTF::HashMap.901", %"class.WTF::VectorBackedLinkedList.905" }
%"class.WTF::HashMap.901" = type { %"class.WTF::HashTable.902" }
%"class.WTF::HashTable.902" = type <{ %"struct.WTF::KeyValuePair.904"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.904" = type opaque
%"class.WTF::VectorBackedLinkedList.905" = type { %"class.WTF::Vector.906", i32, i32 }
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.WTF::VectorBackedLinkedListNode.909"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.909" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.920, %class.scoped_refptr.920, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1013", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1018", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.920 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.921", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.928" }
%"class.WTF::RefCounted.921" = type { %"class.base::RefCounted.922" }
%"class.base::RefCounted.922" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.923", i32, [4 x i8] }>
%"class.WTF::Vector.923" = type { %"class.WTF::VectorBuffer.924" }
%"class.WTF::VectorBuffer.924" = type { %"class.WTF::VectorBufferBase.925" }
%"class.WTF::VectorBufferBase.925" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.928" = type { %"class.WTF::VectorBuffer.929" }
%"class.WTF::VectorBuffer.929" = type { %"class.WTF::VectorBufferBase.930" }
%"class.WTF::VectorBufferBase.930" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.934", %"class.std::__1::unique_ptr.983", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.931, %class.scoped_refptr.932, %class.scoped_refptr.933 }
%class.scoped_refptr.931 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.947", i8, i8, %class.scoped_refptr.931, i32, i32 }
%"class.WTF::RefCounted.947" = type { %"class.base::RefCounted.948" }
%"class.base::RefCounted.948" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.932 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1104" }
%"class.blink::PaintPropertyNode.1104" = type { %"class.WTF::RefCounted.1105", i8, i8, %class.scoped_refptr.932, i32, i32 }
%"class.WTF::RefCounted.1105" = type { %"class.base::RefCounted.1106" }
%"class.base::RefCounted.1106" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.933 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1101" }
%"class.blink::PaintPropertyNode.1101" = type { %"class.WTF::RefCounted.1102", i8, i8, %class.scoped_refptr.933, i32, i32 }
%"class.WTF::RefCounted.1102" = type { %"class.base::RefCounted.1103" }
%"class.base::RefCounted.1103" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.937", %"class.WTF::Vector.942", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.937" = type { %"class.WTF::VectorBuffer.938" }
%"class.WTF::VectorBuffer.938" = type { %"class.WTF::VectorBufferBase.939" }
%"class.WTF::VectorBufferBase.939" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.962" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.955, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.956", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.949" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.955 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1086", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1086" = type { %"class.WTF::RefCounted.1087", i8, i8, %class.scoped_refptr.955, i32, i32 }
%"class.WTF::RefCounted.1087" = type { %"class.base::RefCounted.1088" }
%"class.base::RefCounted.1088" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1089" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1089" = type { %"class.absl::optional_internal::optional_data.1090" }
%"class.absl::optional_internal::optional_data.1090" = type { %"class.absl::optional_internal::optional_data_base.1091" }
%"class.absl::optional_internal::optional_data_base.1091" = type { %"class.absl::optional_internal::optional_data_dtor_base.1092" }
%"class.absl::optional_internal::optional_data_dtor_base.1092" = type { i8, %union.anon.1093 }
%union.anon.1093 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1094", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1094" = type { %"class.std::__1::__vector_base.1095" }
%"class.std::__1::__vector_base.1095" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1096" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.971", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.986", %"class.absl::optional.986" }
%"class.absl::optional.986" = type { %"class.absl::optional_internal::optional_data.987" }
%"class.absl::optional_internal::optional_data.987" = type { %"class.absl::optional_internal::optional_data_base.988" }
%"class.absl::optional_internal::optional_data_base.988" = type { %"class.absl::optional_internal::optional_data_dtor_base.989" }
%"class.absl::optional_internal::optional_data_dtor_base.989" = type { i8, [3 x i8], %union.anon.990 }
%union.anon.990 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.928"*, %"class.absl::optional.996", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.996" = type { %"class.absl::optional_internal::optional_data.997" }
%"class.absl::optional_internal::optional_data.997" = type { %"class.absl::optional_internal::optional_data_base.998" }
%"class.absl::optional_internal::optional_data_base.998" = type { %"class.absl::optional_internal::optional_data_dtor_base.999" }
%"class.absl::optional_internal::optional_data_dtor_base.999" = type { i8, %union.anon.1000 }
%union.anon.1000 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1003", %"class.WTF::Vector.1008" }
%"class.WTF::Vector.1003" = type { %"class.WTF::VectorBuffer.1004" }
%"class.WTF::VectorBuffer.1004" = type { %"class.WTF::VectorBufferBase.1005", [128 x i8] }
%"class.WTF::VectorBufferBase.1005" = type { i32*, i32, i32 }
%"class.WTF::Vector.1008" = type { %"class.WTF::VectorBuffer.1009" }
%"class.WTF::VectorBuffer.1009" = type { %"class.WTF::VectorBufferBase.1010", [128 x i8] }
%"class.WTF::VectorBufferBase.1010" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1018" = type { %"class.WTF::HashTable.1019" }
%"class.WTF::HashTable.1019" = type <{ %"struct.WTF::KeyValuePair.1022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1022" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1023", %"class.WTF::Vector.1028" }
%"class.WTF::HashMap.1023" = type { %"class.WTF::HashTable.1024" }
%"class.WTF::HashTable.1024" = type <{ %"struct.WTF::KeyValuePair.1027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1027" = type opaque
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1042" = type { %"class.WTF::VectorBuffer.1043" }
%"class.WTF::VectorBuffer.1043" = type { %"class.WTF::VectorBufferBase.1044" }
%"class.WTF::VectorBufferBase.1044" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1047 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1054" = type { %"class.WTF::HashSet.1057" }
%"class.WTF::HashSet.1057" = type { %"class.WTF::HashTable.1058" }
%"class.WTF::HashTable.1058" = type <{ %"class.blink::WeakMember.1060"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1060" = type opaque
%"class.blink::HeapHashSet.1061" = type { %"class.WTF::HashSet.1064" }
%"class.WTF::HashSet.1064" = type { %"class.WTF::HashTable.1065" }
%"class.WTF::HashTable.1065" = type <{ %"class.blink::WeakMember.1067"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1067" = type opaque
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1071" }
%"class.base::time_internal::TimeBase.1071" = type { i64 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1078", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1078" = type { %"class.absl::optional_internal::optional_data.1079" }
%"class.absl::optional_internal::optional_data.1079" = type { %"class.absl::optional_internal::optional_data_base.1080" }
%"class.absl::optional_internal::optional_data_base.1080" = type { %"class.absl::optional_internal::optional_data_dtor_base.1081" }
%"class.absl::optional_internal::optional_data_dtor_base.1081" = type { i8, %union.anon.1082 }
%union.anon.1082 = type { %"class.base::Time" }
%"struct.cc::WorkletAnimationId" = type { i32, i32 }
%"class.cc::MutatorInputState" = type { %"class.std::__1::unordered_map.1147" }
%"class.std::__1::unordered_map.1147" = type { %"class.std::__1::__hash_table.1148" }
%"class.std::__1::__hash_table.1148" = type <{ %"class.std::__1::unique_ptr.1149", %"class.std::__1::__compressed_pair.1159", %"class.std::__1::__compressed_pair.1164", %"class.std::__1::__compressed_pair.1167", [4 x i8] }>
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151", %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"struct.std::__1::__hash_node_base.1152"** }
%"struct.std::__1::__hash_node_base.1152" = type { %"struct.std::__1::__hash_node_base.1152"* }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.std::__1::__bucket_list_deallocator.1154" }
%"class.std::__1::__bucket_list_deallocator.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.std::__1::__hash_node_base.1152" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.blink::ScrollTimeline" = type { %"class.blink::AnimationTimeline", %"class.blink::Member.84", %"class.blink::Member.59", i32, %"class.blink::HeapVector.1109", %"class.absl::optional", %"struct.blink::ScrollTimeline::TimelineState" }
%"class.blink::HeapVector.1109" = type { %"class.WTF::Vector.1112" }
%"class.WTF::Vector.1112" = type { %"class.WTF::VectorBuffer.1113" }
%"class.WTF::VectorBuffer.1113" = type { %"class.WTF::VectorBufferBase.1114" }
%"class.WTF::VectorBufferBase.1114" = type { %"class.blink::Member.1115"*, i32, i32 }
%"class.blink::Member.1115" = type opaque
%"struct.blink::ScrollTimeline::TimelineState" = type { i32, %"class.absl::optional.645", %"class.WTF::Vector.1117" }
%"class.WTF::Vector.1117" = type { %"class.WTF::VectorBuffer.1118" }
%"class.WTF::VectorBuffer.1118" = type { %"class.WTF::VectorBufferBase.1119" }
%"class.WTF::VectorBufferBase.1119" = type { double*, i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1122 }
%class.scoped_refptr.1122 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"struct.cc::AnimationWorkletOutput" = type { %"class.std::__1::vector.1127" }
%"class.std::__1::vector.1127" = type { %"class.std::__1::__vector_base.1128" }
%"class.std::__1::__vector_base.1128" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"class.std::__1::__compressed_pair.1136" }
%"struct.cc::AnimationWorkletOutput::AnimationState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::vector.1129" }
%"class.std::__1::vector.1129" = type { %"class.std::__1::__vector_base.1130" }
%"class.std::__1::__vector_base.1130" = type { %"class.absl::optional.645"*, %"class.absl::optional.645"*, %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.absl::optional.645"* }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1180 }
%union.anon.1180 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking.1212" = type { i8 }

$_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20WorkletAnimationBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EEiRKS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_ = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink26WorkletAnimationControllerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WorkletAnimationController"*)* @_ZN5blink26WorkletAnimationControllerD2Ev to i8*), i8* bitcast (void (%"class.blink::WorkletAnimationController"*)* @_ZN5blink26WorkletAnimationControllerD0Ev to i8*), i8* bitcast (void (%"class.blink::WorkletAnimationController"*, %"class.WTF::String"*)* @_ZN5blink26WorkletAnimationController23SynchronizeAnimatorNameERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::WorkletAnimationController"*, %"struct.cc::AnimationWorkletOutput"*)* @_ZN5blink26WorkletAnimationController17SetMutationUpdateENSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS1_14default_deleteIS4_EEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.3 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.4 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink26WorkletAnimationControllerC1EPNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::WorkletAnimationController"*, %"class.blink::Document"*), void (%"class.blink::WorkletAnimationController"*, %"class.blink::Document"*)* @_ZN5blink26WorkletAnimationControllerC2EPNS_8DocumentE
@_ZN5blink26WorkletAnimationControllerD1Ev = hidden unnamed_addr alias void (%"class.blink::WorkletAnimationController"*), void (%"class.blink::WorkletAnimationController"*)* @_ZN5blink26WorkletAnimationControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationControllerC2EPNS_8DocumentE(%"class.blink::WorkletAnimationController"* nocapture, %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink26WorkletAnimationControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::HeapHashSet"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #8
  %6 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::HeapHashMap"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #8
  %8 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 3
  %9 = bitcast %"class.WTF::HashSet.8"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #8
  %10 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 4
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::Document"* %1, %"class.blink::Document"** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationControllerD2Ev(%"class.blink::WorkletAnimationController"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink26WorkletAnimationControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MainThreadMutatorClient"*, %"class.blink::MainThreadMutatorClient"** %3, align 8
  store %"class.blink::MainThreadMutatorClient"* null, %"class.blink::MainThreadMutatorClient"** %3, align 8
  %5 = icmp eq %"class.blink::MainThreadMutatorClient"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::MainThreadMutatorClient"* %4 to void (%"class.blink::MainThreadMutatorClient"*)***
  %8 = load void (%"class.blink::MainThreadMutatorClient"*)**, void (%"class.blink::MainThreadMutatorClient"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::MainThreadMutatorClient"*)*, void (%"class.blink::MainThreadMutatorClient"*)** %8, i64 1
  %10 = load void (%"class.blink::MainThreadMutatorClient"*)*, void (%"class.blink::MainThreadMutatorClient"*)** %9, align 8
  tail call void %10(%"class.blink::MainThreadMutatorClient"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = icmp eq %"class.WTF::String"* %13, null
  br i1 %14, label %47, label %15, !prof !2

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %45, label %19

19:                                               ; preds = %15
  %20 = zext i32 %17 to i64
  br label %21

21:                                               ; preds = %42, %19
  %22 = phi i64 [ 0, %19 ], [ %43, %42 ]
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %22
  %24 = bitcast %"class.WTF::String"* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i8* %25 to %"class.WTF::StringImpl"*
  %27 = ptrtoint i8* %25 to i64
  switch i64 %27, label %28 [
    i64 -1, label %42
    i64 0, label %42
  ]

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = bitcast i8* %25 to i32*
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %28
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %28
  %39 = phi i32 [ %37, %36 ], [ %35, %28 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #8
  br label %42

42:                                               ; preds = %41, %38, %21, %21
  %43 = add nuw nsw i64 %22, 1
  %44 = icmp eq i64 %43, %20
  br i1 %44, label %45, label %21

45:                                               ; preds = %42, %15
  %46 = bitcast %"class.WTF::String"* %13 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %47

47:                                               ; preds = %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationControllerD0Ev(%"class.blink::WorkletAnimationController"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink26WorkletAnimationControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MainThreadMutatorClient"*, %"class.blink::MainThreadMutatorClient"** %3, align 8
  store %"class.blink::MainThreadMutatorClient"* null, %"class.blink::MainThreadMutatorClient"** %3, align 8
  %5 = icmp eq %"class.blink::MainThreadMutatorClient"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::MainThreadMutatorClient"* %4 to void (%"class.blink::MainThreadMutatorClient"*)***
  %8 = load void (%"class.blink::MainThreadMutatorClient"*)**, void (%"class.blink::MainThreadMutatorClient"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::MainThreadMutatorClient"*)*, void (%"class.blink::MainThreadMutatorClient"*)** %8, i64 1
  %10 = load void (%"class.blink::MainThreadMutatorClient"*)*, void (%"class.blink::MainThreadMutatorClient"*)** %9, align 8
  tail call void %10(%"class.blink::MainThreadMutatorClient"* nonnull %4) #8
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = icmp eq %"class.WTF::String"* %13, null
  br i1 %14, label %47, label %15, !prof !2

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %45, label %19

19:                                               ; preds = %15
  %20 = zext i32 %17 to i64
  br label %21

21:                                               ; preds = %42, %19
  %22 = phi i64 [ 0, %19 ], [ %43, %42 ]
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %22
  %24 = bitcast %"class.WTF::String"* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i8* %25 to %"class.WTF::StringImpl"*
  %27 = ptrtoint i8* %25 to i64
  switch i64 %27, label %28 [
    i64 -1, label %42
    i64 0, label %42
  ]

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = bitcast i8* %25 to i32*
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %28
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %28
  %39 = phi i32 [ %37, %36 ], [ %35, %28 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #8
  br label %42

42:                                               ; preds = %41, %38, %21, %21
  %43 = add nuw nsw i64 %22, 1
  %44 = icmp eq i64 %43, %20
  br i1 %44, label %45, label %21

45:                                               ; preds = %42, %15
  %46 = bitcast %"class.WTF::String"* %13 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %47

47:                                               ; preds = %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController15AttachAnimationERNS_20WorkletAnimationBaseE(%"class.blink::WorkletAnimationController"*, %"class.blink::WorkletAnimationBase"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WorkletAnimationBase"*, align 8
  %4 = bitcast %"class.blink::WorkletAnimationBase"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  store %"class.blink::WorkletAnimationBase"* %1, %"class.blink::WorkletAnimationBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = call { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"class.blink::WorkletAnimationBase"** nonnull dereferenceable(8) %3, %"class.blink::WorkletAnimationBase"** nonnull dereferenceable(8) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %7 = bitcast %"class.blink::WorkletAnimationBase"* %1 to %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)***
  %8 = load %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)**, %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)** %8, i64 12
  %10 = load %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)** %9, align 8
  %11 = call %"class.blink::Document"* %10(%"class.blink::WorkletAnimationBase"* %1) #8
  %12 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %11) #8
  %13 = icmp eq %"class.blink::LocalFrameView"* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %2
  call void @_ZN5blink14LocalFrameView17ScheduleAnimationEN4base9TimeDeltaE(%"class.blink::LocalFrameView"* nonnull %12, i64 0) #8
  br label %15

15:                                               ; preds = %2, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink14LocalFrameView17ScheduleAnimationEN4base9TimeDeltaE(%"class.blink::LocalFrameView"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController15DetachAnimationERNS_20WorkletAnimationBaseE(%"class.blink::WorkletAnimationController"*, %"class.blink::WorkletAnimationBase"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1, i32 0
  %4 = ptrtoint %"class.blink::WorkletAnimationBase"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %7 = icmp eq %"class.blink::Member"* %6, null
  %8 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %71, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %33
  %35 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %35, align 8
  %37 = icmp eq %"class.blink::WorkletAnimationBase"* %36, %1
  br i1 %37, label %66, label %38

38:                                               ; preds = %10
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi %"class.blink::WorkletAnimationBase"* [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq %"class.blink::WorkletAnimationBase"* %53, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %12
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %61
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %63, align 8
  %65 = icmp eq %"class.blink::WorkletAnimationBase"* %64, %1
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %10
  %67 = phi %"class.blink::Member"* [ %34, %10 ], [ %62, %57 ]
  %68 = icmp eq %"class.blink::Member"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = zext i32 %9 to i64
  br label %74

71:                                               ; preds = %52, %66, %2
  %72 = zext i32 %9 to i64
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %72
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"class.blink::Member"* [ %67, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %75
  %78 = icmp eq %"class.blink::Member"* %77, %76
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"* %80, %"class.blink::Member"* %76) #8
  br label %81

81:                                               ; preds = %74, %79
  %82 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0
  %83 = bitcast %"class.blink::WorkletAnimationBase"* %1 to %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)***
  %84 = load %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)**, %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)*** %83, align 8
  %85 = getelementptr inbounds %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)*, %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)** %84, i64 14
  %86 = load %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)*, %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)** %85, align 8
  %87 = tail call dereferenceable(8) %"struct.cc::WorkletAnimationId"* %86(%"class.blink::WorkletAnimationBase"* %1) #8
  %88 = getelementptr inbounds %"struct.cc::WorkletAnimationId", %"struct.cc::WorkletAnimationId"* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %82, i64 0, i32 0, i32 0
  %91 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %90, align 8
  %92 = icmp eq %"struct.WTF::KeyValuePair"* %91, null
  %93 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  br i1 %92, label %150, label %95

95:                                               ; preds = %81
  %96 = add i32 %94, -1
  %97 = zext i32 %96 to i64
  %98 = shl i32 %89, 15
  %99 = xor i32 %98, -1
  %100 = add i32 %89, %99
  %101 = lshr i32 %100, 10
  %102 = xor i32 %101, %100
  %103 = mul i32 %102, 9
  %104 = lshr i32 %103, 6
  %105 = xor i32 %104, %103
  %106 = shl i32 %105, 11
  %107 = xor i32 %106, -1
  %108 = add i32 %105, %107
  %109 = lshr i32 %108, 16
  %110 = xor i32 %109, %108
  %111 = and i32 %110, %96
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %112
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, %89
  br i1 %116, label %145, label %117

117:                                              ; preds = %95
  %118 = xor i32 %110, -1
  %119 = lshr i32 %108, 23
  %120 = add i32 %119, %118
  %121 = shl i32 %120, 12
  %122 = xor i32 %121, %120
  %123 = lshr i32 %122, 7
  %124 = xor i32 %123, %122
  %125 = shl i32 %124, 2
  %126 = xor i32 %125, %124
  %127 = lshr i32 %126, 20
  %128 = xor i32 %127, %126
  %129 = or i32 %128, 1
  %130 = zext i32 %129 to i64
  br label %131

131:                                              ; preds = %136, %117
  %132 = phi i32 [ %115, %117 ], [ %143, %136 ]
  %133 = phi i64 [ %112, %117 ], [ %140, %136 ]
  %134 = phi i64 [ 0, %117 ], [ %138, %136 ]
  %135 = icmp eq i32 %132, 0
  br i1 %135, label %150, label %136

136:                                              ; preds = %131
  %137 = icmp eq i64 %134, 0
  %138 = select i1 %137, i64 %130, i64 %134
  %139 = add i64 %138, %133
  %140 = and i64 %139, %97
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %140
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %141, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, %89
  br i1 %144, label %145, label %131

145:                                              ; preds = %136, %95
  %146 = phi %"struct.WTF::KeyValuePair"* [ %113, %95 ], [ %141, %136 ]
  %147 = icmp eq %"struct.WTF::KeyValuePair"* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %145
  %149 = zext i32 %94 to i64
  br label %153

150:                                              ; preds = %131, %145, %81
  %151 = zext i32 %94 to i64
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %151
  br label %153

153:                                              ; preds = %150, %148
  %154 = phi i64 [ %149, %148 ], [ %151, %150 ]
  %155 = phi %"struct.WTF::KeyValuePair"* [ %146, %148 ], [ %152, %150 ]
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %154
  %157 = icmp eq %"struct.WTF::KeyValuePair"* %156, %155
  br i1 %157, label %160, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %82, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.6"* %159, %"struct.WTF::KeyValuePair"* %155) #8
  br label %160

160:                                              ; preds = %153, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController19InvalidateAnimationERNS_20WorkletAnimationBaseE(%"class.blink::WorkletAnimationController"*, %"class.blink::WorkletAnimationBase"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WorkletAnimationBase"*, align 8
  %4 = bitcast %"class.blink::WorkletAnimationBase"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  store %"class.blink::WorkletAnimationBase"* %1, %"class.blink::WorkletAnimationBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = call { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"class.blink::WorkletAnimationBase"** nonnull dereferenceable(8) %3, %"class.blink::WorkletAnimationBase"** nonnull dereferenceable(8) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %7 = bitcast %"class.blink::WorkletAnimationBase"* %1 to %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)***
  %8 = load %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)**, %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)** %8, i64 12
  %10 = load %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)** %9, align 8
  %11 = call %"class.blink::Document"* %10(%"class.blink::WorkletAnimationBase"* %1) #8
  %12 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %11) #8
  %13 = icmp eq %"class.blink::LocalFrameView"* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %2
  call void @_ZN5blink14LocalFrameView17ScheduleAnimationEN4base9TimeDeltaE(%"class.blink::LocalFrameView"* nonnull %12, i64 0) #8
  br label %15

15:                                               ; preds = %2, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController21UpdateAnimationStatesEv(%"class.blink::WorkletAnimationController"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.WTF::HashSet"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  store atomic i64 0, i64* %4 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = inttoptr i64 %5 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #8
  br label %11

11:                                               ; preds = %8, %1
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.WTF::HashSet"* %3 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #8
  br label %18

18:                                               ; preds = %11, %14
  %19 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 0, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  store i32 0, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, -2147483648
  store i32 %25, i32* %23, align 8
  %26 = icmp eq i32 %22, 0
  %27 = inttoptr i64 %5 to %"class.blink::Member"*
  %28 = zext i32 %20 to i64
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %27, i64 %28
  br i1 %26, label %45, label %30

30:                                               ; preds = %18
  %31 = icmp eq i32 %20, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %30, %36
  %33 = phi %"class.blink::Member"* [ %37, %36 ], [ %27, %30 ]
  %34 = bitcast %"class.blink::Member"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %33, i64 1
  %38 = icmp eq %"class.blink::Member"* %37, %29
  br i1 %38, label %45, label %32

39:                                               ; preds = %32, %30
  %40 = phi %"class.blink::Member"* [ %27, %30 ], [ %33, %32 ]
  %41 = icmp eq %"class.blink::Member"* %40, %29
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = bitcast i32* %2 to i8*
  %44 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0
  br label %49

45:                                               ; preds = %36, %73, %83, %80, %18, %39
  %46 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %93, label %85

49:                                               ; preds = %42, %83
  %50 = phi %"class.blink::Member"* [ %40, %42 ], [ %77, %83 ]
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %51, align 8
  %53 = bitcast %"class.blink::WorkletAnimationBase"* %52 to void (%"class.blink::WorkletAnimationBase"*)***
  %54 = load void (%"class.blink::WorkletAnimationBase"*)**, void (%"class.blink::WorkletAnimationBase"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::WorkletAnimationBase"*)*, void (%"class.blink::WorkletAnimationBase"*)** %54, i64 10
  %56 = load void (%"class.blink::WorkletAnimationBase"*)*, void (%"class.blink::WorkletAnimationBase"*)** %55, align 8
  call void %56(%"class.blink::WorkletAnimationBase"* %52) #8
  %57 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %51, align 8
  %58 = bitcast %"class.blink::WorkletAnimationBase"* %57 to i1 (%"class.blink::WorkletAnimationBase"*)***
  %59 = load i1 (%"class.blink::WorkletAnimationBase"*)**, i1 (%"class.blink::WorkletAnimationBase"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::WorkletAnimationBase"*)*, i1 (%"class.blink::WorkletAnimationBase"*)** %59, i64 15
  %61 = load i1 (%"class.blink::WorkletAnimationBase"*)*, i1 (%"class.blink::WorkletAnimationBase"*)** %60, align 8
  %62 = call zeroext i1 %61(%"class.blink::WorkletAnimationBase"* %57) #8
  br i1 %62, label %63, label %73

63:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #8
  %64 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %51, align 8
  %65 = bitcast %"class.blink::WorkletAnimationBase"* %64 to %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)***
  %66 = load %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)**, %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)*** %65, align 8
  %67 = getelementptr inbounds %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)*, %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)** %66, i64 14
  %68 = load %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)*, %"struct.cc::WorkletAnimationId"* (%"class.blink::WorkletAnimationBase"*)** %67, align 8
  %69 = call dereferenceable(8) %"struct.cc::WorkletAnimationId"* %68(%"class.blink::WorkletAnimationBase"* %64) #8
  %70 = getelementptr inbounds %"struct.cc::WorkletAnimationId", %"struct.cc::WorkletAnimationId"* %69, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %2, align 4
  %72 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EEiRKS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.6"* %44, i32* nonnull dereferenceable(4) %2, %"class.blink::Member"* dereferenceable(8) %50) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #8
  br label %73

73:                                               ; preds = %63, %49
  %74 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %50, i64 1
  %75 = icmp eq %"class.blink::Member"* %74, %29
  br i1 %75, label %45, label %76

76:                                               ; preds = %73, %80
  %77 = phi %"class.blink::Member"* [ %81, %80 ], [ %74, %73 ]
  %78 = bitcast %"class.blink::Member"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  switch i64 %79, label %83 [
    i64 -1, label %80
    i64 0, label %80
  ]

80:                                               ; preds = %76, %76
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %77, i64 1
  %82 = icmp eq %"class.blink::Member"* %81, %29
  br i1 %82, label %45, label %76

83:                                               ; preds = %76
  %84 = icmp eq %"class.blink::Member"* %77, %29
  br i1 %84, label %45, label %49

85:                                               ; preds = %45
  %86 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 5, i32 0, i32 0
  %87 = load %"class.blink::Document"*, %"class.blink::Document"** %86, align 8
  %88 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %87) #8
  %89 = icmp eq %"class.blink::LocalFrameView"* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = load %"class.blink::Document"*, %"class.blink::Document"** %86, align 8
  %92 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %91) #8
  call void @_ZN5blink14LocalFrameView17ScheduleAnimationEN4base9TimeDeltaE(%"class.blink::LocalFrameView"* %92, i64 0) #8
  br label %93

93:                                               ; preds = %85, %90, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController22UpdateAnimationTimingsENS_18TimingUpdateReasonE(%"class.blink::WorkletAnimationController"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %49, label %4

4:                                                ; preds = %2
  tail call void @_ZN5blink26WorkletAnimationController16MutateAnimationsEv(%"class.blink::WorkletAnimationController"* %0)
  %5 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  br i1 %7, label %49, label %14

14:                                               ; preds = %4
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %14, %22
  %17 = phi %"struct.WTF::KeyValuePair"* [ %23, %22 ], [ %9, %14 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, 1
  %21 = icmp ult i32 %20, 2
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %13
  br i1 %24, label %49, label %16

25:                                               ; preds = %16, %14
  %26 = phi %"struct.WTF::KeyValuePair"* [ %9, %14 ], [ %17, %16 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %13
  br i1 %27, label %49, label %28

28:                                               ; preds = %25, %47
  %29 = phi %"struct.WTF::KeyValuePair"* [ %39, %47 ], [ %26, %25 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %30, align 8
  %32 = bitcast %"class.blink::WorkletAnimationBase"* %31 to void (%"class.blink::WorkletAnimationBase"*, i32)***
  %33 = load void (%"class.blink::WorkletAnimationBase"*, i32)**, void (%"class.blink::WorkletAnimationBase"*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::WorkletAnimationBase"*, i32)*, void (%"class.blink::WorkletAnimationBase"*, i32)** %33, i64 9
  %35 = load void (%"class.blink::WorkletAnimationBase"*, i32)*, void (%"class.blink::WorkletAnimationBase"*, i32)** %34, align 8
  tail call void %35(%"class.blink::WorkletAnimationBase"* %31, i32 %1) #8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 1
  %37 = icmp eq %"struct.WTF::KeyValuePair"* %36, %13
  br i1 %37, label %49, label %38

38:                                               ; preds = %28, %44
  %39 = phi %"struct.WTF::KeyValuePair"* [ %45, %44 ], [ %36, %28 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, 1
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 1
  %46 = icmp eq %"struct.WTF::KeyValuePair"* %45, %13
  br i1 %46, label %49, label %38

47:                                               ; preds = %38
  %48 = icmp eq %"struct.WTF::KeyValuePair"* %39, %13
  br i1 %48, label %49, label %28

49:                                               ; preds = %22, %47, %28, %44, %25, %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController16MutateAnimationsEv(%"class.blink::WorkletAnimationController"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::MainThreadMutatorClient"*, %"class.blink::MainThreadMutatorClient"** %2, align 8
  %4 = icmp eq %"class.blink::MainThreadMutatorClient"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"** %6, align 8
  %8 = tail call i8* @_Znwm(i64 40) #9
  %9 = bitcast i8* %8 to %"class.cc::MutatorInputState"*
  tail call void @_ZN2cc17MutatorInputStateC1Ev(%"class.cc::MutatorInputState"* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %54, label %19

19:                                               ; preds = %5
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %19, %27
  %22 = phi %"struct.WTF::KeyValuePair"* [ %28, %27 ], [ %14, %19 ]
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %24, 1
  %26 = icmp ult i32 %25, 2
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %29 = icmp eq %"struct.WTF::KeyValuePair"* %28, %18
  br i1 %29, label %54, label %21

30:                                               ; preds = %21, %19
  %31 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %22, %21 ]
  %32 = icmp eq %"struct.WTF::KeyValuePair"* %31, %18
  br i1 %32, label %54, label %33

33:                                               ; preds = %30, %52
  %34 = phi %"struct.WTF::KeyValuePair"* [ %44, %52 ], [ %31, %30 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %35, align 8
  %37 = bitcast %"class.blink::WorkletAnimationBase"* %36 to void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)***
  %38 = load void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)**, void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)*, void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)** %38, i64 16
  %40 = load void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)*, void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)** %39, align 8
  tail call void %40(%"class.blink::WorkletAnimationBase"* %36, %"class.cc::MutatorInputState"* nonnull %9) #8
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair"* %41, %18
  br i1 %42, label %54, label %43

43:                                               ; preds = %33, %49
  %44 = phi %"struct.WTF::KeyValuePair"* [ %50, %49 ], [ %41, %33 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  %48 = icmp ult i32 %47, 2
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 1
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %50, %18
  br i1 %51, label %54, label %43

52:                                               ; preds = %43
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %44, %18
  br i1 %53, label %54, label %33

54:                                               ; preds = %27, %33, %52, %49, %5, %30
  tail call void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl19MutateSynchronouslyENSt3__110unique_ptrIN2cc17MutatorInputStateENS1_14default_deleteIS4_EEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* %7, %"class.cc::MutatorInputState"* nonnull %9) #8
  br label %55

55:                                               ; preds = %1, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController21ApplyAnimationTimingsENS_18TimingUpdateReasonE(%"class.blink::WorkletAnimationController"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  br i1 %5, label %26, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %12, %20
  %15 = phi %"struct.WTF::KeyValuePair"* [ %21, %20 ], [ %7, %12 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, %11
  br i1 %22, label %26, label %14

23:                                               ; preds = %14, %12
  %24 = phi %"struct.WTF::KeyValuePair"* [ %7, %12 ], [ %15, %14 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %11
  br i1 %25, label %26, label %27

26:                                               ; preds = %20, %27, %46, %43, %2, %23
  ret void

27:                                               ; preds = %23, %46
  %28 = phi %"struct.WTF::KeyValuePair"* [ %38, %46 ], [ %24, %23 ]
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %29, align 8
  %31 = bitcast %"class.blink::WorkletAnimationBase"* %30 to void (%"class.blink::WorkletAnimationBase"*, i32)***
  %32 = load void (%"class.blink::WorkletAnimationBase"*, i32)**, void (%"class.blink::WorkletAnimationBase"*, i32)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::WorkletAnimationBase"*, i32)*, void (%"class.blink::WorkletAnimationBase"*, i32)** %32, i64 9
  %34 = load void (%"class.blink::WorkletAnimationBase"*, i32)*, void (%"class.blink::WorkletAnimationBase"*, i32)** %33, align 8
  tail call void %34(%"class.blink::WorkletAnimationBase"* %30, i32 %1) #8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 1
  %36 = icmp eq %"struct.WTF::KeyValuePair"* %35, %11
  br i1 %36, label %26, label %37

37:                                               ; preds = %27, %43
  %38 = phi %"struct.WTF::KeyValuePair"* [ %44, %43 ], [ %35, %27 ]
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 1
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, %11
  br i1 %45, label %26, label %37

46:                                               ; preds = %37
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %38, %11
  br i1 %47, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController35ScrollSourceCompositingStateChangedEPNS_4NodeE(%"class.blink::WorkletAnimationController"*, %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WorkletAnimationBase"*, align 8
  %4 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  br i1 %6, label %30, label %13

13:                                               ; preds = %2
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %21
  %16 = phi %"struct.WTF::KeyValuePair"* [ %22, %21 ], [ %8, %13 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 1
  %23 = icmp eq %"struct.WTF::KeyValuePair"* %22, %12
  br i1 %23, label %30, label %15

24:                                               ; preds = %15, %13
  %25 = phi %"struct.WTF::KeyValuePair"* [ %8, %13 ], [ %16, %15 ]
  %26 = icmp eq %"struct.WTF::KeyValuePair"* %25, %12
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::WorkletAnimationBase"** %3 to i8*
  %29 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1, i32 0, i32 0
  br label %31

30:                                               ; preds = %21, %67, %79, %76, %2, %24
  ret void

31:                                               ; preds = %27, %79
  %32 = phi %"struct.WTF::KeyValuePair"* [ %25, %27 ], [ %71, %79 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %33, align 8
  %35 = bitcast %"class.blink::WorkletAnimationBase"* %34 to %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)***
  %36 = load %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)**, %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)** %36, i64 18
  %38 = load %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)** %37, align 8
  %39 = call %"class.blink::AnimationTimeline"* %38(%"class.blink::WorkletAnimationBase"* %34) #8
  %40 = bitcast %"class.blink::AnimationTimeline"* %39 to i1 (%"class.blink::AnimationTimeline"*)***
  %41 = load i1 (%"class.blink::AnimationTimeline"*)**, i1 (%"class.blink::AnimationTimeline"*)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::AnimationTimeline"*)*, i1 (%"class.blink::AnimationTimeline"*)** %41, i64 12
  %43 = load i1 (%"class.blink::AnimationTimeline"*)*, i1 (%"class.blink::AnimationTimeline"*)** %42, align 8
  %44 = call zeroext i1 %43(%"class.blink::AnimationTimeline"* %39) #8
  br i1 %44, label %45, label %67

45:                                               ; preds = %31
  %46 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %33, align 8
  %47 = bitcast %"class.blink::WorkletAnimationBase"* %46 to %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)***
  %48 = load %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)**, %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)** %48, i64 18
  %50 = load %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::AnimationTimeline"* (%"class.blink::WorkletAnimationBase"*)** %49, align 8
  %51 = call %"class.blink::AnimationTimeline"* %50(%"class.blink::WorkletAnimationBase"* %46) #8
  %52 = bitcast %"class.blink::AnimationTimeline"* %51 to %"class.blink::ScrollTimeline"*
  %53 = call %"class.blink::Element"* @_ZNK5blink14ScrollTimeline12scrollSourceEv(%"class.blink::ScrollTimeline"* %52) #8
  %54 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %53, i64 0, i32 0, i32 0
  %55 = icmp eq %"class.blink::Node"* %54, %1
  br i1 %55, label %56, label %67

56:                                               ; preds = %45
  %57 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  store %"class.blink::WorkletAnimationBase"* %57, %"class.blink::WorkletAnimationBase"** %3, align 8
  %58 = call { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %29, %"class.blink::WorkletAnimationBase"** nonnull dereferenceable(8) %3, %"class.blink::WorkletAnimationBase"** nonnull dereferenceable(8) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  %59 = bitcast %"class.blink::WorkletAnimationBase"* %57 to %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)***
  %60 = load %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)**, %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)** %60, i64 12
  %62 = load %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)*, %"class.blink::Document"* (%"class.blink::WorkletAnimationBase"*)** %61, align 8
  %63 = call %"class.blink::Document"* %62(%"class.blink::WorkletAnimationBase"* %57) #8
  %64 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %63) #8
  %65 = icmp eq %"class.blink::LocalFrameView"* %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %56
  call void @_ZN5blink14LocalFrameView17ScheduleAnimationEN4base9TimeDeltaE(%"class.blink::LocalFrameView"* nonnull %64, i64 0) #8
  br label %67

67:                                               ; preds = %66, %56, %45, %31
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 1
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, %12
  br i1 %69, label %30, label %70

70:                                               ; preds = %67, %76
  %71 = phi %"struct.WTF::KeyValuePair"* [ %77, %76 ], [ %68, %67 ]
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %73, 1
  %75 = icmp ult i32 %74, 2
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 1
  %78 = icmp eq %"struct.WTF::KeyValuePair"* %77, %12
  br i1 %78, label %30, label %70

79:                                               ; preds = %70
  %80 = icmp eq %"struct.WTF::KeyValuePair"* %71, %12
  br i1 %80, label %30, label %31
}

declare %"class.blink::Element"* @_ZNK5blink14ScrollTimeline12scrollSourceEv(%"class.blink::ScrollTimeline"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController33EnsureMainThreadMutatorDispatcherE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* noalias sret, %"class.blink::WorkletAnimationController"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  %5 = bitcast %"class.base::WeakPtr"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 16, i1 false)
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %4) #8
  %6 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %1, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::MainThreadMutatorClient"*, %"class.blink::MainThreadMutatorClient"** %7, align 8
  %9 = icmp eq %"class.blink::MainThreadMutatorClient"* %8, null
  br i1 %9, label %10, label %25

10:                                               ; preds = %3
  %11 = tail call %"class.blink::MainThreadMutatorClient"* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl22CreateMainThreadClientERN4base7WeakPtrIS0_EE13scoped_refptrINS1_22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* dereferenceable(16) %0, %"class.base::SingleThreadTaskRunner"* %2) #8
  %12 = ptrtoint %"class.blink::MainThreadMutatorClient"* %11 to i64
  %13 = load %"class.blink::MainThreadMutatorClient"*, %"class.blink::MainThreadMutatorClient"** %7, align 8
  %14 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %12, i64* %14, align 8
  %15 = icmp eq %"class.blink::MainThreadMutatorClient"* %13, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::MainThreadMutatorClient"* %13 to void (%"class.blink::MainThreadMutatorClient"*)***
  %18 = load void (%"class.blink::MainThreadMutatorClient"*)**, void (%"class.blink::MainThreadMutatorClient"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::MainThreadMutatorClient"*)*, void (%"class.blink::MainThreadMutatorClient"*)** %18, i64 1
  %20 = load void (%"class.blink::MainThreadMutatorClient"*)*, void (%"class.blink::MainThreadMutatorClient"*)** %19, align 8
  tail call void %20(%"class.blink::MainThreadMutatorClient"* nonnull %13) #8
  %21 = load %"class.blink::MainThreadMutatorClient"*, %"class.blink::MainThreadMutatorClient"** %7, align 8
  br label %22

22:                                               ; preds = %10, %16
  %23 = phi %"class.blink::MainThreadMutatorClient"* [ %11, %10 ], [ %21, %16 ]
  %24 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %1, i64 0, i32 0
  tail call void @_ZN5blink23MainThreadMutatorClient11SetDelegateEPNS_13MutatorClientE(%"class.blink::MainThreadMutatorClient"* %23, %"class.blink::MutatorClient"* %24) #8
  br label %35

25:                                               ; preds = %3
  %26 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %34) #8
  br label %35

35:                                               ; preds = %22, %25, %27, %32
  ret void
}

declare %"class.blink::MainThreadMutatorClient"* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl22CreateMainThreadClientERN4base7WeakPtrIS0_EE13scoped_refptrINS1_22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* dereferenceable(16), %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #2

declare void @_ZN5blink23MainThreadMutatorClient11SetDelegateEPNS_13MutatorClientE(%"class.blink::MainThreadMutatorClient"*, %"class.blink::MutatorClient"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController23SynchronizeAnimatorNameERKN3WTF6StringE(%"class.blink::WorkletAnimationController"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 3, i32 0
  %4 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.9"* %3, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink26WorkletAnimationController20IsAnimatorRegisteredERKN3WTF6StringE(%"class.blink::WorkletAnimationController"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 3, i32 0
  %4 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable.9"* %3, %"class.WTF::String"* dereferenceable(8) %1) #8
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletAnimationController17SetMutationUpdateENSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS1_14default_deleteIS4_EEEE(%"class.blink::WorkletAnimationController"* nocapture readonly, %"struct.cc::AnimationWorkletOutput"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.cc::AnimationWorkletOutput"* %1, null
  br i1 %3, label %87, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %5, align 8
  %7 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %7, align 8
  %9 = icmp eq %"struct.cc::AnimationWorkletOutput::AnimationState"* %6, %8
  br i1 %9, label %85, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %13

13:                                               ; preds = %10, %82
  %14 = phi %"struct.cc::AnimationWorkletOutput::AnimationState"* [ %6, %10 ], [ %83, %82 ]
  %15 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %14, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair"* %17, null
  br i1 %18, label %82, label %19

19:                                               ; preds = %13
  %20 = load i32, i32* %12, align 8
  %21 = add i32 %20, -1
  %22 = zext i32 %21 to i64
  %23 = shl i32 %16, 15
  %24 = xor i32 %23, -1
  %25 = add i32 %16, %24
  %26 = lshr i32 %25, 10
  %27 = xor i32 %26, %25
  %28 = mul i32 %27, 9
  %29 = lshr i32 %28, 6
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 11
  %32 = xor i32 %31, -1
  %33 = add i32 %30, %32
  %34 = lshr i32 %33, 16
  %35 = xor i32 %34, %33
  %36 = and i32 %21, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %16
  br i1 %41, label %70, label %42

42:                                               ; preds = %19
  %43 = xor i32 %35, -1
  %44 = lshr i32 %33, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %61, %42
  %57 = phi i32 [ %40, %42 ], [ %68, %61 ]
  %58 = phi i64 [ %37, %42 ], [ %65, %61 ]
  %59 = phi i64 [ 0, %42 ], [ %63, %61 ]
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %82, label %61

61:                                               ; preds = %56
  %62 = icmp eq i64 %59, 0
  %63 = select i1 %62, i64 %55, i64 %59
  %64 = add i64 %63, %58
  %65 = and i64 %64, %22
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %65
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %16
  br i1 %69, label %70, label %56

70:                                               ; preds = %61, %19
  %71 = phi %"struct.WTF::KeyValuePair"* [ %38, %19 ], [ %66, %61 ]
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %71, null
  br i1 %72, label %82, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 1, i32 0, i32 0
  %75 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %74, align 8
  %76 = icmp eq %"class.blink::WorkletAnimationBase"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.blink::WorkletAnimationBase"* %75 to void (%"class.blink::WorkletAnimationBase"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*)***
  %79 = load void (%"class.blink::WorkletAnimationBase"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*)**, void (%"class.blink::WorkletAnimationBase"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::WorkletAnimationBase"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*)*, void (%"class.blink::WorkletAnimationBase"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*)** %79, i64 17
  %81 = load void (%"class.blink::WorkletAnimationBase"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*)*, void (%"class.blink::WorkletAnimationBase"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*)** %80, align 8
  tail call void %81(%"class.blink::WorkletAnimationBase"* nonnull %75, %"struct.cc::AnimationWorkletOutput::AnimationState"* dereferenceable(32) %14) #8
  br label %82

82:                                               ; preds = %56, %13, %70, %73, %77
  %83 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %14, i64 1
  %84 = icmp eq %"struct.cc::AnimationWorkletOutput::AnimationState"* %83, %8
  br i1 %84, label %85, label %13

85:                                               ; preds = %82, %4
  tail call void @_ZN2cc22AnimationWorkletOutputD1Ev(%"struct.cc::AnimationWorkletOutput"* nonnull %1) #8
  %86 = bitcast %"struct.cc::AnimationWorkletOutput"* %1 to i8*
  tail call void @_ZdlPv(i8* %86) #9
  br label %87

87:                                               ; preds = %2, %85
  ret void
}

declare void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl19MutateSynchronouslyENSt3__110unique_ptrIN2cc17MutatorInputStateENS1_14default_deleteIS4_EEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.cc::MutatorInputState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::MutatorInputState"* @_ZN5blink26WorkletAnimationController22CollectAnimationStatesEv(%"class.blink::WorkletAnimationController"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #9
  %3 = bitcast i8* %2 to %"class.cc::MutatorInputState"*
  tail call void @_ZN2cc17MutatorInputStateC1Ev(%"class.cc::MutatorInputState"* nonnull %3) #8
  %4 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  br i1 %6, label %27, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %21
  %16 = phi %"struct.WTF::KeyValuePair"* [ %22, %21 ], [ %8, %13 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 1
  %23 = icmp eq %"struct.WTF::KeyValuePair"* %22, %12
  br i1 %23, label %27, label %15

24:                                               ; preds = %15, %13
  %25 = phi %"struct.WTF::KeyValuePair"* [ %8, %13 ], [ %16, %15 ]
  %26 = icmp eq %"struct.WTF::KeyValuePair"* %25, %12
  br i1 %26, label %27, label %28

27:                                               ; preds = %21, %28, %47, %44, %1, %24
  ret %"class.cc::MutatorInputState"* %3

28:                                               ; preds = %24, %47
  %29 = phi %"struct.WTF::KeyValuePair"* [ %39, %47 ], [ %25, %24 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %30, align 8
  %32 = bitcast %"class.blink::WorkletAnimationBase"* %31 to void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)***
  %33 = load void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)**, void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)*, void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)** %33, i64 16
  %35 = load void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)*, void (%"class.blink::WorkletAnimationBase"*, %"class.cc::MutatorInputState"*)** %34, align 8
  tail call void %35(%"class.blink::WorkletAnimationBase"* %31, %"class.cc::MutatorInputState"* nonnull %3) #8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 1
  %37 = icmp eq %"struct.WTF::KeyValuePair"* %36, %12
  br i1 %37, label %27, label %38

38:                                               ; preds = %28, %44
  %39 = phi %"struct.WTF::KeyValuePair"* [ %45, %44 ], [ %36, %28 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, 1
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 1
  %46 = icmp eq %"struct.WTF::KeyValuePair"* %45, %12
  br i1 %46, label %27, label %38

47:                                               ; preds = %38
  %48 = icmp eq %"struct.WTF::KeyValuePair"* %39, %12
  br i1 %48, label %27, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26WorkletAnimationController5TraceEPNS_7VisitorE(%"class.blink::WorkletAnimationController"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapHashSet"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashSet"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #8
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::HeapHashMap"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = bitcast %"class.blink::HeapHashMap"* %19 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #8
  %26 = icmp eq i64 %21, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %33

33:                                               ; preds = %18, %27
  %34 = getelementptr inbounds %"class.blink::WorkletAnimationController", %"class.blink::WorkletAnimationController"* %0, i64 0, i32 5
  %35 = bitcast %"class.blink::Member.57"* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = inttoptr i64 %36 to i8*
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #8
  br label %44

44:                                               ; preds = %33, %38
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::WorkletAnimationBase"** dereferenceable(8), %"class.blink::WorkletAnimationBase"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %6 = icmp eq %"class.blink::Member"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* null)
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::WorkletAnimationBase"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %40, align 8
  %42 = icmp eq %"class.blink::WorkletAnimationBase"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::WorkletAnimationBase"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::WorkletAnimationBase"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::WorkletAnimationBase"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::WorkletAnimationBase"* %59, inttoptr (i64 -1 to %"class.blink::WorkletAnimationBase"*)
  %67 = select i1 %66, %"class.blink::Member"* %60, %"class.blink::Member"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %73, align 8
  %75 = icmp eq %"class.blink::WorkletAnimationBase"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #8
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %2, align 8
  %89 = ptrtoint %"class.blink::WorkletAnimationBase"* %88 to i64
  %90 = bitcast %"class.blink::Member"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::WorkletAnimationBase"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #8
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #8
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member"*, i8 } undef, %"class.blink::Member"* %117, 0
  %119 = insertvalue { %"class.blink::Member"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"*, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #8
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %23, i8* %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"class.blink::Member"* %1, i8* nonnull dereferenceable(1) %4) #8
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #8
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member"*
  %44 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* %43, i32 %40, %"class.blink::Member"* %1) #8
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member"* %46
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"*, i32, %"class.blink::Member"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %33 = icmp eq %"class.blink::Member"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #8
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #8
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member"* %61, %"class.blink::Member"* %55
  %63 = bitcast %"class.blink::Member"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #8
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* %42, i32 %1, %"class.blink::Member"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member"* %87, %"class.blink::Member"* %82
  %89 = bitcast %"class.blink::Member"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member"* %99, %"class.blink::Member"* %88
  %101 = bitcast %"class.blink::Member"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"*, %"class.blink::Member"*, i32, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #8
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #8
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #8
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 %42
  %44 = bitcast %"class.blink::Member"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %70, align 8
  %72 = icmp eq %"class.blink::WorkletAnimationBase"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::WorkletAnimationBase"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member"* %93, null
  %95 = ptrtoint %"class.blink::Member"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::WorkletAnimationBase"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::WorkletAnimationBase"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::WorkletAnimationBase"* %99, inttoptr (i64 -1 to %"class.blink::WorkletAnimationBase"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::WorkletAnimationBase"*, %"class.blink::WorkletAnimationBase"** %113, align 8
  %115 = icmp eq %"class.blink::WorkletAnimationBase"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member"* %121, %3
  %123 = select i1 %122, %"class.blink::Member"* %118, %"class.blink::Member"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.4, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 5
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !4

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #8
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %33
  %35 = bitcast %"class.blink::Member"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20WorkletAnimationBaseEE5TraceEPNS_7VisitorEPKv) #8
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20WorkletAnimationBaseEE5TraceEPNS_7VisitorEPKv) #8
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20WorkletAnimationBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"*, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !4

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #8
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_20WorkletAnimationBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #8
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member"*
  %47 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_20WorkletAnimationBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::Member"* %46, i32 %43, %"class.blink::Member"* null) #8
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.6"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !4

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #8
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !3
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking.1212"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #8
  %48 = bitcast %"class.blink::HeapHashTableBacking.1212"* %47 to %"struct.WTF::KeyValuePair"*
  %49 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.6"* %0, %"struct.WTF::KeyValuePair"* %48, i32 %45, %"struct.WTF::KeyValuePair"* null) #8
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.6"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #8
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1212"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #8
  %45 = bitcast %"class.blink::HeapHashTableBacking.1212"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable.6"* %0 to %"class.blink::HeapHashTableBacking.1212"**
  store %"class.blink::HeapHashTableBacking.1212"* %44, %"class.blink::HeapHashTableBacking.1212"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1212", %"class.blink::HeapHashTableBacking.1212"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #8
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.6"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  store i32 %67, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.6"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  br label %37

14:                                               ; preds = %124, %4
  %15 = phi %"struct.WTF::KeyValuePair"* [ null, %4 ], [ %127, %124 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #8
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.6"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #8
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #8
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair"* %15

37:                                               ; preds = %9, %124
  %38 = phi i32 [ %7, %9 ], [ %125, %124 ]
  %39 = phi %"struct.WTF::KeyValuePair"* [ %13, %9 ], [ %126, %124 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ null, %9 ], [ %127, %124 ]
  %41 = phi i32 [ 0, %9 ], [ %128, %124 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %124, label %47

47:                                               ; preds = %37
  %48 = shl i32 %44, 15
  %49 = xor i32 %48, -1
  %50 = add i32 %44, %49
  %51 = lshr i32 %50, 10
  %52 = xor i32 %51, %50
  %53 = mul i32 %52, 9
  %54 = lshr i32 %53, 6
  %55 = xor i32 %54, %53
  %56 = shl i32 %55, 11
  %57 = xor i32 %56, -1
  %58 = add i32 %55, %57
  %59 = lshr i32 %58, 16
  %60 = xor i32 %59, %58
  %61 = and i32 %60, %11
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %62
  %64 = ptrtoint %"struct.WTF::KeyValuePair"* %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %47
  %69 = xor i32 %60, -1
  %70 = lshr i32 %58, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"struct.WTF::KeyValuePair"* %105 to i64
  %84 = inttoptr i64 %100 to %"struct.WTF::KeyValuePair"*
  br label %85

85:                                               ; preds = %82, %47
  %86 = phi i64 [ %83, %82 ], [ %64, %47 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %84, %82 ], [ null, %47 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair"* %87, null
  %89 = ptrtoint %"struct.WTF::KeyValuePair"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %110

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi i32 [ %66, %68 ], [ %108, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq i32 %93, %44
  br i1 %97, label %110, label %98

98:                                               ; preds = %91
  %99 = icmp eq i32 %93, -1
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %12
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %104
  %106 = ptrtoint %"struct.WTF::KeyValuePair"* %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %82, label %91

110:                                              ; preds = %91, %85
  %111 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %112 = inttoptr i64 %111 to %"struct.WTF::KeyValuePair"*
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 0, i32 0
  store i32 %44, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42, i32 1
  %116 = bitcast %"class.blink::Member"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::Member"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %119, i64 %42
  %121 = icmp eq %"struct.WTF::KeyValuePair"* %120, %3
  %122 = select i1 %121, %"struct.WTF::KeyValuePair"* %112, %"struct.WTF::KeyValuePair"* %40
  %123 = load i32, i32* %6, align 8
  br label %124

124:                                              ; preds = %37, %110
  %125 = phi i32 [ %38, %37 ], [ %123, %110 ]
  %126 = phi %"struct.WTF::KeyValuePair"* [ %39, %37 ], [ %119, %110 ]
  %127 = phi %"struct.WTF::KeyValuePair"* [ %40, %37 ], [ %122, %110 ]
  %128 = add i32 %41, 1
  %129 = icmp eq i32 %128, %125
  br i1 %129, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1212"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.4, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1212"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1212"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 5
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !4

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !4

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #8
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i32, i32* %61 monotonic, align 4
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20WorkletAnimationBaseEE5TraceEPNS_7VisitorEPKv) #8
  br label %90

76:                                               ; preds = %59
  %77 = load i32, i32* %61, align 4
  %78 = add i32 %77, 1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20WorkletAnimationBaseEE5TraceEPNS_7VisitorEPKv) #8
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EEiRKS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.6"*, i32* dereferenceable(4), %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.6"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %140, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = bitcast %"class.blink::Member"* %2 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::Member"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %79
  %90 = inttoptr i64 %85 to i8*
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #8
  br label %92

92:                                               ; preds = %79, %89
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !4

100:                                              ; preds = %95
  %101 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #8
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 9
  %107 = load i8, i8* %106, align 1, !range !3
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %128, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 13
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %113, align 8
  %115 = load atomic i64, i64* %86 monotonic, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %114, i64 0, i32 0, i32 0
  %119 = inttoptr i64 %115 to i8*
  %120 = bitcast %"class.blink::MarkingVisitor"* %114 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %121, i64 5
  %123 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, align 8
  tail call void %123(%"class.blink::Visitor"* %118, i8* nonnull %119, i8* %119, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20WorkletAnimationBaseEE5TraceEPNS_7VisitorEPKv) #8
  %124 = load i64, i64* %110, align 8
  br label %125

125:                                              ; preds = %117, %109
  %126 = phi i64 [ %112, %109 ], [ %124, %117 ]
  %127 = add i64 %126, -1
  store i64 %127, i64* %110, align 8
  br label %128

128:                                              ; preds = %92, %102, %125
  %129 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, %131
  %135 = shl i32 %134, 1
  %136 = load i32, i32* %12, align 8
  %137 = icmp ult i32 %135, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %128
  %139 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.6"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %140

140:                                              ; preds = %50, %128, %138
  %141 = phi i8 [ 1, %128 ], [ 1, %138 ], [ 0, %50 ]
  %142 = phi %"struct.WTF::KeyValuePair"* [ %81, %128 ], [ %139, %138 ], [ %52, %50 ]
  %143 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %142, 0
  %144 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %143, i8 %141, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.6"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #8
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %23, i8* %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.6"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #8
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1212"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_20WorkletAnimationBaseEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #8
  %43 = bitcast %"class.blink::HeapHashTableBacking.1212"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_20WorkletAnimationBaseEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.6"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #8
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.9"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.9"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #8
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #8
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %88
  tail call void @llvm.trap() #8
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #8
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.9"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.9"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.9"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #8
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.9"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.9", align 8
  %6 = bitcast %"class.WTF::HashTable.9"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.9"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.9"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.9"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.9"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.9"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #8
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.9"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #8
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #8
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.9"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #8
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable.9"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #8
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %22
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %59, %52 ]
  %43 = phi %"class.WTF::String"* [ %23, %27 ], [ %57, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %46 = bitcast %"class.WTF::String"* %43 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %42, %"class.WTF::StringImpl"* %50) #8
  br i1 %51, label %61, label %52

52:                                               ; preds = %49, %41
  %53 = icmp eq i64 %45, 0
  %54 = select i1 %53, i64 %40, i64 %45
  %55 = add i64 %54, %44
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %56
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %49, %52, %2, %19
  %62 = phi %"class.WTF::String"* [ null, %2 ], [ null, %19 ], [ %43, %49 ], [ null, %52 ]
  %63 = icmp ne %"class.WTF::String"* %62, null
  ret i1 %63
}

; Function Attrs: nounwind
declare void @_ZN2cc22AnimationWorkletOutputD1Ev(%"struct.cc::AnimationWorkletOutput"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN2cc17MutatorInputStateC1Ev(%"class.cc::MutatorInputState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
