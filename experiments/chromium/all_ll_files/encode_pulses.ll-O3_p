; ModuleID = '../../third_party/opus/src/silk/encode_pulses.c'
source_filename = "../../third_party/opus/src/silk/encode_pulses.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [42 x i8] c"assertion failed: frame_length == 12 * 10\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"../../third_party/opus/src/silk/encode_pulses.c\00", align 1
@silk_max_pulses_table = external local_unnamed_addr constant [4 x i8], align 1
@silk_pulses_per_block_BITS_Q5 = external local_unnamed_addr constant [9 x [18 x i8]], align 16
@silk_rate_levels_BITS_Q5 = external local_unnamed_addr constant [2 x [9 x i8]], align 16
@silk_rate_levels_iCDF = external constant [2 x [9 x i8]], align 16
@silk_pulses_per_block_iCDF = external constant [10 x [18 x i8]], align 16
@silk_lsb_iCDF = external constant [2 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_encode_pulses(%struct.ec_ctx*, i32, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca [8 x i32], align 16
  %7 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %9 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %11 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %12 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 32, i1 false)
  %16 = ashr i32 %4, 4
  %17 = and i32 %4, -16
  %18 = icmp slt i32 %17, %4
  br i1 %18, label %19, label %24

19:                                               ; preds = %5
  %20 = icmp eq i32 %4, 120
  br i1 %20, label %22, label %21

21:                                               ; preds = %19
  tail call void @celt_fatal(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 89) #5
  unreachable

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, i8* %3, i64 120
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 16, i1 false)
  br label %24

24:                                               ; preds = %22, %5
  %25 = phi i32 [ 8, %22 ], [ %16, %5 ]
  %26 = shl nsw i32 %25, 4
  %27 = sext i32 %26 to i64
  %28 = shl nsw i64 %27, 2
  %29 = alloca i32, i64 %27, align 16
  %30 = bitcast i32* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 -86, i64 %28, i1 false)
  %31 = icmp sgt i32 %25, 0
  br i1 %31, label %32, label %45

32:                                               ; preds = %24, %32
  %33 = phi i64 [ %43, %32 ], [ 0, %24 ]
  %34 = getelementptr inbounds i8, i8* %3, i64 %33
  %35 = getelementptr inbounds i32, i32* %29, i64 %33
  %36 = bitcast i8* %34 to <4 x i8>*
  %37 = load <4 x i8>, <4 x i8>* %36, align 1
  %38 = sext <4 x i8> %37 to <4 x i32>
  %39 = icmp slt <4 x i32> %38, zeroinitializer
  %40 = sub nsw <4 x i32> zeroinitializer, %38
  %41 = select <4 x i1> %39, <4 x i32> %40, <4 x i32> %38
  %42 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> %41, <4 x i32>* %42, align 16
  %43 = add nuw nsw i64 %33, 4
  %44 = icmp slt i64 %43, %27
  br i1 %44, label %32, label %45

45:                                               ; preds = %32, %24
  %46 = sext i32 %25 to i64
  %47 = shl nsw i64 %46, 2
  %48 = alloca i32, i64 %46, align 16
  %49 = bitcast i32* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 %47, i1 false)
  %50 = alloca i32, i64 %46, align 16
  %51 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -86, i64 %47, i1 false)
  br i1 %31, label %55, label %52

52:                                               ; preds = %45
  %53 = ashr i32 %1, 1
  %54 = sext i32 %53 to i64
  br label %70

55:                                               ; preds = %45
  %56 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @silk_max_pulses_table, i64 0, i64 0), align 1
  %57 = zext i8 %56 to i32
  %58 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @silk_max_pulses_table, i64 0, i64 1), align 1
  %59 = zext i8 %58 to i32
  %60 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @silk_max_pulses_table, i64 0, i64 2), align 1
  %61 = zext i8 %60 to i32
  %62 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @silk_max_pulses_table, i64 0, i64 3), align 1
  %63 = zext i8 %62 to i32
  %64 = zext i32 %25 to i64
  %65 = load i32, i32* %8, align 16
  %66 = load i32, i32* %9, align 4
  br label %171

67:                                               ; preds = %278
  store i32 %256, i32* %8, align 16
  store i32 %255, i32* %9, align 4
  %68 = ashr i32 %1, 1
  %69 = sext i32 %68 to i64
  br i1 %31, label %113, label %70

70:                                               ; preds = %52, %67
  %71 = phi i64 [ %54, %52 ], [ %69, %67 ]
  %72 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %71, i64 0
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %71, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp ugt i8 %73, %75
  %77 = zext i1 %76 to i32
  %78 = select i1 %76, i8 %75, i8 %73
  %79 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %71, i64 2
  %80 = load i8, i8* %79, align 1
  %81 = icmp ugt i8 %78, %80
  %82 = select i1 %81, i32 2, i32 %77
  %83 = select i1 %81, i8 %80, i8 %78
  %84 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %71, i64 3
  %85 = load i8, i8* %84, align 1
  %86 = icmp ugt i8 %83, %85
  %87 = select i1 %86, i32 3, i32 %82
  %88 = select i1 %86, i8 %85, i8 %83
  %89 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %71, i64 4
  %90 = load i8, i8* %89, align 1
  %91 = icmp ugt i8 %88, %90
  %92 = select i1 %91, i32 4, i32 %87
  %93 = select i1 %91, i8 %90, i8 %88
  %94 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %71, i64 5
  %95 = load i8, i8* %94, align 1
  %96 = icmp ugt i8 %93, %95
  %97 = select i1 %96, i32 5, i32 %92
  %98 = select i1 %96, i8 %95, i8 %93
  %99 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %71, i64 6
  %100 = load i8, i8* %99, align 1
  %101 = icmp ugt i8 %98, %100
  %102 = select i1 %101, i32 6, i32 %97
  %103 = select i1 %101, i8 %100, i8 %98
  %104 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %71, i64 7
  %105 = load i8, i8* %104, align 1
  %106 = icmp ugt i8 %103, %105
  %107 = select i1 %106, i32 7, i32 %102
  %108 = select i1 %106, i8 %105, i8 %103
  %109 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %71, i64 8
  %110 = load i8, i8* %109, align 1
  %111 = icmp ugt i8 %108, %110
  %112 = select i1 %111, i32 8, i32 %107
  br label %282

113:                                              ; preds = %67
  %114 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %69, i64 0
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = zext i32 %25 to i64
  %118 = and i64 %117, 1
  %119 = icmp eq i32 %25, 1
  br i1 %119, label %143, label %120

120:                                              ; preds = %113
  %121 = sub nsw i64 %117, %118
  br label %122

122:                                              ; preds = %1028, %120
  %123 = phi i64 [ 0, %120 ], [ %1033, %1028 ]
  %124 = phi i32 [ %116, %120 ], [ %1032, %1028 ]
  %125 = phi i64 [ %121, %120 ], [ %1034, %1028 ]
  %126 = getelementptr inbounds i32, i32* %50, i64 %123
  %127 = load i32, i32* %126, align 8
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds i32, i32* %48, i64 %123
  %131 = load i32, i32* %130, align 8
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 0, i64 %132
  br label %134

134:                                              ; preds = %122, %129
  %135 = phi i8* [ %133, %129 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 0, i64 17), %122 ]
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = add nuw nsw i32 %124, %137
  %139 = or i64 %123, 1
  %140 = getelementptr inbounds i32, i32* %50, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %1028, label %1023

143:                                              ; preds = %1028, %113
  %144 = phi i32 [ undef, %113 ], [ %1032, %1028 ]
  %145 = phi i64 [ 0, %113 ], [ %1033, %1028 ]
  %146 = phi i32 [ %116, %113 ], [ %1032, %1028 ]
  %147 = icmp eq i64 %118, 0
  br i1 %147, label %162, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds i32, i32* %50, i64 %145
  %150 = load i32, i32* %149, align 4
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %157, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds i32, i32* %48, i64 %145
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 0, i64 %155
  br label %157

157:                                              ; preds = %148, %152
  %158 = phi i8* [ %156, %152 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 0, i64 17), %148 ]
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = add nuw nsw i32 %146, %160
  br label %162

162:                                              ; preds = %143, %157
  %163 = phi i32 [ %144, %143 ], [ %161, %157 ]
  %164 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %69, i64 1
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = and i64 %117, 1
  %168 = icmp eq i32 %25, 1
  br i1 %168, label %490, label %169

169:                                              ; preds = %162
  %170 = sub nsw i64 %117, %167
  br label %469

171:                                              ; preds = %278, %55
  %172 = phi i32 [ %66, %55 ], [ %255, %278 ]
  %173 = phi i32 [ %65, %55 ], [ %256, %278 ]
  %174 = phi i32 [ 0, %55 ], [ %257, %278 ]
  %175 = phi i32 [ 0, %55 ], [ %258, %278 ]
  %176 = phi i64 [ 0, %55 ], [ %280, %278 ]
  %177 = phi i32* [ %29, %55 ], [ %279, %278 ]
  %178 = getelementptr inbounds i32, i32* %50, i64 %176
  store i32 0, i32* %178, align 4
  %179 = getelementptr inbounds i32, i32* %48, i64 %176
  %180 = load i32, i32* %177, align 4
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds i32, i32* %177, i64 2
  %184 = getelementptr inbounds i32, i32* %177, i64 3
  %185 = getelementptr inbounds i32, i32* %177, i64 4
  %186 = getelementptr inbounds i32, i32* %177, i64 5
  %187 = getelementptr inbounds i32, i32* %177, i64 6
  %188 = getelementptr inbounds i32, i32* %177, i64 7
  %189 = getelementptr inbounds i32, i32* %177, i64 8
  %190 = getelementptr inbounds i32, i32* %177, i64 9
  %191 = getelementptr inbounds i32, i32* %177, i64 10
  %192 = getelementptr inbounds i32, i32* %177, i64 11
  %193 = getelementptr inbounds i32, i32* %177, i64 12
  %194 = getelementptr inbounds i32, i32* %177, i64 13
  %195 = getelementptr inbounds i32, i32* %177, i64 14
  %196 = getelementptr inbounds i32, i32* %177, i64 15
  %197 = getelementptr inbounds i32, i32* %177, i64 4
  %198 = getelementptr inbounds i32, i32* %177, i64 8
  %199 = getelementptr inbounds i32, i32* %177, i64 12
  %200 = bitcast i32* %177 to <4 x i32>*
  %201 = bitcast i32* %177 to <4 x i32>*
  %202 = bitcast i32* %197 to <4 x i32>*
  %203 = bitcast i32* %197 to <4 x i32>*
  %204 = bitcast i32* %198 to <4 x i32>*
  %205 = bitcast i32* %198 to <4 x i32>*
  %206 = bitcast i32* %199 to <4 x i32>*
  %207 = bitcast i32* %199 to <4 x i32>*
  %208 = load i32, i32* %10, align 8
  br label %209

209:                                              ; preds = %265, %171
  %210 = phi i32 [ %238, %265 ], [ %208, %171 ]
  %211 = phi i32 [ %255, %265 ], [ %172, %171 ]
  %212 = phi i32 [ %256, %265 ], [ %173, %171 ]
  %213 = phi i32 [ %257, %265 ], [ %174, %171 ]
  %214 = phi i32 [ %258, %265 ], [ %175, %171 ]
  %215 = phi i32 [ %277, %265 ], [ %182, %171 ]
  %216 = phi i32 [ %276, %265 ], [ %180, %171 ]
  %217 = add nsw i32 %215, %216
  %218 = icmp sgt i32 %217, %57
  br i1 %218, label %224, label %219

219:                                              ; preds = %209
  %220 = load i32, i32* %183, align 4
  %221 = load i32, i32* %184, align 4
  %222 = add nsw i32 %221, %220
  %223 = icmp sgt i32 %222, %57
  br i1 %223, label %224, label %877

224:                                              ; preds = %907, %902, %897, %892, %887, %882, %877, %219, %209
  %225 = phi i32 [ %210, %209 ], [ %210, %219 ], [ %210, %877 ], [ %880, %882 ], [ %880, %887 ], [ %880, %892 ], [ %880, %897 ], [ %880, %902 ], [ %880, %907 ]
  %226 = phi i32 [ %211, %209 ], [ %211, %219 ], [ %222, %877 ], [ %222, %882 ], [ %222, %887 ], [ %222, %892 ], [ %222, %897 ], [ %222, %902 ], [ %222, %907 ]
  %227 = phi i32 [ %212, %209 ], [ %217, %219 ], [ %217, %877 ], [ %217, %882 ], [ %217, %887 ], [ %217, %892 ], [ %217, %897 ], [ %217, %902 ], [ %217, %907 ]
  %228 = phi i32 [ %213, %209 ], [ %213, %219 ], [ %222, %877 ], [ %222, %882 ], [ %222, %887 ], [ %222, %892 ], [ %222, %897 ], [ %222, %902 ], [ %222, %907 ]
  %229 = phi i32 [ %214, %209 ], [ %217, %219 ], [ %217, %877 ], [ %217, %882 ], [ %217, %887 ], [ %217, %892 ], [ %217, %897 ], [ %217, %902 ], [ %217, %907 ]
  %230 = phi i32 [ 1, %209 ], [ 1, %219 ], [ 1, %877 ], [ 1, %882 ], [ 1, %887 ], [ 1, %892 ], [ 1, %897 ], [ 1, %902 ], [ 0, %907 ]
  %231 = add nsw i32 %228, %229
  %232 = icmp sgt i32 %231, %59
  br i1 %232, label %237, label %233

233:                                              ; preds = %224
  %234 = load i32, i32* %11, align 4
  %235 = add nsw i32 %234, %225
  %236 = icmp sgt i32 %235, %59
  br i1 %236, label %237, label %908

237:                                              ; preds = %918, %913, %908, %233, %224
  %238 = phi i32 [ %225, %224 ], [ %225, %233 ], [ %225, %908 ], [ %911, %913 ], [ %911, %918 ]
  %239 = phi i32 [ %226, %224 ], [ %226, %233 ], [ %235, %908 ], [ %235, %913 ], [ %235, %918 ]
  %240 = phi i32 [ %227, %224 ], [ %231, %233 ], [ %231, %908 ], [ %231, %913 ], [ %231, %918 ]
  %241 = phi i32 [ %228, %224 ], [ %228, %233 ], [ %235, %908 ], [ %235, %913 ], [ %235, %918 ]
  %242 = phi i32 [ %229, %224 ], [ %231, %233 ], [ %231, %908 ], [ %231, %913 ], [ %231, %918 ]
  %243 = phi i32 [ 1, %224 ], [ 1, %233 ], [ 1, %908 ], [ 1, %913 ], [ 0, %918 ]
  %244 = add nuw nsw i32 %243, %230
  %245 = add nsw i32 %241, %242
  %246 = icmp sgt i32 %245, %61
  br i1 %246, label %254, label %247

247:                                              ; preds = %237
  %248 = load i32, i32* %11, align 4
  %249 = add nsw i32 %248, %238
  %250 = icmp sgt i32 %249, %61
  %251 = select i1 %250, i32 %239, i32 %249
  %252 = select i1 %250, i32 %241, i32 %249
  %253 = zext i1 %250 to i32
  br label %254

254:                                              ; preds = %247, %237
  %255 = phi i32 [ %239, %237 ], [ %251, %247 ]
  %256 = phi i32 [ %240, %237 ], [ %245, %247 ]
  %257 = phi i32 [ %241, %237 ], [ %252, %247 ]
  %258 = phi i32 [ %242, %237 ], [ %245, %247 ]
  %259 = phi i32 [ 1, %237 ], [ %253, %247 ]
  %260 = add nsw i32 %257, %258
  %261 = icmp sgt i32 %260, %63
  br i1 %261, label %265, label %262

262:                                              ; preds = %254
  store i32 %260, i32* %179, align 4
  %263 = sub nsw i32 0, %259
  %264 = icmp eq i32 %244, %263
  br i1 %264, label %278, label %265

265:                                              ; preds = %254, %262
  %266 = load i32, i32* %178, align 4
  %267 = add nsw i32 %266, 1
  store i32 %267, i32* %178, align 4
  %268 = load <4 x i32>, <4 x i32>* %200, align 4
  %269 = ashr <4 x i32> %268, <i32 1, i32 1, i32 1, i32 1>
  store <4 x i32> %269, <4 x i32>* %201, align 4
  %270 = load <4 x i32>, <4 x i32>* %202, align 4
  %271 = ashr <4 x i32> %270, <i32 1, i32 1, i32 1, i32 1>
  store <4 x i32> %271, <4 x i32>* %203, align 4
  %272 = load <4 x i32>, <4 x i32>* %204, align 4
  %273 = ashr <4 x i32> %272, <i32 1, i32 1, i32 1, i32 1>
  store <4 x i32> %273, <4 x i32>* %205, align 4
  %274 = load <4 x i32>, <4 x i32>* %206, align 4
  %275 = ashr <4 x i32> %274, <i32 1, i32 1, i32 1, i32 1>
  store <4 x i32> %275, <4 x i32>* %207, align 4
  %276 = extractelement <4 x i32> %269, i32 0
  %277 = extractelement <4 x i32> %269, i32 1
  br label %209

278:                                              ; preds = %262
  store i32 %238, i32* %10, align 8
  %279 = getelementptr inbounds i32, i32* %177, i64 16
  %280 = add nuw nsw i64 %176, 1
  %281 = icmp eq i64 %280, %64
  br i1 %281, label %67, label %171

282:                                              ; preds = %70, %873
  %283 = phi i64 [ %69, %873 ], [ %71, %70 ]
  %284 = phi i32 [ %876, %873 ], [ %112, %70 ]
  %285 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_iCDF, i64 0, i64 %283, i64 0
  tail call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %284, i8* %285, i32 8) #4
  %286 = sext i32 %284 to i64
  %287 = getelementptr inbounds [10 x [18 x i8]], [10 x [18 x i8]]* @silk_pulses_per_block_iCDF, i64 0, i64 %286, i64 0
  br i1 %31, label %288, label %468

288:                                              ; preds = %282
  %289 = zext i32 %25 to i64
  br label %293

290:                                              ; preds = %305
  br i1 %31, label %291, label %468

291:                                              ; preds = %290
  %292 = zext i32 %25 to i64
  br label %314

293:                                              ; preds = %305, %288
  %294 = phi i64 [ 0, %288 ], [ %309, %305 ]
  %295 = getelementptr inbounds i32, i32* %50, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %305, label %298

298:                                              ; preds = %293
  tail call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 17, i8* %287, i32 8) #4
  %299 = add i32 %296, -1
  %300 = icmp sgt i32 %299, 0
  br i1 %300, label %301, label %305

301:                                              ; preds = %298, %301
  %302 = phi i32 [ %303, %301 ], [ 0, %298 ]
  tail call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 17, i8* getelementptr inbounds ([10 x [18 x i8]], [10 x [18 x i8]]* @silk_pulses_per_block_iCDF, i64 0, i64 9, i64 0), i32 8) #4
  %303 = add nuw nsw i32 %302, 1
  %304 = icmp eq i32 %303, %299
  br i1 %304, label %305, label %301

305:                                              ; preds = %301, %298, %293
  %306 = phi i8* [ %287, %293 ], [ getelementptr inbounds ([10 x [18 x i8]], [10 x [18 x i8]]* @silk_pulses_per_block_iCDF, i64 0, i64 9, i64 0), %298 ], [ getelementptr inbounds ([10 x [18 x i8]], [10 x [18 x i8]]* @silk_pulses_per_block_iCDF, i64 0, i64 9, i64 0), %301 ]
  %307 = getelementptr inbounds i32, i32* %48, i64 %294
  %308 = load i32, i32* %307, align 4
  tail call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %308, i8* %306, i32 8) #4
  %309 = add nuw nsw i64 %294, 1
  %310 = icmp eq i64 %309, %289
  br i1 %310, label %290, label %293

311:                                              ; preds = %322
  br i1 %31, label %312, label %468

312:                                              ; preds = %311
  %313 = zext i32 %25 to i64
  br label %325

314:                                              ; preds = %322, %291
  %315 = phi i64 [ 0, %291 ], [ %323, %322 ]
  %316 = getelementptr inbounds i32, i32* %48, i64 %315
  %317 = load i32, i32* %316, align 4
  %318 = icmp sgt i32 %317, 0
  br i1 %318, label %319, label %322

319:                                              ; preds = %314
  %320 = shl nsw i64 %315, 4
  %321 = getelementptr inbounds i32, i32* %29, i64 %320
  call void @silk_shell_encoder(%struct.ec_ctx* %0, i32* %321) #4
  br label %322

322:                                              ; preds = %314, %319
  %323 = add nuw nsw i64 %315, 1
  %324 = icmp eq i64 %323, %292
  br i1 %324, label %311, label %314

325:                                              ; preds = %465, %312
  %326 = phi i64 [ 0, %312 ], [ %466, %465 ]
  %327 = getelementptr inbounds i32, i32* %50, i64 %326
  %328 = load i32, i32* %327, align 4
  %329 = icmp sgt i32 %328, 0
  br i1 %329, label %330, label %465

330:                                              ; preds = %325
  %331 = shl nsw i64 %326, 4
  %332 = getelementptr inbounds i8, i8* %3, i64 %331
  %333 = add nsw i32 %328, -1
  %334 = icmp sgt i32 %333, 0
  br i1 %334, label %447, label %335

335:                                              ; preds = %330
  %336 = load i8, i8* %332, align 1
  %337 = icmp slt i8 %336, 0
  %338 = sub i8 0, %336
  %339 = select i1 %337, i8 %338, i8 %336
  %340 = and i8 %339, 1
  %341 = zext i8 %340 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %341, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %342 = getelementptr inbounds i8, i8* %332, i64 1
  %343 = load i8, i8* %342, align 1
  %344 = icmp slt i8 %343, 0
  %345 = sub i8 0, %343
  %346 = select i1 %344, i8 %345, i8 %343
  %347 = and i8 %346, 1
  %348 = zext i8 %347 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %348, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %349 = getelementptr inbounds i8, i8* %332, i64 2
  %350 = load i8, i8* %349, align 1
  %351 = icmp slt i8 %350, 0
  %352 = sub i8 0, %350
  %353 = select i1 %351, i8 %352, i8 %350
  %354 = and i8 %353, 1
  %355 = zext i8 %354 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %355, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %356 = getelementptr inbounds i8, i8* %332, i64 3
  %357 = load i8, i8* %356, align 1
  %358 = icmp slt i8 %357, 0
  %359 = sub i8 0, %357
  %360 = select i1 %358, i8 %359, i8 %357
  %361 = and i8 %360, 1
  %362 = zext i8 %361 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %362, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %363 = getelementptr inbounds i8, i8* %332, i64 4
  %364 = load i8, i8* %363, align 1
  %365 = icmp slt i8 %364, 0
  %366 = sub i8 0, %364
  %367 = select i1 %365, i8 %366, i8 %364
  %368 = and i8 %367, 1
  %369 = zext i8 %368 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %369, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %370 = getelementptr inbounds i8, i8* %332, i64 5
  %371 = load i8, i8* %370, align 1
  %372 = icmp slt i8 %371, 0
  %373 = sub i8 0, %371
  %374 = select i1 %372, i8 %373, i8 %371
  %375 = and i8 %374, 1
  %376 = zext i8 %375 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %376, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %377 = getelementptr inbounds i8, i8* %332, i64 6
  %378 = load i8, i8* %377, align 1
  %379 = icmp slt i8 %378, 0
  %380 = sub i8 0, %378
  %381 = select i1 %379, i8 %380, i8 %378
  %382 = and i8 %381, 1
  %383 = zext i8 %382 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %383, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %384 = getelementptr inbounds i8, i8* %332, i64 7
  %385 = load i8, i8* %384, align 1
  %386 = icmp slt i8 %385, 0
  %387 = sub i8 0, %385
  %388 = select i1 %386, i8 %387, i8 %385
  %389 = and i8 %388, 1
  %390 = zext i8 %389 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %390, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %391 = getelementptr inbounds i8, i8* %332, i64 8
  %392 = load i8, i8* %391, align 1
  %393 = icmp slt i8 %392, 0
  %394 = sub i8 0, %392
  %395 = select i1 %393, i8 %394, i8 %392
  %396 = and i8 %395, 1
  %397 = zext i8 %396 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %397, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %398 = getelementptr inbounds i8, i8* %332, i64 9
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  %401 = sub i8 0, %399
  %402 = select i1 %400, i8 %401, i8 %399
  %403 = and i8 %402, 1
  %404 = zext i8 %403 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %405 = getelementptr inbounds i8, i8* %332, i64 10
  %406 = load i8, i8* %405, align 1
  %407 = icmp slt i8 %406, 0
  %408 = sub i8 0, %406
  %409 = select i1 %407, i8 %408, i8 %406
  %410 = and i8 %409, 1
  %411 = zext i8 %410 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %411, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %412 = getelementptr inbounds i8, i8* %332, i64 11
  %413 = load i8, i8* %412, align 1
  %414 = icmp slt i8 %413, 0
  %415 = sub i8 0, %413
  %416 = select i1 %414, i8 %415, i8 %413
  %417 = and i8 %416, 1
  %418 = zext i8 %417 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %418, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %419 = getelementptr inbounds i8, i8* %332, i64 12
  %420 = load i8, i8* %419, align 1
  %421 = icmp slt i8 %420, 0
  %422 = sub i8 0, %420
  %423 = select i1 %421, i8 %422, i8 %420
  %424 = and i8 %423, 1
  %425 = zext i8 %424 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %425, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %426 = getelementptr inbounds i8, i8* %332, i64 13
  %427 = load i8, i8* %426, align 1
  %428 = icmp slt i8 %427, 0
  %429 = sub i8 0, %427
  %430 = select i1 %428, i8 %429, i8 %427
  %431 = and i8 %430, 1
  %432 = zext i8 %431 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %432, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %433 = getelementptr inbounds i8, i8* %332, i64 14
  %434 = load i8, i8* %433, align 1
  %435 = icmp slt i8 %434, 0
  %436 = sub i8 0, %434
  %437 = select i1 %435, i8 %436, i8 %434
  %438 = and i8 %437, 1
  %439 = zext i8 %438 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %439, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %440 = getelementptr inbounds i8, i8* %332, i64 15
  %441 = load i8, i8* %440, align 1
  %442 = icmp slt i8 %441, 0
  %443 = sub i8 0, %441
  %444 = select i1 %442, i8 %443, i8 %441
  %445 = and i8 %444, 1
  %446 = zext i8 %445 to i32
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  br label %465

447:                                              ; preds = %330, %461
  %448 = phi i64 [ %463, %461 ], [ 0, %330 ]
  %449 = getelementptr inbounds i8, i8* %332, i64 %448
  %450 = load i8, i8* %449, align 1
  %451 = icmp slt i8 %450, 0
  %452 = sub i8 0, %450
  %453 = select i1 %451, i8 %452, i8 %450
  %454 = sext i8 %453 to i32
  br label %455

455:                                              ; preds = %447, %455
  %456 = phi i32 [ %333, %447 ], [ %459, %455 ]
  %457 = lshr i32 %454, %456
  %458 = and i32 %457, 1
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %458, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %459 = add nsw i32 %456, -1
  %460 = icmp sgt i32 %459, 0
  br i1 %460, label %455, label %461

461:                                              ; preds = %455
  %462 = and i32 %454, 1
  call void @ec_enc_icdf(%struct.ec_ctx* %0, i32 %462, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %463 = add nuw nsw i64 %448, 1
  %464 = icmp eq i64 %463, 16
  br i1 %464, label %465, label %447

465:                                              ; preds = %461, %335, %325
  %466 = add nuw nsw i64 %326, 1
  %467 = icmp eq i64 %466, %313
  br i1 %467, label %468, label %325

468:                                              ; preds = %465, %282, %290, %311
  call void @silk_encode_signs(%struct.ec_ctx* %0, i8* %3, i32 %4, i32 %1, i32 %2, i32* nonnull %48) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4
  ret void

469:                                              ; preds = %1015, %169
  %470 = phi i64 [ 0, %169 ], [ %1020, %1015 ]
  %471 = phi i32 [ %166, %169 ], [ %1019, %1015 ]
  %472 = phi i64 [ %170, %169 ], [ %1021, %1015 ]
  %473 = getelementptr inbounds i32, i32* %50, i64 %470
  %474 = load i32, i32* %473, align 8
  %475 = icmp sgt i32 %474, 0
  br i1 %475, label %481, label %476

476:                                              ; preds = %469
  %477 = getelementptr inbounds i32, i32* %48, i64 %470
  %478 = load i32, i32* %477, align 8
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 1, i64 %479
  br label %481

481:                                              ; preds = %476, %469
  %482 = phi i8* [ %480, %476 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 1, i64 17), %469 ]
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i32
  %485 = add nuw nsw i32 %471, %484
  %486 = or i64 %470, 1
  %487 = getelementptr inbounds i32, i32* %50, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = icmp sgt i32 %488, 0
  br i1 %489, label %1015, label %1010

490:                                              ; preds = %1015, %162
  %491 = phi i32 [ undef, %162 ], [ %1019, %1015 ]
  %492 = phi i64 [ 0, %162 ], [ %1020, %1015 ]
  %493 = phi i32 [ %166, %162 ], [ %1019, %1015 ]
  %494 = icmp eq i64 %167, 0
  br i1 %494, label %509, label %495

495:                                              ; preds = %490
  %496 = getelementptr inbounds i32, i32* %50, i64 %492
  %497 = load i32, i32* %496, align 4
  %498 = icmp sgt i32 %497, 0
  br i1 %498, label %504, label %499

499:                                              ; preds = %495
  %500 = getelementptr inbounds i32, i32* %48, i64 %492
  %501 = load i32, i32* %500, align 4
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 1, i64 %502
  br label %504

504:                                              ; preds = %495, %499
  %505 = phi i8* [ %503, %499 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 1, i64 17), %495 ]
  %506 = load i8, i8* %505, align 1
  %507 = zext i8 %506 to i32
  %508 = add nuw nsw i32 %493, %507
  br label %509

509:                                              ; preds = %490, %504
  %510 = phi i32 [ %491, %490 ], [ %508, %504 ]
  %511 = icmp ult i32 %510, %163
  %512 = zext i1 %511 to i32
  %513 = select i1 %511, i32 %510, i32 %163
  %514 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %69, i64 2
  %515 = load i8, i8* %514, align 1
  %516 = zext i8 %515 to i32
  %517 = and i64 %117, 1
  %518 = icmp eq i32 %25, 1
  br i1 %518, label %542, label %519

519:                                              ; preds = %509
  %520 = sub nsw i64 %117, %517
  br label %521

521:                                              ; preds = %1002, %519
  %522 = phi i64 [ 0, %519 ], [ %1007, %1002 ]
  %523 = phi i32 [ %516, %519 ], [ %1006, %1002 ]
  %524 = phi i64 [ %520, %519 ], [ %1008, %1002 ]
  %525 = getelementptr inbounds i32, i32* %50, i64 %522
  %526 = load i32, i32* %525, align 8
  %527 = icmp sgt i32 %526, 0
  br i1 %527, label %533, label %528

528:                                              ; preds = %521
  %529 = getelementptr inbounds i32, i32* %48, i64 %522
  %530 = load i32, i32* %529, align 8
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 2, i64 %531
  br label %533

533:                                              ; preds = %528, %521
  %534 = phi i8* [ %532, %528 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 2, i64 17), %521 ]
  %535 = load i8, i8* %534, align 1
  %536 = zext i8 %535 to i32
  %537 = add nuw nsw i32 %523, %536
  %538 = or i64 %522, 1
  %539 = getelementptr inbounds i32, i32* %50, i64 %538
  %540 = load i32, i32* %539, align 4
  %541 = icmp sgt i32 %540, 0
  br i1 %541, label %1002, label %997

542:                                              ; preds = %1002, %509
  %543 = phi i32 [ undef, %509 ], [ %1006, %1002 ]
  %544 = phi i64 [ 0, %509 ], [ %1007, %1002 ]
  %545 = phi i32 [ %516, %509 ], [ %1006, %1002 ]
  %546 = icmp eq i64 %517, 0
  br i1 %546, label %561, label %547

547:                                              ; preds = %542
  %548 = getelementptr inbounds i32, i32* %50, i64 %544
  %549 = load i32, i32* %548, align 4
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %556, label %551

551:                                              ; preds = %547
  %552 = getelementptr inbounds i32, i32* %48, i64 %544
  %553 = load i32, i32* %552, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 2, i64 %554
  br label %556

556:                                              ; preds = %547, %551
  %557 = phi i8* [ %555, %551 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 2, i64 17), %547 ]
  %558 = load i8, i8* %557, align 1
  %559 = zext i8 %558 to i32
  %560 = add nuw nsw i32 %545, %559
  br label %561

561:                                              ; preds = %542, %556
  %562 = phi i32 [ %543, %542 ], [ %560, %556 ]
  %563 = icmp slt i32 %562, %513
  %564 = select i1 %563, i32 2, i32 %512
  %565 = select i1 %563, i32 %562, i32 %513
  %566 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %69, i64 3
  %567 = load i8, i8* %566, align 1
  %568 = zext i8 %567 to i32
  %569 = and i64 %117, 1
  %570 = icmp eq i32 %25, 1
  br i1 %570, label %594, label %571

571:                                              ; preds = %561
  %572 = sub nsw i64 %117, %569
  br label %573

573:                                              ; preds = %989, %571
  %574 = phi i64 [ 0, %571 ], [ %994, %989 ]
  %575 = phi i32 [ %568, %571 ], [ %993, %989 ]
  %576 = phi i64 [ %572, %571 ], [ %995, %989 ]
  %577 = getelementptr inbounds i32, i32* %50, i64 %574
  %578 = load i32, i32* %577, align 8
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %585, label %580

580:                                              ; preds = %573
  %581 = getelementptr inbounds i32, i32* %48, i64 %574
  %582 = load i32, i32* %581, align 8
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 3, i64 %583
  br label %585

585:                                              ; preds = %580, %573
  %586 = phi i8* [ %584, %580 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 3, i64 17), %573 ]
  %587 = load i8, i8* %586, align 1
  %588 = zext i8 %587 to i32
  %589 = add nuw nsw i32 %575, %588
  %590 = or i64 %574, 1
  %591 = getelementptr inbounds i32, i32* %50, i64 %590
  %592 = load i32, i32* %591, align 4
  %593 = icmp sgt i32 %592, 0
  br i1 %593, label %989, label %984

594:                                              ; preds = %989, %561
  %595 = phi i32 [ undef, %561 ], [ %993, %989 ]
  %596 = phi i64 [ 0, %561 ], [ %994, %989 ]
  %597 = phi i32 [ %568, %561 ], [ %993, %989 ]
  %598 = icmp eq i64 %569, 0
  br i1 %598, label %613, label %599

599:                                              ; preds = %594
  %600 = getelementptr inbounds i32, i32* %50, i64 %596
  %601 = load i32, i32* %600, align 4
  %602 = icmp sgt i32 %601, 0
  br i1 %602, label %608, label %603

603:                                              ; preds = %599
  %604 = getelementptr inbounds i32, i32* %48, i64 %596
  %605 = load i32, i32* %604, align 4
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 3, i64 %606
  br label %608

608:                                              ; preds = %599, %603
  %609 = phi i8* [ %607, %603 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 3, i64 17), %599 ]
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i32
  %612 = add nuw nsw i32 %597, %611
  br label %613

613:                                              ; preds = %594, %608
  %614 = phi i32 [ %595, %594 ], [ %612, %608 ]
  %615 = icmp slt i32 %614, %565
  %616 = select i1 %615, i32 3, i32 %564
  %617 = select i1 %615, i32 %614, i32 %565
  %618 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %69, i64 4
  %619 = load i8, i8* %618, align 1
  %620 = zext i8 %619 to i32
  %621 = and i64 %117, 1
  %622 = icmp eq i32 %25, 1
  br i1 %622, label %646, label %623

623:                                              ; preds = %613
  %624 = sub nsw i64 %117, %621
  br label %625

625:                                              ; preds = %976, %623
  %626 = phi i64 [ 0, %623 ], [ %981, %976 ]
  %627 = phi i32 [ %620, %623 ], [ %980, %976 ]
  %628 = phi i64 [ %624, %623 ], [ %982, %976 ]
  %629 = getelementptr inbounds i32, i32* %50, i64 %626
  %630 = load i32, i32* %629, align 8
  %631 = icmp sgt i32 %630, 0
  br i1 %631, label %637, label %632

632:                                              ; preds = %625
  %633 = getelementptr inbounds i32, i32* %48, i64 %626
  %634 = load i32, i32* %633, align 8
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 4, i64 %635
  br label %637

637:                                              ; preds = %632, %625
  %638 = phi i8* [ %636, %632 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 4, i64 17), %625 ]
  %639 = load i8, i8* %638, align 1
  %640 = zext i8 %639 to i32
  %641 = add nuw nsw i32 %627, %640
  %642 = or i64 %626, 1
  %643 = getelementptr inbounds i32, i32* %50, i64 %642
  %644 = load i32, i32* %643, align 4
  %645 = icmp sgt i32 %644, 0
  br i1 %645, label %976, label %971

646:                                              ; preds = %976, %613
  %647 = phi i32 [ undef, %613 ], [ %980, %976 ]
  %648 = phi i64 [ 0, %613 ], [ %981, %976 ]
  %649 = phi i32 [ %620, %613 ], [ %980, %976 ]
  %650 = icmp eq i64 %621, 0
  br i1 %650, label %665, label %651

651:                                              ; preds = %646
  %652 = getelementptr inbounds i32, i32* %50, i64 %648
  %653 = load i32, i32* %652, align 4
  %654 = icmp sgt i32 %653, 0
  br i1 %654, label %660, label %655

655:                                              ; preds = %651
  %656 = getelementptr inbounds i32, i32* %48, i64 %648
  %657 = load i32, i32* %656, align 4
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 4, i64 %658
  br label %660

660:                                              ; preds = %651, %655
  %661 = phi i8* [ %659, %655 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 4, i64 17), %651 ]
  %662 = load i8, i8* %661, align 1
  %663 = zext i8 %662 to i32
  %664 = add nuw nsw i32 %649, %663
  br label %665

665:                                              ; preds = %646, %660
  %666 = phi i32 [ %647, %646 ], [ %664, %660 ]
  %667 = icmp slt i32 %666, %617
  %668 = select i1 %667, i32 4, i32 %616
  %669 = select i1 %667, i32 %666, i32 %617
  %670 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %69, i64 5
  %671 = load i8, i8* %670, align 1
  %672 = zext i8 %671 to i32
  %673 = and i64 %117, 1
  %674 = icmp eq i32 %25, 1
  br i1 %674, label %698, label %675

675:                                              ; preds = %665
  %676 = sub nsw i64 %117, %673
  br label %677

677:                                              ; preds = %963, %675
  %678 = phi i64 [ 0, %675 ], [ %968, %963 ]
  %679 = phi i32 [ %672, %675 ], [ %967, %963 ]
  %680 = phi i64 [ %676, %675 ], [ %969, %963 ]
  %681 = getelementptr inbounds i32, i32* %50, i64 %678
  %682 = load i32, i32* %681, align 8
  %683 = icmp sgt i32 %682, 0
  br i1 %683, label %689, label %684

684:                                              ; preds = %677
  %685 = getelementptr inbounds i32, i32* %48, i64 %678
  %686 = load i32, i32* %685, align 8
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 5, i64 %687
  br label %689

689:                                              ; preds = %684, %677
  %690 = phi i8* [ %688, %684 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 5, i64 17), %677 ]
  %691 = load i8, i8* %690, align 1
  %692 = zext i8 %691 to i32
  %693 = add nuw nsw i32 %679, %692
  %694 = or i64 %678, 1
  %695 = getelementptr inbounds i32, i32* %50, i64 %694
  %696 = load i32, i32* %695, align 4
  %697 = icmp sgt i32 %696, 0
  br i1 %697, label %963, label %958

698:                                              ; preds = %963, %665
  %699 = phi i32 [ undef, %665 ], [ %967, %963 ]
  %700 = phi i64 [ 0, %665 ], [ %968, %963 ]
  %701 = phi i32 [ %672, %665 ], [ %967, %963 ]
  %702 = icmp eq i64 %673, 0
  br i1 %702, label %717, label %703

703:                                              ; preds = %698
  %704 = getelementptr inbounds i32, i32* %50, i64 %700
  %705 = load i32, i32* %704, align 4
  %706 = icmp sgt i32 %705, 0
  br i1 %706, label %712, label %707

707:                                              ; preds = %703
  %708 = getelementptr inbounds i32, i32* %48, i64 %700
  %709 = load i32, i32* %708, align 4
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 5, i64 %710
  br label %712

712:                                              ; preds = %703, %707
  %713 = phi i8* [ %711, %707 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 5, i64 17), %703 ]
  %714 = load i8, i8* %713, align 1
  %715 = zext i8 %714 to i32
  %716 = add nuw nsw i32 %701, %715
  br label %717

717:                                              ; preds = %698, %712
  %718 = phi i32 [ %699, %698 ], [ %716, %712 ]
  %719 = icmp slt i32 %718, %669
  %720 = select i1 %719, i32 5, i32 %668
  %721 = select i1 %719, i32 %718, i32 %669
  %722 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %69, i64 6
  %723 = load i8, i8* %722, align 1
  %724 = zext i8 %723 to i32
  %725 = and i64 %117, 1
  %726 = icmp eq i32 %25, 1
  br i1 %726, label %750, label %727

727:                                              ; preds = %717
  %728 = sub nsw i64 %117, %725
  br label %729

729:                                              ; preds = %950, %727
  %730 = phi i64 [ 0, %727 ], [ %955, %950 ]
  %731 = phi i32 [ %724, %727 ], [ %954, %950 ]
  %732 = phi i64 [ %728, %727 ], [ %956, %950 ]
  %733 = getelementptr inbounds i32, i32* %50, i64 %730
  %734 = load i32, i32* %733, align 8
  %735 = icmp sgt i32 %734, 0
  br i1 %735, label %741, label %736

736:                                              ; preds = %729
  %737 = getelementptr inbounds i32, i32* %48, i64 %730
  %738 = load i32, i32* %737, align 8
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 6, i64 %739
  br label %741

741:                                              ; preds = %736, %729
  %742 = phi i8* [ %740, %736 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 6, i64 17), %729 ]
  %743 = load i8, i8* %742, align 1
  %744 = zext i8 %743 to i32
  %745 = add nuw nsw i32 %731, %744
  %746 = or i64 %730, 1
  %747 = getelementptr inbounds i32, i32* %50, i64 %746
  %748 = load i32, i32* %747, align 4
  %749 = icmp sgt i32 %748, 0
  br i1 %749, label %950, label %945

750:                                              ; preds = %950, %717
  %751 = phi i32 [ undef, %717 ], [ %954, %950 ]
  %752 = phi i64 [ 0, %717 ], [ %955, %950 ]
  %753 = phi i32 [ %724, %717 ], [ %954, %950 ]
  %754 = icmp eq i64 %725, 0
  br i1 %754, label %769, label %755

755:                                              ; preds = %750
  %756 = getelementptr inbounds i32, i32* %50, i64 %752
  %757 = load i32, i32* %756, align 4
  %758 = icmp sgt i32 %757, 0
  br i1 %758, label %764, label %759

759:                                              ; preds = %755
  %760 = getelementptr inbounds i32, i32* %48, i64 %752
  %761 = load i32, i32* %760, align 4
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 6, i64 %762
  br label %764

764:                                              ; preds = %755, %759
  %765 = phi i8* [ %763, %759 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 6, i64 17), %755 ]
  %766 = load i8, i8* %765, align 1
  %767 = zext i8 %766 to i32
  %768 = add nuw nsw i32 %753, %767
  br label %769

769:                                              ; preds = %750, %764
  %770 = phi i32 [ %751, %750 ], [ %768, %764 ]
  %771 = icmp slt i32 %770, %721
  %772 = select i1 %771, i32 6, i32 %720
  %773 = select i1 %771, i32 %770, i32 %721
  %774 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %69, i64 7
  %775 = load i8, i8* %774, align 1
  %776 = zext i8 %775 to i32
  %777 = and i64 %117, 1
  %778 = icmp eq i32 %25, 1
  br i1 %778, label %802, label %779

779:                                              ; preds = %769
  %780 = sub nsw i64 %117, %777
  br label %781

781:                                              ; preds = %937, %779
  %782 = phi i64 [ 0, %779 ], [ %942, %937 ]
  %783 = phi i32 [ %776, %779 ], [ %941, %937 ]
  %784 = phi i64 [ %780, %779 ], [ %943, %937 ]
  %785 = getelementptr inbounds i32, i32* %50, i64 %782
  %786 = load i32, i32* %785, align 8
  %787 = icmp sgt i32 %786, 0
  br i1 %787, label %793, label %788

788:                                              ; preds = %781
  %789 = getelementptr inbounds i32, i32* %48, i64 %782
  %790 = load i32, i32* %789, align 8
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 7, i64 %791
  br label %793

793:                                              ; preds = %788, %781
  %794 = phi i8* [ %792, %788 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 7, i64 17), %781 ]
  %795 = load i8, i8* %794, align 1
  %796 = zext i8 %795 to i32
  %797 = add nuw nsw i32 %783, %796
  %798 = or i64 %782, 1
  %799 = getelementptr inbounds i32, i32* %50, i64 %798
  %800 = load i32, i32* %799, align 4
  %801 = icmp sgt i32 %800, 0
  br i1 %801, label %937, label %932

802:                                              ; preds = %937, %769
  %803 = phi i32 [ undef, %769 ], [ %941, %937 ]
  %804 = phi i64 [ 0, %769 ], [ %942, %937 ]
  %805 = phi i32 [ %776, %769 ], [ %941, %937 ]
  %806 = icmp eq i64 %777, 0
  br i1 %806, label %821, label %807

807:                                              ; preds = %802
  %808 = getelementptr inbounds i32, i32* %50, i64 %804
  %809 = load i32, i32* %808, align 4
  %810 = icmp sgt i32 %809, 0
  br i1 %810, label %816, label %811

811:                                              ; preds = %807
  %812 = getelementptr inbounds i32, i32* %48, i64 %804
  %813 = load i32, i32* %812, align 4
  %814 = sext i32 %813 to i64
  %815 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 7, i64 %814
  br label %816

816:                                              ; preds = %807, %811
  %817 = phi i8* [ %815, %811 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 7, i64 17), %807 ]
  %818 = load i8, i8* %817, align 1
  %819 = zext i8 %818 to i32
  %820 = add nuw nsw i32 %805, %819
  br label %821

821:                                              ; preds = %802, %816
  %822 = phi i32 [ %803, %802 ], [ %820, %816 ]
  %823 = icmp slt i32 %822, %773
  %824 = select i1 %823, i32 7, i32 %772
  %825 = select i1 %823, i32 %822, i32 %773
  %826 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_BITS_Q5, i64 0, i64 %69, i64 8
  %827 = load i8, i8* %826, align 1
  %828 = zext i8 %827 to i32
  %829 = and i64 %117, 1
  %830 = icmp eq i32 %25, 1
  br i1 %830, label %854, label %831

831:                                              ; preds = %821
  %832 = sub nsw i64 %117, %829
  br label %833

833:                                              ; preds = %924, %831
  %834 = phi i64 [ 0, %831 ], [ %929, %924 ]
  %835 = phi i32 [ %828, %831 ], [ %928, %924 ]
  %836 = phi i64 [ %832, %831 ], [ %930, %924 ]
  %837 = getelementptr inbounds i32, i32* %50, i64 %834
  %838 = load i32, i32* %837, align 8
  %839 = icmp sgt i32 %838, 0
  br i1 %839, label %845, label %840

840:                                              ; preds = %833
  %841 = getelementptr inbounds i32, i32* %48, i64 %834
  %842 = load i32, i32* %841, align 8
  %843 = sext i32 %842 to i64
  %844 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 8, i64 %843
  br label %845

845:                                              ; preds = %840, %833
  %846 = phi i8* [ %844, %840 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 8, i64 17), %833 ]
  %847 = load i8, i8* %846, align 1
  %848 = zext i8 %847 to i32
  %849 = add nuw nsw i32 %835, %848
  %850 = or i64 %834, 1
  %851 = getelementptr inbounds i32, i32* %50, i64 %850
  %852 = load i32, i32* %851, align 4
  %853 = icmp sgt i32 %852, 0
  br i1 %853, label %924, label %919

854:                                              ; preds = %924, %821
  %855 = phi i32 [ undef, %821 ], [ %928, %924 ]
  %856 = phi i64 [ 0, %821 ], [ %929, %924 ]
  %857 = phi i32 [ %828, %821 ], [ %928, %924 ]
  %858 = icmp eq i64 %829, 0
  br i1 %858, label %873, label %859

859:                                              ; preds = %854
  %860 = getelementptr inbounds i32, i32* %50, i64 %856
  %861 = load i32, i32* %860, align 4
  %862 = icmp sgt i32 %861, 0
  br i1 %862, label %868, label %863

863:                                              ; preds = %859
  %864 = getelementptr inbounds i32, i32* %48, i64 %856
  %865 = load i32, i32* %864, align 4
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 8, i64 %866
  br label %868

868:                                              ; preds = %859, %863
  %869 = phi i8* [ %867, %863 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 8, i64 17), %859 ]
  %870 = load i8, i8* %869, align 1
  %871 = zext i8 %870 to i32
  %872 = add nuw nsw i32 %857, %871
  br label %873

873:                                              ; preds = %854, %868
  %874 = phi i32 [ %855, %854 ], [ %872, %868 ]
  %875 = icmp slt i32 %874, %825
  %876 = select i1 %875, i32 8, i32 %824
  br label %282

877:                                              ; preds = %219
  %878 = load i32, i32* %185, align 4
  %879 = load i32, i32* %186, align 4
  %880 = add nsw i32 %879, %878
  %881 = icmp sgt i32 %880, %57
  br i1 %881, label %224, label %882

882:                                              ; preds = %877
  %883 = load i32, i32* %187, align 4
  %884 = load i32, i32* %188, align 4
  %885 = add nsw i32 %884, %883
  %886 = icmp sgt i32 %885, %57
  br i1 %886, label %224, label %887

887:                                              ; preds = %882
  store i32 %885, i32* %11, align 4
  %888 = load i32, i32* %189, align 4
  %889 = load i32, i32* %190, align 4
  %890 = add nsw i32 %889, %888
  %891 = icmp sgt i32 %890, %57
  br i1 %891, label %224, label %892

892:                                              ; preds = %887
  store i32 %890, i32* %12, align 16
  %893 = load i32, i32* %191, align 4
  %894 = load i32, i32* %192, align 4
  %895 = add nsw i32 %894, %893
  %896 = icmp sgt i32 %895, %57
  br i1 %896, label %224, label %897

897:                                              ; preds = %892
  store i32 %895, i32* %13, align 4
  %898 = load i32, i32* %193, align 4
  %899 = load i32, i32* %194, align 4
  %900 = add nsw i32 %899, %898
  %901 = icmp sgt i32 %900, %57
  br i1 %901, label %224, label %902

902:                                              ; preds = %897
  store i32 %900, i32* %14, align 8
  %903 = load i32, i32* %195, align 4
  %904 = load i32, i32* %196, align 4
  %905 = add nsw i32 %904, %903
  %906 = icmp sgt i32 %905, %57
  br i1 %906, label %224, label %907

907:                                              ; preds = %902
  store i32 %905, i32* %15, align 4
  br label %224

908:                                              ; preds = %233
  %909 = load i32, i32* %12, align 16
  %910 = load i32, i32* %13, align 4
  %911 = add nsw i32 %910, %909
  %912 = icmp sgt i32 %911, %59
  br i1 %912, label %237, label %913

913:                                              ; preds = %908
  %914 = load i32, i32* %14, align 8
  %915 = load i32, i32* %15, align 4
  %916 = add nsw i32 %915, %914
  %917 = icmp sgt i32 %916, %59
  br i1 %917, label %237, label %918

918:                                              ; preds = %913
  store i32 %916, i32* %11, align 4
  br label %237

919:                                              ; preds = %845
  %920 = getelementptr inbounds i32, i32* %48, i64 %850
  %921 = load i32, i32* %920, align 4
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 8, i64 %922
  br label %924

924:                                              ; preds = %919, %845
  %925 = phi i8* [ %923, %919 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 8, i64 17), %845 ]
  %926 = load i8, i8* %925, align 1
  %927 = zext i8 %926 to i32
  %928 = add nuw nsw i32 %849, %927
  %929 = add nuw nsw i64 %834, 2
  %930 = add i64 %836, -2
  %931 = icmp eq i64 %930, 0
  br i1 %931, label %854, label %833

932:                                              ; preds = %793
  %933 = getelementptr inbounds i32, i32* %48, i64 %798
  %934 = load i32, i32* %933, align 4
  %935 = sext i32 %934 to i64
  %936 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 7, i64 %935
  br label %937

937:                                              ; preds = %932, %793
  %938 = phi i8* [ %936, %932 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 7, i64 17), %793 ]
  %939 = load i8, i8* %938, align 1
  %940 = zext i8 %939 to i32
  %941 = add nuw nsw i32 %797, %940
  %942 = add nuw nsw i64 %782, 2
  %943 = add i64 %784, -2
  %944 = icmp eq i64 %943, 0
  br i1 %944, label %802, label %781

945:                                              ; preds = %741
  %946 = getelementptr inbounds i32, i32* %48, i64 %746
  %947 = load i32, i32* %946, align 4
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 6, i64 %948
  br label %950

950:                                              ; preds = %945, %741
  %951 = phi i8* [ %949, %945 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 6, i64 17), %741 ]
  %952 = load i8, i8* %951, align 1
  %953 = zext i8 %952 to i32
  %954 = add nuw nsw i32 %745, %953
  %955 = add nuw nsw i64 %730, 2
  %956 = add i64 %732, -2
  %957 = icmp eq i64 %956, 0
  br i1 %957, label %750, label %729

958:                                              ; preds = %689
  %959 = getelementptr inbounds i32, i32* %48, i64 %694
  %960 = load i32, i32* %959, align 4
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 5, i64 %961
  br label %963

963:                                              ; preds = %958, %689
  %964 = phi i8* [ %962, %958 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 5, i64 17), %689 ]
  %965 = load i8, i8* %964, align 1
  %966 = zext i8 %965 to i32
  %967 = add nuw nsw i32 %693, %966
  %968 = add nuw nsw i64 %678, 2
  %969 = add i64 %680, -2
  %970 = icmp eq i64 %969, 0
  br i1 %970, label %698, label %677

971:                                              ; preds = %637
  %972 = getelementptr inbounds i32, i32* %48, i64 %642
  %973 = load i32, i32* %972, align 4
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 4, i64 %974
  br label %976

976:                                              ; preds = %971, %637
  %977 = phi i8* [ %975, %971 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 4, i64 17), %637 ]
  %978 = load i8, i8* %977, align 1
  %979 = zext i8 %978 to i32
  %980 = add nuw nsw i32 %641, %979
  %981 = add nuw nsw i64 %626, 2
  %982 = add i64 %628, -2
  %983 = icmp eq i64 %982, 0
  br i1 %983, label %646, label %625

984:                                              ; preds = %585
  %985 = getelementptr inbounds i32, i32* %48, i64 %590
  %986 = load i32, i32* %985, align 4
  %987 = sext i32 %986 to i64
  %988 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 3, i64 %987
  br label %989

989:                                              ; preds = %984, %585
  %990 = phi i8* [ %988, %984 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 3, i64 17), %585 ]
  %991 = load i8, i8* %990, align 1
  %992 = zext i8 %991 to i32
  %993 = add nuw nsw i32 %589, %992
  %994 = add nuw nsw i64 %574, 2
  %995 = add i64 %576, -2
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %594, label %573

997:                                              ; preds = %533
  %998 = getelementptr inbounds i32, i32* %48, i64 %538
  %999 = load i32, i32* %998, align 4
  %1000 = sext i32 %999 to i64
  %1001 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 2, i64 %1000
  br label %1002

1002:                                             ; preds = %997, %533
  %1003 = phi i8* [ %1001, %997 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 2, i64 17), %533 ]
  %1004 = load i8, i8* %1003, align 1
  %1005 = zext i8 %1004 to i32
  %1006 = add nuw nsw i32 %537, %1005
  %1007 = add nuw nsw i64 %522, 2
  %1008 = add i64 %524, -2
  %1009 = icmp eq i64 %1008, 0
  br i1 %1009, label %542, label %521

1010:                                             ; preds = %481
  %1011 = getelementptr inbounds i32, i32* %48, i64 %486
  %1012 = load i32, i32* %1011, align 4
  %1013 = sext i32 %1012 to i64
  %1014 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 1, i64 %1013
  br label %1015

1015:                                             ; preds = %1010, %481
  %1016 = phi i8* [ %1014, %1010 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 1, i64 17), %481 ]
  %1017 = load i8, i8* %1016, align 1
  %1018 = zext i8 %1017 to i32
  %1019 = add nuw nsw i32 %485, %1018
  %1020 = add nuw nsw i64 %470, 2
  %1021 = add i64 %472, -2
  %1022 = icmp eq i64 %1021, 0
  br i1 %1022, label %490, label %469

1023:                                             ; preds = %134
  %1024 = getelementptr inbounds i32, i32* %48, i64 %139
  %1025 = load i32, i32* %1024, align 4
  %1026 = sext i32 %1025 to i64
  %1027 = getelementptr inbounds [9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 0, i64 %1026
  br label %1028

1028:                                             ; preds = %1023, %134
  %1029 = phi i8* [ %1027, %1023 ], [ getelementptr inbounds ([9 x [18 x i8]], [9 x [18 x i8]]* @silk_pulses_per_block_BITS_Q5, i64 0, i64 0, i64 17), %134 ]
  %1030 = load i8, i8* %1029, align 1
  %1031 = zext i8 %1030 to i32
  %1032 = add nuw nsw i32 %138, %1031
  %1033 = add nuw nsw i64 %123, 2
  %1034 = add i64 %125, -2
  %1035 = icmp eq i64 %1034, 0
  br i1 %1035, label %143, label %122
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #2

declare void @ec_enc_icdf(%struct.ec_ctx*, i32, i8*, i32) local_unnamed_addr #3

declare void @silk_shell_encoder(%struct.ec_ctx*, i32*) local_unnamed_addr #3

declare void @silk_encode_signs(%struct.ec_ctx*, i8*, i32, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
