; ModuleID = '../../components/webcrypto/algorithms/aes_kw.cc'
source_filename = "../../components/webcrypto/algorithms/aes_kw.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webcrypto::AlgorithmImplementation" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webcrypto::AesAlgorithm" = type { %"class.webcrypto::AlgorithmImplementation", i32, %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webcrypto::(anonymous namespace)::AesKwImplementation" = type { %"class.webcrypto::AesAlgorithm" }
%"class.webcrypto::Status" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.blink::WebCryptoAlgorithm" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr.10" }
%"class.blink::WebPrivatePtr.10" = type { i8* }
%"class.webcrypto::CryptoData" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i8* }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%struct.aes_key_st = type { [60 x i32], i32 }
%"class.webcrypto::GenerateKeyResult" = type opaque
%"class.blink::WebCryptoKeyAlgorithm" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN9webcrypto12AesAlgorithmD2Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZTVN9webcrypto12_GLOBAL__N_119AesKwImplementationE = internal unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webcrypto::AesAlgorithm"*)* @_ZN9webcrypto12AesAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::AesKwImplementation"*)* @_ZN9webcrypto12_GLOBAL__N_119AesKwImplementationD0Ev to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::AesKwImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12_GLOBAL__N_119AesKwImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::AesKwImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12_GLOBAL__N_119AesKwImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.webcrypto::CryptoData"*, i8*)* @_ZNK9webcrypto23AlgorithmImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataESA_Pb to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.webcrypto::GenerateKeyResult"*)* @_ZNK9webcrypto12AesAlgorithm11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, i1, i32, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyEbjPNSt3__16vectorIhNS8_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoAlgorithm"*, i8*, i32*)* @_ZNK9webcrypto12AesAlgorithm12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto12AesAlgorithm9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS1_18WebCryptoAlgorithmEbiPNS1_12WebCryptoKeyE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, i32, %"class.blink::WebCryptoKey"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12AesAlgorithm9ExportKeyEN5blink18WebCryptoKeyFormatERKNS1_12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoKeyAlgorithm"*, i32, i1, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto12AesAlgorithm22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS1_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS1_12WebCryptoKeyE to i8*)] }, align 8
@_ZTVN9webcrypto12AesAlgorithmE = external unnamed_addr constant { [15 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"Encrypt\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"../../components/webcrypto/algorithms/aes_kw.cc\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Decrypt\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto25CreateAesKwImplementationEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = tail call i8* @_Znwm(i64 40) #8
  %3 = bitcast i8* %2 to %"class.webcrypto::AesAlgorithm"*
  %4 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 2, i8* %6, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  store i16 22347, i16* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 2
  store i8 0, i8* %8, align 2
  call void @_ZN9webcrypto12AesAlgorithmC2EiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webcrypto::AesAlgorithm"* nonnull %3, i32 96, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1) #9
  %9 = load i8, i8* %6, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #8
  br label %14

14:                                               ; preds = %11, %0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  %15 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_119AesKwImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = bitcast i8* %2 to %"class.webcrypto::AlgorithmImplementation"*
  ret %"class.webcrypto::AlgorithmImplementation"* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN9webcrypto12AesAlgorithmC2EiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webcrypto::AesAlgorithm"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9webcrypto12AesAlgorithmD2Ev(%"class.webcrypto::AesAlgorithm"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::AesAlgorithm", %"class.webcrypto::AesAlgorithm"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN9webcrypto12AesAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webcrypto::AesAlgorithm", %"class.webcrypto::AesAlgorithm"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.webcrypto::AesAlgorithm", %"class.webcrypto::AesAlgorithm"* %0, i64 0, i32 0
  tail call void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"* %12) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_119AesKwImplementationD0Ev(%"class.webcrypto::(anonymous namespace)::AesKwImplementation"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AesKwImplementation", %"class.webcrypto::(anonymous namespace)::AesKwImplementation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN9webcrypto12AesAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AesKwImplementation", %"class.webcrypto::(anonymous namespace)::AesKwImplementation"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AesKwImplementation", %"class.webcrypto::(anonymous namespace)::AesKwImplementation"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"* %12) #9
  %13 = bitcast %"class.webcrypto::(anonymous namespace)::AesKwImplementation"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_119AesKwImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::AesKwImplementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* nocapture readnone dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %struct.aes_key_st, align 4
  %10 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i32 35) #9
  %12 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %12, %"class.base::Location"* nonnull dereferenceable(32) %8) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9
  %13 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %14, 16
  br i1 %15, label %16, label %17

16:                                               ; preds = %6
  call void @_ZN9webcrypto6Status17ErrorDataTooSmallEv(%"class.webcrypto::Status"* sret %0) #9
  br label %67

17:                                               ; preds = %6
  %18 = and i32 %14, 7
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  call void @_ZN9webcrypto6Status27ErrorInvalidAesKwDataLengthEv(%"class.webcrypto::Status"* sret %0) #9
  br label %67

21:                                               ; preds = %17
  %22 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %3) #9
  %23 = bitcast %struct.aes_key_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 244, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -86, i64 244, i1 false)
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = ptrtoint i8* %25 to i64
  %30 = sub i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = shl i32 %31, 3
  %33 = call i32 @AES_set_encrypt_key(i8* %25, i32 %32, %struct.aes_key_st* nonnull %9) #9
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %21
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #9
  br label %66

36:                                               ; preds = %21
  %37 = load i32, i32* %13, align 8
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector"* %5 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = icmp ugt i64 %39, %45
  %47 = inttoptr i64 %44 to i8*
  br i1 %46, label %48, label %52

48:                                               ; preds = %36
  %49 = sub i64 %39, %45
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %5, i64 %49) #9
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  br label %56

52:                                               ; preds = %36
  %53 = icmp ult i64 %39, %45
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = getelementptr inbounds i8, i8* %47, i64 %39
  store i8* %55, i8** %40, align 8
  br label %56

56:                                               ; preds = %48, %52, %54
  %57 = phi i8* [ %51, %48 ], [ %47, %52 ], [ %47, %54 ]
  %58 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %13, align 8
  %61 = zext i32 %60 to i64
  %62 = call i32 @AES_wrap_key(%struct.aes_key_st* nonnull %9, i8* null, i8* %57, i8* %59, i64 %61) #9
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %56
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #9
  br label %66

65:                                               ; preds = %56
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #9
  br label %66

66:                                               ; preds = %64, %65, %35
  call void @llvm.lifetime.end.p0i8(i64 244, i8* nonnull %23) #9
  br label %67

67:                                               ; preds = %66, %20, %16
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_119AesKwImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::AesKwImplementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* nocapture readnone dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %struct.aes_key_st, align 4
  %10 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i32 73) #9
  %12 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %12, %"class.base::Location"* nonnull dereferenceable(32) %8) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9
  %13 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %14, 24
  br i1 %15, label %16, label %17

16:                                               ; preds = %6
  call void @_ZN9webcrypto6Status17ErrorDataTooSmallEv(%"class.webcrypto::Status"* sret %0) #9
  br label %67

17:                                               ; preds = %6
  %18 = and i32 %14, 7
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  call void @_ZN9webcrypto6Status27ErrorInvalidAesKwDataLengthEv(%"class.webcrypto::Status"* sret %0) #9
  br label %67

21:                                               ; preds = %17
  %22 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %3) #9
  %23 = bitcast %struct.aes_key_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 244, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -86, i64 244, i1 false)
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = ptrtoint i8* %25 to i64
  %30 = sub i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = shl i32 %31, 3
  %33 = call i32 @AES_set_decrypt_key(i8* %25, i32 %32, %struct.aes_key_st* nonnull %9) #9
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %21
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #9
  br label %66

36:                                               ; preds = %21
  %37 = load i32, i32* %13, align 8
  %38 = add i32 %37, -8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector"* %5 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = icmp ult i64 %45, %39
  %47 = inttoptr i64 %44 to i8*
  br i1 %46, label %48, label %52

48:                                               ; preds = %36
  %49 = sub i64 %39, %45
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %5, i64 %49) #9
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  br label %56

52:                                               ; preds = %36
  %53 = icmp ugt i64 %45, %39
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = getelementptr inbounds i8, i8* %47, i64 %39
  store i8* %55, i8** %40, align 8
  br label %56

56:                                               ; preds = %48, %52, %54
  %57 = phi i8* [ %51, %48 ], [ %47, %52 ], [ %47, %54 ]
  %58 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %13, align 8
  %61 = zext i32 %60 to i64
  %62 = call i32 @AES_unwrap_key(%struct.aes_key_st* nonnull %9, i8* null, i8* %57, i8* %59, i64 %61) #9
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %56
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #9
  br label %66

65:                                               ; preds = %56
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #9
  br label %66

66:                                               ; preds = %65, %64, %35
  call void @llvm.lifetime.end.p0i8(i64 244, i8* nonnull %23) #9
  br label %67

67:                                               ; preds = %66, %20, %16
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  ret void
}

declare void @_ZNK9webcrypto23AlgorithmImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #3

declare void @_ZNK9webcrypto23AlgorithmImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataESA_Pb(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.webcrypto::CryptoData"* dereferenceable(16), i8*) unnamed_addr #3

declare void @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.webcrypto::GenerateKeyResult"*) unnamed_addr #3

declare void @_ZNK9webcrypto23AlgorithmImplementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyEbjPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), i1 zeroext, i32, %"class.std::__1::vector"*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i8*, i32*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS1_18WebCryptoAlgorithmEbiPNS1_12WebCryptoKeyE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.blink::WebCryptoKey"*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm9ExportKeyEN5blink18WebCryptoKeyFormatERKNS1_12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, i32, %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.std::__1::vector"*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS1_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS1_12WebCryptoKeyE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoKeyAlgorithm"*, i32, i1 zeroext, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoKey"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"*) unnamed_addr #6

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status17ErrorDataTooSmallEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status27ErrorInvalidAesKwDataLengthEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @AES_set_encrypt_key(i8*, i32, %struct.aes_key_st*) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare i32 @AES_wrap_key(%struct.aes_key_st*, i8*, i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #3

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #10
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #8
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #8
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #3

declare i32 @AES_set_decrypt_key(i8*, i32, %struct.aes_key_st*) local_unnamed_addr #3

declare i32 @AES_unwrap_key(%struct.aes_key_st*, i8*, i8*, i8*, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
