; ModuleID = '../../v8/src/ic/handler-configuration.cc'
source_filename = "../../v8/src/ic/handler-configuration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.816", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.829", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.839", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.850", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.968"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.976", i32, i8, i8, i32, i32, %"class.std::__1::vector.982", %"class.std::__1::vector.982", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.989", i64, %"class.std::__1::unordered_map.990", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1046", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1084", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1118", %"class.std::__1::vector.1122", %"class.std::__1::vector.1122", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1051", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1067", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1051" = type { %"struct.std::__1::__atomic_base.1052" }
%"struct.std::__1::__atomic_base.1052" = type { %"struct.std::__1::__cxx_atomic_impl.1053" }
%"struct.std::__1::__cxx_atomic_impl.1053" = type { %"struct.std::__1::__cxx_atomic_base_impl.1054" }
%"struct.std::__1::__cxx_atomic_base_impl.1054" = type { i32 }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.809" }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { i64**, i64**, %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { i64** }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.809", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1067" = type { %"class.std::__1::__vector_base.1068" }
%"class.std::__1::__vector_base.1068" = type { %"struct.std::__1::pair.1069"*, %"struct.std::__1::pair.1069"*, %"class.std::__1::__compressed_pair.1070" }
%"struct.std::__1::pair.1069" = type opaque
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.std::__1::pair.1069"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.745", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.751", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.753", %"class.std::__1::vector.759", %"class.std::__1::unique_ptr.766", %"class.std::__1::vector.773", %"class.std::__1::unique_ptr.780", i64, %"class.std::__1::vector.786", %"class.std::__1::vector.794", %"class.std::__1::vector.802", i8, i8, i32 }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.761" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::NodeSpace.769"* }
%"class.v8::internal::GlobalHandles::NodeSpace.769" = type opaque
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.775" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"struct.std::__1::pair.788"*, %"struct.std::__1::pair.788"*, %"class.std::__1::__compressed_pair.789" }
%"struct.std::__1::pair.788" = type opaque
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"struct.std::__1::pair.788"* }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"struct.std::__1::pair.796"*, %"struct.std::__1::pair.796"*, %"class.std::__1::__compressed_pair.797" }
%"struct.std::__1::pair.796" = type opaque
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::pair.796"* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.804" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.809", %"class.std::__1::vector.816" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.823" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { i32*, i32*, %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.829" = type { %"struct.std::__1::__atomic_base.830" }
%"struct.std::__1::__atomic_base.830" = type { %"struct.std::__1::__cxx_atomic_impl.831" }
%"struct.std::__1::__cxx_atomic_impl.831" = type { %"struct.std::__1::__cxx_atomic_base_impl.832" }
%"struct.std::__1::__cxx_atomic_base_impl.832" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.839" = type { %"struct.std::__1::__atomic_base.840" }
%"struct.std::__1::__atomic_base.840" = type { %"struct.std::__1::__cxx_atomic_impl.841" }
%"struct.std::__1::__cxx_atomic_impl.841" = type { %"struct.std::__1::__cxx_atomic_base_impl.842" }
%"struct.std::__1::__cxx_atomic_base_impl.842" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.846 }
%union.anon.846 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.850" = type { %"class.std::__1::__hash_table.851" }
%"class.std::__1::__hash_table.851" = type <{ %"class.std::__1::unique_ptr.852", %"class.std::__1::__compressed_pair.862", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.870", [4 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854", %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.855"** }
%"struct.std::__1::__hash_node_base.855" = type { %"struct.std::__1::__hash_node_base.855"* }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.std::__1::__bucket_list_deallocator.857" }
%"class.std::__1::__bucket_list_deallocator.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.855" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.876", %"class.v8::internal::Handle.882", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.883", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.884", %"class.std::__1::vector.890", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.910", %"class.std::__1::vector.916", %"struct.std::__1::pair.924" }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { %"class.std::__1::unique_ptr.892"*, %"class.std::__1::unique_ptr.892"*, %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::unique_ptr.892" = type opaque
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::unique_ptr.892"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"struct.std::__1::pair.918"*, %"struct.std::__1::pair.918"*, %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::pair.918" = type opaque
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::pair.918"* }
%"struct.std::__1::pair.924" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.928", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.949", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.963" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"class.std::__1::__compressed_pair.958" }
%"struct.std::__1::pair.957" = type opaque
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::pair.957"** }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.968" = type { %"class.std::__1::__vector_base.969" }
%"class.std::__1::__vector_base.969" = type { %"class.v8::internal::Handle.970"*, %"class.v8::internal::Handle.970"*, %"class.std::__1::__compressed_pair.971" }
%"class.v8::internal::Handle.970" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.v8::internal::Handle.970"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.834", i32, %"class.v8::Local.1" }
%"class.v8::Local.834" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.989" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.990" = type { %"class.std::__1::__hash_table.991" }
%"class.std::__1::__hash_table.991" = type <{ %"class.std::__1::unique_ptr.992", %"class.std::__1::__compressed_pair.1002", %"class.std::__1::__compressed_pair.1007", %"class.std::__1::__compressed_pair.1010", [4 x i8] }>
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994", %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"struct.std::__1::__hash_node_base.995"** }
%"struct.std::__1::__hash_node_base.995" = type { %"struct.std::__1::__hash_node_base.995"* }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.std::__1::__bucket_list_deallocator.997" }
%"class.std::__1::__bucket_list_deallocator.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::__hash_node_base.995" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1014", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1043", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1044", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1014" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1039, %union.anon.1041, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1039 = type { i64 }
%union.anon.1041 = type { i64 }
%"class.std::__1::weak_ptr.1043" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1044" = type { %"class.v8::PersistentBase.1045" }
%"class.v8::PersistentBase.1045" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1015", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1015" = type { %"class.std::__1::__hash_table.1016" }
%"class.std::__1::__hash_table.1016" = type <{ %"class.std::__1::unique_ptr.1017", %"class.std::__1::__compressed_pair.1027", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1035", [4 x i8] }>
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019", %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"struct.std::__1::__hash_node_base.1020"** }
%"struct.std::__1::__hash_node_base.1020" = type { %"struct.std::__1::__hash_node_base.1020"* }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.std::__1::__bucket_list_deallocator.1022" }
%"class.std::__1::__bucket_list_deallocator.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"struct.std::__1::__hash_node_base.1020" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1075", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.835", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.835" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1092" }
%"class.std::__1::unordered_map.1092" = type { %"class.std::__1::__hash_table.1093" }
%"class.std::__1::__hash_table.1093" = type <{ %"class.std::__1::unique_ptr.1094", %"class.std::__1::__compressed_pair.1104", %"class.std::__1::__compressed_pair.1109", %"class.std::__1::__compressed_pair.1112", [4 x i8] }>
%"class.std::__1::unique_ptr.1094" = type { %"class.std::__1::__compressed_pair.1095" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096", %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"struct.std::__1::__hash_node_base.1097"** }
%"struct.std::__1::__hash_node_base.1097" = type { %"struct.std::__1::__hash_node_base.1097"* }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.std::__1::__bucket_list_deallocator.1099" }
%"class.std::__1::__bucket_list_deallocator.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"struct.std::__1::__hash_node_base.1097" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1118" = type { %"struct.std::__1::__atomic_base.1119" }
%"struct.std::__1::__atomic_base.1119" = type { %"struct.std::__1::__cxx_atomic_impl.1120" }
%"struct.std::__1::__cxx_atomic_impl.1120" = type { %"struct.std::__1::__cxx_atomic_base_impl.1121" }
%"struct.std::__1::__cxx_atomic_base_impl.1121" = type { %"class.std::__1::vector.1122"* }
%"class.std::__1::vector.1122" = type { %"class.std::__1::__vector_base.1123" }
%"class.std::__1::__vector_base.1123" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1124" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle" }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::Handle.1131" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::CallInterfaceDescriptorData" = type { i32, i32, i32, %"class.v8::base::Flags", i32, i32, %"class.v8::internal::Register"*, %"class.v8::internal::MachineType"* }
%"class.v8::base::Flags" = type { i32 }
%"class.v8::internal::Register" = type { %"class.v8::internal::RegisterBase" }
%"class.v8::internal::RegisterBase" = type { i32 }
%"class.v8::internal::MachineType" = type { i8, i8 }

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal11LoadHandler17LoadFromPrototypeEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS4_INS0_10JSReceiverEEENS4_INS0_3SmiEEENS0_17MaybeObjectHandleESB_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i64*, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly byval(%"class.v8::internal::MaybeObjectHandle") align 8) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::Handle.1131", align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle.1131", %"class.v8::internal::Handle.1131"* %8, i64 0, i32 0, i32 0
  store i64* %3, i64** %9, align 8
  %10 = icmp eq i64* %5, null
  %11 = select i1 %10, i32 0, i32 %4
  %12 = select i1 %10, i64* %2, i64* %5
  %13 = load i64, i64* %1, align 8
  %14 = call fastcc i32 @_ZN2v88internal12_GLOBAL__N_118GetHandlerDataSizeINS0_11LoadHandlerEEEiPNS0_7IsolateEPNS0_6HandleINS0_3SmiEEENS6_INS0_3MapEEENS0_17MaybeObjectHandleESC_(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Handle.1131"* nonnull %8, i64 %13, %"class.v8::internal::MaybeObjectHandle"* nonnull byval(%"class.v8::internal::MaybeObjectHandle") align 8 %6)
  %15 = tail call i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %0) #5
  %16 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %17 = tail call i64* @_ZN2v88internal7Factory14NewLoadHandlerEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %16, i32 %14, i8 zeroext 1) #5
  %18 = load i64, i64* %17, align 8
  %19 = load i64*, i64** %9, align 8
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %18, 3
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %20 to i32
  store atomic volatile i32 %23, i32* %22 monotonic, align 4
  %24 = and i64 %20, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %49, label %26

26:                                               ; preds = %7
  %27 = and i64 %18, -262144
  %28 = or i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 262144
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = or i64 %27, 16
  %35 = inttoptr i64 %34 to %"class.v8::internal::Heap"**
  %36 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %35, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %36, i64 %18, i64 %21, i64 %20) #5
  br label %37

37:                                               ; preds = %33, %26
  %38 = and i64 %20, -262144
  %39 = or i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %37
  %45 = load i64, i64* %29, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %18, i64 %21, i64 %20) #5
  br label %49

49:                                               ; preds = %7, %37, %44, %48
  %50 = load i64, i64* %17, align 8
  %51 = load i64, i64* %15, align 8
  %52 = add i64 %50, 7
  %53 = inttoptr i64 %52 to i32*
  %54 = trunc i64 %51 to i32
  store atomic volatile i32 %54, i32* %53 monotonic, align 4
  %55 = and i64 %51, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %80, label %57

57:                                               ; preds = %49
  %58 = and i64 %50, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 262144
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %57
  %65 = or i64 %58, 16
  %66 = inttoptr i64 %65 to %"class.v8::internal::Heap"**
  %67 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %66, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %67, i64 %50, i64 %52, i64 %51) #5
  br label %68

68:                                               ; preds = %64, %57
  %69 = and i64 %51, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %68
  %76 = load i64, i64* %60, align 8
  %77 = and i64 %76, 24
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %75
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %50, i64 %52, i64 %51) #5
  br label %80

80:                                               ; preds = %49, %68, %75, %79
  %81 = load i64, i64* %1, align 8
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_119InitPrototypeChecksINS0_11LoadHandlerEEEvPNS0_7IsolateENS0_6HandleIT_EENS6_INS0_3MapEEENS0_17MaybeObjectHandleESB_(%"class.v8::internal::Isolate"* %0, i64* %17, i64 %81, i32 %11, i64* %12, %"class.v8::internal::MaybeObjectHandle"* nonnull byval(%"class.v8::internal::MaybeObjectHandle") align 8 %6)
  ret i64* %17
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN2v88internal12_GLOBAL__N_118GetHandlerDataSizeINS0_11LoadHandlerEEEiPNS0_7IsolateEPNS0_6HandleINS0_3SmiEEENS6_INS0_3MapEEENS0_17MaybeObjectHandleESC_(%"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1131"* nocapture, i64, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly byval(%"class.v8::internal::MaybeObjectHandle") align 8) unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 1, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = add i64 %2, 7
  %8 = inttoptr i64 %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = icmp ult i16 %9, 68
  br i1 %10, label %17, label %11

11:                                               ; preds = %4
  %12 = add i64 %2, 9
  %13 = inttoptr i64 %12 to i8*
  %14 = load atomic i8, i8* %13 monotonic, align 1
  %15 = and i8 %14, 32
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %11, %4
  %18 = getelementptr inbounds %"class.v8::internal::Handle.1131", %"class.v8::internal::Handle.1131"* %1, i64 0, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = ashr i32 %21, 1
  %23 = or i32 %22, 16
  %24 = sext i32 %23 to i64
  %25 = shl nsw i64 %24, 1
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %17
  %30 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #5
  br label %44

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i64* [ %38, %37 ], [ %33, %31 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %32, align 8
  store i64 %25, i64* %40, align 8
  br label %44

44:                                               ; preds = %39, %29
  %45 = phi i64* [ %30, %29 ], [ %40, %39 ]
  store i64* %45, i64** %18, align 8
  br label %84

46:                                               ; preds = %11
  %47 = add i64 %2, 11
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2097152
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %46
  %53 = load atomic i16, i16* %8 monotonic, align 2
  %54 = icmp eq i16 %53, 189
  br i1 %54, label %84, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.v8::internal::Handle.1131", %"class.v8::internal::Handle.1131"* %1, i64 0, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = ashr i32 %59, 1
  %61 = or i32 %60, 32
  %62 = sext i32 %61 to i64
  %63 = shl nsw i64 %62, 1
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %65 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %64, align 8
  %66 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %55
  %68 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %65, i64 %63) #5
  br label %82

69:                                               ; preds = %55
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %71, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %77

77:                                               ; preds = %75, %69
  %78 = phi i64* [ %76, %75 ], [ %71, %69 ]
  %79 = ptrtoint i64* %78 to i64
  %80 = add i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  store i64* %81, i64** %70, align 8
  store i64 %63, i64* %78, align 8
  br label %82

82:                                               ; preds = %77, %67
  %83 = phi i64* [ %68, %67 ], [ %78, %77 ]
  store i64* %83, i64** %56, align 8
  br label %84

84:                                               ; preds = %44, %46, %52, %82
  %85 = phi i32 [ 2, %44 ], [ 1, %82 ], [ 1, %52 ], [ 1, %46 ]
  %86 = icmp ne i64* %6, null
  %87 = zext i1 %86 to i32
  %88 = add nuw nsw i32 %85, %87
  ret i32 %88
}

declare i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal7Factory14NewLoadHandlerEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_119InitPrototypeChecksINS0_11LoadHandlerEEEvPNS0_7IsolateENS0_6HandleIT_EENS6_INS0_3MapEEENS0_17MaybeObjectHandleESB_(%"class.v8::internal::Isolate"*, i64* nocapture readonly, i64, i32, i64* readonly, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly byval(%"class.v8::internal::MaybeObjectHandle") align 8) unnamed_addr #0 {
  %7 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %5, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %5, i64 0, i32 1, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = add i64 %2, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 68
  br i1 %14, label %21, label %15

15:                                               ; preds = %6
  %16 = add i64 %2, 9
  %17 = inttoptr i64 %16 to i8*
  %18 = load atomic i8, i8* %17 monotonic, align 1
  %19 = and i8 %18, 32
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %89, label %21

21:                                               ; preds = %15, %6
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 19
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %24, %33
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %21
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %34) #5
  %40 = load i64, i64* %39, align 8
  br label %54

41:                                               ; preds = %21
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi i64* [ %48, %47 ], [ %43, %41 ]
  %51 = ptrtoint i64* %50 to i64
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  store i64* %53, i64** %42, align 8
  store i64 %34, i64* %50, align 8
  br label %54

54:                                               ; preds = %49, %38
  %55 = phi i64 [ %40, %38 ], [ %34, %49 ]
  %56 = load i64, i64* %1, align 8
  %57 = add i64 %56, 15
  %58 = inttoptr i64 %57 to i32*
  %59 = trunc i64 %55 to i32
  %60 = or i32 %59, 2
  store atomic volatile i32 %60, i32* %58 monotonic, align 4
  %61 = and i64 %55, 1
  %62 = icmp ne i64 %61, 0
  %63 = icmp ne i32 %60, 3
  %64 = and i1 %62, %63
  br i1 %64, label %65, label %97

65:                                               ; preds = %54
  %66 = and i64 %56, -262144
  %67 = or i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 262144
  %71 = icmp eq i64 %70, 0
  %72 = and i64 %55, -3
  br i1 %71, label %77, label %73

73:                                               ; preds = %65
  %74 = or i64 %66, 16
  %75 = inttoptr i64 %74 to %"class.v8::internal::Heap"**
  %76 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %75, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %76, i64 %56, i64 %57, i64 %72) #5
  br label %77

77:                                               ; preds = %65, %73
  %78 = and i64 %55, -262144
  %79 = or i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 24
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %97, label %84

84:                                               ; preds = %77
  %85 = load i64, i64* %68, align 8
  %86 = and i64 %85, 24
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %97

88:                                               ; preds = %84
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %56, i64 %57, i64 %72) #5
  br label %97

89:                                               ; preds = %15
  %90 = add i64 %2, 11
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2097152
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %89
  %96 = load atomic i16, i16* %12 monotonic, align 2
  br label %97

97:                                               ; preds = %95, %89, %88, %84, %77, %54
  %98 = phi i32 [ 1, %95 ], [ 2, %77 ], [ 2, %84 ], [ 2, %88 ], [ 1, %89 ], [ 2, %54 ]
  %99 = load i64, i64* %1, align 8
  %100 = icmp eq i32 %3, 0
  %101 = icmp eq i64* %4, null
  br i1 %100, label %102, label %107

102:                                              ; preds = %97
  br i1 %101, label %103, label %104, !prof !2

103:                                              ; preds = %102
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

104:                                              ; preds = %102
  %105 = load i64, i64* %4, align 8
  %106 = or i64 %105, 2
  br label %111

107:                                              ; preds = %97
  br i1 %101, label %108, label %109, !prof !2

108:                                              ; preds = %107
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

109:                                              ; preds = %107
  %110 = load i64, i64* %4, align 8
  br label %111

111:                                              ; preds = %109, %104
  %112 = phi i64 [ %106, %104 ], [ %110, %109 ]
  %113 = add i64 %99, 11
  %114 = inttoptr i64 %113 to i32*
  %115 = trunc i64 %112 to i32
  store atomic volatile i32 %115, i32* %114 monotonic, align 4
  %116 = and i64 %112, 1
  %117 = icmp ne i64 %116, 0
  %118 = icmp ne i32 %115, 3
  %119 = and i1 %118, %117
  br i1 %119, label %120, label %144

120:                                              ; preds = %111
  %121 = and i64 %99, -262144
  %122 = or i64 %121, 8
  %123 = inttoptr i64 %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = and i64 %124, 262144
  %126 = icmp eq i64 %125, 0
  %127 = and i64 %112, -3
  br i1 %126, label %132, label %128

128:                                              ; preds = %120
  %129 = or i64 %121, 16
  %130 = inttoptr i64 %129 to %"class.v8::internal::Heap"**
  %131 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %130, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %131, i64 %99, i64 %113, i64 %127) #5
  br label %132

132:                                              ; preds = %120, %128
  %133 = and i64 %112, -262144
  %134 = or i64 %133, 8
  %135 = inttoptr i64 %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 24
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %132
  %140 = load i64, i64* %123, align 8
  %141 = and i64 %140, 24
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %139
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %99, i64 %113, i64 %127) #5
  br label %144

144:                                              ; preds = %143, %139, %132, %111
  %145 = icmp eq i64* %10, null
  br i1 %145, label %217, label %146

146:                                              ; preds = %144
  %147 = icmp eq i32 %98, 1
  %148 = load i64, i64* %1, align 8
  %149 = icmp eq i32 %8, 0
  %150 = load i64, i64* %10, align 8
  %151 = or i64 %150, 2
  %152 = select i1 %149, i64 %151, i64 %150
  br i1 %147, label %153, label %185

153:                                              ; preds = %146
  %154 = add i64 %148, 15
  %155 = inttoptr i64 %154 to i32*
  %156 = trunc i64 %152 to i32
  store atomic volatile i32 %156, i32* %155 monotonic, align 4
  %157 = and i64 %152, 1
  %158 = icmp ne i64 %157, 0
  %159 = icmp ne i32 %156, 3
  %160 = and i1 %159, %158
  br i1 %160, label %161, label %217

161:                                              ; preds = %153
  %162 = and i64 %148, -262144
  %163 = or i64 %162, 8
  %164 = inttoptr i64 %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = and i64 %165, 262144
  %167 = icmp eq i64 %166, 0
  %168 = and i64 %152, -3
  br i1 %167, label %173, label %169

169:                                              ; preds = %161
  %170 = or i64 %162, 16
  %171 = inttoptr i64 %170 to %"class.v8::internal::Heap"**
  %172 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %171, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %172, i64 %148, i64 %154, i64 %168) #5
  br label %173

173:                                              ; preds = %161, %169
  %174 = and i64 %152, -262144
  %175 = or i64 %174, 8
  %176 = inttoptr i64 %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = and i64 %177, 24
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %217, label %180

180:                                              ; preds = %173
  %181 = load i64, i64* %164, align 8
  %182 = and i64 %181, 24
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %217

184:                                              ; preds = %180
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %148, i64 %154, i64 %168) #5
  br label %217

185:                                              ; preds = %146
  %186 = add i64 %148, 19
  %187 = inttoptr i64 %186 to i32*
  %188 = trunc i64 %152 to i32
  store atomic volatile i32 %188, i32* %187 monotonic, align 4
  %189 = and i64 %152, 1
  %190 = icmp ne i64 %189, 0
  %191 = icmp ne i32 %188, 3
  %192 = and i1 %191, %190
  br i1 %192, label %193, label %217

193:                                              ; preds = %185
  %194 = and i64 %148, -262144
  %195 = or i64 %194, 8
  %196 = inttoptr i64 %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = and i64 %197, 262144
  %199 = icmp eq i64 %198, 0
  %200 = and i64 %152, -3
  br i1 %199, label %205, label %201

201:                                              ; preds = %193
  %202 = or i64 %194, 16
  %203 = inttoptr i64 %202 to %"class.v8::internal::Heap"**
  %204 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %203, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %204, i64 %148, i64 %186, i64 %200) #5
  br label %205

205:                                              ; preds = %193, %201
  %206 = and i64 %152, -262144
  %207 = or i64 %206, 8
  %208 = inttoptr i64 %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = and i64 %209, 24
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %217, label %212

212:                                              ; preds = %205
  %213 = load i64, i64* %196, align 8
  %214 = and i64 %213, 24
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %212
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %148, i64 %186, i64 %200) #5
  br label %217

217:                                              ; preds = %144, %153, %173, %180, %184, %185, %205, %212, %216
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal11LoadHandler13LoadFullChainEPNS0_7IsolateENS0_6HandleINS0_3MapEEERKNS0_17MaybeObjectHandleENS4_INS0_3SmiEEE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16), i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle.1131", align 8
  %6 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %7 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %8 = getelementptr inbounds %"class.v8::internal::Handle.1131", %"class.v8::internal::Handle.1131"* %5, i64 0, i32 0, i32 0
  store i64* %3, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 1, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %6, i64 0, i32 0
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %6, i64 0, i32 1, i32 0
  store i64* null, i64** %14, align 8
  %15 = load i64, i64* %1, align 8
  %16 = call fastcc i32 @_ZN2v88internal12_GLOBAL__N_118GetHandlerDataSizeINS0_11LoadHandlerEEEiPNS0_7IsolateEPNS0_6HandleINS0_3SmiEEENS6_INS0_3MapEEENS0_17MaybeObjectHandleESC_(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Handle.1131"* nonnull %5, i64 %15, %"class.v8::internal::MaybeObjectHandle"* nonnull byval(%"class.v8::internal::MaybeObjectHandle") align 8 %6)
  %17 = tail call i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %0) #5
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  %21 = load i64*, i64** %8, align 8
  br i1 %20, label %22, label %26

22:                                               ; preds = %4
  %23 = load i64, i64* %21, align 8
  %24 = and i64 %23, 64
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %94, label %26

26:                                               ; preds = %4, %22
  %27 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %28 = tail call i64* @_ZN2v88internal7Factory14NewLoadHandlerEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %27, i32 %16, i8 zeroext 1) #5
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %21, align 8
  %31 = add i64 %29, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = trunc i64 %30 to i32
  store atomic volatile i32 %33, i32* %32 monotonic, align 4
  %34 = and i64 %30, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %59, label %36

36:                                               ; preds = %26
  %37 = and i64 %29, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 262144
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %36
  %44 = or i64 %37, 16
  %45 = inttoptr i64 %44 to %"class.v8::internal::Heap"**
  %46 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %45, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %46, i64 %29, i64 %31, i64 %30) #5
  br label %47

47:                                               ; preds = %43, %36
  %48 = and i64 %30, -262144
  %49 = or i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, 24
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %47
  %55 = load i64, i64* %39, align 8
  %56 = and i64 %55, 24
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %29, i64 %31, i64 %30) #5
  br label %59

59:                                               ; preds = %26, %47, %54, %58
  %60 = load i64, i64* %28, align 8
  %61 = load i64, i64* %17, align 8
  %62 = add i64 %60, 7
  %63 = inttoptr i64 %62 to i32*
  %64 = trunc i64 %61 to i32
  store atomic volatile i32 %64, i32* %63 monotonic, align 4
  %65 = and i64 %61, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %90, label %67

67:                                               ; preds = %59
  %68 = and i64 %60, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 262144
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = or i64 %68, 16
  %76 = inttoptr i64 %75 to %"class.v8::internal::Heap"**
  %77 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %76, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %77, i64 %60, i64 %62, i64 %61) #5
  br label %78

78:                                               ; preds = %74, %67
  %79 = and i64 %61, -262144
  %80 = or i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 24
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %78
  %86 = load i64, i64* %70, align 8
  %87 = and i64 %86, 24
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %85
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %60, i64 %62, i64 %61) #5
  br label %90

90:                                               ; preds = %59, %78, %85, %89
  %91 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %7, i64 0, i32 0
  store i32 1, i32* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %7, i64 0, i32 1, i32 0
  store i64* null, i64** %92, align 8
  %93 = load i64, i64* %1, align 8
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_119InitPrototypeChecksINS0_11LoadHandlerEEEvPNS0_7IsolateENS0_6HandleIT_EENS6_INS0_3MapEEENS0_17MaybeObjectHandleESB_(%"class.v8::internal::Isolate"* %0, i64* %28, i64 %93, i32 %10, i64* %12, %"class.v8::internal::MaybeObjectHandle"* nonnull byval(%"class.v8::internal::MaybeObjectHandle") align 8 %7)
  br label %94

94:                                               ; preds = %22, %90
  %95 = phi i64* [ %28, %90 ], [ %21, %22 ]
  ret i64* %95
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal11LoadHandler22GetKeyedAccessLoadModeENS0_11MaybeObjectE(i64) local_unnamed_addr #2 align 2 {
  %2 = and i64 %0, 1
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = and i64 %0, 156
  %6 = icmp eq i64 %5, 128
  %7 = zext i1 %6 to i32
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal12StoreHandler23GetKeyedAccessStoreModeENS0_11MaybeObjectE(i64) local_unnamed_addr #2 align 2 {
  %2 = and i64 %0, 1
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %11

4:                                                ; preds = %1
  %5 = trunc i64 %0 to i32
  %6 = and i32 %5, 30
  %7 = icmp eq i32 %6, 18
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = lshr i32 %5, 7
  %10 = and i32 %9, 3
  br label %11

11:                                               ; preds = %1, %8, %4
  %12 = phi i32 [ %10, %8 ], [ 0, %4 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12StoreHandler22StoreElementTransitionEPNS0_7IsolateENS0_6HandleINS0_3MapEEES6_NS0_20KeyedAccessStoreModeENS0_11MaybeHandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %6 = tail call { i64*, %"class.v8::internal::CallInterfaceDescriptorData"* } @_ZN2v88internal11CodeFactory26ElementsTransitionAndStoreEPNS0_7IsolateENS0_20KeyedAccessStoreModeE(%"class.v8::internal::Isolate"* %0, i32 %3) #5
  %7 = extractvalue { i64*, %"class.v8::internal::CallInterfaceDescriptorData"* } %6, 0
  %8 = icmp eq i64* %4, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = tail call i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %0) #5
  br label %11

11:                                               ; preds = %5, %9
  %12 = phi i64* [ %10, %9 ], [ %4, %5 ]
  %13 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %14 = tail call i64* @_ZN2v88internal7Factory15NewStoreHandlerEi(%"class.v8::internal::Factory"* %13, i32 1) #5
  %15 = load i64, i64* %14, align 8
  %16 = load i64, i64* %7, align 8
  %17 = add i64 %15, 3
  %18 = inttoptr i64 %17 to i32*
  %19 = trunc i64 %16 to i32
  store atomic volatile i32 %19, i32* %18 monotonic, align 4
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %45, label %22

22:                                               ; preds = %11
  %23 = and i64 %15, -262144
  %24 = or i64 %23, 8
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 262144
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = or i64 %23, 16
  %31 = inttoptr i64 %30 to %"class.v8::internal::Heap"**
  %32 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %31, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %32, i64 %15, i64 %17, i64 %16) #5
  br label %33

33:                                               ; preds = %29, %22
  %34 = and i64 %16, -262144
  %35 = or i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 24
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = load i64, i64* %25, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %15, i64 %17, i64 %16) #5
  br label %45

45:                                               ; preds = %11, %33, %40, %44
  %46 = load i64, i64* %14, align 8
  %47 = load i64, i64* %12, align 8
  %48 = add i64 %46, 7
  %49 = inttoptr i64 %48 to i32*
  %50 = trunc i64 %47 to i32
  store atomic volatile i32 %50, i32* %49 monotonic, align 4
  %51 = and i64 %47, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %76, label %53

53:                                               ; preds = %45
  %54 = and i64 %46, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 262144
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %53
  %61 = or i64 %54, 16
  %62 = inttoptr i64 %61 to %"class.v8::internal::Heap"**
  %63 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %62, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %63, i64 %46, i64 %48, i64 %47) #5
  br label %64

64:                                               ; preds = %60, %53
  %65 = and i64 %47, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %64
  %72 = load i64, i64* %56, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %46, i64 %48, i64 %47) #5
  br label %76

76:                                               ; preds = %45, %64, %71, %75
  %77 = load i64, i64* %14, align 8
  %78 = load i64, i64* %2, align 8
  %79 = add i64 %77, 11
  %80 = inttoptr i64 %79 to i32*
  %81 = trunc i64 %78 to i32
  %82 = or i32 %81, 2
  store atomic volatile i32 %82, i32* %80 monotonic, align 4
  %83 = and i64 %78, 1
  %84 = icmp ne i64 %83, 0
  %85 = icmp ne i32 %82, 3
  %86 = and i1 %84, %85
  br i1 %86, label %87, label %115

87:                                               ; preds = %76
  %88 = and i64 %77, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 262144
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %87
  %95 = and i64 %78, -3
  %96 = or i64 %88, 16
  %97 = inttoptr i64 %96 to %"class.v8::internal::Heap"**
  %98 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %97, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %98, i64 %77, i64 %79, i64 %95) #5
  br label %99

99:                                               ; preds = %94, %87
  %100 = and i64 %78, -3
  %101 = and i64 %78, -262144
  %102 = or i64 %101, 8
  %103 = inttoptr i64 %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = and i64 %104, 24
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %99
  %108 = and i64 %77, -262144
  %109 = or i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 24
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %107
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %77, i64 %79, i64 %100) #5
  br label %115

115:                                              ; preds = %76, %99, %107, %114
  ret i64* %14
}

declare { i64*, %"class.v8::internal::CallInterfaceDescriptorData"* } @_ZN2v88internal11CodeFactory26ElementsTransitionAndStoreEPNS0_7IsolateENS0_20KeyedAccessStoreModeE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #1

declare i64* @_ZN2v88internal7Factory15NewStoreHandlerEi(%"class.v8::internal::Factory"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i64* } @_ZN2v88internal12StoreHandler15StoreTransitionEPNS0_7IsolateENS0_6HandleINS0_3MapEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 2097152
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %2
  %10 = and i64 %3, -4294967296
  %11 = add i64 %3, 31
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = and i64 %14, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %9
  %19 = add i64 %15, 3
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %10, %22
  br label %24

24:                                               ; preds = %9, %18
  %25 = phi i64 [ %23, %18 ], [ %15, %9 ]
  %26 = trunc i64 %25 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %99, label %65

28:                                               ; preds = %2
  %29 = tail call i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %0) #5
  %30 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %31 = tail call i64* @_ZN2v88internal7Factory15NewStoreHandlerEi(%"class.v8::internal::Factory"* %30, i32 0) #5
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 3
  %34 = inttoptr i64 %33 to i32*
  store atomic volatile i32 78, i32* %34 monotonic, align 4
  %35 = load i64, i64* %31, align 8
  %36 = load i64, i64* %29, align 8
  %37 = add i64 %35, 7
  %38 = inttoptr i64 %37 to i32*
  %39 = trunc i64 %36 to i32
  store atomic volatile i32 %39, i32* %38 monotonic, align 4
  %40 = and i64 %36, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %99, label %42

42:                                               ; preds = %28
  %43 = and i64 %35, -262144
  %44 = or i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 262144
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = or i64 %43, 16
  %51 = inttoptr i64 %50 to %"class.v8::internal::Heap"**
  %52 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %51, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %52, i64 %35, i64 %37, i64 %36) #5
  br label %53

53:                                               ; preds = %49, %42
  %54 = and i64 %36, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 24
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %99, label %60

60:                                               ; preds = %53
  %61 = load i64, i64* %45, align 8
  %62 = and i64 %61, 24
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %99

64:                                               ; preds = %60
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %35, i64 %37, i64 %36) #5
  br label %99

65:                                               ; preds = %24
  %66 = tail call i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %0) #5
  %67 = icmp eq i64* %66, null
  br i1 %67, label %99, label %68

68:                                               ; preds = %65
  %69 = load i64, i64* %1, align 8
  %70 = load i64, i64* %66, align 8
  %71 = add i64 %69, 31
  %72 = inttoptr i64 %71 to i32*
  %73 = trunc i64 %70 to i32
  store atomic volatile i32 %73, i32* %72 monotonic, align 4
  %74 = and i64 %70, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %99, label %76

76:                                               ; preds = %68
  %77 = and i64 %69, -262144
  %78 = or i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 262144
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %76
  %84 = or i64 %77, 16
  %85 = inttoptr i64 %84 to %"class.v8::internal::Heap"**
  %86 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %85, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %86, i64 %69, i64 %71, i64 %70) #5
  br label %87

87:                                               ; preds = %83, %76
  %88 = and i64 %70, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 24
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %87
  %95 = load i64, i64* %79, align 8
  %96 = and i64 %95, 24
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %94
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %69, i64 %71, i64 %70) #5
  br label %99

99:                                               ; preds = %65, %68, %87, %94, %98, %24, %64, %60, %53, %28
  %100 = phi i32 [ 1, %28 ], [ 1, %53 ], [ 1, %60 ], [ 1, %64 ], [ 0, %24 ], [ 0, %98 ], [ 0, %94 ], [ 0, %87 ], [ 0, %68 ], [ 0, %65 ]
  %101 = phi i64* [ %31, %28 ], [ %31, %53 ], [ %31, %60 ], [ %31, %64 ], [ %1, %24 ], [ %1, %98 ], [ %1, %94 ], [ %1, %87 ], [ %1, %68 ], [ %1, %65 ]
  %102 = insertvalue { i32, i64* } undef, i32 %100, 0
  %103 = insertvalue { i32, i64* } %102, i64* %101, 1
  ret { i32, i64* } %103
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12StoreHandler21StoreThroughPrototypeEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS4_INS0_10JSReceiverEEENS4_INS0_3SmiEEENS0_17MaybeObjectHandleESB_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i64*, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly byval(%"class.v8::internal::MaybeObjectHandle") align 8) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i64* %5, null
  %9 = select i1 %8, i64* %2, i64* %5
  %10 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %6, i64 0, i32 1, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %1, align 8
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp ult i16 %15, 68
  br i1 %16, label %23, label %17

17:                                               ; preds = %7
  %18 = add i64 %12, 9
  %19 = inttoptr i64 %18 to i8*
  %20 = load atomic i8, i8* %19 monotonic, align 1
  %21 = and i8 %20, 32
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %48, label %23

23:                                               ; preds = %17, %7
  %24 = load i64, i64* %3, align 8
  %25 = trunc i64 %24 to i32
  %26 = ashr i32 %25, 1
  %27 = or i32 %26, 16
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 1
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %31 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %23
  %34 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %31, i64 %29) #5
  br label %82

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i64* [ %42, %41 ], [ %37, %35 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %36, align 8
  store i64 %29, i64* %44, align 8
  br label %82

48:                                               ; preds = %17
  %49 = add i64 %12, 11
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2097152
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %48
  %55 = load atomic i16, i16* %14 monotonic, align 2
  %56 = icmp eq i16 %55, 189
  br i1 %56, label %82, label %57

57:                                               ; preds = %54
  %58 = load i64, i64* %3, align 8
  %59 = trunc i64 %58 to i32
  %60 = ashr i32 %59, 1
  %61 = or i32 %60, 32
  %62 = sext i32 %61 to i64
  %63 = shl nsw i64 %62, 1
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %65 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %64, align 8
  %66 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %57
  %68 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %65, i64 %63) #5
  br label %82

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %71, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %77

77:                                               ; preds = %75, %69
  %78 = phi i64* [ %76, %75 ], [ %71, %69 ]
  %79 = ptrtoint i64* %78 to i64
  %80 = add i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  store i64* %81, i64** %70, align 8
  store i64 %63, i64* %78, align 8
  br label %82

82:                                               ; preds = %67, %77, %33, %43, %48, %54
  %83 = phi i64* [ %3, %48 ], [ %3, %54 ], [ %34, %33 ], [ %44, %43 ], [ %68, %67 ], [ %78, %77 ]
  %84 = phi i32 [ 1, %48 ], [ 1, %54 ], [ 2, %33 ], [ 2, %43 ], [ 1, %67 ], [ 1, %77 ]
  %85 = icmp ne i64* %11, null
  %86 = zext i1 %85 to i32
  %87 = add nuw nsw i32 %84, %86
  %88 = tail call i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %0) #5
  %89 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %90 = tail call i64* @_ZN2v88internal7Factory15NewStoreHandlerEi(%"class.v8::internal::Factory"* %89, i32 %87) #5
  %91 = load i64, i64* %90, align 8
  %92 = load i64, i64* %83, align 8
  %93 = add i64 %91, 3
  %94 = inttoptr i64 %93 to i32*
  %95 = trunc i64 %92 to i32
  store atomic volatile i32 %95, i32* %94 monotonic, align 4
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %121, label %98

98:                                               ; preds = %82
  %99 = and i64 %91, -262144
  %100 = or i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = and i64 %102, 262144
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %98
  %106 = or i64 %99, 16
  %107 = inttoptr i64 %106 to %"class.v8::internal::Heap"**
  %108 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %107, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %108, i64 %91, i64 %93, i64 %92) #5
  br label %109

109:                                              ; preds = %105, %98
  %110 = and i64 %92, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 24
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %109
  %117 = load i64, i64* %101, align 8
  %118 = and i64 %117, 24
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %116
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %91, i64 %93, i64 %92) #5
  br label %121

121:                                              ; preds = %82, %109, %116, %120
  %122 = load i64, i64* %90, align 8
  %123 = load i64, i64* %88, align 8
  %124 = add i64 %122, 7
  %125 = inttoptr i64 %124 to i32*
  %126 = trunc i64 %123 to i32
  store atomic volatile i32 %126, i32* %125 monotonic, align 4
  %127 = and i64 %123, 1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %152, label %129

129:                                              ; preds = %121
  %130 = and i64 %122, -262144
  %131 = or i64 %130, 8
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, 262144
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %140, label %136

136:                                              ; preds = %129
  %137 = or i64 %130, 16
  %138 = inttoptr i64 %137 to %"class.v8::internal::Heap"**
  %139 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %138, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %139, i64 %122, i64 %124, i64 %123) #5
  br label %140

140:                                              ; preds = %136, %129
  %141 = and i64 %123, -262144
  %142 = or i64 %141, 8
  %143 = inttoptr i64 %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, 24
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %152, label %147

147:                                              ; preds = %140
  %148 = load i64, i64* %132, align 8
  %149 = and i64 %148, 24
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %147
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %122, i64 %124, i64 %123) #5
  br label %152

152:                                              ; preds = %121, %140, %147, %151
  %153 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %6, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = load i64*, i64** %10, align 8
  %156 = load i64, i64* %1, align 8
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = icmp ult i16 %159, 68
  br i1 %160, label %167, label %161

161:                                              ; preds = %152
  %162 = add i64 %156, 9
  %163 = inttoptr i64 %162 to i8*
  %164 = load atomic i8, i8* %163 monotonic, align 1
  %165 = and i8 %164, 32
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %235, label %167

167:                                              ; preds = %161, %152
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = and i64 %169, -4294967296
  %171 = add i64 %169, -1
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %170, %174
  %176 = add i64 %175, 19
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  %180 = or i64 %170, %179
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %182 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %181, align 8
  %183 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %167
  %185 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %182, i64 %180) #5
  %186 = load i64, i64* %185, align 8
  br label %200

187:                                              ; preds = %167
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %189 = load i64*, i64** %188, align 8
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %191 = load i64*, i64** %190, align 8
  %192 = icmp eq i64* %189, %191
  br i1 %192, label %193, label %195

193:                                              ; preds = %187
  %194 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %195

195:                                              ; preds = %193, %187
  %196 = phi i64* [ %194, %193 ], [ %189, %187 ]
  %197 = ptrtoint i64* %196 to i64
  %198 = add i64 %197, 8
  %199 = inttoptr i64 %198 to i64*
  store i64* %199, i64** %188, align 8
  store i64 %180, i64* %196, align 8
  br label %200

200:                                              ; preds = %195, %184
  %201 = phi i64 [ %186, %184 ], [ %180, %195 ]
  %202 = load i64, i64* %90, align 8
  %203 = add i64 %202, 15
  %204 = inttoptr i64 %203 to i32*
  %205 = trunc i64 %201 to i32
  %206 = or i32 %205, 2
  store atomic volatile i32 %206, i32* %204 monotonic, align 4
  %207 = and i64 %201, 1
  %208 = icmp ne i64 %207, 0
  %209 = icmp ne i32 %206, 3
  %210 = and i1 %208, %209
  br i1 %210, label %211, label %243

211:                                              ; preds = %200
  %212 = and i64 %202, -262144
  %213 = or i64 %212, 8
  %214 = inttoptr i64 %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = and i64 %215, 262144
  %217 = icmp eq i64 %216, 0
  %218 = and i64 %201, -3
  br i1 %217, label %223, label %219

219:                                              ; preds = %211
  %220 = or i64 %212, 16
  %221 = inttoptr i64 %220 to %"class.v8::internal::Heap"**
  %222 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %221, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %222, i64 %202, i64 %203, i64 %218) #5
  br label %223

223:                                              ; preds = %219, %211
  %224 = and i64 %201, -262144
  %225 = or i64 %224, 8
  %226 = inttoptr i64 %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = and i64 %227, 24
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %243, label %230

230:                                              ; preds = %223
  %231 = load i64, i64* %214, align 8
  %232 = and i64 %231, 24
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %243

234:                                              ; preds = %230
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %202, i64 %203, i64 %218) #5
  br label %243

235:                                              ; preds = %161
  %236 = add i64 %156, 11
  %237 = inttoptr i64 %236 to i32*
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2097152
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %243, label %241

241:                                              ; preds = %235
  %242 = load atomic i16, i16* %158 monotonic, align 2
  br label %243

243:                                              ; preds = %241, %235, %234, %230, %223, %200
  %244 = phi i32 [ 1, %241 ], [ 2, %223 ], [ 2, %230 ], [ 2, %234 ], [ 1, %235 ], [ 2, %200 ]
  %245 = load i64, i64* %90, align 8
  %246 = icmp eq i32 %4, 0
  %247 = or i1 %246, %8
  %248 = icmp eq i64* %9, null
  br i1 %247, label %249, label %254

249:                                              ; preds = %243
  br i1 %248, label %250, label %251, !prof !2

250:                                              ; preds = %249
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

251:                                              ; preds = %249
  %252 = load i64, i64* %9, align 8
  %253 = or i64 %252, 2
  br label %258

254:                                              ; preds = %243
  br i1 %248, label %255, label %256, !prof !2

255:                                              ; preds = %254
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

256:                                              ; preds = %254
  %257 = load i64, i64* %9, align 8
  br label %258

258:                                              ; preds = %256, %251
  %259 = phi i64 [ %253, %251 ], [ %257, %256 ]
  %260 = add i64 %245, 11
  %261 = inttoptr i64 %260 to i32*
  %262 = trunc i64 %259 to i32
  store atomic volatile i32 %262, i32* %261 monotonic, align 4
  %263 = and i64 %259, 1
  %264 = icmp ne i64 %263, 0
  %265 = icmp ne i32 %262, 3
  %266 = and i1 %265, %264
  br i1 %266, label %267, label %291

267:                                              ; preds = %258
  %268 = and i64 %245, -262144
  %269 = or i64 %268, 8
  %270 = inttoptr i64 %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = and i64 %271, 262144
  %273 = icmp eq i64 %272, 0
  %274 = and i64 %259, -3
  br i1 %273, label %279, label %275

275:                                              ; preds = %267
  %276 = or i64 %268, 16
  %277 = inttoptr i64 %276 to %"class.v8::internal::Heap"**
  %278 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %277, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %278, i64 %245, i64 %260, i64 %274) #5
  br label %279

279:                                              ; preds = %275, %267
  %280 = and i64 %259, -262144
  %281 = or i64 %280, 8
  %282 = inttoptr i64 %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, 24
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %291, label %286

286:                                              ; preds = %279
  %287 = load i64, i64* %270, align 8
  %288 = and i64 %287, 24
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %286
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %245, i64 %260, i64 %274) #5
  br label %291

291:                                              ; preds = %290, %286, %279, %258
  %292 = icmp eq i64* %155, null
  br i1 %292, label %364, label %293

293:                                              ; preds = %291
  %294 = icmp eq i32 %244, 1
  %295 = load i64, i64* %90, align 8
  %296 = icmp eq i32 %154, 0
  %297 = load i64, i64* %155, align 8
  %298 = or i64 %297, 2
  %299 = select i1 %296, i64 %298, i64 %297
  br i1 %294, label %300, label %332

300:                                              ; preds = %293
  %301 = add i64 %295, 15
  %302 = inttoptr i64 %301 to i32*
  %303 = trunc i64 %299 to i32
  store atomic volatile i32 %303, i32* %302 monotonic, align 4
  %304 = and i64 %299, 1
  %305 = icmp ne i64 %304, 0
  %306 = icmp ne i32 %303, 3
  %307 = and i1 %306, %305
  br i1 %307, label %308, label %364

308:                                              ; preds = %300
  %309 = and i64 %295, -262144
  %310 = or i64 %309, 8
  %311 = inttoptr i64 %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = and i64 %312, 262144
  %314 = icmp eq i64 %313, 0
  %315 = and i64 %299, -3
  br i1 %314, label %320, label %316

316:                                              ; preds = %308
  %317 = or i64 %309, 16
  %318 = inttoptr i64 %317 to %"class.v8::internal::Heap"**
  %319 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %318, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %319, i64 %295, i64 %301, i64 %315) #5
  br label %320

320:                                              ; preds = %316, %308
  %321 = and i64 %299, -262144
  %322 = or i64 %321, 8
  %323 = inttoptr i64 %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = and i64 %324, 24
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %364, label %327

327:                                              ; preds = %320
  %328 = load i64, i64* %311, align 8
  %329 = and i64 %328, 24
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %364

331:                                              ; preds = %327
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %295, i64 %301, i64 %315) #5
  br label %364

332:                                              ; preds = %293
  %333 = add i64 %295, 19
  %334 = inttoptr i64 %333 to i32*
  %335 = trunc i64 %299 to i32
  store atomic volatile i32 %335, i32* %334 monotonic, align 4
  %336 = and i64 %299, 1
  %337 = icmp ne i64 %336, 0
  %338 = icmp ne i32 %335, 3
  %339 = and i1 %338, %337
  br i1 %339, label %340, label %364

340:                                              ; preds = %332
  %341 = and i64 %295, -262144
  %342 = or i64 %341, 8
  %343 = inttoptr i64 %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = and i64 %344, 262144
  %346 = icmp eq i64 %345, 0
  %347 = and i64 %299, -3
  br i1 %346, label %352, label %348

348:                                              ; preds = %340
  %349 = or i64 %341, 16
  %350 = inttoptr i64 %349 to %"class.v8::internal::Heap"**
  %351 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %350, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %351, i64 %295, i64 %333, i64 %347) #5
  br label %352

352:                                              ; preds = %348, %340
  %353 = and i64 %299, -262144
  %354 = or i64 %353, 8
  %355 = inttoptr i64 %354 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = and i64 %356, 24
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %364, label %359

359:                                              ; preds = %352
  %360 = load i64, i64* %343, align 8
  %361 = and i64 %360, 24
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %364

363:                                              ; preds = %359
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %295, i64 %333, i64 %347) #5
  br label %364

364:                                              ; preds = %291, %300, %320, %327, %331, %332, %352, %359, %363
  ret i64* %90
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i32, i64* } @_ZN2v88internal12StoreHandler11StoreGlobalENS0_6HandleINS0_12PropertyCellEEE(i64*) local_unnamed_addr #3 align 2 {
  %2 = insertvalue { i32, i64* } { i32 0, i64* undef }, i64* %0, 1
  ret { i32, i64* } %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12StoreHandler10StoreProxyEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS4_INS0_7JSProxyEEENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %7 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %6, align 8
  %8 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %7, i64 20) #5
  br label %24

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %19

19:                                               ; preds = %17, %11
  %20 = phi i64* [ %18, %17 ], [ %13, %11 ]
  %21 = ptrtoint i64* %20 to i64
  %22 = add i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  store i64* %23, i64** %12, align 8
  store i64 20, i64* %20, align 8
  br label %24

24:                                               ; preds = %9, %19
  %25 = phi i64* [ %10, %9 ], [ %20, %19 ]
  %26 = icmp eq i64* %3, %2
  br i1 %26, label %41, label %27

27:                                               ; preds = %24
  %28 = icmp eq i64* %3, null
  %29 = icmp eq i64* %2, null
  %30 = or i1 %29, %28
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = load i64, i64* %3, align 8
  %33 = load i64, i64* %2, align 8
  %34 = trunc i64 %32 to i32
  %35 = trunc i64 %33 to i32
  %36 = icmp eq i32 %34, %35
  br i1 %36, label %41, label %37

37:                                               ; preds = %27, %31
  %38 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %5, i64 0, i32 0
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %5, i64 0, i32 1, i32 0
  store i64* null, i64** %39, align 8
  %40 = tail call i64* @_ZN2v88internal12StoreHandler21StoreThroughPrototypeEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS4_INS0_10JSReceiverEEENS4_INS0_3SmiEEENS0_17MaybeObjectHandleESB_(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %25, i32 0, i64* %2, %"class.v8::internal::MaybeObjectHandle"* nonnull byval(%"class.v8::internal::MaybeObjectHandle") align 8 %5)
  br label %41

41:                                               ; preds = %24, %31, %37
  %42 = phi i64* [ %40, %37 ], [ %25, %31 ], [ %25, %24 ]
  ret i64* %42
}

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #1

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
