; ModuleID = '../../native_client/src/trusted/debug_stub/thread_common.cc'
source_filename = "../../native_client/src/trusted/debug_stub/thread_common.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.port::Thread" = type <{ i32, [4 x i8], %struct.NaClAppThread*, %struct.NaClSignalContext, i32, [4 x i8] }>
%struct.NaClSignalContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClApp = type opaque
%struct.NaClThread = type { i64 }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClAppThreadSuspendedRegisters = type opaque
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%"class.gdb_rsp::Abi" = type { i8*, %"struct.gdb_rsp::Abi::RegDef"*, i32, i32, %"struct.gdb_rsp::Abi::BPDef"*, i32, i8* }
%"struct.gdb_rsp::Abi::RegDef" = type { i8*, i32, i32, i32, i32 }
%"struct.gdb_rsp::Abi::BPDef" = type { i32, i8* }

@.str = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"../../native_client/src/trusted/debug_stub/thread_common.cc\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"NACL_ARCH(NACL_BUILD_ARCH) == NACL_arm\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"reg->bytes_ == 4\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"reg->bytes_ == 8\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"NaClAppThreadUnblockIfFaulted(natp_, &exception_code)\00", align 1

@_ZN4port6ThreadC1EjP13NaClAppThread = hidden unnamed_addr alias void (%"class.port::Thread"*, i32, %struct.NaClAppThread*), void (%"class.port::Thread"*, i32, %struct.NaClAppThread*)* @_ZN4port6ThreadC2EjP13NaClAppThread
@_ZN4port6ThreadD1Ev = hidden unnamed_addr alias void (%"class.port::Thread"*), void (%"class.port::Thread"*)* @_ZN4port6ThreadD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4port6ThreadC2EjP13NaClAppThread(%"class.port::Thread"* nocapture, i32, %struct.NaClAppThread*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 2
  store %struct.NaClAppThread* %2, %struct.NaClAppThread** %5, align 8
  %6 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 4
  store i32 0, i32* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4port6ThreadD2Ev(%"class.port::Thread"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4port6Thread5GetIdEv(%"class.port::Thread"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4port6Thread7SetStepEb(%"class.port::Thread"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 3, i32 17
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -257
  %6 = or i32 %4, 256
  %7 = select i1 %1, i32 %6, i32 %5
  store i32 %7, i32* %3, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4port6Thread12GetRegistersEPh(%"class.port::Thread"* nocapture readonly, i8* nocapture) local_unnamed_addr #4 align 2 {
  %3 = alloca i32, align 4
  %4 = tail call %"class.gdb_rsp::Abi"* @_ZN7gdb_rsp3Abi3GetEv() #8
  %5 = tail call i32 @_ZNK7gdb_rsp3Abi16GetRegisterCountEv(%"class.gdb_rsp::Abi"* %4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = bitcast i32* %3 to i8*
  %9 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 3
  %10 = bitcast %struct.NaClSignalContext* %9 to i8*
  br label %12

11:                                               ; preds = %51, %2
  ret i1 false

12:                                               ; preds = %7, %51
  %13 = phi i32 [ 0, %7 ], [ %52, %51 ]
  %14 = tail call %"struct.gdb_rsp::Abi::RegDef"* @_ZNK7gdb_rsp3Abi14GetRegisterDefEj(%"class.gdb_rsp::Abi"* %4, i32 %13) #8
  %15 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %14, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  switch i32 %16, label %42 [
    i32 5, label %17
    i32 3, label %25
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %14, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %1, i64 %20
  %22 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 0, i64 %24, i1 false)
  br label %51

25:                                               ; preds = %12
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 66, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #8
  %26 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %14, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #8
  %30 = load i32, i32* %26, align 8
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi i32 [ %30, %29 ], [ 4, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8)
  %33 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %14, i64 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %10, i64 %35
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, -268435456
  store i32 %39, i32* %3, align 4
  %40 = getelementptr inbounds i8, i8* %1, i64 %35
  %41 = zext i32 %32 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* nonnull align 4 %8, i64 %41, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8)
  br label %51

42:                                               ; preds = %12
  %43 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %14, i64 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %1, i64 %45
  %47 = getelementptr inbounds i8, i8* %10, i64 %45
  %48 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %14, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %47, i64 %50, i1 false)
  br label %51

51:                                               ; preds = %31, %42, %17
  %52 = add nuw i32 %13, 1
  %53 = tail call i32 @_ZNK7gdb_rsp3Abi16GetRegisterCountEv(%"class.gdb_rsp::Abi"* %4) #8
  %54 = icmp ult i32 %52, %53
  br i1 %54, label %12, label %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare %"class.gdb_rsp::Abi"* @_ZN7gdb_rsp3Abi3GetEv() local_unnamed_addr #6

declare i32 @_ZNK7gdb_rsp3Abi16GetRegisterCountEv(%"class.gdb_rsp::Abi"*) local_unnamed_addr #6

declare %"struct.gdb_rsp::Abi::RegDef"* @_ZNK7gdb_rsp3Abi14GetRegisterDefEj(%"class.gdb_rsp::Abi"*, i32) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4port6Thread12SetRegistersEPh(%"class.port::Thread"* nocapture, i8* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = tail call %"class.gdb_rsp::Abi"* @_ZN7gdb_rsp3Abi3GetEv() #8
  %4 = tail call i32 @_ZNK7gdb_rsp3Abi16GetRegisterCountEv(%"class.gdb_rsp::Abi"* %3) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 4
  %8 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 3
  %9 = bitcast %struct.NaClSignalContext* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 4
  br label %20

11:                                               ; preds = %117
  %12 = tail call i32 @_ZNK7gdb_rsp3Abi16GetRegisterCountEv(%"class.gdb_rsp::Abi"* %3) #8
  %13 = icmp ult i32 %121, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %11, %2
  %15 = tail call i32 @_ZNK7gdb_rsp3Abi16GetRegisterCountEv(%"class.gdb_rsp::Abi"* %3) #8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %172, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 3
  %19 = bitcast %struct.NaClSignalContext* %18 to i8*
  br label %122

20:                                               ; preds = %6, %11
  %21 = phi i8 [ 1, %6 ], [ %118, %11 ]
  %22 = phi i32 [ 0, %6 ], [ %121, %11 ]
  %23 = tail call %"struct.gdb_rsp::Abi::RegDef"* @_ZNK7gdb_rsp3Abi14GetRegisterDefEj(%"class.gdb_rsp::Abi"* %3, i32 %22) #8
  %24 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  switch i32 %25, label %117 [
    i32 1, label %26
    i32 5, label %39
    i32 2, label %63
    i32 3, label %78
    i32 4, label %94
  ]

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %1, i64 %29
  %31 = getelementptr inbounds i8, i8* %9, i64 %29
  %32 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = tail call i32 @bcmp(i8* %30, i8* %31, i64 %34)
  %36 = icmp eq i32 %35, 0
  %37 = zext i1 %36 to i8
  %38 = and i8 %21, %37
  br label %117

39:                                               ; preds = %20
  %40 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 4
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %1, i64 %42
  %44 = getelementptr inbounds i8, i8* %9, i64 %42
  %45 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = zext i32 %46 to i64
  %48 = tail call i32 @bcmp(i8* %43, i8* %44, i64 %47)
  %49 = icmp eq i32 %48, 0
  %50 = icmp eq i32 %46, 0
  %51 = or i1 %50, %49
  br i1 %51, label %60, label %54

52:                                               ; preds = %54
  %53 = icmp eq i64 %59, %47
  br i1 %53, label %60, label %54

54:                                               ; preds = %39, %52
  %55 = phi i64 [ %59, %52 ], [ 0, %39 ]
  %56 = getelementptr inbounds i8, i8* %43, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 0
  %59 = add nuw nsw i64 %55, 1
  br i1 %58, label %52, label %60

60:                                               ; preds = %54, %52, %39
  %61 = phi i8 [ 1, %39 ], [ 0, %54 ], [ 1, %52 ]
  %62 = and i8 %61, %21
  br label %117

63:                                               ; preds = %20
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 101, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #8
  %64 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 4
  br i1 %66, label %68, label %67

67:                                               ; preds = %63
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %68

68:                                               ; preds = %67, %63
  %69 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 4
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %1, i64 %71
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = icmp ult i32 %74, 1073741824
  %76 = zext i1 %75 to i8
  %77 = and i8 %21, %76
  br label %117

78:                                               ; preds = %20
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 107, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #8
  %79 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 4
  br i1 %81, label %83, label %82

82:                                               ; preds = %78
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 108, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %83

83:                                               ; preds = %82, %78
  %84 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 4
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %1, i64 %86
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 268435455
  %91 = icmp eq i32 %90, 0
  %92 = zext i1 %91 to i8
  %93 = and i8 %21, %92
  br label %117

94:                                               ; preds = %20
  %95 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 8
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 115, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %99

99:                                               ; preds = %98, %94
  %100 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %23, i64 0, i32 4
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %7, i64 %102
  %104 = getelementptr inbounds i8, i8* %10, i64 %102
  %105 = tail call i32 @bcmp(i8* %103, i8* %104, i64 4)
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %99
  %108 = load i8, i8* %103, align 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %107
  %111 = getelementptr inbounds i8, i8* %103, i64 1
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %174, label %114

114:                                              ; preds = %178, %107, %110, %174, %99
  %115 = phi i8 [ 1, %99 ], [ 0, %107 ], [ 0, %110 ], [ 0, %174 ], [ %182, %178 ]
  %116 = and i8 %115, %21
  br label %117

117:                                              ; preds = %20, %60, %83, %114, %68, %26
  %118 = phi i8 [ %38, %26 ], [ %62, %60 ], [ %77, %68 ], [ %93, %83 ], [ %116, %114 ], [ %21, %20 ]
  %119 = and i8 %118, 1
  %120 = icmp eq i8 %119, 0
  %121 = add nuw i32 %22, 1
  br i1 %120, label %172, label %11

122:                                              ; preds = %17, %168
  %123 = phi i32 [ 0, %17 ], [ %169, %168 ]
  %124 = tail call %"struct.gdb_rsp::Abi::RegDef"* @_ZNK7gdb_rsp3Abi14GetRegisterDefEj(%"class.gdb_rsp::Abi"* %3, i32 %123) #8
  %125 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %124, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  switch i32 %126, label %159 [
    i32 1, label %168
    i32 5, label %168
    i32 4, label %127
    i32 3, label %141
  ]

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %124, i64 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 8
  br i1 %130, label %132, label %131

131:                                              ; preds = %127
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %132

132:                                              ; preds = %131, %127
  %133 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %124, i64 0, i32 4
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %19, i64 %135
  %137 = getelementptr inbounds i8, i8* %1, i64 %135
  %138 = bitcast i8* %137 to i32*
  %139 = bitcast i8* %136 to i32*
  %140 = load i32, i32* %138, align 1
  store i32 %140, i32* %139, align 1
  br label %168

141:                                              ; preds = %122
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #8
  %142 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %124, i64 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 4
  br i1 %144, label %146, label %145

145:                                              ; preds = %141
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 140, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %146

146:                                              ; preds = %145, %141
  %147 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %124, i64 0, i32 4
  %148 = load i32, i32* %147, align 4
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %1, i64 %149
  %151 = bitcast i8* %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds i8, i8* %19, i64 %149
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %152, -268435456
  %157 = and i32 %155, 268435455
  %158 = or i32 %157, %156
  store i32 %158, i32* %154, align 1
  br label %168

159:                                              ; preds = %122
  %160 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %124, i64 0, i32 4
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %19, i64 %162
  %164 = getelementptr inbounds i8, i8* %1, i64 %162
  %165 = getelementptr inbounds %"struct.gdb_rsp::Abi::RegDef", %"struct.gdb_rsp::Abi::RegDef"* %124, i64 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = zext i32 %166 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %163, i8* align 1 %164, i64 %167, i1 false)
  br label %168

168:                                              ; preds = %122, %122, %132, %159, %146
  %169 = add nuw i32 %123, 1
  %170 = tail call i32 @_ZNK7gdb_rsp3Abi16GetRegisterCountEv(%"class.gdb_rsp::Abi"* %3) #8
  %171 = icmp ult i32 %169, %170
  br i1 %171, label %122, label %172

172:                                              ; preds = %117, %168, %14
  %173 = phi i1 [ true, %14 ], [ true, %168 ], [ false, %117 ]
  ret i1 %173

174:                                              ; preds = %110
  %175 = getelementptr inbounds i8, i8* %103, i64 2
  %176 = load i8, i8* %175, align 1
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %114

178:                                              ; preds = %174
  %179 = getelementptr inbounds i8, i8* %103, i64 3
  %180 = load i8, i8* %179, align 1
  %181 = icmp eq i8 %180, 0
  %182 = zext i1 %181 to i8
  br label %114
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4port6Thread26CopyRegistersFromAppThreadEv(%"class.port::Thread"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 2
  %3 = load %struct.NaClAppThread*, %struct.NaClAppThread** %2, align 8
  %4 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 3
  tail call void @NaClAppThreadGetSuspendedRegisters(%struct.NaClAppThread* %3, %struct.NaClSignalContext* %4) #8
  ret void
}

declare void @NaClAppThreadGetSuspendedRegisters(%struct.NaClAppThread*, %struct.NaClSignalContext*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4port6Thread24CopyRegistersToAppThreadEv(%"class.port::Thread"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 2
  %3 = load %struct.NaClAppThread*, %struct.NaClAppThread** %2, align 8
  %4 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 3
  tail call void @NaClAppThreadSetSuspendedRegisters(%struct.NaClAppThread* %3, %struct.NaClSignalContext* %4) #8
  ret void
}

declare void @NaClAppThreadSetSuspendedRegisters(%struct.NaClAppThread*, %struct.NaClSignalContext*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4port6Thread13SuspendThreadEv(%"class.port::Thread"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 2
  %3 = load %struct.NaClAppThread*, %struct.NaClAppThread** %2, align 8
  tail call void @NaClUntrustedThreadSuspend(%struct.NaClAppThread* %3, i32 1) #8
  %4 = load %struct.NaClAppThread*, %struct.NaClAppThread** %2, align 8
  %5 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 3
  tail call void @NaClAppThreadGetSuspendedRegisters(%struct.NaClAppThread* %4, %struct.NaClSignalContext* %5) #8
  ret void
}

declare void @NaClUntrustedThreadSuspend(%struct.NaClAppThread*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4port6Thread12ResumeThreadEv(%"class.port::Thread"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 2
  %3 = load %struct.NaClAppThread*, %struct.NaClAppThread** %2, align 8
  %4 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 3
  tail call void @NaClAppThreadSetSuspendedRegisters(%struct.NaClAppThread* %3, %struct.NaClSignalContext* %4) #8
  %5 = load %struct.NaClAppThread*, %struct.NaClAppThread** %2, align 8
  tail call void @NaClUntrustedThreadResume(%struct.NaClAppThread* %5) #8
  ret void
}

declare void @NaClUntrustedThreadResume(%struct.NaClAppThread*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4port6Thread16HasThreadFaultedEv(%"class.port::Thread"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 2
  %3 = load %struct.NaClAppThread*, %struct.NaClAppThread** %2, align 8
  %4 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %3, i64 0, i32 9
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4port6Thread20UnqueueFaultedThreadEv(%"class.port::Thread"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 -1431655766, i32* %2, align 4
  %4 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 2
  %5 = load %struct.NaClAppThread*, %struct.NaClAppThread** %4, align 8
  %6 = call i32 @NaClAppThreadUnblockIfFaulted(%struct.NaClAppThread* %5, i32* nonnull %2) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 198, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  ret void
}

declare i32 @NaClAppThreadUnblockIfFaulted(%struct.NaClAppThread*, i32*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4port6Thread14GetFaultSignalEv(%"class.port::Thread"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4port6Thread14SetFaultSignalEi(%"class.port::Thread"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.NaClSignalContext* @_ZN4port6Thread10GetContextEv(%"class.port::Thread"* readnone) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 3
  ret %struct.NaClSignalContext* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.NaClAppThread* @_ZN4port6Thread12GetAppThreadEv(%"class.port::Thread"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.port::Thread", %"class.port::Thread"* %0, i64 0, i32 2
  %3 = load %struct.NaClAppThread*, %struct.NaClAppThread** %2, align 8
  ret %struct.NaClAppThread* %3
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
