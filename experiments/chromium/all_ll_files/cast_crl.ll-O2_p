; ModuleID = '../../components/cast_certificate/cast_crl.cc'
source_filename = "../../components/cast_certificate/cast_crl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.cast_certificate::CastCRL" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::CertErrors" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.98" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.net::CertError"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.net::TrustStoreInMemory" = type { %"class.net::TrustStore", %"class.std::__1::unordered_multimap" }
%"class.net::TrustStore" = type { %"class.net::CertIssuerSource" }
%"class.net::CertIssuerSource" = type { i32 (...)** }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.62" }
%"class.std::__1::__hash_table.62" = type <{ %"class.std::__1::unique_ptr.63", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base.66"** }
%"struct.std::__1::__hash_node_base.66" = type { %"struct.std::__1::__hash_node_base.66"* }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::__bucket_list_deallocator.68" }
%"class.std::__1::__bucket_list_deallocator.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base.66" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { float }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::unique_ptr.103", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector.119", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.138", %"class.std::__1::vector.138", i8, %"class.std::__1::vector.119", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.145", i8, i8, %"class.absl::optional", %"class.absl::optional.153", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type { i32, i32, %"class.std::__1::unique_ptr.110" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.net::SignatureAlgorithmParameters"* }
%"class.net::SignatureAlgorithmParameters" = type { i32 (...)** }
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type opaque
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.140" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.147" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.153", %"class.absl::optional.153", %"class.absl::optional.153" }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"class.net::der::Input" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.cast_certificate::(anonymous namespace)::CastCRLTrustStore" = type { %"class.net::TrustStoreInMemory" }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.net::SimplePathBuilderDelegate" = type <{ %"class.net::CertPathBuilderDelegate", i64, i32, [4 x i8] }>
%"class.net::CertPathBuilderDelegate" = type { %"class.net::VerifyCertificateChainDelegate" }
%"class.net::VerifyCertificateChainDelegate" = type { i32 (...)** }
%"class.net::CertPathBuilder" = type <{ %"struct.net::CertPathBuilder::Result", %"class.std::__1::unique_ptr.189", %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime", i32, i32, %"class.std::__1::set", i32, i32, i32, [4 x i8], %"class.base::TimeTicks", i8, [7 x i8] }>
%"struct.net::CertPathBuilder::Result" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %"class.std::__1::vector.181", i64, i8, i8, [6 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.170", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"class.std::__1::unique_ptr.183"*, %"class.std::__1::unique_ptr.183"*, %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::unique_ptr.183" = type opaque
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.std::__1::unique_ptr.183"* }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.net::CertPathIter"* }
%"class.net::CertPathIter" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.195" }
%"class.std::__1::__tree.195" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.196", %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.202" }
%"class.base::time_internal::TimeBase.202" = type { i64 }
%"class.cast::certificate::CrlBundle" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic.4", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic.9" }
%"class.cast::certificate::TbsCrl" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.14", %"class.google::protobuf::RepeatedPtrField.15", i64, i64, i64 }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::RepeatedPtrField.14" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.15" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.net::der::Input" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.cast::certificate::Crl" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"struct.net::CertPathBuilderResultPath" = type { %"class.std::__1::vector.203", %"struct.net::CertificateTrust", %"class.std::__1::set", %"class.std::__1::unique_ptr.210", %"class.net::CertPathErrors" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.205" }
%class.scoped_refptr = type { %"class.net::ParsedCertificate"* }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %class.scoped_refptr* }
%"struct.net::CertificateTrust" = type { i32 }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.net::CertPathBuilderDelegateData"* }
%"class.net::CertPathBuilderDelegateData" = type { i32 (...)** }
%"class.net::CertPathErrors" = type { %"class.std::__1::vector.216", %"class.net::CertErrors" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.net::CertErrors"*, %"class.net::CertErrors"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.net::CertErrors"* }
%"class.cast::certificate::SerialNumberRange" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", i64, i64 }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.35", [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__hash_table.38" = type <{ %"class.std::__1::unique_ptr.39", %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.56", [4 x i8] }>
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base.42"** }
%"struct.std::__1::__hash_node_base.42" = type { %"struct.std::__1::__hash_node_base.42"* }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__bucket_list_deallocator.44" }
%"class.std::__1::__bucket_list_deallocator.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.42" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange" = type { i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.cast_certificate::(anonymous namespace)::CastCRLImpl" = type { %"class.cast_certificate::CastCRL", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.std::__1::unordered_set", %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.38" }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

@.str = private unnamed_addr constant [46 x i8] c"../../components/cast_certificate/cast_crl.cc\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"CRL - Binary could not be parsed.\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"Binary TBS CRL could not be parsed.\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"CRL - Verification failed.\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"No supported version of revocation data.\00", align 1
@_ZN4base9SingletonIN16cast_certificate12_GLOBAL__N_117CastCRLTrustStoreENS_20LeakySingletonTraitsIS3_EES3_E9instance_E = internal global i64 0, align 8
@_ZN16cast_certificate12_GLOBAL__N_117kCastCRLRootCaDerE = internal constant [978 x i8] c"0\82\03\CE0\82\02\B6\A0\03\02\01\02\02\02\00\990\0D\06\09*\86H\86\F7\0D\01\01\0B\05\000y1\0B0\09\06\03U\04\06\13\02US1\130\11\06\03U\04\08\0C\0ACalifornia1\160\14\06\03U\04\07\0C\0DMountain View1\130\11\06\03U\04\0A\0C\0AGoogle Inc1\0D0\0B\06\03U\04\0B\0C\04Cast1\190\17\06\03U\04\03\0C\10Cast CRL Root CA0\1E\17\0D160801214747Z\17\0D360727214747Z0y1\0B0\09\06\03U\04\06\13\02US1\130\11\06\03U\04\08\0C\0ACalifornia1\160\14\06\03U\04\07\0C\0DMountain View1\130\11\06\03U\04\0A\0C\0AGoogle Inc1\0D0\0B\06\03U\04\0B\0C\04Cast1\190\17\06\03U\04\03\0C\10Cast CRL Root CA0\82\01\220\0D\06\09*\86H\86\F7\0D\01\01\01\05\00\03\82\01\0F\000\82\01\0A\02\82\01\01\00\C2\7F\C0\09!\D3`\89(\B5\96n\FE\A6\AD\FE\AE\E0f5\BD\99n\E8\93\85)\BA\DED]\A8k\FC\E6\CC7\DD\1D\0F\CF\1E:2,\7F\E0\1B\C9\BBL4\A9\1C\97\B5\F8mB\9CM\06j\A0-\95U?x\1D\5C\AB\E9:\A6\08;Z\AF\F4\ABSw\14\9Ak\B27.\CDn\EA\BC\22]VUs\FD\BD\03/T^\7F\8B\C1t6\1A\18\1Fd\DE\BF\08\80J\12\0CIS\B8\C7;\DB_\DCYw/\B8:\05\8A\F6\B7G*\9Btc\081\12\E6{D\D1\C1|\C8\87\B8Pcm\9F\D7\BA6SrG_\DCCC\EB\D7.\11\D1\8Az\A4\03\F2j\D3\88\E6\A7\B8\9D\81\B2\B0\88$\C8\A1\FA\B0\AA\DB\08d>\8B*\07\5CZ\82\05\99\C2\D5\CARu!\A7\FA\C5\A1\DA\AC\F7\FE\D0\C7Dv\9A\EBk\D3\BD\F4z1\A6\AD/Z\C41:m\F1\DD{D\817\CF\13\85]\96\AE{\96+\02\03\01\00\01\A3`0^0\0F\06\03U\1D\13\04\080\06\01\01\FF\02\01\010\1D\06\03U\1D\0E\04\16\04\14\1Ae\12\B4\A9\B9\B4\FC\91\0C\9Eg\E0[\D9\C9\ADD\1C\B90\1F\06\03U\1D#\04\180\16\80\14\1Ae\12\B4\A9\B9\B4\FC\91\0C\9Eg\E0[\D9\C9\ADD\1C\B90\0B\06\03U\1D\0F\04\04\03\02\02\040\0D\06\09*\86H\86\F7\0D\01\01\0B\05\00\03\82\01\01\00\AF_\8B\C0\F7\C5&\88\B9\AC\F7\ECM\0Fv\AB\E2t\9AD<3\F6t=\04*Yv\A2\05'\C4\E3\A2\C8\C2\AF~\FD\BE\B9\CA\E9[\A8*\CD\A7\1E\0E7\F1o\84^\AAB\1F\BA\F0D\BA\DB\87ah\91\BB\1D\5C:\F0\8E\02 v\AAG\99\C7s\0D\902J\B9\E3\FD\11\8B]\BD\22M\05u\17a\A2\A6O\B0=R\8E\AA\C9\B4\8D\05Z\1C6\C1{\87\F7\F8\E4\816'\EC5\AE\B9\CE\15G\E1\10\C9\16i:\22\8Ec\181\CC;Vi\C6\D4$\DD\95%\CF4\E6\00\AE\E1\87\1E\EE\0C\14\DC\0D\82\811\1F\8Fm\D2\C0\E1|\12\F7\9D\CA\02\E3v6DS:\87q}\ED2L\A4\96\E6\E5,\C7\0D\B7\96\C0\F3}\E5X2\F7%%\C0\13v\D0vls\AB=\15\CD\C5\E8\85\15\9A\02R\E9aA\E2f\01\C5q\E5\DB\C0\A5\B3L\1E\AC\93\8A5LM\DAW\22$\1D:\F6\BD", align 16
@.ref.tmp = private constant %"struct.net::ParseCertificateOptions" zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"cert\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.7 = private unnamed_addr constant [21 x i8] c"CRL - Missing fields\00", align 1
@.ref.tmp.8 = private constant %"struct.net::ParseCertificateOptions" zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"CRL - Issuer certificate parsing failed:\0A\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"CRL - Signature verification failed\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"CRL - Unable to parse verification time.\00", align 1
@.str.12 = private unnamed_addr constant [46 x i8] c"CRL - Issuer certificate verification failed.\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"CRL - Unable to parse not_before.\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"CRL - Unable to parse not_after.\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"CRL - Not time-valid.\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"CRL - Malformed serial number range.\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.18 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZTVN16cast_certificate12_GLOBAL__N_111CastCRLImplE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cast_certificate::(anonymous namespace)::CastCRLImpl"*)* @_ZN16cast_certificate12_GLOBAL__N_111CastCRLImplD2Ev to i8*), i8* bitcast (void (%"class.cast_certificate::(anonymous namespace)::CastCRLImpl"*)* @_ZN16cast_certificate12_GLOBAL__N_111CastCRLImplD0Ev to i8*), i8* bitcast (i1 (%"class.cast_certificate::(anonymous namespace)::CastCRLImpl"*, %"class.std::__1::vector.203"*, %"class.base::Time"*)* @_ZNK16cast_certificate12_GLOBAL__N_111CastCRLImpl15CheckRevocationERKNSt3__16vectorI13scoped_refptrIN3net17ParsedCertificateEENS2_9allocatorIS7_EEEERKN4base4TimeE to i8*)] }, align 8
@.str.19 = private unnamed_addr constant [33 x i8] c"CRL verification time malformed.\00", align 1
@.str.20 = private unnamed_addr constant [39 x i8] c"CRL not time-valid. Perform hard fail.\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"Public key is revoked.\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"Serial number is revoked\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cast_certificate::CastCRL"* @_ZN16cast_certificate17ParseAndVerifyCRLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base4TimeE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.net::CertErrors", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = load atomic i64, i64* @_ZN4base9SingletonIN16cast_certificate12_GLOBAL__N_117CastCRLTrustStoreENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  %7 = icmp ugt i64 %6, 1
  br i1 %7, label %41, label %8

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN16cast_certificate12_GLOBAL__N_117CastCRLTrustStoreENS_20LeakySingletonTraitsIS3_EES3_E9instance_E) #12
  br i1 %9, label %10, label %39

10:                                               ; preds = %8
  %11 = tail call i8* @_Znwm(i64 48) #13
  %12 = bitcast i8* %11 to %"class.net::TrustStoreInMemory"*
  tail call void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"* nonnull %12) #12
  %13 = bitcast %"class.net::CertErrors"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false) #12
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %3) #12
  %14 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate26CreateWithoutCopyingUnsafeEPKhmRKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(i8* getelementptr inbounds ([978 x i8], [978 x i8]* @_ZN16cast_certificate12_GLOBAL__N_117kCastCRLRootCaDerE, i64 0, i64 0), i64 978, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) @.ref.tmp, %"class.net::CertErrors"* nonnull %3) #12
  %15 = icmp eq %"class.net::ParsedCertificate"* %14, null
  br i1 %15, label %16, label %37

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  call void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::CertErrors"* nonnull %3) #12
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %22 to i64
  %29 = select i1 %23, i8* %25, i8* %19
  %30 = select i1 %23, i64 %27, i64 %28
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* %29, i64 %30) #12
  %32 = load i8, i8* %21, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %16
  %35 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %34, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %37

37:                                               ; preds = %36, %10
  call void @_ZN3net18TrustStoreInMemory29AddTrustAnchorWithConstraintsE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::TrustStoreInMemory"* nonnull %12, %"class.net::ParsedCertificate"* %14) #12
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  %38 = ptrtoint i8* %11 to i64
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN16cast_certificate12_GLOBAL__N_117CastCRLTrustStoreENS_20LeakySingletonTraitsIS3_EES3_E9instance_E, i64 %38, void (i8*)* null, i8* null) #12
  br label %41

39:                                               ; preds = %8
  %40 = load atomic i64, i64* @_ZN4base9SingletonIN16cast_certificate12_GLOBAL__N_117CastCRLTrustStoreENS_20LeakySingletonTraitsIS3_EES3_E9instance_E acquire, align 8
  br label %41

41:                                               ; preds = %2, %37, %39
  %42 = phi i64 [ %6, %2 ], [ %38, %37 ], [ %40, %39 ]
  %43 = inttoptr i64 %42 to %"class.cast_certificate::(anonymous namespace)::CastCRLTrustStore"*
  %44 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLTrustStore", %"class.cast_certificate::(anonymous namespace)::CastCRLTrustStore"* %43, i64 0, i32 0, i32 0
  %45 = call %"class.cast_certificate::CastCRL"* @_ZN16cast_certificate38ParseAndVerifyCRLUsingCustomTrustStoreERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base4TimeEPN3net10TrustStoreE(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.base::Time"* dereferenceable(8) %1, %"class.net::TrustStore"* %44)
  ret %"class.cast_certificate::CastCRL"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cast_certificate::CastCRL"* @_ZN16cast_certificate38ParseAndVerifyCRLUsingCustomTrustStoreERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base4TimeEPN3net10TrustStoreE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Time"* dereferenceable(8), %"class.net::TrustStore"*) local_unnamed_addr #0 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::Time", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::Time", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.base::Time", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.base::Time", align 8
  %14 = alloca %"class.logging::LogMessage", align 8
  %15 = alloca %"class.net::CertErrors", align 8
  %16 = alloca %"class.base::BasicStringPiece", align 8
  %17 = alloca %"class.logging::LogMessage", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.net::der::BitString", align 8
  %20 = alloca %"class.net::der::Input", align 8
  %21 = alloca %"class.base::BasicStringPiece", align 8
  %22 = alloca %"class.net::der::Input", align 8
  %23 = alloca %"class.logging::LogMessage", align 8
  %24 = alloca i64, align 8
  %25 = alloca %"class.logging::LogMessage", align 8
  %26 = alloca %"class.net::SimplePathBuilderDelegate", align 8
  %27 = alloca %"class.net::CertPathBuilder", align 8
  %28 = alloca %"class.std::__1::set", align 8
  %29 = alloca [1 x %"class.net::der::Input"], align 8
  %30 = alloca %"struct.net::CertPathBuilder::Result", align 8
  %31 = alloca %"class.logging::LogMessage", align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.logging::LogMessage", align 8
  %34 = alloca i64, align 8
  %35 = alloca %"class.logging::LogMessage", align 8
  %36 = alloca %"class.logging::LogMessage", align 8
  %37 = alloca i64, align 8
  %38 = alloca %"class.logging::LogMessage", align 8
  %39 = alloca %"class.cast::certificate::CrlBundle", align 8
  %40 = alloca %"class.logging::LogMessage", align 8
  %41 = alloca %"class.cast::certificate::TbsCrl", align 8
  %42 = alloca %"class.logging::LogMessage", align 8
  %43 = alloca i64, align 8
  %44 = bitcast i64* %43 to %"struct.net::der::GeneralizedTime"*
  %45 = alloca %"class.logging::LogMessage", align 8
  %46 = alloca %"class.logging::LogMessage", align 8
  %47 = icmp eq %"class.net::TrustStore"* %2, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %3
  %49 = tail call %"class.cast_certificate::CastCRL"* @_ZN16cast_certificate17ParseAndVerifyCRLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base4TimeE(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.base::Time"* dereferenceable(8) %1)
  %50 = ptrtoint %"class.cast_certificate::CastCRL"* %49 to i64
  br label %932

51:                                               ; preds = %3
  %52 = bitcast %"class.cast::certificate::CrlBundle"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %52) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 48, i1 false)
  call void @_ZN4cast11certificate9CrlBundleC2EPN6google8protobuf5ArenaE(%"class.cast::certificate::CrlBundle"* nonnull %39, %"class.google::protobuf::Arena"* null) #12
  %53 = getelementptr inbounds %"class.cast::certificate::CrlBundle", %"class.cast::certificate::CrlBundle"* %39, i64 0, i32 0
  %54 = call zeroext i1 @_ZN6google8protobuf11MessageLite15ParseFromStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"* nonnull %53, %"class.std::__1::basic_string"* dereferenceable(24) %0) #12
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  %56 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %56, label %57, label %930

57:                                               ; preds = %55
  %58 = bitcast %"class.logging::LogMessage"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %58) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %40, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 370, i32 2) #12
  %59 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %40, i64 0, i32 2
  %60 = bitcast %"class.std::__1::basic_ostringstream"* %59 to %"class.std::__1::basic_ostream"*
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %60, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i64 33) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %40) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %58) #12
  br label %930

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.cast::certificate::CrlBundle", %"class.cast::certificate::CrlBundle"* %39, i64 0, i32 1, i32 0, i32 3
  %64 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %63, align 8
  %65 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %64, null
  %66 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %64, i64 0, i32 1, i64 0
  %67 = select i1 %65, i8** null, i8** %66
  %68 = getelementptr inbounds %"class.cast::certificate::CrlBundle", %"class.cast::certificate::CrlBundle"* %39, i64 0, i32 1, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8*, i8** %67, i64 %70
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %923, label %73

73:                                               ; preds = %62
  %74 = bitcast %"class.cast::certificate::TbsCrl"* %41 to i8*
  %75 = getelementptr inbounds %"class.cast::certificate::TbsCrl", %"class.cast::certificate::TbsCrl"* %41, i64 0, i32 0
  %76 = bitcast %"class.logging::LogMessage"* %42 to i8*
  %77 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %42, i64 0, i32 2
  %78 = bitcast %"class.std::__1::basic_ostringstream"* %77 to %"class.std::__1::basic_ostream"*
  %79 = getelementptr inbounds %"class.cast::certificate::TbsCrl", %"class.cast::certificate::TbsCrl"* %41, i64 0, i32 5
  %80 = bitcast i64* %43 to i8*
  %81 = bitcast i64* %24 to %"struct.net::der::GeneralizedTime"*
  %82 = bitcast i64* %32 to %"struct.net::der::GeneralizedTime"*
  %83 = bitcast i64* %34 to %"struct.net::der::GeneralizedTime"*
  %84 = bitcast i64* %37 to %"struct.net::der::GeneralizedTime"*
  %85 = bitcast %"class.logging::LogMessage"* %14 to i8*
  %86 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %14, i64 0, i32 2
  %87 = bitcast %"class.std::__1::basic_ostringstream"* %86 to %"class.std::__1::basic_ostream"*
  %88 = bitcast %"class.net::CertErrors"* %15 to i8*
  %89 = bitcast %"class.base::BasicStringPiece"* %16 to i8*
  %90 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 0
  %91 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 1
  %92 = bitcast %"class.net::der::BitString"* %19 to i8*
  %93 = bitcast %"class.net::der::Input"* %20 to i8*
  %94 = bitcast %"class.base::BasicStringPiece"* %21 to i8*
  %95 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 0, i32 0
  %96 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 0, i32 1
  %97 = bitcast %"class.net::der::Input"* %22 to i8*
  %98 = bitcast %"class.logging::LogMessage"* %23 to i8*
  %99 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %23, i64 0, i32 2
  %100 = bitcast %"class.std::__1::basic_ostringstream"* %99 to %"class.std::__1::basic_ostream"*
  %101 = bitcast i64* %24 to i8*
  %102 = bitcast %"class.logging::LogMessage"* %25 to i8*
  %103 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %25, i64 0, i32 2
  %104 = bitcast %"class.std::__1::basic_ostringstream"* %103 to %"class.std::__1::basic_ostream"*
  %105 = bitcast %"class.net::SimplePathBuilderDelegate"* %26 to i8*
  %106 = bitcast %"class.net::CertPathBuilder"* %27 to i8*
  %107 = getelementptr inbounds %"class.net::SimplePathBuilderDelegate", %"class.net::SimplePathBuilderDelegate"* %26, i64 0, i32 0
  %108 = bitcast %"class.std::__1::set"* %28 to i8*
  %109 = bitcast [1 x %"class.net::der::Input"]* %29 to i8*
  %110 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %29, i64 0, i64 0
  %111 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %29, i64 0, i64 0, i32 0
  %112 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %29, i64 0, i64 0, i32 1
  %113 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::__tree_node_base"** %113 to i8*
  %117 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %29, i64 0, i64 1
  %118 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0
  %119 = bitcast %"class.std::__1::__tree_end_node"* %114 to %"class.std::__1::__tree_node"**
  %120 = bitcast %"struct.net::CertPathBuilder::Result"* %30 to i8*
  %121 = bitcast %"class.logging::LogMessage"* %31 to i8*
  %122 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %31, i64 0, i32 2
  %123 = bitcast %"class.std::__1::basic_ostringstream"* %122 to %"class.std::__1::basic_ostream"*
  %124 = bitcast i64* %32 to i8*
  %125 = getelementptr inbounds %"class.cast::certificate::TbsCrl", %"class.cast::certificate::TbsCrl"* %41, i64 0, i32 6
  %126 = bitcast %"class.base::Time"* %11 to i8*
  %127 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %11, i64 0, i32 0, i32 0
  %128 = bitcast %"class.logging::CheckError"* %10 to i8*
  %129 = bitcast %"class.logging::LogMessage"* %33 to i8*
  %130 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %33, i64 0, i32 2
  %131 = bitcast %"class.std::__1::basic_ostringstream"* %130 to %"class.std::__1::basic_ostream"*
  %132 = bitcast i64* %34 to i8*
  %133 = getelementptr inbounds %"class.cast::certificate::TbsCrl", %"class.cast::certificate::TbsCrl"* %41, i64 0, i32 7
  %134 = bitcast %"class.base::Time"* %13 to i8*
  %135 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %13, i64 0, i32 0, i32 0
  %136 = bitcast %"class.logging::CheckError"* %12 to i8*
  %137 = bitcast %"class.logging::LogMessage"* %35 to i8*
  %138 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %35, i64 0, i32 2
  %139 = bitcast %"class.std::__1::basic_ostringstream"* %138 to %"class.std::__1::basic_ostream"*
  %140 = bitcast i64* %37 to i8*
  %141 = getelementptr inbounds %"class.cast::certificate::TbsCrl", %"class.cast::certificate::TbsCrl"* %41, i64 0, i32 4, i32 0, i32 3
  %142 = getelementptr inbounds %"class.cast::certificate::TbsCrl", %"class.cast::certificate::TbsCrl"* %41, i64 0, i32 4, i32 0, i32 1
  %143 = bitcast %"class.logging::LogMessage"* %38 to i8*
  %144 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %38, i64 0, i32 2
  %145 = bitcast %"class.std::__1::basic_ostringstream"* %144 to %"class.std::__1::basic_ostream"*
  %146 = bitcast %"class.logging::LogMessage"* %36 to i8*
  %147 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %36, i64 0, i32 2
  %148 = bitcast %"class.std::__1::basic_ostringstream"* %147 to %"class.std::__1::basic_ostream"*
  %149 = getelementptr inbounds %"class.net::SimplePathBuilderDelegate", %"class.net::SimplePathBuilderDelegate"* %26, i64 0, i32 0, i32 0
  %150 = bitcast %"class.base::Time"* %8 to i8*
  %151 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  %152 = bitcast %"class.logging::CheckError"* %7 to i8*
  %153 = bitcast %"class.base::Time"* %6 to i8*
  %154 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  %155 = bitcast %"class.logging::CheckError"* %5 to i8*
  %156 = getelementptr inbounds %"class.cast::certificate::TbsCrl", %"class.cast::certificate::TbsCrl"* %41, i64 0, i32 3, i32 0, i32 3
  %157 = getelementptr inbounds %"class.cast::certificate::TbsCrl", %"class.cast::certificate::TbsCrl"* %41, i64 0, i32 3, i32 0, i32 1
  %158 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  %164 = bitcast %"class.logging::LogMessage"* %17 to i8*
  %165 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %17, i64 0, i32 2
  %166 = bitcast %"class.std::__1::basic_ostringstream"* %165 to %"class.std::__1::basic_ostream"*
  %167 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %172 = bitcast %"class.logging::LogMessage"* %45 to i8*
  %173 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %45, i64 0, i32 2
  %174 = bitcast %"class.std::__1::basic_ostringstream"* %173 to %"class.std::__1::basic_ostream"*
  br label %177

175:                                              ; preds = %919
  %176 = icmp eq i8** %922, %71
  br i1 %176, label %923, label %177

177:                                              ; preds = %73, %175
  %178 = phi i64 [ undef, %73 ], [ %920, %175 ]
  %179 = phi i8** [ %67, %73 ], [ %922, %175 ]
  %180 = bitcast i8** %179 to %"class.cast::certificate::Crl"**
  %181 = load %"class.cast::certificate::Crl"*, %"class.cast::certificate::Crl"** %180, align 8
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %74) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 96, i1 false)
  call void @_ZN4cast11certificate6TbsCrlC2EPN6google8protobuf5ArenaE(%"class.cast::certificate::TbsCrl"* nonnull %41, %"class.google::protobuf::Arena"* null) #12
  %182 = getelementptr inbounds %"class.cast::certificate::Crl", %"class.cast::certificate::Crl"* %181, i64 0, i32 3, i32 0
  %183 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %182, align 8
  %184 = call zeroext i1 @_ZN6google8protobuf11MessageLite15ParseFromStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"* nonnull %75, %"class.std::__1::basic_string"* dereferenceable(24) %183) #12
  br i1 %184, label %189, label %185

185:                                              ; preds = %177
  %186 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #12
  br i1 %186, label %187, label %919

187:                                              ; preds = %185
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %76) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %42, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 376, i32 1) #12
  %188 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %78, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i64 35) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %76) #12
  br label %919

189:                                              ; preds = %177
  %190 = load i64, i64* %79, align 8
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %919

192:                                              ; preds = %189
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #12
  store i64 -6148914691236517206, i64* %43, align 8
  %193 = getelementptr inbounds %"class.cast::certificate::Crl", %"class.cast::certificate::Crl"* %181, i64 0, i32 1, i32 0, i64 0
  %194 = load i32, i32* %193, align 4
  %195 = and i32 %194, 6
  %196 = icmp eq i32 %195, 6
  br i1 %196, label %202, label %197

197:                                              ; preds = %192
  %198 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %199 = icmp sgt i32 %198, 1
  br i1 %199, label %200, label %447

200:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %85) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %14, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 117, i32 -2) #12
  %201 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %87, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 20) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %85) #12
  br label %447

202:                                              ; preds = %192
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 24, i1 false) #12
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %15) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #12
  %203 = getelementptr inbounds %"class.cast::certificate::Crl", %"class.cast::certificate::Crl"* %181, i64 0, i32 4, i32 0
  %204 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %203, align 8
  %205 = bitcast %"class.std::__1::basic_string"* %204 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i8*, i8** %209, align 8
  %211 = bitcast %"class.std::__1::basic_string"* %204 to i8*
  %212 = select i1 %208, i8* %210, i8* %211
  store i8* %212, i8** %90, align 8
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = zext i8 %207 to i64
  %216 = select i1 %208, i64 %214, i64 %215
  store i64 %216, i64* %91, align 8
  %217 = call %struct.crypto_buffer_st* @_ZN3net9x509_util18CreateCryptoBufferERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %16) #12
  %218 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st* %217, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) @.ref.tmp.8, %"class.net::CertErrors"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #12
  %219 = icmp eq %"class.net::ParsedCertificate"* %218, null
  br i1 %219, label %220, label %238

220:                                              ; preds = %202
  %221 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %222 = icmp sgt i32 %221, 1
  br i1 %222, label %223, label %445

223:                                              ; preds = %220
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %164) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %17, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 128, i32 -2) #12
  %224 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %166, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i64 41) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #12
  call void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %18, %"class.net::CertErrors"* nonnull %15) #12
  %225 = load i8, i8* %169, align 1
  %226 = icmp slt i8 %225, 0
  %227 = load i8*, i8** %170, align 8
  %228 = load i64, i64* %171, align 8
  %229 = zext i8 %225 to i64
  %230 = select i1 %226, i8* %227, i8* %167
  %231 = select i1 %226, i64 %228, i64 %229
  %232 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %224, i8* %230, i64 %231) #12
  %233 = load i8, i8* %169, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %223
  %236 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %236) #13
  br label %237

237:                                              ; preds = %235, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %164) #12
  br label %445

238:                                              ; preds = %202
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #12
  %239 = getelementptr inbounds %"class.cast::certificate::Crl", %"class.cast::certificate::Crl"* %181, i64 0, i32 5, i32 0
  %240 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %239, align 8
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = bitcast %"class.std::__1::basic_string"* %240 to i8*
  %248 = select i1 %244, i8* %246, i8* %247
  store i8* %248, i8** %95, align 8
  %249 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = zext i8 %243 to i64
  %252 = select i1 %244, i64 %250, i64 %251
  store i64 %252, i64* %96, align 8
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %20, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %21) #12
  call void @_ZN3net3der9BitStringC1ERKNS0_5InputEh(%"class.net::der::BitString"* nonnull %19, %"class.net::der::Input"* nonnull dereferenceable(16) %20, i8 zeroext 0) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #12
  %253 = call %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm14CreateRsaPkcs1ENS_15DigestAlgorithmE(i32 4) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #12
  %254 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %182, align 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %22, %"class.std::__1::basic_string"* %254) #12
  %255 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %218, i64 0, i32 6, i32 7
  %256 = call zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringES6_(%"class.net::SignatureAlgorithm"* dereferenceable(16) %253, %"class.net::der::Input"* nonnull dereferenceable(16) %22, %"class.net::der::BitString"* nonnull dereferenceable(24) %19, %"class.net::der::Input"* dereferenceable(16) %255) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #12
  br i1 %256, label %262, label %257

257:                                              ; preds = %238
  %258 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %259 = icmp sgt i32 %258, 1
  br i1 %259, label %260, label %434

260:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %98) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %23, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 143, i32 -2) #12
  %261 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %100, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i64 35) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %98) #12
  br label %434

262:                                              ; preds = %238
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #12
  store i64 -6148914691236517206, i64* %24, align 8
  %263 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* dereferenceable(8) %1, %"struct.net::der::GeneralizedTime"* nonnull %81) #12
  br i1 %263, label %269, label %264

264:                                              ; preds = %262
  %265 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %266 = icmp sgt i32 %265, 1
  br i1 %266, label %267, label %432

267:                                              ; preds = %264
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %102) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %25, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 152, i32 -2) #12
  %268 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %104, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i64 40) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %102) #12
  br label %432

269:                                              ; preds = %262
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 24, i1 false) #12
  call void @_ZN3net25SimplePathBuilderDelegateC1EmNS0_12DigestPolicyE(%"class.net::SimplePathBuilderDelegate"* nonnull %26, i64 2048, i32 1) #12
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %106) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 168, i1 false) #12
  %270 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %218, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = atomicrmw add i32* %270, i32 1 monotonic
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #12
  %272 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #12
  %273 = extractvalue { i8*, i64 } %272, 0
  store i8* %273, i8** %111, align 8
  %274 = extractvalue { i8*, i64 } %272, 1
  store i64 %274, i64* %112, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %114, %"class.std::__1::__tree_end_node"** %115, align 8
  call void @_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_(%"class.std::__1::set"* nonnull %28, %"class.net::der::Input"* nonnull %110, %"class.net::der::Input"* %117) #12
  call void @_ZN3net15CertPathBuilderC1E13scoped_refptrINS_17ParsedCertificateEEPNS_10TrustStoreEPNS_23CertPathBuilderDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNSt3__13setINS8_5InputENSE_4lessISG_EENSE_9allocatorISG_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitE(%"class.net::CertPathBuilder"* nonnull %27, %"class.net::ParsedCertificate"* nonnull %218, %"class.net::TrustStore"* nonnull %2, %"class.net::CertPathBuilderDelegate"* nonnull %107, %"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %81, i32 0, i32 0, %"class.std::__1::set"* nonnull dereferenceable(24) %28, i32 0, i32 0) #12
  %275 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %119, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.195"* nonnull %118, %"class.std::__1::__tree_node"* %275) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %120) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 80, i1 false) #12
  call void @_ZN3net15CertPathBuilder3RunEv(%"struct.net::CertPathBuilder::Result"* nonnull sret %30, %"class.net::CertPathBuilder"* nonnull %27) #12
  %276 = call zeroext i1 @_ZNK3net15CertPathBuilder6Result12HasValidPathEv(%"struct.net::CertPathBuilder::Result"* nonnull %30) #12
  br i1 %276, label %282, label %277

277:                                              ; preds = %269
  %278 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %279 = icmp sgt i32 %278, 1
  br i1 %279, label %280, label %430

280:                                              ; preds = %277
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %121) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %31, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 168, i32 -2) #12
  %281 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %123, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0), i64 45) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %121) #12
  br label %430

282:                                              ; preds = %269
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #12
  store i64 -6148914691236517206, i64* %32, align 8
  %283 = load i64, i64* %125, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #12
  store i64 -6148914691236517206, i64* %127, align 8
  %284 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %285 = call i1 @llvm.is.constant.i64(i64 %283) #12
  br i1 %285, label %289, label %286

286:                                              ; preds = %282
  %287 = icmp sgt i64 %283, -1
  %288 = select i1 %287, i64 %283, i64 9223372036854775807, !prof !2
  br label %294

289:                                              ; preds = %282
  %290 = lshr i64 %283, 55
  %291 = trunc i64 %290 to i16
  %292 = icmp ugt i16 %291, 255
  %293 = select i1 %292, i64 9223372036854775807, i64 %283
  br label %294

294:                                              ; preds = %289, %286
  %295 = phi i64 [ %288, %286 ], [ %293, %289 ]
  %296 = icmp slt i64 %295, 0
  %297 = select i1 %296, i64 -9223372036854775808, i64 9223372036854775807
  %298 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %295, i64 1000000) #12
  %299 = extractvalue { i64, i1 } %298, 1
  %300 = extractvalue { i64, i1 } %298, 0
  %301 = select i1 %299, i64 %297, i64 %300, !prof !3
  %302 = add i64 %301, -9223372036854775807
  %303 = icmp ult i64 %302, 2
  br i1 %303, label %311, label %304

304:                                              ; preds = %294
  %305 = icmp slt i64 %301, 0
  %306 = select i1 %305, i64 -9223372036854775808, i64 9223372036854775807
  %307 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %284, i64 %301) #12
  %308 = extractvalue { i64, i1 } %307, 1
  %309 = extractvalue { i64, i1 } %307, 0
  %310 = select i1 %308, i64 %306, i64 %309, !prof !3
  br label %318

311:                                              ; preds = %294
  %312 = add i64 %284, -9223372036854775807
  %313 = icmp ugt i64 %312, 1
  %314 = icmp eq i64 %284, %301
  %315 = or i1 %313, %314
  br i1 %315, label %318, label %316

316:                                              ; preds = %311
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #12
  %317 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #12
  br label %318

318:                                              ; preds = %316, %311, %304
  %319 = phi i64 [ %310, %304 ], [ %301, %311 ], [ %301, %316 ]
  store i64 %319, i64* %127, align 8
  %320 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* nonnull dereferenceable(8) %11, %"struct.net::der::GeneralizedTime"* nonnull %82) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #12
  br i1 %320, label %326, label %321

321:                                              ; preds = %318
  %322 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %323 = icmp sgt i32 %322, 1
  br i1 %323, label %324, label %428

324:                                              ; preds = %321
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %129) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %33, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 180, i32 -2) #12
  %325 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %131, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i64 33) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %129) #12
  br label %428

326:                                              ; preds = %318
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #12
  store i64 -6148914691236517206, i64* %34, align 8
  %327 = load i64, i64* %133, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #12
  store i64 -6148914691236517206, i64* %135, align 8
  %328 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %329 = call i1 @llvm.is.constant.i64(i64 %327) #12
  br i1 %329, label %333, label %330

330:                                              ; preds = %326
  %331 = icmp sgt i64 %327, -1
  %332 = select i1 %331, i64 %327, i64 9223372036854775807, !prof !2
  br label %338

333:                                              ; preds = %326
  %334 = lshr i64 %327, 55
  %335 = trunc i64 %334 to i16
  %336 = icmp ugt i16 %335, 255
  %337 = select i1 %336, i64 9223372036854775807, i64 %327
  br label %338

338:                                              ; preds = %333, %330
  %339 = phi i64 [ %332, %330 ], [ %337, %333 ]
  %340 = icmp slt i64 %339, 0
  %341 = select i1 %340, i64 -9223372036854775808, i64 9223372036854775807
  %342 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %339, i64 1000000) #12
  %343 = extractvalue { i64, i1 } %342, 1
  %344 = extractvalue { i64, i1 } %342, 0
  %345 = select i1 %343, i64 %341, i64 %344, !prof !3
  %346 = add i64 %345, -9223372036854775807
  %347 = icmp ult i64 %346, 2
  br i1 %347, label %355, label %348

348:                                              ; preds = %338
  %349 = icmp slt i64 %345, 0
  %350 = select i1 %349, i64 -9223372036854775808, i64 9223372036854775807
  %351 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %328, i64 %345) #12
  %352 = extractvalue { i64, i1 } %351, 1
  %353 = extractvalue { i64, i1 } %351, 0
  %354 = select i1 %352, i64 %350, i64 %353, !prof !3
  br label %362

355:                                              ; preds = %338
  %356 = add i64 %328, -9223372036854775807
  %357 = icmp ugt i64 %356, 1
  %358 = icmp eq i64 %328, %345
  %359 = or i1 %357, %358
  br i1 %359, label %362, label %360

360:                                              ; preds = %355
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #12
  %361 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #12
  br label %362

362:                                              ; preds = %360, %355, %348
  %363 = phi i64 [ %354, %348 ], [ %345, %355 ], [ %345, %360 ]
  store i64 %363, i64* %135, align 8
  %364 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* nonnull dereferenceable(8) %13, %"struct.net::der::GeneralizedTime"* nonnull %83) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #12
  br i1 %364, label %370, label %365

365:                                              ; preds = %362
  %366 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %367 = icmp sgt i32 %366, 1
  br i1 %367, label %368, label %426

368:                                              ; preds = %365
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %137) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %35, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 185, i32 -2) #12
  %369 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %139, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i64 32) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %137) #12
  br label %426

370:                                              ; preds = %362
  %371 = call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %81, %"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %82) #12
  br i1 %371, label %374, label %372

372:                                              ; preds = %370
  %373 = call zeroext i1 @_ZN3net3dergtERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %81, %"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %83) #12
  br i1 %373, label %374, label %379

374:                                              ; preds = %372, %370
  %375 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %376 = icmp sgt i32 %375, 1
  br i1 %376, label %377, label %426

377:                                              ; preds = %374
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %146) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %36, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 189, i32 -2) #12
  %378 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %148, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0), i64 21) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %146) #12
  br label %426

379:                                              ; preds = %372
  %380 = load i64, i64* %34, align 8
  store i64 %380, i64* %43, align 8
  %381 = call %"struct.net::CertPathBuilderResultPath"* @_ZNK3net15CertPathBuilder6Result16GetBestValidPathEv(%"struct.net::CertPathBuilder::Result"* nonnull %30) #12
  %382 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %381, i64 0, i32 0, i32 0, i32 0
  %383 = load %class.scoped_refptr*, %class.scoped_refptr** %382, align 8
  %384 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %381, i64 0, i32 0, i32 0, i32 1
  %385 = load %class.scoped_refptr*, %class.scoped_refptr** %384, align 8
  %386 = icmp eq %class.scoped_refptr* %383, %385
  br i1 %386, label %387, label %396

387:                                              ; preds = %406, %379
  %388 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %141, align 8
  %389 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %388, null
  %390 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %388, i64 0, i32 1, i64 0
  %391 = select i1 %389, i8** null, i8** %390
  %392 = load i32, i32* %142, align 8
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds i8*, i8** %391, i64 %393
  %395 = icmp eq i32 %392, 0
  br i1 %395, label %426, label %411

396:                                              ; preds = %379, %406
  %397 = phi %class.scoped_refptr* [ %407, %406 ], [ %383, %379 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #12
  store i64 -6148914691236517206, i64* %37, align 8
  %398 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %397, i64 0, i32 0
  %399 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %398, align 8
  %400 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %399, i64 0, i32 6, i32 5
  %401 = bitcast %"struct.net::der::GeneralizedTime"* %400 to i64*
  %402 = load i64, i64* %401, align 8
  store i64 %402, i64* %37, align 8
  %403 = call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %84, %"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %44) #12
  br i1 %403, label %404, label %406

404:                                              ; preds = %396
  %405 = load i64, i64* %37, align 8
  store i64 %405, i64* %43, align 8
  br label %406

406:                                              ; preds = %404, %396
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #12
  %407 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %397, i64 1
  %408 = icmp eq %class.scoped_refptr* %407, %385
  br i1 %408, label %387, label %396

409:                                              ; preds = %411
  %410 = icmp eq i8** %420, %394
  br i1 %410, label %426, label %411

411:                                              ; preds = %387, %409
  %412 = phi i8** [ %420, %409 ], [ %391, %387 ]
  %413 = bitcast i8** %412 to %"class.cast::certificate::SerialNumberRange"**
  %414 = load %"class.cast::certificate::SerialNumberRange"*, %"class.cast::certificate::SerialNumberRange"** %413, align 8
  %415 = getelementptr inbounds %"class.cast::certificate::SerialNumberRange", %"class.cast::certificate::SerialNumberRange"* %414, i64 0, i32 4
  %416 = load i64, i64* %415, align 8
  %417 = getelementptr inbounds %"class.cast::certificate::SerialNumberRange", %"class.cast::certificate::SerialNumberRange"* %414, i64 0, i32 5
  %418 = load i64, i64* %417, align 8
  %419 = icmp ult i64 %418, %416
  %420 = getelementptr inbounds i8*, i8** %412, i64 1
  br i1 %419, label %421, label %409

421:                                              ; preds = %411
  %422 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %423 = icmp sgt i32 %422, 1
  br i1 %423, label %424, label %426

424:                                              ; preds = %421
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %143) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %38, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 219, i32 -2) #12
  %425 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %145, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0), i64 36) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %143) #12
  br label %426

426:                                              ; preds = %409, %424, %421, %387, %377, %374, %368, %365
  %427 = phi i1 [ false, %365 ], [ false, %368 ], [ false, %374 ], [ false, %377 ], [ false, %421 ], [ false, %424 ], [ true, %387 ], [ true, %409 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #12
  br label %428

428:                                              ; preds = %426, %324, %321
  %429 = phi i1 [ %427, %426 ], [ false, %321 ], [ false, %324 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #12
  br label %430

430:                                              ; preds = %428, %280, %277
  %431 = phi i1 [ %429, %428 ], [ false, %277 ], [ false, %280 ]
  call void @_ZN3net15CertPathBuilder6ResultD1Ev(%"struct.net::CertPathBuilder::Result"* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %120) #12
  call void @_ZN3net15CertPathBuilderD1Ev(%"class.net::CertPathBuilder"* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %106) #12
  call void @_ZN3net30VerifyCertificateChainDelegateD2Ev(%"class.net::VerifyCertificateChainDelegate"* nonnull %149) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #12
  br label %432

432:                                              ; preds = %430, %267, %264
  %433 = phi i1 [ %431, %430 ], [ false, %264 ], [ false, %267 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #12
  br label %434

434:                                              ; preds = %432, %260, %257
  %435 = phi i1 [ %433, %432 ], [ false, %257 ], [ false, %260 ]
  %436 = icmp eq %"class.net::SignatureAlgorithm"* %253, null
  br i1 %436, label %439, label %437

437:                                              ; preds = %434
  call void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"* nonnull %253) #12
  %438 = bitcast %"class.net::SignatureAlgorithm"* %253 to i8*
  call void @_ZdlPv(i8* %438) #13
  br label %439

439:                                              ; preds = %437, %434
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #12
  %440 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %218, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = atomicrmw sub i32* %440, i32 1 acq_rel
  %442 = icmp eq i32 %441, 1
  br i1 %442, label %443, label %446

443:                                              ; preds = %439
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %218) #12
  %444 = bitcast %"class.net::ParsedCertificate"* %218 to i8*
  call void @_ZdlPv(i8* %444) #13
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #12
  br i1 %435, label %451, label %447

445:                                              ; preds = %237, %220
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #12
  br label %447

446:                                              ; preds = %439
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #12
  br i1 %435, label %451, label %447

447:                                              ; preds = %200, %197, %443, %445, %446
  %448 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %448, label %449, label %917

449:                                              ; preds = %447
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %172) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %45, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 384, i32 2) #12
  %450 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %174, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i64 26) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %172) #12
  br label %917

451:                                              ; preds = %443, %446
  %452 = call i8* @_Znwm(i64 104) #13
  %453 = bitcast i8* %452 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN16cast_certificate12_GLOBAL__N_111CastCRLImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %453, align 8
  %454 = getelementptr inbounds i8, i8* %452, i64 24
  %455 = getelementptr inbounds i8, i8* %452, i64 56
  %456 = bitcast i8* %455 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %454, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %456, align 4
  %457 = getelementptr inbounds i8, i8* %452, i64 64
  %458 = getelementptr inbounds i8, i8* %452, i64 96
  %459 = bitcast i8* %458 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %457, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %459, align 4
  %460 = load i64, i64* %125, align 8
  %461 = getelementptr inbounds i8, i8* %452, i64 8
  %462 = bitcast i8* %461 to %"struct.net::der::GeneralizedTime"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #12
  store i64 -6148914691236517206, i64* %151, align 8
  %463 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %464 = call i1 @llvm.is.constant.i64(i64 %460) #12
  br i1 %464, label %468, label %465

465:                                              ; preds = %451
  %466 = icmp sgt i64 %460, -1
  %467 = select i1 %466, i64 %460, i64 9223372036854775807, !prof !2
  br label %473

468:                                              ; preds = %451
  %469 = lshr i64 %460, 55
  %470 = trunc i64 %469 to i16
  %471 = icmp ugt i16 %470, 255
  %472 = select i1 %471, i64 9223372036854775807, i64 %460
  br label %473

473:                                              ; preds = %468, %465
  %474 = phi i64 [ %467, %465 ], [ %472, %468 ]
  %475 = icmp slt i64 %474, 0
  %476 = select i1 %475, i64 -9223372036854775808, i64 9223372036854775807
  %477 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %474, i64 1000000) #12
  %478 = extractvalue { i64, i1 } %477, 1
  %479 = extractvalue { i64, i1 } %477, 0
  %480 = select i1 %478, i64 %476, i64 %479, !prof !3
  %481 = add i64 %480, -9223372036854775807
  %482 = icmp ult i64 %481, 2
  br i1 %482, label %490, label %483

483:                                              ; preds = %473
  %484 = icmp slt i64 %480, 0
  %485 = select i1 %484, i64 -9223372036854775808, i64 9223372036854775807
  %486 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %463, i64 %480) #12
  %487 = extractvalue { i64, i1 } %486, 1
  %488 = extractvalue { i64, i1 } %486, 0
  %489 = select i1 %487, i64 %485, i64 %488, !prof !3
  br label %497

490:                                              ; preds = %473
  %491 = add i64 %463, -9223372036854775807
  %492 = icmp ugt i64 %491, 1
  %493 = icmp eq i64 %463, %480
  %494 = or i1 %492, %493
  br i1 %494, label %497, label %495

495:                                              ; preds = %490
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #12
  %496 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #12
  br label %497

497:                                              ; preds = %495, %490, %483
  %498 = phi i64 [ %489, %483 ], [ %480, %490 ], [ %480, %495 ]
  store i64 %498, i64* %151, align 8
  %499 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* nonnull dereferenceable(8) %8, %"struct.net::der::GeneralizedTime"* %462) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #12
  %500 = load i64, i64* %133, align 8
  %501 = getelementptr inbounds i8, i8* %452, i64 16
  %502 = bitcast i8* %501 to %"struct.net::der::GeneralizedTime"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #12
  store i64 -6148914691236517206, i64* %154, align 8
  %503 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %504 = call i1 @llvm.is.constant.i64(i64 %500) #12
  br i1 %504, label %508, label %505

505:                                              ; preds = %497
  %506 = icmp sgt i64 %500, -1
  %507 = select i1 %506, i64 %500, i64 9223372036854775807, !prof !2
  br label %513

508:                                              ; preds = %497
  %509 = lshr i64 %500, 55
  %510 = trunc i64 %509 to i16
  %511 = icmp ugt i16 %510, 255
  %512 = select i1 %511, i64 9223372036854775807, i64 %500
  br label %513

513:                                              ; preds = %508, %505
  %514 = phi i64 [ %507, %505 ], [ %512, %508 ]
  %515 = icmp slt i64 %514, 0
  %516 = select i1 %515, i64 -9223372036854775808, i64 9223372036854775807
  %517 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %514, i64 1000000) #12
  %518 = extractvalue { i64, i1 } %517, 1
  %519 = extractvalue { i64, i1 } %517, 0
  %520 = select i1 %518, i64 %516, i64 %519, !prof !3
  %521 = add i64 %520, -9223372036854775807
  %522 = icmp ult i64 %521, 2
  br i1 %522, label %530, label %523

523:                                              ; preds = %513
  %524 = icmp slt i64 %520, 0
  %525 = select i1 %524, i64 -9223372036854775808, i64 9223372036854775807
  %526 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %503, i64 %520) #12
  %527 = extractvalue { i64, i1 } %526, 1
  %528 = extractvalue { i64, i1 } %526, 0
  %529 = select i1 %527, i64 %525, i64 %528, !prof !3
  br label %537

530:                                              ; preds = %513
  %531 = add i64 %503, -9223372036854775807
  %532 = icmp ugt i64 %531, 1
  %533 = icmp eq i64 %503, %520
  %534 = or i1 %532, %533
  br i1 %534, label %537, label %535

535:                                              ; preds = %530
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #12
  %536 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #12
  br label %537

537:                                              ; preds = %535, %530, %523
  %538 = phi i64 [ %529, %523 ], [ %520, %530 ], [ %520, %535 ]
  store i64 %538, i64* %154, align 8
  %539 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* nonnull dereferenceable(8) %6, %"struct.net::der::GeneralizedTime"* %502) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #12
  %540 = call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %44, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %502) #12
  br i1 %540, label %541, label %544

541:                                              ; preds = %537
  %542 = bitcast i8* %501 to i64*
  %543 = load i64, i64* %43, align 8
  store i64 %543, i64* %542, align 8
  br label %544

544:                                              ; preds = %541, %537
  %545 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %156, align 8
  %546 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %545, null
  %547 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %545, i64 0, i32 1, i64 0
  %548 = select i1 %546, i8** null, i8** %547
  %549 = load i32, i32* %157, align 8
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds i8*, i8** %548, i64 %550
  %552 = icmp eq i32 %549, 0
  br i1 %552, label %555, label %553

553:                                              ; preds = %544
  %554 = bitcast i8* %454 to %"class.std::__1::__hash_table"*
  br label %575

555:                                              ; preds = %575, %544
  %556 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %141, align 8
  %557 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %556, null
  %558 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %556, i64 0, i32 1, i64 0
  %559 = select i1 %557, i8** null, i8** %558
  %560 = load i32, i32* %142, align 8
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds i8*, i8** %559, i64 %561
  %563 = icmp eq i32 %560, 0
  br i1 %563, label %915, label %564

564:                                              ; preds = %555
  %565 = bitcast i8* %457 to %"class.std::__1::__hash_table.38"*
  %566 = getelementptr inbounds i8, i8* %452, i64 72
  %567 = bitcast i8* %566 to i64*
  %568 = bitcast i8* %457 to %"struct.std::__1::__hash_node_base.42"***
  %569 = getelementptr inbounds i8, i8* %452, i64 88
  %570 = bitcast i8* %569 to i64*
  %571 = bitcast i8* %458 to float*
  %572 = getelementptr inbounds i8, i8* %452, i64 80
  %573 = bitcast i8* %572 to i64*
  %574 = bitcast i8* %572 to i8**
  br label %582

575:                                              ; preds = %575, %553
  %576 = phi i8** [ %548, %553 ], [ %580, %575 ]
  %577 = bitcast i8** %576 to %"class.std::__1::basic_string"**
  %578 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %577, align 8
  %579 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %554, %"class.std::__1::basic_string"* dereferenceable(24) %578, %"class.std::__1::basic_string"* dereferenceable(24) %578) #12
  %580 = getelementptr inbounds i8*, i8** %576, i64 1
  %581 = icmp eq i8** %580, %551
  br i1 %581, label %555, label %575

582:                                              ; preds = %912, %564
  %583 = phi i8** [ %559, %564 ], [ %913, %912 ]
  %584 = bitcast i8** %583 to %"class.cast::certificate::SerialNumberRange"**
  %585 = load %"class.cast::certificate::SerialNumberRange"*, %"class.cast::certificate::SerialNumberRange"** %584, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #12
  %586 = getelementptr inbounds %"class.cast::certificate::SerialNumberRange", %"class.cast::certificate::SerialNumberRange"* %585, i64 0, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 24, i1 false) #12
  %587 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %586, align 8
  %588 = bitcast %"class.std::__1::basic_string"* %587 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %589 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %588, i64 0, i32 1, i32 0
  %590 = load i8, i8* %589, align 1
  %591 = icmp slt i8 %590, 0
  br i1 %591, label %594, label %592

592:                                              ; preds = %582
  %593 = bitcast %"class.std::__1::basic_string"* %587 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %158, i8* align 8 %593, i64 24, i1 false) #12
  br label %599

594:                                              ; preds = %582
  %595 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %587, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %596 = load i8*, i8** %595, align 8
  %597 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %587, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %598 = load i64, i64* %597, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %9, i8* %596, i64 %598) #12
  br label %599

599:                                              ; preds = %594, %592
  %600 = getelementptr inbounds %"class.cast::certificate::SerialNumberRange", %"class.cast::certificate::SerialNumberRange"* %585, i64 0, i32 4
  %601 = load i64, i64* %600, align 8
  %602 = getelementptr inbounds %"class.cast::certificate::SerialNumberRange", %"class.cast::certificate::SerialNumberRange"* %585, i64 0, i32 5
  %603 = load i64, i64* %602, align 8
  %604 = load i8, i8* %162, align 1
  %605 = icmp slt i8 %604, 0
  %606 = load i8*, i8** %159, align 8
  %607 = load i64, i64* %160, align 8
  %608 = zext i8 %604 to i64
  %609 = select i1 %605, i8* %606, i8* %158
  %610 = select i1 %605, i64 %607, i64 %608
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %163) #12
  %611 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %609, i64 %610) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %163) #12
  %612 = load i64, i64* %567, align 8
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %703, label %614

614:                                              ; preds = %599
  %615 = call i64 @llvm.ctpop.i64(i64 %612) #12, !range !4
  %616 = icmp ugt i64 %615, 1
  br i1 %616, label %620, label %617

617:                                              ; preds = %614
  %618 = add i64 %612, -1
  %619 = and i64 %618, %611
  br label %624

620:                                              ; preds = %614
  %621 = icmp ult i64 %611, %612
  br i1 %621, label %624, label %622

622:                                              ; preds = %620
  %623 = urem i64 %611, %612
  br label %624

624:                                              ; preds = %622, %620, %617
  %625 = phi i64 [ %619, %617 ], [ %623, %622 ], [ %611, %620 ]
  %626 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %568, align 8
  %627 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %626, i64 %625
  %628 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %627, align 8
  %629 = icmp eq %"struct.std::__1::__hash_node_base.42"* %628, null
  br i1 %629, label %703, label %630

630:                                              ; preds = %624
  %631 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %628, i64 0, i32 0
  %632 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %631, align 8
  %633 = icmp eq %"struct.std::__1::__hash_node_base.42"* %632, null
  br i1 %633, label %703, label %634

634:                                              ; preds = %630
  %635 = add i64 %612, -1
  %636 = load i8, i8* %162, align 1
  %637 = icmp slt i8 %636, 0
  %638 = load i64, i64* %160, align 8
  %639 = zext i8 %636 to i64
  %640 = select i1 %637, i64 %638, i64 %639
  %641 = load i8*, i8** %159, align 8
  %642 = select i1 %637, i8* %641, i8* %158
  %643 = icmp eq i64 %640, 0
  br label %644

644:                                              ; preds = %687, %634
  %645 = phi %"struct.std::__1::__hash_node_base.42"* [ %632, %634 ], [ %689, %687 ]
  %646 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %645, i64 1
  %647 = bitcast %"struct.std::__1::__hash_node_base.42"* %646 to i64*
  %648 = load i64, i64* %647, align 8
  %649 = icmp eq i64 %648, %611
  br i1 %649, label %660, label %650

650:                                              ; preds = %644
  br i1 %616, label %653, label %651

651:                                              ; preds = %650
  %652 = and i64 %648, %635
  br label %657

653:                                              ; preds = %650
  %654 = icmp ult i64 %648, %612
  br i1 %654, label %657, label %655

655:                                              ; preds = %653
  %656 = urem i64 %648, %612
  br label %657

657:                                              ; preds = %655, %653, %651
  %658 = phi i64 [ %652, %651 ], [ %656, %655 ], [ %648, %653 ]
  %659 = icmp eq i64 %658, %625
  br i1 %659, label %660, label %703

660:                                              ; preds = %657, %644
  %661 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %645, i64 2
  %662 = bitcast %"struct.std::__1::__hash_node_base.42"* %661 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %663 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %662, i64 0, i32 1, i32 0
  %664 = load i8, i8* %663, align 1
  %665 = icmp slt i8 %664, 0
  %666 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %645, i64 3
  %667 = bitcast %"struct.std::__1::__hash_node_base.42"* %666 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = zext i8 %664 to i64
  %670 = select i1 %665, i64 %668, i64 %669
  %671 = icmp eq i64 %670, %640
  br i1 %671, label %672, label %687

672:                                              ; preds = %660
  %673 = bitcast %"struct.std::__1::__hash_node_base.42"* %661 to i8**
  %674 = load i8*, i8** %673, align 8
  %675 = bitcast %"struct.std::__1::__hash_node_base.42"* %661 to i8*
  %676 = select i1 %665, i8* %674, i8* %675
  br i1 %665, label %683, label %677

677:                                              ; preds = %672
  br i1 %643, label %832, label %678

678:                                              ; preds = %677
  %679 = ptrtoint i8* %674 to i64
  %680 = trunc i64 %679 to i8
  %681 = load i8, i8* %642, align 1
  %682 = icmp eq i8 %681, %680
  br i1 %682, label %691, label %687

683:                                              ; preds = %672
  br i1 %643, label %832, label %684

684:                                              ; preds = %683
  %685 = call i32 @bcmp(i8* %676, i8* %642, i64 %640) #12
  %686 = icmp eq i32 %685, 0
  br i1 %686, label %832, label %687

687:                                              ; preds = %698, %684, %678, %660
  %688 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %645, i64 0, i32 0
  %689 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %688, align 8
  %690 = icmp eq %"struct.std::__1::__hash_node_base.42"* %689, null
  br i1 %690, label %703, label %644

691:                                              ; preds = %678, %698
  %692 = phi i64 [ %695, %698 ], [ %669, %678 ]
  %693 = phi i8* [ %696, %698 ], [ %675, %678 ]
  %694 = phi i8* [ %699, %698 ], [ %642, %678 ]
  %695 = add i64 %692, -1
  %696 = getelementptr inbounds i8, i8* %693, i64 1
  %697 = icmp eq i64 %695, 0
  br i1 %697, label %832, label %698

698:                                              ; preds = %691
  %699 = getelementptr inbounds i8, i8* %694, i64 1
  %700 = load i8, i8* %696, align 1
  %701 = load i8, i8* %699, align 1
  %702 = icmp eq i8 %700, %701
  br i1 %702, label %691, label %687

703:                                              ; preds = %687, %657, %630, %624, %599
  %704 = phi i64 [ %625, %624 ], [ -6148914691236517206, %599 ], [ %625, %630 ], [ %625, %657 ], [ %625, %687 ]
  %705 = call i8* @_Znwm(i64 64) #13, !noalias !5
  %706 = getelementptr inbounds i8, i8* %705, i64 16
  %707 = load i8, i8* %162, align 1, !noalias !5
  %708 = icmp slt i8 %707, 0
  br i1 %708, label %710, label %709

709:                                              ; preds = %703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %706, i8* nonnull align 8 %158, i64 24, i1 false) #12, !noalias !5
  br label %714

710:                                              ; preds = %703
  %711 = bitcast i8* %706 to %"class.std::__1::basic_string"*
  %712 = load i8*, i8** %159, align 8, !noalias !5
  %713 = load i64, i64* %160, align 8, !noalias !5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %711, i8* %712, i64 %713) #12, !noalias !5
  br label %714

714:                                              ; preds = %710, %709
  %715 = getelementptr inbounds i8, i8* %705, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %715, i8 0, i64 24, i1 false) #12, !noalias !5
  %716 = getelementptr inbounds i8, i8* %705, i64 8
  %717 = bitcast i8* %716 to i64*
  store i64 %611, i64* %717, align 8, !noalias !5
  %718 = bitcast i8* %705 to %"struct.std::__1::__hash_node_base.42"**
  store %"struct.std::__1::__hash_node_base.42"* null, %"struct.std::__1::__hash_node_base.42"** %718, align 8, !noalias !5
  %719 = load i64, i64* %570, align 8
  %720 = add i64 %719, 1
  %721 = uitofp i64 %720 to float
  %722 = uitofp i64 %612 to float
  %723 = load float, float* %571, align 4
  %724 = fmul float %723, %722
  %725 = fcmp olt float %724, %721
  %726 = or i1 %613, %725
  br i1 %726, label %727, label %790

727:                                              ; preds = %714
  %728 = shl i64 %612, 1
  %729 = icmp ult i64 %612, 3
  %730 = call i64 @llvm.ctpop.i64(i64 %612) #12, !range !4
  %731 = icmp ugt i64 %730, 1
  %732 = or i1 %729, %731
  %733 = zext i1 %732 to i64
  %734 = or i64 %728, %733
  %735 = fdiv float %721, %723
  %736 = call float @llvm.ceil.f32(float %735) #12
  %737 = fptoui float %736 to i64
  %738 = icmp ult i64 %734, %737
  %739 = select i1 %738, i64 %737, i64 %734
  %740 = icmp eq i64 %739, 1
  br i1 %740, label %746, label %741

741:                                              ; preds = %727
  %742 = call i64 @llvm.ctpop.i64(i64 %739) #12, !range !4
  %743 = icmp ugt i64 %742, 1
  br i1 %743, label %744, label %746

744:                                              ; preds = %741
  %745 = call i64 @_ZNSt3__112__next_primeEm(i64 %739) #12
  br label %746

746:                                              ; preds = %744, %741, %727
  %747 = phi i64 [ %745, %744 ], [ %739, %741 ], [ 2, %727 ]
  %748 = load i64, i64* %567, align 8
  %749 = icmp ugt i64 %747, %748
  br i1 %749, label %750, label %751

750:                                              ; preds = %746
  call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN16cast_certificate12_GLOBAL__N_111CastCRLImpl17SerialNumberRangeENS5_ISC_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table.38"* %565, i64 %747) #12
  br label %779

751:                                              ; preds = %746
  %752 = icmp ult i64 %747, %748
  br i1 %752, label %753, label %779

753:                                              ; preds = %751
  %754 = icmp ugt i64 %748, 2
  %755 = call i64 @llvm.ctpop.i64(i64 %748) #12, !range !4
  %756 = icmp ult i64 %755, 2
  %757 = and i1 %754, %756
  %758 = load i64, i64* %570, align 8
  %759 = uitofp i64 %758 to float
  %760 = load float, float* %571, align 4
  %761 = fdiv float %759, %760
  %762 = call float @llvm.ceil.f32(float %761) #12
  %763 = fptoui float %762 to i64
  br i1 %757, label %764, label %771

764:                                              ; preds = %753
  %765 = icmp ult i64 %763, 2
  br i1 %765, label %773, label %766

766:                                              ; preds = %764
  %767 = add i64 %763, -1
  %768 = call i64 @llvm.ctlz.i64(i64 %767, i1 true) #12, !range !4
  %769 = sub nuw nsw i64 64, %768
  %770 = shl i64 1, %769
  br label %773

771:                                              ; preds = %753
  %772 = call i64 @_ZNSt3__112__next_primeEm(i64 %763) #12
  br label %773

773:                                              ; preds = %771, %766, %764
  %774 = phi i64 [ %772, %771 ], [ %770, %766 ], [ %763, %764 ]
  %775 = icmp ult i64 %747, %774
  %776 = select i1 %775, i64 %774, i64 %747
  %777 = icmp ult i64 %776, %748
  br i1 %777, label %778, label %779

778:                                              ; preds = %773
  call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN16cast_certificate12_GLOBAL__N_111CastCRLImpl17SerialNumberRangeENS5_ISC_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table.38"* %565, i64 %776) #12
  br label %779

779:                                              ; preds = %778, %773, %751, %750
  %780 = load i64, i64* %567, align 8
  %781 = call i64 @llvm.ctpop.i64(i64 %780) #12, !range !4
  %782 = icmp ugt i64 %781, 1
  br i1 %782, label %786, label %783

783:                                              ; preds = %779
  %784 = add i64 %780, -1
  %785 = and i64 %784, %611
  br label %790

786:                                              ; preds = %779
  %787 = icmp ult i64 %611, %780
  br i1 %787, label %790, label %788

788:                                              ; preds = %786
  %789 = urem i64 %611, %780
  br label %790

790:                                              ; preds = %788, %786, %783, %714
  %791 = phi i64 [ %612, %714 ], [ %780, %783 ], [ %780, %786 ], [ %780, %788 ]
  %792 = phi i64 [ %704, %714 ], [ %785, %783 ], [ %611, %786 ], [ %789, %788 ]
  %793 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %568, align 8
  %794 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %793, i64 %792
  %795 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %794, align 8
  %796 = icmp eq %"struct.std::__1::__hash_node_base.42"* %795, null
  br i1 %796, label %797, label %821

797:                                              ; preds = %790
  %798 = load i64, i64* %573, align 8
  %799 = bitcast i8* %705 to i64*
  store i64 %798, i64* %799, align 8
  store i8* %705, i8** %574, align 8
  %800 = bitcast %"struct.std::__1::__hash_node_base.42"** %794 to i8**
  store i8* %572, i8** %800, align 8
  %801 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %718, align 8
  %802 = icmp eq %"struct.std::__1::__hash_node_base.42"* %801, null
  br i1 %802, label %828, label %803

803:                                              ; preds = %797
  %804 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %801, i64 1
  %805 = bitcast %"struct.std::__1::__hash_node_base.42"* %804 to i64*
  %806 = load i64, i64* %805, align 8
  %807 = call i64 @llvm.ctpop.i64(i64 %791) #12, !range !4
  %808 = icmp ugt i64 %807, 1
  br i1 %808, label %812, label %809

809:                                              ; preds = %803
  %810 = add i64 %791, -1
  %811 = and i64 %806, %810
  br label %816

812:                                              ; preds = %803
  %813 = icmp ult i64 %806, %791
  br i1 %813, label %816, label %814

814:                                              ; preds = %812
  %815 = urem i64 %806, %791
  br label %816

816:                                              ; preds = %814, %812, %809
  %817 = phi i64 [ %811, %809 ], [ %815, %814 ], [ %806, %812 ]
  %818 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %568, align 8
  %819 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %818, i64 %817
  %820 = bitcast %"struct.std::__1::__hash_node_base.42"** %819 to i8**
  br label %826

821:                                              ; preds = %790
  %822 = bitcast %"struct.std::__1::__hash_node_base.42"* %795 to i64*
  %823 = load i64, i64* %822, align 8
  %824 = bitcast i8* %705 to i64*
  store i64 %823, i64* %824, align 8
  %825 = bitcast %"struct.std::__1::__hash_node_base.42"* %795 to i8**
  br label %826

826:                                              ; preds = %816, %821
  %827 = phi i8** [ %825, %821 ], [ %820, %816 ]
  store i8* %705, i8** %827, align 8
  br label %828

828:                                              ; preds = %826, %797
  %829 = bitcast i8* %705 to %"struct.std::__1::__hash_node_base.42"*
  %830 = load i64, i64* %570, align 8
  %831 = add i64 %830, 1
  store i64 %831, i64* %570, align 8
  br label %832

832:                                              ; preds = %684, %683, %677, %691, %828
  %833 = phi %"struct.std::__1::__hash_node_base.42"* [ %829, %828 ], [ %645, %691 ], [ %645, %677 ], [ %645, %683 ], [ %645, %684 ]
  %834 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %833, i64 5
  %835 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %833, i64 6
  %836 = bitcast %"struct.std::__1::__hash_node_base.42"* %835 to %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"**
  %837 = load %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"*, %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"** %836, align 8
  %838 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %833, i64 7
  %839 = bitcast %"struct.std::__1::__hash_node_base.42"* %838 to %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"**
  %840 = load %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"*, %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"** %839, align 8
  %841 = icmp ult %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %837, %840
  %842 = ptrtoint %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %840 to i64
  br i1 %841, label %843, label %849

843:                                              ; preds = %832
  %844 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %837, i64 0, i32 0
  store i64 %601, i64* %844, align 8
  %845 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %837, i64 0, i32 1
  store i64 %603, i64* %845, align 8
  %846 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %837, i64 1
  %847 = ptrtoint %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %846 to i64
  %848 = bitcast %"struct.std::__1::__hash_node_base.42"* %835 to i64*
  store i64 %847, i64* %848, align 8
  br label %907

849:                                              ; preds = %832
  %850 = ptrtoint %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %837 to i64
  %851 = bitcast %"struct.std::__1::__hash_node_base.42"* %835 to i64*
  %852 = bitcast %"struct.std::__1::__hash_node_base.42"* %834 to i64*
  %853 = load i64, i64* %852, align 8
  %854 = sub i64 %850, %853
  %855 = ashr exact i64 %854, 4
  %856 = add nsw i64 %855, 1
  %857 = icmp ugt i64 %856, 1152921504606846975
  br i1 %857, label %858, label %860

858:                                              ; preds = %849
  %859 = bitcast %"struct.std::__1::__hash_node_base.42"* %834 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %859) #14
  unreachable

860:                                              ; preds = %849
  %861 = bitcast %"struct.std::__1::__hash_node_base.42"* %838 to i64*
  %862 = sub i64 %842, %853
  %863 = ashr exact i64 %862, 4
  %864 = icmp ult i64 %863, 576460752303423487
  br i1 %864, label %865, label %873

865:                                              ; preds = %860
  %866 = ashr exact i64 %862, 3
  %867 = icmp ult i64 %866, %856
  %868 = select i1 %867, i64 %856, i64 %866
  %869 = icmp eq i64 %868, 0
  br i1 %869, label %878, label %870

870:                                              ; preds = %865
  %871 = icmp ugt i64 %868, 1152921504606846975
  br i1 %871, label %872, label %873

872:                                              ; preds = %870
  call void @abort() #14
  unreachable

873:                                              ; preds = %870, %860
  %874 = phi i64 [ %868, %870 ], [ 1152921504606846975, %860 ]
  %875 = shl i64 %874, 4
  %876 = call i8* @_Znwm(i64 %875) #13
  %877 = bitcast i8* %876 to %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"*
  br label %878

878:                                              ; preds = %873, %865
  %879 = phi i64 [ %874, %873 ], [ 0, %865 ]
  %880 = phi %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* [ %877, %873 ], [ null, %865 ]
  %881 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %880, i64 %855
  %882 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %880, i64 %879
  %883 = ptrtoint %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %882 to i64
  %884 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %881, i64 0, i32 0
  store i64 %601, i64* %884, align 8
  %885 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %880, i64 %855, i32 1
  store i64 %603, i64* %885, align 8
  %886 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %881, i64 1
  %887 = ptrtoint %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %886 to i64
  %888 = bitcast %"struct.std::__1::__hash_node_base.42"* %834 to %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"**
  %889 = load %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"*, %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"** %888, align 8
  %890 = load i64, i64* %851, align 8
  %891 = ptrtoint %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %889 to i64
  %892 = sub i64 %890, %891
  %893 = ashr exact i64 %892, 4
  %894 = sub nsw i64 0, %893
  %895 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %881, i64 %894
  %896 = ptrtoint %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %895 to i64
  %897 = icmp sgt i64 %892, 0
  br i1 %897, label %898, label %902

898:                                              ; preds = %878
  %899 = bitcast %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %895 to i8*
  %900 = bitcast %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %889 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %899, i8* align 8 %900, i64 %892, i1 false) #12
  %901 = load %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"*, %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"** %888, align 8
  br label %902

902:                                              ; preds = %898, %878
  %903 = phi %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* [ %889, %878 ], [ %901, %898 ]
  store i64 %896, i64* %852, align 8
  store i64 %887, i64* %851, align 8
  store i64 %883, i64* %861, align 8
  %904 = icmp eq %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %903, null
  br i1 %904, label %907, label %905

905:                                              ; preds = %902
  %906 = bitcast %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %903 to i8*
  call void @_ZdlPv(i8* %906) #13
  br label %907

907:                                              ; preds = %905, %902, %843
  %908 = load i8, i8* %162, align 1
  %909 = icmp slt i8 %908, 0
  br i1 %909, label %910, label %912

910:                                              ; preds = %907
  %911 = load i8*, i8** %159, align 8
  call void @_ZdlPv(i8* %911) #13
  br label %912

912:                                              ; preds = %910, %907
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #12
  %913 = getelementptr inbounds i8*, i8** %583, i64 1
  %914 = icmp eq i8** %913, %562
  br i1 %914, label %915, label %582

915:                                              ; preds = %912, %555
  %916 = ptrtoint i8* %452 to i64
  br label %917

917:                                              ; preds = %449, %447, %915
  %918 = phi i64 [ %916, %915 ], [ 0, %447 ], [ 0, %449 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #12
  br label %919

919:                                              ; preds = %187, %185, %189, %917
  %920 = phi i64 [ %918, %917 ], [ %178, %189 ], [ %178, %185 ], [ %178, %187 ]
  %921 = phi i1 [ false, %917 ], [ true, %189 ], [ true, %185 ], [ true, %187 ]
  call void @_ZN4cast11certificate6TbsCrlD1Ev(%"class.cast::certificate::TbsCrl"* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %74) #12
  %922 = getelementptr inbounds i8*, i8** %179, i64 1
  br i1 %921, label %175, label %930

923:                                              ; preds = %175, %62
  %924 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %924, label %925, label %930

925:                                              ; preds = %923
  %926 = bitcast %"class.logging::LogMessage"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %926) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %46, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 389, i32 2) #12
  %927 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %46, i64 0, i32 2
  %928 = bitcast %"class.std::__1::basic_ostringstream"* %927 to %"class.std::__1::basic_ostream"*
  %929 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %928, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i64 40) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %926) #12
  br label %930

930:                                              ; preds = %919, %925, %923, %57, %55
  %931 = phi i64 [ 0, %55 ], [ 0, %57 ], [ 0, %923 ], [ 0, %925 ], [ %920, %919 ]
  call void @_ZN4cast11certificate9CrlBundleD1Ev(%"class.cast::certificate::CrlBundle"* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %52) #12
  br label %932

932:                                              ; preds = %930, %48
  %933 = phi i64 [ %50, %48 ], [ %931, %930 ]
  %934 = inttoptr i64 %933 to %"class.cast_certificate::CastCRL"*
  ret %"class.cast_certificate::CastCRL"* %934
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN6google8protobuf11MessageLite15ParseFromStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4cast11certificate6TbsCrlD1Ev(%"class.cast::certificate::TbsCrl"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4cast11certificate9CrlBundleD1Ev(%"class.cast::certificate::CrlBundle"*) unnamed_addr #3

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"*) unnamed_addr #2

declare void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"*) unnamed_addr #2

declare %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate26CreateWithoutCopyingUnsafeEPKhmRKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(i8*, i64, %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"class.net::CertErrors"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

declare void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* sret, %"class.net::CertErrors"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN3net18TrustStoreInMemory29AddTrustAnchorWithConstraintsE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::TrustStoreInMemory"*, %"class.net::ParsedCertificate"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"*) unnamed_addr #3

declare void @_ZN4cast11certificate9CrlBundleC2EPN6google8protobuf5ArenaE(%"class.cast::certificate::CrlBundle"*, %"class.google::protobuf::Arena"*) unnamed_addr #2

declare void @_ZN4cast11certificate6TbsCrlC2EPN6google8protobuf5ArenaE(%"class.cast::certificate::TbsCrl"*, %"class.google::protobuf::Arena"*) unnamed_addr #2

declare %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st*, %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"class.net::CertErrors"*) local_unnamed_addr #2

declare %struct.crypto_buffer_st* @_ZN3net9x509_util18CreateCryptoBufferERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"*, %"class.base::BasicStringPiece"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN3net3der9BitStringC1ERKNS0_5InputEh(%"class.net::der::BitString"*, %"class.net::der::Input"* dereferenceable(16), i8 zeroext) unnamed_addr #2

declare %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm14CreateRsaPkcs1ENS_15DigestAlgorithmE(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringES6_(%"class.net::SignatureAlgorithm"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16), %"class.net::der::BitString"* dereferenceable(24), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"*, %"class.std::__1::basic_string"*) unnamed_addr #2

declare zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* dereferenceable(8), %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #2

declare void @_ZN3net25SimplePathBuilderDelegateC1EmNS0_12DigestPolicyE(%"class.net::SimplePathBuilderDelegate"*, i64, i32) unnamed_addr #2

declare { i8*, i64 } @_ZN3net9AnyPolicyEv() local_unnamed_addr #2

declare void @_ZN3net15CertPathBuilderC1E13scoped_refptrINS_17ParsedCertificateEEPNS_10TrustStoreEPNS_23CertPathBuilderDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNSt3__13setINS8_5InputENSE_4lessISG_EENSE_9allocatorISG_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitE(%"class.net::CertPathBuilder"*, %"class.net::ParsedCertificate"*, %"class.net::TrustStore"*, %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime"* dereferenceable(8), i32, i32, %"class.std::__1::set"* dereferenceable(24), i32, i32) unnamed_addr #2

declare void @_ZN3net15CertPathBuilder3RunEv(%"struct.net::CertPathBuilder::Result"* sret, %"class.net::CertPathBuilder"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net15CertPathBuilder6Result12HasValidPathEv(%"struct.net::CertPathBuilder::Result"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8), %"struct.net::der::GeneralizedTime"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3dergtERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8), %"struct.net::der::GeneralizedTime"* dereferenceable(8)) local_unnamed_addr #2

declare %"struct.net::CertPathBuilderResultPath"* @_ZNK3net15CertPathBuilder6Result16GetBestValidPathEv(%"struct.net::CertPathBuilder::Result"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net15CertPathBuilder6ResultD1Ev(%"struct.net::CertPathBuilder::Result"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net15CertPathBuilderD1Ev(%"class.net::CertPathBuilder"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net30VerifyCertificateChainDelegateD2Ev(%"class.net::VerifyCertificateChainDelegate"*) unnamed_addr #3

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_(%"class.std::__1::set"*, %"class.net::der::Input"*, %"class.net::der::Input"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.net::der::Input"* %1, %2
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = ptrtoint %"class.std::__1::__tree_end_node"* %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::set"* %0 to i64*
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %15

14:                                               ; preds = %105, %3
  ret void

15:                                               ; preds = %6, %105
  %16 = phi %"class.net::der::Input"* [ %1, %6 ], [ %106, %105 ]
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %4
  br i1 %18, label %44, label %19

19:                                               ; preds = %15
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19, %22
  %23 = phi %"class.std::__1::__tree_node_base"* [ %25, %22 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %38, label %22

27:                                               ; preds = %19, %27
  %28 = phi %"class.std::__1::__tree_end_node"* [ %32, %27 ], [ %4, %19 ]
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_end_node"**
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, %29
  br i1 %35, label %27, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node_base"*
  br label %38

38:                                               ; preds = %22, %36
  %39 = phi %"class.std::__1::__tree_node_base"* [ %37, %36 ], [ %23, %22 ]
  %40 = ptrtoint %"class.std::__1::__tree_node_base"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 1
  %42 = bitcast %"class.std::__1::__tree_node_base"* %41 to %"class.net::der::Input"*
  %43 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %42, %"class.net::der::Input"* dereferenceable(16) %16) #12
  br i1 %43, label %44, label %51

44:                                               ; preds = %38, %15
  %45 = phi i64 [ %40, %38 ], [ %7, %15 ]
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %79, label %48

48:                                               ; preds = %44
  %49 = inttoptr i64 %45 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 1
  br label %79

51:                                               ; preds = %38
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %79, label %54

54:                                               ; preds = %51, %75
  %55 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %52, %51 ]
  %56 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %11, %51 ]
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 1
  %58 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %16, %"class.net::der::Input"* dereferenceable(16) %57) #12
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %75

63:                                               ; preds = %59
  %64 = ptrtoint %"class.std::__1::__tree_node"* %55 to i64
  br label %79

65:                                               ; preds = %54
  %66 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %57, %"class.net::der::Input"* dereferenceable(16) %16) #12
  br i1 %66, label %67, label %73

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = ptrtoint %"class.std::__1::__tree_node"* %55 to i64
  br label %79

73:                                               ; preds = %65
  %74 = ptrtoint %"class.std::__1::__tree_node"* %55 to i64
  br label %79

75:                                               ; preds = %67, %59
  %76 = phi %"class.std::__1::__tree_node_base"* [ %61, %59 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %60, %59 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %54

79:                                               ; preds = %51, %44, %48, %63, %71, %73
  %80 = phi i64 [ %45, %48 ], [ %64, %63 ], [ %72, %71 ], [ %74, %73 ], [ %7, %44 ], [ %7, %51 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %50, %48 ], [ %60, %63 ], [ %68, %71 ], [ %56, %73 ], [ %9, %44 ], [ %9, %51 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"** %81 to %"class.std::__1::__tree_node"**
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node"* %83, null
  br i1 %84, label %85, label %105

85:                                               ; preds = %79
  %86 = tail call i8* @_Znwm(i64 48) #13, !noalias !9
  %87 = getelementptr inbounds i8, i8* %86, i64 32
  %88 = bitcast %"class.net::der::Input"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 16, i1 false) #12, !noalias !9
  %89 = bitcast i8* %86 to %"class.std::__1::__tree_node_base"*
  %90 = getelementptr inbounds i8, i8* %86, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false) #12
  %91 = bitcast i8* %90 to i64*
  store i64 %80, i64* %91, align 8
  %92 = bitcast %"class.std::__1::__tree_node_base"** %81 to i8**
  store i8* %86, i8** %92, align 8
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %85
  %98 = ptrtoint %"class.std::__1::__tree_node_base"* %95 to i64
  store i64 %98, i64* %12, align 8
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  br label %100

100:                                              ; preds = %97, %85
  %101 = phi %"class.std::__1::__tree_node_base"* [ %89, %85 ], [ %99, %97 ]
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %102, %"class.std::__1::__tree_node_base"* %101) #12
  %103 = load i64, i64* %13, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %13, align 8
  br label %105

105:                                              ; preds = %79, %100
  %106 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %16, i64 1
  %107 = icmp eq %"class.net::der::Input"* %106, %2
  br i1 %107, label %14, label %15
}

declare zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.195"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.195"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.195"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind
declare void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN16cast_certificate12_GLOBAL__N_111CastCRLImplD2Ev(%"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN16cast_certificate12_GLOBAL__N_111CastCRLImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.42"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1, %28
  %7 = phi %"struct.std::__1::__hash_node_base.42"* [ %9, %28 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %7, i64 2
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %7, i64 5
  %12 = bitcast %"struct.std::__1::__hash_node_base.42"* %11 to %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"**
  %13 = load %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"*, %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"** %12, align 8
  %14 = icmp eq %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %6
  %16 = ptrtoint %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %13 to i64
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %7, i64 6
  %18 = bitcast %"struct.std::__1::__hash_node_base.42"* %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %6
  %21 = bitcast %"struct.std::__1::__hash_node_base.42"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = bitcast %"struct.std::__1::__hash_node_base.42"* %10 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %25, %20
  %29 = bitcast %"struct.std::__1::__hash_node_base.42"* %7 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  %30 = icmp eq %"struct.std::__1::__hash_node_base.42"* %9, null
  br i1 %30, label %31, label %6

31:                                               ; preds = %28, %1
  %32 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %32, align 8
  store %"struct.std::__1::__hash_node_base.42"** null, %"struct.std::__1::__hash_node_base.42"*** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.42"** %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = bitcast %"struct.std::__1::__hash_node_base.42"** %33 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %56, label %41

41:                                               ; preds = %37, %53
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %53 ], [ %39, %37 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 2
  %46 = bitcast %"struct.std::__1::__hash_node_base"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %41
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %45 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %50, %41
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %42 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %55, label %56, label %41

56:                                               ; preds = %53, %37
  %57 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %57, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"** %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"struct.std::__1::__hash_node_base"** %58 to i8*
  tail call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %56, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN16cast_certificate12_GLOBAL__N_111CastCRLImplD0Ev(%"class.cast_certificate::(anonymous namespace)::CastCRLImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN16cast_certificate12_GLOBAL__N_111CastCRLImplD2Ev(%"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0) #12
  %2 = bitcast %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK16cast_certificate12_GLOBAL__N_111CastCRLImpl15CheckRevocationERKNSt3__16vectorI13scoped_refptrIN3net17ParsedCertificateEENS2_9allocatorIS7_EEEERKN4base4TimeE(%"class.cast_certificate::(anonymous namespace)::CastCRLImpl"*, %"class.std::__1::vector.203"* nocapture readonly dereferenceable(24), %"class.base::Time"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.net::der::GeneralizedTime"*
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.logging::LogMessage", align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %1, i64 0, i32 0, i32 0
  %15 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %1, i64 0, i32 0, i32 1
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %18 = icmp eq %class.scoped_refptr* %15, %17
  br i1 %18, label %256, label %19

19:                                               ; preds = %3
  %20 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store i64 -6148914691236517206, i64* %5, align 8
  %21 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* dereferenceable(8) %2, %"struct.net::der::GeneralizedTime"* nonnull %6) #12
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %24 = icmp sgt i32 %23, 1
  br i1 %24, label %25, label %254

25:                                               ; preds = %22
  %26 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %26) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 303, i32 -2) #12
  %27 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %28 = bitcast %"class.std::__1::basic_ostringstream"* %27 to %"class.std::__1::basic_ostream"*
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i64 32) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %26) #12
  br label %254

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 1
  %32 = call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %6, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %31) #12
  br i1 %32, label %65, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 2
  %35 = call zeroext i1 @_ZN3net3dergtERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %6, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %34) #12
  br i1 %35, label %65, label %36

36:                                               ; preds = %33
  %37 = bitcast %class.scoped_refptr** %16 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector.203"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %38, %40
  br i1 %41, label %254, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 3, i32 0
  %52 = bitcast %"class.logging::LogMessage"* %11 to i8*
  %53 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %53 to %"class.std::__1::basic_ostream"*
  %55 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  %58 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastCRLImpl", %"class.cast_certificate::(anonymous namespace)::CastCRLImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = bitcast i64* %12 to i8*
  %61 = bitcast %"class.logging::LogMessage"* %13 to i8*
  %62 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %13, i64 0, i32 2
  %63 = bitcast %"class.std::__1::basic_ostringstream"* %62 to %"class.std::__1::basic_ostream"*
  %64 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %73

65:                                               ; preds = %33, %30
  %66 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %67 = icmp sgt i32 %66, 1
  br i1 %67, label %68, label %254

68:                                               ; preds = %65
  %69 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %69) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 307, i32 -2) #12
  %70 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %71 = bitcast %"class.std::__1::basic_ostringstream"* %70 to %"class.std::__1::basic_ostream"*
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %71, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0), i64 38) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %69) #12
  br label %254

73:                                               ; preds = %42, %247
  %74 = phi i64 [ %40, %42 ], [ %250, %247 ]
  %75 = phi i64 [ 0, %42 ], [ %248, %247 ]
  %76 = inttoptr i64 %74 to %class.scoped_refptr*
  %77 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %76, i64 %75, i32 0
  %78 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %77, align 8
  %79 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %78, i64 0, i32 6, i32 7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  call void @_ZNK3net3der5Input8AsStringEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.net::der::Input"* %79) #12
  %80 = load i8, i8* %48, align 1
  %81 = icmp slt i8 %80, 0
  %82 = load i8*, i8** %49, align 8
  %83 = select i1 %81, i8* %82, i8* %46
  %84 = load i64, i64* %50, align 8
  %85 = zext i8 %80 to i64
  %86 = select i1 %81, i64 %84, i64 %85
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, i8* %83, i64 %86) #12
  %87 = load i8, i8* %48, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %73
  %90 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %73, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  %92 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"* %51, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #12
  %93 = icmp eq %"struct.std::__1::__hash_node_base"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %91
  %95 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %96 = icmp sgt i32 %95, 1
  br i1 %96, label %97, label %240

97:                                               ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %52) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 324, i32 -2) #12
  %98 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i64 22) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %52) #12
  br label %240

99:                                               ; preds = %91
  %100 = icmp eq i64 %75, 0
  br i1 %100, label %240, label %101

101:                                              ; preds = %99
  %102 = load i8, i8* %56, align 1
  %103 = icmp slt i8 %102, 0
  %104 = load i8*, i8** %44, align 8
  %105 = load i64, i64* %45, align 8
  %106 = zext i8 %102 to i64
  %107 = select i1 %103, i8* %104, i8* %43
  %108 = select i1 %103, i64 %105, i64 %106
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %57) #12
  %109 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %107, i64 %108) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #12
  %110 = load i64, i64* %58, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %240, label %112

112:                                              ; preds = %101
  %113 = call i64 @llvm.ctpop.i64(i64 %110) #12, !range !4
  %114 = icmp ugt i64 %113, 1
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = add i64 %110, -1
  %117 = and i64 %116, %109
  br label %122

118:                                              ; preds = %112
  %119 = icmp ult i64 %109, %110
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = urem i64 %109, %110
  br label %122

122:                                              ; preds = %120, %118, %115
  %123 = phi i64 [ %117, %115 ], [ %121, %120 ], [ %109, %118 ]
  %124 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %59, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %124, i64 %123
  %126 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.42"* %126, null
  br i1 %127, label %240, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %126, i64 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.42"* %130, null
  br i1 %131, label %240, label %132

132:                                              ; preds = %128
  %133 = add i64 %110, -1
  %134 = load i8, i8* %56, align 1
  %135 = icmp slt i8 %134, 0
  %136 = load i64, i64* %45, align 8
  %137 = zext i8 %134 to i64
  %138 = select i1 %135, i64 %136, i64 %137
  %139 = load i8*, i8** %44, align 8
  %140 = select i1 %135, i8* %139, i8* %43
  %141 = icmp eq i64 %138, 0
  br label %142

142:                                              ; preds = %197, %132
  %143 = phi %"struct.std::__1::__hash_node_base.42"* [ %130, %132 ], [ %199, %197 ]
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %143, i64 1
  %145 = bitcast %"struct.std::__1::__hash_node_base.42"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = icmp eq i64 %109, %146
  br i1 %147, label %158, label %148

148:                                              ; preds = %142
  br i1 %114, label %151, label %149

149:                                              ; preds = %148
  %150 = and i64 %146, %133
  br label %155

151:                                              ; preds = %148
  %152 = icmp ult i64 %146, %110
  br i1 %152, label %155, label %153

153:                                              ; preds = %151
  %154 = urem i64 %146, %110
  br label %155

155:                                              ; preds = %153, %151, %149
  %156 = phi i64 [ %150, %149 ], [ %154, %153 ], [ %146, %151 ]
  %157 = icmp eq i64 %156, %123
  br i1 %157, label %197, label %240

158:                                              ; preds = %142
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %143, i64 2
  %160 = bitcast %"struct.std::__1::__hash_node_base.42"* %159 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %143, i64 3
  %165 = bitcast %"struct.std::__1::__hash_node_base.42"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = zext i8 %162 to i64
  %168 = select i1 %163, i64 %166, i64 %167
  %169 = icmp eq i64 %168, %138
  br i1 %169, label %170, label %197

170:                                              ; preds = %158
  %171 = bitcast %"struct.std::__1::__hash_node_base.42"* %159 to i8**
  %172 = load i8*, i8** %171, align 8
  %173 = bitcast %"struct.std::__1::__hash_node_base.42"* %159 to i8*
  %174 = select i1 %163, i8* %172, i8* %173
  br i1 %163, label %181, label %175

175:                                              ; preds = %170
  br i1 %141, label %203, label %176

176:                                              ; preds = %175
  %177 = ptrtoint i8* %172 to i64
  %178 = trunc i64 %177 to i8
  %179 = load i8, i8* %140, align 1
  %180 = icmp eq i8 %179, %178
  br i1 %180, label %182, label %197

181:                                              ; preds = %170
  br i1 %141, label %203, label %194

182:                                              ; preds = %176, %189
  %183 = phi i64 [ %186, %189 ], [ %167, %176 ]
  %184 = phi i8* [ %187, %189 ], [ %173, %176 ]
  %185 = phi i8* [ %190, %189 ], [ %140, %176 ]
  %186 = add i64 %183, -1
  %187 = getelementptr inbounds i8, i8* %184, i64 1
  %188 = icmp eq i64 %186, 0
  br i1 %188, label %201, label %189

189:                                              ; preds = %182
  %190 = getelementptr inbounds i8, i8* %185, i64 1
  %191 = load i8, i8* %187, align 1
  %192 = load i8, i8* %190, align 1
  %193 = icmp eq i8 %191, %192
  br i1 %193, label %182, label %197

194:                                              ; preds = %181
  %195 = call i32 @bcmp(i8* %174, i8* %140, i64 %138) #12
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %203, label %197

197:                                              ; preds = %189, %194, %176, %158, %155
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %143, i64 0, i32 0
  %199 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %198, align 8
  %200 = icmp eq %"struct.std::__1::__hash_node_base.42"* %199, null
  br i1 %200, label %240, label %142

201:                                              ; preds = %182
  %202 = icmp eq %"struct.std::__1::__hash_node_base.42"* %143, null
  br i1 %202, label %240, label %203

203:                                              ; preds = %194, %181, %175, %201
  %204 = add i64 %75, -1
  %205 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  store i64 -6148914691236517206, i64* %12, align 8
  %206 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %205, i64 %204, i32 0
  %207 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %206, align 8
  %208 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %207, i64 0, i32 6, i32 1
  %209 = call zeroext i1 @_ZN3net3der11ParseUint64ERKNS0_5InputEPm(%"class.net::der::Input"* dereferenceable(16) %208, i64* nonnull %12) #12
  br i1 %209, label %210, label %238

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %143, i64 5
  %212 = bitcast %"struct.std::__1::__hash_node_base.42"* %211 to %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"**
  %213 = load %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"*, %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"** %212, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %143, i64 6
  %215 = bitcast %"struct.std::__1::__hash_node_base.42"* %214 to %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"**
  %216 = load %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"*, %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"** %215, align 8
  %217 = icmp eq %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %213, %216
  br i1 %217, label %237, label %218

218:                                              ; preds = %210
  %219 = load i64, i64* %12, align 8
  br label %220

220:                                              ; preds = %218, %234
  %221 = phi %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* [ %213, %218 ], [ %235, %234 ]
  %222 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %221, i64 0, i32 0
  %223 = load i64, i64* %222, align 8
  %224 = icmp ugt i64 %223, %219
  br i1 %224, label %234, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %221, i64 0, i32 1
  %227 = load i64, i64* %226, align 8
  %228 = icmp ult i64 %227, %219
  br i1 %228, label %234, label %229

229:                                              ; preds = %225
  %230 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 46) #12
  %231 = icmp sgt i32 %230, 1
  br i1 %231, label %232, label %238

232:                                              ; preds = %229
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %61) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %13, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 343, i32 -2) #12
  %233 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %63, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0), i64 24) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %61) #12
  br label %238

234:                                              ; preds = %225, %220
  %235 = getelementptr inbounds %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange", %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %221, i64 1
  %236 = icmp eq %"struct.cast_certificate::(anonymous namespace)::CastCRLImpl::SerialNumberRange"* %235, %216
  br i1 %236, label %237, label %220

237:                                              ; preds = %234, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  br label %240

238:                                              ; preds = %232, %229, %203
  %239 = phi i32 [ 4, %203 ], [ 1, %229 ], [ 1, %232 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  br label %240

240:                                              ; preds = %197, %155, %201, %128, %101, %122, %237, %99, %238, %97, %94
  %241 = phi i32 [ %239, %238 ], [ 1, %94 ], [ 1, %97 ], [ 0, %99 ], [ 0, %237 ], [ 0, %201 ], [ 0, %122 ], [ 0, %101 ], [ 0, %128 ], [ 0, %155 ], [ 0, %197 ]
  %242 = load i8, i8* %56, align 1
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %244, label %246

244:                                              ; preds = %240
  %245 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %245) #13
  br label %246

246:                                              ; preds = %240, %244
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #12
  switch i32 %241, label %254 [
    i32 0, label %247
    i32 4, label %247
  ]

247:                                              ; preds = %246, %246
  %248 = add nuw i64 %75, 1
  %249 = load i64, i64* %37, align 8
  %250 = load i64, i64* %39, align 8
  %251 = sub i64 %249, %250
  %252 = ashr exact i64 %251, 3
  %253 = icmp ult i64 %248, %252
  br i1 %253, label %73, label %254

254:                                              ; preds = %247, %246, %36, %68, %65, %25, %22
  %255 = phi i1 [ false, %22 ], [ false, %25 ], [ false, %65 ], [ false, %68 ], [ true, %36 ], [ true, %247 ], [ false, %246 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %256

256:                                              ; preds = %3, %254
  %257 = phi i1 [ %255, %254 ], [ false, %3 ]
  ret i1 %257
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #12, !range !4
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #12
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #13, !noalias !12
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !12
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #12, !noalias !12
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !12
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !12
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #12, !noalias !12
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !12
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %131, align 8, !noalias !12
  %132 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #12, !range !4
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #12
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #12, !range !4
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base"* %174, %"struct.std::__1::__hash_node_base"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #12, !range !4
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %214
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #9 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !4
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #12
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #13
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN16cast_certificate12_GLOBAL__N_111CastCRLImpl17SerialNumberRangeENS5_ISC_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table.38"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %185, label %4

4:                                                ; preds = %2
  %5 = icmp ugt i64 %1, 2305843009213693951
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @abort() #14
  unreachable

7:                                                ; preds = %4
  %8 = shl i64 %1, 3
  %9 = tail call i8* @_Znwm(i64 %8) #13
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.38", %"class.std::__1::__hash_table.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %12 = bitcast %"class.std::__1::__hash_table.38"* %0 to i8**
  store i8* %9, i8** %12, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.42"** %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = bitcast %"struct.std::__1::__hash_node_base.42"** %11 to i8*
  tail call void @_ZdlPv(i8* %15) #13
  br label %16

16:                                               ; preds = %14, %7
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.38", %"class.std::__1::__hash_table.38"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %17, align 8
  %18 = add i64 %1, -1
  %19 = and i64 %1, 3
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = sub i64 %1, %19
  br label %39

23:                                               ; preds = %39, %16
  %24 = phi i64 [ 0, %16 ], [ %53, %39 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %31, %26 ], [ %24, %23 ]
  %28 = phi i64 [ %32, %26 ], [ %19, %23 ]
  %29 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %29, i64 %27
  store %"struct.std::__1::__hash_node_base.42"* null, %"struct.std::__1::__hash_node_base.42"** %30, align 8
  %31 = add nuw i64 %27, 1
  %32 = add i64 %28, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %26, !llvm.loop !17

34:                                               ; preds = %26, %23
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.38", %"class.std::__1::__hash_table.38"* %0, i64 0, i32 1, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.42"* %37, null
  br i1 %38, label %193, label %56

39:                                               ; preds = %39, %21
  %40 = phi i64 [ 0, %21 ], [ %53, %39 ]
  %41 = phi i64 [ %22, %21 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base.42"* null, %"struct.std::__1::__hash_node_base.42"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.42"* null, %"struct.std::__1::__hash_node_base.42"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base.42"* null, %"struct.std::__1::__hash_node_base.42"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.42"* null, %"struct.std::__1::__hash_node_base.42"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %23, label %39

56:                                               ; preds = %34
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %37, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.42"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !4
  %61 = icmp ugt i64 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = add i64 %1, -1
  %64 = and i64 %59, %63
  br label %69

65:                                               ; preds = %56
  %66 = icmp ult i64 %59, %1
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %59, %1
  br label %69

69:                                               ; preds = %62, %65, %67
  %70 = phi i64 [ %64, %62 ], [ %68, %67 ], [ %59, %65 ]
  %71 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %71, i64 %70
  store %"struct.std::__1::__hash_node_base.42"* %35, %"struct.std::__1::__hash_node_base.42"** %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %37, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.42"* %74, null
  br i1 %75, label %193, label %76

76:                                               ; preds = %69
  %77 = add i64 %1, -1
  br label %78

78:                                               ; preds = %76, %179
  %79 = phi %"struct.std::__1::__hash_node_base.42"* [ %74, %76 ], [ %183, %179 ]
  %80 = phi i64 [ %70, %76 ], [ %181, %179 ]
  %81 = phi %"struct.std::__1::__hash_node_base.42"* [ %37, %76 ], [ %180, %179 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %79, i64 1
  %83 = bitcast %"struct.std::__1::__hash_node_base.42"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  br i1 %61, label %87, label %85

85:                                               ; preds = %78
  %86 = and i64 %84, %77
  br label %91

87:                                               ; preds = %78
  %88 = icmp ult i64 %84, %1
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = urem i64 %84, %1
  br label %91

91:                                               ; preds = %85, %87, %89
  %92 = phi i64 [ %86, %85 ], [ %90, %89 ], [ %84, %87 ]
  %93 = icmp eq i64 %92, %80
  br i1 %93, label %179, label %94

94:                                               ; preds = %91
  %95 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %95, i64 %92
  %97 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.42"* %97, null
  br i1 %98, label %117, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %79, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.42"* %101, null
  br i1 %102, label %165, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %79, i64 2
  %105 = bitcast %"struct.std::__1::__hash_node_base.42"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %79, i64 3
  %110 = bitcast %"struct.std::__1::__hash_node_base.42"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = zext i8 %107 to i64
  %113 = select i1 %108, i64 %111, i64 %112
  %114 = bitcast %"struct.std::__1::__hash_node_base.42"* %104 to i8**
  %115 = bitcast %"struct.std::__1::__hash_node_base.42"* %104 to i8*
  %116 = icmp eq i64 %113, 0
  br label %118

117:                                              ; preds = %94
  store %"struct.std::__1::__hash_node_base.42"* %81, %"struct.std::__1::__hash_node_base.42"** %96, align 8
  br label %179

118:                                              ; preds = %103, %161
  %119 = phi %"struct.std::__1::__hash_node_base.42"* [ %101, %103 ], [ %163, %161 ]
  %120 = phi %"struct.std::__1::__hash_node_base.42"* [ %79, %103 ], [ %119, %161 ]
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %119, i64 2
  %122 = bitcast %"struct.std::__1::__hash_node_base.42"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %119, i64 3
  %127 = bitcast %"struct.std::__1::__hash_node_base.42"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = zext i8 %124 to i64
  %130 = select i1 %125, i64 %128, i64 %129
  %131 = icmp eq i64 %113, %130
  br i1 %131, label %132, label %165

132:                                              ; preds = %118
  %133 = load i8*, i8** %114, align 8
  %134 = select i1 %108, i8* %133, i8* %115
  %135 = bitcast %"struct.std::__1::__hash_node_base.42"* %121 to i8**
  %136 = load i8*, i8** %135, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base.42"* %121 to i8*
  %138 = select i1 %125, i8* %136, i8* %137
  br i1 %108, label %145, label %139

139:                                              ; preds = %132
  br i1 %116, label %161, label %140

140:                                              ; preds = %139
  %141 = ptrtoint i8* %133 to i64
  %142 = trunc i64 %141 to i8
  %143 = load i8, i8* %138, align 1
  %144 = icmp eq i8 %143, %142
  br i1 %144, label %146, label %165

145:                                              ; preds = %132
  br i1 %116, label %161, label %158

146:                                              ; preds = %140, %153
  %147 = phi i64 [ %150, %153 ], [ %112, %140 ]
  %148 = phi i8* [ %151, %153 ], [ %115, %140 ]
  %149 = phi i8* [ %154, %153 ], [ %138, %140 ]
  %150 = add i64 %147, -1
  %151 = getelementptr inbounds i8, i8* %148, i64 1
  %152 = icmp eq i64 %150, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %146
  %154 = getelementptr inbounds i8, i8* %149, i64 1
  %155 = load i8, i8* %151, align 1
  %156 = load i8, i8* %154, align 1
  %157 = icmp eq i8 %155, %156
  br i1 %157, label %146, label %165

158:                                              ; preds = %145
  %159 = tail call i32 @bcmp(i8* %134, i8* %138, i64 %113) #12
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %146, %139, %145, %158
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %119, i64 0, i32 0
  %163 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %162, align 8
  %164 = icmp eq %"struct.std::__1::__hash_node_base.42"* %163, null
  br i1 %164, label %165, label %118

165:                                              ; preds = %158, %161, %118, %140, %153, %99
  %166 = phi %"struct.std::__1::__hash_node_base.42"* [ %79, %99 ], [ %120, %153 ], [ %120, %158 ], [ %119, %161 ], [ %120, %118 ], [ %120, %140 ]
  %167 = bitcast %"struct.std::__1::__hash_node_base.42"* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__hash_node_base.42"* %81 to i64*
  store i64 %168, i64* %169, align 8
  %170 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %170, i64 %92
  %172 = bitcast %"struct.std::__1::__hash_node_base.42"** %171 to i64**
  %173 = load i64*, i64** %172, align 8
  %174 = load i64, i64* %173, align 8
  store i64 %174, i64* %167, align 8
  %175 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %10, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %175, i64 %92
  %177 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %177, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.42"* %79, %"struct.std::__1::__hash_node_base.42"** %178, align 8
  br label %179

179:                                              ; preds = %91, %165, %117
  %180 = phi %"struct.std::__1::__hash_node_base.42"* [ %79, %117 ], [ %81, %165 ], [ %79, %91 ]
  %181 = phi i64 [ %92, %117 ], [ %80, %165 ], [ %80, %91 ]
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.42", %"struct.std::__1::__hash_node_base.42"* %180, i64 0, i32 0
  %183 = load %"struct.std::__1::__hash_node_base.42"*, %"struct.std::__1::__hash_node_base.42"** %182, align 8
  %184 = icmp eq %"struct.std::__1::__hash_node_base.42"* %183, null
  br i1 %184, label %193, label %78

185:                                              ; preds = %2
  %186 = getelementptr inbounds %"class.std::__1::__hash_table.38", %"class.std::__1::__hash_table.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %187 = load %"struct.std::__1::__hash_node_base.42"**, %"struct.std::__1::__hash_node_base.42"*** %186, align 8
  store %"struct.std::__1::__hash_node_base.42"** null, %"struct.std::__1::__hash_node_base.42"*** %186, align 8
  %188 = icmp eq %"struct.std::__1::__hash_node_base.42"** %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %185
  %190 = bitcast %"struct.std::__1::__hash_node_base.42"** %187 to i8*
  tail call void @_ZdlPv(i8* %190) #13
  br label %191

191:                                              ; preds = %185, %189
  %192 = getelementptr inbounds %"class.std::__1::__hash_table.38", %"class.std::__1::__hash_table.38"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %192, align 8
  br label %193

193:                                              ; preds = %179, %69, %34, %191
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZNK3net3der5Input8AsStringEv(%"class.std::__1::basic_string"* sret, %"class.net::der::Input"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3der11ParseUint64ERKNS0_5InputEPm(%"class.net::der::Input"* dereferenceable(16), i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #12
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #12
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #12, !range !4
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #12
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind readnone }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i64 0, i64 65}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN16cast_certificate12_GLOBAL__N_111CastCRLImpl17SerialNumberRangeENS5_ISC_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSU_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISF_PvEENS_22__hash_node_destructorINS5_IS12_EEEEEEmOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN16cast_certificate12_GLOBAL__N_111CastCRLImpl17SerialNumberRangeENS5_ISC_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSU_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISF_PvEENS_22__hash_node_destructorINS5_IS12_EEEEEEmOT_DpOT0_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
