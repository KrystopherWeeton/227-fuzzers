; ModuleID = '../../third_party/blink/renderer/core/css/parser/css_variable_parser.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/css_variable_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.13", i32, [4 x i8], %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.190", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.129", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i64 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist.102"* }
%"class.blink::Worklist.102" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.109", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.123", [4 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111", %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { i64 }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { float }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.132", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.141" }
%"class.WTF::Vector.141" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.88"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.194" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.189 }
%class.scoped_refptr.189 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__cxx_atomic_impl.192" }
%"struct.std::__1::__cxx_atomic_impl.192" = type { %"struct.std::__1::__cxx_atomic_base_impl.193" }
%"struct.std::__1::__cxx_atomic_base_impl.193" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::CSSCustomPropertyDeclaration" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1, i32, [4 x i8] }>
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.1 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted", %"class.WTF::Vector", %"class.WTF::Vector.2", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.WTF::TextEncoding" = type { i8* }
%"struct.blink::CSSTokenizedValue" = type { %"class.blink::CSSParserTokenRange", %"class.WTF::StringView" }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.10, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%class.scoped_refptr.10 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.11", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.11" = type { %"class.base::RefCounted.12" }
%"class.base::RefCounted.12" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::CSSVariableReferenceValue" = type { %"class.blink::CSSValue", %class.scoped_refptr.1, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::CSSParserContext"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.222 }
%union.anon.222 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_25CSSVariableReferenceValueEEEPvm = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSVariableParser19IsValidVariableNameERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 63
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %50

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !2
  %10 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4, !noalias !2
  %12 = icmp ugt i32 %11, 1
  br i1 %12, label %13, label %50

13:                                               ; preds = %6
  %14 = and i32 %3, 262144
  %15 = icmp eq i32 %14, 0
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = select i1 %15, i64 %16, i64 %17
  %19 = inttoptr i64 %18 to %"class.WTF::StringImpl"*
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %13
  %25 = inttoptr i64 %9 to i8*
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  br label %31

28:                                               ; preds = %13
  %29 = inttoptr i64 %9 to i16*
  %30 = load i16, i16* %29, align 2
  br label %31

31:                                               ; preds = %24, %28
  %32 = phi i16 [ %27, %24 ], [ %30, %28 ]
  %33 = icmp eq i16 %32, 45
  br i1 %33, label %34, label %50

34:                                               ; preds = %31
  %35 = load atomic i32, i32* %20 monotonic, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = inttoptr i64 %9 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  br label %47

43:                                               ; preds = %34
  %44 = inttoptr i64 %9 to i16*
  %45 = getelementptr inbounds i16, i16* %44, i64 1
  %46 = load i16, i16* %45, align 2
  br label %47

47:                                               ; preds = %38, %43
  %48 = phi i16 [ %42, %38 ], [ %46, %43 ]
  %49 = icmp eq i16 %48, 45
  br label %50

50:                                               ; preds = %6, %31, %47, %1
  %51 = phi i1 [ false, %1 ], [ false, %31 ], [ false, %6 ], [ %49, %47 ]
  ret i1 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSVariableParser19IsValidVariableNameERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %41, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %9, label %41

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %13, label %19, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  br label %22

19:                                               ; preds = %9
  %20 = bitcast %"class.WTF::StringImpl"* %14 to i16*
  %21 = load i16, i16* %20, align 2
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i16 [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i16 %23, 45
  br i1 %24, label %25, label %41

25:                                               ; preds = %22
  %26 = load atomic i32, i32* %10 monotonic, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  br label %38

34:                                               ; preds = %25
  %35 = bitcast %"class.WTF::StringImpl"* %14 to i16*
  %36 = getelementptr inbounds i16, i16* %35, i64 1
  %37 = load i16, i16* %36, align 2
  br label %38

38:                                               ; preds = %29, %34
  %39 = phi i16 [ %33, %29 ], [ %37, %34 ]
  %40 = icmp eq i16 %39, 45
  br label %41

41:                                               ; preds = %1, %38, %22, %5
  %42 = phi i1 [ false, %22 ], [ false, %5 ], [ %40, %38 ], [ false, %1 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSVariableParser31ContainsValidVariableReferencesENS_19CSSParserTokenRangeE(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 -86, i8* %3, align 1
  %4 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121ClassifyVariableRangeENS_19CSSParserTokenRangeERb(%"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"* %1, i8* nonnull dereferenceable(1) %3)
  %5 = icmp eq i32 %4, 834
  %6 = load i8, i8* %3, align 1
  %7 = and i8 %6, 1
  %8 = icmp ne i8 %7, 0
  %9 = and i1 %5, %8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_121ClassifyVariableRangeENS_19CSSParserTokenRangeERb(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, i8* nocapture dereferenceable(1)) unnamed_addr #0 {
  store i8 0, i8* %2, align 1
  %4 = icmp ult %"class.blink::CSSParserToken"* %0, %1
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %6 = select i1 %4, %"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"* %5
  %7 = bitcast %"class.blink::CSSParserToken"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 63
  %10 = icmp eq i32 %9, 17
  br i1 %10, label %11, label %22

11:                                               ; preds = %3, %11
  %12 = phi %"class.blink::CSSParserToken"* [ %13, %11 ], [ %0, %3 ]
  %13 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %12, i64 1
  %14 = icmp ult %"class.blink::CSSParserToken"* %13, %1
  %15 = select i1 %14, %"class.blink::CSSParserToken"* %13, %"class.blink::CSSParserToken"* %5
  %16 = bitcast %"class.blink::CSSParserToken"* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 63
  %19 = icmp eq i32 %18, 17
  br i1 %19, label %11, label %20

20:                                               ; preds = %11
  %21 = bitcast %"class.blink::CSSParserToken"* %15 to i32*
  br label %22

22:                                               ; preds = %20, %3
  %23 = phi i32* [ %7, %3 ], [ %21, %20 ]
  %24 = phi %"class.blink::CSSParserToken"* [ %0, %3 ], [ %13, %20 ]
  %25 = load i32, i32* %23, align 8
  %26 = and i32 %25, 63
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %54

28:                                               ; preds = %22
  %29 = icmp eq %"class.blink::CSSParserToken"* %24, %1
  %30 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %24, i64 1
  %31 = select i1 %29, %"class.blink::CSSParserToken"* %24, %"class.blink::CSSParserToken"* %30
  %32 = select i1 %29, %"class.blink::CSSParserToken"* %5, %"class.blink::CSSParserToken"* %24
  %33 = icmp ult %"class.blink::CSSParserToken"* %31, %1
  %34 = select i1 %33, %"class.blink::CSSParserToken"* %31, %"class.blink::CSSParserToken"* %5
  %35 = bitcast %"class.blink::CSSParserToken"* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 63
  %38 = icmp eq i32 %37, 17
  br i1 %38, label %39, label %48

39:                                               ; preds = %28, %39
  %40 = phi %"class.blink::CSSParserToken"* [ %41, %39 ], [ %31, %28 ]
  %41 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %40, i64 1
  %42 = icmp ult %"class.blink::CSSParserToken"* %41, %1
  %43 = select i1 %42, %"class.blink::CSSParserToken"* %41, %"class.blink::CSSParserToken"* %5
  %44 = bitcast %"class.blink::CSSParserToken"* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 63
  %47 = icmp eq i32 %46, 17
  br i1 %47, label %39, label %48

48:                                               ; preds = %39, %28
  %49 = phi %"class.blink::CSSParserToken"* [ %31, %28 ], [ %41, %39 ]
  %50 = tail call i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* %32) #8
  %51 = icmp eq %"class.blink::CSSParserToken"* %49, %1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = tail call zeroext i1 @_ZN5blink17css_parsing_utils16IsCSSWideKeywordENS_10CSSValueIDE(i32 %50) #8
  br i1 %53, label %58, label %54

54:                                               ; preds = %52, %48, %22
  %55 = phi %"class.blink::CSSParserToken"* [ %1, %52 ], [ %49, %48 ], [ %24, %22 ]
  %56 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113ClassifyBlockENS_19CSSParserTokenRangeERb(%"class.blink::CSSParserToken"* %55, %"class.blink::CSSParserToken"* %1, i8* dereferenceable(1) %2)
  %57 = select i1 %56, i32 834, i32 0
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i32 [ %50, %52 ], [ %57, %54 ]
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"struct.blink::CSSTokenizedValue"* dereferenceable(40), i1 zeroext, %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %10 = icmp eq %"class.blink::CSSParserToken"* %7, %9
  br i1 %10, label %94, label %11

11:                                               ; preds = %4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 -86, i8* %5, align 1
  %12 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121ClassifyVariableRangeENS_19CSSParserTokenRangeERb(%"class.blink::CSSParserToken"* %7, %"class.blink::CSSParserToken"* %9, i8* nonnull dereferenceable(1) %5)
  switch i32 %12, label %51 [
    i32 0, label %92
    i32 834, label %13
  ]

13:                                               ; preds = %11
  %14 = load i8, i8* %5, align 1, !range !5
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %3, i64 0, i32 12
  %18 = tail call noalias i8* @malloc(i64 72) #8
  %19 = bitcast i8* %18 to %"class.blink::CSSVariableData"*
  tail call void @_ZN5blink15CSSVariableDataC1ERKNS_17CSSTokenizedValueEbbRKNS_4KURLERKN3WTF12TextEncodingE(%"class.blink::CSSVariableData"* %19, %"struct.blink::CSSTokenizedValue"* dereferenceable(40) %1, i1 zeroext %2, i1 zeroext %15, %"class.blink::KURL"* dereferenceable(112) %16, %"class.WTF::TextEncoding"* dereferenceable(8) %17) #8
  %20 = ptrtoint i8* %18 to i64
  %21 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64 32) #8
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, -8
  store i8 %24, i8* %22, align 1
  %25 = getelementptr inbounds i8, i8* %21, i64 2
  store i8 43, i8* %25, align 1
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 8
  %29 = bitcast i8* %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %13
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #8
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !6

45:                                               ; preds = %36
  tail call void @llvm.trap() #8
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %46, %31, %13
  %49 = getelementptr inbounds i8, i8* %21, i64 16
  %50 = bitcast i8* %49 to i64*
  store i64 %20, i64* %50, align 8
  br label %82

51:                                               ; preds = %11
  %52 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64 32) #8
  store i8 0, i8* %52, align 1
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = and i8 %54, -8
  store i8 %55, i8* %53, align 1
  %56 = getelementptr inbounds i8, i8* %52, i64 2
  store i8 43, i8* %56, align 1
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = getelementptr inbounds i8, i8* %52, i64 8
  %60 = bitcast i8* %59 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %60, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #8
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !6

76:                                               ; preds = %67
  tail call void @llvm.trap() #8
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %79

79:                                               ; preds = %51, %62, %77
  %80 = getelementptr inbounds i8, i8* %52, i64 16
  %81 = bitcast i8* %80 to %"class.blink::CSSVariableData"**
  store %"class.blink::CSSVariableData"* null, %"class.blink::CSSVariableData"** %81, align 8
  br label %82

82:                                               ; preds = %48, %79
  %83 = phi i8* [ %21, %48 ], [ %52, %79 ]
  %84 = phi i32 [ 0, %48 ], [ %12, %79 ]
  %85 = bitcast i8* %83 to %"class.blink::CSSCustomPropertyDeclaration"*
  %86 = getelementptr inbounds i8, i8* %83, i64 24
  %87 = bitcast i8* %86 to i32*
  store i32 %84, i32* %87, align 8
  %88 = getelementptr inbounds i8, i8* %83, i64 -4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = or i16 %90, 1
  store atomic i16 %91, i16* %89 release, align 2
  br label %92

92:                                               ; preds = %82, %11
  %93 = phi %"class.blink::CSSCustomPropertyDeclaration"* [ null, %11 ], [ %85, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br label %94

94:                                               ; preds = %4, %92
  %95 = phi %"class.blink::CSSCustomPropertyDeclaration"* [ %93, %92 ], [ null, %4 ]
  ret %"class.blink::CSSCustomPropertyDeclaration"* %95
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSVariableReferenceValue"* @_ZN5blink17CSSVariableParser28ParseRegisteredPropertyValueENS_19CSSParserTokenRangeERKNS_16CSSParserContextEbb(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserContext"* dereferenceable(176), i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca %"struct.blink::CSSTokenizedValue", align 8
  %8 = icmp eq %"class.blink::CSSParserToken"* %0, %1
  br i1 %8, label %47, label %9

9:                                                ; preds = %5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 -86, i8* %6, align 1
  %10 = call fastcc i32 @_ZN5blink12_GLOBAL__N_121ClassifyVariableRangeENS_19CSSParserTokenRangeERb(%"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"* %1, i8* nonnull dereferenceable(1) %6)
  %11 = icmp eq i32 %10, 834
  br i1 %11, label %12, label %45

12:                                               ; preds = %9
  %13 = load i8, i8* %6, align 1
  %14 = icmp eq i8 %13, 0
  %15 = and i1 %14, %3
  br i1 %15, label %45, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.blink::CSSTokenizedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 0, i32 0
  store %"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"** %18, align 8
  %19 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 0, i32 1
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %19, align 8
  %20 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 1, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 1, i32 1
  store i8* null, i8** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = icmp ne i8 %13, 0
  %26 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 12
  %28 = tail call noalias i8* @malloc(i64 72) #8
  %29 = bitcast i8* %28 to %"class.blink::CSSVariableData"*
  call void @_ZN5blink15CSSVariableDataC1ERKNS_17CSSTokenizedValueEbbRKNS_4KURLERKN3WTF12TextEncodingE(%"class.blink::CSSVariableData"* %29, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %7, i1 zeroext %4, i1 zeroext %25, %"class.blink::KURL"* dereferenceable(112) %26, %"class.WTF::TextEncoding"* dereferenceable(8) %27) #8
  %30 = ptrtoint i8* %28 to i64
  %31 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_25CSSVariableReferenceValueEEEPvm(i64 24) #8
  %32 = bitcast i8* %31 to %"class.blink::CSSVariableReferenceValue"*
  store i8 0, i8* %31, align 1
  %33 = getelementptr inbounds i8, i8* %31, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, -8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds i8, i8* %31, i64 2
  store i8 42, i8* %36, align 1
  %37 = getelementptr inbounds i8, i8* %31, i64 8
  %38 = bitcast i8* %37 to i64*
  store i64 %30, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %31, i64 16
  %40 = bitcast i8* %39 to %"class.blink::CSSParserContext"**
  store %"class.blink::CSSParserContext"* %2, %"class.blink::CSSParserContext"** %40, align 8
  %41 = getelementptr inbounds i8, i8* %31, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #8
  br label %45

45:                                               ; preds = %12, %9, %16
  %46 = phi %"class.blink::CSSVariableReferenceValue"* [ %32, %16 ], [ null, %9 ], [ null, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  br label %47

47:                                               ; preds = %5, %45
  %48 = phi %"class.blink::CSSVariableReferenceValue"* [ %46, %45 ], [ null, %5 ]
  ret %"class.blink::CSSVariableReferenceValue"* %48
}

declare i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink17css_parsing_utils16IsCSSWideKeywordENS_10CSSValueIDE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113ClassifyBlockENS_19CSSParserTokenRangeERb(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, i8* nocapture dereferenceable(1)) unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %8, align 8
  %9 = icmp eq %"class.blink::CSSParserToken"* %0, %1
  br i1 %9, label %228, label %10

10:                                               ; preds = %3
  %11 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %12

12:                                               ; preds = %10, %223
  %13 = phi %"class.blink::CSSParserToken"* [ %1, %10 ], [ %224, %223 ]
  %14 = phi %"class.blink::CSSParserToken"* [ %0, %10 ], [ %225, %223 ]
  %15 = phi i64 [ 0, %10 ], [ %226, %223 ]
  br label %16

16:                                               ; preds = %12, %190
  %17 = phi %"class.blink::CSSParserToken"* [ %13, %12 ], [ %192, %190 ]
  %18 = phi %"class.blink::CSSParserToken"* [ %14, %12 ], [ %191, %190 ]
  %19 = icmp ult %"class.blink::CSSParserToken"* %18, %17
  %20 = select i1 %19, %"class.blink::CSSParserToken"* %18, %"class.blink::CSSParserToken"* %11
  %21 = bitcast %"class.blink::CSSParserToken"* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 192
  %24 = icmp eq i32 %23, 64
  br i1 %24, label %25, label %194

25:                                               ; preds = %16
  %26 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %20) #8
  switch i32 %26, label %27 [
    i32 833, label %30
    i32 835, label %132
  ]

27:                                               ; preds = %25
  %28 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %29 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  br label %194

30:                                               ; preds = %25
  %31 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* nonnull %6) #8
  %32 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %31, 0
  %33 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %31, 1
  %34 = icmp ult %"class.blink::CSSParserToken"* %32, %33
  %35 = select i1 %34, %"class.blink::CSSParserToken"* %32, %"class.blink::CSSParserToken"* %11
  %36 = bitcast %"class.blink::CSSParserToken"* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 63
  %39 = icmp eq i32 %38, 17
  br i1 %39, label %40, label %49

40:                                               ; preds = %30, %40
  %41 = phi %"class.blink::CSSParserToken"* [ %42, %40 ], [ %32, %30 ]
  %42 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %41, i64 1
  %43 = icmp ult %"class.blink::CSSParserToken"* %42, %33
  %44 = select i1 %43, %"class.blink::CSSParserToken"* %42, %"class.blink::CSSParserToken"* %11
  %45 = bitcast %"class.blink::CSSParserToken"* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 63
  %48 = icmp eq i32 %47, 17
  br i1 %48, label %40, label %49

49:                                               ; preds = %40, %30
  %50 = phi %"class.blink::CSSParserToken"* [ %32, %30 ], [ %42, %40 ]
  %51 = icmp eq %"class.blink::CSSParserToken"* %50, %33
  %52 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %50, i64 1
  %53 = select i1 %51, %"class.blink::CSSParserToken"* %50, %"class.blink::CSSParserToken"* %52
  %54 = select i1 %51, %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"* %50
  %55 = icmp ult %"class.blink::CSSParserToken"* %53, %33
  %56 = select i1 %55, %"class.blink::CSSParserToken"* %53, %"class.blink::CSSParserToken"* %11
  %57 = bitcast %"class.blink::CSSParserToken"* %56 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 63
  %60 = icmp eq i32 %59, 17
  br i1 %60, label %61, label %70

61:                                               ; preds = %49, %61
  %62 = phi %"class.blink::CSSParserToken"* [ %63, %61 ], [ %53, %49 ]
  %63 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %62, i64 1
  %64 = icmp ult %"class.blink::CSSParserToken"* %63, %33
  %65 = select i1 %64, %"class.blink::CSSParserToken"* %63, %"class.blink::CSSParserToken"* %11
  %66 = bitcast %"class.blink::CSSParserToken"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 63
  %69 = icmp eq i32 %68, 17
  br i1 %69, label %61, label %70

70:                                               ; preds = %61, %49
  %71 = phi %"class.blink::CSSParserToken"* [ %53, %49 ], [ %63, %61 ]
  %72 = bitcast %"class.blink::CSSParserToken"* %54 to i32*
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 63
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %228

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %54, i64 0, i32 2
  %78 = bitcast i8** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !7
  %80 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %54, i64 0, i32 1
  %81 = load i32, i32* %80, align 4, !noalias !7
  %82 = icmp ugt i32 %81, 1
  br i1 %82, label %83, label %228

83:                                               ; preds = %76
  %84 = and i32 %73, 262144
  %85 = icmp eq i32 %84, 0
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = select i1 %85, i64 %86, i64 %87
  %89 = inttoptr i64 %88 to %"class.WTF::StringImpl"*
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %83
  %95 = inttoptr i64 %79 to i8*
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i16
  br label %101

98:                                               ; preds = %83
  %99 = inttoptr i64 %79 to i16*
  %100 = load i16, i16* %99, align 2
  br label %101

101:                                              ; preds = %98, %94
  %102 = phi i16 [ %97, %94 ], [ %100, %98 ]
  %103 = icmp eq i16 %102, 45
  br i1 %103, label %104, label %228

104:                                              ; preds = %101
  %105 = load atomic i32, i32* %90 monotonic, align 4
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %113, label %108

108:                                              ; preds = %104
  %109 = inttoptr i64 %79 to i8*
  %110 = getelementptr inbounds i8, i8* %109, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i16
  br label %117

113:                                              ; preds = %104
  %114 = inttoptr i64 %79 to i16*
  %115 = getelementptr inbounds i16, i16* %114, i64 1
  %116 = load i16, i16* %115, align 2
  br label %117

117:                                              ; preds = %108, %113
  %118 = phi i16 [ %112, %108 ], [ %116, %113 ]
  %119 = icmp eq i16 %118, 45
  br i1 %119, label %120, label %228

120:                                              ; preds = %117
  %121 = icmp eq %"class.blink::CSSParserToken"* %71, %33
  br i1 %121, label %190, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %71, i64 1
  %124 = bitcast %"class.blink::CSSParserToken"* %71 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 63
  %127 = icmp ne i32 %126, 22
  %128 = icmp eq %"class.blink::CSSParserToken"* %123, %33
  %129 = or i1 %128, %127
  br i1 %129, label %228, label %130

130:                                              ; preds = %122
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 0, i8* %4, align 1
  %131 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113ClassifyBlockENS_19CSSParserTokenRangeERb(%"class.blink::CSSParserToken"* %123, %"class.blink::CSSParserToken"* %33, i8* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %131, label %190, label %228

132:                                              ; preds = %25
  %133 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* nonnull %6) #8
  %134 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %133, 0
  %135 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %133, 1
  %136 = icmp ult %"class.blink::CSSParserToken"* %134, %135
  %137 = select i1 %136, %"class.blink::CSSParserToken"* %134, %"class.blink::CSSParserToken"* %11
  %138 = bitcast %"class.blink::CSSParserToken"* %137 to i32*
  %139 = load i32, i32* %138, align 8
  %140 = and i32 %139, 63
  %141 = icmp eq i32 %140, 17
  br i1 %141, label %142, label %151

142:                                              ; preds = %132, %142
  %143 = phi %"class.blink::CSSParserToken"* [ %144, %142 ], [ %134, %132 ]
  %144 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %143, i64 1
  %145 = icmp ult %"class.blink::CSSParserToken"* %144, %135
  %146 = select i1 %145, %"class.blink::CSSParserToken"* %144, %"class.blink::CSSParserToken"* %11
  %147 = bitcast %"class.blink::CSSParserToken"* %146 to i32*
  %148 = load i32, i32* %147, align 8
  %149 = and i32 %148, 63
  %150 = icmp eq i32 %149, 17
  br i1 %150, label %142, label %151

151:                                              ; preds = %142, %132
  %152 = phi %"class.blink::CSSParserToken"* [ %134, %132 ], [ %144, %142 ]
  %153 = icmp eq %"class.blink::CSSParserToken"* %152, %135
  %154 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %152, i64 1
  %155 = select i1 %153, %"class.blink::CSSParserToken"* %152, %"class.blink::CSSParserToken"* %154
  %156 = select i1 %153, %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"* %152
  %157 = icmp ult %"class.blink::CSSParserToken"* %155, %135
  %158 = select i1 %157, %"class.blink::CSSParserToken"* %155, %"class.blink::CSSParserToken"* %11
  %159 = bitcast %"class.blink::CSSParserToken"* %158 to i32*
  %160 = load i32, i32* %159, align 8
  %161 = and i32 %160, 63
  %162 = icmp eq i32 %161, 17
  br i1 %162, label %163, label %172

163:                                              ; preds = %151, %163
  %164 = phi %"class.blink::CSSParserToken"* [ %165, %163 ], [ %155, %151 ]
  %165 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %164, i64 1
  %166 = icmp ult %"class.blink::CSSParserToken"* %165, %135
  %167 = select i1 %166, %"class.blink::CSSParserToken"* %165, %"class.blink::CSSParserToken"* %11
  %168 = bitcast %"class.blink::CSSParserToken"* %167 to i32*
  %169 = load i32, i32* %168, align 8
  %170 = and i32 %169, 63
  %171 = icmp eq i32 %170, 17
  br i1 %171, label %163, label %172

172:                                              ; preds = %163, %151
  %173 = phi %"class.blink::CSSParserToken"* [ %155, %151 ], [ %165, %163 ]
  %174 = bitcast %"class.blink::CSSParserToken"* %156 to i32*
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 63
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %228

178:                                              ; preds = %172
  %179 = icmp eq %"class.blink::CSSParserToken"* %173, %135
  br i1 %179, label %190, label %180

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %173, i64 1
  %182 = bitcast %"class.blink::CSSParserToken"* %173 to i32*
  %183 = load i32, i32* %182, align 8
  %184 = and i32 %183, 63
  %185 = icmp ne i32 %184, 22
  %186 = icmp eq %"class.blink::CSSParserToken"* %181, %135
  %187 = or i1 %186, %185
  br i1 %187, label %228, label %188

188:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %189 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113ClassifyBlockENS_19CSSParserTokenRangeERb(%"class.blink::CSSParserToken"* %181, %"class.blink::CSSParserToken"* %135, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br i1 %189, label %190, label %228

190:                                              ; preds = %188, %178, %130, %120
  store i8 1, i8* %2, align 1
  %191 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %192 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %193 = icmp eq %"class.blink::CSSParserToken"* %191, %192
  br i1 %193, label %228, label %16

194:                                              ; preds = %16, %27
  %195 = phi %"class.blink::CSSParserToken"* [ %29, %27 ], [ %17, %16 ]
  %196 = phi %"class.blink::CSSParserToken"* [ %28, %27 ], [ %18, %16 ]
  %197 = icmp eq %"class.blink::CSSParserToken"* %196, %195
  br i1 %197, label %200, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %196, i64 1
  store %"class.blink::CSSParserToken"* %199, %"class.blink::CSSParserToken"** %7, align 8
  br label %200

200:                                              ; preds = %194, %198
  %201 = phi %"class.blink::CSSParserToken"* [ %199, %198 ], [ %196, %194 ]
  %202 = phi %"class.blink::CSSParserToken"* [ %196, %198 ], [ %11, %194 ]
  %203 = bitcast %"class.blink::CSSParserToken"* %202 to i32*
  %204 = load i32, i32* %203, align 8
  %205 = lshr i32 %204, 6
  %206 = and i32 %205, 3
  switch i32 %206, label %211 [
    i32 1, label %207
    i32 2, label %209
  ]

207:                                              ; preds = %200
  %208 = add i64 %15, 1
  br label %223

209:                                              ; preds = %200
  %210 = add i64 %15, -1
  br label %223

211:                                              ; preds = %200
  %212 = and i32 %204, 63
  switch i32 %212, label %223 [
    i32 6, label %213
    i32 24, label %228
    i32 28, label %228
    i32 26, label %228
    i32 30, label %228
    i32 5, label %228
    i32 21, label %221
  ]

213:                                              ; preds = %211
  %214 = call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %202) #8
  %215 = icmp eq i16 %214, 33
  %216 = icmp eq i64 %15, 0
  %217 = and i1 %216, %215
  br i1 %217, label %228, label %218

218:                                              ; preds = %213
  %219 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %220 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  br label %223

221:                                              ; preds = %211
  %222 = icmp eq i64 %15, 0
  br i1 %222, label %228, label %223

223:                                              ; preds = %218, %207, %221, %211, %209
  %224 = phi %"class.blink::CSSParserToken"* [ %195, %207 ], [ %195, %209 ], [ %195, %211 ], [ %195, %221 ], [ %220, %218 ]
  %225 = phi %"class.blink::CSSParserToken"* [ %201, %207 ], [ %201, %209 ], [ %201, %211 ], [ %201, %221 ], [ %219, %218 ]
  %226 = phi i64 [ %208, %207 ], [ %210, %209 ], [ %15, %211 ], [ %15, %221 ], [ %15, %218 ]
  %227 = icmp eq %"class.blink::CSSParserToken"* %225, %224
  br i1 %227, label %228, label %12

228:                                              ; preds = %221, %211, %211, %211, %211, %211, %213, %223, %190, %130, %188, %117, %70, %101, %76, %172, %122, %180, %3
  %229 = phi i1 [ true, %3 ], [ true, %190 ], [ false, %130 ], [ false, %188 ], [ false, %117 ], [ false, %70 ], [ false, %101 ], [ false, %76 ], [ false, %172 ], [ false, %122 ], [ false, %180 ], [ true, %223 ], [ false, %213 ], [ false, %211 ], [ false, %211 ], [ false, %211 ], [ false, %211 ], [ false, %211 ], [ false, %221 ]
  ret i1 %229
}

declare i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #3

declare { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"*) local_unnamed_addr #3

declare zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #3

declare void @_ZN5blink15CSSVariableDataC1ERKNS_17CSSTokenizedValueEbbRKNS_4KURLERKN3WTF12TextEncodingE(%"class.blink::CSSVariableData"*, %"struct.blink::CSSTokenizedValue"* dereferenceable(40), i1 zeroext, i1 zeroext, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !6

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !6

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_25CSSVariableReferenceValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !6

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !6

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink14CSSParserToken5ValueEv"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink14CSSParserToken5ValueEv"}
