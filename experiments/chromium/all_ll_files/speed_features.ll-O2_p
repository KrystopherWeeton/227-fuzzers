; ModuleID = '../../third_party/libaom/source/libaom/av1/encoder/speed_features.c'
source_filename = "../../third_party/libaom/source/libaom/av1/encoder/speed_features.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.MESH_PATTERN = type { i32, i32 }
%struct.macroblockd = type { i32, i32, i32, i8, [3 x %struct.macroblockd_plane], %struct.TileInfo, %struct.MB_MODE_INFO**, i8, i8, i8, i8, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, i8*, i32, i32, i32, i32, i32, [2 x %struct.scale_factors*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [32 x i8]], i8*, [32 x i8], i8*, i8*, [32 x i8], [3 x %struct.WienerInfo], [3 x %struct.SgrprojInfo], i8, i8, [29 x [8 x %struct.candidate_mv]], [29 x [8 x i16]], i8, i8, [8 x i8], %struct.frame_contexts*, i32, [8 x i32], [8 x i32], i32, i32, %struct.aom_internal_error_info*, %struct.WarpedMotionParams*, i8, [4 x i8], [4 x i8], i8*, %struct.cfl_ctx, [2 x i16], i16*, [2 x i8*], [8 x i8] }
%struct.macroblockd_plane = type { i8, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i8*, i8, i8, [8 x [19 x i8*]], [8 x [19 x i8*]] }
%struct.buf_2d = type { i8*, i8*, i32, i32, i32 }
%struct.TileInfo = type { i32, i32, i32, i32, i32, i32 }
%struct.MB_MODE_INFO = type <{ i8, i8, i8, i8, i32, [2 x %union.int_mv], [2 x i8], [2 x i8], %union.int_interpfilters, i8, i8, i8, i8, %struct.WarpedMotionParams, i8, i8, [6 x i8], %struct.INTERINTER_COMPOUND_DATA, [2 x i8], %struct.FILTER_INTRA_MODE_INFO, i8, i8, %struct.PALETTE_MODE_INFO, i8, i8, [16 x i8], i8, [4 x i8], i16, [7 x i8] }>
%union.int_mv = type { i32 }
%union.int_interpfilters = type { i32 }
%struct.WarpedMotionParams = type { [8 x i32], i16, i16, i16, i16, i8, i8 }
%struct.INTERINTER_COMPOUND_DATA = type { i8*, i8, i8, i8, i8 }
%struct.FILTER_INTRA_MODE_INFO = type { i8, i8 }
%struct.PALETTE_MODE_INFO = type { [24 x i16], [2 x i8] }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)* }
%struct.yv12_buffer_config = type { %union.anon, %union.anon.0, %union.anon.2, %union.anon.4, %union.anon.6, %union.anon.8, i32, [3 x i8*], i8*, i32, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, %struct.aom_metadata_array* }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { i32, i32 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i8*, i8*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }
%struct.WienerInfo = type { [8 x i16], [8 x i16] }
%struct.SgrprojInfo = type { i32, [2 x i32] }
%struct.candidate_mv = type { %union.int_mv, %union.int_mv }
%struct.frame_contexts = type { [5 x [13 x [3 x i16]]], [5 x [2 x [9 x [3 x i16]]]], [2 x [3 x [3 x i16]]], [2 x [2 x [6 x i16]]], [2 x [2 x [7 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [2 x [2 x [10 x i16]]], [2 x [2 x [11 x i16]]], [2 x [2 x [12 x i16]]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [5 x [2 x [21 x [5 x i16]]]], [6 x [3 x i16]], [2 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [8 x [9 x i16]], [22 x [3 x i16]], [22 x [17 x i16]], [4 x [3 x i16]], [22 x [3 x i16]], [4 x [5 x i16]], [22 x [4 x i16]], [22 x [3 x i16]], [7 x [8 x i16]], [7 x [8 x i16]], [7 x [5 x [9 x i16]]], [7 x [5 x [9 x i16]]], [7 x [3 x [3 x i16]]], [2 x [3 x i16]], [5 x [3 x i16]], [3 x [6 x [3 x i16]]], [5 x [3 x i16]], [3 x [3 x [3 x i16]]], [3 x [3 x [3 x i16]]], [3 x [2 x [3 x i16]]], [21 x [3 x i16]], [6 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [3 x [3 x i16]], [4 x [3 x i16]], %struct.nmv_context, %struct.nmv_context, [3 x i16], %struct.segmentation_probs, [22 x [3 x i16]], [6 x i16], [4 x i16], [3 x i16], [3 x i16], [4 x [14 x i16]], [2 x [13 x [15 x i16]]], [20 x [11 x i16]], [16 x [4 x i16]], [5 x [5 x [14 x i16]]], [8 x [8 x i16]], [4 x [3 x [4 x i16]]], [5 x i16], [4 x [5 x i16]], [5 x i16], [3 x [4 x [13 x [17 x i16]]]], [4 x [4 x [17 x i16]]], [9 x i16], [6 x [17 x i16]], i32 }
%struct.nmv_context = type { [5 x i16], [2 x %struct.nmv_component] }
%struct.nmv_component = type { [12 x i16], [2 x [5 x i16]], [5 x i16], [3 x i16], [3 x i16], [3 x i16], [3 x i16], [10 x [3 x i16]] }
%struct.segmentation_probs = type { [9 x i16], [3 x [3 x i16]], [3 x [9 x i16]] }
%struct.aom_internal_error_info = type { i32, i32, [200 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.cfl_ctx = type { [1024 x i16], [1024 x i16], [2 x i32], i32, [2 x [32 x i16]], i32, i32, i32, i32, i32, i32 }
%struct.AV1Common = type { %struct.CurrentFrame, %struct.aom_internal_error_info*, i32, i32, i32, i32, i32, i32, i8, [33 x i32], i32, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], %struct.scale_factors, [8 x %struct.scale_factors], [8 x %struct.RefCntBuffer*], i32, i32, i32, %struct.FeatureFlags, %struct.CommonModeInfoParams, %struct.CommonQuantParams, %struct.segmentation, i8*, %struct.loop_filter_info_n, %struct.loopfilter, [3 x %struct.RestorationInfo], i32*, %struct.RestorationLineBuffers*, %struct.yv12_buffer_config, %struct.CdefInfo, %struct.aom_film_grain_t, %struct.DeltaQInfo, [8 x %struct.WarpedMotionParams], %struct.SequenceHeader*, %struct.frame_contexts*, %struct.frame_contexts*, %struct.CommonTileParams, %struct.BufferPool*, %struct.CommonContexts, i32, [8 x i32], %struct.TPL_MV_REF*, i32, [8 x i32], [8 x i8], i32, i32 }
%struct.CurrentFrame = type { i8, i8, i32, i32, i32, %struct.SkipModeInfo, i32, i32 }
%struct.SkipModeInfo = type { i32, i32, i32, i32 }
%struct.RefCntBuffer = type { i32, i32, [7 x i32], i32, [7 x i32], %struct.MV_REF*, i8*, %struct.segmentation, i32, i32, i32, i32, [8 x %struct.WarpedMotionParams], i32, i8, %struct.aom_film_grain_t, %struct.aom_codec_frame_buffer, %struct.yv12_buffer_config, i8, [4 x i32], [8 x i8], [2 x i8], %struct.frame_contexts }
%struct.MV_REF = type { %union.int_mv, i8 }
%struct.aom_codec_frame_buffer = type { i8*, i64, i8* }
%struct.FeatureFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8 }
%struct.CommonModeInfoParams = type { i32, i32, i32, i32, i32, %struct.MB_MODE_INFO*, i32, i32, i8, %struct.MB_MODE_INFO**, i32, i32, i8*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*, i32, i32)* }
%struct.CommonQuantParams = type { i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], [8 x [2 x i16]], [16 x [3 x [19 x i8*]]], [16 x [3 x [19 x i8*]]], [8 x [19 x i8*]], [8 x [19 x i8*]], [8 x [19 x i8*]], i8, i32, i32, i32 }
%struct.segmentation = type { i8, i8, i8, i8, [8 x [8 x i16]], [8 x i32], i32, i8 }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [3 x [8 x [2 x [8 x [2 x i8]]]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { [2 x i32], i32, i32, i32, i8, i8, [8 x i8], [2 x i8], i32 }
%struct.RestorationInfo = type { i32, i32, i32, i32, i32, %struct.RestorationUnitInfo*, %struct.RestorationStripeBoundaries, i32 }
%struct.RestorationUnitInfo = type { i32, [12 x i8], %struct.WienerInfo, %struct.SgrprojInfo, [4 x i8] }
%struct.RestorationStripeBoundaries = type { i8*, i8*, i32, i32 }
%struct.RestorationLineBuffers = type { [3 x [392 x i16]], [3 x [392 x i16]] }
%struct.CdefInfo = type { [3 x i16*], [3 x i16*], i16*, [3 x i64], [3 x i64], i64, i32, i32, [16 x i32], [16 x i32], i32, i32, i32 }
%struct.aom_film_grain_t = type { i32, i32, [14 x [2 x i32]], i32, [10 x [2 x i32]], i32, [10 x [2 x i32]], i32, i32, i32, [24 x i32], [25 x i32], [25 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.DeltaQInfo = type { i32, i32, i32, i32, i32 }
%struct.SequenceHeader = type { i32, i32, i32, i32, i8, i32, i32, i8, i32, i32, %struct.OrderHintInfo, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, [32 x i32], i32, %struct.aom_timing, i8, %struct.aom_dec_model_info, i8, [32 x i8], [32 x i8], [33 x %struct.aom_dec_model_op_parameters] }
%struct.OrderHintInfo = type { i32, i32, i32, i32 }
%struct.aom_timing = type { i32, i32, i32, i32 }
%struct.aom_dec_model_info = type { i32, i32, i32, i32 }
%struct.aom_dec_model_op_parameters = type { i32, i64, i64, i32, i32, i32, i32, i32 }
%struct.CommonTileParams = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32 }
%struct.BufferPool = type { %union.pthread_mutex_t, i8*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, [16 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.CommonContexts = type { i8**, [3 x i8**], i8**, i32, i32, i32 }
%struct.TPL_MV_REF = type { %union.int_mv, i8 }
%struct.SUBPEL_MOTION_SEARCH_PARAMS = type { i32, i32*, i8, i32, %struct.SubpelMvLimits, %struct.MV_COST_PARAMS, %struct.SUBPEL_SEARCH_VAR_PARAMS }
%struct.SubpelMvLimits = type { i32, i32, i32, i32 }
%struct.MV_COST_PARAMS = type { %struct.mv*, %struct.fullpel_mv, i8, i32*, [2 x i32*], i32, i32 }
%struct.fullpel_mv = type { i16, i16 }
%struct.SUBPEL_SEARCH_VAR_PARAMS = type { %struct.aom_variance_vtable*, i8, %struct.MSBuffers, i32, i32 }
%struct.aom_variance_vtable = type { i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)*, i32 (i8*, i32, i8*, i32, i8*, i8*, i32, i32)*, i32 (i8*, i32, i32, i32, i8*, i32, i8*, i8*, i32, i32, i32*)*, i32 (i8*, i32, i32*, i32*)*, i32 (i8*, i32, i32*, i32*, i32*)*, i32 (i8*, i32, i32, i32, i32*, i32*, i32*)*, i32 (i8*, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*, %struct.dist_wtd_comp_params*)* }
%struct.dist_wtd_comp_params = type { i32, i32, i32 }
%struct.MSBuffers = type { %struct.buf_2d*, %struct.buf_2d*, i8*, i8*, i32, i32, i32*, i32* }
%struct.mv = type { i16, i16 }
%struct.AV1_COMP = type { %struct.AV1_PRIMARY*, [8 x i8], %struct.EncQuantDequantParams, %struct.ThreadData, %struct.FRAME_COUNTS, %struct.MBMIExtFrameBufferInfo, %struct.CB_COEFF_BUFFER*, %struct.CoeffBufferPool, %struct.AV1Common, %struct.AV1EncoderConfig, i32, [8 x i8], %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, i32, %struct.TemporalFilterCtx, i32, %struct.ForceIntegerMVInfo, [7 x %struct.RefCntBuffer*], %struct.RefCntBuffer*, %struct.RefreshFrameFlagsInfo, [8 x i32], %struct.ExternalFlags, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i64, %struct.RD_OPT, %struct.CODING_CONTEXT, %struct.GlobalMotionInfo, %struct.WinnerModeParams, %struct.TimeStamps, %struct.RATE_CONTROL, double, i32, i32, %struct.SPEED_FEATURES, %struct.MotionVectorSearchParams, i32, %struct.EncSegmentationInfo, %struct.CYCLIC_REFRESH*, %struct.ActiveMap, i8, %struct.RefBufferStack, i32, i32, %struct.FRAME_INFO, %struct.FRAME_INDEX_SET, %struct.InitialDimensions, i32, %struct.ResizePendingParams, %struct.TileDataEnc*, i32, %struct.TokenInfo, i32, %struct.VarBasedPartitionInfo, %struct.FrameProbInfo, %struct.MultiThreadInfo, i32, i32, i32, %struct.AV1LrStruct, %struct.aom_film_grain_table_t*, %struct.aom_denoise_and_model_t*, %struct.InterpSearchFlags, i32, i32, i32, i32, %struct.RefFrameDistanceInfo, double*, %struct.SVC, i8, %struct.MV_STATS, i8, i32, i32, %struct.FirstPassData, %struct.noise_estimate, %struct.av1_denoiser, i8*, i8, i32, i64, [8 x i8] }
%struct.AV1_PRIMARY = type { %struct.AV1_COMP*, %struct.AV1_COMP*, %struct.lookahead_ctx*, i32, %struct.aom_codec_pkt_list*, i32, %struct.GF_GROUP, %struct.GF_STATE, i32, %struct.AV1LevelParams, i32, i32, %struct.TWO_PASS, %struct.PRIMARY_RATE_CONTROL, %struct.yv12_buffer_config, %struct.SequenceHeader, i32, i8, i32, i32, %struct.aom_internal_error_info, [22 x %struct.aom_variance_vtable], double*, double*, %struct.TplParams }
%struct.lookahead_ctx = type { i32, i32, [2 x %struct.read_ctx], %struct.lookahead_entry*, i32, i8 }
%struct.read_ctx = type { i32, i32, i32, i32 }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32, i64 }
%struct.aom_codec_pkt_list = type { i32, i32, [1 x %struct.aom_codec_cx_pkt] }
%struct.aom_codec_cx_pkt = type { i32, %union.anon.10 }
%union.anon.10 = type { %struct.aom_psnr_pkt }
%struct.aom_psnr_pkt = type { [4 x i32], [4 x i64], [4 x double], [4 x i32], [4 x i64], [4 x double] }
%struct.GF_GROUP = type { [250 x i8], [250 x i8], [250 x i8], [250 x i32], [250 x i32], i32, i32, [250 x i8], [250 x i32], [250 x i8], [250 x i8], i32, i32 }
%struct.GF_STATE = type { i32 }
%struct.AV1LevelParams = type { [32 x i8], i32, [32 x %struct.AV1LevelInfo*] }
%struct.AV1LevelInfo = type { %struct.AV1LevelStats, %struct.AV1LevelSpec, %struct.FrameWindowBuffer, [24 x %struct.DECODER_MODEL] }
%struct.AV1LevelStats = type { i32, i32, i32, i32, i32, i32, i32, i32, double, double, double }
%struct.AV1LevelSpec = type { i8, i32, i32, i32, i32, i32, i32, i32, i64, i64, double, double, double, double }
%struct.FrameWindowBuffer = type { [256 x %struct.FrameRecord], i32, i32 }
%struct.FrameRecord = type { i64, i64, i64, i32, i32, i32, i32, i32 }
%struct.DECODER_MODEL = type { i8, i8, i8, i8, i32, i32, i32, i32, i64, double, double, double, double, i32, i32, i32, [8 x i32], [10 x %struct.FRAME_BUFFER], %struct.DFG_INTERVAL_QUEUE, double, double, i64, double, double, i32, i32, double, double }
%struct.FRAME_BUFFER = type { i32, i32, i32, i8, double }
%struct.DFG_INTERVAL_QUEUE = type { i32, i32, double, [64 x %struct.DFG_INTERVAL] }
%struct.DFG_INTERVAL = type { double, double, double }
%struct.TWO_PASS = type { i32, [36 x %struct.FIRSTPASS_STATS*], i32, %struct.FIRSTPASS_STATS*, %struct.STATS_BUFFER_CTX*, i32, i64, double, double, double, double, double, i8, i64, i64, double, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FIRSTPASS_STATS = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i64, double, double }
%struct.STATS_BUFFER_CTX = type { %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS* }
%struct.PRIMARY_RATE_CONTROL = type { i64, i32, i32, [15 x i32], i32, i32, [150 x %struct.regions], i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, float, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.regions = type { i32, i32, double, double, double, double, double, i32 }
%struct.TplParams = type { i8, i8, [79 x %struct.TplDepFrame], [35 x %struct.TplDepStats*], [35 x %struct.yv12_buffer_config], %struct.TplDepFrame*, %struct.scale_factors, i32, [7 x %struct.yv12_buffer_config*], [7 x %struct.yv12_buffer_config*], %struct.AV1TplRowMultiThreadSync, i32 }
%struct.TplDepFrame = type { i8, %struct.TplDepStats*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, [8 x i32], i32, i32, i32, i32, i32, i32, i32, [256 x double], [256 x double], i32, i32 }
%struct.TplDepStats = type { i64, i64, i64, i64, [2 x i64], i64, i64, [2 x i64], i64, i64, [7 x %union.int_mv], [2 x i32], [7 x i64] }
%struct.AV1TplRowMultiThreadSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, i32 }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.12, %union.anon.14, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.12 = type { i64 }
%union.anon.14 = type { i64 }
%struct.EncQuantDequantParams = type { %struct.QUANTS, %struct.Dequants }
%struct.QUANTS = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.Dequants = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.ThreadData = type { %struct.macroblock, %struct.RD_COUNTS, %struct.FRAME_COUNTS*, %struct.PC_TREE_SHARED_BUFFERS, %struct.SIMPLE_MOTION_DATA_TREE*, %struct.SIMPLE_MOTION_DATA_TREE*, %struct.inter_modes_info*, [2 x [2 x i32*]], %struct.OBMCBuffer, %struct.PALETTE_BUFFER*, %struct.CompoundTypeRdBuffers, i16*, [2 x i8*], i32, i32, i32, i32, [4 x i32], %struct.frame_contexts*, %struct.VP64x64*, i32, %struct.PICK_MODE_CONTEXT*, %struct.TemporalFilterData, %struct.TplTxfmStats, %struct.PixelLevelGradientInfo*, [8 x i8] }
%struct.macroblock = type { [3 x %struct.macroblock_plane], [8 x i8], %struct.macroblockd, %struct.MB_MODE_INFO_EXT, %struct.MB_MODE_INFO_EXT_FRAME*, %struct.frame_contexts*, %struct.frame_contexts*, %struct.CB_COEFF_BUFFER*, [2 x i16], %struct.OBMCBuffer, %struct.PALETTE_BUFFER*, %struct.CompoundTypeRdBuffers, i16*, %struct.aom_internal_error_info*, [2 x i8*], i32, i32, i32, i32, i32, %struct.ModeCosts, %struct.MvCosts*, %struct.IntraBCMVCosts*, %struct.CoeffCosts, i32, i32, i32, i32, i32, i32, %struct.SuperBlockEnc, %struct.CONTENT_STATE_SB, [8 x i32], i32, [8 x i8], [8 x %struct.WARP_SAMPLE_INFO], [1024 x i32], i32, %struct.PartitionSearchInfo, i32, i32, [22 x [169 x i32]], %struct.WinnerModeStats*, i32, i8, %struct.inter_modes_info*, i8, [64 x %struct.COMP_RD_STATS], i32, i32, %struct.intrabc_hash_info, i32, %struct.MB_MODE_INFO*, %struct.PixelLevelGradientInfo*, [2 x i8], [8 x i32], %struct.FullMvLimits, %struct.TxfmSearchParams, %struct.TxfmSearchInfo, [2 x i8], i32, [8 x i32] }
%struct.macroblock_plane = type { i16*, i32*, i32*, i32*, i16*, i8*, %struct.buf_2d, i16*, i16*, i16*, i16*, i16*, i16*, i16* }
%struct.MB_MODE_INFO_EXT = type { [29 x [4 x %struct.candidate_mv]], [29 x [4 x i16]], [29 x i8], [8 x %union.int_mv], [29 x i16] }
%struct.MB_MODE_INFO_EXT_FRAME = type { [4 x %struct.candidate_mv], [4 x i16], i8, [8 x %union.int_mv], i16, [2 x i16] }
%struct.ModeCosts = type { [20 x [10 x i32]], [4 x [13 x i32]], [13 x [13 x [13 x i32]]], [2 x [13 x [14 x i32]]], [22 x [2 x i32]], [5 x i32], [8 x [7 x i32]], [8 x [2 x [16 x i32]]], [2 x i32], [7 x [7 x i32]], [7 x [7 x i32]], [7 x [5 x [8 x i32]]], [7 x [5 x [8 x i32]]], [7 x [3 x [2 x i32]]], [2 x [2 x i32]], [3 x [2 x i32]], [6 x [2 x i32]], [2 x [2 x i32]], [6 x [2 x i32]], [3 x [2 x i32]], [3 x [6 x [2 x i32]]], [5 x [2 x i32]], [5 x [3 x i32]], [3 x [3 x [3 x i32]]], [3 x [3 x [2 x i32]]], [3 x [2 x [2 x i32]]], [4 x [2 x i32]], [8 x [8 x i32]], [22 x [2 x i32]], [22 x [16 x i32]], [4 x [2 x i32]], [22 x [2 x i32]], [4 x [4 x i32]], [6 x [2 x i32]], [6 x [2 x i32]], [22 x [3 x i32]], [22 x [2 x i32]], [16 x [3 x i32]], [3 x [2 x i32]], [4 x [3 x [5 x i32]]], [21 x [2 x i32]], [4 x [4 x [16 x i32]]], [3 x [4 x [13 x [16 x i32]]]], [3 x i32], [2 x i32], [2 x i32] }
%struct.MvCosts = type { [4 x i32], [2 x [32767 x i32]], [2 x [32767 x i32]], [2 x i32*], [2 x i32*], i32** }
%struct.IntraBCMVCosts = type { [4 x i32], [2 x [32767 x i32]], [2 x i32*] }
%struct.CoeffCosts = type { [5 x [2 x %struct.LV_MAP_COEFF_COST]], [7 x [2 x %struct.LV_MAP_EOB_COST]] }
%struct.LV_MAP_COEFF_COST = type { [13 x [2 x i32]], [4 x [3 x i32]], [42 x [8 x i32]], [9 x [2 x i32]], [3 x [2 x i32]], [21 x [26 x i32]] }
%struct.LV_MAP_EOB_COST = type { [2 x [11 x i32]] }
%struct.SuperBlockEnc = type { i8, i8, i32, [64 x i64], [64 x i64], [64 x [7 x %union.int_mv]], i32 }
%struct.CONTENT_STATE_SB = type { i32, i32, i32 }
%struct.WARP_SAMPLE_INFO = type { i32, [16 x i32], [16 x i32] }
%struct.PartitionSearchInfo = type { [105 x i8] }
%struct.WinnerModeStats = type { %struct.MB_MODE_INFO, %struct.RD_STATS, i64, i32, i32, [16384 x i8], i8 }
%struct.RD_STATS = type { i32, i64, i64, i64, i32, i32 }
%struct.COMP_RD_STATS = type { [4 x i32], [4 x i64], [4 x i32], [4 x i64], [4 x i32], [2 x %union.int_mv], [2 x i8], i8, %union.int_interpfilters, i32, [2 x i32], %struct.INTERINTER_COMPOUND_DATA }
%struct.intrabc_hash_info = type { [2 x [2 x i32*]], %struct._hash_table, %struct._crc_calculator, %struct._crc_calculator, i32 }
%struct._hash_table = type { %struct.Vector** }
%struct.Vector = type { i64, i64, i64, i8* }
%struct._crc_calculator = type { i32, i32, i32, [256 x i32], i32 }
%struct.FullMvLimits = type { i32, i32, i32, i32 }
%struct.TxfmSearchParams = type { i32, i32, i32, [2 x i32], i32, i8, i32, i32, i8, i32 }
%struct.TxfmSearchInfo = type { i32, [1024 x i8], [1024 x i8], %struct.TxbRdRecords*, i32 }
%struct.TxbRdRecords = type { %struct.MB_RD_RECORD, [256 x %struct.TXB_RD_RECORD], [64 x %struct.TXB_RD_RECORD], [16 x %struct.TXB_RD_RECORD], [4 x %struct.TXB_RD_RECORD], %struct.TXB_RD_RECORD }
%struct.MB_RD_RECORD = type { [8 x %struct.MB_RD_INFO], i32, i32, %struct._CRC32C }
%struct.MB_RD_INFO = type { i8, [16 x i8], [1024 x i8], [1024 x i8], %struct.RD_STATS, i32 }
%struct._CRC32C = type { [8 x [256 x i32]] }
%struct.TXB_RD_RECORD = type { [256 x i32], [256 x %struct.TXB_RD_INFO], i32, i32 }
%struct.TXB_RD_INFO = type { i64, i64, i32, i16, i8, i16, i8, i8, i8, i8 }
%struct.RD_COUNTS = type { [3 x i64], i32, i32, [19 x [16 x i32]], [22 x [2 x i32]], [2 x i32] }
%struct.PC_TREE_SHARED_BUFFERS = type { [3 x i32*], [3 x i32*], [3 x i32*] }
%struct.SIMPLE_MOTION_DATA_TREE = type { i8, i8, [4 x %struct.SIMPLE_MOTION_DATA_TREE*], [8 x %struct.fullpel_mv], [2 x i32], [8 x i32], i32, i32 }
%struct.inter_modes_info = type { i32, [4 x i8], [1024 x %struct.MB_MODE_INFO], [1024 x i32], [1024 x i64], [1024 x i64], [1024 x %struct.RdIdxPair], [1024 x %struct.RD_STATS], [1024 x %struct.RD_STATS], [1024 x %struct.RD_STATS] }
%struct.RdIdxPair = type { i32, i64 }
%struct.OBMCBuffer = type { i32*, i32*, i8*, i8* }
%struct.PALETTE_BUFFER = type { [4096 x i8], [8192 x i32] }
%struct.CompoundTypeRdBuffers = type { i8*, i8*, i16*, i16*, i8* }
%struct.VP64x64 = type { %struct.VPVariance, [4 x %struct.VP32x32] }
%struct.VPVariance = type { %struct.VPartVar, [2 x %struct.VPartVar], [2 x %struct.VPartVar] }
%struct.VPartVar = type { i32, i32, i32, i32 }
%struct.VP32x32 = type { %struct.VPVariance, [4 x %struct.VP16x16] }
%struct.VP16x16 = type { %struct.VPVariance, [4 x %struct.VP8x8] }
%struct.VP8x8 = type { %struct.VPVariance, [4 x %struct.VP4x4] }
%struct.VP4x4 = type { %struct.VPVariance, [4 x %struct.VPartVar] }
%struct.PICK_MODE_CONTEXT = type { %struct.MB_MODE_INFO, %struct.MB_MODE_INFO_EXT_FRAME, [2 x i8*], i8*, [3 x i32*], [3 x i32*], [3 x i32*], [3 x i16*], [3 x i8*], i8*, i32, i32, i32, i32, i32, %struct.RD_STATS, i32, i64, i64, i64, i8, %union.int_mv, i8, i8, i32 }
%struct.TemporalFilterData = type { %struct.FRAME_DIFF, %struct.MB_MODE_INFO*, i32*, i16*, i8* }
%struct.FRAME_DIFF = type { i64, i64 }
%struct.TplTxfmStats = type { [256 x double], i32 }
%struct.PixelLevelGradientInfo = type { i16, i8, i8 }
%struct.FRAME_COUNTS = type { [16 x [3 x i32]] }
%struct.MBMIExtFrameBufferInfo = type { %struct.MB_MODE_INFO_EXT_FRAME*, i32, i32 }
%struct.CB_COEFF_BUFFER = type { [3 x i32*], [3 x i16*], [3 x i8*] }
%struct.CoeffBufferPool = type { i32*, i16*, i8* }
%struct.AV1EncoderConfig = type { %struct.InputCfg, %struct.FrameDimensionCfg, %struct.AlgoCfg, %struct.KeyFrameCfg, %struct.RateControlCfg, %struct.QuantizationCfg, %struct.ResizeCfg, %struct.SuperResCfg, %struct.aom_fixed_buf, %struct.ToolCfg, %struct.GFConfig, %struct.TileConfig, %struct.TuneCfg, %struct.ColorCfg, %struct.DecoderModelCfg, %struct.RefFrameCfg, %struct.UnitTestCfg, %struct.MotionModeCfg, %struct.IntraModeCfg, %struct.TxfmSizeTypeCfg, %struct.CompoundTypeCfg, %struct.PartitionCfg, %struct.CostUpdateFreq, float, i32, i32, i32, i32, i32, i32, i32, [32 x i8], i8, i32, i8, i8, i8, i8, i8* }
%struct.InputCfg = type { double, i32, i32, i32, i32 }
%struct.FrameDimensionCfg = type { i32, i32, i32, i32, i32, i32 }
%struct.AlgoCfg = type { i32, i32, i32, i32, i8, i8, i8 }
%struct.KeyFrameCfg = type { i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.RateControlCfg = type { i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.QuantizationCfg = type { [5 x double], i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.ResizeCfg = type { i8, i8, i8 }
%struct.SuperResCfg = type { i32, i32, i8, i8, i32, i8 }
%struct.aom_fixed_buf = type { i8*, i64 }
%struct.ToolCfg = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.GFConfig = type { i32, i32, i32, i32, i32, i8, i8 }
%struct.TileConfig = type { i32, i32, i32, i32, i32, i32, [64 x i32], [64 x i32], i8, i8, i8 }
%struct.TuneCfg = type { i8*, i8*, i32, i32, i32 }
%struct.ColorCfg = type { i32, i32, i32, i32, i32 }
%struct.DecoderModelCfg = type { %struct.aom_timing, i32, i8, i8, i8 }
%struct.RefFrameCfg = type { i32, i8, i8 }
%struct.UnitTestCfg = type { i32, i32 }
%struct.MotionModeCfg = type { i8, i8, i8 }
%struct.IntraModeCfg = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.TxfmSizeTypeCfg = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.CompoundTypeCfg = type { i8, i8, i8, i8, i8, i8 }
%struct.PartitionCfg = type { i8, i8, i8, i8, i8 }
%struct.CostUpdateFreq = type { i32, i32, i32, i32 }
%struct.TemporalFilterCtx = type { [35 x %struct.yv12_buffer_config*], i32, i32, i32, %struct.scale_factors, [3 x double], i32, i32, i32, i32, i32 }
%struct.ForceIntegerMVInfo = type { [32 x double], i32, i32 }
%struct.RefreshFrameFlagsInfo = type { i8, i8, i8 }
%struct.ExternalFlags = type { i32, %struct.ExtRefreshFrameFlagsInfo, i8, i8, i8, i8, i8, i8 }
%struct.ExtRefreshFrameFlagsInfo = type { i8, i8, i8, i8, i8, i8 }
%struct.RD_OPT = type { [169 x i32], [8 x [22 x [169 x i32]]], i32, double }
%struct.CODING_CONTEXT = type { %struct.loopfilter, %struct.CdefInfo, %struct.yv12_buffer_config, %struct.RATE_CONTROL, %struct.MV_STATS }
%struct.GlobalMotionInfo = type { i8, [8 x %struct.yv12_buffer_config*], i8*, [2 x i32], [2 x [7 x %struct.FrameDistPair]], i32, i32, i32, [8192 x i32] }
%struct.FrameDistPair = type { i32, i8 }
%struct.WinnerModeParams = type { [3 x [2 x i32]], [3 x i8], [3 x i32], [3 x i32], [3 x i32], [3 x i32] }
%struct.TimeStamps = type { i64, i64, i64 }
%struct.RATE_CONTROL = type { i32, i32, i32, i32, i32, [4 x i32], i32, [4 x double], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, [4 x i32], double, double, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32 }
%struct.SPEED_FEATURES = type { %struct.HIGH_LEVEL_SPEED_FEATURES, %struct.FIRST_PASS_SPEED_FEATURES, %struct.TPL_SPEED_FEATURES, %struct.GLOBAL_MOTION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES, %struct.MV_SPEED_FEATURES, %struct.INTER_MODE_SPEED_FEATURES, %struct.INTERP_FILTER_SPEED_FEATURES, %struct.INTRA_MODE_SPEED_FEATURES, %struct.TX_SPEED_FEATURES, %struct.RD_CALC_SPEED_FEATURES, %struct.WINNER_MODE_SPEED_FEATURES, %struct.LOOP_FILTER_SPEED_FEATURES, %struct.REAL_TIME_SPEED_FEATURES }
%struct.HIGH_LEVEL_SPEED_FEATURES = type { i32, i8, i32, i8, i32, i8, i32, i32 }
%struct.FIRST_PASS_SPEED_FEATURES = type { i32, i32 }
%struct.TPL_SPEED_FEATURES = type { i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32 }
%struct.GLOBAL_MOTION_SPEED_FEATURES = type { i8, i32, i32 }
%struct.PARTITION_SPEED_FEATURES = type { i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i64, i32, [5 x i32], i32, i32, i32, i32, i32, i32, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32 }
%struct.MV_SPEED_FEATURES = type { i8, i32, i32, i8, i32, i8, i8, i8, i32, [4 x %struct.MESH_PATTERN], [4 x %struct.MESH_PATTERN], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.INTER_MODE_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.INTERP_FILTER_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32 }
%struct.INTRA_MODE_SPEED_FEATURES = type { [5 x i32], [5 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.TX_SPEED_FEATURES = type { i32, i32, i32, i32, i32, %struct.TX_TYPE_SEARCH, i32, i32, i32, i32, i32, i32, i32 }
%struct.TX_TYPE_SEARCH = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.RD_CALC_SPEED_FEATURES = type { i32, i32, i32, i8, i32, i32 }
%struct.WINNER_MODE_SPEED_FEATURES = type { i32, i32, i32, i32, i8, i32, i32 }
%struct.LOOP_FILTER_SPEED_FEATURES = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.REAL_TIME_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [16 x i32], i32 }
%struct.MotionVectorSearchParams = type { i32, i32, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, [3 x [7 x %struct.search_site_config]] }
%struct.search_site_config = type { [22 x [17 x %struct.search_site]], i32, [22 x i32], [22 x i32], i32 }
%struct.search_site = type { %struct.fullpel_mv, i32 }
%struct.EncSegmentationInfo = type { i8*, i8 }
%struct.CYCLIC_REFRESH = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i64, i16, double, i32, [3 x i32], double, i32 }
%struct.ActiveMap = type { i32, i32, i8* }
%struct.RefBufferStack = type { [16 x i32], i32, [16 x i32], i32, [16 x i32], i32 }
%struct.FRAME_INFO = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FRAME_INDEX_SET = type { i32 }
%struct.InitialDimensions = type { i32, i32 }
%struct.ResizePendingParams = type { i32, i32 }
%struct.TileDataEnc = type { %struct.TileInfo, [8 x i8], %struct.frame_contexts, %struct.frame_contexts*, i8, [22 x %struct.InterModeRdModel], %struct.AV1EncRowMultiThreadSync, %struct.mv }
%struct.InterModeRdModel = type { i32, double, double, double, double, double, double, double, i32, double, double, double, double, double }
%struct.AV1EncRowMultiThreadSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, i32, i32 }
%struct.TokenInfo = type { [64 x [64 x %struct.TokenExtra*]], [64 x [64 x %struct.TokenList*]] }
%struct.TokenExtra = type { i8 }
%struct.TokenList = type { %struct.TokenExtra*, i32 }
%struct.VarBasedPartitionInfo = type { [5 x i64], i64 }
%struct.FrameProbInfo = type { [7 x [22 x i32]], [7 x i32], [7 x [19 x [16 x i32]]], [7 x [16 x [3 x i32]]] }
%struct.MultiThreadInfo = type { i32, [10 x i32], i32, i32, %struct.AVxWorker*, %struct.EncWorkerData*, i8, %struct.AV1EncRowMultiThreadInfo, %struct.AV1TplRowMultiThreadInfo, %struct.AV1LfSyncData, %struct.AV1LrSyncData, %struct.AV1EncPackBSSync, %struct.AV1GlobalMotionSync, %struct.AV1TemporalFilterSync, %struct.AV1CdefSyncData, %struct.AV1CdefWorker* }
%struct.AVxWorker = type { %struct.AVxWorkerImpl*, i32, i8*, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.AVxWorkerImpl = type opaque
%struct.EncWorkerData = type opaque
%struct.AV1EncRowMultiThreadInfo = type { i32, i32, i32, i32, [64 x i32], %union.pthread_mutex_t*, void (%struct.AV1EncRowMultiThreadSync*, i32, i32)*, void (%struct.AV1EncRowMultiThreadSync*, i32, i32, i32)* }
%struct.AV1TplRowMultiThreadInfo = type { void (%struct.AV1TplRowMultiThreadSync*, i32, i32)*, void (%struct.AV1TplRowMultiThreadSync*, i32, i32, i32)* }
%struct.AV1LfSyncData = type { [3 x %union.pthread_mutex_t*], [3 x %union.pthread_cond_t*], [3 x i32*], i32, i32, %struct.LoopFilterWorkerData*, i32, %union.pthread_mutex_t*, %struct.AV1LfMTInfo*, i32, i32 }
%struct.LoopFilterWorkerData = type { %struct.yv12_buffer_config*, %struct.AV1Common*, [3 x %struct.macroblockd_plane], %struct.macroblockd* }
%struct.AV1LfMTInfo = type { i32, i32, i32 }
%struct.AV1LrSyncData = type { [3 x %union.pthread_mutex_t*], [3 x %union.pthread_cond_t*], [3 x i32*], i32, i32, i32, i32, %union.pthread_mutex_t*, %struct.LoopRestorationWorkerData*, %struct.AV1LrMTInfo*, i32, i32 }
%struct.LoopRestorationWorkerData = type { i32*, i8*, i8* }
%struct.AV1LrMTInfo = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.AV1EncPackBSSync = type { %union.pthread_mutex_t*, [512 x %struct.PackBSTileOrder], i32 }
%struct.PackBSTileOrder = type { i16, i32 }
%struct.AV1GlobalMotionSync = type { %struct.JobInfo, %struct.GlobalMotionThreadData*, %union.pthread_mutex_t*, i32, i32, i8 }
%struct.JobInfo = type { [64 x i8], [2 x i8], [2 x i8] }
%struct.GlobalMotionThreadData = type { [1 x %struct.MotionModel], i8* }
%struct.MotionModel = type { [8 x double], i32*, i32 }
%struct.AV1TemporalFilterSync = type { %union.pthread_mutex_t*, i32 }
%struct.AV1CdefSyncData = type { %union.pthread_mutex_t*, %struct.AV1CdefRowSync*, i32, i32, i32 }
%struct.AV1CdefRowSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32 }
%struct.AV1CdefWorker = type { %struct.AV1Common*, %struct.macroblockd*, [3 x i16*], i16*, [3 x i16*], void (%struct.AV1Common*, %struct.macroblockd*, %struct.CdefBlockInfo*, i16**, i16*, %struct.AV1CdefSyncData*, i32)* }
%struct.CdefBlockInfo = type { i16*, [3 x i16*], [3 x i16*], i8*, [256 x %struct.cdef_list], i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, i32, [16 x [16 x i32]], [16 x [16 x i32]], i32, i32, i32 }
%struct.cdef_list = type { i8, i8 }
%struct.AV1LrStruct = type { void (%struct.RestorationTileLimits*, %struct.AV1PixelRect*, i32, i8*, i32*, %struct.RestorationLineBuffers*)*, [3 x %struct.FilterFrameCtxt], %struct.yv12_buffer_config*, %struct.yv12_buffer_config* }
%struct.RestorationTileLimits = type { i32, i32, i32, i32 }
%struct.AV1PixelRect = type { i32, i32, i32, i32 }
%struct.FilterFrameCtxt = type { %struct.RestorationInfo*, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.AV1PixelRect }
%struct.aom_film_grain_table_t = type { %struct.aom_film_grain_table_entry_t*, %struct.aom_film_grain_table_entry_t* }
%struct.aom_film_grain_table_entry_t = type { %struct.aom_film_grain_t, i64, i64, %struct.aom_film_grain_table_entry_t* }
%struct.aom_denoise_and_model_t = type opaque
%struct.InterpSearchFlags = type { i32, i16 }
%struct.RefFrameDistanceInfo = type { [7 x i32], i8, i8 }
%struct.SVC = type { i32, i32, i32, i32, i32, i32, i32, i32, [7 x i32], [7 x i32], [8 x i32], double, i32, [8 x i32], [8 x i8], i32, i32, [8 x i32], [8 x i32], i32, i32, [32 x %struct.LAYER_CONTEXT], [4 x i8], [4 x i32], i32 }
%struct.LAYER_CONTEXT = type { %struct.RATE_CONTROL, %struct.PRIMARY_RATE_CONTROL, i32, i64, i32, i32, i64, i64, double, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i8, i8, i32, i32 }
%struct.MV_STATS = type { i32, i32, i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FirstPassData = type { %struct.FRAME_STATS*, i32* }
%struct.FRAME_STATS = type { i64, i64, i64, i64, i64, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, double, double }
%struct.noise_estimate = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.av1_denoiser = type { %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i32, i32 }

@good_quality_mesh_patterns = internal unnamed_addr constant [6 x [4 x %struct.MESH_PATTERN]] [[4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 8 }, %struct.MESH_PATTERN { i32 28, i32 4 }, %struct.MESH_PATTERN { i32 15, i32 1 }, %struct.MESH_PATTERN { i32 7, i32 1 }], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 8 }, %struct.MESH_PATTERN { i32 28, i32 4 }, %struct.MESH_PATTERN { i32 15, i32 1 }, %struct.MESH_PATTERN { i32 7, i32 1 }], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 8 }, %struct.MESH_PATTERN { i32 14, i32 2 }, %struct.MESH_PATTERN { i32 7, i32 1 }, %struct.MESH_PATTERN { i32 7, i32 1 }], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 16 }, %struct.MESH_PATTERN { i32 24, i32 8 }, %struct.MESH_PATTERN { i32 12, i32 4 }, %struct.MESH_PATTERN { i32 7, i32 1 }], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 16 }, %struct.MESH_PATTERN { i32 24, i32 8 }, %struct.MESH_PATTERN { i32 12, i32 4 }, %struct.MESH_PATTERN { i32 7, i32 1 }], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 16 }, %struct.MESH_PATTERN { i32 24, i32 8 }, %struct.MESH_PATTERN { i32 12, i32 4 }, %struct.MESH_PATTERN { i32 7, i32 1 }]], align 16
@intrabc_mesh_patterns = internal unnamed_addr constant [6 x [4 x %struct.MESH_PATTERN]] [[4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 256, i32 1 }, %struct.MESH_PATTERN { i32 256, i32 1 }, %struct.MESH_PATTERN zeroinitializer, %struct.MESH_PATTERN zeroinitializer], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 256, i32 1 }, %struct.MESH_PATTERN { i32 256, i32 1 }, %struct.MESH_PATTERN zeroinitializer, %struct.MESH_PATTERN zeroinitializer], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 1 }, %struct.MESH_PATTERN { i32 64, i32 1 }, %struct.MESH_PATTERN zeroinitializer, %struct.MESH_PATTERN zeroinitializer], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 1 }, %struct.MESH_PATTERN { i32 64, i32 1 }, %struct.MESH_PATTERN zeroinitializer, %struct.MESH_PATTERN zeroinitializer], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 4 }, %struct.MESH_PATTERN { i32 16, i32 1 }, %struct.MESH_PATTERN zeroinitializer, %struct.MESH_PATTERN zeroinitializer], [4 x %struct.MESH_PATTERN] [%struct.MESH_PATTERN { i32 64, i32 4 }, %struct.MESH_PATTERN { i32 16, i32 1 }, %struct.MESH_PATTERN zeroinitializer, %struct.MESH_PATTERN zeroinitializer]], align 16
@tx_domain_dist_thresholds = internal unnamed_addr constant [3 x [3 x i32]] [[3 x i32] [i32 -1, i32 -1, i32 -1], [3 x i32] [i32 22026, i32 22026, i32 22026], [3 x i32] zeroinitializer], align 16
@tx_domain_dist_types = internal unnamed_addr constant [3 x [3 x i32]] [[3 x i32] [i32 0, i32 2, i32 0], [3 x i32] [i32 1, i32 2, i32 0], [3 x i32] [i32 2, i32 2, i32 0]], align 16
@coeff_opt_thresholds = internal unnamed_addr constant [9 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 -1, i32 -1], [2 x i32] [i32 -1, i32 -1], [2 x i32] [i32 -1, i32 -1]], [3 x [2 x i32]] [[2 x i32] [i32 3200, i32 -1], [2 x i32] [i32 250, i32 -1], [2 x i32] [i32 -1, i32 -1]], [3 x [2 x i32]] [[2 x i32] [i32 1728, i32 -1], [2 x i32] [i32 142, i32 -1], [2 x i32] [i32 -1, i32 -1]], [3 x [2 x i32]] [[2 x i32] [i32 864, i32 -1], [2 x i32] [i32 142, i32 -1], [2 x i32] [i32 -1, i32 -1]], [3 x [2 x i32]] [[2 x i32] [i32 432, i32 -1], [2 x i32] [i32 86, i32 -1], [2 x i32] [i32 -1, i32 -1]], [3 x [2 x i32]] [[2 x i32] [i32 864, i32 97], [2 x i32] [i32 142, i32 16], [2 x i32] [i32 -1, i32 -1]], [3 x [2 x i32]] [[2 x i32] [i32 432, i32 97], [2 x i32] [i32 86, i32 16], [2 x i32] [i32 -1, i32 -1]], [3 x [2 x i32]] [[2 x i32] [i32 216, i32 25], [2 x i32] [i32 86, i32 10], [2 x i32] [i32 -1, i32 -1]], [3 x [2 x i32]] [[2 x i32] [i32 216, i32 25], [2 x i32] [i32 0, i32 10], [2 x i32] [i32 -1, i32 -1]]], align 16
@predict_skip_levels = internal unnamed_addr constant [3 x [3 x i32]] [[3 x i32] zeroinitializer, [3 x i32] [i32 1, i32 1, i32 1], [3 x i32] [i32 1, i32 2, i32 1]], align 16
@tx_size_search_methods = internal unnamed_addr constant [3 x [3 x i8]] [[3 x i8] c"\00\02\00", [3 x i8] c"\01\02\00", [3 x i8] c"\02\02\00"], align 1
@predict_dc_levels = internal unnamed_addr constant [3 x [3 x i32]] [[3 x i32] zeroinitializer, [3 x i32] [i32 1, i32 1, i32 0], [3 x i32] [i32 1, i32 1, i32 1]], align 16
@gm_available_reference_frames = internal unnamed_addr constant [4 x i32] [i32 7, i32 5, i32 4, i32 0], align 16
@ms_qindex_thresh = internal unnamed_addr constant [3 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 200, i32 70], [2 x i32] [i32 255, i32 200]], [2 x [2 x i32]] [[2 x i32] [i32 170, i32 50], [2 x i32] [i32 255, i32 200]], [2 x [2 x i32]] [[2 x i32] [i32 170, i32 40], [2 x i32] [i32 200, i32 40]]], align 16
@motion_search_method = internal unnamed_addr constant [2 x i8] c"\03\00", align 1
@switch.table.av1_set_speed_features_framesize_independent = private unnamed_addr constant [3 x i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*] [i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)* @av1_find_best_sub_pixel_tree, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)* @av1_find_best_sub_pixel_tree_pruned, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)* @av1_find_best_sub_pixel_tree_pruned_more], align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_set_speed_features_framesize_dependent(%struct.AV1_COMP*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 34
  %4 = load i8, i8* %3, align 8
  switch i8 %4, label %271 [
    i8 0, label %5
    i8 2, label %122
    i8 1, label %228
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 2
  %7 = load i32, i32* %6, align 16
  %8 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  %11 = select i1 %10, i32 %7, i32 %9
  %12 = icmp sgt i32 %11, 479
  %13 = icmp sgt i32 %11, 719
  %14 = icmp sgt i32 %11, 1079
  %15 = icmp sgt i32 %11, 2159
  %16 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 36
  %17 = load i8, i8* %16, align 2, !range !2
  %18 = icmp ne i8 %17, 0
  %19 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 7
  br i1 %12, label %20, label %24

20:                                               ; preds = %5
  store i8 15, i8* %19, align 8
  %21 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 8
  br i1 %13, label %22, label %23

22:                                               ; preds = %20
  store i8 3, i8* %21, align 1
  br label %28

23:                                               ; preds = %20
  store i8 2, i8* %21, align 1
  br label %28

24:                                               ; preds = %5
  store i8 12, i8* %19, align 8
  %25 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 8
  store i8 1, i8* %25, align 1
  br i1 %18, label %26, label %28

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 12
  store i32 1, i32* %27, align 4
  br label %28

28:                                               ; preds = %26, %24, %23, %22
  br i1 %15, label %29, label %31

29:                                               ; preds = %28
  %30 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 9
  store i8 3, i8* %30, align 2
  br label %31

31:                                               ; preds = %29, %28
  br i1 %13, label %46, label %32

32:                                               ; preds = %31
  %33 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 14, i64 0
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 200, i32 250, i32 300, i32 500>, <4 x i32>* %34, align 4
  %35 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 14, i64 4
  store i32 -1, i32* %35, align 4
  %36 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 5
  store i32 1, i32* %36, align 8
  %37 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 4, i32 10
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 4, i32 11
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %38, %40
  %42 = select i1 %41, i32 %38, i32 %40
  %43 = ashr i32 %42, 2
  %44 = add nsw i32 %43, 25
  %45 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 2
  store i32 %44, i32* %45, align 8
  br label %48

46:                                               ; preds = %31
  %47 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 16
  store i32 1, i32* %47, align 8
  br label %48

48:                                               ; preds = %46, %32
  %49 = icmp sgt i32 %1, 0
  br i1 %49, label %50, label %271

50:                                               ; preds = %48
  br i1 %13, label %56, label %51

51:                                               ; preds = %50
  %52 = select i1 %12, i8 12, i8 9
  store i8 %52, i8* %19, align 8
  %53 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 14, i64 0
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 200, i32 250, i32 300, i32 300>, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 14, i64 4
  store i32 -1, i32* %55, align 4
  br label %57

56:                                               ; preds = %50
  store i8 15, i8* %19, align 8
  br label %57

57:                                               ; preds = %56, %51
  %58 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 5
  store i32 2, i32* %58, align 8
  %59 = icmp sgt i32 %1, 1
  br i1 %59, label %60, label %271

60:                                               ; preds = %57
  %61 = select i1 %13, i8 12, i8 9
  store i8 %61, i8* %19, align 8
  %62 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 12
  %63 = select i1 %13, i64 16777216, i64 4194304
  %64 = select i1 %13, i32 120, i32 100
  store i64 %63, i64* %62, align 8
  %65 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 13
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 23
  %67 = select i1 %13, i32 16, i32 8
  store i32 %67, i32* %66, align 4
  br i1 %12, label %68, label %72

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 7
  store i32 1, i32* %69, align 4
  br i1 %18, label %70, label %75

70:                                               ; preds = %68
  %71 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 12
  store i32 2, i32* %71, align 4
  br label %75

72:                                               ; preds = %60
  br i1 %18, label %73, label %75

73:                                               ; preds = %72
  %74 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 12
  store i32 3, i32* %74, align 4
  br label %75

75:                                               ; preds = %73, %72, %70, %68
  br i1 %13, label %79, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 18
  store i32 1, i32* %77, align 8
  %78 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 2
  store i32 50, i32* %78, align 8
  br label %79

79:                                               ; preds = %76, %75
  %80 = icmp sgt i32 %1, 2
  br i1 %80, label %81, label %271

81:                                               ; preds = %79
  store i32 0, i32* %58, align 8
  br i1 %13, label %84, label %82

82:                                               ; preds = %81
  %83 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 21
  store i8 9, i8* %83, align 8
  br label %84

84:                                               ; preds = %82, %81
  %85 = phi i64 [ 8388608, %82 ], [ 33554432, %81 ]
  %86 = phi i32 [ 120, %82 ], [ 200, %81 ]
  store i64 %85, i64* %62, align 8
  store i32 %86, i32* %65, align 8
  br i1 %18, label %87, label %89

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 12
  store i32 3, i32* %88, align 4
  br label %89

89:                                               ; preds = %87, %84
  %90 = icmp sgt i32 %1, 3
  br i1 %90, label %91, label %271

91:                                               ; preds = %89
  %92 = select i1 %13, i64 67108864, i64 16777216
  store i64 %92, i64* %62, align 8
  br i1 %12, label %93, label %95

93:                                               ; preds = %91
  %94 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 7
  store i32 2, i32* %94, align 4
  br label %95

95:                                               ; preds = %93, %91
  store i32 2147483647, i32* %66, align 4
  %96 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 2
  %97 = select i1 %13, i32 32, i32 55
  store i32 %97, i32* %96, align 8
  %98 = icmp sgt i32 %1, 4
  br i1 %98, label %99, label %271

99:                                               ; preds = %95
  br i1 %13, label %103, label %100

100:                                              ; preds = %99
  br i1 %12, label %101, label %105

101:                                              ; preds = %100
  %102 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 24
  store i32 8, i32* %102, align 4
  br label %105

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 24
  store i32 16, i32* %104, align 4
  store i32 40, i32* %96, align 8
  br label %105

105:                                              ; preds = %103, %101, %100
  %106 = icmp sgt i32 %1, 5
  br i1 %106, label %107, label %271

107:                                              ; preds = %105
  br i1 %12, label %108, label %112

108:                                              ; preds = %107
  %109 = xor i1 %13, true
  %110 = zext i1 %109 to i8
  %111 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 8
  store i8 %110, i8* %111, align 1
  br label %112

112:                                              ; preds = %107, %108
  br i1 %14, label %113, label %115

113:                                              ; preds = %112
  %114 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 9
  store i8 3, i8* %114, align 2
  br label %115

115:                                              ; preds = %113, %112
  br i1 %13, label %116, label %119

116:                                              ; preds = %115
  %117 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 36
  store i32 1, i32* %117, align 4
  store i8 9, i8* %19, align 8
  %118 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 21
  store i32 2, i32* %118, align 4
  br label %271

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 31
  store i32 1, i32* %120, align 4
  store i8 6, i8* %19, align 8
  %121 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 21
  store i32 1, i32* %121, align 4
  br label %271

122:                                              ; preds = %2
  %123 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 2
  %124 = load i32, i32* %123, align 16
  %125 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 3
  %126 = load i32, i32* %125, align 4
  %127 = icmp slt i32 %124, %126
  %128 = select i1 %127, i32 %124, i32 %126
  %129 = icmp sgt i32 %128, 359
  %130 = icmp sgt i32 %128, 479
  %131 = icmp sgt i32 %128, 719
  %132 = icmp sgt i32 %128, 1079
  %133 = icmp sgt i32 %128, 2159
  %134 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 36
  %135 = load i8, i8* %134, align 2, !range !2
  %136 = icmp ne i8 %135, 0
  %137 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 7
  br i1 %130, label %138, label %142

138:                                              ; preds = %122
  store i8 15, i8* %137, align 8
  %139 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 8
  br i1 %131, label %140, label %141

140:                                              ; preds = %138
  store i8 3, i8* %139, align 1
  br label %146

141:                                              ; preds = %138
  store i8 2, i8* %139, align 1
  br label %146

142:                                              ; preds = %122
  store i8 12, i8* %137, align 8
  %143 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 8
  store i8 1, i8* %143, align 1
  br i1 %136, label %144, label %146

144:                                              ; preds = %142
  %145 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 12
  store i32 1, i32* %145, align 4
  br label %146

146:                                              ; preds = %144, %142, %141, %140
  br i1 %133, label %147, label %149

147:                                              ; preds = %146
  %148 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 9
  store i8 3, i8* %148, align 2
  br label %149

149:                                              ; preds = %147, %146
  br i1 %131, label %155, label %150

150:                                              ; preds = %149
  %151 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 14, i64 0
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 200, i32 250, i32 300, i32 500>, <4 x i32>* %152, align 4
  %153 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 14, i64 4
  store i32 -1, i32* %153, align 4
  %154 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 5
  br label %157

155:                                              ; preds = %149
  %156 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 16
  br label %157

157:                                              ; preds = %155, %150
  %158 = phi i32* [ %156, %155 ], [ %154, %150 ]
  store i32 1, i32* %158, align 8
  %159 = icmp sgt i32 %1, 0
  br i1 %159, label %160, label %271

160:                                              ; preds = %157
  br i1 %131, label %166, label %161

161:                                              ; preds = %160
  %162 = select i1 %130, i8 12, i8 9
  store i8 %162, i8* %137, align 8
  %163 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 14, i64 0
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 200, i32 250, i32 300, i32 300>, <4 x i32>* %164, align 4
  %165 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 14, i64 4
  store i32 -1, i32* %165, align 4
  br label %167

166:                                              ; preds = %160
  store i8 15, i8* %137, align 8
  br label %167

167:                                              ; preds = %166, %161
  %168 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 5
  store i32 2, i32* %168, align 8
  %169 = icmp sgt i32 %1, 1
  br i1 %169, label %170, label %271

170:                                              ; preds = %167
  %171 = select i1 %131, i8 12, i8 9
  store i8 %171, i8* %137, align 8
  %172 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 12
  %173 = select i1 %131, i64 16777216, i64 4194304
  %174 = select i1 %131, i32 120, i32 100
  store i64 %173, i64* %172, align 8
  %175 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 13
  store i32 %174, i32* %175, align 8
  br i1 %130, label %176, label %180

176:                                              ; preds = %170
  %177 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 7
  store i32 1, i32* %177, align 4
  br i1 %136, label %178, label %183

178:                                              ; preds = %176
  %179 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 12
  store i32 2, i32* %179, align 4
  br label %183

180:                                              ; preds = %170
  br i1 %136, label %181, label %183

181:                                              ; preds = %180
  %182 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 12
  store i32 3, i32* %182, align 4
  br label %183

183:                                              ; preds = %181, %180, %178, %176
  %184 = icmp sgt i32 %1, 2
  br i1 %184, label %185, label %271

185:                                              ; preds = %183
  store i32 0, i32* %168, align 8
  br i1 %131, label %188, label %186

186:                                              ; preds = %185
  %187 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 21
  store i8 9, i8* %187, align 8
  br label %188

188:                                              ; preds = %186, %185
  %189 = phi i64 [ 8388608, %186 ], [ 33554432, %185 ]
  %190 = phi i32 [ 120, %186 ], [ 200, %185 ]
  store i64 %189, i64* %172, align 8
  store i32 %190, i32* %175, align 8
  br i1 %136, label %191, label %193

191:                                              ; preds = %188
  %192 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 12
  store i32 3, i32* %192, align 4
  br label %193

193:                                              ; preds = %191, %188
  %194 = icmp sgt i32 %1, 3
  br i1 %194, label %195, label %271

195:                                              ; preds = %193
  %196 = select i1 %131, i64 67108864, i64 16777216
  store i64 %196, i64* %172, align 8
  br i1 %130, label %197, label %199

197:                                              ; preds = %195
  %198 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 7
  store i32 2, i32* %198, align 4
  br label %199

199:                                              ; preds = %197, %195
  %200 = icmp sgt i32 %1, 5
  br i1 %200, label %201, label %271

201:                                              ; preds = %199
  br i1 %130, label %202, label %206

202:                                              ; preds = %201
  %203 = xor i1 %131, true
  %204 = zext i1 %203 to i8
  %205 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 8
  store i8 %204, i8* %205, align 1
  br label %206

206:                                              ; preds = %201, %202
  br i1 %132, label %207, label %209

207:                                              ; preds = %206
  %208 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 9
  store i8 3, i8* %208, align 2
  br label %209

209:                                              ; preds = %207, %206
  store i8 6, i8* %137, align 8
  %210 = icmp sgt i32 %1, 6
  br i1 %210, label %211, label %271

211:                                              ; preds = %209
  br i1 %130, label %214, label %212

212:                                              ; preds = %211
  %213 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 3
  store i32 2, i32* %213, align 4
  br label %214

214:                                              ; preds = %212, %211
  br i1 %129, label %217, label %215

215:                                              ; preds = %214
  %216 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 15
  store i32 1, i32* %216, align 4
  br label %217

217:                                              ; preds = %215, %214
  %218 = icmp sgt i32 %1, 7
  br i1 %218, label %219, label %271

219:                                              ; preds = %217
  br i1 %129, label %220, label %224

220:                                              ; preds = %219
  %221 = icmp eq i32 %1, 8
  br i1 %221, label %222, label %271

222:                                              ; preds = %220
  %223 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 11
  store i32 0, i32* %223, align 4
  br label %271

224:                                              ; preds = %219
  %225 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 12
  %226 = icmp sgt i32 %1, 8
  %227 = zext i1 %226 to i32
  store i32 %227, i32* %225, align 8
  br label %271

228:                                              ; preds = %2
  %229 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 2
  %230 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 3
  %231 = load i32, i32* %229, align 16
  %232 = load i32, i32* %230, align 4
  %233 = icmp slt i32 %231, %232
  %234 = select i1 %233, i32 %231, i32 %232
  %235 = icmp sgt i32 %234, 479
  %236 = icmp sgt i32 %234, 359
  br i1 %236, label %248, label %237

237:                                              ; preds = %228
  %238 = icmp sgt i32 %1, 5
  br i1 %238, label %239, label %259

239:                                              ; preds = %237
  %240 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 15
  store i32 1, i32* %240, align 4
  %241 = icmp sgt i32 %1, 7
  br i1 %241, label %242, label %259

242:                                              ; preds = %239
  %243 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 12
  store i32 0, i32* %243, align 8
  %244 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 16
  store i32 0, i32* %244, align 8
  %245 = icmp eq i32 %1, 8
  br i1 %245, label %259, label %246

246:                                              ; preds = %242
  store i32 1, i32* %243, align 8
  %247 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 28
  store i32 1, i32* %247, align 4
  br label %259

248:                                              ; preds = %228
  %249 = icmp eq i32 %1, 8
  br i1 %249, label %250, label %259

250:                                              ; preds = %248
  %251 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %252 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %251, align 16
  %253 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %252, i64 0, i32 16
  %254 = load i32, i32* %253, align 8
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %250
  %257 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 11
  store i32 0, i32* %257, align 4
  %258 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 8
  store i32 1, i32* %258, align 8
  br label %259

259:                                              ; preds = %256, %250, %248, %246, %242, %239, %237
  br i1 %235, label %271, label %260

260:                                              ; preds = %259
  %261 = icmp eq i32 %1, 7
  br i1 %261, label %262, label %264

262:                                              ; preds = %260
  %263 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 3
  store i32 2, i32* %263, align 4
  br label %271

264:                                              ; preds = %260
  %265 = icmp sgt i32 %1, 7
  br i1 %265, label %266, label %271

266:                                              ; preds = %264
  %267 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 3
  store i8 0, i8* %267, align 4
  %268 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 2
  store i32 1, i32* %268, align 8
  %269 = icmp eq i32 %1, 8
  br i1 %269, label %271, label %270

270:                                              ; preds = %266
  store i8 1, i8* %267, align 4
  store i32 0, i32* %268, align 8
  br label %271

271:                                              ; preds = %270, %266, %264, %262, %259, %224, %222, %220, %217, %209, %199, %193, %183, %167, %157, %119, %116, %105, %95, %89, %79, %57, %48, %2
  %272 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %273 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %272, align 16
  %274 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %273, i64 0, i32 3
  %275 = load i32, i32* %274, align 8
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %287

277:                                              ; preds = %271
  %278 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 36
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 0
  %281 = zext i1 %280 to i8
  %282 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %283 = load %struct.SequenceHeader*, %struct.SequenceHeader** %282, align 16
  %284 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %283, i64 0, i32 18
  %285 = load i8, i8* %284, align 1
  %286 = and i8 %285, %281
  store i8 %286, i8* %284, align 1
  br label %287

287:                                              ; preds = %271, %277
  %288 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 16, i32 0
  %289 = load i32, i32* %288, align 4
  switch i32 %289, label %294 [
    i32 1, label %291
    i32 2, label %290
  ]

290:                                              ; preds = %287
  br label %291

291:                                              ; preds = %287, %290
  %292 = phi i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)* [ @av1_return_min_sub_pixel_mv, %290 ], [ @av1_return_max_sub_pixel_mv, %287 ]
  %293 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 2
  store i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)* %292, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %293, align 8
  br label %294

294:                                              ; preds = %291, %287
  %295 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 35
  %296 = load i8, i8* %295, align 1, !range !2
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %307, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 29
  %300 = load i32, i32* %299, align 8
  %301 = icmp sgt i32 %300, 1
  br i1 %301, label %302, label %307

302:                                              ; preds = %298
  %303 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 31
  %304 = load i32, i32* %303, align 4
  %305 = icmp ult i32 %304, 2
  br i1 %305, label %306, label %307

306:                                              ; preds = %302
  store i32 2, i32* %303, align 4
  br label %307

307:                                              ; preds = %294, %302, %306, %298
  ret void
}

declare i32 @av1_return_max_sub_pixel_mv(%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*) #1

declare i32 @av1_return_min_sub_pixel_mv(%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_set_speed_features_framesize_independent(%struct.AV1_COMP*, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34
  %4 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 1
  store i8 2, i8* %5, align 4
  %6 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 2
  store i32 25, i32* %6, align 4
  %7 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 3
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 5
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 6
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 0, i32 7
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 1, i32 0
  store i32 3, i32* %11, align 4
  %12 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 1, i32 1
  %13 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 6
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 5
  %15 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 21, i1 false)
  store i8 1, i8* %14, align 1
  %16 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 7
  %17 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 8
  %18 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 9
  %19 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 10
  %20 = bitcast i32* %16 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %20, align 4
  %21 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 3, i32 0
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 3, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 3, i32 2
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 0
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 6
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 7
  store i8 15, i8* %26, align 8
  %27 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 8
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 10
  store i8 15, i8* %28, align 1
  %29 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 9
  store i8 0, i8* %29, align 2
  %30 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 11
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 15
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 21
  store i8 15, i8* %32, align 8
  %33 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 1
  store i8 6, i8* %33, align 1
  %34 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 12
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 13
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 2
  %37 = getelementptr %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 14, i64 0
  %38 = bitcast i32* %37 to i8*
  %39 = bitcast i32* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 16, i1 false) #4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 -1, i64 20, i1 false) #4
  %40 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 16
  %41 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 22
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 23
  %43 = bitcast i32* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 20, i1 false) #4
  store i8 3, i8* %42, align 8
  %44 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 24
  %45 = bitcast i32* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 28, i1 false) #4
  %46 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 15
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 2
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 8
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 14
  %50 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 12
  %51 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 11
  %52 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 0
  store i8 1, i8* %52, align 4
  %53 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 6
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 5
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 4
  store i32 2, i32* %55, align 4
  %56 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 3
  store i8 0, i8* %56, align 4
  %57 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 7
  store i8 3, i8* %57, align 2
  %58 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 1
  store i32 0, i32* %58, align 4
  %59 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 13
  %60 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %60, align 4
  %61 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 16
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 17
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 18
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 16
  store i8 0, i8* %64, align 4
  %65 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 3
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 34
  %67 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 2
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 7
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 5
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 6
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 28
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 30
  store i8 0, i8* %72, align 4
  %73 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 12
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 31
  %75 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 32
  %76 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 33
  %77 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 3, i32 0, i32 0, i32 0>, <4 x i32>* %77, align 4
  %78 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 15
  store i32 0, i32* %78, align 4
  %79 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 8
  %80 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 0
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 17
  %82 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 14
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 29
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 13
  store i32 0, i32* %84, align 4
  %85 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 35
  %86 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 1
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 4
  store i32 0, i32* %87, align 4
  %88 = bitcast i32* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %88, i8 0, i64 16, i1 false) #4
  %89 = bitcast i32* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %89, i8 0, i64 44, i1 false) #4
  %90 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 9
  %91 = bitcast i32* %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 48, i1 false)
  store i32 3, i32* %90, align 4
  %92 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 2
  store i32 1, i32* %92, align 4
  %93 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 3
  store i32 0, i32* %93, align 4
  %94 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 4
  store i32 0, i32* %94, align 4
  %95 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 7
  store i32 0, i32* %95, align 4
  %96 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 0, i64 0
  %97 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 1, i64 0
  store i32 16383, i32* %97, align 4
  %98 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 1, i64 1
  store i32 16383, i32* %98, align 4
  %99 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 0, i64 2
  %100 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 1, i64 2
  store i32 16383, i32* %100, align 4
  %101 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 0, i64 3
  %102 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 8191, i32 8191, i32 8191, i32 8191>, <4 x i32>* %102, align 4
  %103 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 1, i64 3
  store i32 16383, i32* %103, align 4
  %104 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 0, i64 4
  store i32 8191, i32* %104, align 4
  %105 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 1, i64 4
  store i32 16383, i32* %105, align 4
  %106 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 5
  store i32 0, i32* %106, align 4
  %107 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 6
  store i32 0, i32* %107, align 4
  %108 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 8
  store i32 0, i32* %108, align 4
  %109 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 8, i32 10
  store i32 3, i32* %109, align 4
  %110 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9
  %111 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 8
  store i32 0, i32* %111, align 4
  %112 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 0
  %113 = bitcast %struct.TX_SPEED_FEATURES* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %113, i8 0, i64 20, i1 false) #4
  store i8 1, i8* %112, align 4
  %114 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 5
  store i32 8500, i32* %114, align 4
  %115 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 4
  %116 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 3
  %117 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 1
  %118 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 2
  %119 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 6
  %121 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 6
  %122 = bitcast i32* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %122, i8 0, i64 16, i1 false) #4
  store i32 1, i32* %121, align 4
  %123 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 7
  store i32 0, i32* %123, align 4
  %124 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 9
  %125 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 10
  %126 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 11
  %127 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 1, i32 0>, <4 x i32>* %127, align 4
  %128 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 2, i32 1
  %129 = load i32, i32* %128, align 4
  switch i32 %129, label %170 [
    i32 3, label %130
    i32 2, label %142
    i32 0, label %154
    i32 1, label %168
  ]

130:                                              ; preds = %2
  %131 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 4, i32 13
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %130
  %135 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 4, i32 12
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %139, label %138

138:                                              ; preds = %134, %130
  br label %139

139:                                              ; preds = %138, %134
  %140 = phi i8 [ 3, %138 ], [ 0, %134 ]
  %141 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 3
  store i8 %140, i8* %141, align 4
  br label %170

142:                                              ; preds = %2
  %143 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 4, i32 13
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 4, i32 12
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %151, label %150

150:                                              ; preds = %146, %142
  br label %151

151:                                              ; preds = %150, %146
  %152 = phi i8 [ 2, %150 ], [ 0, %146 ]
  %153 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 3
  store i8 %152, i8* %153, align 4
  br label %170

154:                                              ; preds = %2
  %155 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 4, i32 13
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 3
  br label %166

160:                                              ; preds = %154
  %161 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 4, i32 12
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 3
  br i1 %163, label %165, label %166

165:                                              ; preds = %160
  store i8 0, i8* %164, align 4
  br label %170

166:                                              ; preds = %160, %158
  %167 = phi i8* [ %159, %158 ], [ %164, %160 ]
  store i8 1, i8* %167, align 4
  br label %170

168:                                              ; preds = %2
  %169 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 3
  store i8 0, i8* %169, align 4
  br label %170

170:                                              ; preds = %2, %139, %151, %165, %166, %168
  %171 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 4
  store i32 1, i32* %171, align 4
  %172 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 0
  store i32 0, i32* %172, align 4
  %173 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 1
  store i32 0, i32* %173, align 4
  %174 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 2
  store i32 0, i32* %174, align 4
  %175 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 5
  %176 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 5
  %177 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 6
  %178 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 0
  %179 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 1
  %180 = bitcast i32* %179 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %180, i8 0, i64 36, i1 false) #4
  %181 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 5
  store i32 0, i32* %181, align 4
  %182 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 18
  store i32 0, i32* %182, align 4
  %183 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 15
  store i32 0, i32* %183, align 4
  %184 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 14
  %185 = bitcast i32* %175 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %185, i8 0, i64 21, i1 false)
  %186 = bitcast i32* %176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %186, i8 0, i64 9, i1 false)
  store i32 2147483647, i32* %184, align 4
  %187 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 17
  store i32 0, i32* %187, align 4
  %188 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 3
  store i32 0, i32* %188, align 4
  %189 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 4
  store i32 0, i32* %189, align 4
  %190 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 1
  store i32 0, i32* %190, align 4
  %191 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 34
  %192 = load i8, i8* %191, align 8
  switch i8 %192, label %193 [
    i8 0, label %196
    i8 2, label %353
    i8 1, label %450
  ]

193:                                              ; preds = %170
  %194 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %195 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %194, align 16
  br label %601

196:                                              ; preds = %170
  %197 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %198 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %197, align 16
  %199 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 46
  %200 = load i8, i8* %199, align 16
  %201 = zext i8 %200 to i64
  %202 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %198, i64 0, i32 6, i32 0, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 0, i32 0
  %205 = load i8, i8* %204, align 16
  %206 = and i8 %205, -3
  %207 = icmp eq i8 %206, 0
  %208 = or i8 %203, 1
  %209 = icmp eq i8 %208, 3
  %210 = or i1 %209, %207
  %211 = icmp eq i8 %203, 6
  %212 = or i1 %211, %210
  %213 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 3
  %214 = load i8, i8* %213, align 1, !range !2
  %215 = icmp ne i8 %214, 0
  %216 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 36
  %217 = load i8, i8* %216, align 2, !range !2
  %218 = icmp ne i8 %217, 0
  %219 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 11, i32 8
  %220 = load i8, i8* %219, align 8, !range !2
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %196
  store i8 0, i8* %7, align 4
  br label %223

223:                                              ; preds = %222, %196
  store i8 1, i8* %21, align 8
  store i32 1, i32* %25, align 4
  %224 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 4
  store i32 1, i32* %224, align 4
  store i32 1, i32* %36, align 4
  %225 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 3
  store i32 2, i32* %225, align 8
  %226 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 17
  store i32 1, i32* %226, align 8
  %227 = select i1 %218, i32 1, i32 3
  %228 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 27
  store i32 %227, i32* %228, align 8
  store i32 1, i32* %80, align 4
  store i32 1, i32* %66, align 4
  %229 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 18
  store i32 1, i32* %229, align 4
  store i32 1, i32* %81, align 4
  %230 = or i1 %215, %210
  %231 = select i1 %212, i32 1, i32 2
  %232 = select i1 %230, i32 0, i32 %231
  store i32 %232, i32* %70, align 4
  %233 = select i1 %210, i32 1, i32 2
  store i32 %233, i32* %67, align 4
  store i32 1, i32* %69, align 4
  store i8 1, i8* %72, align 4
  %234 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 0
  store i32 1, i32* %234, align 8
  store i32 1, i32* %93, align 4
  store i32 1, i32* %123, align 4
  %235 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 2
  store i32 1, i32* %235, align 4
  store i32 1, i32* %111, align 4
  store i32 1, i32* %116, align 4
  store i8 2, i8* %14, align 1
  %236 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 7
  store i32 0, i32* %236, align 4
  %237 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 10
  store i32 0, i32* %237, align 8
  %238 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %198, i64 0, i32 12, i32 12
  %239 = load i8, i8* %238, align 8
  %240 = icmp eq i8 %239, 1
  br i1 %240, label %247, label %241

241:                                              ; preds = %223
  %242 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 69
  %243 = load i32, i32* %242, align 8
  %244 = icmp eq i32 %243, 0
  %245 = select i1 %244, i32 33554432, i32 1048576
  %246 = select i1 %244, i32 67108864, i32 2097152
  br label %247

247:                                              ; preds = %241, %223
  %248 = phi i32 [ 1048576, %223 ], [ %245, %241 ]
  %249 = phi i32 [ 2097152, %223 ], [ %246, %241 ]
  store i32 %248, i32* %48, align 8
  store i32 1, i32* %175, align 4
  store i8 1, i8* %8, align 4
  %250 = icmp sgt i32 %1, 0
  br i1 %250, label %251, label %601

251:                                              ; preds = %247
  store i8 2, i8* %21, align 8
  %252 = xor i1 %210, true
  %253 = zext i1 %252 to i32
  store i32 %253, i32* %22, align 4
  store i32 1, i32* %41, align 4
  %254 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 19
  store i32 1, i32* %254, align 8
  %255 = select i1 %215, i32 1, i32 2
  %256 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 18
  store i32 %255, i32* %256, align 4
  %257 = select i1 %218, i32 2, i32 3
  store i32 %257, i32* %228, align 8
  store i32 %249, i32* %48, align 8
  store i32 1, i32* %49, align 8
  store i8 2, i8* %57, align 2
  store i32 1, i32* %62, align 4
  %258 = select i1 %210, i32 2, i32 1
  store i32 %258, i32* %78, align 4
  store i32 1, i32* %82, align 4
  store i32 %253, i32* %84, align 4
  %259 = or i1 %215, %207
  %260 = select i1 %259, i32 0, i32 %233
  store i32 %260, i32* %70, align 4
  %261 = select i1 %210, i32 1, i32 3
  store i32 %261, i32* %67, align 4
  store i32 1, i32* %73, align 4
  store i32 2, i32* %69, align 4
  store i32 1, i32* %79, align 4
  %262 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 2
  store i32 1, i32* %262, align 8
  store i32 1, i32* %95, align 4
  store i32 2, i32* %123, align 4
  %263 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 1
  store i32 1, i32* %263, align 4
  %264 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 0
  store i32 1, i32* %264, align 4
  %265 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 3
  store i32 1, i32* %265, align 4
  store i32 0, i32* %111, align 4
  store i32 4000, i32* %114, align 4
  store i8 2, i8* %112, align 4
  store i32 1, i32* %120, align 4
  %266 = select i1 %210, i32 2, i32 3
  store i32 %266, i32* %175, align 4
  store i32 %233, i32* %173, align 4
  store i32 1, i32* %174, align 4
  %267 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 2
  store i32 1, i32* %267, align 8
  %268 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 3
  store i32 1, i32* %268, align 4
  %269 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 4
  store i32 1, i32* %269, align 8
  %270 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 3
  store i32 1, i32* %270, align 4
  %271 = icmp eq i32 %1, 1
  br i1 %271, label %601, label %272

272:                                              ; preds = %251
  store i8 1, i8* %5, align 4
  store i32 25, i32* %12, align 4
  store i32 1, i32* %31, align 8
  %273 = icmp ne i8 %206, 0
  %274 = zext i1 %273 to i32
  %275 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 30
  store i32 %274, i32* %275, align 4
  store i32 1, i32* %47, align 8
  store i8 1, i8* %53, align 1
  store i32 1, i32* %55, align 8
  store i32 1, i32* %65, align 4
  store i8 22, i8* %64, align 4
  %276 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 25
  store i32 100, i32* %276, align 4
  %277 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 26
  store i32 100, i32* %277, align 4
  %278 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 27
  store i32 1, i32* %278, align 4
  %279 = select i1 %210, i32 4, i32 1
  store i32 %279, i32* %78, align 4
  %280 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 19
  store i32 1, i32* %280, align 4
  %281 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 20
  store i32 2, i32* %281, align 4
  store i32 2, i32* %82, align 4
  store i32 3, i32* %69, align 4
  store i8 2, i8* %72, align 4
  %282 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 37
  store i32 1, i32* %282, align 4
  %283 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 38
  store i32 1, i32* %283, align 4
  store i32 %253, i32* %86, align 4
  %284 = xor i1 %212, true
  %285 = zext i1 %284 to i32
  store i32 %285, i32* %83, align 4
  %286 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 40
  store i32 %253, i32* %286, align 4
  %287 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 5
  store i32 1, i32* %287, align 4
  %288 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 1
  store i32 1, i32* %288, align 4
  br i1 %207, label %289, label %294

289:                                              ; preds = %272
  %290 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 36, i32 14
  %291 = load i32, i32* %290, align 16
  %292 = icmp sgt i32 %291, 1
  %293 = zext i1 %292 to i32
  br label %294

294:                                              ; preds = %289, %272
  %295 = phi i32 [ 1, %272 ], [ %293, %289 ]
  store i32 %295, i32* %106, align 4
  store i32 2, i32* %93, align 4
  store i32 1, i32* %13, align 4
  store i8 0, i8* %14, align 1
  %296 = select i1 %212, i32 3, i32 4
  store i32 %296, i32* %175, align 4
  %297 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 6
  store i32 1, i32* %297, align 8
  %298 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 7
  store i32 1, i32* %298, align 4
  store i32 0, i32* %18, align 8
  store i32 1, i32* %17, align 4
  %299 = icmp sgt i32 %1, 2
  br i1 %299, label %300, label %601

300:                                              ; preds = %294
  store i8 1, i8* %7, align 4
  store i8 3, i8* %21, align 8
  store i32 2, i32* %25, align 4
  store i32 1, i32* %40, align 4
  store i32 1, i32* %44, align 4
  %301 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 29
  store i32 1, i32* %301, align 8
  store i32 1, i32* %46, align 4
  store i8 1, i8* %56, align 4
  store i8 0, i8* %52, align 8
  store i32 2, i32* %63, align 8
  store i32 %253, i32* %83, align 4
  store i32 2, i32* %74, align 4
  %302 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 22
  store i32 1, i32* %302, align 4
  store i32 -1, i32* %276, align 4
  %303 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 11
  store i32 1, i32* %303, align 4
  store i32 %253, i32* %75, align 4
  %304 = select i1 %210, i32 4, i32 2
  store i32 %304, i32* %78, align 4
  store i32 5, i32* %69, align 4
  %305 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 10
  store i32 1, i32* %305, align 4
  %306 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 9
  store i32 1, i32* %306, align 4
  store i32 1, i32* %85, align 4
  %307 = select i1 %210, i32 0, i32 %231
  store i32 %307, i32* %86, align 4
  %308 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 39
  store i32 1, i32* %308, align 4
  %309 = select i1 %210, i32 0, i32 2
  store i32 %309, i32* %286, align 4
  store i32 2, i32* %287, align 4
  store i32 2, i32* %94, align 8
  store i32 3, i32* %93, align 4
  store i32 2, i32* %95, align 4
  store i32 2, i32* %270, align 4
  %310 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 1
  store i32 1, i32* %310, align 4
  %311 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 2
  store i32 6, i32* %311, align 8
  %312 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 4
  store i8 1, i8* %312, align 8
  store i32 %266, i32* %123, align 4
  store i32 2, i32* %115, align 4
  store i32 1, i32* %124, align 4
  %313 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 0
  store i32 1, i32* %313, align 4
  %314 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 1
  store i32 %274, i32* %314, align 4
  %315 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 3
  store i32 1, i32* %315, align 4
  br i1 %210, label %320, label %316

316:                                              ; preds = %300
  %317 = load i8, i8* %202, align 1
  %318 = icmp eq i8 %317, 6
  %319 = select i1 %318, i32 1, i32 2
  br label %320

320:                                              ; preds = %316, %300
  %321 = phi i32 [ %319, %316 ], [ 0, %300 ]
  store i32 %321, i32* %176, align 4
  store i32 %255, i32* %298, align 4
  %322 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 5
  store i32 %253, i32* %322, align 4
  %323 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 8
  store i32 %253, i32* %323, align 8
  store i32 2, i32* %297, align 8
  %324 = icmp sgt i32 %1, 3
  br i1 %324, label %325, label %601

325:                                              ; preds = %320
  store i32 1, i32* %23, align 8
  store i8 2, i8* %56, align 4
  store i32 2, i32* %40, align 4
  %326 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 20
  store i32 4, i32* %326, align 4
  store i32 2, i32* %44, align 4
  %327 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 26
  store i32 1, i32* %327, align 4
  store i32 3, i32* %228, align 8
  store i32 1, i32* %68, align 4
  %328 = select i1 %210, i32 0, i32 3
  store i32 %328, i32* %86, align 4
  store i32 %309, i32* %75, align 4
  store i32 2, i32* %280, align 4
  %329 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 23
  store i32 2147483647, i32* %329, align 4
  %330 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 4
  store i32 1, i32* %330, align 8
  %331 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 3
  store i32 1, i32* %331, align 4
  store i32 2, i32* %262, align 8
  store i32 8199, i32* %100, align 4
  store i32 8199, i32* %103, align 4
  store i32 8199, i32* %105, align 4
  store i32 7, i32* %99, align 8
  store i32 7, i32* %101, align 4
  store i32 7, i32* %104, align 8
  store i32 2, i32* %92, align 8
  store i8 2, i8* %53, align 1
  store i32 2, i32* %13, align 4
  store i8 2, i8* %312, align 8
  store i8 9, i8* %14, align 1
  %332 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 0
  store i32 1, i32* %332, align 8
  %333 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 9
  store i32 1, i32* %333, align 4
  store i32 1, i32* %117, align 4
  store i8 3, i8* %112, align 4
  %334 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 8
  store i32 1, i32* %334, align 4
  store i32 0, i32* %124, align 4
  %335 = select i1 %212, i32 5, i32 7
  store i32 %335, i32* %175, align 4
  store i32 2, i32* %174, align 4
  %336 = select i1 %207, i8 2, i8 0
  %337 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 4
  store i8 %336, i8* %337, align 4
  store i32 1, i32* %314, align 4
  store i8 1, i8* %178, align 8
  store i32 3, i32* %267, align 8
  store i32 1, i32* %51, align 4
  %338 = icmp eq i32 %1, 4
  br i1 %338, label %601, label %339

339:                                              ; preds = %325
  store i32 4, i32* %11, align 8
  store i32 3, i32* %40, align 4
  %340 = select i1 %215, i8 3, i8 6
  store i8 %340, i8* %42, align 8
  store i32 -1, i32* %277, align 4
  store i32 1, i32* %87, align 4
  %341 = select i1 %210, i32 0, i32 4
  store i32 %341, i32* %86, align 4
  store i32 2, i32* %282, align 4
  store i32 3, i32* %94, align 8
  %342 = zext i1 %207 to i8
  store i8 %342, i8* %337, align 4
  store i32 %274, i32* %179, align 4
  %343 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 9
  store i32 1, i32* %343, align 4
  store i32 1, i32* %50, align 8
  store i32 3, i32* %13, align 4
  store i32 1, i32* %19, align 4
  store i8 3, i8* %312, align 8
  store i32 2, i32* %332, align 8
  store i32 1, i32* %177, align 4
  %344 = icmp sgt i32 %1, 5
  br i1 %344, label %345, label %601

345:                                              ; preds = %339
  store i32 1, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 55, i32* %6, align 8
  store i32 %328, i32* %75, align 4
  store i32 1, i32* %76, align 4
  store i32 6, i32* %69, align 4
  store i32 4, i32* %94, align 8
  store i32 4, i32* %93, align 4
  store i32 1, i32* %103, align 4
  store i32 1, i32* %105, align 4
  store i32 1, i32* %101, align 4
  store i32 1, i32* %104, align 8
  %346 = xor i1 %230, true
  %347 = zext i1 %346 to i32
  %348 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 25
  store i32 %347, i32* %348, align 8
  %349 = select i1 %207, i32 1, i32 2
  %350 = select i1 %215, i32 0, i32 %349
  %351 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 28
  store i32 %350, i32* %351, align 4
  store i8 15, i8* %42, align 8
  store i8 3, i8* %53, align 1
  store i32 1, i32* %58, align 4
  store i32 3, i32* %332, align 8
  store i32 1, i32* %16, align 8
  store i32 2, i32* %333, align 4
  store i32 1, i32* %124, align 4
  store i32 0, i32* %334, align 4
  %352 = select i1 %212, i32 6, i32 8
  store i32 %352, i32* %175, align 4
  store i32 2, i32* %177, align 4
  store i8 0, i8* %337, align 4
  store i32 4, i32* %267, align 8
  br label %601

353:                                              ; preds = %170
  %354 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 3
  %355 = load i8, i8* %354, align 1, !range !2
  %356 = icmp ne i8 %355, 0
  %357 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 36
  %358 = load i8, i8* %357, align 2, !range !2
  %359 = icmp ne i8 %358, 0
  store i32 1, i32* %25, align 4
  %360 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 4
  store i32 1, i32* %360, align 4
  store i32 1, i32* %36, align 4
  %361 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 3
  store i32 2, i32* %361, align 8
  %362 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 17
  store i32 1, i32* %362, align 8
  %363 = select i1 %359, i32 1, i32 3
  %364 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 27
  store i32 %363, i32* %364, align 8
  store i32 1, i32* %93, align 4
  store i32 0, i32* %90, align 4
  store i32 1, i32* %123, align 4
  %365 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 2
  store i32 1, i32* %365, align 4
  store i32 1, i32* %111, align 4
  store i32 1, i32* %116, align 4
  %366 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 7
  store i32 0, i32* %366, align 4
  %367 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 10
  store i32 0, i32* %367, align 8
  %368 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %369 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %368, align 16
  %370 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %369, i64 0, i32 12, i32 12
  %371 = load i8, i8* %370, align 8
  %372 = icmp eq i8 %371, 1
  br i1 %372, label %379, label %373

373:                                              ; preds = %353
  %374 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 69
  %375 = load i32, i32* %374, align 8
  %376 = icmp eq i32 %375, 0
  %377 = select i1 %376, i32 33554432, i32 1048576
  %378 = select i1 %376, i32 67108864, i32 2097152
  br label %379

379:                                              ; preds = %373, %353
  %380 = phi i32 [ 1048576, %353 ], [ %377, %373 ]
  %381 = phi i32 [ 2097152, %353 ], [ %378, %373 ]
  store i32 %380, i32* %48, align 8
  store i32 1, i32* %175, align 4
  store i8 1, i8* %8, align 4
  %382 = icmp sgt i32 %1, 0
  br i1 %382, label %383, label %601

383:                                              ; preds = %379
  store i32 1, i32* %41, align 4
  %384 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 19
  store i32 1, i32* %384, align 8
  %385 = select i1 %356, i32 1, i32 2
  %386 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 18
  store i32 %385, i32* %386, align 4
  %387 = select i1 %359, i32 2, i32 3
  store i32 %387, i32* %364, align 8
  %388 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 30
  store i32 1, i32* %388, align 4
  store i32 %381, i32* %48, align 8
  store i32 1, i32* %95, align 4
  store i32 2, i32* %123, align 4
  %389 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 1
  store i32 1, i32* %389, align 4
  %390 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 0
  store i32 1, i32* %390, align 4
  %391 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 3
  store i32 1, i32* %391, align 4
  store i32 0, i32* %111, align 4
  store i32 4000, i32* %114, align 4
  store i8 2, i8* %112, align 4
  store i32 1, i32* %120, align 4
  store i32 2, i32* %175, align 4
  store i32 1, i32* %173, align 4
  store i32 1, i32* %174, align 4
  %392 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 2
  store i32 1, i32* %392, align 8
  %393 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 3
  store i32 1, i32* %393, align 4
  %394 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 4
  store i32 1, i32* %394, align 8
  %395 = icmp eq i32 %1, 1
  br i1 %395, label %601, label %396

396:                                              ; preds = %383
  store i32 1, i32* %31, align 8
  store i32 1, i32* %47, align 8
  store i32 1, i32* %106, align 4
  store i32 2, i32* %93, align 4
  store i32 1, i32* %107, align 8
  store i32 3, i32* %175, align 4
  %397 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 6
  store i32 1, i32* %397, align 8
  %398 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 7
  store i32 1, i32* %398, align 4
  %399 = icmp sgt i32 %1, 2
  br i1 %399, label %400, label %601

400:                                              ; preds = %396
  store i8 1, i8* %7, align 4
  store i8 1, i8* %5, align 4
  store i32 2, i32* %25, align 4
  store i32 1, i32* %40, align 4
  store i32 1, i32* %44, align 4
  store i32 1, i32* %46, align 4
  store i8 0, i8* %52, align 8
  store i32 2, i32* %94, align 8
  store i32 3, i32* %93, align 4
  store i32 2, i32* %95, align 4
  store i32 2, i32* %123, align 4
  store i32 2, i32* %115, align 4
  store i32 %385, i32* %398, align 4
  %401 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 5
  store i32 0, i32* %401, align 4
  %402 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 8
  store i32 1, i32* %402, align 8
  store i32 2, i32* %397, align 8
  %403 = icmp eq i32 %1, 3
  br i1 %403, label %601, label %404

404:                                              ; preds = %400
  store i8 2, i8* %56, align 4
  store i32 2, i32* %40, align 4
  %405 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 20
  store i32 4, i32* %405, align 4
  store i32 2, i32* %44, align 4
  %406 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 26
  store i32 1, i32* %406, align 4
  store i32 3, i32* %364, align 8
  store i32 8199, i32* %100, align 4
  store i32 8199, i32* %103, align 4
  store i32 8199, i32* %105, align 4
  store i32 7, i32* %99, align 8
  store i32 7, i32* %101, align 4
  store i32 7, i32* %104, align 8
  store i32 1, i32* %108, align 8
  store i8 2, i8* %53, align 1
  store i32 2, i32* %13, align 4
  %407 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 4
  store i8 2, i8* %407, align 8
  store i8 9, i8* %14, align 1
  %408 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 9
  store i32 1, i32* %408, align 4
  store i32 1, i32* %117, align 4
  store i8 3, i8* %112, align 4
  %409 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 8
  store i32 1, i32* %409, align 4
  store i32 5, i32* %175, align 4
  store i32 2, i32* %174, align 4
  store i8 1, i8* %178, align 8
  store i32 3, i32* %392, align 8
  store i32 1, i32* %51, align 4
  %410 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 0
  store i32 1, i32* %410, align 4
  %411 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 3
  store i32 1, i32* %411, align 4
  %412 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 4
  store i8 2, i8* %412, align 4
  %413 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 1
  store i32 1, i32* %413, align 4
  %414 = icmp sgt i32 %1, 4
  br i1 %414, label %415, label %601

415:                                              ; preds = %404
  store i32 3, i32* %40, align 4
  %416 = select i1 %356, i8 3, i8 6
  store i8 %416, i8* %42, align 8
  store i32 3, i32* %94, align 8
  store i32 0, i32* %179, align 4
  %417 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 9
  store i32 1, i32* %417, align 4
  store i32 1, i32* %50, align 8
  store i8 1, i8* %412, align 4
  %418 = icmp eq i32 %1, 5
  br i1 %418, label %601, label %419

419:                                              ; preds = %415
  store i32 2, i32* %107, align 8
  store i32 4, i32* %94, align 8
  store i32 4, i32* %93, align 4
  store i32 1, i32* %109, align 8
  %420 = xor i1 %356, true
  %421 = zext i1 %420 to i32
  %422 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 25
  store i32 %421, i32* %422, align 8
  %423 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 28
  store i32 %421, i32* %423, align 4
  store i32 3, i32* %361, align 8
  store i8 9, i8* %28, align 1
  store i32 1, i32* %58, align 4
  store i32 2, i32* %408, align 4
  store i32 0, i32* %409, align 4
  store i32 2, i32* %365, align 4
  store i32 2, i32* %116, align 4
  store i32 6, i32* %175, align 4
  store i32 4, i32* %392, align 8
  store i8 3, i8* %178, align 8
  store i8 0, i8* %412, align 4
  %424 = icmp sgt i32 %1, 6
  br i1 %424, label %425, label %601

425:                                              ; preds = %419
  store i8 3, i8* %29, align 2
  store i8 2, i8* %24, align 8
  store i32 5, i32* %392, align 8
  store i32 16, i32* %181, align 4
  store i32 1, i32* %366, align 4
  store i32 1, i32* %188, align 4
  store i32 0, i32* %189, align 8
  store i32 1, i32* %190, align 4
  %426 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 0
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> <i32 7, i32 7, i32 7, i32 7>, <4 x i32>* %427, align 4
  %428 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 4
  %429 = bitcast i32* %428 to <4 x i32>*
  store <4 x i32> <i32 7, i32 7, i32 7, i32 7>, <4 x i32>* %429, align 4
  %430 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 8
  %431 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> <i32 7, i32 1, i32 1, i32 1>, <4 x i32>* %431, align 4
  %432 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 12
  %433 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 13
  %434 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 14
  %435 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 15
  %436 = bitcast i32* %432 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %436, align 4
  %437 = icmp eq i32 %1, 7
  br i1 %437, label %601, label %438

438:                                              ; preds = %425
  store i32 2, i32* %365, align 4
  store i32 1, i32* %93, align 4
  %439 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 11
  store i32 1, i32* %439, align 4
  %440 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 12
  store i32 1, i32* %440, align 8
  %441 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 20
  store i32 1, i32* %441, align 8
  %442 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %442, align 4
  %443 = icmp eq i32 %1, 8
  br i1 %443, label %601, label %444

444:                                              ; preds = %438
  %445 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 2
  store i32 0, i32* %445, align 8
  %446 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 23
  store i32 1, i32* %446, align 4
  %447 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %447, align 4
  %448 = bitcast i32* %428 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %448, align 4
  %449 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %449, align 4
  store i32 1, i32* %432, align 4
  store i32 1, i32* %433, align 4
  store i32 1, i32* %434, align 4
  store i32 1, i32* %435, align 4
  br label %601

450:                                              ; preds = %170
  %451 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %452 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %451, align 16
  %453 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 46
  %454 = load i8, i8* %453, align 16
  %455 = zext i8 %454 to i64
  %456 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %452, i64 0, i32 6, i32 0, i64 %455
  %457 = load i8, i8* %456, align 1
  %458 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 0, i32 0
  %459 = load i8, i8* %458, align 16
  %460 = and i8 %459, -3
  %461 = icmp eq i8 %460, 0
  %462 = or i8 %457, 1
  %463 = icmp eq i8 %462, 3
  %464 = or i1 %463, %461
  store i8 1, i8* %21, align 8
  store i32 1, i32* %25, align 4
  %465 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 4
  store i32 1, i32* %465, align 4
  store i32 1, i32* %36, align 4
  store i32 0, i32* %80, align 4
  %466 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 25
  store i32 0, i32* %466, align 4
  %467 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 26
  store i32 0, i32* %467, align 4
  store i32 1, i32* %66, align 4
  %468 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 18
  store i32 0, i32* %468, align 4
  store i32 1, i32* %81, align 4
  %469 = xor i1 %464, true
  %470 = zext i1 %469 to i32
  store i32 %470, i32* %70, align 4
  store i32 1, i32* %67, align 4
  store i32 1, i32* %69, align 4
  store i8 1, i8* %72, align 4
  %471 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 0
  store i32 1, i32* %471, align 8
  store i32 0, i32* %90, align 4
  store i32 1, i32* %93, align 4
  store i32 1, i32* %46, align 4
  store i32 2147483647, i32* %48, align 8
  %472 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 0
  store i32 1, i32* %472, align 8
  %473 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 2
  store i32 1, i32* %473, align 8
  %474 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 19
  store i32 1, i32* %474, align 4
  %475 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 6
  store i32 0, i32* %475, align 8
  %476 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 13
  store i32 0, i32* %476, align 4
  %477 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 9
  store i32 1, i32* %477, align 4
  %478 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 16
  store i32 1, i32* %478, align 8
  %479 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 7
  store i32 0, i32* %479, align 4
  %480 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 10
  store i32 0, i32* %480, align 8
  %481 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 22
  store i32 0, i32* %481, align 8
  %482 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 21
  store i8 0, i8* %482, align 4
  store i32 1, i32* %123, align 4
  %483 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 2
  store i32 1, i32* %483, align 4
  store i32 1, i32* %111, align 4
  store i32 1, i32* %116, align 4
  %484 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 25
  store i32 0, i32* %484, align 4
  %485 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 26
  store i32 0, i32* %485, align 8
  store i8 2, i8* %8, align 4
  %486 = icmp sgt i32 %1, 0
  br i1 %486, label %487, label %601

487:                                              ; preds = %450
  store i8 2, i8* %21, align 8
  store i32 2, i32* %36, align 4
  %488 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 17
  store i32 1, i32* %488, align 8
  store i32 1, i32* %49, align 8
  store i8 2, i8* %57, align 2
  store i32 1, i32* %78, align 4
  store i32 1, i32* %73, align 4
  store i32 2, i32* %69, align 4
  store i32 1, i32* %79, align 4
  store i32 0, i32* %466, align 4
  store i32 0, i32* %467, align 4
  store i32 1, i32* %82, align 4
  %489 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 4
  store i32 1, i32* %489, align 8
  %490 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 2
  store i32 1, i32* %490, align 8
  store i32 2, i32* %123, align 4
  %491 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 3
  store i32 1, i32* %491, align 4
  %492 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 4
  store i32 1, i32* %492, align 4
  store i32 4000, i32* %114, align 4
  store i32 1, i32* %120, align 4
  store i32 1, i32* %124, align 4
  store i32 %470, i32* %173, align 4
  store i32 1, i32* %174, align 4
  %493 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 3
  store i32 1, i32* %493, align 4
  %494 = icmp eq i32 %1, 1
  br i1 %494, label %601, label %495

495:                                              ; preds = %487
  store i32 1, i32* %31, align 8
  store i32 80, i32* %35, align 8
  store i32 1, i32* %47, align 8
  store i32 1, i32* %55, align 8
  store i32 1, i32* %65, align 4
  store i8 22, i8* %64, align 4
  store i32 100, i32* %466, align 4
  store i32 100, i32* %467, align 4
  store i32 1, i32* %71, align 4
  store i32 2, i32* %82, align 4
  store i32 3, i32* %69, align 4
  store i8 2, i8* %72, align 4
  %496 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 5
  store i32 1, i32* %496, align 4
  store i32 0, i32* %489, align 8
  %497 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 1
  store i32 1, i32* %497, align 4
  %498 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 1
  store i32 1, i32* %498, align 4
  %499 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 0
  store i32 1, i32* %499, align 4
  store i32 0, i32* %111, align 4
  %500 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 2
  store i32 1, i32* %500, align 8
  %501 = icmp sgt i32 %1, 2
  br i1 %501, label %502, label %601

502:                                              ; preds = %495
  store i8 1, i8* %5, align 4
  store i8 3, i8* %21, align 8
  store i32 2, i32* %25, align 4
  store i8 1, i8* %57, align 2
  store i32 2, i32* %65, align 4
  store i32 2, i32* %74, align 4
  store i32 -1, i32* %466, align 4
  store i32 2, i32* %78, align 4
  store i32 4, i32* %69, align 4
  store i8 2, i8* %112, align 4
  store i32 1, i32* %173, align 4
  %503 = select i1 %464, i32 0, i32 2
  %504 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 2
  store i32 %503, i32* %504, align 4
  %505 = icmp eq i32 %1, 3
  br i1 %505, label %601, label %506

506:                                              ; preds = %502
  store i8 1, i8* %56, align 4
  store i32 1, i32* %68, align 4
  %507 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 3
  store i32 1, i32* %507, align 4
  store i32 1, i32* %118, align 4
  store i32 1, i32* %117, align 4
  store i32 0, i32* %124, align 4
  store i32 0, i32* %171, align 4
  %508 = select i1 %461, i32 0, i32 2
  store i32 %508, i32* %504, align 4
  %509 = icmp sgt i32 %1, 4
  br i1 %509, label %510, label %601

510:                                              ; preds = %506
  store i32 4, i32* %65, align 4
  store i32 2, i32* %173, align 4
  store i32 2, i32* %174, align 4
  store i32 1, i32* %504, align 4
  %511 = icmp eq i8 %459, 0
  store i32 0, i32* %4, align 8
  store i8 15, i8* %28, align 1
  store i8 3, i8* %29, align 2
  store i8 9, i8* %32, align 8
  store i32 500, i32* %35, align 8
  store i8 2, i8* %24, align 8
  store i32 2, i32* %30, align 4
  store i8 8, i8* %52, align 8
  store i8 1, i8* %54, align 4
  store i32 1, i32* %59, align 4
  store i8 2, i8* %56, align 4
  store i32 2, i32* %80, align 4
  %512 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %512, align 4
  store i32 8193, i32* %103, align 4
  %513 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> <i32 1, i32 8193, i32 8193, i32 8193>, <4 x i32>* %513, align 4
  store i32 8193, i32* %105, align 4
  store i8 3, i8* %112, align 4
  store i32 0, i32* %125, align 4
  store i32 0, i32* %126, align 4
  %514 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 3
  store i8 0, i8* %514, align 4
  store i32 1, i32* %172, align 4
  store i32 4, i32* %500, align 8
  store i8 3, i8* %178, align 8
  %515 = select i1 %511, i32 16, i32 59
  store i32 %515, i32* %181, align 4
  store i32 5, i32* %184, align 8
  store i32 1, i32* %182, align 8
  store i32 0, i32* %477, align 4
  store i32 1, i32* %480, align 8
  store i32 1, i32* %187, align 4
  store i32 1, i32* %481, align 8
  br i1 %511, label %521, label %516

516:                                              ; preds = %510
  %517 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 4, i32 15
  %518 = load i32, i32* %517, align 4
  %519 = icmp eq i32 %518, 1
  br i1 %519, label %520, label %521

520:                                              ; preds = %516
  store i8 1, i8* %482, align 4
  br label %521

521:                                              ; preds = %520, %516, %510
  %522 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 3, i32 1
  %523 = load i32, i32* %522, align 4
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %534, label %525

525:                                              ; preds = %521
  %526 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 2
  %527 = load i32, i32* %526, align 16
  %528 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 3
  %529 = load i32, i32* %528, align 4
  %530 = mul nsw i32 %529, %527
  %531 = icmp sgt i32 %530, 307200
  br i1 %531, label %532, label %534

532:                                              ; preds = %525
  %533 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 24
  store i32 1, i32* %533, align 8
  br label %534

534:                                              ; preds = %532, %525, %521
  %535 = icmp sgt i32 %1, 5
  br i1 %535, label %536, label %601

536:                                              ; preds = %534
  store i32 1, i32* %30, align 4
  store i32 5, i32* %500, align 8
  %537 = icmp eq i32 %1, 6
  br i1 %537, label %601, label %538

538:                                              ; preds = %536
  store i8 15, i8* %28, align 1
  store i8 3, i8* %29, align 2
  store i8 2, i8* %24, align 8
  store i8 8, i8* %52, align 8
  store i8 1, i8* %54, align 4
  store i8 1, i8* %56, align 4
  store i32 2, i32* %80, align 4
  store i8 3, i8* %178, align 8
  store i32 %515, i32* %181, align 4
  store i32 1, i32* %475, align 8
  store i32 0, i32* %476, align 4
  %539 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 11
  store i32 0, i32* %539, align 4
  store i32 0, i32* %182, align 8
  store i32 0, i32* %477, align 4
  %540 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 2
  %541 = load i32, i32* %540, align 8
  %542 = icmp slt i32 %541, 2
  %543 = zext i1 %542 to i32
  %544 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 8
  store i32 %543, i32* %544, align 8
  store i32 1, i32* %479, align 4
  store i32 1, i32* %188, align 4
  store i32 0, i32* %189, align 8
  store i32 1, i32* %190, align 4
  %545 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 3
  %546 = load i32, i32* %545, align 4
  %547 = icmp sgt i32 %546, 1
  br i1 %547, label %548, label %569

548:                                              ; preds = %538
  %549 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 1
  %550 = load i32, i32* %549, align 4
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %564

552:                                              ; preds = %548
  %553 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 0
  %554 = load i32, i32* %553, align 16
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %563, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 1, i32 0
  %558 = load i32, i32* %557, align 8
  %559 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 1, i32 1
  %560 = load i32, i32* %559, align 4
  %561 = mul nsw i32 %560, %558
  %562 = icmp slt i32 %561, 230401
  br i1 %562, label %563, label %564

563:                                              ; preds = %556, %552
  store i8 1, i8* %52, align 8
  store i8 0, i8* %56, align 4
  store i32 6, i32* %484, align 4
  br label %569

564:                                              ; preds = %556, %548
  %565 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 5
  %566 = load i32, i32* %565, align 4
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %569, label %568

568:                                              ; preds = %564
  store i8 2, i8* %56, align 4
  store i32 10, i32* %484, align 4
  br label %569

569:                                              ; preds = %568, %564, %563, %538
  %570 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %452, i64 0, i32 16
  %571 = load i32, i32* %570, align 8
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %578, label %573

573:                                              ; preds = %569
  %574 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 5
  %575 = load i32, i32* %574, align 4
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %578, label %577

577:                                              ; preds = %573
  store i32 1, i32* %485, align 8
  br label %578

578:                                              ; preds = %577, %573, %569
  %579 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 0
  %580 = bitcast i32* %579 to <4 x i32>*
  store <4 x i32> <i32 7, i32 7, i32 7, i32 7>, <4 x i32>* %580, align 4
  %581 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 4
  %582 = bitcast i32* %581 to <4 x i32>*
  store <4 x i32> <i32 7, i32 7, i32 7, i32 7>, <4 x i32>* %582, align 4
  %583 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 8
  %584 = bitcast i32* %583 to <4 x i32>*
  store <4 x i32> <i32 7, i32 1, i32 1, i32 1>, <4 x i32>* %584, align 4
  %585 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 12
  %586 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 13
  %587 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 14
  %588 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 27, i64 15
  %589 = bitcast i32* %585 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %589, align 4
  %590 = icmp sgt i32 %1, 7
  br i1 %590, label %591, label %601

591:                                              ; preds = %578
  store i32 2, i32* %483, align 4
  store i32 1, i32* %93, align 4
  store i32 1, i32* %539, align 4
  store i32 0, i32* %544, align 8
  store i32 2, i32* %475, align 8
  %592 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 12
  store i32 1, i32* %592, align 8
  %593 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 20
  store i32 1, i32* %593, align 8
  %594 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %594, align 4
  store i32 1, i32* %489, align 8
  %595 = icmp eq i32 %1, 8
  br i1 %595, label %601, label %596

596:                                              ; preds = %591
  store i32 0, i32* %473, align 8
  %597 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 23
  store i32 1, i32* %597, align 4
  %598 = bitcast i32* %579 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %598, align 4
  %599 = bitcast i32* %581 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %599, align 4
  %600 = bitcast i32* %583 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %600, align 4
  store i32 1, i32* %585, align 4
  store i32 1, i32* %586, align 4
  store i32 1, i32* %587, align 4
  store i32 1, i32* %588, align 4
  br label %601

601:                                              ; preds = %193, %596, %591, %578, %536, %534, %506, %502, %495, %487, %450, %444, %438, %425, %419, %415, %404, %400, %396, %383, %379, %345, %339, %325, %320, %294, %251, %247
  %602 = phi i8 [ 1, %193 ], [ 0, %596 ], [ 0, %591 ], [ 0, %578 ], [ 0, %536 ], [ 0, %534 ], [ 0, %506 ], [ 0, %502 ], [ 0, %495 ], [ 1, %487 ], [ 1, %450 ], [ 1, %444 ], [ 1, %438 ], [ 1, %425 ], [ 1, %419 ], [ 1, %415 ], [ 1, %404 ], [ 1, %400 ], [ 1, %396 ], [ 1, %383 ], [ 1, %379 ], [ 0, %345 ], [ 0, %339 ], [ 0, %325 ], [ 0, %320 ], [ 0, %294 ], [ 1, %251 ], [ 1, %247 ]
  %603 = phi %struct.AV1_PRIMARY* [ %195, %193 ], [ %452, %596 ], [ %452, %591 ], [ %452, %578 ], [ %452, %536 ], [ %452, %534 ], [ %452, %506 ], [ %452, %502 ], [ %452, %495 ], [ %452, %487 ], [ %452, %450 ], [ %369, %444 ], [ %369, %438 ], [ %369, %425 ], [ %369, %419 ], [ %369, %415 ], [ %369, %404 ], [ %369, %400 ], [ %369, %396 ], [ %369, %383 ], [ %369, %379 ], [ %198, %345 ], [ %198, %339 ], [ %198, %325 ], [ %198, %320 ], [ %198, %294 ], [ %198, %251 ], [ %198, %247 ]
  %604 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %605 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %603, i64 0, i32 3
  %606 = load i32, i32* %605, align 8
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %630

608:                                              ; preds = %601
  %609 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %610 = load %struct.SequenceHeader*, %struct.SequenceHeader** %609, align 16
  %611 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %610, i64 0, i32 19
  %612 = load i8, i8* %611, align 8
  %613 = and i8 %612, %602
  store i8 %613, i8* %611, align 8
  %614 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 12, i32 9
  %615 = load i32, i32* %614, align 4
  %616 = icmp eq i32 %615, 0
  %617 = zext i1 %616 to i8
  %618 = load %struct.SequenceHeader*, %struct.SequenceHeader** %609, align 16
  %619 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %618, i64 0, i32 23
  %620 = load i8, i8* %619, align 4
  %621 = and i8 %620, %617
  store i8 %621, i8* %619, align 4
  %622 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 25
  %623 = load i32, i32* %622, align 4
  %624 = icmp ne i32 %623, -1
  %625 = zext i1 %624 to i8
  %626 = load %struct.SequenceHeader*, %struct.SequenceHeader** %609, align 16
  %627 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %626, i64 0, i32 17
  %628 = load i8, i8* %627, align 2
  %629 = and i8 %628, %625
  store i8 %629, i8* %627, align 2
  br label %630

630:                                              ; preds = %601, %608
  %631 = load i64, i64* %34, align 8
  %632 = shl i64 %631, 2
  store i64 %632, i64* %34, align 8
  %633 = icmp slt i32 %1, 5
  %634 = select i1 %633, i32 %1, i32 5
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds [6 x [4 x %struct.MESH_PATTERN]], [6 x [4 x %struct.MESH_PATTERN]]* @good_quality_mesh_patterns, i64 0, i64 %635, i64 0, i32 0
  %637 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 9, i64 0, i32 0
  %638 = bitcast i32* %636 to <4 x i32>*
  %639 = load <4 x i32>, <4 x i32>* %638, align 16
  %640 = bitcast i32* %637 to <4 x i32>*
  store <4 x i32> %639, <4 x i32>* %640, align 4
  %641 = getelementptr inbounds [6 x [4 x %struct.MESH_PATTERN]], [6 x [4 x %struct.MESH_PATTERN]]* @good_quality_mesh_patterns, i64 0, i64 %635, i64 2, i32 0
  %642 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 9, i64 2, i32 0
  %643 = bitcast i32* %641 to <4 x i32>*
  %644 = load <4 x i32>, <4 x i32>* %643, align 16
  %645 = bitcast i32* %642 to <4 x i32>*
  store <4 x i32> %644, <4 x i32>* %645, align 4
  %646 = getelementptr inbounds [6 x [4 x %struct.MESH_PATTERN]], [6 x [4 x %struct.MESH_PATTERN]]* @intrabc_mesh_patterns, i64 0, i64 %635, i64 0, i32 0
  %647 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 10, i64 0, i32 0
  %648 = bitcast i32* %646 to <4 x i32>*
  %649 = load <4 x i32>, <4 x i32>* %648, align 16
  %650 = bitcast i32* %647 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %650, align 4
  %651 = getelementptr inbounds [6 x [4 x %struct.MESH_PATTERN]], [6 x [4 x %struct.MESH_PATTERN]]* @intrabc_mesh_patterns, i64 0, i64 %635, i64 2, i32 0
  %652 = load i32, i32* %651, align 16
  %653 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 10, i64 2, i32 0
  store i32 %652, i32* %653, align 4
  %654 = getelementptr inbounds [6 x [4 x %struct.MESH_PATTERN]], [6 x [4 x %struct.MESH_PATTERN]]* @intrabc_mesh_patterns, i64 0, i64 %635, i64 2, i32 1
  %655 = load i32, i32* %654, align 4
  %656 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 10, i64 2, i32 1
  store i32 %655, i32* %656, align 4
  %657 = getelementptr inbounds [6 x [4 x %struct.MESH_PATTERN]], [6 x [4 x %struct.MESH_PATTERN]]* @intrabc_mesh_patterns, i64 0, i64 %635, i64 3, i32 0
  %658 = load i32, i32* %657, align 8
  %659 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 10, i64 3, i32 0
  store i32 %658, i32* %659, align 4
  %660 = getelementptr inbounds [6 x [4 x %struct.MESH_PATTERN]], [6 x [4 x %struct.MESH_PATTERN]]* @intrabc_mesh_patterns, i64 0, i64 %635, i64 3, i32 1
  %661 = load i32, i32* %660, align 4
  %662 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 10, i64 3, i32 1
  store i32 %661, i32* %662, align 4
  %663 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 33
  %664 = load i32, i32* %663, align 4
  %665 = icmp eq i32 %664, 1
  br i1 %665, label %670, label %666

666:                                              ; preds = %630
  %667 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 76
  %668 = load i8, i8* %667, align 8
  %669 = icmp eq i8 %668, 1
  br i1 %669, label %670, label %672

670:                                              ; preds = %666, %630
  %671 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 3
  store i8 0, i8* %671, align 4
  br label %672

672:                                              ; preds = %666, %670
  %673 = icmp eq i32 %664, 0
  br i1 %673, label %674, label %680

674:                                              ; preds = %672
  %675 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %604, align 16
  %676 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %675, i64 0, i32 8
  %677 = load i32, i32* %676, align 8
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %680

679:                                              ; preds = %674
  store i8 0, i8* %5, align 4
  br label %680

680:                                              ; preds = %674, %679, %672
  %681 = load i8, i8* %56, align 4
  %682 = icmp ult i8 %681, 3
  br i1 %682, label %683, label %690

683:                                              ; preds = %680
  %684 = sext i8 %681 to i64
  %685 = getelementptr inbounds [3 x i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*], [3 x i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*]* @switch.table.av1_set_speed_features_framesize_independent, i64 0, i64 %684
  %686 = bitcast i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %685 to i64*
  %687 = load i64, i64* %686, align 8
  %688 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 2
  %689 = bitcast i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %688 to i64*
  store i64 %687, i64* %689, align 8
  br label %690

690:                                              ; preds = %680, %683
  %691 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 16, i32 0
  %692 = load i32, i32* %691, align 4
  switch i32 %692, label %697 [
    i32 1, label %694
    i32 2, label %693
  ]

693:                                              ; preds = %690
  br label %694

694:                                              ; preds = %690, %693
  %695 = phi i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)* [ @av1_return_min_sub_pixel_mv, %693 ], [ @av1_return_max_sub_pixel_mv, %690 ]
  %696 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 2
  store i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)* %695, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %696, align 8
  br label %697

697:                                              ; preds = %694, %690
  %698 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 3, i64 0
  %699 = bitcast i32* %698 to i8*
  %700 = load i32, i32* %174, align 4
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @tx_domain_dist_thresholds, i64 0, i64 %701, i64 0
  %703 = bitcast i32* %702 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %699, i8* align 4 %703, i64 12, i1 false)
  %704 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 2, i64 0
  %705 = bitcast i32* %704 to i8*
  %706 = load i32, i32* %173, align 4
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @tx_domain_dist_types, i64 0, i64 %707, i64 0
  %709 = bitcast i32* %708 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %705, i8* align 4 %709, i64 12, i1 false)
  %710 = bitcast %struct.WinnerModeParams* %3 to i8*
  %711 = load i32, i32* %175, align 4
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds [9 x [3 x [2 x i32]]], [9 x [3 x [2 x i32]]]* @coeff_opt_thresholds, i64 0, i64 %712
  %714 = bitcast [3 x [2 x i32]]* %713 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %710, i8* align 8 %714, i64 24, i1 false)
  %715 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 4, i64 0
  %716 = bitcast i32* %715 to i8*
  %717 = load i32, i32* %115, align 4
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @predict_skip_levels, i64 0, i64 %718, i64 0
  %720 = bitcast i32* %719 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %716, i8* align 4 %720, i64 12, i1 false)
  %721 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 1, i64 0
  %722 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 2
  %723 = load i32, i32* %722, align 4
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds [3 x [3 x i8]], [3 x [3 x i8]]* @tx_size_search_methods, i64 0, i64 %724, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %721, i8* align 1 %725, i64 3, i1 false)
  %726 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 5, i64 0
  %727 = bitcast i32* %726 to i8*
  %728 = load i32, i32* %177, align 4
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @predict_dc_levels, i64 0, i64 %729, i64 0
  %731 = bitcast i32* %730 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %727, i8* align 4 %731, i64 12, i1 false)
  %732 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 35
  %733 = load i8, i8* %732, align 1, !range !2
  %734 = icmp eq i8 %733, 0
  br i1 %734, label %752, label %735

735:                                              ; preds = %697
  %736 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 29
  %737 = load i32, i32* %736, align 8
  %738 = icmp sgt i32 %737, 1
  br i1 %738, label %739, label %752

739:                                              ; preds = %735
  %740 = load i32, i32* %80, align 4
  %741 = icmp eq i32 %740, 1
  br i1 %741, label %742, label %743

742:                                              ; preds = %739
  store i32 2, i32* %80, align 4
  br label %743

743:                                              ; preds = %742, %739
  %744 = load i8, i8* %21, align 8
  %745 = icmp eq i8 %744, 3
  br i1 %745, label %752, label %746

746:                                              ; preds = %743
  %747 = zext i8 %744 to i64
  %748 = getelementptr inbounds [4 x i32], [4 x i32]* @gm_available_reference_frames, i64 0, i64 %747
  %749 = load i32, i32* %748, align 4
  %750 = icmp slt i32 %737, %749
  br i1 %750, label %752, label %751

751:                                              ; preds = %746
  store i32 0, i32* %22, align 4
  br label %752

752:                                              ; preds = %746, %743, %697, %751, %735
  ret void
}

declare i32 @av1_find_best_sub_pixel_tree(%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*) #1

declare i32 @av1_find_best_sub_pixel_tree_pruned(%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*) #1

declare i32 @av1_find_best_sub_pixel_tree_pruned_more(%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_set_speed_features_qindex_dependent(%struct.AV1_COMP*, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %4 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %3, align 16
  %5 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 46
  %6 = load i8, i8* %5, align 16
  %7 = zext i8 %6 to i64
  %8 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %4, i64 0, i32 6, i32 0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 0, i32 0
  %11 = load i8, i8* %10, align 16
  %12 = and i8 %11, -3
  %13 = icmp eq i8 %12, 0
  %14 = or i8 %9, 1
  %15 = icmp eq i8 %14, 3
  %16 = or i1 %15, %13
  %17 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 2
  %18 = load i32, i32* %17, align 16
  %19 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %18, %20
  %22 = select i1 %21, i32 %18, i32 %20
  %23 = icmp sgt i32 %22, 719
  %24 = icmp sgt i32 %22, 1079
  %25 = icmp eq i8 %9, 6
  %26 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 34
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 1
  br i1 %28, label %136, label %29

29:                                               ; preds = %2
  %30 = icmp eq i32 %1, 0
  br i1 %30, label %31, label %80

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 22, i32 0
  %33 = load i32, i32* %32, align 16
  br i1 %23, label %47, label %34

34:                                               ; preds = %31
  %35 = select i1 %25, i32 110, i32 140
  %36 = select i1 %16, i32 70, i32 %35
  %37 = icmp sgt i32 %33, %36
  br i1 %37, label %109, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 8
  store i32 1, i32* %39, align 4
  %40 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 3
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  %43 = select i1 %42, i32 2, i32 1
  %44 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 18
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 19
  store i32 1, i32* %45, align 8
  %46 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 8
  store i32 0, i32* %46, align 4
  br label %109

47:                                               ; preds = %31
  %48 = icmp slt i32 %33, 129
  br i1 %48, label %49, label %109

49:                                               ; preds = %47
  %50 = select i1 %24, i32 3, i32 2
  %51 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 5
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 0, i64 0
  %53 = bitcast [2 x i32]* %52 to i8*
  %54 = zext i32 %50 to i64
  %55 = getelementptr inbounds [9 x [3 x [2 x i32]]], [9 x [3 x [2 x i32]]]* @coeff_opt_thresholds, i64 0, i64 %54
  %56 = bitcast [3 x [2 x i32]]* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 8 %56, i64 24, i1 false)
  %57 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 3
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  %60 = select i1 %59, i32 2, i32 1
  %61 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 18
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 1
  store i32 1, i32* %62, align 4
  %63 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 0
  store i32 1, i32* %63, align 4
  %64 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 3
  store i32 1, i32* %64, align 4
  %65 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 8
  store i32 1, i32* %65, align 4
  %66 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 8
  store i32 0, i32* %66, align 4
  %67 = icmp slt i32 %33, 109
  %68 = and i1 %24, %67
  br i1 %68, label %69, label %109

69:                                               ; preds = %49
  %70 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 5
  store i32 2, i32* %70, align 4
  %71 = select i1 %16, i32 1, i32 2
  %72 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 1
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 10, i32 2
  store i32 1, i32* %73, align 4
  %74 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 19
  store i32 1, i32* %74, align 8
  %75 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 5
  store i32 4000, i32* %75, align 4
  %76 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 7, i32 4
  store i32 0, i32* %76, align 8
  %77 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 0
  store i8 2, i8* %77, align 4
  %78 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 6
  store i32 1, i32* %78, align 4
  %79 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 9
  store i32 1, i32* %79, align 4
  br label %109

80:                                               ; preds = %29
  %81 = icmp sgt i32 %1, 2
  br i1 %81, label %82, label %109

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 3
  %84 = load i8, i8* %83, align 1, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = select i1 %85, i32 100, i32 50
  %87 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 22, i32 0
  %88 = load i32, i32* %87, align 16
  %89 = icmp sgt i32 %88, %86
  %90 = or i1 %16, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %82
  %92 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 23
  store i8 15, i8* %92, align 8
  br label %93

93:                                               ; preds = %91, %82
  %94 = icmp sgt i32 %1, 3
  br i1 %94, label %95, label %136

95:                                               ; preds = %93
  %96 = select i1 %16, i32 80, i32 120
  %97 = icmp sgt i32 %88, %96
  %98 = or i1 %97, %13
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 23
  store i8 15, i8* %100, align 8
  br label %101

101:                                              ; preds = %95, %99
  %102 = icmp slt i32 %1, 5
  %103 = select i1 %16, i32 100, i32 160
  %104 = icmp sgt i32 %88, %103
  %105 = or i1 %102, %104
  %106 = or i1 %105, %13
  br i1 %106, label %136, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 23
  store i8 15, i8* %108, align 8
  br label %136

109:                                              ; preds = %49, %69, %47, %34, %38, %80
  %110 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 33
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %136, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 76
  %115 = load i8, i8* %114, align 8
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %136, label %117

117:                                              ; preds = %113
  %118 = sext i32 %1 to i64
  %119 = zext i1 %23 to i64
  %120 = getelementptr inbounds [3 x [2 x [2 x i32]]], [3 x [2 x [2 x i32]]]* @ms_qindex_thresh, i64 0, i64 %118, i64 %119, i64 0
  %121 = load i32, i32* %120, align 8
  %122 = getelementptr inbounds [2 x i8], [2 x i8]* @motion_search_method, i64 0, i64 %119
  %123 = load i8, i8* %122, align 1
  %124 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 22, i32 0
  %125 = load i32, i32* %124, align 16
  %126 = icmp sgt i32 %125, %121
  br i1 %126, label %127, label %130

127:                                              ; preds = %117
  %128 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 0
  store i8 %123, i8* %128, align 8
  %129 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 2, i32 5
  store i8 %123, i8* %129, align 1
  br label %136

130:                                              ; preds = %117
  %131 = getelementptr inbounds [3 x [2 x [2 x i32]]], [3 x [2 x [2 x i32]]]* @ms_qindex_thresh, i64 0, i64 %118, i64 %119, i64 1
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %125, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  %135 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 0
  store i8 2, i8* %135, align 8
  br label %136

136:                                              ; preds = %101, %113, %109, %107, %93, %130, %134, %127, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
