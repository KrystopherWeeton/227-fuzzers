; ModuleID = '../../third_party/opus/src/silk/bwexpander_32.c'
source_filename = "../../third_party/opus/src/silk/bwexpander_32.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @silk_bwexpander_32(i32* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = add nsw i32 %2, -65536
  %5 = add i32 %1, -1
  %6 = icmp sgt i32 %5, 0
  %7 = sext i32 %2 to i64
  br i1 %6, label %8, label %66

8:                                                ; preds = %3
  %9 = zext i32 %5 to i64
  %10 = and i64 %9, 1
  %11 = icmp eq i32 %5, 1
  br i1 %11, label %47, label %12

12:                                               ; preds = %8
  %13 = sub nsw i64 %9, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %43, %14 ]
  %16 = phi i64 [ %7, %12 ], [ %44, %14 ]
  %17 = phi i32 [ %2, %12 ], [ %42, %14 ]
  %18 = phi i64 [ %13, %12 ], [ %45, %14 ]
  %19 = getelementptr inbounds i32, i32* %0, i64 %15
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %16, %21
  %23 = lshr i64 %22, 16
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %19, align 4
  %25 = mul nsw i32 %17, %4
  %26 = ashr i32 %25, 15
  %27 = add nsw i32 %26, 1
  %28 = ashr i32 %27, 1
  %29 = add nsw i32 %28, %17
  %30 = or i64 %15, 1
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds i32, i32* %0, i64 %30
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = mul nsw i64 %31, %34
  %36 = lshr i64 %35, 16
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %32, align 4
  %38 = mul nsw i32 %29, %4
  %39 = ashr i32 %38, 15
  %40 = add nsw i32 %39, 1
  %41 = ashr i32 %40, 1
  %42 = add nsw i32 %41, %29
  %43 = add nuw nsw i64 %15, 2
  %44 = sext i32 %42 to i64
  %45 = add i64 %18, -2
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %14

47:                                               ; preds = %14, %8
  %48 = phi i64 [ undef, %8 ], [ %44, %14 ]
  %49 = phi i64 [ 0, %8 ], [ %43, %14 ]
  %50 = phi i64 [ %7, %8 ], [ %44, %14 ]
  %51 = phi i32 [ %2, %8 ], [ %42, %14 ]
  %52 = icmp eq i64 %10, 0
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds i32, i32* %0, i64 %49
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %50, %56
  %58 = lshr i64 %57, 16
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %54, align 4
  %60 = mul nsw i32 %51, %4
  %61 = ashr i32 %60, 15
  %62 = add nsw i32 %61, 1
  %63 = ashr i32 %62, 1
  %64 = add nsw i32 %63, %51
  %65 = sext i32 %64 to i64
  br label %66

66:                                               ; preds = %53, %47, %3
  %67 = phi i64 [ %7, %3 ], [ %48, %47 ], [ %65, %53 ]
  %68 = sext i32 %5 to i64
  %69 = getelementptr inbounds i32, i32* %0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = mul nsw i64 %67, %71
  %73 = lshr i64 %72, 16
  %74 = trunc i64 %73 to i32
  store i32 %74, i32* %69, align 4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
