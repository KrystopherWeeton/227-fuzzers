; ModuleID = '../../ppapi/host/resource_message_handler.cc'
source_filename = "../../ppapi/host/resource_message_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::host::ResourceMessageHandler" = type { i32 (...)** }
%"class.IPC::Message" = type { %"class.base::Pickle", i8, %class.scoped_refptr }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%class.scoped_refptr = type { %"class.IPC::MessageAttachmentSet"* }
%"class.IPC::MessageAttachmentSet" = type opaque
%"struct.ppapi::host::HostMessageContext" = type <{ %"class.ppapi::proxy::ResourceMessageCallParams", %"class.IPC::Message", %"class.IPC::Message"*, i32, [4 x i8] }>
%"class.ppapi::proxy::ResourceMessageCallParams" = type <{ %"class.ppapi::proxy::ResourceMessageParams", i8, [7 x i8] }>
%"class.ppapi::proxy::ResourceMessageParams" = type { i32 (...)**, i32, i32, %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.ppapi::proxy::ResourceMessageParams::SerializedHandles"* }
%"class.ppapi::proxy::ResourceMessageParams::SerializedHandles" = type { %"class.base::RefCountedThreadSafe", i8, %"class.std::__1::vector" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ppapi::proxy::SerializedHandle"*, %"class.ppapi::proxy::SerializedHandle"*, %"class.std::__1::__compressed_pair" }
%"class.ppapi::proxy::SerializedHandle" = type { i32, %"class.base::subtle::PlatformSharedMemoryRegion", %"struct.base::FileDescriptor", i32, i32 }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.base::FileDescriptor" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ppapi::proxy::SerializedHandle"* }
%"struct.ppapi::host::ReplyMessageContext" = type <{ %"class.ppapi::proxy::ResourceMessageReplyParams", %"class.IPC::Message"*, i32, [4 x i8] }>
%"class.ppapi::proxy::ResourceMessageReplyParams" = type <{ %"class.ppapi::proxy::ResourceMessageParams", i32, [4 x i8] }>

@_ZTVN5ppapi4host22ResourceMessageHandlerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ppapi::host::ResourceMessageHandler"*)* @_ZN5ppapi4host22ResourceMessageHandlerD2Ev to i8*), i8* bitcast (void (%"class.ppapi::host::ResourceMessageHandler"*)* @_ZN5ppapi4host22ResourceMessageHandlerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.ppapi::host::ResourceMessageHandler"*, %"class.IPC::Message"*, %"struct.ppapi::host::HostMessageContext"*)* @_ZN5ppapi4host22ResourceMessageHandler25OnResourceMessageReceivedERKN3IPC7MessageEPNS0_18HostMessageContextE to i8*)] }, align 8

@_ZN5ppapi4host22ResourceMessageHandlerD1Ev = hidden unnamed_addr alias void (%"class.ppapi::host::ResourceMessageHandler"*), void (%"class.ppapi::host::ResourceMessageHandler"*)* @_ZN5ppapi4host22ResourceMessageHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi4host22ResourceMessageHandlerC2Ev(%"class.ppapi::host::ResourceMessageHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::host::ResourceMessageHandler", %"class.ppapi::host::ResourceMessageHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5ppapi4host22ResourceMessageHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5ppapi4host22ResourceMessageHandlerD2Ev(%"class.ppapi::host::ResourceMessageHandler"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5ppapi4host22ResourceMessageHandlerD0Ev(%"class.ppapi::host::ResourceMessageHandler"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi4host22ResourceMessageHandler25RunMessageHandlerAndReplyERKN3IPC7MessageEPNS0_18HostMessageContextE(%"class.ppapi::host::ResourceMessageHandler"*, %"class.IPC::Message"* dereferenceable(56), %"struct.ppapi::host::HostMessageContext"*) local_unnamed_addr #4 align 2 {
  %4 = alloca %"struct.ppapi::host::ReplyMessageContext", align 8
  %5 = bitcast %"struct.ppapi::host::ReplyMessageContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  call void @_ZNK5ppapi4host18HostMessageContext23MakeReplyMessageContextEv(%"struct.ppapi::host::ReplyMessageContext"* nonnull sret %4, %"struct.ppapi::host::HostMessageContext"* %2) #9
  %6 = bitcast %"class.ppapi::host::ResourceMessageHandler"* %0 to i32 (%"class.ppapi::host::ResourceMessageHandler"*, %"class.IPC::Message"*, %"struct.ppapi::host::HostMessageContext"*)***
  %7 = load i32 (%"class.ppapi::host::ResourceMessageHandler"*, %"class.IPC::Message"*, %"struct.ppapi::host::HostMessageContext"*)**, i32 (%"class.ppapi::host::ResourceMessageHandler"*, %"class.IPC::Message"*, %"struct.ppapi::host::HostMessageContext"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.ppapi::host::ResourceMessageHandler"*, %"class.IPC::Message"*, %"struct.ppapi::host::HostMessageContext"*)*, i32 (%"class.ppapi::host::ResourceMessageHandler"*, %"class.IPC::Message"*, %"struct.ppapi::host::HostMessageContext"*)** %7, i64 4
  %9 = load i32 (%"class.ppapi::host::ResourceMessageHandler"*, %"class.IPC::Message"*, %"struct.ppapi::host::HostMessageContext"*)*, i32 (%"class.ppapi::host::ResourceMessageHandler"*, %"class.IPC::Message"*, %"struct.ppapi::host::HostMessageContext"*)** %8, align 8
  %10 = call i32 %9(%"class.ppapi::host::ResourceMessageHandler"* %0, %"class.IPC::Message"* dereferenceable(56) %1, %"struct.ppapi::host::HostMessageContext"* %2) #9
  %11 = getelementptr inbounds %"struct.ppapi::host::ReplyMessageContext", %"struct.ppapi::host::ReplyMessageContext"* %4, i64 0, i32 0, i32 1
  store i32 %10, i32* %11, align 8
  %12 = icmp eq i32 %10, -1
  %13 = getelementptr inbounds %"struct.ppapi::host::HostMessageContext", %"struct.ppapi::host::HostMessageContext"* %2, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = or i1 %12, %15
  br i1 %16, label %23, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"struct.ppapi::host::HostMessageContext", %"struct.ppapi::host::HostMessageContext"* %2, i64 0, i32 1
  %19 = bitcast %"class.ppapi::host::ResourceMessageHandler"* %0 to void (%"class.ppapi::host::ResourceMessageHandler"*, %"struct.ppapi::host::ReplyMessageContext"*, %"class.IPC::Message"*)***
  %20 = load void (%"class.ppapi::host::ResourceMessageHandler"*, %"struct.ppapi::host::ReplyMessageContext"*, %"class.IPC::Message"*)**, void (%"class.ppapi::host::ResourceMessageHandler"*, %"struct.ppapi::host::ReplyMessageContext"*, %"class.IPC::Message"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.ppapi::host::ResourceMessageHandler"*, %"struct.ppapi::host::ReplyMessageContext"*, %"class.IPC::Message"*)*, void (%"class.ppapi::host::ResourceMessageHandler"*, %"struct.ppapi::host::ReplyMessageContext"*, %"class.IPC::Message"*)** %20, i64 3
  %22 = load void (%"class.ppapi::host::ResourceMessageHandler"*, %"struct.ppapi::host::ReplyMessageContext"*, %"class.IPC::Message"*)*, void (%"class.ppapi::host::ResourceMessageHandler"*, %"struct.ppapi::host::ReplyMessageContext"*, %"class.IPC::Message"*)** %21, align 8
  call void %22(%"class.ppapi::host::ResourceMessageHandler"* %0, %"struct.ppapi::host::ReplyMessageContext"* nonnull dereferenceable(48) %4, %"class.IPC::Message"* dereferenceable(56) %18) #9
  br label %23

23:                                               ; preds = %3, %17
  call void @_ZN5ppapi4host19ReplyMessageContextD1Ev(%"struct.ppapi::host::ReplyMessageContext"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZNK5ppapi4host18HostMessageContext23MakeReplyMessageContextEv(%"struct.ppapi::host::ReplyMessageContext"* sret, %"struct.ppapi::host::HostMessageContext"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5ppapi4host19ReplyMessageContextD1Ev(%"struct.ppapi::host::ReplyMessageContext"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5ppapi4host22ResourceMessageHandler25OnResourceMessageReceivedERKN3IPC7MessageEPNS0_18HostMessageContextE(%"class.ppapi::host::ResourceMessageHandler"* nocapture readnone, %"class.IPC::Message"* nocapture readnone dereferenceable(56), %"struct.ppapi::host::HostMessageContext"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 -12
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
