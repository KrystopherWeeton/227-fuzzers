; ModuleID = '../../cc/layers/viewport.cc'
source_filename = "../../cc/layers/viewport.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::Viewport" = type <{ %"class.cc::LayerTreeHostImpl"*, i8, [3 x i8], %"class.gfx::Vector2d", [4 x i8] }>
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.108", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.gfx::Vector2dF", %"class.std::__1::vector.580", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.909", %"class.std::__1::unique_ptr.921", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.974", %"class.std::__1::unique_ptr.981", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.987", %"class.std::__1::unique_ptr.993", %"class.std::__1::set.999", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.1009", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.1048", %"class.base::RepeatingCallback.843", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.1054", i8, i8, i8, i32, %"class.std::__1::unique_ptr", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.1064", %"class.std::__1::vector.1070", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.1090", %"class.std::__1::unique_ptr.1102", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.560", %"class.absl::optional.1108", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.88", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.1176", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.1246", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.180", %"class.base::WeakPtrFactory.1289" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.38", [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.48, %class.scoped_refptr.49, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.50", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.48 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.49 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.57", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.57" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.58" }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.88", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.96" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.78"*, i64 }
%"class.std::__1::unique_ptr.78" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.96" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.103" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.103" = type { %"class.base::internal::VectorBuffer.104", i64, i64 }
%"class.base::internal::VectorBuffer.104" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection", %class.scoped_refptr.298, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.304, %"class.std::__1::vector.308", %"class.std::__1::unordered_map.357", %"class.base::internal::flat_tree.381", %"class.std::__1::unordered_map.389", %"class.std::__1::unordered_map.415", %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439", %"class.base::flat_map.463", %"class.std::__1::vector.473", %"class.base::internal::flat_tree.559", %"class.base::internal::flat_tree.560", %"class.std::__1::vector.573", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.580", %"class.std::__1::vector.580", %"class.std::__1::vector.588", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.595, %class.scoped_refptr.595, %"class.std::__1::unique_ptr.600", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.606", %"class.std::__1::vector.613", %"class.std::__1::unique_ptr.621", %"class.std::__1::vector.627" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.117", %"class.base::flat_map.117", %"class.base::flat_map.117", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.117" = type { %"class.base::internal::flat_tree.118" }
%"class.base::internal::flat_tree.118" = type { %"class.std::__1::vector.119" }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.std::__1::pair.121"*, %"struct.std::__1::pair.121"*, %"class.std::__1::__compressed_pair.122" }
%"struct.std::__1::pair.121" = type opaque
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::pair.121"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.134", %"class.std::__1::vector.141", %"class.std::__1::vector.148" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.127", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.129" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { i32*, i32*, %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { i32* }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.143" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.150" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.155", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.215" }
%"class.cc::PropertyTree.155" = type { i32 (...)**, %"class.std::__1::vector.156", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.187" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.174", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.158" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.169" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.162", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.160, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.160 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.161 }
%union.anon.161 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.174" = type { %"class.absl::optional_internal::optional_data.175" }
%"class.absl::optional_internal::optional_data.175" = type { %"class.absl::optional_internal::optional_data_base.176" }
%"class.absl::optional_internal::optional_data_base.176" = type { %"class.absl::optional_internal::optional_data_dtor_base.177" }
%"class.absl::optional_internal::optional_data_dtor_base.177" = type { i8, %union.anon.178 }
%union.anon.178 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.179" }
%"class.base::internal::flat_tree.179" = type { %"class.std::__1::vector.180" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.192" }
%"class.std::__1::__hash_table.192" = type <{ %"class.std::__1::unique_ptr.193", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.211", [4 x i8] }>
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195", %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::__hash_node_base.196"** }
%"struct.std::__1::__hash_node_base.196" = type { %"struct.std::__1::__hash_node_base.196"* }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.std::__1::__bucket_list_deallocator.198" }
%"class.std::__1::__bucket_list_deallocator.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::__hash_node_base.196" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.std::__1::unique_ptr.217"*, %"class.std::__1::unique_ptr.217"*, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.220" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.std::__1::unique_ptr.217"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.234" }
%"class.cc::PropertyTree.234" = type { i32 (...)**, %"class.std::__1::vector.235", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.237" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.242", i32, %"class.base::flat_map.262", %"class.base::flat_map.272", %"class.base::WeakPtr" }
%"class.cc::PropertyTree.242" = type { i32 (...)**, %"class.std::__1::vector.243", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.257" }
%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional.245", i8, [7 x i8] }>
%"class.absl::optional.245" = type { %"class.absl::optional_internal::optional_data.246" }
%"class.absl::optional_internal::optional_data.246" = type { %"class.absl::optional_internal::optional_data_base.247" }
%"class.absl::optional_internal::optional_data_base.247" = type { %"class.absl::optional_internal::optional_data_dtor_base.248" }
%"class.absl::optional_internal::optional_data_dtor_base.248" = type { i8, %union.anon.249 }
%union.anon.249 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.250", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.250" = type { %"class.std::__1::__vector_base.251" }
%"class.std::__1::__vector_base.251" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.252" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.262" = type { %"class.base::internal::flat_tree.263" }
%"class.base::internal::flat_tree.263" = type { %"class.std::__1::vector.264" }
%"class.std::__1::vector.264" = type { %"class.std::__1::__vector_base.265" }
%"class.std::__1::__vector_base.265" = type { %"struct.std::__1::pair.266"*, %"struct.std::__1::pair.266"*, %"class.std::__1::__compressed_pair.267" }
%"struct.std::__1::pair.266" = type opaque
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::pair.266"* }
%"class.base::flat_map.272" = type { %"class.base::internal::flat_tree.273" }
%"class.base::internal::flat_tree.273" = type { %"class.std::__1::vector.274" }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"struct.std::__1::pair.276"*, %"struct.std::__1::pair.276"*, %"class.std::__1::__compressed_pair.277" }
%"struct.std::__1::pair.276" = type opaque
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::pair.276"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.282 }
%class.scoped_refptr.282 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.283", %"class.std::__1::vector.290" }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.285" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"class.std::__1::vector.292"*, %"class.std::__1::vector.292"*, %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::vector.292" = type opaque
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.std::__1::vector.292"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.298 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.299" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.299" = type { %"class.absl::optional_internal::optional_data.300" }
%"class.absl::optional_internal::optional_data.300" = type { %"class.absl::optional_internal::optional_data_base.301" }
%"class.absl::optional_internal::optional_data_base.301" = type { %"class.absl::optional_internal::optional_data_dtor_base.302" }
%"class.absl::optional_internal::optional_data_dtor_base.302" = type { i8, %union.anon.303 }
%union.anon.303 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%class.scoped_refptr.304 = type { %"class.cc::SyncedProperty.305"* }
%"class.cc::SyncedProperty.305" = type <{ %"class.base::RefCounted.306", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.306" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.308" = type { %"class.std::__1::__vector_base.309" }
%"class.std::__1::__vector_base.309" = type { %"class.std::__1::unique_ptr.310"*, %"class.std::__1::unique_ptr.310"*, %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.343", i8, [7 x i8] }>
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.313" }
%"class.base::flat_map.313" = type { %"class.base::internal::flat_tree.314" }
%"class.base::internal::flat_tree.314" = type { %"class.std::__1::vector.315" }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"struct.std::__1::pair.317"*, %"struct.std::__1::pair.317"*, %"class.std::__1::__compressed_pair.318" }
%"struct.std::__1::pair.317" = type opaque
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.std::__1::pair.317"* }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.326", %"class.std::__1::vector.326", %"class.std::__1::vector.333" }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { i8**, i8**, %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { i8** }
%"class.std::__1::vector.333" = type { %"class.std::__1::__vector_base.334" }
%"class.std::__1::__vector_base.334" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.335" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.cc::Region"* }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.std::__1::unique_ptr.310"* }
%"class.std::__1::unordered_map.357" = type { %"class.std::__1::__hash_table.358" }
%"class.std::__1::__hash_table.358" = type <{ %"class.std::__1::unique_ptr.359", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.377", [4 x i8] }>
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361", %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"struct.std::__1::__hash_node_base.362"** }
%"struct.std::__1::__hash_node_base.362" = type { %"struct.std::__1::__hash_node_base.362"* }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.std::__1::__bucket_list_deallocator.364" }
%"class.std::__1::__bucket_list_deallocator.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"struct.std::__1::__hash_node_base.362" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.base::internal::flat_tree.381" = type { %"class.std::__1::vector.382" }
%"class.std::__1::vector.382" = type { %"class.std::__1::__vector_base.383" }
%"class.std::__1::__vector_base.383" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.389" = type { %"class.std::__1::__hash_table.390" }
%"class.std::__1::__hash_table.390" = type <{ %"class.std::__1::unique_ptr.391", %"class.std::__1::__compressed_pair.401", %"class.std::__1::__compressed_pair.406", %"class.std::__1::__compressed_pair.409", [4 x i8] }>
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393", %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.std::__1::__hash_node_base.394"** }
%"struct.std::__1::__hash_node_base.394" = type { %"struct.std::__1::__hash_node_base.394"* }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.std::__1::__bucket_list_deallocator.396" }
%"class.std::__1::__bucket_list_deallocator.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"struct.std::__1::__hash_node_base.394" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::unordered_map.415" = type { %"class.std::__1::__hash_table.416" }
%"class.std::__1::__hash_table.416" = type <{ %"class.std::__1::unique_ptr.417", %"class.std::__1::__compressed_pair.427", %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.435", [4 x i8] }>
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419", %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"struct.std::__1::__hash_node_base.420"** }
%"struct.std::__1::__hash_node_base.420" = type { %"struct.std::__1::__hash_node_base.420"* }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.std::__1::__bucket_list_deallocator.422" }
%"class.std::__1::__bucket_list_deallocator.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"struct.std::__1::__hash_node_base.420" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::unordered_map.439" = type { %"class.std::__1::__hash_table.440" }
%"class.std::__1::__hash_table.440" = type <{ %"class.std::__1::unique_ptr.441", %"class.std::__1::__compressed_pair.451", %"class.std::__1::__compressed_pair.456", %"class.std::__1::__compressed_pair.459", [4 x i8] }>
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443", %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::__hash_node_base.444"** }
%"struct.std::__1::__hash_node_base.444" = type { %"struct.std::__1::__hash_node_base.444"* }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.std::__1::__bucket_list_deallocator.446" }
%"class.std::__1::__bucket_list_deallocator.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"struct.std::__1::__hash_node_base.444" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.base::flat_map.463" = type { %"class.base::internal::flat_tree.464" }
%"class.base::internal::flat_tree.464" = type { %"class.std::__1::vector.465" }
%"class.std::__1::vector.465" = type { %"class.std::__1::__vector_base.466" }
%"class.std::__1::__vector_base.466" = type { %"struct.std::__1::pair.467"*, %"struct.std::__1::pair.467"*, %"class.std::__1::__compressed_pair.468" }
%"struct.std::__1::pair.467" = type opaque
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::pair.467"* }
%"class.std::__1::vector.473" = type { %"class.std::__1::__vector_base.474" }
%"class.std::__1::__vector_base.474" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.554" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.475", %class.scoped_refptr.483, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.532", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.537", %"class.base::flat_map.544", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.343", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.478", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.483, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.478" = type { %"class.std::__1::__vector_base.479" }
%"class.std::__1::__vector_base.479" = type { %"class.std::__1::unique_ptr.480"*, %"class.std::__1::unique_ptr.480"*, %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.483, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.486", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.486" = type { %"class.std::__1::__hash_table.487" }
%"class.std::__1::__hash_table.487" = type <{ %"class.std::__1::unique_ptr.488", %"class.std::__1::__compressed_pair.498", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.506", [4 x i8] }>
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490", %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"struct.std::__1::__hash_node_base.491"** }
%"struct.std::__1::__hash_node_base.491" = type { %"struct.std::__1::__hash_node_base.491"* }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.std::__1::__bucket_list_deallocator.493" }
%"class.std::__1::__bucket_list_deallocator.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.std::__1::__hash_node_base.491" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.std::__1::unique_ptr.480"* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.525" }
%"struct.std::__1::__split_buffer" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.520" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.483 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.484", [4 x i8], i64, %class.scoped_refptr.485, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.484" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.485 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.532" = type { %"class.absl::optional_internal::optional_data.533" }
%"class.absl::optional_internal::optional_data.533" = type { %"class.absl::optional_internal::optional_data_base.534" }
%"class.absl::optional_internal::optional_data_base.534" = type { %"class.absl::optional_internal::optional_data_dtor_base.535" }
%"class.absl::optional_internal::optional_data_dtor_base.535" = type { i8, %union.anon.536 }
%union.anon.536 = type { %"class.gfx::Size" }
%"class.std::__1::vector.537" = type { %"class.std::__1::__vector_base.538" }
%"class.std::__1::__vector_base.538" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.544" = type { %"class.base::internal::flat_tree.545" }
%"class.base::internal::flat_tree.545" = type { %"class.std::__1::vector.546" }
%"class.std::__1::vector.546" = type { %"class.std::__1::__vector_base.547" }
%"class.std::__1::__vector_base.547" = type { %"struct.std::__1::pair.548"*, %"struct.std::__1::pair.548"*, %"class.std::__1::__compressed_pair.549" }
%"struct.std::__1::pair.548" = type opaque
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"struct.std::__1::pair.548"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.559" = type { %"class.std::__1::vector.473" }
%"class.std::__1::vector.573" = type { %"class.std::__1::__vector_base.574" }
%"class.std::__1::__vector_base.574" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::vector.588" = type { %"class.std::__1::__vector_base.589" }
%"class.std::__1::__vector_base.589" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.590" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.595 = type { %"class.cc::SyncedProperty.596"* }
%"class.cc::SyncedProperty.596" = type <{ %"class.base::RefCounted.597", %"class.cc::AdditionGroup.598", %"class.cc::AdditionGroup.598", %"class.cc::AdditionGroup.598", %"class.cc::AdditionGroup.598", %"class.cc::AdditionGroup.598", i8, [3 x i8] }>
%"class.base::RefCounted.597" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.598" = type { float }
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.606" = type { %"class.std::__1::__vector_base.607" }
%"class.std::__1::__vector_base.607" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.608" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.base::OnceCallback"* }
%"class.std::__1::vector.613" = type { %"class.std::__1::__vector_base.614" }
%"class.std::__1::__vector_base.614" = type { %"class.std::__1::unique_ptr.615"*, %"class.std::__1::unique_ptr.615"*, %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.1350" }
%"class.std::__1::__compressed_pair.1350" = type { %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1352", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1352" = type { %"class.absl::optional_internal::optional_data.1353" }
%"class.absl::optional_internal::optional_data.1353" = type { %"class.absl::optional_internal::optional_data_base.1354" }
%"class.absl::optional_internal::optional_data_base.1354" = type { %"class.absl::optional_internal::optional_data_dtor_base.1355" }
%"class.absl::optional_internal::optional_data_dtor_base.1355" = type { i8, %union.anon.1356 }
%union.anon.1356 = type { i32 }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.std::__1::unique_ptr.615"* }
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.627" = type { %"class.std::__1::__vector_base.628" }
%"class.std::__1::__vector_base.628" = type { %"class.std::__1::unique_ptr.629"*, %"class.std::__1::unique_ptr.629"*, %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::unique_ptr.629" = type opaque
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.std::__1::unique_ptr.629"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::vector.580" = type { %"class.std::__1::__vector_base.581" }
%"class.std::__1::__vector_base.581" = type { %"class.std::__1::unique_ptr.582"*, %"class.std::__1::unique_ptr.582"*, %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.1374" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.1375" }
%"struct.std::__1::__compressed_pair_elem.1375" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.std::__1::unique_ptr.582"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.638", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.644", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.870", %"class.std::__1::vector.732", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.908", %"class.base::WeakPtrFactory.908" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.644" = type { %"class.std::__1::__hash_table.645" }
%"class.std::__1::__hash_table.645" = type <{ %"class.std::__1::unique_ptr.646", %"class.std::__1::__compressed_pair.656", %"class.std::__1::__compressed_pair.661", %"class.std::__1::__compressed_pair.666", [4 x i8] }>
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648", %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"struct.std::__1::__hash_node_base.649"** }
%"struct.std::__1::__hash_node_base.649" = type { %"struct.std::__1::__hash_node_base.649"* }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.std::__1::__bucket_list_deallocator.651" }
%"class.std::__1::__bucket_list_deallocator.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"struct.std::__1::__hash_node_base.649" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.671, %"class.base::WeakPtr.672", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.673", %"class.base::flat_map.708", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.718", %"class.std::__1::map.718", i8, %"class.std::__1::vector.727", %"class.base::WeakPtrFactory.744" }
%class.scoped_refptr.671 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr.672" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.673" = type { %"class.std::__1::__vector_base.674" }
%"class.std::__1::__vector_base.674" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.703" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.693", %"class.absl::optional.698", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.675, %class.sk_sp.677, %"class.gfx::Rect", i32, %class.sk_sp.682, %class.sk_sp.690, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.675, %class.scoped_refptr.691 }
%class.sk_sp.677 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.678", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { i8* }
%class.sk_sp.682 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.683" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.676, i32, i32 }
%class.sk_sp.676 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.58" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.683" = type { %"class.std::__1::__vector_base.684" }
%"class.std::__1::__vector_base.684" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.685" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.690 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.675 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.691 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.692", [4 x i8] }>
%"class.base::RefCountedThreadSafe.692" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.693" = type { %"class.absl::optional_internal::optional_data.694" }
%"class.absl::optional_internal::optional_data.694" = type { %"class.absl::optional_internal::optional_data_base.695" }
%"class.absl::optional_internal::optional_data_base.695" = type { %"class.absl::optional_internal::optional_data_dtor_base.696" }
%"class.absl::optional_internal::optional_data_dtor_base.696" = type { i8, %union.anon.697 }
%union.anon.697 = type { i64 }
%"class.absl::optional.698" = type { %"class.absl::optional_internal::optional_data.699" }
%"class.absl::optional_internal::optional_data.699" = type { %"class.absl::optional_internal::optional_data_base.700" }
%"class.absl::optional_internal::optional_data_base.700" = type { %"class.absl::optional_internal::optional_data_dtor_base.701" }
%"class.absl::optional_internal::optional_data_dtor_base.701" = type { i8, %union.anon.702 }
%union.anon.702 = type { %"class.gfx::ColorSpace" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.708" = type { %"class.base::internal::flat_tree.709" }
%"class.base::internal::flat_tree.709" = type { %"class.std::__1::vector.710" }
%"class.std::__1::vector.710" = type { %"class.std::__1::__vector_base.711" }
%"class.std::__1::__vector_base.711" = type { %"struct.std::__1::pair.712"*, %"struct.std::__1::pair.712"*, %"class.std::__1::__compressed_pair.713" }
%"struct.std::__1::pair.712" = type opaque
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"struct.std::__1::pair.712"* }
%"class.std::__1::map.718" = type { %"class.std::__1::__tree.719" }
%"class.std::__1::__tree.719" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.720", %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.727" = type { %"class.std::__1::__vector_base.728" }
%"class.std::__1::__vector_base.728" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.739" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback.729", %class.scoped_refptr.730, i8, [7 x i8] }>
%"class.base::OnceCallback.729" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.91 }
%class.scoped_refptr.91 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.92", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.92" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.730 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.732", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.731", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.731" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.744" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.745", i8, %class.scoped_refptr.671, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.755" }
%"class.base::flat_map.745" = type { %"class.base::internal::flat_tree.746" }
%"class.base::internal::flat_tree.746" = type { %"class.std::__1::vector.747" }
%"class.std::__1::vector.747" = type { %"class.std::__1::__vector_base.748" }
%"class.std::__1::__vector_base.748" = type { %"struct.std::__1::pair.749"*, %"struct.std::__1::pair.749"*, %"class.std::__1::__compressed_pair.750" }
%"struct.std::__1::pair.749" = type { i32, %"class.std::__1::unique_ptr.1360" }
%"class.std::__1::unique_ptr.1360" = type { %"class.std::__1::__compressed_pair.1361" }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.1362" }
%"struct.std::__1::__compressed_pair_elem.1362" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"struct.std::__1::pair.749"* }
%"class.base::WeakPtrFactory.755" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.756", %"class.base::internal::flat_tree.756", %"class.std::__1::vector.757", i32, %"class.absl::optional.764", %"class.std::__1::unordered_map.769", %"class.std::__1::unordered_map.793", %"class.base::flat_map.817", %"class.base::WeakPtrFactory.827" }
%"class.base::internal::flat_tree.756" = type { %"class.std::__1::vector.134" }
%"class.std::__1::vector.757" = type { %"class.std::__1::__vector_base.758" }
%"class.std::__1::__vector_base.758" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.759" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.764" = type { %"class.absl::optional_internal::optional_data.765" }
%"class.absl::optional_internal::optional_data.765" = type { %"class.absl::optional_internal::optional_data_base.766" }
%"class.absl::optional_internal::optional_data_base.766" = type { %"class.absl::optional_internal::optional_data_dtor_base.767" }
%"class.absl::optional_internal::optional_data_dtor_base.767" = type { i8, %union.anon.768 }
%union.anon.768 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.769" = type { %"class.std::__1::__hash_table.770" }
%"class.std::__1::__hash_table.770" = type <{ %"class.std::__1::unique_ptr.771", %"class.std::__1::__compressed_pair.781", %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.789", [4 x i8] }>
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773", %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.774"** }
%"struct.std::__1::__hash_node_base.774" = type { %"struct.std::__1::__hash_node_base.774"* }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.std::__1::__bucket_list_deallocator.776" }
%"class.std::__1::__bucket_list_deallocator.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"struct.std::__1::__hash_node_base.774" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::unordered_map.793" = type { %"class.std::__1::__hash_table.794" }
%"class.std::__1::__hash_table.794" = type <{ %"class.std::__1::unique_ptr.795", %"class.std::__1::__compressed_pair.805", %"class.std::__1::__compressed_pair.810", %"class.std::__1::__compressed_pair.813", [4 x i8] }>
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797", %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::__hash_node_base.798"** }
%"struct.std::__1::__hash_node_base.798" = type { %"struct.std::__1::__hash_node_base.798"* }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.std::__1::__bucket_list_deallocator.800" }
%"class.std::__1::__bucket_list_deallocator.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"struct.std::__1::__hash_node_base.798" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.base::flat_map.817" = type { %"class.base::internal::flat_tree.818" }
%"class.base::internal::flat_tree.818" = type { %"class.std::__1::vector.819" }
%"class.std::__1::vector.819" = type { %"class.std::__1::__vector_base.820" }
%"class.std::__1::__vector_base.820" = type { %"struct.std::__1::pair.821"*, %"struct.std::__1::pair.821"*, %"class.std::__1::__compressed_pair.822" }
%"struct.std::__1::pair.821" = type { i32, i32 }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"struct.std::__1::pair.821"* }
%"class.base::WeakPtrFactory.827" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.828", %"class.std::__1::vector.836" }
%"class.std::__1::vector.828" = type { %"class.std::__1::__vector_base.829" }
%"class.std::__1::__vector_base.829" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.831" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.830, i16, i16, i32 }
%class.scoped_refptr.830 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.838" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.843", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.844" }
%"class.base::WeakPtrFactory.844" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.845" }
%"class.std::__1::__hash_table.845" = type <{ %"class.std::__1::unique_ptr.846", %"class.std::__1::__compressed_pair.856", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.865", [4 x i8] }>
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848", %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.std::__1::__hash_node_base.849"** }
%"struct.std::__1::__hash_node_base.849" = type { %"struct.std::__1::__hash_node_base.849"* }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.std::__1::__bucket_list_deallocator.851" }
%"class.std::__1::__bucket_list_deallocator.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"struct.std::__1::__hash_node_base.849" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::unordered_map.870" = type { %"class.std::__1::__hash_table.871" }
%"class.std::__1::__hash_table.871" = type <{ %"class.std::__1::unique_ptr.872", %"class.std::__1::__compressed_pair.882", %"class.std::__1::__compressed_pair.887", %"class.std::__1::__compressed_pair.890", [4 x i8] }>
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874", %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.std::__1::__hash_node_base.875"** }
%"struct.std::__1::__hash_node_base.875" = type { %"struct.std::__1::__hash_node_base.875"* }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.std::__1::__bucket_list_deallocator.877" }
%"class.std::__1::__bucket_list_deallocator.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"struct.std::__1::__hash_node_base.875" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::vector.732" = type { %"class.std::__1::__vector_base.733" }
%"class.std::__1::__vector_base.733" = type { %class.scoped_refptr.730*, %class.scoped_refptr.730*, %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %class.scoped_refptr.730* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.894" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.900", %"class.base::WeakPtrFactory.901" }
%"class.base::OnceCallback.900" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.901" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.902, i8, [7 x i8] }>
%class.scoped_refptr.902 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.903", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.903" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.904" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::WeakPtrFactory.908" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.912", %"class.absl::optional.912", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.912" = type { %"class.absl::optional_internal::optional_data.913" }
%"class.absl::optional_internal::optional_data.913" = type { %"class.absl::optional_internal::optional_data_base.914" }
%"class.absl::optional_internal::optional_data_base.914" = type { %"class.absl::optional_internal::optional_data_dtor_base.915" }
%"class.absl::optional_internal::optional_data_dtor_base.915" = type { i8, %union.anon.916 }
%union.anon.916 = type { %"struct.std::__1::pair.917" }
%"struct.std::__1::pair.917" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.940", %"class.absl::optional.940", %"class.absl::optional.940", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.959, %"class.absl::optional.960", %"class.std::__1::map.965" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.927" }
%"class.std::__1::deque.927" = type { %"class.std::__1::__deque_base.928" }
%"class.std::__1::__deque_base.928" = type { %"struct.std::__1::__split_buffer.929", i64, %"class.std::__1::__compressed_pair.936" }
%"struct.std::__1::__split_buffer.929" = type { %"struct.std::__1::pair.930"**, %"struct.std::__1::pair.930"**, %"struct.std::__1::pair.930"**, %"class.std::__1::__compressed_pair.931" }
%"struct.std::__1::pair.930" = type opaque
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::pair.930"** }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.940" = type { %"class.absl::optional_internal::optional_data.941" }
%"class.absl::optional_internal::optional_data.941" = type { %"class.absl::optional_internal::optional_data_base.942" }
%"class.absl::optional_internal::optional_data_base.942" = type { %"class.absl::optional_internal::optional_data_dtor_base.943" }
%"class.absl::optional_internal::optional_data_dtor_base.943" = type { i8, %union.anon.944 }
%union.anon.944 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.945", %"class.base::circular_deque.946", %"class.std::__1::map.948", %"class.absl::optional.693" }
%"class.base::RepeatingCallback.945" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.946" = type { %"class.base::internal::VectorBuffer.947", i64, i64 }
%"class.base::internal::VectorBuffer.947" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.948" = type { %"class.std::__1::__tree.949" }
%"class.std::__1::__tree.949" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.950", %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%struct.anon.959 = type { double, double }
%"class.absl::optional.960" = type { %"class.absl::optional_internal::optional_data.961" }
%"class.absl::optional_internal::optional_data.961" = type { %"class.absl::optional_internal::optional_data_base.962" }
%"class.absl::optional_internal::optional_data_base.962" = type { %"class.absl::optional_internal::optional_data_dtor_base.963" }
%"class.absl::optional_internal::optional_data_dtor_base.963" = type { i8, %union.anon.964 }
%union.anon.964 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.965" = type { %"class.std::__1::__tree.966" }
%"class.std::__1::__tree.966" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.967", %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.977" }
%"class.base::RingBuffer.977" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::unique_ptr.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.999" = type { %"class.std::__1::__tree.1000" }
%"class.std::__1::__tree.1000" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.1009" = type { %"class.std::__1::__hash_table.1010" }
%"class.std::__1::__hash_table.1010" = type <{ %"class.std::__1::unique_ptr.1011", %"class.std::__1::__compressed_pair.1021", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1029", [4 x i8] }>
%"class.std::__1::unique_ptr.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013", %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"struct.std::__1::__hash_node_base.1014"** }
%"struct.std::__1::__hash_node_base.1014" = type { %"struct.std::__1::__hash_node_base.1014"* }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.std::__1::__bucket_list_deallocator.1016" }
%"class.std::__1::__bucket_list_deallocator.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1014" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.1033" }
%"class.std::__1::vector.1033" = type { %"class.std::__1::__vector_base.1034" }
%"class.std::__1::__vector_base.1034" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.1040" }
%"class.std::__1::vector.1040" = type { %"class.std::__1::__vector_base.1041" }
%"class.std::__1::__vector_base.1041" = type { %"class.std::__1::unique_ptr.1042"*, %"class.std::__1::unique_ptr.1042"*, %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::unique_ptr.1042" = type opaque
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.std::__1::unique_ptr.1042"* }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.843" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.1054" = type { %"class.std::__1::__tree.1055" }
%"class.std::__1::__tree.1055" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1056", %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::Viewport"* }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.1078", %"class.base::internal::flat_tree.756", %"class.base::internal::flat_tree.756", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.1078" = type { %"class.base::internal::flat_tree.1079" }
%"class.base::internal::flat_tree.1079" = type { %"class.std::__1::vector.1080" }
%"class.std::__1::vector.1080" = type { %"class.std::__1::__vector_base.1081" }
%"class.std::__1::__vector_base.1081" = type { %"struct.std::__1::pair.1082"*, %"struct.std::__1::pair.1082"*, %"class.std::__1::__compressed_pair.1083" }
%"struct.std::__1::pair.1082" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.683", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1366", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1366" = type { %"class.std::__1::vector.1367" }
%"class.std::__1::vector.1367" = type { %"class.std::__1::__vector_base.1368" }
%"class.std::__1::__vector_base.1368" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1369" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"struct.std::__1::pair.1082"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.1088", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.1089" }
%"class.base::RepeatingCallback.1088" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1089" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.1093" }
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.base::internal::flat_tree.560" = type { %"class.std::__1::vector.561" }
%"class.std::__1::vector.561" = type { %"class.std::__1::__vector_base.562" }
%"class.std::__1::__vector_base.562" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.568" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.563", %"class.viz::SurfaceId" }
%"class.absl::optional.563" = type { %"class.absl::optional_internal::optional_data.564" }
%"class.absl::optional_internal::optional_data.564" = type { %"class.absl::optional_internal::optional_data_base.565" }
%"class.absl::optional_internal::optional_data_base.565" = type { %"class.absl::optional_internal::optional_data_dtor_base.566" }
%"class.absl::optional_internal::optional_data_dtor_base.566" = type { i8, %union.anon.567 }
%union.anon.567 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.viz::SurfaceRange"* }
%"class.absl::optional.1108" = type { %"class.absl::optional_internal::optional_data.1109" }
%"class.absl::optional_internal::optional_data.1109" = type { %"class.absl::optional_internal::optional_data_base.1110" }
%"class.absl::optional_internal::optional_data_base.1110" = type { %"class.absl::optional_internal::optional_data_dtor_base.1111" }
%"class.absl::optional_internal::optional_data_dtor_base.1111" = type { i8, [7 x i8], %union.anon.1112 }
%union.anon.1112 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.1113", %"struct.viz::Selection.1118", i8, %"class.absl::optional.1119", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.1124", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.1113" = type { %"class.absl::optional_internal::optional_data.1114" }
%"class.absl::optional_internal::optional_data.1114" = type { %"class.absl::optional_internal::optional_data_base.1115" }
%"class.absl::optional_internal::optional_data_base.1115" = type { %"class.absl::optional_internal::optional_data_dtor_base.1116" }
%"class.absl::optional_internal::optional_data_dtor_base.1116" = type { i8, %union.anon.1117 }
%union.anon.1117 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection.1118" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.absl::optional.1119" = type { %"class.absl::optional_internal::optional_data.1120" }
%"class.absl::optional_internal::optional_data.1120" = type { %"class.absl::optional_internal::optional_data_base.1121" }
%"class.absl::optional_internal::optional_data_base.1121" = type { %"class.absl::optional_internal::optional_data_dtor_base.1122" }
%"class.absl::optional_internal::optional_data_dtor_base.1122" = type { i8, %union.anon.1123 }
%union.anon.1123 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.1124" = type { %"class.absl::optional_internal::optional_data.1125" }
%"class.absl::optional_internal::optional_data.1125" = type { %"class.absl::optional_internal::optional_data_base.1126" }
%"class.absl::optional_internal::optional_data_base.1126" = type { %"class.absl::optional_internal::optional_data_dtor_base.1127" }
%"class.absl::optional_internal::optional_data_dtor_base.1127" = type { i8, %union.anon.1128 }
%union.anon.1128 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.1129" }
%"class.base::circular_deque.1129" = type { %"class.base::internal::VectorBuffer.1130", i64, i64 }
%"class.base::internal::VectorBuffer.1130" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.606", %"class.std::__1::vector.606" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.1131", %"class.base::flat_map.1137", %"class.base::flat_map.1147", %"class.base::RepeatingCallback.1157", %"class.std::__1::vector.1158", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.1166", i64, i64 }
%"class.std::__1::unique_ptr.1131" = type { %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.1137" = type { %"class.base::internal::flat_tree.1138" }
%"class.base::internal::flat_tree.1138" = type { %"class.std::__1::vector.1139" }
%"class.std::__1::vector.1139" = type { %"class.std::__1::__vector_base.1140" }
%"class.std::__1::__vector_base.1140" = type { %"struct.std::__1::pair.1141"*, %"struct.std::__1::pair.1141"*, %"class.std::__1::__compressed_pair.1142" }
%"struct.std::__1::pair.1141" = type opaque
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"struct.std::__1::pair.1141"* }
%"class.base::flat_map.1147" = type { %"class.base::internal::flat_tree.1148" }
%"class.base::internal::flat_tree.1148" = type { %"class.std::__1::vector.1149" }
%"class.std::__1::vector.1149" = type { %"class.std::__1::__vector_base.1150" }
%"class.std::__1::__vector_base.1150" = type { %"struct.std::__1::pair.1151"*, %"struct.std::__1::pair.1151"*, %"class.std::__1::__compressed_pair.1152" }
%"struct.std::__1::pair.1151" = type opaque
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"struct.std::__1::pair.1151"* }
%"class.base::RepeatingCallback.1157" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.1158" = type { %"class.std::__1::__vector_base.1159" }
%"class.std::__1::__vector_base.1159" = type { %"class.std::__1::unique_ptr.1160"*, %"class.std::__1::unique_ptr.1160"*, %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::unique_ptr.1160" = type opaque
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"class.std::__1::unique_ptr.1160"* }
%"class.base::flat_map.1166" = type { %"class.base::internal::flat_tree.1167" }
%"class.base::internal::flat_tree.1167" = type { %"class.std::__1::vector.1168" }
%"class.std::__1::vector.1168" = type { %"class.std::__1::__vector_base.1169" }
%"class.std::__1::__vector_base.1169" = type { %"struct.std::__1::pair.1170"*, %"struct.std::__1::pair.1170"*, %"class.std::__1::__compressed_pair.1171" }
%"struct.std::__1::pair.1170" = type opaque
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"struct.std::__1::pair.1170"* }
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.1182", %"class.base::internal::flat_tree.1192" }
%"class.base::flat_map.1182" = type { %"class.base::internal::flat_tree.1183" }
%"class.base::internal::flat_tree.1183" = type { %"class.std::__1::vector.1184" }
%"class.std::__1::vector.1184" = type { %"class.std::__1::__vector_base.1185" }
%"class.std::__1::__vector_base.1185" = type { %"struct.std::__1::pair.1186"*, %"struct.std::__1::pair.1186"*, %"class.std::__1::__compressed_pair.1187" }
%"struct.std::__1::pair.1186" = type opaque
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"struct.std::__1::pair.1186"* }
%"class.base::internal::flat_tree.1192" = type { %"class.std::__1::vector.1193" }
%"class.std::__1::vector.1193" = type { %"class.std::__1::__vector_base.1194" }
%"class.std::__1::__vector_base.1194" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.1205" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.1195", %"class.absl::optional.1200", %"struct.cc::ElementId" }
%"class.absl::optional.1195" = type { %"class.absl::optional_internal::optional_data.1196" }
%"class.absl::optional_internal::optional_data.1196" = type { %"class.absl::optional_internal::optional_data_base.1197" }
%"class.absl::optional_internal::optional_data_base.1197" = type { %"class.absl::optional_internal::optional_data_dtor_base.1198" }
%"class.absl::optional_internal::optional_data_dtor_base.1198" = type { i8, %union.anon.1199 }
%union.anon.1199 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1200" = type { %"class.absl::optional_internal::optional_data.1201" }
%"class.absl::optional_internal::optional_data.1201" = type { %"class.absl::optional_internal::optional_data_base.1202" }
%"class.absl::optional_internal::optional_data_base.1202" = type { %"class.absl::optional_internal::optional_data_dtor_base.1203" }
%"class.absl::optional_internal::optional_data_dtor_base.1203" = type { i8, %union.anon.1204 }
%union.anon.1204 = type { i32 }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.1222" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.1210", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.1210" = type { %"class.std::__1::__deque_base.1211" }
%"class.std::__1::__deque_base.1211" = type { %"struct.std::__1::__split_buffer.1212", i64, %"class.std::__1::__compressed_pair.1218" }
%"struct.std::__1::__split_buffer.1212" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.1213" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::circular_deque.1222" = type { %"class.base::internal::VectorBuffer.1223", i64, i64 }
%"class.base::internal::VectorBuffer.1223" = type { %"struct.std::__1::pair.1224"*, i64 }
%"struct.std::__1::pair.1224" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.1225", %"class.std::__1::map.1230", %"class.std::__1::map.1230" }
%"class.absl::optional.1225" = type { %"class.absl::optional_internal::optional_data.1226" }
%"class.absl::optional_internal::optional_data.1226" = type { %"class.absl::optional_internal::optional_data_base.1227" }
%"class.absl::optional_internal::optional_data_base.1227" = type { %"class.absl::optional_internal::optional_data_dtor_base.1228" }
%"class.absl::optional_internal::optional_data_dtor_base.1228" = type { i8, [3 x i8], %union.anon.1229 }
%union.anon.1229 = type { %"class.gfx::Transform" }
%"class.std::__1::map.1230" = type { %"class.std::__1::__tree.1231" }
%"class.std::__1::__tree.1231" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1232", %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.1239", %"class.std::__1::vector.613" }
%"class.std::__1::vector.1239" = type { %"class.std::__1::__vector_base.1240" }
%"class.std::__1::__vector_base.1240" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.1241" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.1246" = type { %"class.std::__1::__compressed_pair.1247" }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.843", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.1252" }
%"class.base::WeakPtrFactory.1252" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.1253", %"class.std::__1::map.1260", i64 }
%"class.std::__1::list.1253" = type { %"class.std::__1::__list_imp.1254" }
%"class.std::__1::__list_imp.1254" = type { %"struct.std::__1::__list_node_base.1255", %"class.std::__1::__compressed_pair.1256" }
%"struct.std::__1::__list_node_base.1255" = type { %"struct.std::__1::__list_node_base.1255"*, %"struct.std::__1::__list_node_base.1255"* }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.1260" = type { %"class.std::__1::__tree.1261" }
%"class.std::__1::__tree.1261" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1262", %"class.std::__1::__compressed_pair.1266" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.1271", %"class.base::internal::flat_tree.1281", %"class.base::internal::flat_tree.1281" }
%"class.base::flat_map.1271" = type { %"class.base::internal::flat_tree.1272" }
%"class.base::internal::flat_tree.1272" = type { %"class.std::__1::vector.1273" }
%"class.std::__1::vector.1273" = type { %"class.std::__1::__vector_base.1274" }
%"class.std::__1::__vector_base.1274" = type { %"struct.std::__1::pair.1275"*, %"struct.std::__1::pair.1275"*, %"class.std::__1::__compressed_pair.1276" }
%"struct.std::__1::pair.1275" = type opaque
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"struct.std::__1::pair.1275"* }
%"class.base::internal::flat_tree.1281" = type { %"class.std::__1::vector.1282" }
%"class.std::__1::vector.1282" = type { %"class.std::__1::__vector_base.1283" }
%"class.std::__1::__vector_base.1283" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.base::WeakPtrFactory.1289" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::ThreadedInputHandler" = type { %"class.cc::InputHandler", %"class.cc::InputDelegateForCompositor", %"class.cc::CompositorDelegateForInput"*, %"class.cc::InputHandlerClient"*, %"class.std::__1::unique_ptr.1290", %"class.std::__1::unique_ptr.1296", %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"class.absl::optional.1323", %"class.absl::optional.1328", %"class.absl::optional.1328", %"struct.cc::TargetSnapAreaElementIds", %"class.base::internal::flat_tree.1333", %"struct.cc::ElementId", %"struct.cc::ElementId", %"struct.cc::ElementId", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.base::WeakPtrFactory.1341" }
%"class.cc::InputHandler" = type { i32 (...)** }
%"class.cc::InputHandlerClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1290" = type { %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.cc::ScrollElasticityHelper"* }
%"class.cc::ScrollElasticityHelper" = type opaque
%"class.std::__1::unique_ptr.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.cc::ScrollbarController"* }
%"class.cc::ScrollbarController" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i8, %"class.gfx::PointF", [4 x i8], %"class.absl::optional.1299", %"class.absl::optional.1304", %"class.absl::optional.1309", i8, %"class.std::__1::unique_ptr.1314" }
%"class.absl::optional.1299" = type { %"class.absl::optional_internal::optional_data.1300" }
%"class.absl::optional_internal::optional_data.1300" = type { %"class.absl::optional_internal::optional_data_base.1301" }
%"class.absl::optional_internal::optional_data_base.1301" = type { %"class.absl::optional_internal::optional_data_dtor_base.1302" }
%"class.absl::optional_internal::optional_data_dtor_base.1302" = type { i8, [7 x i8], %union.anon.1303 }
%union.anon.1303 = type { %"struct.cc::ScrollbarController::CapturedScrollbarMetadata" }
%"struct.cc::ScrollbarController::CapturedScrollbarMetadata" = type <{ %"struct.cc::ElementId", i32, [4 x i8] }>
%"class.absl::optional.1304" = type { %"class.absl::optional_internal::optional_data.1305" }
%"class.absl::optional_internal::optional_data.1305" = type { %"class.absl::optional_internal::optional_data_base.1306" }
%"class.absl::optional_internal::optional_data_base.1306" = type { %"class.absl::optional_internal::optional_data_dtor_base.1307" }
%"class.absl::optional_internal::optional_data_dtor_base.1307" = type { i8, %union.anon.1308 }
%union.anon.1308 = type { %"struct.cc::ScrollbarController::AutoScrollState" }
%"struct.cc::ScrollbarController::AutoScrollState" = type { i32, float, float, i32 }
%"class.absl::optional.1309" = type { %"class.absl::optional_internal::optional_data.1310" }
%"class.absl::optional_internal::optional_data.1310" = type { %"class.absl::optional_internal::optional_data_base.1311" }
%"class.absl::optional_internal::optional_data_base.1311" = type { %"class.absl::optional_internal::optional_data_dtor_base.1312" }
%"class.absl::optional_internal::optional_data_dtor_base.1312" = type { i8, %union.anon.1313 }
%union.anon.1313 = type { %"struct.cc::ScrollbarController::DragState" }
%"struct.cc::ScrollbarController::DragState" = type { %"class.gfx::PointF", float, float, float }
%"class.std::__1::unique_ptr.1314" = type { %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.1316" }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"class.base::internal::CancelableCallbackImpl"* }
%"class.absl::optional.1323" = type { %"class.absl::optional_internal::optional_data.1324" }
%"class.absl::optional_internal::optional_data.1324" = type { %"class.absl::optional_internal::optional_data_base.1325" }
%"class.absl::optional_internal::optional_data_base.1325" = type { %"class.absl::optional_internal::optional_data_dtor_base.1326" }
%"class.absl::optional_internal::optional_data_dtor_base.1326" = type { i8, %union.anon.1327 }
%union.anon.1327 = type { i32 }
%"class.absl::optional.1328" = type { %"class.absl::optional_internal::optional_data.1329" }
%"class.absl::optional_internal::optional_data.1329" = type { %"class.absl::optional_internal::optional_data_base.1330" }
%"class.absl::optional_internal::optional_data_base.1330" = type { %"class.absl::optional_internal::optional_data_dtor_base.1331" }
%"class.absl::optional_internal::optional_data_dtor_base.1331" = type { i8, %union.anon.1332 }
%union.anon.1332 = type { %"class.cc::ScrollState" }
%"class.cc::ScrollState" = type { %"class.cc::ScrollStateData" }
%"class.cc::ScrollStateData" = type { double, double, double, double, i32, i32, double, double, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.cc::ElementId" }
%"class.base::internal::flat_tree.1333" = type { %"class.std::__1::vector.1334" }
%"class.std::__1::vector.1334" = type { %"class.std::__1::__vector_base.1335" }
%"class.std::__1::__vector_base.1335" = type { %"struct.cc::ElementId"*, %"struct.cc::ElementId"*, %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"struct.cc::ElementId"* }
%"class.base::WeakPtrFactory.1341" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::flat_tree.1342" = type { %"class.std::__1::vector.1343" }
%"class.std::__1::vector.1343" = type { %"class.std::__1::__vector_base.1344" }
%"class.std::__1::__vector_base.1344" = type { %"class.cc::ScrollbarLayerImplBase"**, %"class.cc::ScrollbarLayerImplBase"**, %"class.std::__1::__compressed_pair.1345" }
%"class.cc::ScrollbarLayerImplBase" = type { %"class.cc::LayerImpl.base", %"struct.cc::ElementId", i8, float, float, float, float, i32, i8, float }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.cc::ScrollbarLayerImplBase"** }

@_ZN2cc8ViewportC1EPNS_17LayerTreeHostImplE = hidden unnamed_addr alias void (%"class.cc::Viewport"*, %"class.cc::LayerTreeHostImpl"*), void (%"class.cc::Viewport"*, %"class.cc::LayerTreeHostImpl"*)* @_ZN2cc8ViewportC2EPNS_17LayerTreeHostImplE

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.cc::Viewport"* @_ZN2cc8Viewport6CreateEPNS_17LayerTreeHostImplE(%"class.cc::LayerTreeHostImpl"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12
  %3 = bitcast i8* %2 to %"class.cc::Viewport"*
  %4 = bitcast i8* %2 to %"class.cc::LayerTreeHostImpl"**
  store %"class.cc::LayerTreeHostImpl"* %0, %"class.cc::LayerTreeHostImpl"** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 12
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4
  ret %"class.cc::Viewport"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc8ViewportC2EPNS_17LayerTreeHostImplE(%"class.cc::Viewport"* nocapture, %"class.cc::LayerTreeHostImpl"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  store %"class.cc::LayerTreeHostImpl"* %1, %"class.cc::LayerTreeHostImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 1
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc8Viewport3PanERKN3gfx9Vector2dFE(%"class.cc::Viewport"* nocapture readonly, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Vector2dF"*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = bitcast %"class.gfx::Vector2dF"* %1 to i64*
  %7 = load i64, i64* %6, align 4
  store i64 %7, i64* %3, align 8
  %8 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %9 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %9, i64 0, i32 35, i32 0, i32 0, i32 0
  %11 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %12 = tail call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %11) #13
  %13 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %11) #13
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %12, i64 0, i32 3, i32 0
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %12, i64 0, i32 2, i32 0
  br label %31

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %12, i64 0, i32 6
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %12, i64 0, i32 5, i32 0
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %12, i64 0, i32 3, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %26, %24
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi float [ %27, %22 ], [ 1.000000e+00, %18 ]
  %30 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %12, i64 0, i32 1, i32 0
  br label %31

31:                                               ; preds = %14, %28
  %32 = phi float* [ %17, %14 ], [ %30, %28 ]
  %33 = phi float [ %16, %14 ], [ %29, %28 ]
  %34 = load float, float* %32, align 4
  %35 = fmul float %33, %34
  %36 = fdiv float 1.000000e+00, %35
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %4, float %36, float %36) #13
  %37 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %8, align 8
  %38 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %37, i64 0, i32 35, i32 0, i32 0, i32 0
  %39 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %39, i64 0, i32 5, i32 6
  %41 = call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %37) #13
  %42 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %8, align 8
  %43 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %42, i64 0, i32 35, i32 0, i32 0, i32 0
  %44 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %43, align 8
  %45 = call <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %40, %"struct.cc::ScrollNode"* dereferenceable(168) %41, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %4, %"class.cc::LayerTreeImpl"* %44) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(120) %"class.cc::ScrollTree"* @_ZNK2cc8Viewport11scroll_treeEv(%"class.cc::Viewport"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %3 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %3, i64 0, i32 35, i32 0, i32 0, i32 0
  %5 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %5, i64 0, i32 5, i32 6
  ret %"class.cc::ScrollTree"* %6
}

declare <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"*, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* dereferenceable(8), %"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZNK2cc8Viewport15InnerScrollNodeEv(%"class.cc::Viewport"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %3 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %4 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %3) #13
  ret %"struct.cc::ScrollNode"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN2cc8Viewport8ScrollByERKN3gfx9Vector2dFERKNS1_5PointEbbb(%"class.cc::Viewport"* nocapture readonly, %"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Point"* dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %7 = alloca i64, align 8
  %8 = alloca <2 x float>, align 8
  %9 = alloca i64, align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca i64, align 8
  %12 = alloca <2 x float>, align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.gfx::Vector2dF"*
  %15 = alloca <2 x float>, align 8
  %16 = bitcast <2 x float>* %15 to %"class.gfx::Vector2dF"*
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.gfx::Vector2dF"*
  %19 = alloca <2 x float>, align 8
  %20 = bitcast <2 x float>* %19 to %"class.gfx::Vector2dF"*
  %21 = alloca <2 x float>, align 8
  %22 = bitcast <2 x float>* %21 to %"class.gfx::Vector2dF"*
  %23 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %24 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %23, align 8
  %25 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %24) #13
  %26 = icmp eq %"struct.cc::ScrollNode"* %25, null
  br i1 %26, label %95, label %27

27:                                               ; preds = %6
  %28 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = bitcast %"class.gfx::Vector2dF"* %1 to i64*
  %30 = load i64, i64* %29, align 4
  store i64 %30, i64* %13, align 8
  br i1 %4, label %31, label %48

31:                                               ; preds = %27
  %32 = tail call zeroext i1 @_ZNK2cc8Viewport34ShouldBrowserControlsConsumeScrollERKN3gfx9Vector2dFE(%"class.cc::Viewport"* %0, %"class.gfx::Vector2dF"* dereferenceable(8) %1)
  br i1 %32, label %33, label %48

33:                                               ; preds = %31
  %34 = bitcast <2 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %23, align 8
  %36 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %35, i64 0, i32 46, i32 0, i32 0, i32 0
  %37 = load %"class.cc::BrowserControlsOffsetManager"*, %"class.cc::BrowserControlsOffsetManager"** %36, align 8
  %38 = tail call <2 x float> @_ZN2cc28BrowserControlsOffsetManager8ScrollByERKN3gfx9Vector2dFE(%"class.cc::BrowserControlsOffsetManager"* %37, %"class.gfx::Vector2dF"* dereferenceable(8) %1) #13
  %39 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = bitcast i64* %9 to %"class.gfx::Vector2dF"*
  %41 = bitcast <2 x float>* %10 to %"class.gfx::Vector2dF"*
  %42 = load i64, i64* %29, align 4
  store i64 %42, i64* %9, align 8
  %43 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %38
  store <2 x float> %44, <2 x float>* %10, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %40, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %41) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  %45 = load i64, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  %46 = bitcast <2 x float>* %15 to i64*
  store i64 %45, i64* %46, align 8
  call void @_ZN3gfx9Vector2dF8SubtractERKS0_(%"class.gfx::Vector2dF"* nonnull %14, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  %47 = load i64, i64* %13, align 8
  br label %48

48:                                               ; preds = %33, %31, %27
  %49 = phi i64 [ %47, %33 ], [ %30, %31 ], [ %30, %27 ]
  %50 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  store i64 %49, i64* %17, align 8
  %51 = bitcast <2 x float>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  %52 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %23, align 8
  %53 = call dereferenceable(344) %"class.cc::ThreadedInputHandler"* @_ZN2cc17LayerTreeHostImpl15GetInputHandlerEv(%"class.cc::LayerTreeHostImpl"* %52) #13
  %54 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %23, align 8
  %55 = call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %54) #13
  %56 = call <2 x float> @_ZN2cc20ThreadedInputHandler16ScrollSingleNodeERKNS_10ScrollNodeERKN3gfx9Vector2dFERKNS4_5PointEb(%"class.cc::ThreadedInputHandler"* %53, %"struct.cc::ScrollNode"* dereferenceable(168) %55, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %18, %"class.gfx::Point"* dereferenceable(8) %2, i1 zeroext %3) #13
  store <2 x float> %56, <2 x float>* %19, align 8
  call void @_ZN3gfx9Vector2dF8SubtractERKS0_(%"class.gfx::Vector2dF"* nonnull %18, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br i1 %5, label %57, label %64

57:                                               ; preds = %48
  %58 = bitcast <2 x float>* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  %59 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %23, align 8
  %60 = call dereferenceable(344) %"class.cc::ThreadedInputHandler"* @_ZN2cc17LayerTreeHostImpl15GetInputHandlerEv(%"class.cc::LayerTreeHostImpl"* %59) #13
  %61 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %23, align 8
  %62 = call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %61) #13
  %63 = call <2 x float> @_ZN2cc20ThreadedInputHandler16ScrollSingleNodeERKNS_10ScrollNodeERKN3gfx9Vector2dFERKNS4_5PointEb(%"class.cc::ThreadedInputHandler"* %60, %"struct.cc::ScrollNode"* dereferenceable(168) %62, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %18, %"class.gfx::Point"* dereferenceable(8) %2, i1 zeroext %3) #13
  store <2 x float> %63, <2 x float>* %21, align 8
  call void @_ZN3gfx9Vector2dF8SubtractERKS0_(%"class.gfx::Vector2dF"* nonnull %18, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %22) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #13
  br label %64

64:                                               ; preds = %57, %48
  %65 = bitcast i64* %17 to <2 x float>*
  %66 = load <2 x float>, <2 x float>* %65, align 8
  %67 = extractelement <2 x float> %66, i32 0
  %68 = call float @llvm.fabs.f32(float %67) #13
  %69 = fcmp olt float %68, 0x3FB99999A0000000
  %70 = insertelement <2 x float> %66, float 0.000000e+00, i32 0
  %71 = select i1 %69, <2 x float> %70, <2 x float> %66
  %72 = extractelement <2 x float> %71, i32 1
  %73 = call float @llvm.fabs.f32(float %72) #13
  %74 = fcmp olt float %73, 0x3FB99999A0000000
  %75 = insertelement <2 x float> %71, float 0.000000e+00, i32 1
  %76 = select i1 %74, <2 x float> %75, <2 x float> %71
  %77 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77)
  %78 = bitcast i64* %7 to %"class.gfx::Vector2dF"*
  %79 = bitcast <2 x float>* %8 to %"class.gfx::Vector2dF"*
  %80 = load i64, i64* %29, align 4
  store i64 %80, i64* %7, align 8
  %81 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #13
  %82 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %76
  store <2 x float> %82, <2 x float>* %8, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %78, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %79) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #13
  %83 = bitcast i64* %7 to <2 x float>*
  %84 = load <2 x float>, <2 x float>* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  %85 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85)
  %86 = bitcast i64* %11 to %"class.gfx::Vector2dF"*
  %87 = bitcast <2 x float>* %12 to %"class.gfx::Vector2dF"*
  %88 = load i64, i64* %13, align 8
  store i64 %88, i64* %11, align 8
  %89 = bitcast <2 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  %90 = bitcast i64* %17 to <2 x float>*
  %91 = load <2 x float>, <2 x float>* %90, align 8
  %92 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %91
  store <2 x float> %92, <2 x float>* %12, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %86, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %87) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %93 = bitcast i64* %11 to <2 x float>*
  %94 = load <2 x float>, <2 x float>* %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %95

95:                                               ; preds = %6, %64
  %96 = phi <2 x float> [ %84, %64 ], [ zeroinitializer, %6 ]
  %97 = phi <2 x float> [ %94, %64 ], [ zeroinitializer, %6 ]
  %98 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %96, 0
  %99 = insertvalue { <2 x float>, <2 x float> } %98, <2 x float> %97, 1
  ret { <2 x float>, <2 x float> } %99
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZNK2cc8Viewport15OuterScrollNodeEv(%"class.cc::Viewport"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %3 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %4 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %3) #13
  ret %"struct.cc::ScrollNode"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc8Viewport34ShouldBrowserControlsConsumeScrollERKN3gfx9Vector2dFE(%"class.cc::Viewport"* nocapture readonly, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = fcmp olt float %4, 0.000000e+00
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %8 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %7, align 8
  %9 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %8) #13
  %10 = icmp eq %"struct.cc::ScrollNode"* %9, null
  br i1 %10, label %33, label %11

11:                                               ; preds = %6
  %12 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %7, align 8
  %13 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %12, i64 0, i32 35, i32 0, i32 0, i32 0
  %14 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %14, i64 0, i32 5, i32 6
  %16 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %12) #13
  %17 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %16, i64 0, i32 8, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %15, i64 %18) #13
  %20 = fadd <2 x float> %19, zeroinitializer
  %21 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %7, align 8
  %22 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %21) #13
  %23 = icmp eq %"struct.cc::ScrollNode"* %22, null
  br i1 %23, label %33, label %24

24:                                               ; preds = %11
  %25 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %7, align 8
  %26 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %25, i64 0, i32 35, i32 0, i32 0, i32 0
  %27 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %27, i64 0, i32 5, i32 6
  %29 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 0, i32 8, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %28, i64 %30) #13
  %32 = fadd <2 x float> %20, %31
  br label %33

33:                                               ; preds = %6, %11, %24
  %34 = phi <2 x float> [ zeroinitializer, %6 ], [ %20, %11 ], [ %32, %24 ]
  %35 = extractelement <2 x float> %34, i32 1
  %36 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %7, align 8
  %37 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %36, i64 0, i32 35, i32 0, i32 0, i32 0
  %38 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %38, i64 0, i32 5, i32 6
  %40 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %36) #13
  %41 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %39, i32 %42) #13
  %44 = fadd <2 x float> %43, zeroinitializer
  %45 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %7, align 8
  %46 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %45) #13
  %47 = icmp eq %"struct.cc::ScrollNode"* %46, null
  br i1 %47, label %57, label %48

48:                                               ; preds = %33
  %49 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %7, align 8
  %50 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %49, i64 0, i32 35, i32 0, i32 0, i32 0
  %51 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %51, i64 0, i32 5, i32 6
  %53 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %52, i32 %54) #13
  %56 = fadd <2 x float> %44, %55
  br label %57

57:                                               ; preds = %33, %48
  %58 = phi <2 x float> [ %44, %33 ], [ %56, %48 ]
  %59 = extractelement <2 x float> %58, i32 1
  %60 = fcmp olt float %35, %59
  br label %61

61:                                               ; preds = %57, %2
  %62 = phi i1 [ true, %2 ], [ %60, %57 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc8Viewport21ScrollBrowserControlsERKN3gfx9Vector2dFE(%"class.cc::Viewport"* nocapture readonly, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca <2 x float>, align 8
  %5 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %6 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %6, i64 0, i32 46, i32 0, i32 0, i32 0
  %8 = load %"class.cc::BrowserControlsOffsetManager"*, %"class.cc::BrowserControlsOffsetManager"** %7, align 8
  %9 = tail call <2 x float> @_ZN2cc28BrowserControlsOffsetManager8ScrollByERKN3gfx9Vector2dFE(%"class.cc::BrowserControlsOffsetManager"* %8, %"class.gfx::Vector2dF"* dereferenceable(8) %1) #13
  %10 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = bitcast i64* %3 to %"class.gfx::Vector2dF"*
  %12 = bitcast <2 x float>* %4 to %"class.gfx::Vector2dF"*
  %13 = bitcast %"class.gfx::Vector2dF"* %1 to i64*
  %14 = load i64, i64* %13, align 4
  store i64 %14, i64* %3, align 8
  %15 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %9
  store <2 x float> %16, <2 x float>* %4, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %11, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %17 = bitcast i64* %3 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  ret <2 x float> %18
}

declare dereferenceable(344) %"class.cc::ThreadedInputHandler"* @_ZN2cc17LayerTreeHostImpl15GetInputHandlerEv(%"class.cc::LayerTreeHostImpl"*) local_unnamed_addr #6

declare <2 x float> @_ZN2cc20ThreadedInputHandler16ScrollSingleNodeERKNS_10ScrollNodeERKN3gfx9Vector2dFERKNS4_5PointEb(%"class.cc::ThreadedInputHandler"*, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Point"* dereferenceable(8), i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK2cc8Viewport16AdjustOverscrollERKN3gfx9Vector2dFE(%"class.cc::Viewport"* nocapture readnone, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #8 align 2 {
  %3 = bitcast %"class.gfx::Vector2dF"* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = extractelement <2 x float> %4, i32 0
  %6 = tail call float @llvm.fabs.f32(float %5) #13
  %7 = fcmp olt float %6, 0x3FB99999A0000000
  %8 = insertelement <2 x float> %4, float 0.000000e+00, i32 0
  %9 = select i1 %7, <2 x float> %8, <2 x float> %4
  %10 = extractelement <2 x float> %9, i32 1
  %11 = tail call float @llvm.fabs.f32(float %10) #13
  %12 = fcmp olt float %11, 0x3FB99999A0000000
  %13 = insertelement <2 x float> %9, float 0.000000e+00, i32 1
  %14 = select i1 %12, <2 x float> %13, <2 x float> %9
  ret <2 x float> %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc8Viewport9CanScrollERKNS_10ScrollNodeERKNS_11ScrollStateE(%"class.cc::Viewport"* nocapture readonly, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168), %"class.cc::ScrollState"* dereferenceable(80)) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %5 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %4, align 8
  %6 = tail call dereferenceable(344) %"class.cc::ThreadedInputHandler"* @_ZN2cc17LayerTreeHostImpl15GetInputHandlerEv(%"class.cc::LayerTreeHostImpl"* %5) #13
  %7 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %4, align 8
  %8 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %7) #13
  %9 = tail call zeroext i1 @_ZN2cc20ThreadedInputHandler15CanConsumeDeltaERKNS_11ScrollStateERKNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* %6, %"class.cc::ScrollState"* dereferenceable(80) %2, %"struct.cc::ScrollNode"* dereferenceable(168) %8) #13
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %3
  %15 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %4, align 8
  %16 = tail call dereferenceable(344) %"class.cc::ThreadedInputHandler"* @_ZN2cc17LayerTreeHostImpl15GetInputHandlerEv(%"class.cc::LayerTreeHostImpl"* %15) #13
  %17 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %4, align 8
  %18 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %17) #13
  %19 = tail call zeroext i1 @_ZN2cc20ThreadedInputHandler15CanConsumeDeltaERKNS_11ScrollStateERKNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* %16, %"class.cc::ScrollState"* dereferenceable(80) %2, %"struct.cc::ScrollNode"* dereferenceable(168) %18) #13
  %20 = or i1 %9, %19
  br label %21

21:                                               ; preds = %3, %14
  %22 = phi i1 [ %20, %14 ], [ %9, %3 ]
  ret i1 %22
}

declare zeroext i1 @_ZN2cc20ThreadedInputHandler15CanConsumeDeltaERKNS_11ScrollStateERKNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"* dereferenceable(80), %"struct.cc::ScrollNode"* dereferenceable(168)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc8Viewport19ComputeClampedDeltaERKN3gfx9Vector2dFE(%"class.cc::Viewport"* nocapture readonly, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %"class.gfx::Vector2dF"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.gfx::Vector2dF"*
  %10 = alloca <2 x float>, align 8
  %11 = bitcast <2 x float>* %10 to %"class.gfx::Vector2dF"*
  %12 = alloca <2 x float>, align 8
  %13 = bitcast <2 x float>* %12 to %"class.gfx::Vector2dF"*
  %14 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %15 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %14, align 8
  %16 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %15) #13
  %17 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %14, align 8
  %18 = tail call dereferenceable(344) %"class.cc::ThreadedInputHandler"* @_ZN2cc17LayerTreeHostImpl15GetInputHandlerEv(%"class.cc::LayerTreeHostImpl"* %17) #13
  %19 = tail call <2 x float> @_ZN2cc20ThreadedInputHandler18ComputeScrollDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"* %18, %"struct.cc::ScrollNode"* dereferenceable(168) %16, %"class.gfx::Vector2dF"* dereferenceable(8) %1) #13
  %20 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %14, align 8
  %21 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %20, i64 0, i32 35, i32 0, i32 0, i32 0
  %22 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %22, i64 0, i32 13
  %24 = load float, float* %23, align 8
  %25 = tail call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %22) #13
  %26 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %22) #13
  br i1 %26, label %27, label %31

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 3, i32 0
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 2, i32 0
  br label %44

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 6
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 5, i32 0
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 3, i32 0
  %39 = load float, float* %38, align 4
  %40 = fdiv float %39, %37
  br label %41

41:                                               ; preds = %35, %31
  %42 = phi float [ %40, %35 ], [ 1.000000e+00, %31 ]
  %43 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 1, i32 0
  br label %44

44:                                               ; preds = %27, %41
  %45 = phi float* [ %30, %27 ], [ %43, %41 ]
  %46 = phi float [ %29, %27 ], [ %42, %41 ]
  %47 = load float, float* %45, align 4
  %48 = fmul float %46, %47
  %49 = fmul float %24, %48
  %50 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  %51 = bitcast %"class.gfx::Vector2dF"* %1 to i64*
  %52 = load i64, i64* %51, align 4
  store i64 %52, i64* %8, align 8
  %53 = fdiv float 1.000000e+00, %49
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %9, float %53, float %53) #13
  %54 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #13
  %55 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  %56 = bitcast i64* %4 to %"class.gfx::Vector2dF"*
  %57 = bitcast <2 x float>* %5 to %"class.gfx::Vector2dF"*
  %58 = load i64, i64* %8, align 8
  store i64 %58, i64* %4, align 8
  %59 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  %60 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %19
  store <2 x float> %60, <2 x float>* %5, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %56, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %57) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  %61 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  %62 = bitcast <2 x float>* %10 to i64*
  store i64 %61, i64* %62, align 8
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %11, float %49, float %49) #13
  %63 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %14, align 8
  %64 = call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %63) #13
  %65 = bitcast <2 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  %66 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %14, align 8
  %67 = call dereferenceable(344) %"class.cc::ThreadedInputHandler"* @_ZN2cc17LayerTreeHostImpl15GetInputHandlerEv(%"class.cc::LayerTreeHostImpl"* %66) #13
  %68 = call <2 x float> @_ZN2cc20ThreadedInputHandler18ComputeScrollDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"* %67, %"struct.cc::ScrollNode"* dereferenceable(168) %64, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %11) #13
  store <2 x float> %68, <2 x float>* %12, align 8
  %69 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69)
  %70 = bitcast i64* %3 to %"class.gfx::Vector2dF"*
  %71 = bitcast i64* %3 to <2 x float>*
  store <2 x float> %19, <2 x float>* %71, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %70, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %13) #13
  %72 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69)
  %73 = bitcast <2 x float>* %6 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %7, float %49, float %49) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  %74 = load <2 x float>, <2 x float>* %6, align 8
  ret <2 x float> %74
}

declare <2 x float> @_ZN2cc20ThreadedInputHandler18ComputeScrollDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"*, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc8Viewport39GetInnerViewportSizeExcludingScrollbarsEv(%"class.cc::Viewport"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca <2 x float>, align 8
  %3 = bitcast <2 x float>* %2 to %"class.gfx::SizeF"*
  %4 = alloca %"class.base::internal::flat_tree.1342", align 8
  %5 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %6 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %5, align 8
  %7 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %6) #13
  %8 = getelementptr inbounds <2 x float>, <2 x float>* %2, i64 0, i64 0
  %9 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %7, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %7, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %11, 0
  %15 = select i1 %14, i32 %11, i32 0
  %16 = sitofp i32 %15 to float
  store float %16, float* %8, align 8
  %17 = icmp sgt i32 %13, 0
  %18 = select i1 %17, i32 %13, i32 0
  %19 = sitofp i32 %18 to float
  store float %19, float* %9, align 4
  %20 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %5, align 8
  %21 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %20) #13
  %22 = bitcast %"class.base::internal::flat_tree.1342"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.base::internal::flat_tree.1342", %"class.base::internal::flat_tree.1342"* %4, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.base::internal::flat_tree.1342", %"class.base::internal::flat_tree.1342"* %4, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.base::internal::flat_tree.1342"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  %26 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %5, align 8
  %27 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %21, i64 0, i32 8, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.cc::LayerTreeHostImpl"* %26 to void (%"class.base::internal::flat_tree.1342"*, %"class.cc::LayerTreeHostImpl"*, i64)***
  %30 = load void (%"class.base::internal::flat_tree.1342"*, %"class.cc::LayerTreeHostImpl"*, i64)**, void (%"class.base::internal::flat_tree.1342"*, %"class.cc::LayerTreeHostImpl"*, i64)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::internal::flat_tree.1342"*, %"class.cc::LayerTreeHostImpl"*, i64)*, void (%"class.base::internal::flat_tree.1342"*, %"class.cc::LayerTreeHostImpl"*, i64)** %30, i64 81
  %32 = load void (%"class.base::internal::flat_tree.1342"*, %"class.cc::LayerTreeHostImpl"*, i64)*, void (%"class.base::internal::flat_tree.1342"*, %"class.cc::LayerTreeHostImpl"*, i64)** %31, align 8
  call void %32(%"class.base::internal::flat_tree.1342"* nonnull sret %4, %"class.cc::LayerTreeHostImpl"* %26, i64 %28) #13
  %33 = load %"class.cc::ScrollbarLayerImplBase"**, %"class.cc::ScrollbarLayerImplBase"*** %23, align 8
  %34 = load %"class.cc::ScrollbarLayerImplBase"**, %"class.cc::ScrollbarLayerImplBase"*** %24, align 8
  %35 = icmp eq %"class.cc::ScrollbarLayerImplBase"** %33, %34
  br i1 %35, label %36, label %49

36:                                               ; preds = %70, %1
  %37 = phi float [ 0.000000e+00, %1 ], [ %71, %70 ]
  %38 = phi float [ 0.000000e+00, %1 ], [ %72, %70 ]
  %39 = fsub float -0.000000e+00, %37
  %40 = fsub float -0.000000e+00, %38
  call void @_ZN3gfx5SizeF7EnlargeEff(%"class.gfx::SizeF"* nonnull %3, float %39, float %40) #13
  %41 = load %"class.cc::ScrollbarLayerImplBase"**, %"class.cc::ScrollbarLayerImplBase"*** %23, align 8
  %42 = icmp eq %"class.cc::ScrollbarLayerImplBase"** %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %36
  %44 = ptrtoint %"class.cc::ScrollbarLayerImplBase"** %41 to i64
  %45 = bitcast %"class.cc::ScrollbarLayerImplBase"*** %24 to i64*
  store i64 %44, i64* %45, align 8
  %46 = bitcast %"class.cc::ScrollbarLayerImplBase"** %41 to i8*
  call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %36, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  %48 = load <2 x float>, <2 x float>* %2, align 8
  ret <2 x float> %48

49:                                               ; preds = %1, %70
  %50 = phi float [ %72, %70 ], [ 0.000000e+00, %1 ]
  %51 = phi float [ %71, %70 ], [ 0.000000e+00, %1 ]
  %52 = phi %"class.cc::ScrollbarLayerImplBase"** [ %73, %70 ], [ %33, %1 ]
  %53 = load %"class.cc::ScrollbarLayerImplBase"*, %"class.cc::ScrollbarLayerImplBase"** %52, align 8
  %54 = getelementptr inbounds %"class.cc::ScrollbarLayerImplBase", %"class.cc::ScrollbarLayerImplBase"* %53, i64 0, i32 7
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 1
  %57 = bitcast %"class.cc::ScrollbarLayerImplBase"* %53 to %"class.cc::LayerImpl"*
  %58 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %57) #13
  br i1 %56, label %59, label %64

59:                                               ; preds = %49
  %60 = trunc i64 %58 to i32
  %61 = icmp sgt i32 %60, 0
  %62 = select i1 %61, i32 %60, i32 0
  %63 = sitofp i32 %62 to float
  br label %70

64:                                               ; preds = %49
  %65 = lshr i64 %58, 32
  %66 = trunc i64 %65 to i32
  %67 = icmp sgt i32 %66, 0
  %68 = select i1 %67, i32 %66, i32 0
  %69 = sitofp i32 %68 to float
  br label %70

70:                                               ; preds = %64, %59
  %71 = phi float [ %63, %59 ], [ %51, %64 ]
  %72 = phi float [ %50, %59 ], [ %69, %64 ]
  %73 = getelementptr inbounds %"class.cc::ScrollbarLayerImplBase"*, %"class.cc::ScrollbarLayerImplBase"** %52, i64 1
  %74 = icmp eq %"class.cc::ScrollbarLayerImplBase"** %73, %34
  br i1 %74, label %36, label %49
}

declare i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"*) local_unnamed_addr #6

declare void @_ZN3gfx5SizeF7EnlargeEff(%"class.gfx::SizeF"*, float, float) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc8Viewport18ScrollByInnerFirstERKN3gfx9Vector2dFE(%"class.cc::Viewport"* nocapture readonly, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.gfx::Vector2dF"*
  %5 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %7 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %7, i64 0, i32 35, i32 0, i32 0, i32 0
  %9 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %9, i64 0, i32 5, i32 6
  %11 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %7) #13
  %12 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %6, align 8
  %13 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %12, i64 0, i32 35, i32 0, i32 0, i32 0
  %14 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %13, align 8
  %15 = tail call <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %10, %"struct.cc::ScrollNode"* dereferenceable(168) %11, %"class.gfx::Vector2dF"* dereferenceable(8) %1, %"class.cc::LayerTreeImpl"* %14) #13
  store <2 x float> %15, <2 x float>* %3, align 8
  %16 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %6, align 8
  %17 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %16) #13
  %18 = call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* nonnull %4) #13
  %19 = xor i1 %18, true
  %20 = icmp ne %"struct.cc::ScrollNode"* %17, null
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %28

22:                                               ; preds = %2
  %23 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %6, align 8
  %24 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %23, i64 0, i32 35, i32 0, i32 0, i32 0
  %25 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %25, i64 0, i32 5, i32 6
  %27 = call <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %26, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %17, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %4, %"class.cc::LayerTreeImpl"* %25) #13
  br label %28

28:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

declare zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"*) local_unnamed_addr #6

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2cc8Viewport21ShouldAnimateViewportERKN3gfx9Vector2dFES4_(%"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #9 align 2 {
  %3 = bitcast %"class.gfx::Vector2dF"* %0 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %4)
  %6 = extractelement <2 x float> %5, i32 0
  %7 = extractelement <2 x float> %5, i32 1
  %8 = fcmp olt float %6, %7
  %9 = select i1 %8, float %7, float %6
  %10 = bitcast %"class.gfx::Vector2dF"* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %11)
  %13 = extractelement <2 x float> %12, i32 0
  %14 = extractelement <2 x float> %12, i32 1
  %15 = fcmp olt float %13, %14
  %16 = select i1 %15, float %14, float %13
  %17 = fcmp ogt float %9, %16
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc8Viewport14ScrollAnimatedERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::Viewport"* nocapture readonly, %"class.gfx::Vector2dF"* dereferenceable(8), i64) local_unnamed_addr #3 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca i64, align 8
  %7 = alloca <2 x float>, align 8
  %8 = alloca i64, align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca i64, align 8
  %11 = alloca <2 x float>, align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.gfx::Vector2dF"*
  %14 = alloca <2 x float>, align 8
  %15 = bitcast <2 x float>* %14 to %"class.gfx::Vector2dF"*
  %16 = alloca <2 x float>, align 8
  %17 = bitcast <2 x float>* %16 to %"class.gfx::Vector2dF"*
  %18 = alloca <2 x float>, align 8
  %19 = bitcast <2 x float>* %18 to %"class.gfx::Vector2dF"*
  %20 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %21 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %20, align 8
  %22 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %21) #13
  %23 = icmp eq %"struct.cc::ScrollNode"* %22, null
  br i1 %23, label %133, label %24

24:                                               ; preds = %3
  %25 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %20, align 8
  %26 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %25, i64 0, i32 35, i32 0, i32 0, i32 0
  %27 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %26, align 8
  %28 = tail call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %27) #13
  %29 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %27) #13
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %28, i64 0, i32 3, i32 0
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %28, i64 0, i32 2, i32 0
  br label %47

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %28, i64 0, i32 6
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %28, i64 0, i32 5, i32 0
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %28, i64 0, i32 3, i32 0
  %42 = load float, float* %41, align 4
  %43 = fdiv float %42, %40
  br label %44

44:                                               ; preds = %38, %34
  %45 = phi float [ %43, %38 ], [ 1.000000e+00, %34 ]
  %46 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %28, i64 0, i32 1, i32 0
  br label %47

47:                                               ; preds = %30, %44
  %48 = phi float* [ %33, %30 ], [ %46, %44 ]
  %49 = phi float [ %32, %30 ], [ %45, %44 ]
  %50 = load float, float* %48, align 4
  %51 = fmul float %49, %50
  %52 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  %53 = bitcast %"class.gfx::Vector2dF"* %1 to i64*
  %54 = load i64, i64* %53, align 4
  store i64 %54, i64* %12, align 8
  %55 = fdiv float 1.000000e+00, %51
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %13, float %55, float %55) #13
  %56 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %20, align 8
  %57 = call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %56) #13
  %58 = bitcast <2 x float>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  %59 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %20, align 8
  %60 = call dereferenceable(344) %"class.cc::ThreadedInputHandler"* @_ZN2cc17LayerTreeHostImpl15GetInputHandlerEv(%"class.cc::LayerTreeHostImpl"* %59) #13
  %61 = call <2 x float> @_ZN2cc20ThreadedInputHandler18ComputeScrollDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"* %60, %"struct.cc::ScrollNode"* dereferenceable(168) %57, %"class.gfx::Vector2dF"* dereferenceable(8) %1) #13
  store <2 x float> %61, <2 x float>* %14, align 8
  %62 = bitcast <2 x float>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #13
  %63 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = bitcast i64* %8 to %"class.gfx::Vector2dF"*
  %65 = bitcast <2 x float>* %9 to %"class.gfx::Vector2dF"*
  %66 = load i64, i64* %12, align 8
  store i64 %66, i64* %8, align 8
  %67 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #13
  %68 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %61
  store <2 x float> %68, <2 x float>* %9, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %64, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %65) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #13
  %69 = load i64, i64* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  %70 = bitcast <2 x float>* %16 to i64*
  store i64 %69, i64* %70, align 8
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %17, float %51, float %51) #13
  %71 = bitcast <2 x float>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  %72 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %20, align 8
  %73 = call dereferenceable(344) %"class.cc::ThreadedInputHandler"* @_ZN2cc17LayerTreeHostImpl15GetInputHandlerEv(%"class.cc::LayerTreeHostImpl"* %72) #13
  %74 = call <2 x float> @_ZN2cc20ThreadedInputHandler18ComputeScrollDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"* %73, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %22, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %17) #13
  store <2 x float> %74, <2 x float>* %18, align 8
  %75 = call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* nonnull %15) #13
  br i1 %75, label %76, label %80

76:                                               ; preds = %47
  %77 = call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* nonnull %19) #13
  br i1 %77, label %131, label %78

78:                                               ; preds = %76
  %79 = load <2 x float>, <2 x float>* %18, align 8
  br label %80

80:                                               ; preds = %78, %47
  %81 = phi <2 x float> [ %79, %78 ], [ %74, %47 ]
  %82 = load <2 x float>, <2 x float>* %14, align 8
  %83 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %82)
  %84 = extractelement <2 x float> %83, i32 0
  %85 = extractelement <2 x float> %83, i32 1
  %86 = fcmp olt float %84, %85
  %87 = select i1 %86, float %85, float %84
  %88 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %81)
  %89 = extractelement <2 x float> %88, i32 0
  %90 = extractelement <2 x float> %88, i32 1
  %91 = fcmp olt float %89, %90
  %92 = select i1 %91, float %90, float %89
  %93 = fcmp ogt float %87, %92
  %94 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %20, align 8
  %95 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %94, i64 0, i32 35, i32 0, i32 0, i32 0
  %96 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %95, align 8
  %97 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %96, i64 0, i32 5, i32 6
  br i1 %93, label %98, label %102

98:                                               ; preds = %80
  %99 = call <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %97, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %22, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %19, %"class.cc::LayerTreeImpl"* %96) #13
  %100 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %20, align 8
  %101 = call zeroext i1 @_ZN2cc17LayerTreeHostImpl21ScrollAnimationCreateERKNS_10ScrollNodeERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::LayerTreeHostImpl"* %100, %"struct.cc::ScrollNode"* dereferenceable(168) %57, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %15, i64 %2) #13
  br label %106

102:                                              ; preds = %80
  %103 = call <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %97, %"struct.cc::ScrollNode"* dereferenceable(168) %57, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %15, %"class.cc::LayerTreeImpl"* %96) #13
  %104 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %20, align 8
  %105 = call zeroext i1 @_ZN2cc17LayerTreeHostImpl21ScrollAnimationCreateERKNS_10ScrollNodeERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::LayerTreeHostImpl"* %104, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %22, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %19, i64 %2) #13
  br label %106

106:                                              ; preds = %102, %98
  %107 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107)
  %108 = bitcast i64* %4 to %"class.gfx::Vector2dF"*
  %109 = bitcast <2 x float>* %5 to %"class.gfx::Vector2dF"*
  %110 = load i64, i64* %12, align 8
  store i64 %110, i64* %4, align 8
  %111 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #13
  %112 = load <2 x float>, <2 x float>* %14, align 8
  %113 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %112
  store <2 x float> %113, <2 x float>* %5, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %108, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %109) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #13
  %114 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107)
  %115 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115)
  %116 = bitcast i64* %6 to %"class.gfx::Vector2dF"*
  %117 = bitcast <2 x float>* %7 to %"class.gfx::Vector2dF"*
  store i64 %114, i64* %6, align 8
  %118 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #13
  %119 = load <2 x float>, <2 x float>* %18, align 8
  %120 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %119
  store <2 x float> %120, <2 x float>* %7, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %116, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %117) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #13
  %121 = load i64, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115)
  store i64 %121, i64* %70, align 8
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %17, float %51, float %51) #13
  %122 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122)
  %123 = bitcast i64* %10 to %"class.gfx::Vector2dF"*
  %124 = bitcast <2 x float>* %11 to %"class.gfx::Vector2dF"*
  %125 = load i64, i64* %53, align 4
  store i64 %125, i64* %10, align 8
  %126 = bitcast <2 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #13
  %127 = load <2 x float>, <2 x float>* %16, align 8
  %128 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %127
  store <2 x float> %128, <2 x float>* %11, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %123, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %124) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #13
  %129 = bitcast i64* %10 to <2 x float>*
  %130 = load <2 x float>, <2 x float>* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122)
  br label %131

131:                                              ; preds = %76, %106
  %132 = phi <2 x float> [ %130, %106 ], [ zeroinitializer, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %133

133:                                              ; preds = %3, %131
  %134 = phi <2 x float> [ %132, %131 ], [ zeroinitializer, %3 ]
  ret <2 x float> %134
}

declare zeroext i1 @_ZN2cc17LayerTreeHostImpl21ScrollAnimationCreateERKNS_10ScrollNodeERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::LayerTreeHostImpl"*, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* dereferenceable(8), i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc8Viewport29SnapPinchAnchorIfWithinMarginERKN3gfx5PointE(%"class.cc::Viewport"* nocapture, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %4 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %3, align 8
  %5 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %4) #13
  %6 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %5, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %5, i64 0, i32 3, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %7, 0
  %11 = select i1 %10, i32 %7, i32 0
  %12 = sitofp i32 %11 to float
  %13 = icmp sgt i32 %9, 0
  %14 = select i1 %13, i32 %9, i32 0
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 100
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = sub nsw i32 0, %17
  br label %28

21:                                               ; preds = %2
  %22 = sitofp i32 %17 to float
  %23 = fadd float %12, -1.000000e+02
  %24 = fcmp olt float %23, %22
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = fsub float %12, %22
  %27 = fptosi float %26 to i32
  br label %28

28:                                               ; preds = %19, %25
  %29 = phi i32 [ %27, %25 ], [ %20, %19 ]
  %30 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 0
  store i32 %29, i32* %30, align 4
  br label %31

31:                                               ; preds = %28, %21
  %32 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 100
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = sub nsw i32 0, %33
  br label %44

37:                                               ; preds = %31
  %38 = sitofp i32 %33 to float
  %39 = fadd float %15, -1.000000e+02
  %40 = fcmp olt float %39, %38
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = fsub float %15, %38
  %43 = fptosi float %42 to i32
  br label %44

44:                                               ; preds = %35, %41
  %45 = phi i32 [ %43, %41 ], [ %36, %35 ]
  %46 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 1
  store i32 %45, i32* %46, align 4
  br label %47

47:                                               ; preds = %44, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc8Viewport11PinchUpdateEfRKN3gfx5PointE(%"class.cc::Viewport"* nocapture, float, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.gfx::PointF", align 4
  %5 = alloca %"class.gfx::PointF", align 4
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %"class.gfx::Vector2dF"*
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %"class.gfx::Vector2dF"*
  %10 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %59

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %15 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %14, align 8
  %16 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %15) #13
  %17 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %16, i64 0, i32 3, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %16, i64 0, i32 3, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %18, 0
  %22 = select i1 %21, i32 %18, i32 0
  %23 = sitofp i32 %22 to float
  %24 = icmp sgt i32 %20, 0
  %25 = select i1 %24, i32 %20, i32 0
  %26 = sitofp i32 %25 to float
  %27 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 100
  br i1 %29, label %30, label %32

30:                                               ; preds = %13
  %31 = sub nsw i32 0, %28
  br label %39

32:                                               ; preds = %13
  %33 = sitofp i32 %28 to float
  %34 = fadd float %23, -1.000000e+02
  %35 = fcmp olt float %34, %33
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = fsub float %23, %33
  %38 = fptosi float %37 to i32
  br label %39

39:                                               ; preds = %30, %36
  %40 = phi i32 [ %38, %36 ], [ %31, %30 ]
  %41 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 0
  store i32 %40, i32* %41, align 4
  br label %42

42:                                               ; preds = %39, %32
  %43 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 100
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = sub nsw i32 0, %44
  br label %55

48:                                               ; preds = %42
  %49 = sitofp i32 %44 to float
  %50 = fadd float %26, -1.000000e+02
  %51 = fcmp olt float %50, %49
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = fsub float %26, %49
  %54 = fptosi float %53 to i32
  br label %55

55:                                               ; preds = %52, %46
  %56 = phi i32 [ %47, %46 ], [ %54, %52 ]
  %57 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 1
  store i32 %56, i32* %57, align 4
  br label %58

58:                                               ; preds = %55, %48
  store i8 1, i8* %10, align 8
  br label %59

59:                                               ; preds = %3, %58
  %60 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %61 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %61, i64 0, i32 35, i32 0, i32 0, i32 0
  %63 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %62, align 8
  %64 = bitcast %"class.gfx::Point"* %2 to i64*
  %65 = load i64, i64* %64, align 4
  %66 = trunc i64 %65 to i32
  %67 = lshr i64 %65, 32
  %68 = trunc i64 %67 to i32
  %69 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 %70) #13
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !3
  %77 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %78, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %78) #13
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !3
  %85 = tail call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %63) #13
  %86 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %63) #13
  br i1 %86, label %87, label %91

87:                                               ; preds = %59
  %88 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %85, i64 0, i32 3, i32 0
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %85, i64 0, i32 2, i32 0
  br label %104

91:                                               ; preds = %59
  %92 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %85, i64 0, i32 6
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %85, i64 0, i32 5, i32 0
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %85, i64 0, i32 3, i32 0
  %99 = load float, float* %98, align 4
  %100 = fdiv float %99, %97
  br label %101

101:                                              ; preds = %95, %91
  %102 = phi float [ %100, %95 ], [ 1.000000e+00, %91 ]
  %103 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %85, i64 0, i32 1, i32 0
  br label %104

104:                                              ; preds = %87, %101
  %105 = phi float* [ %90, %87 ], [ %103, %101 ]
  %106 = phi float [ %89, %87 ], [ %102, %101 ]
  %107 = load float, float* %105, align 4
  %108 = fmul float %106, %107
  %109 = bitcast %"class.gfx::PointF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #13
  %110 = sitofp i32 %76 to float
  %111 = sitofp i32 %84 to float
  %112 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 0
  store float %110, float* %112, align 4
  %113 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 1
  store float %111, float* %113, align 4
  %114 = fdiv float 1.000000e+00, %108
  %115 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %4, float %114, float %114) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #13
  %116 = fmul float %108, %1
  call void @_ZN2cc13LayerTreeImpl24SetPageScaleOnActiveTreeEf(%"class.cc::LayerTreeImpl"* %63, float %116) #13
  %117 = call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %63) #13
  %118 = call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %63) #13
  br i1 %118, label %119, label %123

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %117, i64 0, i32 3, i32 0
  %121 = load float, float* %120, align 4
  %122 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %117, i64 0, i32 2, i32 0
  br label %136

123:                                              ; preds = %104
  %124 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %117, i64 0, i32 6
  %125 = load i8, i8* %124, align 4, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %117, i64 0, i32 5, i32 0
  %129 = load float, float* %128, align 4
  %130 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %117, i64 0, i32 3, i32 0
  %131 = load float, float* %130, align 4
  %132 = fdiv float %131, %129
  br label %133

133:                                              ; preds = %127, %123
  %134 = phi float [ %132, %127 ], [ 1.000000e+00, %123 ]
  %135 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %117, i64 0, i32 1, i32 0
  br label %136

136:                                              ; preds = %119, %133
  %137 = phi float* [ %122, %119 ], [ %135, %133 ]
  %138 = phi float [ %121, %119 ], [ %134, %133 ]
  %139 = load float, float* %137, align 4
  %140 = fmul float %138, %139
  %141 = bitcast %"class.gfx::PointF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #13
  %142 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %5, i64 0, i32 0
  store float %110, float* %142, align 4
  %143 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %5, i64 0, i32 1
  store float %111, float* %143, align 4
  %144 = fdiv float 1.000000e+00, %140
  %145 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %5, float %144, float %144) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #13
  %146 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #13
  %147 = fsub <2 x float> %115, %145
  store <2 x float> %147, <2 x float>* %6, align 8
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %7, float %140, float %140) #13
  %148 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #13
  %149 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %60, align 8
  %150 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %149, i64 0, i32 35, i32 0, i32 0, i32 0
  %151 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %150, align 8
  %152 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %151, i64 0, i32 5, i32 6
  %153 = call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %149) #13
  %154 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %60, align 8
  %155 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %154, i64 0, i32 35, i32 0, i32 0, i32 0
  %156 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %155, align 8
  %157 = call <2 x float> @_ZN2cc10ScrollTree28ClampScrollToMaxScrollOffsetERKNS_10ScrollNodeEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %152, %"struct.cc::ScrollNode"* dereferenceable(168) %153, %"class.cc::LayerTreeImpl"* %156) #13
  store <2 x float> %157, <2 x float>* %8, align 8
  call void @_ZN3gfx9Vector2dF8SubtractERKS0_(%"class.gfx::Vector2dF"* nonnull %7, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #13
  call void @_ZN2cc8Viewport3PanERKN3gfx9Vector2dFE(%"class.cc::Viewport"* %0, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #13
  ret void
}

declare void @_ZN2cc13LayerTreeImpl24SetPageScaleOnActiveTreeEf(%"class.cc::LayerTreeImpl"*, float) local_unnamed_addr #6

declare <2 x float> @_ZN2cc10ScrollTree28ClampScrollToMaxScrollOffsetERKNS_10ScrollNodeEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"*, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc8Viewport8PinchEndERKN3gfx5PointEb(%"class.cc::Viewport"* nocapture, %"class.gfx::Point"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.gfx::PointF"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Vector2d"*
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %"class.gfx::Vector2dF"*
  br i1 %2, label %10, label %113

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %12 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %12, i64 0, i32 35, i32 0, i32 0, i32 0
  %14 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %13, align 8
  %15 = tail call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %14) #13
  %16 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %14) #13
  br i1 %16, label %17, label %21

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %15, i64 0, i32 3, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %15, i64 0, i32 2, i32 0
  br label %34

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %15, i64 0, i32 6
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %15, i64 0, i32 5, i32 0
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %15, i64 0, i32 3, i32 0
  %29 = load float, float* %28, align 4
  %30 = fdiv float %29, %27
  br label %31

31:                                               ; preds = %25, %21
  %32 = phi float [ %30, %25 ], [ 1.000000e+00, %21 ]
  %33 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %15, i64 0, i32 1, i32 0
  br label %34

34:                                               ; preds = %17, %31
  %35 = phi float* [ %20, %17 ], [ %33, %31 ]
  %36 = phi float [ %19, %17 ], [ %32, %31 ]
  %37 = load float, float* %35, align 4
  %38 = fmul float %36, %37
  %39 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %14, i64 0, i32 11
  %40 = load float, float* %39, align 8
  %41 = fmul float %40, 0x3FF0CCCCC0000000
  %42 = fcmp olt float %38, %41
  %43 = fcmp une float %38, %40
  %44 = and i1 %43, %42
  br i1 %44, label %45, label %113

45:                                               ; preds = %34
  %46 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %47 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  %48 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %5, i64 0, i32 1
  %49 = bitcast %"class.gfx::Point"* %1 to i64*
  %50 = load i64, i64* %49, align 4
  %51 = trunc i64 %50 to i32
  %52 = lshr i64 %50, 32
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %55, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %55) #13
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !3
  %62 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %63) #13
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !3
  %70 = sitofp i32 %61 to float
  %71 = sitofp i32 %69 to float
  store float %70, float* %47, align 8
  store float %71, float* %48, align 4
  %72 = fdiv float %40, %38
  %73 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %5, float %72, float %72) #13
  store <2 x float> %73, <2 x float>* %4, align 8
  %74 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %11, align 8
  %75 = call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %74) #13
  %76 = icmp eq %"struct.cc::ScrollNode"* %75, null
  br i1 %76, label %99, label %77

77:                                               ; preds = %45
  %78 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %11, align 8
  %79 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %78, i64 0, i32 35, i32 0, i32 0, i32 0
  %80 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %80, i64 0, i32 5, i32 6
  %82 = call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %78) #13
  %83 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %82, i64 0, i32 8, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %81, i64 %84) #13
  %86 = fadd <2 x float> %85, zeroinitializer
  %87 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %11, align 8
  %88 = call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %87) #13
  %89 = icmp eq %"struct.cc::ScrollNode"* %88, null
  br i1 %89, label %99, label %90

90:                                               ; preds = %77
  %91 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %11, align 8
  %92 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %91, i64 0, i32 35, i32 0, i32 0, i32 0
  %93 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %93, i64 0, i32 5, i32 6
  %95 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %88, i64 0, i32 8, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %94, i64 %96) #13
  %98 = fadd <2 x float> %86, %97
  br label %99

99:                                               ; preds = %45, %77, %90
  %100 = phi <2 x float> [ zeroinitializer, %45 ], [ %86, %77 ], [ %98, %90 ]
  %101 = extractelement <2 x float> %100, i32 0
  %102 = extractelement <2 x float> %100, i32 1
  %103 = load float, float* %47, align 8
  %104 = fadd float %101, %103
  store float %104, float* %47, align 8
  %105 = load float, float* %48, align 4
  %106 = fadd float %102, %105
  store float %106, float* %48, align 4
  %107 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %11, align 8
  %108 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #13
  %109 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #13
  %110 = insertelement <2 x float> undef, float %104, i32 0
  %111 = insertelement <2 x float> %110, float %106, i32 1
  store <2 x float> %111, <2 x float>* %8, align 8
  %112 = call i64 @_ZN3gfx17ToRoundedVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %9) #13
  store i64 %112, i64* %6, align 8
  call void @_ZN2cc17LayerTreeHostImpl23StartPageScaleAnimationERKN3gfx8Vector2dEbfN4base9TimeDeltaE(%"class.cc::LayerTreeHostImpl"* %107, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %7, i1 zeroext true, float %40, i64 200000) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %113

113:                                              ; preds = %34, %99, %3
  %114 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 3
  %115 = bitcast %"class.gfx::Vector2d"* %114 to i64*
  store i64 0, i64* %115, align 4
  %116 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 1
  store i8 0, i8* %116, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc8Viewport17TotalScrollOffsetEv(%"class.cc::Viewport"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %3 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %4 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %3) #13
  %5 = icmp eq %"struct.cc::ScrollNode"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %8 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %7, i64 0, i32 35, i32 0, i32 0, i32 0
  %9 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %9, i64 0, i32 5, i32 6
  %11 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %7) #13
  %12 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %11, i64 0, i32 8, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %10, i64 %13) #13
  %15 = fadd <2 x float> %14, zeroinitializer
  %16 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %17 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %16) #13
  %18 = icmp eq %"struct.cc::ScrollNode"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %6
  %20 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %21 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %20, i64 0, i32 35, i32 0, i32 0, i32 0
  %22 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %22, i64 0, i32 5, i32 6
  %24 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %17, i64 0, i32 8, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %23, i64 %25) #13
  %27 = fadd <2 x float> %15, %26
  br label %28

28:                                               ; preds = %19, %6, %1
  %29 = phi <2 x float> [ zeroinitializer, %1 ], [ %15, %6 ], [ %27, %19 ]
  ret <2 x float> %29
}

declare void @_ZN2cc17LayerTreeHostImpl23StartPageScaleAnimationERKN3gfx8Vector2dEbfN4base9TimeDeltaE(%"class.cc::LayerTreeHostImpl"*, %"class.gfx::Vector2d"* dereferenceable(8), i1 zeroext, float, i64) local_unnamed_addr #6

declare i64 @_ZN3gfx17ToRoundedVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"* nocapture readonly, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %4 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %3, align 8
  %5 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %4) #13
  %6 = icmp eq %"struct.cc::ScrollNode"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %3, align 8
  %9 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %8) #13
  %10 = icmp eq %"struct.cc::ScrollNode"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %13 = load i8, i8* %12, align 4
  %14 = and i8 %13, 12
  %15 = icmp ne i8 %14, 0
  br label %16

16:                                               ; preds = %11, %2, %7
  %17 = phi i1 [ false, %7 ], [ false, %2 ], [ %15, %11 ]
  ret i1 %17
}

declare <2 x float> @_ZN2cc28BrowserControlsOffsetManager8ScrollByERKN3gfx9Vector2dFE(%"class.cc::BrowserControlsOffsetManager"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc8Viewport20MaxTotalScrollOffsetEv(%"class.cc::Viewport"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::Viewport", %"class.cc::Viewport"* %0, i64 0, i32 0
  %3 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %3, i64 0, i32 35, i32 0, i32 0, i32 0
  %5 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %5, i64 0, i32 5, i32 6
  %7 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %3) #13
  %8 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %6, i32 %9) #13
  %11 = fadd <2 x float> %10, zeroinitializer
  %12 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %13 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"* %12) #13
  %14 = icmp eq %"struct.cc::ScrollNode"* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %1
  %16 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %2, align 8
  %17 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %16, i64 0, i32 35, i32 0, i32 0, i32 0
  %18 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %18, i64 0, i32 5, i32 6
  %20 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %19, i32 %21) #13
  %23 = fadd <2 x float> %11, %22
  br label %24

24:                                               ; preds = %1, %15
  %25 = phi <2 x float> [ %11, %1 ], [ %23, %15 ]
  ret <2 x float> %25
}

declare <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"*, i32) local_unnamed_addr #6

declare <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"*, i64) local_unnamed_addr #6

declare %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"*) local_unnamed_addr #6

declare %"struct.cc::ScrollNode"* @_ZNK2cc17LayerTreeHostImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeHostImpl"*) local_unnamed_addr #6

declare %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"*, float, float) local_unnamed_addr #6

declare void @_ZN3gfx9Vector2dF8SubtractERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #11

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #11

declare <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8), float, float) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #11

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
