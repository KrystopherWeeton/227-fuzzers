; ModuleID = '../../third_party/opus/src/silk/NLSF_decode.c'
source_filename = "../../third_party/opus/src/silk/NLSF_decode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.silk_NLSF_CB_struct = type { i16, i16, i16, i16, i8*, i16*, i8*, i8*, i8*, i8*, i8*, i16* }

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_NLSF_decode(i16*, i8* nocapture readonly, %struct.silk_NLSF_CB_struct*) local_unnamed_addr #0 {
  %4 = alloca [16 x i8], align 16
  %5 = alloca [16 x i16], align 16
  %6 = alloca [16 x i16], align 16
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #3
  %8 = bitcast [16 x i16]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #3
  %9 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 0
  %10 = bitcast [16 x i16]* %6 to i8*
  %11 = bitcast [16 x i16]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #3
  %12 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 32, i1 false)
  %13 = load i8, i8* %1, align 1
  %14 = sext i8 %13 to i32
  call void @silk_NLSF_unpack(i16* nonnull %9, i8* nonnull %7, %struct.silk_NLSF_CB_struct* %2, i32 %14) #3
  %15 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %2, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp sgt i16 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = sext i16 %16 to i64
  br label %57

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %2, i64 0, i32 2
  %22 = load i16, i16* %21, align 4
  %23 = sext i16 %22 to i64
  %24 = sext i16 %16 to i64
  br label %25

25:                                               ; preds = %47, %20
  %26 = phi i64 [ %24, %20 ], [ %28, %47 ]
  %27 = phi i32 [ 0, %20 ], [ %53, %47 ]
  %28 = add nsw i64 %26, -1
  %29 = shl i32 %27, 16
  %30 = ashr exact i32 %29, 16
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 %28
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = mul nsw i32 %30, %33
  %35 = ashr i32 %34, 8
  %36 = getelementptr inbounds i8, i8* %1, i64 %26
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = shl nsw i32 %38, 10
  %40 = icmp sgt i8 %37, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %25
  %42 = add nsw i32 %39, -102
  br label %47

43:                                               ; preds = %25
  %44 = icmp eq i8 %37, 0
  %45 = or i32 %39, 102
  %46 = select i1 %44, i32 %39, i32 %45
  br label %47

47:                                               ; preds = %43, %41
  %48 = phi i32 [ %42, %41 ], [ %46, %43 ]
  %49 = sext i32 %48 to i64
  %50 = mul nsw i64 %49, %23
  %51 = lshr i64 %50, 16
  %52 = trunc i64 %51 to i32
  %53 = add i32 %35, %52
  %54 = trunc i32 %53 to i16
  %55 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %28
  store i16 %54, i16* %55, align 2
  %56 = icmp sgt i64 %28, 0
  br i1 %56, label %25, label %57

57:                                               ; preds = %47, %18
  %58 = phi i64 [ %19, %18 ], [ %24, %47 ]
  %59 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %2, i64 0, i32 4
  %60 = load i8*, i8** %59, align 8
  %61 = load i8, i8* %1, align 1
  %62 = sext i8 %61 to i64
  %63 = mul nsw i64 %58, %62
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  %65 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %2, i64 0, i32 5
  %66 = load i16*, i16** %65, align 8
  %67 = getelementptr inbounds i16, i16* %66, i64 %63
  br i1 %17, label %68, label %93

68:                                               ; preds = %57, %68
  %69 = phi i64 [ %89, %68 ], [ 0, %57 ]
  %70 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %69
  %71 = load i16, i16* %70, align 2
  %72 = sext i16 %71 to i32
  %73 = shl nsw i32 %72, 14
  %74 = getelementptr inbounds i16, i16* %67, i64 %69
  %75 = load i16, i16* %74, align 2
  %76 = sext i16 %75 to i32
  %77 = sdiv i32 %73, %76
  %78 = getelementptr inbounds i8, i8* %64, i64 %69
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = shl nuw nsw i32 %80, 7
  %82 = add nsw i32 %81, %77
  %83 = icmp sgt i32 %82, 0
  %84 = select i1 %83, i32 %82, i32 0
  %85 = icmp slt i32 %84, 32767
  %86 = select i1 %85, i32 %84, i32 32767
  %87 = trunc i32 %86 to i16
  %88 = getelementptr inbounds i16, i16* %0, i64 %69
  store i16 %87, i16* %88, align 2
  %89 = add nuw nsw i64 %69, 1
  %90 = load i16, i16* %15, align 2
  %91 = sext i16 %90 to i64
  %92 = icmp slt i64 %89, %91
  br i1 %92, label %68, label %93

93:                                               ; preds = %68, %57
  %94 = phi i16 [ %16, %57 ], [ %90, %68 ]
  %95 = sext i16 %94 to i32
  %96 = getelementptr inbounds %struct.silk_NLSF_CB_struct, %struct.silk_NLSF_CB_struct* %2, i64 0, i32 11
  %97 = load i16*, i16** %96, align 8
  call void @silk_NLSF_stabilize(i16* %0, i16* %97, i32 %95) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @silk_NLSF_unpack(i16*, i8*, %struct.silk_NLSF_CB_struct*, i32) local_unnamed_addr #2

declare void @silk_NLSF_stabilize(i16*, i16*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
