; ModuleID = '../../third_party/libpng/pngrtran.c'
source_filename = "../../third_party/libpng/pngrtran.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.png_compression_buffer = type { %struct.png_compression_buffer*, [1 x i8] }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], %struct.png_colorspace, i8*, i8*, i32, i32, i32, %struct.png_text_struct*, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, %struct.png_unknown_chunk_t*, i32, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_colorspace = type { i32, %struct.png_xy, %struct.png_XYZ, i16, i16 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [41 x i8] c"Can't discard critical data on CRC error\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Application must supply a known background gamma\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"png_set_background\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"output gamma out of expected range\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"invalid alpha mode\00", align 1
@.str.5 = private unnamed_addr constant [51 x i8] c"conflicting calls to set alpha mode and background\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"invalid file gamma in png_set_gamma\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"invalid screen gamma in png_set_gamma\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"invalid error action to rgb_to_gray\00", align 1
@.str.9 = private unnamed_addr constant [47 x i8] c"ignoring out of range rgb_to_gray coefficients\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"rgb to gray red coefficient\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"rgb to gray green coefficient\00", align 1
@.str.12 = private unnamed_addr constant [53 x i8] c"libpng does not support gamma+background+rgb_to_gray\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"invalid background gamma type\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"Palette is NULL in indexed image\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"NULL row buffer\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"Uninitialized row\00", align 1
@.str.17 = private unnamed_addr constant [39 x i8] c"png_do_rgb_to_gray found nongray pixel\00", align 1
@.str.18 = private unnamed_addr constant [59 x i8] c"invalid after png_start_read_image or png_read_update_info\00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c"invalid before the PNG header has been read\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"gamma value\00", align 1
@.str.21 = private unnamed_addr constant [37 x i8] c"png_do_encode_alpha: unexpected call\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_crc_action(%struct.png_struct_def* noalias, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %39, label %5

5:                                                ; preds = %3
  switch i32 %1, label %16 [
    i32 5, label %20
    i32 3, label %6
    i32 4, label %11
    i32 2, label %15
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, -3073
  %10 = or i32 %9, 1024
  store i32 %10, i32* %7, align 8
  br label %20

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = or i32 %13, 3072
  store i32 %14, i32* %12, align 8
  br label %20

15:                                               ; preds = %5
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0)) #6
  br label %16

16:                                               ; preds = %15, %5
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, -3073
  store i32 %19, i32* %17, align 8
  br label %20

20:                                               ; preds = %16, %11, %6, %5
  switch i32 %2, label %35 [
    i32 5, label %39
    i32 3, label %21
    i32 4, label %26
    i32 1, label %30
  ]

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, -769
  %25 = or i32 %24, 256
  store i32 %25, i32* %22, align 8
  br label %39

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %28 = load i32, i32* %27, align 8
  %29 = or i32 %28, 768
  store i32 %29, i32* %27, align 8
  br label %39

30:                                               ; preds = %20
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -769
  %34 = or i32 %33, 512
  store i32 %34, i32* %31, align 8
  br label %39

35:                                               ; preds = %20
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, -769
  store i32 %38, i32* %36, align 8
  br label %39

39:                                               ; preds = %3, %35, %30, %26, %21, %20
  ret void
}

declare void @cr_png_warning(%struct.png_struct_def*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_background_fixed(%struct.png_struct_def* noalias, %struct.png_color_16_struct* readonly, i32, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq %struct.png_struct_def* %0, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %9 = load i32, i32* %8, align 8, !alias.scope !2
  %10 = and i32 %9, 64
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %35

13:                                               ; preds = %7
  %14 = or i32 %9, 16384
  store i32 %14, i32* %8, align 8, !alias.scope !2
  %15 = icmp eq %struct.png_color_16_struct* %1, null
  br i1 %15, label %35, label %16

16:                                               ; preds = %13
  %17 = icmp eq i32 %2, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0)) #6
  br label %35

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, -8650881
  %23 = or i32 %22, 262272
  store i32 %23, i32* %20, align 4
  %24 = and i32 %14, -8193
  store i32 %24, i32* %8, align 8
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 0
  %26 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 2 %26, i64 10, i1 false)
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 72
  store i32 %4, i32* %27, align 8
  %28 = trunc i32 %2 to i8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 71
  store i8 %28, i8* %29, align 2
  %30 = icmp eq i32 %3, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %19
  %32 = or i32 %22, 262528
  store i32 %32, i32* %20, align 4
  br label %35

33:                                               ; preds = %19
  %34 = and i32 %23, -8388865
  store i32 %34, i32* %20, align 4
  br label %35

35:                                               ; preds = %12, %5, %13, %18, %33, %31
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_background(%struct.png_struct_def* noalias, %struct.png_color_16_struct* readonly, i32, i32, double) local_unnamed_addr #0 {
  %6 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #6
  %7 = icmp eq %struct.png_struct_def* %0, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %10 = load i32, i32* %9, align 8, !alias.scope !5
  %11 = and i32 %10, 64
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %36

14:                                               ; preds = %8
  %15 = or i32 %10, 16384
  store i32 %15, i32* %9, align 8, !alias.scope !5
  %16 = icmp eq %struct.png_color_16_struct* %1, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %14
  %18 = icmp eq i32 %2, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0)) #6
  br label %36

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %22 = load i32, i32* %21, align 4, !alias.scope !10
  %23 = and i32 %22, -8650881
  %24 = or i32 %23, 262272
  store i32 %24, i32* %21, align 4, !alias.scope !10
  %25 = and i32 %15, -8193
  store i32 %25, i32* %9, align 8, !alias.scope !10
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 0
  %27 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 2 %27, i64 10, i1 false) #6
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 72
  store i32 %6, i32* %28, align 8, !alias.scope !10
  %29 = trunc i32 %2 to i8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 71
  store i8 %29, i8* %30, align 2, !alias.scope !10
  %31 = icmp eq i32 %3, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %20
  %33 = or i32 %23, 262528
  store i32 %33, i32* %21, align 4, !alias.scope !10
  br label %36

34:                                               ; preds = %20
  %35 = and i32 %24, -8388865
  store i32 %35, i32* %21, align 4, !alias.scope !10
  br label %36

36:                                               ; preds = %5, %13, %14, %19, %32, %34
  ret void
}

declare i32 @cr_png_fixed(%struct.png_struct_def*, double, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_scale_16(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8, !alias.scope !11
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %14

9:                                                ; preds = %3
  %10 = or i32 %5, 16384
  store i32 %10, i32* %4, align 8, !alias.scope !11
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 67108864
  store i32 %13, i32* %11, align 4
  br label %14

14:                                               ; preds = %8, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_strip_16(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8, !alias.scope !14
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %14

9:                                                ; preds = %3
  %10 = or i32 %5, 16384
  store i32 %10, i32* %4, align 8, !alias.scope !14
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 1024
  store i32 %13, i32* %11, align 4
  br label %14

14:                                               ; preds = %8, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_strip_alpha(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8, !alias.scope !17
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %14

9:                                                ; preds = %3
  %10 = or i32 %5, 16384
  store i32 %10, i32* %4, align 8, !alias.scope !17
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 262144
  store i32 %13, i32* %11, align 4
  br label %14

14:                                               ; preds = %8, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_alpha_mode_fixed(%struct.png_struct_def* noalias, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %74, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %7 = load i32, i32* %6, align 8, !alias.scope !20
  %8 = and i32 %7, 64
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %74

11:                                               ; preds = %5
  %12 = or i32 %7, 16384
  store i32 %12, i32* %6, align 8, !alias.scope !20
  switch i32 %2, label %15 [
    i32 -1, label %13
    i32 -100000, label %13
    i32 -2, label %19
    i32 -50000, label %19
  ]

13:                                               ; preds = %11, %11
  %14 = or i32 %7, 20480
  store i32 %14, i32* %6, align 8, !alias.scope !23
  br label %19

15:                                               ; preds = %11
  %16 = add i32 %2, -1000
  %17 = icmp ugt i32 %16, 9999000
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

19:                                               ; preds = %11, %11, %13, %15
  %20 = phi i32 [ %2, %15 ], [ 220000, %13 ], [ 151724, %11 ], [ 151724, %11 ]
  %21 = tail call i32 @cr_png_reciprocal(i32 %20) #6
  switch i32 %1, label %46 [
    i32 0, label %22
    i32 1, label %28
    i32 2, label %34
    i32 3, label %40
  ]

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, -8388609
  store i32 %25, i32* %23, align 4
  %26 = load i32, i32* %6, align 8
  %27 = and i32 %26, -8193
  br label %47

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, -8388609
  store i32 %31, i32* %29, align 4
  %32 = load i32, i32* %6, align 8
  %33 = and i32 %32, -8193
  br label %47

34:                                               ; preds = %19
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, -8388609
  store i32 %37, i32* %35, align 4
  %38 = load i32, i32* %6, align 8
  %39 = or i32 %38, 8192
  br label %47

40:                                               ; preds = %19
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %42, 8388608
  store i32 %43, i32* %41, align 4
  %44 = load i32, i32* %6, align 8
  %45 = and i32 %44, -8193
  br label %47

46:                                               ; preds = %19
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

47:                                               ; preds = %40, %34, %28, %22
  %48 = phi i32 [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %27, %22 ]
  %49 = phi i32 [ %43, %40 ], [ %37, %34 ], [ %31, %28 ], [ %25, %22 ]
  %50 = phi i32 [ %20, %40 ], [ %20, %34 ], [ 100000, %28 ], [ %20, %22 ]
  %51 = phi i32 [ 1, %40 ], [ 1, %34 ], [ 1, %28 ], [ 0, %22 ]
  store i32 %48, i32* %6, align 8
  %52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 134, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %47
  store i32 %21, i32* %52, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 134, i32 4
  %57 = load i16, i16* %56, align 2
  %58 = or i16 %57, 1
  store i16 %58, i16* %56, align 2
  br label %59

59:                                               ; preds = %55, %47
  %60 = phi i32 [ %21, %55 ], [ %53, %47 ]
  %61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 79
  store i32 %50, i32* %61, align 4
  %62 = icmp eq i32 %51, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 10, i1 false)
  %65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 72
  store i32 %60, i32* %65, align 8
  %66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 71
  store i8 2, i8* %66, align 2
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %68 = and i32 %49, -257
  store i32 %68, i32* %67, align 4
  %69 = trunc i32 %49 to i8
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %63
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

72:                                               ; preds = %63
  %73 = or i32 %68, 128
  store i32 %73, i32* %67, align 4
  br label %74

74:                                               ; preds = %10, %3, %72, %59
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noreturn
declare void @cr_png_error(%struct.png_struct_def*, i8*) local_unnamed_addr #3

declare i32 @cr_png_reciprocal(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_alpha_mode(%struct.png_struct_def* noalias, i32, double) local_unnamed_addr #0 {
  %4 = fcmp ogt double %2, 0.000000e+00
  %5 = fcmp olt double %2, 1.280000e+02
  %6 = and i1 %4, %5
  %7 = fmul double %2, 1.000000e+05
  %8 = select i1 %6, double %7, double %2
  %9 = fadd double %8, 5.000000e-01
  %10 = tail call double @llvm.floor.f64(double %9) #6
  %11 = fcmp ogt double %10, 0x41DFFFFFFFC00000
  %12 = fcmp olt double %10, 0xC1DFFFFFFFC00000
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @cr_png_fixed_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0)) #7
  unreachable

15:                                               ; preds = %3
  %16 = fptosi double %10 to i32
  tail call void @cr_png_set_alpha_mode_fixed(%struct.png_struct_def* %0, i32 %1, i32 %16)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_gamma_fixed(%struct.png_struct_def* noalias, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %7 = load i32, i32* %6, align 8, !alias.scope !26
  %8 = and i32 %7, 64
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %34

11:                                               ; preds = %5
  %12 = or i32 %7, 16384
  store i32 %12, i32* %6, align 8, !alias.scope !26
  switch i32 %1, label %16 [
    i32 -1, label %13
    i32 -100000, label %13
    i32 -2, label %15
    i32 -50000, label %15
  ]

13:                                               ; preds = %11, %11
  %14 = or i32 %7, 20480
  store i32 %14, i32* %6, align 8, !alias.scope !29
  br label %16

15:                                               ; preds = %11, %11
  br label %16

16:                                               ; preds = %11, %13, %15
  %17 = phi i32 [ %14, %13 ], [ %12, %15 ], [ %12, %11 ]
  %18 = phi i32 [ 220000, %13 ], [ 151724, %15 ], [ %1, %11 ]
  switch i32 %2, label %21 [
    i32 -1, label %19
    i32 -100000, label %19
    i32 -2, label %24
    i32 -50000, label %24
  ]

19:                                               ; preds = %16, %16
  %20 = or i32 %17, 4096
  store i32 %20, i32* %6, align 8, !alias.scope !32
  br label %24

21:                                               ; preds = %16
  %22 = icmp slt i32 %2, 1
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

24:                                               ; preds = %16, %16, %19, %21
  %25 = phi i32 [ %2, %21 ], [ 45455, %19 ], [ 65909, %16 ], [ 65909, %16 ]
  %26 = icmp slt i32 %18, 1
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #7
  unreachable

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 134, i32 0
  store i32 %25, i32* %29, align 8
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 134, i32 4
  %31 = load i16, i16* %30, align 2
  %32 = or i16 %31, 1
  store i16 %32, i16* %30, align 2
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 79
  store i32 %18, i32* %33, align 4
  br label %34

34:                                               ; preds = %10, %3, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_gamma(%struct.png_struct_def* noalias, double, double) local_unnamed_addr #0 {
  %4 = fcmp ogt double %1, 0.000000e+00
  %5 = fcmp olt double %1, 1.280000e+02
  %6 = and i1 %4, %5
  %7 = fmul double %1, 1.000000e+05
  %8 = select i1 %6, double %7, double %1
  %9 = fadd double %8, 5.000000e-01
  %10 = tail call double @llvm.floor.f64(double %9) #6
  %11 = fcmp ogt double %10, 0x41DFFFFFFFC00000
  %12 = fcmp olt double %10, 0xC1DFFFFFFFC00000
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @cr_png_fixed_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0)) #7
  unreachable

15:                                               ; preds = %3
  %16 = fcmp ogt double %2, 0.000000e+00
  %17 = fcmp olt double %2, 1.280000e+02
  %18 = and i1 %16, %17
  %19 = fmul double %2, 1.000000e+05
  %20 = select i1 %18, double %19, double %2
  %21 = fadd double %20, 5.000000e-01
  %22 = tail call double @llvm.floor.f64(double %21) #6
  %23 = fcmp ogt double %22, 0x41DFFFFFFFC00000
  %24 = fcmp olt double %22, 0xC1DFFFFFFFC00000
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %15
  tail call void @cr_png_fixed_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0)) #7
  unreachable

27:                                               ; preds = %15
  %28 = fptosi double %10 to i32
  %29 = fptosi double %22 to i32
  tail call void @cr_png_set_gamma_fixed(%struct.png_struct_def* %0, i32 %28, i32 %29)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_expand(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8, !alias.scope !35
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %14

9:                                                ; preds = %3
  %10 = or i32 %5, 16384
  store i32 %10, i32* %4, align 8, !alias.scope !35
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 33558528
  store i32 %13, i32* %11, align 4
  br label %14

14:                                               ; preds = %8, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_palette_to_rgb(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8, !alias.scope !38
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %14

9:                                                ; preds = %3
  %10 = or i32 %5, 16384
  store i32 %10, i32* %4, align 8, !alias.scope !38
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 33558528
  store i32 %13, i32* %11, align 4
  br label %14

14:                                               ; preds = %8, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_expand_gray_1_2_4_to_8(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8, !alias.scope !41
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %14

9:                                                ; preds = %3
  %10 = or i32 %5, 16384
  store i32 %10, i32* %4, align 8, !alias.scope !41
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 4096
  store i32 %13, i32* %11, align 4
  br label %14

14:                                               ; preds = %8, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_tRNS_to_alpha(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8, !alias.scope !44
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %14

9:                                                ; preds = %3
  %10 = or i32 %5, 16384
  store i32 %10, i32* %4, align 8, !alias.scope !44
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 33558528
  store i32 %13, i32* %11, align 4
  br label %14

14:                                               ; preds = %8, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_expand_16(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8, !alias.scope !47
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %14

9:                                                ; preds = %3
  %10 = or i32 %5, 16384
  store i32 %10, i32* %4, align 8, !alias.scope !47
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  %13 = or i32 %12, 33559040
  store i32 %13, i32* %11, align 4
  br label %14

14:                                               ; preds = %8, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_gray_to_rgb(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8, !alias.scope !50
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %15

9:                                                ; preds = %3
  %10 = or i32 %5, 16384
  store i32 %10, i32* %4, align 8, !alias.scope !53
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 4, !alias.scope !58
  %13 = or i32 %12, 20480
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  store i32 %13, i32* %14, align 4
  br label %15

15:                                               ; preds = %8, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_rgb_to_gray_fixed(%struct.png_struct_def* noalias, i32, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %8 = load i32, i32* %7, align 8, !alias.scope !59
  %9 = and i32 %8, 64
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %68

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %14 = load i32, i32* %13, align 4, !alias.scope !59
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0)) #6
  br label %68

18:                                               ; preds = %12
  %19 = or i32 %8, 16384
  store i32 %19, i32* %7, align 8, !alias.scope !59
  switch i32 %1, label %32 [
    i32 1, label %20
    i32 2, label %24
    i32 3, label %28
  ]

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %22, 6291456
  store i32 %23, i32* %21, align 4
  br label %33

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %26 = load i32, i32* %25, align 4
  %27 = or i32 %26, 4194304
  store i32 %27, i32* %25, align 4
  br label %33

28:                                               ; preds = %18
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %30 = load i32, i32* %29, align 4
  %31 = or i32 %30, 2097152
  store i32 %31, i32* %29, align 4
  br label %33

32:                                               ; preds = %18
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0)) #7
  unreachable

33:                                               ; preds = %28, %24, %20
  %34 = phi i32 [ %31, %28 ], [ %27, %24 ], [ %23, %20 ]
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 3
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %40 = or i32 %34, 4096
  store i32 %40, i32* %39, align 4
  br label %41

41:                                               ; preds = %38, %33
  %42 = or i32 %3, %2
  %43 = icmp sgt i32 %42, -1
  %44 = add nsw i32 %3, %2
  %45 = icmp slt i32 %44, 100001
  %46 = and i1 %43, %45
  br i1 %46, label %47, label %57

47:                                               ; preds = %41
  %48 = shl i32 %2, 15
  %49 = udiv i32 %48, 100000
  %50 = trunc i32 %49 to i16
  %51 = shl i32 %3, 15
  %52 = udiv i32 %51, 100000
  %53 = trunc i32 %52 to i16
  %54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 116
  store i16 %50, i16* %54, align 2
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 117
  store i16 %53, i16* %55, align 4
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 115
  store i8 1, i8* %56, align 1
  br label %68

57:                                               ; preds = %41
  br i1 %43, label %58, label %59

58:                                               ; preds = %57
  tail call void @cr_png_app_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #6
  br label %59

59:                                               ; preds = %58, %57
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 116
  %61 = load i16, i16* %60, align 2
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 117
  %65 = load i16, i16* %64, align 4
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  store i16 6968, i16* %60, align 2
  store i16 23434, i16* %64, align 4
  br label %68

68:                                               ; preds = %17, %11, %4, %59, %63, %67, %47
  ret void
}

declare void @cr_png_app_warning(%struct.png_struct_def*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_rgb_to_gray(%struct.png_struct_def* noalias, i32, double, double) local_unnamed_addr #0 {
  %5 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0)) #6
  %6 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0)) #6
  tail call void @cr_png_set_rgb_to_gray_fixed(%struct.png_struct_def* %0, i32 %1, i32 %5, i32 %6)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_read_user_transform_fn(%struct.png_struct_def* noalias nocapture, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %4 = load i32, i32* %3, align 4
  %5 = or i32 %4, 1048576
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 10
  store void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %1, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_init_read_transformations(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 134, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 79
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %5, label %23, label %9

9:                                                ; preds = %1
  br i1 %8, label %10, label %21

10:                                               ; preds = %9
  %11 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #6
  store i32 -1431655766, i32* %2, align 4
  %12 = call i32 @cr_png_muldiv(i32* nonnull %2, i32 %4, i32 %7, i32 100000) #6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = load i32, i32* %2, align 4
  %16 = call i32 @cr_png_gamma_significant(i32 %15) #6
  %17 = icmp ne i32 %16, 0
  %18 = zext i1 %17 to i32
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i32 [ 1, %10 ], [ %18, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #6
  br label %27

21:                                               ; preds = %9
  %22 = tail call i32 @cr_png_reciprocal(i32 %4) #6
  store i32 %22, i32* %6, align 4
  br label %27

23:                                               ; preds = %1
  br i1 %8, label %24, label %26

24:                                               ; preds = %23
  %25 = tail call i32 @cr_png_reciprocal(i32 %7) #6
  store i32 %25, i32* %3, align 8
  br label %27

26:                                               ; preds = %23
  store i32 100000, i32* %3, align 8
  store i32 100000, i32* %6, align 4
  br label %27

27:                                               ; preds = %24, %26, %19, %21
  %28 = phi i32 [ %20, %19 ], [ 0, %21 ], [ 0, %24 ], [ 0, %26 ]
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 134, i32 4
  %30 = load i16, i16* %29, align 2
  %31 = or i16 %30, 1
  store i16 %31, i16* %29, align 2
  %32 = icmp eq i32 %28, 0
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, -8193
  %36 = or i32 %34, 8192
  %37 = select i1 %32, i32 %35, i32 %36
  store i32 %37, i32* %33, align 4
  %38 = and i32 %37, 262272
  %39 = icmp eq i32 %38, 262144
  br i1 %39, label %40, label %46

40:                                               ; preds = %27
  %41 = and i32 %37, -41943297
  store i32 %41, i32* %33, align 4
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, -8193
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 54
  store i16 0, i16* %45, align 2
  br label %46

46:                                               ; preds = %27, %40
  %47 = load i32, i32* %6, align 4
  %48 = call i32 @cr_png_gamma_significant(i32 %47) #6
  %49 = icmp eq i32 %48, 0
  %50 = load i32, i32* %33, align 4
  br i1 %49, label %51, label %56

51:                                               ; preds = %46
  %52 = and i32 %50, -8388609
  store i32 %52, i32* %33, align 4
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, -8193
  store i32 %55, i32* %53, align 8
  br label %56

56:                                               ; preds = %46, %51
  %57 = phi i32 [ %52, %51 ], [ %50, %46 ]
  %58 = and i32 %57, 6291456
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  call void @cr_png_colorspace_set_rgb_coefficients(%struct.png_struct_def* %0) #6
  %61 = load i32, i32* %33, align 4
  br label %62

62:                                               ; preds = %56, %60
  %63 = phi i32 [ %57, %56 ], [ %61, %60 ]
  %64 = and i32 %63, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %68 = load i8, i8* %67, align 1
  %69 = and i8 %68, 2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %93

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %73 = load i32, i32* %72, align 4
  %74 = or i32 %73, 2048
  store i32 %74, i32* %72, align 4
  br label %93

75:                                               ; preds = %62
  %76 = and i32 %63, 16512
  %77 = icmp eq i32 %76, 16512
  br i1 %77, label %78, label %93

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %80 = load i16, i16* %79, align 2
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %82 = load i16, i16* %81, align 4
  %83 = icmp eq i16 %80, %82
  br i1 %83, label %84, label %93

84:                                               ; preds = %78
  %85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %86 = load i16, i16* %85, align 2
  %87 = icmp eq i16 %80, %86
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %90 = load i32, i32* %89, align 4
  %91 = or i32 %90, 2048
  store i32 %91, i32* %89, align 4
  %92 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  store i16 %80, i16* %92, align 4
  br label %93

93:                                               ; preds = %75, %78, %84, %88, %66, %71
  %94 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 3
  br i1 %96, label %97, label %146

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 54
  %99 = load i16, i16* %98, align 2, !alias.scope !62
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %115, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 88
  %103 = load i8*, i8** %102, align 8, !alias.scope !62
  %104 = zext i16 %99 to i64
  br label %105

105:                                              ; preds = %111, %101
  %106 = phi i64 [ 0, %101 ], [ %113, %111 ]
  %107 = phi i32 [ 0, %101 ], [ %112, %111 ]
  %108 = getelementptr inbounds i8, i8* %103, i64 %106
  %109 = load i8, i8* %108, align 1, !noalias !62
  switch i8 %109, label %124 [
    i8 -1, label %111
    i8 0, label %110
  ]

110:                                              ; preds = %105
  br label %111

111:                                              ; preds = %110, %105
  %112 = phi i32 [ %107, %105 ], [ 1, %110 ]
  %113 = add nuw nsw i64 %106, 1
  %114 = icmp eq i64 %113, %104
  br i1 %114, label %115, label %105

115:                                              ; preds = %111, %97
  %116 = phi i32 [ 0, %97 ], [ %112, %111 ]
  %117 = and i32 %63, -8388609
  store i32 %117, i32* %33, align 4, !alias.scope !62
  %118 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %119 = load i32, i32* %118, align 8, !alias.scope !62
  %120 = and i32 %119, -8193
  store i32 %120, i32* %118, align 8, !alias.scope !62
  %121 = icmp eq i32 %116, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %115
  %123 = and i32 %63, -8388993
  store i32 %123, i32* %33, align 4, !alias.scope !62
  br label %124

124:                                              ; preds = %105, %122, %115
  %125 = phi i32 [ %117, %115 ], [ %123, %122 ], [ %63, %105 ]
  %126 = and i32 %125, 4352
  %127 = icmp eq i32 %126, 4352
  br i1 %127, label %128, label %194

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %130 = load %struct.png_color_struct*, %struct.png_color_struct** %129, align 8, !alias.scope !62
  %131 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 0
  %132 = load i8, i8* %131, align 4, !alias.scope !62
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %130, i64 %133, i32 0
  %135 = load i8, i8* %134, align 1, !noalias !62
  %136 = zext i8 %135 to i16
  %137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  store i16 %136, i16* %137, align 2, !alias.scope !62
  %138 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %130, i64 %133, i32 1
  %139 = load i8, i8* %138, align 1, !noalias !62
  %140 = zext i8 %139 to i16
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  store i16 %140, i16* %141, align 4, !alias.scope !62
  %142 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %130, i64 %133, i32 2
  %143 = load i8, i8* %142, align 1, !noalias !62
  %144 = zext i8 %143 to i16
  %145 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  store i16 %144, i16* %145, align 2, !alias.scope !62
  br label %194

146:                                              ; preds = %93
  %147 = and i8 %95, 4
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %159

149:                                              ; preds = %146
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 54
  %151 = load i16, i16* %150, align 2, !alias.scope !65
  %152 = icmp eq i16 %151, 0
  %153 = and i32 %63, -8388609
  store i32 %153, i32* %33, align 4, !alias.scope !65
  %154 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %155 = load i32, i32* %154, align 8, !alias.scope !65
  %156 = and i32 %155, -8193
  store i32 %156, i32* %154, align 8, !alias.scope !65
  br i1 %152, label %157, label %159

157:                                              ; preds = %149
  %158 = and i32 %63, -8388993
  store i32 %158, i32* %33, align 4, !alias.scope !65
  br label %159

159:                                              ; preds = %146, %157, %149
  %160 = phi i32 [ %153, %149 ], [ %158, %157 ], [ %63, %146 ]
  %161 = and i32 %160, 4352
  %162 = icmp eq i32 %161, 4352
  %163 = and i8 %95, 2
  %164 = icmp eq i8 %163, 0
  %165 = and i1 %164, %162
  br i1 %165, label %166, label %194

166:                                              ; preds = %159
  %167 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %168 = load i16, i16* %167, align 4, !alias.scope !65
  %169 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %170 = load i16, i16* %169, align 8, !alias.scope !65
  %171 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %172 = load i8, i8* %171, align 2, !alias.scope !65
  switch i8 %172, label %182 [
    i8 1, label %173
    i8 2, label %176
    i8 4, label %179
  ]

173:                                              ; preds = %166
  %174 = mul i16 %168, 255
  %175 = mul i16 %170, 255
  br label %182

176:                                              ; preds = %166
  %177 = mul i16 %168, 85
  %178 = mul i16 %170, 85
  br label %182

179:                                              ; preds = %166
  %180 = mul i16 %168, 17
  %181 = mul i16 %170, 17
  br label %182

182:                                              ; preds = %179, %176, %173, %166
  %183 = phi i16 [ %168, %166 ], [ %180, %179 ], [ %177, %176 ], [ %174, %173 ]
  %184 = phi i16 [ %170, %166 ], [ %181, %179 ], [ %178, %176 ], [ %175, %173 ]
  %185 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  store i16 %183, i16* %185, align 2, !alias.scope !65
  %186 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  store i16 %183, i16* %186, align 4, !alias.scope !65
  %187 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  store i16 %183, i16* %187, align 2, !alias.scope !65
  %188 = and i32 %160, 33554432
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %194

190:                                              ; preds = %182
  %191 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 3
  store i16 %184, i16* %191, align 2, !alias.scope !65
  %192 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 2
  store i16 %184, i16* %192, align 4, !alias.scope !65
  %193 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 1
  store i16 %184, i16* %193, align 2, !alias.scope !65
  br label %194

194:                                              ; preds = %190, %182, %159, %128, %124
  %195 = phi i32 [ %160, %190 ], [ %160, %182 ], [ %160, %159 ], [ %125, %128 ], [ %125, %124 ]
  %196 = and i32 %195, 896
  %197 = icmp eq i32 %196, 640
  br i1 %197, label %198, label %231

198:                                              ; preds = %194
  %199 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %200 = load i8, i8* %199, align 2
  %201 = icmp eq i8 %200, 16
  br i1 %201, label %231, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %204 = load i16, i16* %203, align 2
  %205 = zext i16 %204 to i32
  %206 = mul nuw nsw i32 %205, 255
  %207 = add nuw nsw i32 %206, 32895
  %208 = lshr i32 %207, 16
  %209 = trunc i32 %208 to i16
  store i16 %209, i16* %203, align 2
  %210 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %211 = load i16, i16* %210, align 4
  %212 = zext i16 %211 to i32
  %213 = mul nuw nsw i32 %212, 255
  %214 = add nuw nsw i32 %213, 32895
  %215 = lshr i32 %214, 16
  %216 = trunc i32 %215 to i16
  store i16 %216, i16* %210, align 4
  %217 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %218 = load i16, i16* %217, align 2
  %219 = zext i16 %218 to i32
  %220 = mul nuw nsw i32 %219, 255
  %221 = add nuw nsw i32 %220, 32895
  %222 = lshr i32 %221, 16
  %223 = trunc i32 %222 to i16
  store i16 %223, i16* %217, align 2
  %224 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %225 = load i16, i16* %224, align 4
  %226 = zext i16 %225 to i32
  %227 = mul nuw nsw i32 %226, 255
  %228 = add nuw nsw i32 %227, 32895
  %229 = lshr i32 %228, 16
  %230 = trunc i32 %229 to i16
  store i16 %230, i16* %224, align 4
  br label %231

231:                                              ; preds = %194, %198, %202
  %232 = and i32 %195, 67109888
  %233 = icmp ne i32 %232, 0
  %234 = and i32 %195, 384
  %235 = icmp eq i32 %234, 128
  %236 = and i1 %235, %233
  br i1 %236, label %237, label %254

237:                                              ; preds = %231
  %238 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %239 = load i8, i8* %238, align 2
  %240 = icmp eq i8 %239, 16
  br i1 %240, label %241, label %254

241:                                              ; preds = %237
  %242 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %243 = load i16, i16* %242, align 2
  %244 = mul i16 %243, 257
  store i16 %244, i16* %242, align 2
  %245 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %246 = load i16, i16* %245, align 4
  %247 = mul i16 %246, 257
  store i16 %247, i16* %245, align 4
  %248 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %249 = load i16, i16* %248, align 2
  %250 = mul i16 %249, 257
  store i16 %250, i16* %248, align 2
  %251 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %252 = load i16, i16* %251, align 4
  %253 = mul i16 %252, 257
  store i16 %253, i16* %251, align 4
  br label %254

254:                                              ; preds = %231, %241, %237
  %255 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 0
  %256 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %255, i8* align 4 %256, i64 10, i1 false)
  %257 = and i32 %195, 8192
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %303

259:                                              ; preds = %254
  %260 = and i32 %195, 6291456
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %272, label %262

262:                                              ; preds = %259
  %263 = load i32, i32* %3, align 8
  %264 = call i32 @cr_png_gamma_significant(i32 %263) #6
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %303

266:                                              ; preds = %262
  %267 = load i32, i32* %6, align 4
  %268 = call i32 @cr_png_gamma_significant(i32 %267) #6
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %303

270:                                              ; preds = %266
  %271 = load i32, i32* %33, align 4
  br label %272

272:                                              ; preds = %270, %259
  %273 = phi i32 [ %271, %270 ], [ %195, %259 ]
  %274 = trunc i32 %273 to i8
  %275 = icmp slt i8 %274, 0
  br i1 %275, label %276, label %293

276:                                              ; preds = %272
  %277 = load i32, i32* %3, align 8
  %278 = call i32 @cr_png_gamma_significant(i32 %277) #6
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %303

280:                                              ; preds = %276
  %281 = load i32, i32* %6, align 4
  %282 = call i32 @cr_png_gamma_significant(i32 %281) #6
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %303

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 71
  %286 = load i8, i8* %285, align 2
  %287 = icmp eq i8 %286, 3
  br i1 %287, label %288, label %293

288:                                              ; preds = %284
  %289 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 72
  %290 = load i32, i32* %289, align 8
  %291 = call i32 @cr_png_gamma_significant(i32 %290) #6
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %303

293:                                              ; preds = %288, %284, %272
  %294 = load i32, i32* %33, align 4
  %295 = and i32 %294, 8388608
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %674, label %297

297:                                              ; preds = %293
  %298 = load i32, i32* %6, align 4
  %299 = call i32 @cr_png_gamma_significant(i32 %298) #6
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %303

301:                                              ; preds = %297
  %302 = load i32, i32* %33, align 4
  br label %674

303:                                              ; preds = %266, %262, %288, %280, %276, %297, %254
  %304 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %305 = load i8, i8* %304, align 2
  %306 = zext i8 %305 to i32
  call void @cr_png_build_gamma_table(%struct.png_struct_def* %0, i32 %306) #6
  %307 = load i32, i32* %33, align 4
  %308 = trunc i32 %307 to i8
  %309 = icmp slt i8 %308, 0
  br i1 %309, label %310, label %629

310:                                              ; preds = %303
  %311 = and i32 %307, 6291456
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %314, label %313

313:                                              ; preds = %310
  call void @cr_png_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %314

314:                                              ; preds = %310, %313
  %315 = load i8, i8* %94, align 1
  %316 = icmp eq i8 %315, 3
  br i1 %316, label %317, label %543

317:                                              ; preds = %314
  %318 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %319 = load %struct.png_color_struct*, %struct.png_color_struct** %318, align 8
  %320 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 53
  %321 = load i16, i16* %320, align 8
  %322 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 71
  %323 = load i8, i8* %322, align 2
  switch i8 %323, label %359 [
    i8 2, label %324
    i8 1, label %350
    i8 3, label %352
  ]

324:                                              ; preds = %317
  %325 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 80
  %326 = load i8*, i8** %325, align 8
  %327 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %328 = load i16, i16* %327, align 2
  %329 = zext i16 %328 to i64
  %330 = getelementptr inbounds i8, i8* %326, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %333 = load i16, i16* %332, align 4
  %334 = zext i16 %333 to i64
  %335 = getelementptr inbounds i8, i8* %326, i64 %334
  %336 = load i8, i8* %335, align 1
  %337 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %338 = load i16, i16* %337, align 2
  %339 = zext i16 %338 to i64
  %340 = getelementptr inbounds i8, i8* %326, i64 %339
  %341 = load i8, i8* %340, align 1
  %342 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 83
  %343 = load i8*, i8** %342, align 8
  %344 = getelementptr inbounds i8, i8* %343, i64 %329
  %345 = load i8, i8* %344, align 1
  %346 = getelementptr inbounds i8, i8* %343, i64 %334
  %347 = load i8, i8* %346, align 1
  %348 = getelementptr inbounds i8, i8* %343, i64 %339
  %349 = load i8, i8* %348, align 1
  br label %411

350:                                              ; preds = %317
  %351 = load i32, i32* %6, align 4
  br label %359

352:                                              ; preds = %317
  %353 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 72
  %354 = load i32, i32* %353, align 8
  %355 = call i32 @cr_png_reciprocal(i32 %354) #6
  %356 = load i32, i32* %353, align 8
  %357 = load i32, i32* %6, align 4
  %358 = call i32 @cr_png_reciprocal2(i32 %356, i32 %357) #6
  br label %359

359:                                              ; preds = %317, %352, %350
  %360 = phi i32 [ %358, %352 ], [ 100000, %350 ], [ 100000, %317 ]
  %361 = phi i32 [ %355, %352 ], [ %351, %350 ], [ 100000, %317 ]
  %362 = call i32 @cr_png_gamma_significant(i32 %360) #6
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %365 = load i16, i16* %364, align 2
  br i1 %363, label %377, label %366

366:                                              ; preds = %359
  %367 = zext i16 %365 to i32
  %368 = call zeroext i8 @cr_png_gamma_8bit_correct(i32 %367, i32 %360) #6
  %369 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %370 = load i16, i16* %369, align 4
  %371 = zext i16 %370 to i32
  %372 = call zeroext i8 @cr_png_gamma_8bit_correct(i32 %371, i32 %360) #6
  %373 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %374 = load i16, i16* %373, align 2
  %375 = zext i16 %374 to i32
  %376 = call zeroext i8 @cr_png_gamma_8bit_correct(i32 %375, i32 %360) #6
  br label %385

377:                                              ; preds = %359
  %378 = trunc i16 %365 to i8
  %379 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %380 = load i16, i16* %379, align 4
  %381 = trunc i16 %380 to i8
  %382 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %383 = load i16, i16* %382, align 2
  %384 = trunc i16 %383 to i8
  br label %385

385:                                              ; preds = %377, %366
  %386 = phi i8 [ %368, %366 ], [ %378, %377 ]
  %387 = phi i8 [ %372, %366 ], [ %381, %377 ]
  %388 = phi i8 [ %376, %366 ], [ %384, %377 ]
  %389 = call i32 @cr_png_gamma_significant(i32 %361) #6
  %390 = icmp eq i32 %389, 0
  %391 = load i16, i16* %364, align 2
  br i1 %390, label %403, label %392

392:                                              ; preds = %385
  %393 = zext i16 %391 to i32
  %394 = call zeroext i8 @cr_png_gamma_8bit_correct(i32 %393, i32 %361) #6
  %395 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %396 = load i16, i16* %395, align 4
  %397 = zext i16 %396 to i32
  %398 = call zeroext i8 @cr_png_gamma_8bit_correct(i32 %397, i32 %361) #6
  %399 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %400 = load i16, i16* %399, align 2
  %401 = zext i16 %400 to i32
  %402 = call zeroext i8 @cr_png_gamma_8bit_correct(i32 %401, i32 %361) #6
  br label %411

403:                                              ; preds = %385
  %404 = trunc i16 %391 to i8
  %405 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %406 = load i16, i16* %405, align 4
  %407 = trunc i16 %406 to i8
  %408 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %409 = load i16, i16* %408, align 2
  %410 = trunc i16 %409 to i8
  br label %411

411:                                              ; preds = %392, %403, %324
  %412 = phi i8 [ %345, %324 ], [ %394, %392 ], [ %404, %403 ]
  %413 = phi i8 [ %347, %324 ], [ %398, %392 ], [ %407, %403 ]
  %414 = phi i8 [ %349, %324 ], [ %402, %392 ], [ %410, %403 ]
  %415 = phi i8 [ %331, %324 ], [ %386, %392 ], [ %386, %403 ]
  %416 = phi i8 [ %336, %324 ], [ %387, %392 ], [ %387, %403 ]
  %417 = phi i8 [ %341, %324 ], [ %388, %392 ], [ %388, %403 ]
  %418 = icmp eq i16 %321, 0
  br i1 %418, label %540, label %419

419:                                              ; preds = %411
  %420 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 54
  %421 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 88
  %422 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 80
  %423 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 83
  %424 = zext i8 %412 to i32
  %425 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 82
  %426 = zext i8 %413 to i32
  %427 = zext i8 %414 to i32
  %428 = zext i16 %321 to i64
  br label %429

429:                                              ; preds = %537, %419
  %430 = phi i64 [ 0, %419 ], [ %538, %537 ]
  %431 = load i16, i16* %420, align 2
  %432 = zext i16 %431 to i64
  %433 = icmp ult i64 %430, %432
  br i1 %433, label %434, label %518

434:                                              ; preds = %429
  %435 = load i8*, i8** %421, align 8
  %436 = getelementptr inbounds i8, i8* %435, i64 %430
  %437 = load i8, i8* %436, align 1
  switch i8 %437, label %442 [
    i8 -1, label %518
    i8 0, label %438
  ]

438:                                              ; preds = %434
  %439 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %319, i64 %430, i32 0
  store i8 %415, i8* %439, align 1
  %440 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %319, i64 %430, i32 1
  store i8 %416, i8* %440, align 1
  %441 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %319, i64 %430, i32 2
  store i8 %417, i8* %441, align 1
  br label %537

442:                                              ; preds = %434
  %443 = load i8*, i8** %423, align 8
  %444 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %319, i64 %430, i32 0
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i64
  %447 = getelementptr inbounds i8, i8* %443, i64 %446
  %448 = load i8, i8* %447, align 1
  %449 = zext i8 %448 to i32
  %450 = zext i8 %437 to i32
  %451 = mul nuw nsw i32 %449, %450
  %452 = xor i8 %437, -1
  %453 = zext i8 %452 to i32
  %454 = mul nuw nsw i32 %453, %424
  %455 = add nuw nsw i32 %454, 128
  %456 = add nuw nsw i32 %455, %451
  %457 = lshr i32 %456, 8
  %458 = and i32 %457, 255
  %459 = add nuw nsw i32 %458, %456
  %460 = lshr i32 %459, 8
  %461 = load i8*, i8** %425, align 8
  %462 = and i32 %460, 255
  %463 = zext i32 %462 to i64
  %464 = getelementptr inbounds i8, i8* %461, i64 %463
  %465 = load i8, i8* %464, align 1
  store i8 %465, i8* %444, align 1
  %466 = load i8*, i8** %423, align 8
  %467 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %319, i64 %430, i32 1
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i64
  %470 = getelementptr inbounds i8, i8* %466, i64 %469
  %471 = load i8, i8* %470, align 1
  %472 = zext i8 %471 to i32
  %473 = load i8*, i8** %421, align 8
  %474 = getelementptr inbounds i8, i8* %473, i64 %430
  %475 = load i8, i8* %474, align 1
  %476 = zext i8 %475 to i32
  %477 = mul nuw nsw i32 %476, %472
  %478 = xor i8 %475, -1
  %479 = zext i8 %478 to i32
  %480 = mul nuw nsw i32 %479, %426
  %481 = add nuw nsw i32 %480, 128
  %482 = add nuw nsw i32 %481, %477
  %483 = lshr i32 %482, 8
  %484 = and i32 %483, 255
  %485 = add nuw nsw i32 %484, %482
  %486 = lshr i32 %485, 8
  %487 = load i8*, i8** %425, align 8
  %488 = and i32 %486, 255
  %489 = zext i32 %488 to i64
  %490 = getelementptr inbounds i8, i8* %487, i64 %489
  %491 = load i8, i8* %490, align 1
  store i8 %491, i8* %467, align 1
  %492 = load i8*, i8** %423, align 8
  %493 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %319, i64 %430, i32 2
  %494 = load i8, i8* %493, align 1
  %495 = zext i8 %494 to i64
  %496 = getelementptr inbounds i8, i8* %492, i64 %495
  %497 = load i8, i8* %496, align 1
  %498 = zext i8 %497 to i32
  %499 = load i8*, i8** %421, align 8
  %500 = getelementptr inbounds i8, i8* %499, i64 %430
  %501 = load i8, i8* %500, align 1
  %502 = zext i8 %501 to i32
  %503 = mul nuw nsw i32 %502, %498
  %504 = xor i8 %501, -1
  %505 = zext i8 %504 to i32
  %506 = mul nuw nsw i32 %505, %427
  %507 = add nuw nsw i32 %506, 128
  %508 = add nuw nsw i32 %507, %503
  %509 = lshr i32 %508, 8
  %510 = and i32 %509, 255
  %511 = add nuw nsw i32 %510, %508
  %512 = lshr i32 %511, 8
  %513 = load i8*, i8** %425, align 8
  %514 = and i32 %512, 255
  %515 = zext i32 %514 to i64
  %516 = getelementptr inbounds i8, i8* %513, i64 %515
  %517 = load i8, i8* %516, align 1
  store i8 %517, i8* %493, align 1
  br label %537

518:                                              ; preds = %434, %429
  %519 = load i8*, i8** %422, align 8
  %520 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %319, i64 %430, i32 0
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i64
  %523 = getelementptr inbounds i8, i8* %519, i64 %522
  %524 = load i8, i8* %523, align 1
  store i8 %524, i8* %520, align 1
  %525 = load i8*, i8** %422, align 8
  %526 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %319, i64 %430, i32 1
  %527 = load i8, i8* %526, align 1
  %528 = zext i8 %527 to i64
  %529 = getelementptr inbounds i8, i8* %525, i64 %528
  %530 = load i8, i8* %529, align 1
  store i8 %530, i8* %526, align 1
  %531 = load i8*, i8** %422, align 8
  %532 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %319, i64 %430, i32 2
  %533 = load i8, i8* %532, align 1
  %534 = zext i8 %533 to i64
  %535 = getelementptr inbounds i8, i8* %531, i64 %534
  %536 = load i8, i8* %535, align 1
  store i8 %536, i8* %532, align 1
  br label %537

537:                                              ; preds = %518, %442, %438
  %538 = add nuw nsw i64 %430, 1
  %539 = icmp eq i64 %538, %428
  br i1 %539, label %540, label %429

540:                                              ; preds = %537, %411
  %541 = load i32, i32* %33, align 4
  %542 = and i32 %541, -8321
  store i32 %542, i32* %33, align 4
  br label %771

543:                                              ; preds = %314
  %544 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 71
  %545 = load i8, i8* %544, align 2
  switch i8 %545, label %561 [
    i8 1, label %546
    i8 2, label %548
    i8 3, label %554
  ]

546:                                              ; preds = %543
  %547 = load i32, i32* %6, align 4
  br label %562

548:                                              ; preds = %543
  %549 = load i32, i32* %3, align 8
  %550 = call i32 @cr_png_reciprocal(i32 %549) #6
  %551 = load i32, i32* %3, align 8
  %552 = load i32, i32* %6, align 4
  %553 = call i32 @cr_png_reciprocal2(i32 %551, i32 %552) #6
  br label %562

554:                                              ; preds = %543
  %555 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 72
  %556 = load i32, i32* %555, align 8
  %557 = call i32 @cr_png_reciprocal(i32 %556) #6
  %558 = load i32, i32* %555, align 8
  %559 = load i32, i32* %6, align 4
  %560 = call i32 @cr_png_reciprocal2(i32 %558, i32 %559) #6
  br label %562

561:                                              ; preds = %543
  call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0)) #7
  unreachable

562:                                              ; preds = %554, %548, %546
  %563 = phi i32 [ %557, %554 ], [ %550, %548 ], [ %547, %546 ]
  %564 = phi i32 [ %560, %554 ], [ %553, %548 ], [ 100000, %546 ]
  %565 = call i32 @cr_png_gamma_significant(i32 %563) #6
  %566 = call i32 @cr_png_gamma_significant(i32 %564) #6
  %567 = icmp ne i32 %565, 0
  br i1 %567, label %568, label %574

568:                                              ; preds = %562
  %569 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %570 = load i16, i16* %569, align 4
  %571 = zext i16 %570 to i32
  %572 = call zeroext i16 @cr_png_gamma_correct(%struct.png_struct_def* %0, i32 %571, i32 %563) #6
  %573 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 4
  store i16 %572, i16* %573, align 2
  br label %574

574:                                              ; preds = %568, %562
  %575 = icmp ne i32 %566, 0
  br i1 %575, label %576, label %581

576:                                              ; preds = %574
  %577 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %578 = load i16, i16* %577, align 4
  %579 = zext i16 %578 to i32
  %580 = call zeroext i16 @cr_png_gamma_correct(%struct.png_struct_def* %0, i32 %579, i32 %564) #6
  store i16 %580, i16* %577, align 4
  br label %581

581:                                              ; preds = %576, %574
  %582 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %583 = load i16, i16* %582, align 2
  %584 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %585 = load i16, i16* %584, align 4
  %586 = icmp eq i16 %583, %585
  br i1 %586, label %587, label %595

587:                                              ; preds = %581
  %588 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %589 = load i16, i16* %588, align 2
  %590 = icmp eq i16 %583, %589
  br i1 %590, label %591, label %595

591:                                              ; preds = %587
  %592 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %593 = load i16, i16* %592, align 4
  %594 = icmp eq i16 %583, %593
  br i1 %594, label %621, label %595

595:                                              ; preds = %591, %587, %581
  br i1 %567, label %596, label %609

596:                                              ; preds = %595
  %597 = zext i16 %583 to i32
  %598 = call zeroext i16 @cr_png_gamma_correct(%struct.png_struct_def* %0, i32 %597, i32 %563) #6
  %599 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 1
  store i16 %598, i16* %599, align 2
  %600 = load i16, i16* %584, align 4
  %601 = zext i16 %600 to i32
  %602 = call zeroext i16 @cr_png_gamma_correct(%struct.png_struct_def* %0, i32 %601, i32 %563) #6
  %603 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 2
  store i16 %602, i16* %603, align 2
  %604 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %605 = load i16, i16* %604, align 2
  %606 = zext i16 %605 to i32
  %607 = call zeroext i16 @cr_png_gamma_correct(%struct.png_struct_def* %0, i32 %606, i32 %563) #6
  %608 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 3
  store i16 %607, i16* %608, align 2
  br label %609

609:                                              ; preds = %596, %595
  br i1 %575, label %610, label %627

610:                                              ; preds = %609
  %611 = load i16, i16* %582, align 2
  %612 = zext i16 %611 to i32
  %613 = call zeroext i16 @cr_png_gamma_correct(%struct.png_struct_def* %0, i32 %612, i32 %564) #6
  store i16 %613, i16* %582, align 2
  %614 = load i16, i16* %584, align 4
  %615 = zext i16 %614 to i32
  %616 = call zeroext i16 @cr_png_gamma_correct(%struct.png_struct_def* %0, i32 %615, i32 %564) #6
  store i16 %616, i16* %584, align 4
  %617 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %618 = load i16, i16* %617, align 2
  %619 = zext i16 %618 to i32
  %620 = call zeroext i16 @cr_png_gamma_correct(%struct.png_struct_def* %0, i32 %619, i32 %564) #6
  store i16 %620, i16* %617, align 2
  br label %627

621:                                              ; preds = %591
  %622 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 4
  %623 = load i16, i16* %622, align 2
  %624 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 3
  store i16 %623, i16* %624, align 2
  %625 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 2
  store i16 %623, i16* %625, align 2
  %626 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 1
  store i16 %623, i16* %626, align 2
  store i16 %583, i16* %588, align 2
  store i16 %583, i16* %584, align 4
  br label %627

627:                                              ; preds = %609, %610, %621
  store i8 1, i8* %544, align 2
  %628 = load i32, i32* %33, align 4
  br label %771

629:                                              ; preds = %303
  %630 = load i8, i8* %94, align 1
  %631 = icmp eq i8 %630, 3
  br i1 %631, label %632, label %771

632:                                              ; preds = %629
  %633 = and i32 %307, 4096
  %634 = icmp eq i32 %633, 0
  %635 = and i32 %307, 6291456
  %636 = icmp eq i32 %635, 0
  %637 = or i1 %634, %636
  br i1 %637, label %638, label %771

638:                                              ; preds = %632
  %639 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %640 = load %struct.png_color_struct*, %struct.png_color_struct** %639, align 8
  %641 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 53
  %642 = load i16, i16* %641, align 8
  %643 = icmp eq i16 %642, 0
  br i1 %643, label %671, label %644

644:                                              ; preds = %638
  %645 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 80
  %646 = zext i16 %642 to i64
  br label %647

647:                                              ; preds = %647, %644
  %648 = phi i64 [ 0, %644 ], [ %667, %647 ]
  %649 = load i8*, i8** %645, align 8
  %650 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %640, i64 %648, i32 0
  %651 = load i8, i8* %650, align 1
  %652 = zext i8 %651 to i64
  %653 = getelementptr inbounds i8, i8* %649, i64 %652
  %654 = load i8, i8* %653, align 1
  store i8 %654, i8* %650, align 1
  %655 = load i8*, i8** %645, align 8
  %656 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %640, i64 %648, i32 1
  %657 = load i8, i8* %656, align 1
  %658 = zext i8 %657 to i64
  %659 = getelementptr inbounds i8, i8* %655, i64 %658
  %660 = load i8, i8* %659, align 1
  store i8 %660, i8* %656, align 1
  %661 = load i8*, i8** %645, align 8
  %662 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %640, i64 %648, i32 2
  %663 = load i8, i8* %662, align 1
  %664 = zext i8 %663 to i64
  %665 = getelementptr inbounds i8, i8* %661, i64 %664
  %666 = load i8, i8* %665, align 1
  store i8 %666, i8* %662, align 1
  %667 = add nuw nsw i64 %648, 1
  %668 = icmp eq i64 %667, %646
  br i1 %668, label %669, label %647

669:                                              ; preds = %647
  %670 = load i32, i32* %33, align 4
  br label %671

671:                                              ; preds = %669, %638
  %672 = phi i32 [ %670, %669 ], [ %307, %638 ]
  %673 = and i32 %672, -8193
  store i32 %673, i32* %33, align 4
  br label %771

674:                                              ; preds = %301, %293
  %675 = phi i32 [ %302, %301 ], [ %294, %293 ]
  %676 = trunc i32 %675 to i8
  %677 = icmp slt i8 %676, 0
  br i1 %677, label %678, label %771

678:                                              ; preds = %674
  %679 = load i8, i8* %94, align 1
  %680 = icmp eq i8 %679, 3
  br i1 %680, label %681, label %771

681:                                              ; preds = %678
  %682 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 54
  %683 = load i16, i16* %682, align 2
  %684 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %685 = load %struct.png_color_struct*, %struct.png_color_struct** %684, align 8
  %686 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %687 = load i16, i16* %686, align 2
  %688 = trunc i16 %687 to i8
  %689 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %690 = load i16, i16* %689, align 4
  %691 = trunc i16 %690 to i8
  %692 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %693 = load i16, i16* %692, align 2
  %694 = trunc i16 %693 to i8
  %695 = icmp eq i16 %683, 0
  br i1 %695, label %768, label %696

696:                                              ; preds = %681
  %697 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 88
  %698 = and i16 %687, 255
  %699 = and i16 %690, 255
  %700 = and i16 %693, 255
  %701 = zext i16 %683 to i64
  br label %702

702:                                              ; preds = %763, %696
  %703 = phi i64 [ 0, %696 ], [ %764, %763 ]
  %704 = load i8*, i8** %697, align 8
  %705 = getelementptr inbounds i8, i8* %704, i64 %703
  %706 = load i8, i8* %705, align 1
  switch i8 %706, label %711 [
    i8 0, label %707
    i8 -1, label %763
  ]

707:                                              ; preds = %702
  %708 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %685, i64 %703, i32 0
  store i8 %688, i8* %708, align 1
  %709 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %685, i64 %703, i32 1
  store i8 %691, i8* %709, align 1
  %710 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %685, i64 %703, i32 2
  store i8 %694, i8* %710, align 1
  br label %763

711:                                              ; preds = %702
  %712 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %685, i64 %703, i32 0
  %713 = load i8, i8* %712, align 1
  %714 = zext i8 %713 to i16
  %715 = zext i8 %706 to i16
  %716 = mul nuw i16 %714, %715
  %717 = xor i8 %706, -1
  %718 = zext i8 %717 to i16
  %719 = mul nuw i16 %698, %718
  %720 = add i16 %719, 128
  %721 = add i16 %720, %716
  %722 = zext i16 %721 to i32
  %723 = lshr i32 %722, 8
  %724 = add nuw nsw i32 %723, %722
  %725 = lshr i32 %724, 8
  %726 = trunc i32 %725 to i8
  store i8 %726, i8* %712, align 1
  %727 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %685, i64 %703, i32 1
  %728 = load i8, i8* %727, align 1
  %729 = zext i8 %728 to i16
  %730 = load i8*, i8** %697, align 8
  %731 = getelementptr inbounds i8, i8* %730, i64 %703
  %732 = load i8, i8* %731, align 1
  %733 = zext i8 %732 to i16
  %734 = mul nuw i16 %733, %729
  %735 = xor i8 %732, -1
  %736 = zext i8 %735 to i16
  %737 = mul nuw i16 %699, %736
  %738 = add i16 %737, 128
  %739 = add i16 %738, %734
  %740 = zext i16 %739 to i32
  %741 = lshr i32 %740, 8
  %742 = add nuw nsw i32 %741, %740
  %743 = lshr i32 %742, 8
  %744 = trunc i32 %743 to i8
  store i8 %744, i8* %727, align 1
  %745 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %685, i64 %703, i32 2
  %746 = load i8, i8* %745, align 1
  %747 = zext i8 %746 to i16
  %748 = load i8*, i8** %697, align 8
  %749 = getelementptr inbounds i8, i8* %748, i64 %703
  %750 = load i8, i8* %749, align 1
  %751 = zext i8 %750 to i16
  %752 = mul nuw i16 %751, %747
  %753 = xor i8 %750, -1
  %754 = zext i8 %753 to i16
  %755 = mul nuw i16 %700, %754
  %756 = add i16 %755, 128
  %757 = add i16 %756, %752
  %758 = zext i16 %757 to i32
  %759 = lshr i32 %758, 8
  %760 = add nuw nsw i32 %759, %758
  %761 = lshr i32 %760, 8
  %762 = trunc i32 %761 to i8
  store i8 %762, i8* %745, align 1
  br label %763

763:                                              ; preds = %702, %707, %711
  %764 = add nuw nsw i64 %703, 1
  %765 = icmp eq i64 %764, %701
  br i1 %765, label %766, label %702

766:                                              ; preds = %763
  %767 = load i32, i32* %33, align 4
  br label %768

768:                                              ; preds = %766, %681
  %769 = phi i32 [ %767, %766 ], [ %675, %681 ]
  %770 = and i32 %769, -129
  store i32 %770, i32* %33, align 4
  br label %771

771:                                              ; preds = %632, %674, %678, %768, %627, %540, %671, %629
  %772 = phi i32 [ %307, %632 ], [ %675, %674 ], [ %675, %678 ], [ %770, %768 ], [ %628, %627 ], [ %542, %540 ], [ %673, %671 ], [ %307, %629 ]
  %773 = and i32 %772, 4104
  %774 = icmp eq i32 %773, 8
  br i1 %774, label %775, label %914

775:                                              ; preds = %771
  %776 = load i8, i8* %94, align 1
  %777 = icmp eq i8 %776, 3
  br i1 %777, label %778, label %914

778:                                              ; preds = %775
  %779 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 53
  %780 = load i16, i16* %779, align 8
  %781 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 86, i32 0
  %782 = load i8, i8* %781, align 8
  %783 = zext i8 %782 to i32
  %784 = sub nsw i32 8, %783
  %785 = and i32 %772, -9
  store i32 %785, i32* %33, align 4
  %786 = add i8 %782, -1
  %787 = icmp ult i8 %786, 7
  %788 = icmp ne i16 %780, 0
  %789 = and i1 %787, %788
  br i1 %789, label %790, label %826

790:                                              ; preds = %778
  %791 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %792 = zext i16 %780 to i64
  %793 = and i64 %792, 1
  %794 = icmp eq i16 %780, 1
  br i1 %794, label %816, label %795

795:                                              ; preds = %790
  %796 = sub nsw i64 %792, %793
  br label %797

797:                                              ; preds = %797, %795
  %798 = phi i64 [ 0, %795 ], [ %813, %797 ]
  %799 = phi i64 [ %796, %795 ], [ %814, %797 ]
  %800 = load %struct.png_color_struct*, %struct.png_color_struct** %791, align 8
  %801 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %800, i64 %798, i32 0
  %802 = load i8, i8* %801, align 1
  %803 = zext i8 %802 to i32
  %804 = lshr i32 %803, %784
  %805 = trunc i32 %804 to i8
  store i8 %805, i8* %801, align 1
  %806 = or i64 %798, 1
  %807 = load %struct.png_color_struct*, %struct.png_color_struct** %791, align 8
  %808 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %807, i64 %806, i32 0
  %809 = load i8, i8* %808, align 1
  %810 = zext i8 %809 to i32
  %811 = lshr i32 %810, %784
  %812 = trunc i32 %811 to i8
  store i8 %812, i8* %808, align 1
  %813 = add nuw nsw i64 %798, 2
  %814 = add i64 %799, -2
  %815 = icmp eq i64 %814, 0
  br i1 %815, label %816, label %797

816:                                              ; preds = %797, %790
  %817 = phi i64 [ 0, %790 ], [ %813, %797 ]
  %818 = icmp eq i64 %793, 0
  br i1 %818, label %826, label %819

819:                                              ; preds = %816
  %820 = load %struct.png_color_struct*, %struct.png_color_struct** %791, align 8
  %821 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %820, i64 %817, i32 0
  %822 = load i8, i8* %821, align 1
  %823 = zext i8 %822 to i32
  %824 = lshr i32 %823, %784
  %825 = trunc i32 %824 to i8
  store i8 %825, i8* %821, align 1
  br label %826

826:                                              ; preds = %819, %816, %778
  %827 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 86, i32 1
  %828 = load i8, i8* %827, align 1
  %829 = zext i8 %828 to i32
  %830 = sub nsw i32 8, %829
  %831 = add i8 %828, -1
  %832 = icmp ult i8 %831, 7
  %833 = and i1 %832, %788
  br i1 %833, label %834, label %870

834:                                              ; preds = %826
  %835 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %836 = zext i16 %780 to i64
  %837 = and i64 %836, 1
  %838 = icmp eq i16 %780, 1
  br i1 %838, label %860, label %839

839:                                              ; preds = %834
  %840 = sub nsw i64 %836, %837
  br label %841

841:                                              ; preds = %841, %839
  %842 = phi i64 [ 0, %839 ], [ %857, %841 ]
  %843 = phi i64 [ %840, %839 ], [ %858, %841 ]
  %844 = load %struct.png_color_struct*, %struct.png_color_struct** %835, align 8
  %845 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %844, i64 %842, i32 1
  %846 = load i8, i8* %845, align 1
  %847 = zext i8 %846 to i32
  %848 = lshr i32 %847, %830
  %849 = trunc i32 %848 to i8
  store i8 %849, i8* %845, align 1
  %850 = or i64 %842, 1
  %851 = load %struct.png_color_struct*, %struct.png_color_struct** %835, align 8
  %852 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %851, i64 %850, i32 1
  %853 = load i8, i8* %852, align 1
  %854 = zext i8 %853 to i32
  %855 = lshr i32 %854, %830
  %856 = trunc i32 %855 to i8
  store i8 %856, i8* %852, align 1
  %857 = add nuw nsw i64 %842, 2
  %858 = add i64 %843, -2
  %859 = icmp eq i64 %858, 0
  br i1 %859, label %860, label %841

860:                                              ; preds = %841, %834
  %861 = phi i64 [ 0, %834 ], [ %857, %841 ]
  %862 = icmp eq i64 %837, 0
  br i1 %862, label %870, label %863

863:                                              ; preds = %860
  %864 = load %struct.png_color_struct*, %struct.png_color_struct** %835, align 8
  %865 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %864, i64 %861, i32 1
  %866 = load i8, i8* %865, align 1
  %867 = zext i8 %866 to i32
  %868 = lshr i32 %867, %830
  %869 = trunc i32 %868 to i8
  store i8 %869, i8* %865, align 1
  br label %870

870:                                              ; preds = %863, %860, %826
  %871 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 86, i32 2
  %872 = load i8, i8* %871, align 2
  %873 = zext i8 %872 to i32
  %874 = sub nsw i32 8, %873
  %875 = add i8 %872, -1
  %876 = icmp ult i8 %875, 7
  %877 = and i1 %876, %788
  br i1 %877, label %878, label %914

878:                                              ; preds = %870
  %879 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %880 = zext i16 %780 to i64
  %881 = and i64 %880, 1
  %882 = icmp eq i16 %780, 1
  br i1 %882, label %904, label %883

883:                                              ; preds = %878
  %884 = sub nsw i64 %880, %881
  br label %885

885:                                              ; preds = %885, %883
  %886 = phi i64 [ 0, %883 ], [ %901, %885 ]
  %887 = phi i64 [ %884, %883 ], [ %902, %885 ]
  %888 = load %struct.png_color_struct*, %struct.png_color_struct** %879, align 8
  %889 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %888, i64 %886, i32 2
  %890 = load i8, i8* %889, align 1
  %891 = zext i8 %890 to i32
  %892 = lshr i32 %891, %874
  %893 = trunc i32 %892 to i8
  store i8 %893, i8* %889, align 1
  %894 = or i64 %886, 1
  %895 = load %struct.png_color_struct*, %struct.png_color_struct** %879, align 8
  %896 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %895, i64 %894, i32 2
  %897 = load i8, i8* %896, align 1
  %898 = zext i8 %897 to i32
  %899 = lshr i32 %898, %874
  %900 = trunc i32 %899 to i8
  store i8 %900, i8* %896, align 1
  %901 = add nuw nsw i64 %886, 2
  %902 = add i64 %887, -2
  %903 = icmp eq i64 %902, 0
  br i1 %903, label %904, label %885

904:                                              ; preds = %885, %878
  %905 = phi i64 [ 0, %878 ], [ %901, %885 ]
  %906 = icmp eq i64 %881, 0
  br i1 %906, label %914, label %907

907:                                              ; preds = %904
  %908 = load %struct.png_color_struct*, %struct.png_color_struct** %879, align 8
  %909 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %908, i64 %905, i32 2
  %910 = load i8, i8* %909, align 1
  %911 = zext i8 %910 to i32
  %912 = lshr i32 %911, %874
  %913 = trunc i32 %912 to i8
  store i8 %913, i8* %909, align 1
  br label %914

914:                                              ; preds = %907, %904, %870, %771, %775
  ret void
}

declare i32 @cr_png_gamma_significant(i32) local_unnamed_addr #1

declare void @cr_png_colorspace_set_rgb_coefficients(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_build_gamma_table(%struct.png_struct_def*, i32) local_unnamed_addr #1

declare i32 @cr_png_reciprocal2(i32, i32) local_unnamed_addr #1

declare zeroext i8 @cr_png_gamma_8bit_correct(i32, i32) local_unnamed_addr #1

declare zeroext i16 @cr_png_gamma_correct(%struct.png_struct_def*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_read_transform_info(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 4096
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 3
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 54
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %10, label %14, label %22

14:                                               ; preds = %7
  %15 = select i1 %13, i8 2, i8 6
  store i8 %15, i8* %8, align 1
  %16 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 7
  store i8 8, i8* %16, align 4
  %17 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 6
  store i16 0, i16* %17, align 2
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %19 = load %struct.png_color_struct*, %struct.png_color_struct** %18, align 8
  %20 = icmp eq %struct.png_color_struct* %19, null
  br i1 %20, label %21, label %35

21:                                               ; preds = %14
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #7
  unreachable

22:                                               ; preds = %7
  %23 = and i32 %4, 33554432
  %24 = icmp eq i32 %23, 0
  %25 = or i1 %24, %13
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = or i8 %9, 4
  store i8 %27, i8* %8, align 1
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 7
  %30 = load i8, i8* %29, align 4
  %31 = icmp ult i8 %30, 8
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i8 8, i8* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 6
  store i16 0, i16* %34, align 2
  br label %35

35:                                               ; preds = %2, %33, %14
  %36 = trunc i32 %4 to i8
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 26, i32 0
  %40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %39, i8* align 4 %40, i64 10, i1 false)
  br label %41

41:                                               ; preds = %38, %35
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 134, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 0
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 7
  %46 = load i8, i8* %45, align 4
  %47 = icmp ne i8 %46, 16
  %48 = and i32 %4, 67109888
  %49 = icmp eq i32 %48, 0
  %50 = or i1 %49, %47
  br i1 %50, label %52, label %51

51:                                               ; preds = %41
  store i8 8, i8* %45, align 4
  br label %52

52:                                               ; preds = %41, %51
  %53 = phi i8 [ %46, %41 ], [ 8, %51 ]
  %54 = and i32 %4, 16384
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %58 = load i8, i8* %57, align 1
  %59 = or i8 %58, 2
  store i8 %59, i8* %57, align 1
  br label %60

60:                                               ; preds = %52, %56
  %61 = and i32 %4, 6291456
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %65 = load i8, i8* %64, align 1
  %66 = and i8 %65, -3
  store i8 %66, i8* %64, align 1
  br label %67

67:                                               ; preds = %60, %63
  %68 = and i32 %4, 512
  %69 = icmp ne i32 %68, 0
  %70 = icmp eq i8 %53, 8
  %71 = and i1 %69, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 3
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  store i8 16, i8* %45, align 4
  br label %77

77:                                               ; preds = %67, %72, %76
  %78 = phi i8 [ 8, %72 ], [ %53, %67 ], [ 16, %76 ]
  %79 = and i32 %4, 4
  %80 = icmp ne i32 %79, 0
  %81 = icmp ult i8 %78, 8
  %82 = and i1 %80, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %77
  store i8 8, i8* %45, align 4
  br label %84

84:                                               ; preds = %77, %83
  %85 = phi i8 [ %78, %77 ], [ 8, %83 ]
  %86 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 3
  br i1 %88, label %89, label %91

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 12
  store i8 1, i8* %90, align 1
  br label %97

91:                                               ; preds = %84
  %92 = and i8 %87, 2
  %93 = icmp eq i8 %92, 0
  %94 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 12
  br i1 %93, label %96, label %95

95:                                               ; preds = %91
  store i8 3, i8* %94, align 1
  br label %97

96:                                               ; preds = %91
  store i8 1, i8* %94, align 1
  br label %97

97:                                               ; preds = %95, %96, %89
  %98 = phi i8 [ 3, %95 ], [ 1, %96 ], [ 1, %89 ]
  %99 = and i32 %4, 262144
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = and i8 %87, -5
  store i8 %102, i8* %86, align 1
  %103 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 6
  store i16 0, i16* %103, align 2
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8 [ %102, %101 ], [ %87, %97 ]
  %106 = and i8 %105, 4
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 12
  %110 = add nuw nsw i8 %98, 1
  store i8 %110, i8* %109, align 1
  br label %111

111:                                              ; preds = %104, %108
  %112 = phi i8 [ %98, %104 ], [ %110, %108 ]
  %113 = trunc i32 %4 to i16
  %114 = icmp slt i16 %113, 0
  br i1 %114, label %115, label %123

115:                                              ; preds = %111
  switch i8 %105, label %123 [
    i8 2, label %116
    i8 0, label %116
  ]

116:                                              ; preds = %115, %115
  %117 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 12
  %118 = add nuw nsw i8 %112, 1
  store i8 %118, i8* %117, align 1
  %119 = and i32 %4, 16777216
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %116
  %122 = or i8 %105, 4
  store i8 %122, i8* %86, align 1
  br label %123

123:                                              ; preds = %115, %116, %121, %111
  %124 = phi i8 [ %112, %115 ], [ %118, %116 ], [ %118, %121 ], [ %112, %111 ]
  %125 = and i32 %4, 1048576
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %139, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 13
  %129 = load i8, i8* %128, align 8
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %132, label %131

131:                                              ; preds = %127
  store i8 %129, i8* %45, align 4
  br label %132

132:                                              ; preds = %127, %131
  %133 = phi i8 [ %85, %127 ], [ %129, %131 ]
  %134 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 14
  %135 = load i8, i8* %134, align 1
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 12
  store i8 %135, i8* %138, align 1
  br label %139

139:                                              ; preds = %132, %123, %137
  %140 = phi i8 [ %133, %132 ], [ %85, %123 ], [ %133, %137 ]
  %141 = phi i8 [ %124, %132 ], [ %124, %123 ], [ %135, %137 ]
  %142 = mul i8 %140, %141
  %143 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 13
  store i8 %142, i8* %143, align 2
  %144 = icmp ugt i8 %142, 7
  %145 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = zext i32 %146 to i64
  %148 = zext i8 %142 to i64
  br i1 %144, label %149, label %152

149:                                              ; preds = %139
  %150 = lshr i64 %148, 3
  %151 = mul nuw nsw i64 %150, %147
  br label %156

152:                                              ; preds = %139
  %153 = mul nuw nsw i64 %147, %148
  %154 = add nuw nsw i64 %153, 7
  %155 = lshr i64 %154, 3
  br label %156

156:                                              ; preds = %152, %149
  %157 = phi i64 [ %151, %149 ], [ %155, %152 ]
  %158 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 3
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 49
  store i64 %157, i64* %159, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_do_read_transformations(%struct.png_struct_def* noalias, %struct.png_row_info_struct*) local_unnamed_addr #0 {
  %3 = alloca [4 x i32], align 16
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #7
  unreachable

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 16448
  %12 = icmp eq i32 %11, 16384
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0)) #7
  unreachable

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 4096
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %352, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 3
  br i1 %22, label %23, label %341

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %5, i64 1
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %26 = load %struct.png_color_struct*, %struct.png_color_struct** %25, align 8
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 88
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 54
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %35 = load i8, i8* %34, align 1
  %36 = icmp ult i8 %35, 8
  br i1 %36, label %37, label %218

37:                                               ; preds = %23
  switch i8 %35, label %38 [
    i8 1, label %40
    i8 2, label %87
    i8 4, label %133
  ]

38:                                               ; preds = %37
  %39 = zext i32 %33 to i64
  br label %214

40:                                               ; preds = %37
  %41 = zext i32 %33 to i64
  %42 = icmp eq i32 %33, 0
  br i1 %42, label %214, label %43

43:                                               ; preds = %40
  %44 = add i32 %33, 7
  %45 = and i32 %44, 7
  %46 = xor i32 %45, 7
  %47 = getelementptr inbounds i8, i8* %24, i64 %41
  %48 = add i32 %33, -1
  %49 = lshr i32 %48, 3
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %24, i64 %50
  %52 = and i32 %33, 1
  %53 = icmp eq i32 %48, 0
  br i1 %53, label %177, label %54

54:                                               ; preds = %43
  %55 = sub i32 %33, %52
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i8* [ %47, %54 ], [ %73, %56 ]
  %58 = phi i8* [ %51, %54 ], [ %84, %56 ]
  %59 = phi i32 [ %46, %54 ], [ %83, %56 ]
  %60 = phi i32 [ %55, %54 ], [ %85, %56 ]
  %61 = getelementptr inbounds i8, i8* %57, i64 -1
  %62 = load i8, i8* %58, align 1
  %63 = zext i8 %62 to i32
  %64 = shl i32 1, %59
  %65 = and i32 %64, %63
  %66 = icmp ne i32 %65, 0
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %61, align 1
  %68 = icmp eq i32 %59, 7
  %69 = getelementptr inbounds i8, i8* %58, i64 -1
  %70 = add nsw i32 %59, 1
  %71 = select i1 %68, i32 0, i32 %70
  %72 = select i1 %68, i8* %69, i8* %58
  %73 = getelementptr inbounds i8, i8* %57, i64 -2
  %74 = load i8, i8* %72, align 1
  %75 = zext i8 %74 to i32
  %76 = shl i32 1, %71
  %77 = and i32 %76, %75
  %78 = icmp ne i32 %77, 0
  %79 = zext i1 %78 to i8
  store i8 %79, i8* %73, align 1
  %80 = icmp eq i32 %71, 7
  %81 = getelementptr inbounds i8, i8* %72, i64 -1
  %82 = add nsw i32 %71, 1
  %83 = select i1 %80, i32 0, i32 %82
  %84 = select i1 %80, i8* %81, i8* %72
  %85 = add i32 %60, -2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %177, label %56

87:                                               ; preds = %37
  %88 = zext i32 %33 to i64
  %89 = icmp eq i32 %33, 0
  br i1 %89, label %214, label %90

90:                                               ; preds = %87
  %91 = shl i32 %33, 1
  %92 = add i32 %91, 6
  %93 = and i32 %92, 6
  %94 = xor i32 %93, 6
  %95 = getelementptr inbounds i8, i8* %24, i64 %88
  %96 = add i32 %33, -1
  %97 = lshr i32 %96, 2
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %24, i64 %98
  %100 = and i32 %33, 1
  %101 = icmp eq i32 %96, 0
  br i1 %101, label %190, label %102

102:                                              ; preds = %90
  %103 = sub i32 %33, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i8* [ %95, %102 ], [ %120, %104 ]
  %106 = phi i8* [ %99, %102 ], [ %130, %104 ]
  %107 = phi i32 [ %94, %102 ], [ %129, %104 ]
  %108 = phi i32 [ %103, %102 ], [ %131, %104 ]
  %109 = getelementptr inbounds i8, i8* %105, i64 -1
  %110 = load i8, i8* %106, align 1
  %111 = zext i8 %110 to i32
  %112 = lshr i32 %111, %107
  %113 = trunc i32 %112 to i8
  %114 = and i8 %113, 3
  store i8 %114, i8* %109, align 1
  %115 = icmp eq i32 %107, 6
  %116 = getelementptr inbounds i8, i8* %106, i64 -1
  %117 = add nsw i32 %107, 2
  %118 = select i1 %115, i32 0, i32 %117
  %119 = select i1 %115, i8* %116, i8* %106
  %120 = getelementptr inbounds i8, i8* %105, i64 -2
  %121 = load i8, i8* %119, align 1
  %122 = zext i8 %121 to i32
  %123 = lshr i32 %122, %118
  %124 = trunc i32 %123 to i8
  %125 = and i8 %124, 3
  store i8 %125, i8* %120, align 1
  %126 = icmp eq i32 %118, 6
  %127 = getelementptr inbounds i8, i8* %119, i64 -1
  %128 = add nsw i32 %118, 2
  %129 = select i1 %126, i32 0, i32 %128
  %130 = select i1 %126, i8* %127, i8* %119
  %131 = add i32 %108, -2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %190, label %104

133:                                              ; preds = %37
  %134 = zext i32 %33 to i64
  %135 = icmp eq i32 %33, 0
  br i1 %135, label %214, label %136

136:                                              ; preds = %133
  %137 = shl i32 %33, 2
  %138 = and i32 %137, 4
  %139 = getelementptr inbounds i8, i8* %24, i64 %134
  %140 = add i32 %33, -1
  %141 = lshr i32 %140, 1
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %24, i64 %142
  %144 = and i32 %33, 1
  %145 = icmp eq i32 %140, 0
  br i1 %145, label %202, label %146

146:                                              ; preds = %136
  %147 = sub i32 %33, %144
  br label %148

148:                                              ; preds = %148, %146
  %149 = phi i8* [ %139, %146 ], [ %164, %148 ]
  %150 = phi i8* [ %143, %146 ], [ %174, %148 ]
  %151 = phi i32 [ %138, %146 ], [ %173, %148 ]
  %152 = phi i32 [ %147, %146 ], [ %175, %148 ]
  %153 = getelementptr inbounds i8, i8* %149, i64 -1
  %154 = load i8, i8* %150, align 1
  %155 = zext i8 %154 to i32
  %156 = lshr i32 %155, %151
  %157 = trunc i32 %156 to i8
  %158 = and i8 %157, 15
  store i8 %158, i8* %153, align 1
  %159 = icmp eq i32 %151, 4
  %160 = getelementptr inbounds i8, i8* %150, i64 -1
  %161 = add nsw i32 %151, 4
  %162 = select i1 %159, i32 0, i32 %161
  %163 = select i1 %159, i8* %160, i8* %150
  %164 = getelementptr inbounds i8, i8* %149, i64 -2
  %165 = load i8, i8* %163, align 1
  %166 = zext i8 %165 to i32
  %167 = lshr i32 %166, %162
  %168 = trunc i32 %167 to i8
  %169 = and i8 %168, 15
  store i8 %169, i8* %164, align 1
  %170 = icmp eq i32 %162, 4
  %171 = getelementptr inbounds i8, i8* %163, i64 -1
  %172 = add nsw i32 %162, 4
  %173 = select i1 %170, i32 0, i32 %172
  %174 = select i1 %170, i8* %171, i8* %163
  %175 = add i32 %152, -2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %202, label %148

177:                                              ; preds = %56, %43
  %178 = phi i8* [ %47, %43 ], [ %73, %56 ]
  %179 = phi i8* [ %51, %43 ], [ %84, %56 ]
  %180 = phi i32 [ %46, %43 ], [ %83, %56 ]
  %181 = icmp eq i32 %52, 0
  br i1 %181, label %214, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds i8, i8* %178, i64 -1
  %184 = load i8, i8* %179, align 1
  %185 = zext i8 %184 to i32
  %186 = shl i32 1, %180
  %187 = and i32 %186, %185
  %188 = icmp ne i32 %187, 0
  %189 = zext i1 %188 to i8
  store i8 %189, i8* %183, align 1
  br label %214

190:                                              ; preds = %104, %90
  %191 = phi i8* [ %95, %90 ], [ %120, %104 ]
  %192 = phi i8* [ %99, %90 ], [ %130, %104 ]
  %193 = phi i32 [ %94, %90 ], [ %129, %104 ]
  %194 = icmp eq i32 %100, 0
  br i1 %194, label %214, label %195

195:                                              ; preds = %190
  %196 = getelementptr inbounds i8, i8* %191, i64 -1
  %197 = load i8, i8* %192, align 1
  %198 = zext i8 %197 to i32
  %199 = lshr i32 %198, %193
  %200 = trunc i32 %199 to i8
  %201 = and i8 %200, 3
  store i8 %201, i8* %196, align 1
  br label %214

202:                                              ; preds = %148, %136
  %203 = phi i8* [ %139, %136 ], [ %164, %148 ]
  %204 = phi i8* [ %143, %136 ], [ %174, %148 ]
  %205 = phi i32 [ %138, %136 ], [ %173, %148 ]
  %206 = icmp eq i32 %144, 0
  br i1 %206, label %214, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds i8, i8* %203, i64 -1
  %209 = load i8, i8* %204, align 1
  %210 = zext i8 %209 to i32
  %211 = lshr i32 %210, %205
  %212 = trunc i32 %211 to i8
  %213 = and i8 %212, 15
  store i8 %213, i8* %208, align 1
  br label %214

214:                                              ; preds = %207, %202, %195, %190, %182, %177, %133, %87, %40, %38
  %215 = phi i64 [ %39, %38 ], [ 0, %40 ], [ 0, %87 ], [ 0, %133 ], [ %41, %177 ], [ %41, %182 ], [ %88, %190 ], [ %88, %195 ], [ %134, %202 ], [ %134, %207 ]
  store i8 8, i8* %34, align 1
  %216 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 8, i8* %216, align 1
  %217 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %215, i64* %217, align 8
  br label %220

218:                                              ; preds = %23
  %219 = icmp eq i8 %35, 8
  br i1 %219, label %220, label %352

220:                                              ; preds = %218, %214
  %221 = icmp eq i16 %30, 0
  %222 = zext i32 %33 to i64
  %223 = getelementptr inbounds i8, i8* %24, i64 %222
  %224 = getelementptr inbounds i8, i8* %223, i64 -1
  br i1 %221, label %269, label %225

225:                                              ; preds = %220
  %226 = icmp eq i32 %33, 0
  br i1 %226, label %263, label %227

227:                                              ; preds = %225
  %228 = shl nuw nsw i64 %222, 2
  %229 = getelementptr inbounds i8, i8* %24, i64 %228
  %230 = getelementptr inbounds i8, i8* %229, i64 -1
  br label %231

231:                                              ; preds = %242, %227
  %232 = phi i32 [ %261, %242 ], [ 0, %227 ]
  %233 = phi i8* [ %259, %242 ], [ %230, %227 ]
  %234 = phi i8* [ %260, %242 ], [ %224, %227 ]
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = icmp ult i32 %236, %31
  br i1 %237, label %238, label %242

238:                                              ; preds = %231
  %239 = zext i8 %235 to i64
  %240 = getelementptr inbounds i8, i8* %28, i64 %239
  %241 = load i8, i8* %240, align 1
  br label %242

242:                                              ; preds = %238, %231
  %243 = phi i8 [ %241, %238 ], [ -1, %231 ]
  %244 = getelementptr inbounds i8, i8* %233, i64 -1
  store i8 %243, i8* %233, align 1
  %245 = load i8, i8* %234, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %246, i32 2
  %248 = load i8, i8* %247, align 1
  %249 = getelementptr inbounds i8, i8* %233, i64 -2
  store i8 %248, i8* %244, align 1
  %250 = load i8, i8* %234, align 1
  %251 = zext i8 %250 to i64
  %252 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %251, i32 1
  %253 = load i8, i8* %252, align 1
  %254 = getelementptr inbounds i8, i8* %233, i64 -3
  store i8 %253, i8* %249, align 1
  %255 = load i8, i8* %234, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %256, i32 0
  %258 = load i8, i8* %257, align 1
  %259 = getelementptr inbounds i8, i8* %233, i64 -4
  store i8 %258, i8* %254, align 1
  %260 = getelementptr inbounds i8, i8* %234, i64 -1
  %261 = add nuw i32 %232, 1
  %262 = icmp eq i32 %261, %33
  br i1 %262, label %263, label %231

263:                                              ; preds = %242, %225
  store i8 8, i8* %34, align 1
  %264 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 32, i8* %264, align 1
  %265 = shl i32 %33, 2
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %266, i64* %267, align 8
  store i8 6, i8* %20, align 8
  %268 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 4, i8* %268, align 2
  br label %352

269:                                              ; preds = %220
  %270 = mul i32 %33, 3
  %271 = zext i32 %270 to i64
  %272 = icmp eq i32 %33, 0
  br i1 %272, label %337, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds i8, i8* %24, i64 %271
  %275 = getelementptr inbounds i8, i8* %274, i64 -1
  %276 = and i32 %33, 1
  %277 = icmp eq i32 %33, 1
  br i1 %277, label %318, label %278

278:                                              ; preds = %273
  %279 = sub i32 %33, %276
  br label %280

280:                                              ; preds = %280, %278
  %281 = phi i8* [ %275, %278 ], [ %314, %280 ]
  %282 = phi i8* [ %224, %278 ], [ %315, %280 ]
  %283 = phi i32 [ %279, %278 ], [ %316, %280 ]
  %284 = load i8, i8* %282, align 1
  %285 = zext i8 %284 to i64
  %286 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %285, i32 2
  %287 = load i8, i8* %286, align 1
  %288 = getelementptr inbounds i8, i8* %281, i64 -1
  store i8 %287, i8* %281, align 1
  %289 = load i8, i8* %282, align 1
  %290 = zext i8 %289 to i64
  %291 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %290, i32 1
  %292 = load i8, i8* %291, align 1
  %293 = getelementptr inbounds i8, i8* %281, i64 -2
  store i8 %292, i8* %288, align 1
  %294 = load i8, i8* %282, align 1
  %295 = zext i8 %294 to i64
  %296 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %295, i32 0
  %297 = load i8, i8* %296, align 1
  %298 = getelementptr inbounds i8, i8* %281, i64 -3
  store i8 %297, i8* %293, align 1
  %299 = getelementptr inbounds i8, i8* %282, i64 -1
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i64
  %302 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %301, i32 2
  %303 = load i8, i8* %302, align 1
  %304 = getelementptr inbounds i8, i8* %281, i64 -4
  store i8 %303, i8* %298, align 1
  %305 = load i8, i8* %299, align 1
  %306 = zext i8 %305 to i64
  %307 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %306, i32 1
  %308 = load i8, i8* %307, align 1
  %309 = getelementptr inbounds i8, i8* %281, i64 -5
  store i8 %308, i8* %304, align 1
  %310 = load i8, i8* %299, align 1
  %311 = zext i8 %310 to i64
  %312 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %311, i32 0
  %313 = load i8, i8* %312, align 1
  %314 = getelementptr inbounds i8, i8* %281, i64 -6
  store i8 %313, i8* %309, align 1
  %315 = getelementptr inbounds i8, i8* %282, i64 -2
  %316 = add i32 %283, -2
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %280

318:                                              ; preds = %280, %273
  %319 = phi i8* [ %275, %273 ], [ %314, %280 ]
  %320 = phi i8* [ %224, %273 ], [ %315, %280 ]
  %321 = icmp eq i32 %276, 0
  br i1 %321, label %337, label %322

322:                                              ; preds = %318
  %323 = load i8, i8* %320, align 1
  %324 = zext i8 %323 to i64
  %325 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %324, i32 2
  %326 = load i8, i8* %325, align 1
  %327 = getelementptr inbounds i8, i8* %319, i64 -1
  store i8 %326, i8* %319, align 1
  %328 = load i8, i8* %320, align 1
  %329 = zext i8 %328 to i64
  %330 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %329, i32 1
  %331 = load i8, i8* %330, align 1
  %332 = getelementptr inbounds i8, i8* %319, i64 -2
  store i8 %331, i8* %327, align 1
  %333 = load i8, i8* %320, align 1
  %334 = zext i8 %333 to i64
  %335 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %26, i64 %334, i32 0
  %336 = load i8, i8* %335, align 1
  store i8 %336, i8* %332, align 1
  br label %337

337:                                              ; preds = %322, %318, %269
  store i8 8, i8* %34, align 1
  %338 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 24, i8* %338, align 1
  %339 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %271, i64* %339, align 8
  store i8 2, i8* %20, align 8
  %340 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 3, i8* %340, align 2
  br label %352

341:                                              ; preds = %19
  %342 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 54
  %343 = load i16, i16* %342, align 2
  %344 = icmp eq i16 %343, 0
  %345 = and i32 %16, 33554432
  %346 = icmp eq i32 %345, 0
  %347 = or i1 %346, %344
  %348 = getelementptr inbounds i8, i8* %5, i64 1
  br i1 %347, label %351, label %349

349:                                              ; preds = %341
  %350 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89
  tail call fastcc void @cr_png_do_expand(%struct.png_row_info_struct* %1, i8* %348, %struct.png_color_16_struct* %350)
  br label %352

351:                                              ; preds = %341
  tail call fastcc void @cr_png_do_expand(%struct.png_row_info_struct* %1, i8* %348, %struct.png_color_16_struct* null)
  br label %352

352:                                              ; preds = %337, %263, %218, %14, %351, %349
  %353 = load i32, i32* %15, align 4
  %354 = and i32 %353, 262272
  %355 = icmp eq i32 %354, 262144
  br i1 %355, label %356, label %363

356:                                              ; preds = %352
  %357 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %358 = load i8, i8* %357, align 8
  switch i8 %358, label %363 [
    i8 6, label %359
    i8 4, label %359
  ]

359:                                              ; preds = %356, %356
  %360 = load i8*, i8** %4, align 8
  %361 = getelementptr inbounds i8, i8* %360, i64 1
  tail call void @cr_png_do_strip_channel(%struct.png_row_info_struct* %1, i8* %361, i32 0) #6
  %362 = load i32, i32* %15, align 4
  br label %363

363:                                              ; preds = %356, %352, %359
  %364 = phi i32 [ %353, %356 ], [ %353, %352 ], [ %362, %359 ]
  %365 = and i32 %364, 6291456
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %729, label %367

367:                                              ; preds = %363
  %368 = load i8*, i8** %4, align 8
  %369 = getelementptr inbounds i8, i8* %368, i64 1
  %370 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %371 = load i8, i8* %370, align 8, !noalias !68
  %372 = zext i8 %371 to i32
  %373 = and i32 %372, 3
  %374 = icmp eq i32 %373, 2
  br i1 %374, label %375, label %729

375:                                              ; preds = %367
  %376 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 116
  %377 = load i16, i16* %376, align 2, !alias.scope !68
  %378 = zext i16 %377 to i32
  %379 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 117
  %380 = load i16, i16* %379, align 4, !alias.scope !68
  %381 = zext i16 %380 to i32
  %382 = sub nsw i32 32768, %378
  %383 = sub nsw i32 %382, %381
  %384 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %385 = load i32, i32* %384, align 8, !noalias !68
  %386 = and i32 %372, 4
  %387 = icmp ne i32 %386, 0
  %388 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %389 = load i8, i8* %388, align 1, !noalias !68
  %390 = icmp eq i8 %389, 8
  br i1 %390, label %391, label %504

391:                                              ; preds = %375
  %392 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 82
  %393 = load i8*, i8** %392, align 8, !alias.scope !68
  %394 = icmp eq i8* %393, null
  br i1 %394, label %463, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 83
  %397 = load i8*, i8** %396, align 8, !alias.scope !68
  %398 = icmp eq i8* %397, null
  br i1 %398, label %463, label %399

399:                                              ; preds = %395
  %400 = icmp eq i32 %385, 0
  br i1 %400, label %691, label %401

401:                                              ; preds = %399
  %402 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 80
  br label %403

403:                                              ; preds = %458, %401
  %404 = phi i32 [ 0, %401 ], [ %452, %458 ]
  %405 = phi i8* [ %369, %401 ], [ %460, %458 ]
  %406 = phi i8* [ %369, %401 ], [ %459, %458 ]
  %407 = phi i32 [ 0, %401 ], [ %461, %458 ]
  %408 = getelementptr inbounds i8, i8* %405, i64 1
  %409 = load i8, i8* %405, align 1, !noalias !68
  %410 = getelementptr inbounds i8, i8* %405, i64 2
  %411 = load i8, i8* %408, align 1, !noalias !68
  %412 = getelementptr inbounds i8, i8* %405, i64 3
  %413 = load i8, i8* %410, align 1, !noalias !68
  %414 = icmp eq i8 %409, %411
  %415 = icmp eq i8 %409, %413
  %416 = and i1 %414, %415
  br i1 %416, label %440, label %417

417:                                              ; preds = %403
  %418 = zext i8 %409 to i64
  %419 = getelementptr inbounds i8, i8* %397, i64 %418
  %420 = load i8, i8* %419, align 1, !noalias !68
  %421 = zext i8 %411 to i64
  %422 = getelementptr inbounds i8, i8* %397, i64 %421
  %423 = load i8, i8* %422, align 1, !noalias !68
  %424 = zext i8 %413 to i64
  %425 = getelementptr inbounds i8, i8* %397, i64 %424
  %426 = load i8, i8* %425, align 1, !noalias !68
  %427 = or i32 %404, 1
  %428 = zext i8 %420 to i32
  %429 = mul nuw nsw i32 %428, %378
  %430 = zext i8 %423 to i32
  %431 = mul nuw nsw i32 %430, %381
  %432 = zext i8 %426 to i32
  %433 = mul nsw i32 %383, %432
  %434 = add nuw nsw i32 %429, 16384
  %435 = add nuw nsw i32 %434, %431
  %436 = add nsw i32 %435, %433
  %437 = lshr i32 %436, 15
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds i8, i8* %393, i64 %438
  br label %446

440:                                              ; preds = %403
  %441 = load i8*, i8** %402, align 8, !alias.scope !68
  %442 = icmp eq i8* %441, null
  br i1 %442, label %450, label %443

443:                                              ; preds = %440
  %444 = zext i8 %409 to i64
  %445 = getelementptr inbounds i8, i8* %441, i64 %444
  br label %446

446:                                              ; preds = %417, %443
  %447 = phi i8* [ %445, %443 ], [ %439, %417 ]
  %448 = phi i32 [ %404, %443 ], [ %427, %417 ]
  %449 = load i8, i8* %447, align 1, !noalias !68
  br label %450

450:                                              ; preds = %446, %440
  %451 = phi i8 [ %409, %440 ], [ %449, %446 ]
  %452 = phi i32 [ %404, %440 ], [ %448, %446 ]
  %453 = getelementptr inbounds i8, i8* %406, i64 1
  store i8 %451, i8* %406, align 1, !noalias !68
  br i1 %387, label %454, label %458

454:                                              ; preds = %450
  %455 = getelementptr inbounds i8, i8* %405, i64 4
  %456 = load i8, i8* %412, align 1, !noalias !68
  %457 = getelementptr inbounds i8, i8* %406, i64 2
  store i8 %456, i8* %453, align 1, !noalias !68
  br label %458

458:                                              ; preds = %454, %450
  %459 = phi i8* [ %457, %454 ], [ %453, %450 ]
  %460 = phi i8* [ %455, %454 ], [ %412, %450 ]
  %461 = add nuw i32 %407, 1
  %462 = icmp eq i32 %461, %385
  br i1 %462, label %691, label %403

463:                                              ; preds = %395, %391
  %464 = icmp eq i32 %385, 0
  br i1 %464, label %691, label %465

465:                                              ; preds = %463, %499
  %466 = phi i32 [ %493, %499 ], [ 0, %463 ]
  %467 = phi i32 [ %502, %499 ], [ 0, %463 ]
  %468 = phi i8* [ %501, %499 ], [ %369, %463 ]
  %469 = phi i8* [ %500, %499 ], [ %369, %463 ]
  %470 = getelementptr inbounds i8, i8* %469, i64 1
  %471 = load i8, i8* %469, align 1, !noalias !68
  %472 = getelementptr inbounds i8, i8* %469, i64 2
  %473 = load i8, i8* %470, align 1, !noalias !68
  %474 = getelementptr inbounds i8, i8* %469, i64 3
  %475 = load i8, i8* %472, align 1, !noalias !68
  %476 = icmp eq i8 %471, %473
  %477 = icmp eq i8 %471, %475
  %478 = and i1 %476, %477
  br i1 %478, label %491, label %479

479:                                              ; preds = %465
  %480 = zext i8 %473 to i32
  %481 = zext i8 %471 to i32
  %482 = or i32 %466, 1
  %483 = mul nuw nsw i32 %481, %378
  %484 = mul nuw nsw i32 %480, %381
  %485 = add nuw nsw i32 %484, %483
  %486 = zext i8 %475 to i32
  %487 = mul nsw i32 %383, %486
  %488 = add nsw i32 %485, %487
  %489 = lshr i32 %488, 15
  %490 = trunc i32 %489 to i8
  br label %491

491:                                              ; preds = %479, %465
  %492 = phi i8 [ %490, %479 ], [ %471, %465 ]
  %493 = phi i32 [ %482, %479 ], [ %466, %465 ]
  %494 = getelementptr inbounds i8, i8* %468, i64 1
  store i8 %492, i8* %468, align 1, !noalias !68
  br i1 %387, label %495, label %499

495:                                              ; preds = %491
  %496 = getelementptr inbounds i8, i8* %469, i64 4
  %497 = load i8, i8* %474, align 1, !noalias !68
  %498 = getelementptr inbounds i8, i8* %468, i64 2
  store i8 %497, i8* %494, align 1, !noalias !68
  br label %499

499:                                              ; preds = %495, %491
  %500 = phi i8* [ %496, %495 ], [ %474, %491 ]
  %501 = phi i8* [ %498, %495 ], [ %494, %491 ]
  %502 = add nuw i32 %467, 1
  %503 = icmp eq i32 %502, %385
  br i1 %503, label %691, label %465

504:                                              ; preds = %375
  %505 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 85
  %506 = load i16**, i16*** %505, align 8, !alias.scope !68
  %507 = icmp eq i16** %506, null
  br i1 %507, label %631, label %508

508:                                              ; preds = %504
  %509 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 84
  %510 = load i16**, i16*** %509, align 8, !alias.scope !68
  %511 = icmp eq i16** %510, null
  br i1 %511, label %631, label %512

512:                                              ; preds = %508
  %513 = icmp eq i32 %385, 0
  br i1 %513, label %691, label %514

514:                                              ; preds = %512
  %515 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 78
  %516 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 81
  br label %517

517:                                              ; preds = %626, %514
  %518 = phi i32 [ 0, %514 ], [ %613, %626 ]
  %519 = phi i32 [ 0, %514 ], [ %629, %626 ]
  %520 = phi i8* [ %369, %514 ], [ %628, %626 ]
  %521 = phi i8* [ %369, %514 ], [ %627, %626 ]
  %522 = getelementptr inbounds i8, i8* %521, i64 1
  %523 = load i8, i8* %521, align 1, !noalias !68
  %524 = getelementptr inbounds i8, i8* %521, i64 2
  %525 = load i8, i8* %522, align 1, !noalias !68
  %526 = zext i8 %523 to i16
  %527 = shl nuw i16 %526, 8
  %528 = zext i8 %525 to i16
  %529 = or i16 %527, %528
  %530 = getelementptr inbounds i8, i8* %521, i64 3
  %531 = load i8, i8* %524, align 1, !noalias !68
  %532 = getelementptr inbounds i8, i8* %521, i64 4
  %533 = load i8, i8* %530, align 1, !noalias !68
  %534 = zext i8 %531 to i32
  %535 = shl nuw nsw i32 %534, 8
  %536 = zext i8 %533 to i32
  %537 = or i32 %535, %536
  %538 = getelementptr inbounds i8, i8* %521, i64 5
  %539 = load i8, i8* %532, align 1, !noalias !68
  %540 = getelementptr inbounds i8, i8* %521, i64 6
  %541 = load i8, i8* %538, align 1, !noalias !68
  %542 = zext i8 %539 to i16
  %543 = shl nuw i16 %542, 8
  %544 = zext i8 %541 to i16
  %545 = or i16 %543, %544
  %546 = zext i16 %529 to i32
  %547 = icmp eq i32 %537, %546
  %548 = icmp eq i16 %529, %545
  %549 = and i1 %547, %548
  br i1 %549, label %550, label %562

550:                                              ; preds = %517
  %551 = load i16**, i16*** %516, align 8, !alias.scope !68
  %552 = icmp eq i16** %551, null
  br i1 %552, label %611, label %553

553:                                              ; preds = %550
  %554 = load i32, i32* %515, align 8, !alias.scope !68
  %555 = lshr i32 %536, %554
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds i16*, i16** %551, i64 %556
  %558 = load i16*, i16** %557, align 8, !noalias !68
  %559 = zext i8 %531 to i64
  %560 = getelementptr inbounds i16, i16* %558, i64 %559
  %561 = load i16, i16* %560, align 2, !noalias !68
  br label %611

562:                                              ; preds = %517
  %563 = and i32 %546, 255
  %564 = load i32, i32* %515, align 8, !alias.scope !68
  %565 = lshr i32 %563, %564
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds i16*, i16** %506, i64 %566
  %568 = load i16*, i16** %567, align 8, !noalias !68
  %569 = lshr i32 %546, 8
  %570 = zext i32 %569 to i64
  %571 = getelementptr inbounds i16, i16* %568, i64 %570
  %572 = load i16, i16* %571, align 2, !noalias !68
  %573 = lshr i32 %536, %564
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds i16*, i16** %506, i64 %574
  %576 = load i16*, i16** %575, align 8, !noalias !68
  %577 = zext i8 %531 to i64
  %578 = getelementptr inbounds i16, i16* %576, i64 %577
  %579 = load i16, i16* %578, align 2, !noalias !68
  %580 = zext i16 %545 to i32
  %581 = and i32 %580, 255
  %582 = lshr i32 %581, %564
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds i16*, i16** %506, i64 %583
  %585 = load i16*, i16** %584, align 8, !noalias !68
  %586 = lshr i32 %580, 8
  %587 = zext i32 %586 to i64
  %588 = getelementptr inbounds i16, i16* %585, i64 %587
  %589 = load i16, i16* %588, align 2, !noalias !68
  %590 = zext i16 %572 to i32
  %591 = mul nuw i32 %590, %378
  %592 = zext i16 %579 to i32
  %593 = mul nuw i32 %592, %381
  %594 = zext i16 %589 to i32
  %595 = mul i32 %383, %594
  %596 = add i32 %591, 16384
  %597 = add i32 %596, %593
  %598 = add i32 %597, %595
  %599 = lshr i32 %598, 15
  %600 = and i32 %599, 255
  %601 = lshr i32 %600, %564
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds i16*, i16** %510, i64 %602
  %604 = load i16*, i16** %603, align 8, !noalias !68
  %605 = lshr i32 %598, 23
  %606 = and i32 %605, 255
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds i16, i16* %604, i64 %607
  %609 = load i16, i16* %608, align 2, !noalias !68
  %610 = or i32 %518, 1
  br label %611

611:                                              ; preds = %562, %553, %550
  %612 = phi i16 [ %561, %553 ], [ %609, %562 ], [ %529, %550 ]
  %613 = phi i32 [ %518, %553 ], [ %610, %562 ], [ %518, %550 ]
  %614 = lshr i16 %612, 8
  %615 = trunc i16 %614 to i8
  %616 = getelementptr inbounds i8, i8* %520, i64 1
  store i8 %615, i8* %520, align 1, !noalias !68
  %617 = trunc i16 %612 to i8
  %618 = getelementptr inbounds i8, i8* %520, i64 2
  store i8 %617, i8* %616, align 1, !noalias !68
  br i1 %387, label %619, label %626

619:                                              ; preds = %611
  %620 = getelementptr inbounds i8, i8* %521, i64 7
  %621 = load i8, i8* %540, align 1, !noalias !68
  %622 = getelementptr inbounds i8, i8* %520, i64 3
  store i8 %621, i8* %618, align 1, !noalias !68
  %623 = getelementptr inbounds i8, i8* %521, i64 8
  %624 = load i8, i8* %620, align 1, !noalias !68
  %625 = getelementptr inbounds i8, i8* %520, i64 4
  store i8 %624, i8* %622, align 1, !noalias !68
  br label %626

626:                                              ; preds = %619, %611
  %627 = phi i8* [ %623, %619 ], [ %540, %611 ]
  %628 = phi i8* [ %625, %619 ], [ %618, %611 ]
  %629 = add nuw i32 %519, 1
  %630 = icmp eq i32 %629, %385
  br i1 %630, label %691, label %517

631:                                              ; preds = %508, %504
  %632 = icmp eq i32 %385, 0
  br i1 %632, label %691, label %633

633:                                              ; preds = %631, %686
  %634 = phi i32 [ %666, %686 ], [ 0, %631 ]
  %635 = phi i32 [ %689, %686 ], [ 0, %631 ]
  %636 = phi i8* [ %688, %686 ], [ %369, %631 ]
  %637 = phi i8* [ %687, %686 ], [ %369, %631 ]
  %638 = getelementptr inbounds i8, i8* %637, i64 1
  %639 = load i8, i8* %637, align 1, !noalias !68
  %640 = getelementptr inbounds i8, i8* %637, i64 2
  %641 = load i8, i8* %638, align 1, !noalias !68
  %642 = zext i8 %639 to i32
  %643 = shl nuw nsw i32 %642, 8
  %644 = zext i8 %641 to i32
  %645 = or i32 %643, %644
  %646 = getelementptr inbounds i8, i8* %637, i64 3
  %647 = load i8, i8* %640, align 1, !noalias !68
  %648 = getelementptr inbounds i8, i8* %637, i64 4
  %649 = load i8, i8* %646, align 1, !noalias !68
  %650 = zext i8 %647 to i32
  %651 = shl nuw nsw i32 %650, 8
  %652 = zext i8 %649 to i32
  %653 = or i32 %651, %652
  %654 = getelementptr inbounds i8, i8* %637, i64 5
  %655 = load i8, i8* %648, align 1, !noalias !68
  %656 = getelementptr inbounds i8, i8* %637, i64 6
  %657 = load i8, i8* %654, align 1, !noalias !68
  %658 = zext i8 %655 to i32
  %659 = shl nuw nsw i32 %658, 8
  %660 = zext i8 %657 to i32
  %661 = or i32 %659, %660
  %662 = icmp ne i32 %645, %653
  %663 = icmp ne i32 %645, %661
  %664 = or i1 %662, %663
  %665 = zext i1 %664 to i32
  %666 = or i32 %634, %665
  %667 = mul nuw i32 %645, %378
  %668 = mul nuw i32 %653, %381
  %669 = mul i32 %661, %383
  %670 = add i32 %667, 16384
  %671 = add i32 %670, %668
  %672 = add i32 %671, %669
  %673 = lshr i32 %672, 15
  %674 = lshr i32 %672, 23
  %675 = trunc i32 %674 to i8
  %676 = getelementptr inbounds i8, i8* %636, i64 1
  store i8 %675, i8* %636, align 1, !noalias !68
  %677 = trunc i32 %673 to i8
  %678 = getelementptr inbounds i8, i8* %636, i64 2
  store i8 %677, i8* %676, align 1, !noalias !68
  br i1 %387, label %679, label %686

679:                                              ; preds = %633
  %680 = getelementptr inbounds i8, i8* %637, i64 7
  %681 = load i8, i8* %656, align 1, !noalias !68
  %682 = getelementptr inbounds i8, i8* %636, i64 3
  store i8 %681, i8* %678, align 1, !noalias !68
  %683 = getelementptr inbounds i8, i8* %637, i64 8
  %684 = load i8, i8* %680, align 1, !noalias !68
  %685 = getelementptr inbounds i8, i8* %636, i64 4
  store i8 %684, i8* %682, align 1, !noalias !68
  br label %686

686:                                              ; preds = %679, %633
  %687 = phi i8* [ %683, %679 ], [ %656, %633 ]
  %688 = phi i8* [ %685, %679 ], [ %678, %633 ]
  %689 = add nuw i32 %635, 1
  %690 = icmp eq i32 %689, %385
  br i1 %690, label %691, label %633

691:                                              ; preds = %626, %686, %458, %499, %631, %512, %463, %399
  %692 = phi i32 [ 0, %463 ], [ 0, %399 ], [ 0, %631 ], [ 0, %512 ], [ %493, %499 ], [ %452, %458 ], [ %666, %686 ], [ %613, %626 ]
  %693 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  %694 = load i8, i8* %693, align 2, !noalias !68
  %695 = add i8 %694, -2
  store i8 %695, i8* %693, align 2, !noalias !68
  %696 = load i8, i8* %370, align 8, !noalias !68
  %697 = and i8 %696, -3
  store i8 %697, i8* %370, align 8, !noalias !68
  %698 = load i8, i8* %388, align 1, !noalias !68
  %699 = mul i8 %698, %695
  %700 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 %699, i8* %700, align 1, !noalias !68
  %701 = icmp ugt i8 %699, 7
  %702 = zext i32 %385 to i64
  %703 = zext i8 %699 to i64
  br i1 %701, label %704, label %707

704:                                              ; preds = %691
  %705 = lshr i64 %703, 3
  %706 = mul nuw nsw i64 %705, %702
  br label %711

707:                                              ; preds = %691
  %708 = mul nuw nsw i64 %703, %702
  %709 = add nuw nsw i64 %708, 7
  %710 = lshr i64 %709, 3
  br label %711

711:                                              ; preds = %704, %707
  %712 = phi i64 [ %706, %704 ], [ %710, %707 ]
  %713 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %712, i64* %713, align 8, !noalias !68
  %714 = icmp eq i32 %692, 0
  br i1 %714, label %715, label %717

715:                                              ; preds = %711
  %716 = load i32, i32* %15, align 4
  br label %729

717:                                              ; preds = %711
  %718 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 114
  store i8 1, i8* %718, align 8
  %719 = load i32, i32* %15, align 4
  %720 = and i32 %719, 6291456
  %721 = icmp eq i32 %720, 4194304
  br i1 %721, label %722, label %724

722:                                              ; preds = %717
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i64 0, i64 0)) #6
  %723 = load i32, i32* %15, align 4
  br label %724

724:                                              ; preds = %722, %717
  %725 = phi i32 [ %723, %722 ], [ %719, %717 ]
  %726 = and i32 %725, 6291456
  %727 = icmp eq i32 %726, 2097152
  br i1 %727, label %728, label %729

728:                                              ; preds = %724
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i64 0, i64 0)) #7
  unreachable

729:                                              ; preds = %715, %367, %724, %363
  %730 = phi i32 [ %716, %715 ], [ %364, %367 ], [ %725, %724 ], [ %364, %363 ]
  %731 = and i32 %730, 16384
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %742, label %733

733:                                              ; preds = %729
  %734 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %735 = load i32, i32* %734, align 4
  %736 = and i32 %735, 2048
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %742

738:                                              ; preds = %733
  %739 = load i8*, i8** %4, align 8
  %740 = getelementptr inbounds i8, i8* %739, i64 1
  tail call fastcc void @cr_png_do_gray_to_rgb(%struct.png_row_info_struct* %1, i8* %740)
  %741 = load i32, i32* %15, align 4
  br label %742

742:                                              ; preds = %729, %738, %733
  %743 = phi i32 [ %730, %729 ], [ %741, %738 ], [ %730, %733 ]
  %744 = trunc i32 %743 to i8
  %745 = icmp slt i8 %744, 0
  br i1 %745, label %746, label %2135

746:                                              ; preds = %742
  %747 = load i8*, i8** %4, align 8
  %748 = getelementptr inbounds i8, i8* %747, i64 1
  %749 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 80
  %750 = load i8*, i8** %749, align 8, !alias.scope !71
  %751 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 82
  %752 = load i8*, i8** %751, align 8, !alias.scope !71
  %753 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 83
  %754 = load i8*, i8** %753, align 8, !alias.scope !71
  %755 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 81
  %756 = load i16**, i16*** %755, align 8, !alias.scope !71
  %757 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 84
  %758 = load i16**, i16*** %757, align 8, !alias.scope !71
  %759 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 85
  %760 = load i16**, i16*** %759, align 8, !alias.scope !71
  %761 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 78
  %762 = load i32, i32* %761, align 8, !alias.scope !71
  %763 = load i32, i32* %9, align 8, !alias.scope !71
  %764 = and i32 %763, 8192
  %765 = icmp eq i32 %764, 0
  %766 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %767 = load i32, i32* %766, align 8, !noalias !71
  %768 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %769 = load i8, i8* %768, align 8, !noalias !71
  switch i8 %769, label %2135 [
    i8 0, label %770
    i8 2, label %1102
    i8 4, label %1364
    i8 6, label %1588
  ]

770:                                              ; preds = %746
  %771 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %772 = load i8, i8* %771, align 1, !noalias !71
  switch i8 %772, label %2135 [
    i8 1, label %773
    i8 2, label %806
    i8 4, label %892
    i8 8, label %974
    i8 16, label %1030
  ]

773:                                              ; preds = %770
  %774 = icmp eq i32 %767, 0
  br i1 %774, label %2135, label %775

775:                                              ; preds = %773
  %776 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %777 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %778 = load i16, i16* %776, align 8, !alias.scope !71
  %779 = zext i16 %778 to i32
  br label %780

780:                                              ; preds = %798, %775
  %781 = phi i8* [ %748, %775 ], [ %803, %798 ]
  %782 = phi i32 [ 0, %775 ], [ %804, %798 ]
  %783 = phi i32 [ 7, %775 ], [ %802, %798 ]
  %784 = load i8, i8* %781, align 1, !noalias !71
  %785 = zext i8 %784 to i32
  %786 = lshr i32 %785, %783
  %787 = and i32 %786, 1
  %788 = icmp eq i32 %787, %779
  br i1 %788, label %789, label %798

789:                                              ; preds = %780
  %790 = sub nsw i32 7, %783
  %791 = lshr i32 32639, %790
  %792 = and i32 %791, %785
  %793 = load i16, i16* %777, align 4, !alias.scope !71
  %794 = zext i16 %793 to i32
  %795 = shl i32 %794, %783
  %796 = or i32 %795, %792
  %797 = trunc i32 %796 to i8
  store i8 %797, i8* %781, align 1, !noalias !71
  br label %798

798:                                              ; preds = %789, %780
  %799 = icmp eq i32 %783, 0
  %800 = getelementptr inbounds i8, i8* %781, i64 1
  %801 = add nsw i32 %783, -1
  %802 = select i1 %799, i32 7, i32 %801
  %803 = select i1 %799, i8* %800, i8* %781
  %804 = add nuw i32 %782, 1
  %805 = icmp eq i32 %804, %767
  br i1 %805, label %2135, label %780

806:                                              ; preds = %770
  %807 = icmp eq i8* %750, null
  %808 = icmp ne i32 %767, 0
  br i1 %807, label %815, label %809

809:                                              ; preds = %806
  br i1 %808, label %810, label %2135

810:                                              ; preds = %809
  %811 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %812 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %813 = load i16, i16* %811, align 8, !alias.scope !71
  %814 = zext i16 %813 to i32
  br label %821

815:                                              ; preds = %806
  br i1 %808, label %816, label %2135

816:                                              ; preds = %815
  %817 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %818 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %819 = load i16, i16* %817, align 8, !alias.scope !71
  %820 = zext i16 %819 to i32
  br label %866

821:                                              ; preds = %856, %810
  %822 = phi i8* [ %748, %810 ], [ %863, %856 ]
  %823 = phi i32 [ 0, %810 ], [ %864, %856 ]
  %824 = phi i32 [ 6, %810 ], [ %862, %856 ]
  %825 = load i8, i8* %822, align 1, !noalias !71
  %826 = zext i8 %825 to i32
  %827 = lshr i32 %826, %824
  %828 = and i32 %827, 3
  %829 = icmp eq i32 %828, %814
  br i1 %829, label %830, label %839

830:                                              ; preds = %821
  %831 = sub nsw i32 6, %824
  %832 = lshr i32 16191, %831
  %833 = and i32 %832, %826
  %834 = load i16, i16* %812, align 4, !alias.scope !71
  %835 = zext i16 %834 to i32
  %836 = shl i32 %835, %824
  %837 = and i32 %836, 255
  %838 = or i32 %837, %833
  br label %856

839:                                              ; preds = %821
  %840 = shl nuw nsw i32 %828, 2
  %841 = or i32 %840, %828
  %842 = shl nuw nsw i32 %828, 4
  %843 = or i32 %841, %842
  %844 = shl nuw nsw i32 %828, 6
  %845 = or i32 %843, %844
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds i8, i8* %750, i64 %846
  %848 = load i8, i8* %847, align 1
  %849 = lshr i8 %848, 6
  %850 = zext i8 %849 to i32
  %851 = sub nsw i32 6, %824
  %852 = lshr i32 16191, %851
  %853 = and i32 %852, %826
  %854 = shl i32 %850, %824
  %855 = or i32 %854, %853
  br label %856

856:                                              ; preds = %839, %830
  %857 = phi i32 [ %855, %839 ], [ %838, %830 ]
  %858 = trunc i32 %857 to i8
  store i8 %858, i8* %822, align 1, !noalias !71
  %859 = icmp eq i32 %824, 0
  %860 = getelementptr inbounds i8, i8* %822, i64 1
  %861 = add nsw i32 %824, -2
  %862 = select i1 %859, i32 6, i32 %861
  %863 = select i1 %859, i8* %860, i8* %822
  %864 = add nuw i32 %823, 1
  %865 = icmp eq i32 %864, %767
  br i1 %865, label %2135, label %821

866:                                              ; preds = %884, %816
  %867 = phi i8* [ %748, %816 ], [ %889, %884 ]
  %868 = phi i32 [ 0, %816 ], [ %890, %884 ]
  %869 = phi i32 [ 6, %816 ], [ %888, %884 ]
  %870 = load i8, i8* %867, align 1, !noalias !71
  %871 = zext i8 %870 to i32
  %872 = lshr i32 %871, %869
  %873 = and i32 %872, 3
  %874 = icmp eq i32 %873, %820
  br i1 %874, label %875, label %884

875:                                              ; preds = %866
  %876 = sub nsw i32 6, %869
  %877 = lshr i32 16191, %876
  %878 = and i32 %877, %871
  %879 = load i16, i16* %818, align 4, !alias.scope !71
  %880 = zext i16 %879 to i32
  %881 = shl i32 %880, %869
  %882 = or i32 %881, %878
  %883 = trunc i32 %882 to i8
  store i8 %883, i8* %867, align 1, !noalias !71
  br label %884

884:                                              ; preds = %875, %866
  %885 = icmp eq i32 %869, 0
  %886 = getelementptr inbounds i8, i8* %867, i64 1
  %887 = add nsw i32 %869, -2
  %888 = select i1 %885, i32 6, i32 %887
  %889 = select i1 %885, i8* %886, i8* %867
  %890 = add nuw i32 %868, 1
  %891 = icmp eq i32 %890, %767
  br i1 %891, label %2135, label %866

892:                                              ; preds = %770
  %893 = icmp eq i8* %750, null
  %894 = icmp ne i32 %767, 0
  br i1 %893, label %901, label %895

895:                                              ; preds = %892
  br i1 %894, label %896, label %2135

896:                                              ; preds = %895
  %897 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %898 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %899 = load i16, i16* %897, align 8, !alias.scope !71
  %900 = zext i16 %899 to i32
  br label %907

901:                                              ; preds = %892
  br i1 %894, label %902, label %2135

902:                                              ; preds = %901
  %903 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %904 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %905 = load i16, i16* %903, align 8, !alias.scope !71
  %906 = zext i16 %905 to i32
  br label %948

907:                                              ; preds = %938, %896
  %908 = phi i8* [ %748, %896 ], [ %945, %938 ]
  %909 = phi i32 [ 0, %896 ], [ %946, %938 ]
  %910 = phi i32 [ 4, %896 ], [ %944, %938 ]
  %911 = load i8, i8* %908, align 1, !noalias !71
  %912 = zext i8 %911 to i32
  %913 = lshr i32 %912, %910
  %914 = and i32 %913, 15
  %915 = icmp eq i32 %914, %900
  br i1 %915, label %916, label %925

916:                                              ; preds = %907
  %917 = sub nsw i32 4, %910
  %918 = lshr i32 3855, %917
  %919 = and i32 %918, %912
  %920 = load i16, i16* %898, align 4, !alias.scope !71
  %921 = zext i16 %920 to i32
  %922 = shl i32 %921, %910
  %923 = and i32 %922, 255
  %924 = or i32 %923, %919
  br label %938

925:                                              ; preds = %907
  %926 = shl nuw nsw i32 %914, 4
  %927 = or i32 %926, %914
  %928 = zext i32 %927 to i64
  %929 = getelementptr inbounds i8, i8* %750, i64 %928
  %930 = load i8, i8* %929, align 1
  %931 = lshr i8 %930, 4
  %932 = zext i8 %931 to i32
  %933 = sub nsw i32 4, %910
  %934 = lshr i32 3855, %933
  %935 = and i32 %934, %912
  %936 = shl i32 %932, %910
  %937 = or i32 %936, %935
  br label %938

938:                                              ; preds = %925, %916
  %939 = phi i32 [ %937, %925 ], [ %924, %916 ]
  %940 = trunc i32 %939 to i8
  store i8 %940, i8* %908, align 1, !noalias !71
  %941 = icmp eq i32 %910, 0
  %942 = getelementptr inbounds i8, i8* %908, i64 1
  %943 = add nsw i32 %910, -4
  %944 = select i1 %941, i32 4, i32 %943
  %945 = select i1 %941, i8* %942, i8* %908
  %946 = add nuw i32 %909, 1
  %947 = icmp eq i32 %946, %767
  br i1 %947, label %2135, label %907

948:                                              ; preds = %966, %902
  %949 = phi i8* [ %748, %902 ], [ %971, %966 ]
  %950 = phi i32 [ 0, %902 ], [ %972, %966 ]
  %951 = phi i32 [ 4, %902 ], [ %970, %966 ]
  %952 = load i8, i8* %949, align 1, !noalias !71
  %953 = zext i8 %952 to i32
  %954 = lshr i32 %953, %951
  %955 = and i32 %954, 15
  %956 = icmp eq i32 %955, %906
  br i1 %956, label %957, label %966

957:                                              ; preds = %948
  %958 = sub nsw i32 4, %951
  %959 = lshr i32 3855, %958
  %960 = and i32 %959, %953
  %961 = load i16, i16* %904, align 4, !alias.scope !71
  %962 = zext i16 %961 to i32
  %963 = shl i32 %962, %951
  %964 = or i32 %963, %960
  %965 = trunc i32 %964 to i8
  store i8 %965, i8* %949, align 1, !noalias !71
  br label %966

966:                                              ; preds = %957, %948
  %967 = icmp eq i32 %951, 0
  %968 = getelementptr inbounds i8, i8* %949, i64 1
  %969 = add nsw i32 %951, -4
  %970 = select i1 %967, i32 4, i32 %969
  %971 = select i1 %967, i8* %968, i8* %949
  %972 = add nuw i32 %950, 1
  %973 = icmp eq i32 %972, %767
  br i1 %973, label %2135, label %948

974:                                              ; preds = %770
  %975 = icmp eq i8* %750, null
  %976 = icmp ne i32 %767, 0
  br i1 %975, label %987, label %977

977:                                              ; preds = %974
  br i1 %976, label %978, label %2135

978:                                              ; preds = %977
  %979 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %980 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %981 = load i16, i16* %979, align 8, !alias.scope !71
  %982 = zext i16 %981 to i32
  %983 = and i32 %767, 1
  %984 = icmp eq i32 %767, 1
  br i1 %984, label %2102, label %985

985:                                              ; preds = %978
  %986 = sub i32 %767, %983
  br label %997

987:                                              ; preds = %974
  br i1 %976, label %988, label %2135

988:                                              ; preds = %987
  %989 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %990 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %991 = load i16, i16* %989, align 8, !alias.scope !71
  %992 = zext i16 %991 to i32
  %993 = and i32 %767, 1
  %994 = icmp eq i32 %767, 1
  br i1 %994, label %2092, label %995

995:                                              ; preds = %988
  %996 = sub i32 %767, %993
  br label %1016

997:                                              ; preds = %4188, %985
  %998 = phi i8* [ %748, %985 ], [ %4190, %4188 ]
  %999 = phi i32 [ %986, %985 ], [ %4191, %4188 ]
  %1000 = load i8, i8* %998, align 1, !noalias !71
  %1001 = zext i8 %1000 to i32
  %1002 = icmp eq i32 %1001, %982
  br i1 %1002, label %1003, label %1006

1003:                                             ; preds = %997
  %1004 = load i16, i16* %980, align 4, !alias.scope !71
  %1005 = trunc i16 %1004 to i8
  br label %1010

1006:                                             ; preds = %997
  %1007 = zext i8 %1000 to i64
  %1008 = getelementptr inbounds i8, i8* %750, i64 %1007
  %1009 = load i8, i8* %1008, align 1
  br label %1010

1010:                                             ; preds = %1006, %1003
  %1011 = phi i8 [ %1009, %1006 ], [ %1005, %1003 ]
  store i8 %1011, i8* %998, align 1, !noalias !71
  %1012 = getelementptr inbounds i8, i8* %998, i64 1
  %1013 = load i8, i8* %1012, align 1, !noalias !71
  %1014 = zext i8 %1013 to i32
  %1015 = icmp eq i32 %1014, %982
  br i1 %1015, label %4185, label %4181

1016:                                             ; preds = %4177, %995
  %1017 = phi i8* [ %748, %995 ], [ %4178, %4177 ]
  %1018 = phi i32 [ %996, %995 ], [ %4179, %4177 ]
  %1019 = load i8, i8* %1017, align 1, !noalias !71
  %1020 = zext i8 %1019 to i32
  %1021 = icmp eq i32 %1020, %992
  br i1 %1021, label %1022, label %1025

1022:                                             ; preds = %1016
  %1023 = load i16, i16* %990, align 4, !alias.scope !71
  %1024 = trunc i16 %1023 to i8
  store i8 %1024, i8* %1017, align 1, !noalias !71
  br label %1025

1025:                                             ; preds = %1022, %1016
  %1026 = getelementptr inbounds i8, i8* %1017, i64 1
  %1027 = load i8, i8* %1026, align 1, !noalias !71
  %1028 = zext i8 %1027 to i32
  %1029 = icmp eq i32 %1028, %992
  br i1 %1029, label %4174, label %4177

1030:                                             ; preds = %770
  %1031 = icmp eq i16** %756, null
  %1032 = icmp ne i32 %767, 0
  br i1 %1031, label %1039, label %1033

1033:                                             ; preds = %1030
  br i1 %1032, label %1034, label %2135

1034:                                             ; preds = %1033
  %1035 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %1036 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %1037 = load i16, i16* %1035, align 8, !alias.scope !71
  %1038 = zext i16 %1037 to i32
  br label %1049

1039:                                             ; preds = %1030
  br i1 %1032, label %1040, label %2135

1040:                                             ; preds = %1039
  %1041 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 4
  %1042 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %1043 = load i16, i16* %1041, align 8, !alias.scope !71
  %1044 = zext i16 %1043 to i32
  %1045 = and i32 %767, 1
  %1046 = icmp eq i32 %767, 1
  br i1 %1046, label %2118, label %1047

1047:                                             ; preds = %1040
  %1048 = sub i32 %767, %1045
  br label %1076

1049:                                             ; preds = %1067, %1034
  %1050 = phi i8* [ %748, %1034 ], [ %1074, %1067 ]
  %1051 = phi i32 [ 0, %1034 ], [ %1073, %1067 ]
  %1052 = load i8, i8* %1050, align 1, !noalias !71
  %1053 = zext i8 %1052 to i32
  %1054 = shl nuw nsw i32 %1053, 8
  %1055 = getelementptr inbounds i8, i8* %1050, i64 1
  %1056 = load i8, i8* %1055, align 1, !noalias !71
  %1057 = zext i8 %1056 to i32
  %1058 = or i32 %1054, %1057
  %1059 = icmp eq i32 %1058, %1038
  br i1 %1059, label %1067, label %1060

1060:                                             ; preds = %1049
  %1061 = lshr i32 %1057, %762
  %1062 = sext i32 %1061 to i64
  %1063 = getelementptr inbounds i16*, i16** %756, i64 %1062
  %1064 = load i16*, i16** %1063, align 8
  %1065 = zext i8 %1052 to i64
  %1066 = getelementptr inbounds i16, i16* %1064, i64 %1065
  br label %1067

1067:                                             ; preds = %1049, %1060
  %1068 = phi i16* [ %1066, %1060 ], [ %1036, %1049 ]
  %1069 = load i16, i16* %1068, align 2
  %1070 = lshr i16 %1069, 8
  %1071 = trunc i16 %1070 to i8
  store i8 %1071, i8* %1050, align 1, !noalias !71
  %1072 = trunc i16 %1069 to i8
  store i8 %1072, i8* %1055, align 1, !noalias !71
  %1073 = add nuw i32 %1051, 1
  %1074 = getelementptr inbounds i8, i8* %1050, i64 2
  %1075 = icmp eq i32 %1073, %767
  br i1 %1075, label %2135, label %1049

1076:                                             ; preds = %4198, %1047
  %1077 = phi i8* [ %748, %1047 ], [ %4199, %4198 ]
  %1078 = phi i32 [ %1048, %1047 ], [ %4200, %4198 ]
  %1079 = load i8, i8* %1077, align 1, !noalias !71
  %1080 = zext i8 %1079 to i32
  %1081 = shl nuw nsw i32 %1080, 8
  %1082 = getelementptr inbounds i8, i8* %1077, i64 1
  %1083 = load i8, i8* %1082, align 1, !noalias !71
  %1084 = zext i8 %1083 to i32
  %1085 = or i32 %1081, %1084
  %1086 = icmp eq i32 %1085, %1044
  br i1 %1086, label %1087, label %1092

1087:                                             ; preds = %1076
  %1088 = load i16, i16* %1042, align 4, !alias.scope !71
  %1089 = lshr i16 %1088, 8
  %1090 = trunc i16 %1089 to i8
  store i8 %1090, i8* %1077, align 1, !noalias !71
  %1091 = trunc i16 %1088 to i8
  store i8 %1091, i8* %1082, align 1, !noalias !71
  br label %1092

1092:                                             ; preds = %1087, %1076
  %1093 = getelementptr inbounds i8, i8* %1077, i64 2
  %1094 = load i8, i8* %1093, align 1, !noalias !71
  %1095 = zext i8 %1094 to i32
  %1096 = shl nuw nsw i32 %1095, 8
  %1097 = getelementptr inbounds i8, i8* %1077, i64 3
  %1098 = load i8, i8* %1097, align 1, !noalias !71
  %1099 = zext i8 %1098 to i32
  %1100 = or i32 %1096, %1099
  %1101 = icmp eq i32 %1100, %1044
  br i1 %1101, label %4193, label %4198

1102:                                             ; preds = %746
  %1103 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %1104 = load i8, i8* %1103, align 1, !noalias !71
  %1105 = icmp eq i8 %1104, 8
  br i1 %1105, label %1106, label %1203

1106:                                             ; preds = %1102
  %1107 = icmp eq i8* %750, null
  %1108 = icmp ne i32 %767, 0
  br i1 %1107, label %1119, label %1109

1109:                                             ; preds = %1106
  br i1 %1108, label %1110, label %2135

1110:                                             ; preds = %1109
  %1111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 1
  %1112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 2
  %1113 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 3
  %1114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %1115 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %1116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %1117 = load i16, i16* %1111, align 2, !alias.scope !71
  %1118 = zext i16 %1117 to i32
  br label %1129

1119:                                             ; preds = %1106
  br i1 %1108, label %1120, label %2135

1120:                                             ; preds = %1119
  %1121 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 1
  %1122 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 2
  %1123 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 3
  %1124 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %1125 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %1126 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %1127 = load i16, i16* %1121, align 2, !alias.scope !71
  %1128 = zext i16 %1127 to i32
  br label %1172

1129:                                             ; preds = %1168, %1110
  %1130 = phi i8* [ %748, %1110 ], [ %1170, %1168 ]
  %1131 = phi i32 [ 0, %1110 ], [ %1169, %1168 ]
  %1132 = load i8, i8* %1130, align 1, !noalias !71
  %1133 = zext i8 %1132 to i32
  %1134 = icmp eq i32 %1133, %1118
  %1135 = getelementptr inbounds i8, i8* %1130, i64 1
  %1136 = load i8, i8* %1135, align 1, !noalias !71
  br i1 %1134, label %1137, label %1156

1137:                                             ; preds = %1129
  %1138 = zext i8 %1136 to i32
  %1139 = load i16, i16* %1112, align 4, !alias.scope !71
  %1140 = zext i16 %1139 to i32
  %1141 = icmp eq i32 %1138, %1140
  br i1 %1141, label %1142, label %1156

1142:                                             ; preds = %1137
  %1143 = getelementptr inbounds i8, i8* %1130, i64 2
  %1144 = load i8, i8* %1143, align 1, !noalias !71
  %1145 = zext i8 %1144 to i32
  %1146 = load i16, i16* %1113, align 2, !alias.scope !71
  %1147 = zext i16 %1146 to i32
  %1148 = icmp eq i32 %1145, %1147
  br i1 %1148, label %1149, label %1156

1149:                                             ; preds = %1142
  %1150 = load i16, i16* %1114, align 2, !alias.scope !71
  %1151 = trunc i16 %1150 to i8
  store i8 %1151, i8* %1130, align 1, !noalias !71
  %1152 = load i16, i16* %1115, align 4, !alias.scope !71
  %1153 = trunc i16 %1152 to i8
  store i8 %1153, i8* %1135, align 1, !noalias !71
  %1154 = load i16, i16* %1116, align 2, !alias.scope !71
  %1155 = trunc i16 %1154 to i8
  store i8 %1155, i8* %1143, align 1, !noalias !71
  br label %1168

1156:                                             ; preds = %1142, %1137, %1129
  %1157 = zext i8 %1132 to i64
  %1158 = getelementptr inbounds i8, i8* %750, i64 %1157
  %1159 = load i8, i8* %1158, align 1
  store i8 %1159, i8* %1130, align 1, !noalias !71
  %1160 = zext i8 %1136 to i64
  %1161 = getelementptr inbounds i8, i8* %750, i64 %1160
  %1162 = load i8, i8* %1161, align 1
  store i8 %1162, i8* %1135, align 1, !noalias !71
  %1163 = getelementptr inbounds i8, i8* %1130, i64 2
  %1164 = load i8, i8* %1163, align 1, !noalias !71
  %1165 = zext i8 %1164 to i64
  %1166 = getelementptr inbounds i8, i8* %750, i64 %1165
  %1167 = load i8, i8* %1166, align 1
  store i8 %1167, i8* %1163, align 1, !noalias !71
  br label %1168

1168:                                             ; preds = %1156, %1149
  %1169 = add nuw i32 %1131, 1
  %1170 = getelementptr inbounds i8, i8* %1130, i64 3
  %1171 = icmp eq i32 %1169, %767
  br i1 %1171, label %2135, label %1129

1172:                                             ; preds = %1199, %1120
  %1173 = phi i8* [ %748, %1120 ], [ %1201, %1199 ]
  %1174 = phi i32 [ 0, %1120 ], [ %1200, %1199 ]
  %1175 = load i8, i8* %1173, align 1, !noalias !71
  %1176 = zext i8 %1175 to i32
  %1177 = icmp eq i32 %1176, %1128
  br i1 %1177, label %1178, label %1199

1178:                                             ; preds = %1172
  %1179 = getelementptr inbounds i8, i8* %1173, i64 1
  %1180 = load i8, i8* %1179, align 1, !noalias !71
  %1181 = zext i8 %1180 to i32
  %1182 = load i16, i16* %1122, align 4, !alias.scope !71
  %1183 = zext i16 %1182 to i32
  %1184 = icmp eq i32 %1181, %1183
  br i1 %1184, label %1185, label %1199

1185:                                             ; preds = %1178
  %1186 = getelementptr inbounds i8, i8* %1173, i64 2
  %1187 = load i8, i8* %1186, align 1, !noalias !71
  %1188 = zext i8 %1187 to i32
  %1189 = load i16, i16* %1123, align 2, !alias.scope !71
  %1190 = zext i16 %1189 to i32
  %1191 = icmp eq i32 %1188, %1190
  br i1 %1191, label %1192, label %1199

1192:                                             ; preds = %1185
  %1193 = load i16, i16* %1124, align 2, !alias.scope !71
  %1194 = trunc i16 %1193 to i8
  store i8 %1194, i8* %1173, align 1, !noalias !71
  %1195 = load i16, i16* %1125, align 4, !alias.scope !71
  %1196 = trunc i16 %1195 to i8
  store i8 %1196, i8* %1179, align 1, !noalias !71
  %1197 = load i16, i16* %1126, align 2, !alias.scope !71
  %1198 = trunc i16 %1197 to i8
  store i8 %1198, i8* %1186, align 1, !noalias !71
  br label %1199

1199:                                             ; preds = %1192, %1185, %1178, %1172
  %1200 = add nuw i32 %1174, 1
  %1201 = getelementptr inbounds i8, i8* %1173, i64 3
  %1202 = icmp eq i32 %1200, %767
  br i1 %1202, label %2135, label %1172

1203:                                             ; preds = %1102
  %1204 = icmp eq i16** %756, null
  %1205 = icmp ne i32 %767, 0
  br i1 %1204, label %1216, label %1206

1206:                                             ; preds = %1203
  br i1 %1205, label %1207, label %2135

1207:                                             ; preds = %1206
  %1208 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 1
  %1209 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 2
  %1210 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 3
  %1211 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %1212 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %1213 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %1214 = load i16, i16* %1208, align 2, !alias.scope !71
  %1215 = zext i16 %1214 to i32
  br label %1226

1216:                                             ; preds = %1203
  br i1 %1205, label %1217, label %2135

1217:                                             ; preds = %1216
  %1218 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 1
  %1219 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 2
  %1220 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 89, i32 3
  %1221 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %1222 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %1223 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %1224 = load i16, i16* %1218, align 2, !alias.scope !71
  %1225 = zext i16 %1224 to i32
  br label %1312

1226:                                             ; preds = %1303, %1207
  %1227 = phi i8* [ %748, %1207 ], [ %1310, %1303 ]
  %1228 = phi i32 [ 0, %1207 ], [ %1309, %1303 ]
  %1229 = load i8, i8* %1227, align 1, !noalias !71
  %1230 = zext i8 %1229 to i32
  %1231 = shl nuw nsw i32 %1230, 8
  %1232 = getelementptr inbounds i8, i8* %1227, i64 1
  %1233 = load i8, i8* %1232, align 1, !noalias !71
  %1234 = zext i8 %1233 to i32
  %1235 = or i32 %1231, %1234
  %1236 = getelementptr inbounds i8, i8* %1227, i64 2
  %1237 = getelementptr inbounds i8, i8* %1227, i64 3
  %1238 = getelementptr inbounds i8, i8* %1227, i64 4
  %1239 = load i8, i8* %1238, align 1, !noalias !71
  %1240 = zext i8 %1239 to i32
  %1241 = shl nuw nsw i32 %1240, 8
  %1242 = getelementptr inbounds i8, i8* %1227, i64 5
  %1243 = load i8, i8* %1242, align 1, !noalias !71
  %1244 = zext i8 %1243 to i32
  %1245 = or i32 %1241, %1244
  %1246 = icmp eq i32 %1235, %1215
  br i1 %1246, label %1251, label %1247

1247:                                             ; preds = %1226
  %1248 = load i8, i8* %1237, align 1, !noalias !71
  %1249 = load i8, i8* %1236, align 1, !noalias !71
  %1250 = zext i8 %1248 to i32
  br label %1274

1251:                                             ; preds = %1226
  %1252 = load i8, i8* %1236, align 1, !noalias !71
  %1253 = load i8, i8* %1237, align 1, !noalias !71
  %1254 = zext i8 %1252 to i32
  %1255 = shl nuw nsw i32 %1254, 8
  %1256 = zext i8 %1253 to i32
  %1257 = or i32 %1255, %1256
  %1258 = load i16, i16* %1209, align 4, !alias.scope !71
  %1259 = zext i16 %1258 to i32
  %1260 = icmp eq i32 %1257, %1259
  br i1 %1260, label %1261, label %1274

1261:                                             ; preds = %1251
  %1262 = load i16, i16* %1210, align 2, !alias.scope !71
  %1263 = zext i16 %1262 to i32
  %1264 = icmp eq i32 %1245, %1263
  br i1 %1264, label %1265, label %1274

1265:                                             ; preds = %1261
  %1266 = load i16, i16* %1211, align 2, !alias.scope !71
  %1267 = lshr i16 %1266, 8
  %1268 = trunc i16 %1267 to i8
  store i8 %1268, i8* %1227, align 1, !noalias !71
  %1269 = trunc i16 %1266 to i8
  store i8 %1269, i8* %1232, align 1, !noalias !71
  %1270 = load i16, i16* %1212, align 4, !alias.scope !71
  %1271 = lshr i16 %1270, 8
  %1272 = trunc i16 %1271 to i8
  store i8 %1272, i8* %1236, align 1, !noalias !71
  %1273 = trunc i16 %1270 to i8
  store i8 %1273, i8* %1237, align 1, !noalias !71
  br label %1303

1274:                                             ; preds = %1261, %1251, %1247
  %1275 = phi i32 [ %1250, %1247 ], [ %1256, %1261 ], [ %1256, %1251 ]
  %1276 = phi i8 [ %1249, %1247 ], [ %1252, %1261 ], [ %1252, %1251 ]
  %1277 = lshr i32 %1234, %762
  %1278 = sext i32 %1277 to i64
  %1279 = getelementptr inbounds i16*, i16** %756, i64 %1278
  %1280 = load i16*, i16** %1279, align 8
  %1281 = zext i8 %1229 to i64
  %1282 = getelementptr inbounds i16, i16* %1280, i64 %1281
  %1283 = load i16, i16* %1282, align 2
  %1284 = lshr i16 %1283, 8
  %1285 = trunc i16 %1284 to i8
  store i8 %1285, i8* %1227, align 1, !noalias !71
  %1286 = trunc i16 %1283 to i8
  store i8 %1286, i8* %1232, align 1, !noalias !71
  %1287 = lshr i32 %1275, %762
  %1288 = sext i32 %1287 to i64
  %1289 = getelementptr inbounds i16*, i16** %756, i64 %1288
  %1290 = load i16*, i16** %1289, align 8
  %1291 = zext i8 %1276 to i64
  %1292 = getelementptr inbounds i16, i16* %1290, i64 %1291
  %1293 = load i16, i16* %1292, align 2
  %1294 = lshr i16 %1293, 8
  %1295 = trunc i16 %1294 to i8
  store i8 %1295, i8* %1236, align 1, !noalias !71
  %1296 = trunc i16 %1293 to i8
  store i8 %1296, i8* %1237, align 1, !noalias !71
  %1297 = lshr i32 %1244, %762
  %1298 = sext i32 %1297 to i64
  %1299 = getelementptr inbounds i16*, i16** %756, i64 %1298
  %1300 = load i16*, i16** %1299, align 8
  %1301 = zext i8 %1239 to i64
  %1302 = getelementptr inbounds i16, i16* %1300, i64 %1301
  br label %1303

1303:                                             ; preds = %1274, %1265
  %1304 = phi i16* [ %1302, %1274 ], [ %1213, %1265 ]
  %1305 = load i16, i16* %1304, align 2
  %1306 = lshr i16 %1305, 8
  %1307 = trunc i16 %1306 to i8
  store i8 %1307, i8* %1238, align 1, !noalias !71
  %1308 = trunc i16 %1305 to i8
  store i8 %1308, i8* %1242, align 1, !noalias !71
  %1309 = add nuw i32 %1228, 1
  %1310 = getelementptr inbounds i8, i8* %1227, i64 6
  %1311 = icmp eq i32 %1309, %767
  br i1 %1311, label %2135, label %1226

1312:                                             ; preds = %1360, %1217
  %1313 = phi i8* [ %748, %1217 ], [ %1362, %1360 ]
  %1314 = phi i32 [ 0, %1217 ], [ %1361, %1360 ]
  %1315 = load i8, i8* %1313, align 1, !noalias !71
  %1316 = zext i8 %1315 to i32
  %1317 = shl nuw nsw i32 %1316, 8
  %1318 = getelementptr inbounds i8, i8* %1313, i64 1
  %1319 = load i8, i8* %1318, align 1, !noalias !71
  %1320 = zext i8 %1319 to i32
  %1321 = or i32 %1317, %1320
  %1322 = getelementptr inbounds i8, i8* %1313, i64 2
  %1323 = getelementptr inbounds i8, i8* %1313, i64 3
  %1324 = getelementptr inbounds i8, i8* %1313, i64 4
  %1325 = load i8, i8* %1324, align 1, !noalias !71
  %1326 = zext i8 %1325 to i32
  %1327 = shl nuw nsw i32 %1326, 8
  %1328 = getelementptr inbounds i8, i8* %1313, i64 5
  %1329 = load i8, i8* %1328, align 1, !noalias !71
  %1330 = zext i8 %1329 to i32
  %1331 = or i32 %1327, %1330
  %1332 = icmp eq i32 %1321, %1225
  br i1 %1332, label %1333, label %1360

1333:                                             ; preds = %1312
  %1334 = load i8, i8* %1322, align 1, !noalias !71
  %1335 = load i8, i8* %1323, align 1, !noalias !71
  %1336 = zext i8 %1334 to i32
  %1337 = shl nuw nsw i32 %1336, 8
  %1338 = zext i8 %1335 to i32
  %1339 = or i32 %1337, %1338
  %1340 = load i16, i16* %1219, align 4, !alias.scope !71
  %1341 = zext i16 %1340 to i32
  %1342 = icmp eq i32 %1339, %1341
  br i1 %1342, label %1343, label %1360

1343:                                             ; preds = %1333
  %1344 = load i16, i16* %1220, align 2, !alias.scope !71
  %1345 = zext i16 %1344 to i32
  %1346 = icmp eq i32 %1331, %1345
  br i1 %1346, label %1347, label %1360

1347:                                             ; preds = %1343
  %1348 = load i16, i16* %1221, align 2, !alias.scope !71
  %1349 = lshr i16 %1348, 8
  %1350 = trunc i16 %1349 to i8
  store i8 %1350, i8* %1313, align 1, !noalias !71
  %1351 = trunc i16 %1348 to i8
  store i8 %1351, i8* %1318, align 1, !noalias !71
  %1352 = load i16, i16* %1222, align 4, !alias.scope !71
  %1353 = lshr i16 %1352, 8
  %1354 = trunc i16 %1353 to i8
  store i8 %1354, i8* %1322, align 1, !noalias !71
  %1355 = trunc i16 %1352 to i8
  store i8 %1355, i8* %1323, align 1, !noalias !71
  %1356 = load i16, i16* %1223, align 2, !alias.scope !71
  %1357 = lshr i16 %1356, 8
  %1358 = trunc i16 %1357 to i8
  store i8 %1358, i8* %1324, align 1, !noalias !71
  %1359 = trunc i16 %1356 to i8
  store i8 %1359, i8* %1328, align 1, !noalias !71
  br label %1360

1360:                                             ; preds = %1347, %1343, %1333, %1312
  %1361 = add nuw i32 %1314, 1
  %1362 = getelementptr inbounds i8, i8* %1313, i64 6
  %1363 = icmp eq i32 %1361, %767
  br i1 %1363, label %2135, label %1312

1364:                                             ; preds = %746
  %1365 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %1366 = load i8, i8* %1365, align 1, !noalias !71
  %1367 = icmp eq i8 %1366, 8
  br i1 %1367, label %1368, label %1454

1368:                                             ; preds = %1364
  %1369 = icmp ne i8* %754, null
  %1370 = icmp ne i8* %752, null
  %1371 = and i1 %1370, %1369
  %1372 = icmp ne i8* %750, null
  %1373 = and i1 %1372, %1371
  %1374 = icmp ne i32 %767, 0
  br i1 %1373, label %1378, label %1375

1375:                                             ; preds = %1368
  br i1 %1374, label %1376, label %2135

1376:                                             ; preds = %1375
  %1377 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  br label %1424

1378:                                             ; preds = %1368
  br i1 %1374, label %1379, label %2135

1379:                                             ; preds = %1378
  %1380 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %1381 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 4
  br label %1382

1382:                                             ; preds = %1419, %1379
  %1383 = phi i8* [ %748, %1379 ], [ %1422, %1419 ]
  %1384 = phi i32 [ 0, %1379 ], [ %1421, %1419 ]
  %1385 = getelementptr inbounds i8, i8* %1383, i64 1
  %1386 = load i8, i8* %1385, align 1, !noalias !71
  switch i8 %1386, label %1395 [
    i8 -1, label %1387
    i8 0, label %1392
  ]

1387:                                             ; preds = %1382
  %1388 = load i8, i8* %1383, align 1, !noalias !71
  %1389 = zext i8 %1388 to i64
  %1390 = getelementptr inbounds i8, i8* %750, i64 %1389
  %1391 = load i8, i8* %1390, align 1
  br label %1419

1392:                                             ; preds = %1382
  %1393 = load i16, i16* %1380, align 4, !alias.scope !71
  %1394 = trunc i16 %1393 to i8
  br label %1419

1395:                                             ; preds = %1382
  %1396 = zext i8 %1386 to i16
  %1397 = load i8, i8* %1383, align 1, !noalias !71
  %1398 = zext i8 %1397 to i64
  %1399 = getelementptr inbounds i8, i8* %754, i64 %1398
  %1400 = load i8, i8* %1399, align 1
  %1401 = zext i8 %1400 to i16
  %1402 = mul nuw i16 %1401, %1396
  %1403 = load i16, i16* %1381, align 2, !alias.scope !71
  %1404 = xor i8 %1386, -1
  %1405 = zext i8 %1404 to i16
  %1406 = mul i16 %1403, %1405
  %1407 = add i16 %1406, 128
  %1408 = add i16 %1407, %1402
  %1409 = zext i16 %1408 to i32
  %1410 = lshr i32 %1409, 8
  %1411 = add nuw nsw i32 %1410, %1409
  %1412 = lshr i32 %1411, 8
  %1413 = trunc i32 %1412 to i8
  br i1 %765, label %1414, label %1419

1414:                                             ; preds = %1395
  %1415 = and i32 %1412, 255
  %1416 = zext i32 %1415 to i64
  %1417 = getelementptr inbounds i8, i8* %752, i64 %1416
  %1418 = load i8, i8* %1417, align 1
  br label %1419

1419:                                             ; preds = %1395, %1414, %1392, %1387
  %1420 = phi i8 [ %1394, %1392 ], [ %1391, %1387 ], [ %1418, %1414 ], [ %1413, %1395 ]
  store i8 %1420, i8* %1383, align 1, !noalias !71
  %1421 = add nuw i32 %1384, 1
  %1422 = getelementptr inbounds i8, i8* %1383, i64 2
  %1423 = icmp eq i32 %1421, %767
  br i1 %1423, label %2135, label %1382

1424:                                             ; preds = %1450, %1376
  %1425 = phi i8* [ %748, %1376 ], [ %1452, %1450 ]
  %1426 = phi i32 [ 0, %1376 ], [ %1451, %1450 ]
  %1427 = getelementptr inbounds i8, i8* %1425, i64 1
  %1428 = load i8, i8* %1427, align 1, !noalias !71
  switch i8 %1428, label %1432 [
    i8 0, label %1429
    i8 -1, label %1450
  ]

1429:                                             ; preds = %1424
  %1430 = load i16, i16* %1377, align 4, !alias.scope !71
  %1431 = trunc i16 %1430 to i8
  br label %1448

1432:                                             ; preds = %1424
  %1433 = load i8, i8* %1425, align 1, !noalias !71
  %1434 = zext i8 %1433 to i16
  %1435 = zext i8 %1428 to i16
  %1436 = mul nuw i16 %1434, %1435
  %1437 = load i16, i16* %1377, align 4, !alias.scope !71
  %1438 = xor i8 %1428, -1
  %1439 = zext i8 %1438 to i16
  %1440 = mul i16 %1437, %1439
  %1441 = add i16 %1440, 128
  %1442 = add i16 %1441, %1436
  %1443 = zext i16 %1442 to i32
  %1444 = lshr i32 %1443, 8
  %1445 = add nuw nsw i32 %1444, %1443
  %1446 = lshr i32 %1445, 8
  %1447 = trunc i32 %1446 to i8
  br label %1448

1448:                                             ; preds = %1429, %1432
  %1449 = phi i8 [ %1447, %1432 ], [ %1431, %1429 ]
  store i8 %1449, i8* %1425, align 1, !noalias !71
  br label %1450

1450:                                             ; preds = %1448, %1424
  %1451 = add nuw i32 %1426, 1
  %1452 = getelementptr inbounds i8, i8* %1425, i64 2
  %1453 = icmp eq i32 %1451, %767
  br i1 %1453, label %2135, label %1424

1454:                                             ; preds = %1364
  %1455 = icmp ne i16** %756, null
  %1456 = icmp ne i16** %758, null
  %1457 = and i1 %1455, %1456
  %1458 = icmp ne i16** %760, null
  %1459 = and i1 %1457, %1458
  %1460 = icmp ne i32 %767, 0
  br i1 %1459, label %1464, label %1461

1461:                                             ; preds = %1454
  br i1 %1460, label %1462, label %2135

1462:                                             ; preds = %1461
  %1463 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  br label %1545

1464:                                             ; preds = %1454
  br i1 %1460, label %1465, label %2135

1465:                                             ; preds = %1464
  %1466 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 4
  %1467 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 4
  br label %1468

1468:                                             ; preds = %1541, %1465
  %1469 = phi i8* [ %748, %1465 ], [ %1543, %1541 ]
  %1470 = phi i32 [ 0, %1465 ], [ %1542, %1541 ]
  %1471 = getelementptr inbounds i8, i8* %1469, i64 2
  %1472 = load i8, i8* %1471, align 1, !noalias !71
  %1473 = zext i8 %1472 to i32
  %1474 = shl nuw nsw i32 %1473, 8
  %1475 = getelementptr inbounds i8, i8* %1469, i64 3
  %1476 = load i8, i8* %1475, align 1, !noalias !71
  %1477 = zext i8 %1476 to i32
  %1478 = or i32 %1474, %1477
  %1479 = trunc i32 %1478 to i16
  switch i16 %1479, label %1501 [
    i16 -1, label %1480
    i16 0, label %1495
  ]

1480:                                             ; preds = %1468
  %1481 = getelementptr inbounds i8, i8* %1469, i64 1
  %1482 = load i8, i8* %1481, align 1, !noalias !71
  %1483 = zext i8 %1482 to i32
  %1484 = lshr i32 %1483, %762
  %1485 = sext i32 %1484 to i64
  %1486 = getelementptr inbounds i16*, i16** %756, i64 %1485
  %1487 = load i16*, i16** %1486, align 8
  %1488 = load i8, i8* %1469, align 1, !noalias !71
  %1489 = zext i8 %1488 to i64
  %1490 = getelementptr inbounds i16, i16* %1487, i64 %1489
  %1491 = load i16, i16* %1490, align 2
  %1492 = lshr i16 %1491, 8
  %1493 = trunc i16 %1492 to i8
  store i8 %1493, i8* %1469, align 1, !noalias !71
  %1494 = trunc i16 %1491 to i8
  store i8 %1494, i8* %1481, align 1, !noalias !71
  br label %1541

1495:                                             ; preds = %1468
  %1496 = load i16, i16* %1466, align 4, !alias.scope !71
  %1497 = lshr i16 %1496, 8
  %1498 = trunc i16 %1497 to i8
  store i8 %1498, i8* %1469, align 1, !noalias !71
  %1499 = trunc i16 %1496 to i8
  %1500 = getelementptr inbounds i8, i8* %1469, i64 1
  store i8 %1499, i8* %1500, align 1, !noalias !71
  br label %1541

1501:                                             ; preds = %1468
  %1502 = getelementptr inbounds i8, i8* %1469, i64 1
  %1503 = load i8, i8* %1502, align 1, !noalias !71
  %1504 = zext i8 %1503 to i32
  %1505 = lshr i32 %1504, %762
  %1506 = sext i32 %1505 to i64
  %1507 = getelementptr inbounds i16*, i16** %760, i64 %1506
  %1508 = load i16*, i16** %1507, align 8
  %1509 = load i8, i8* %1469, align 1, !noalias !71
  %1510 = zext i8 %1509 to i64
  %1511 = getelementptr inbounds i16, i16* %1508, i64 %1510
  %1512 = load i16, i16* %1511, align 2
  %1513 = zext i16 %1512 to i32
  %1514 = mul nuw i32 %1478, %1513
  %1515 = load i16, i16* %1467, align 2, !alias.scope !71
  %1516 = zext i16 %1515 to i32
  %1517 = xor i32 %1478, 65535
  %1518 = mul nuw i32 %1517, %1516
  %1519 = add i32 %1514, 32768
  %1520 = add i32 %1519, %1518
  %1521 = lshr i32 %1520, 16
  %1522 = add i32 %1521, %1520
  %1523 = lshr i32 %1522, 16
  br i1 %765, label %1526, label %1524

1524:                                             ; preds = %1501
  %1525 = trunc i32 %1523 to i16
  br label %1536

1526:                                             ; preds = %1501
  %1527 = and i32 %1523, 255
  %1528 = lshr i32 %1527, %762
  %1529 = sext i32 %1528 to i64
  %1530 = getelementptr inbounds i16*, i16** %758, i64 %1529
  %1531 = load i16*, i16** %1530, align 8
  %1532 = lshr i32 %1522, 24
  %1533 = zext i32 %1532 to i64
  %1534 = getelementptr inbounds i16, i16* %1531, i64 %1533
  %1535 = load i16, i16* %1534, align 2
  br label %1536

1536:                                             ; preds = %1526, %1524
  %1537 = phi i16 [ %1525, %1524 ], [ %1535, %1526 ]
  %1538 = lshr i16 %1537, 8
  %1539 = trunc i16 %1538 to i8
  store i8 %1539, i8* %1469, align 1, !noalias !71
  %1540 = trunc i16 %1537 to i8
  store i8 %1540, i8* %1502, align 1, !noalias !71
  br label %1541

1541:                                             ; preds = %1536, %1495, %1480
  %1542 = add nuw i32 %1470, 1
  %1543 = getelementptr inbounds i8, i8* %1469, i64 4
  %1544 = icmp eq i32 %1542, %767
  br i1 %1544, label %2135, label %1468

1545:                                             ; preds = %1584, %1462
  %1546 = phi i8* [ %748, %1462 ], [ %1586, %1584 ]
  %1547 = phi i32 [ 0, %1462 ], [ %1585, %1584 ]
  %1548 = getelementptr inbounds i8, i8* %1546, i64 2
  %1549 = load i8, i8* %1548, align 1, !noalias !71
  %1550 = zext i8 %1549 to i32
  %1551 = shl nuw nsw i32 %1550, 8
  %1552 = getelementptr inbounds i8, i8* %1546, i64 3
  %1553 = load i8, i8* %1552, align 1, !noalias !71
  %1554 = zext i8 %1553 to i32
  %1555 = or i32 %1551, %1554
  %1556 = trunc i32 %1555 to i16
  switch i16 %1556, label %1563 [
    i16 0, label %1557
    i16 -1, label %1584
  ]

1557:                                             ; preds = %1545
  %1558 = load i16, i16* %1463, align 4, !alias.scope !71
  %1559 = lshr i16 %1558, 8
  %1560 = trunc i16 %1559 to i8
  store i8 %1560, i8* %1546, align 1, !noalias !71
  %1561 = trunc i16 %1558 to i8
  %1562 = getelementptr inbounds i8, i8* %1546, i64 1
  store i8 %1561, i8* %1562, align 1, !noalias !71
  br label %1584

1563:                                             ; preds = %1545
  %1564 = load i8, i8* %1546, align 1, !noalias !71
  %1565 = zext i8 %1564 to i32
  %1566 = shl nuw nsw i32 %1565, 8
  %1567 = getelementptr inbounds i8, i8* %1546, i64 1
  %1568 = load i8, i8* %1567, align 1, !noalias !71
  %1569 = zext i8 %1568 to i32
  %1570 = or i32 %1566, %1569
  %1571 = mul nuw i32 %1570, %1555
  %1572 = load i16, i16* %1463, align 4, !alias.scope !71
  %1573 = zext i16 %1572 to i32
  %1574 = xor i32 %1555, 65535
  %1575 = mul nuw i32 %1574, %1573
  %1576 = add i32 %1575, 32768
  %1577 = add i32 %1576, %1571
  %1578 = lshr i32 %1577, 16
  %1579 = add i32 %1578, %1577
  %1580 = lshr i32 %1579, 16
  %1581 = lshr i32 %1579, 24
  %1582 = trunc i32 %1581 to i8
  store i8 %1582, i8* %1546, align 1, !noalias !71
  %1583 = trunc i32 %1580 to i8
  store i8 %1583, i8* %1567, align 1, !noalias !71
  br label %1584

1584:                                             ; preds = %1563, %1557, %1545
  %1585 = add nuw i32 %1547, 1
  %1586 = getelementptr inbounds i8, i8* %1546, i64 4
  %1587 = icmp eq i32 %1585, %767
  br i1 %1587, label %2135, label %1545

1588:                                             ; preds = %746
  %1589 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %1590 = load i8, i8* %1589, align 1, !noalias !71
  %1591 = icmp eq i8 %1590, 8
  br i1 %1591, label %1592, label %1783

1592:                                             ; preds = %1588
  %1593 = icmp ne i8* %754, null
  %1594 = icmp ne i8* %752, null
  %1595 = and i1 %1594, %1593
  %1596 = icmp ne i8* %750, null
  %1597 = and i1 %1596, %1595
  %1598 = icmp ne i32 %767, 0
  br i1 %1597, label %1604, label %1599

1599:                                             ; preds = %1592
  br i1 %1598, label %1600, label %2135

1600:                                             ; preds = %1599
  %1601 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %1602 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %1603 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  br label %1720

1604:                                             ; preds = %1592
  br i1 %1598, label %1605, label %2135

1605:                                             ; preds = %1604
  %1606 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %1607 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %1608 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %1609 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 1
  %1610 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 2
  %1611 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 3
  br label %1612

1612:                                             ; preds = %1716, %1605
  %1613 = phi i8* [ %748, %1605 ], [ %1718, %1716 ]
  %1614 = phi i32 [ 0, %1605 ], [ %1717, %1716 ]
  %1615 = getelementptr inbounds i8, i8* %1613, i64 3
  %1616 = load i8, i8* %1615, align 1, !noalias !71
  switch i8 %1616, label %1641 [
    i8 -1, label %1617
    i8 0, label %1632
  ]

1617:                                             ; preds = %1612
  %1618 = load i8, i8* %1613, align 1, !noalias !71
  %1619 = zext i8 %1618 to i64
  %1620 = getelementptr inbounds i8, i8* %750, i64 %1619
  %1621 = load i8, i8* %1620, align 1
  store i8 %1621, i8* %1613, align 1, !noalias !71
  %1622 = getelementptr inbounds i8, i8* %1613, i64 1
  %1623 = load i8, i8* %1622, align 1, !noalias !71
  %1624 = zext i8 %1623 to i64
  %1625 = getelementptr inbounds i8, i8* %750, i64 %1624
  %1626 = load i8, i8* %1625, align 1
  store i8 %1626, i8* %1622, align 1, !noalias !71
  %1627 = getelementptr inbounds i8, i8* %1613, i64 2
  %1628 = load i8, i8* %1627, align 1, !noalias !71
  %1629 = zext i8 %1628 to i64
  %1630 = getelementptr inbounds i8, i8* %750, i64 %1629
  %1631 = load i8, i8* %1630, align 1
  store i8 %1631, i8* %1627, align 1, !noalias !71
  br label %1716

1632:                                             ; preds = %1612
  %1633 = load i16, i16* %1606, align 2, !alias.scope !71
  %1634 = trunc i16 %1633 to i8
  store i8 %1634, i8* %1613, align 1, !noalias !71
  %1635 = load i16, i16* %1607, align 4, !alias.scope !71
  %1636 = trunc i16 %1635 to i8
  %1637 = getelementptr inbounds i8, i8* %1613, i64 1
  store i8 %1636, i8* %1637, align 1, !noalias !71
  %1638 = load i16, i16* %1608, align 2, !alias.scope !71
  %1639 = trunc i16 %1638 to i8
  %1640 = getelementptr inbounds i8, i8* %1613, i64 2
  store i8 %1639, i8* %1640, align 1, !noalias !71
  br label %1716

1641:                                             ; preds = %1612
  %1642 = load i8, i8* %1613, align 1, !noalias !71
  %1643 = zext i8 %1642 to i64
  %1644 = getelementptr inbounds i8, i8* %754, i64 %1643
  %1645 = load i8, i8* %1644, align 1
  %1646 = zext i8 %1645 to i32
  %1647 = zext i8 %1616 to i32
  %1648 = mul nuw nsw i32 %1646, %1647
  %1649 = load i16, i16* %1609, align 2, !alias.scope !71
  %1650 = zext i16 %1649 to i32
  %1651 = xor i8 %1616, -1
  %1652 = zext i8 %1651 to i32
  %1653 = mul nuw nsw i32 %1650, %1652
  %1654 = add nuw nsw i32 %1648, 128
  %1655 = add nuw nsw i32 %1654, %1653
  %1656 = lshr i32 %1655, 8
  %1657 = and i32 %1656, 255
  %1658 = add nuw nsw i32 %1657, %1655
  %1659 = lshr i32 %1658, 8
  %1660 = trunc i32 %1659 to i8
  br i1 %765, label %1661, label %1666

1661:                                             ; preds = %1641
  %1662 = and i32 %1659, 255
  %1663 = zext i32 %1662 to i64
  %1664 = getelementptr inbounds i8, i8* %752, i64 %1663
  %1665 = load i8, i8* %1664, align 1
  br label %1666

1666:                                             ; preds = %1661, %1641
  %1667 = phi i8 [ %1665, %1661 ], [ %1660, %1641 ]
  store i8 %1667, i8* %1613, align 1, !noalias !71
  %1668 = getelementptr inbounds i8, i8* %1613, i64 1
  %1669 = load i8, i8* %1668, align 1, !noalias !71
  %1670 = zext i8 %1669 to i64
  %1671 = getelementptr inbounds i8, i8* %754, i64 %1670
  %1672 = load i8, i8* %1671, align 1
  %1673 = zext i8 %1672 to i32
  %1674 = mul nuw nsw i32 %1673, %1647
  %1675 = load i16, i16* %1610, align 2, !alias.scope !71
  %1676 = zext i16 %1675 to i32
  %1677 = mul nuw nsw i32 %1676, %1652
  %1678 = add nuw nsw i32 %1674, 128
  %1679 = add nuw nsw i32 %1678, %1677
  %1680 = lshr i32 %1679, 8
  %1681 = and i32 %1680, 255
  %1682 = add nuw nsw i32 %1681, %1679
  %1683 = lshr i32 %1682, 8
  %1684 = trunc i32 %1683 to i8
  br i1 %765, label %1685, label %1690

1685:                                             ; preds = %1666
  %1686 = and i32 %1683, 255
  %1687 = zext i32 %1686 to i64
  %1688 = getelementptr inbounds i8, i8* %752, i64 %1687
  %1689 = load i8, i8* %1688, align 1
  br label %1690

1690:                                             ; preds = %1685, %1666
  %1691 = phi i8 [ %1689, %1685 ], [ %1684, %1666 ]
  store i8 %1691, i8* %1668, align 1, !noalias !71
  %1692 = getelementptr inbounds i8, i8* %1613, i64 2
  %1693 = load i8, i8* %1692, align 1, !noalias !71
  %1694 = zext i8 %1693 to i64
  %1695 = getelementptr inbounds i8, i8* %754, i64 %1694
  %1696 = load i8, i8* %1695, align 1
  %1697 = zext i8 %1696 to i32
  %1698 = mul nuw nsw i32 %1697, %1647
  %1699 = load i16, i16* %1611, align 2, !alias.scope !71
  %1700 = zext i16 %1699 to i32
  %1701 = mul nuw nsw i32 %1700, %1652
  %1702 = add nuw nsw i32 %1698, 128
  %1703 = add nuw nsw i32 %1702, %1701
  %1704 = lshr i32 %1703, 8
  %1705 = and i32 %1704, 255
  %1706 = add nuw nsw i32 %1705, %1703
  %1707 = lshr i32 %1706, 8
  %1708 = trunc i32 %1707 to i8
  br i1 %765, label %1709, label %1714

1709:                                             ; preds = %1690
  %1710 = and i32 %1707, 255
  %1711 = zext i32 %1710 to i64
  %1712 = getelementptr inbounds i8, i8* %752, i64 %1711
  %1713 = load i8, i8* %1712, align 1
  br label %1714

1714:                                             ; preds = %1709, %1690
  %1715 = phi i8 [ %1713, %1709 ], [ %1708, %1690 ]
  store i8 %1715, i8* %1692, align 1, !noalias !71
  br label %1716

1716:                                             ; preds = %1714, %1632, %1617
  %1717 = add nuw i32 %1614, 1
  %1718 = getelementptr inbounds i8, i8* %1613, i64 4
  %1719 = icmp eq i32 %1717, %767
  br i1 %1719, label %2135, label %1612

1720:                                             ; preds = %1779, %1600
  %1721 = phi i8* [ %748, %1600 ], [ %1781, %1779 ]
  %1722 = phi i32 [ 0, %1600 ], [ %1780, %1779 ]
  %1723 = getelementptr inbounds i8, i8* %1721, i64 3
  %1724 = load i8, i8* %1723, align 1, !noalias !71
  switch i8 %1724, label %1734 [
    i8 0, label %1725
    i8 -1, label %1779
  ]

1725:                                             ; preds = %1720
  %1726 = load i16, i16* %1601, align 2, !alias.scope !71
  %1727 = trunc i16 %1726 to i8
  store i8 %1727, i8* %1721, align 1, !noalias !71
  %1728 = load i16, i16* %1602, align 4, !alias.scope !71
  %1729 = trunc i16 %1728 to i8
  %1730 = getelementptr inbounds i8, i8* %1721, i64 1
  store i8 %1729, i8* %1730, align 1, !noalias !71
  %1731 = load i16, i16* %1603, align 2, !alias.scope !71
  %1732 = trunc i16 %1731 to i8
  %1733 = getelementptr inbounds i8, i8* %1721, i64 2
  store i8 %1732, i8* %1733, align 1, !noalias !71
  br label %1779

1734:                                             ; preds = %1720
  %1735 = load i8, i8* %1721, align 1, !noalias !71
  %1736 = zext i8 %1735 to i32
  %1737 = zext i8 %1724 to i32
  %1738 = mul nuw nsw i32 %1736, %1737
  %1739 = load i16, i16* %1601, align 2, !alias.scope !71
  %1740 = zext i16 %1739 to i32
  %1741 = xor i8 %1724, -1
  %1742 = zext i8 %1741 to i32
  %1743 = mul nuw nsw i32 %1740, %1742
  %1744 = add nuw nsw i32 %1738, 128
  %1745 = add nuw nsw i32 %1744, %1743
  %1746 = lshr i32 %1745, 8
  %1747 = and i32 %1746, 255
  %1748 = add nuw nsw i32 %1747, %1745
  %1749 = lshr i32 %1748, 8
  %1750 = trunc i32 %1749 to i8
  store i8 %1750, i8* %1721, align 1, !noalias !71
  %1751 = getelementptr inbounds i8, i8* %1721, i64 1
  %1752 = load i8, i8* %1751, align 1, !noalias !71
  %1753 = zext i8 %1752 to i32
  %1754 = mul nuw nsw i32 %1753, %1737
  %1755 = load i16, i16* %1602, align 4, !alias.scope !71
  %1756 = zext i16 %1755 to i32
  %1757 = mul nuw nsw i32 %1756, %1742
  %1758 = add nuw nsw i32 %1754, 128
  %1759 = add nuw nsw i32 %1758, %1757
  %1760 = lshr i32 %1759, 8
  %1761 = and i32 %1760, 255
  %1762 = add nuw nsw i32 %1761, %1759
  %1763 = lshr i32 %1762, 8
  %1764 = trunc i32 %1763 to i8
  store i8 %1764, i8* %1751, align 1, !noalias !71
  %1765 = getelementptr inbounds i8, i8* %1721, i64 2
  %1766 = load i8, i8* %1765, align 1, !noalias !71
  %1767 = zext i8 %1766 to i32
  %1768 = mul nuw nsw i32 %1767, %1737
  %1769 = load i16, i16* %1603, align 2, !alias.scope !71
  %1770 = zext i16 %1769 to i32
  %1771 = mul nuw nsw i32 %1770, %1742
  %1772 = add nuw nsw i32 %1768, 128
  %1773 = add nuw nsw i32 %1772, %1771
  %1774 = lshr i32 %1773, 8
  %1775 = and i32 %1774, 255
  %1776 = add nuw nsw i32 %1775, %1773
  %1777 = lshr i32 %1776, 8
  %1778 = trunc i32 %1777 to i8
  store i8 %1778, i8* %1765, align 1, !noalias !71
  br label %1779

1779:                                             ; preds = %1734, %1725, %1720
  %1780 = add nuw i32 %1722, 1
  %1781 = getelementptr inbounds i8, i8* %1721, i64 4
  %1782 = icmp eq i32 %1780, %767
  br i1 %1782, label %2135, label %1720

1783:                                             ; preds = %1588
  %1784 = icmp ne i16** %756, null
  %1785 = icmp ne i16** %758, null
  %1786 = and i1 %1784, %1785
  %1787 = icmp ne i16** %760, null
  %1788 = and i1 %1786, %1787
  %1789 = icmp ne i32 %767, 0
  br i1 %1788, label %1795, label %1790

1790:                                             ; preds = %1783
  br i1 %1789, label %1791, label %2135

1791:                                             ; preds = %1790
  %1792 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %1793 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %1794 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  br label %1997

1795:                                             ; preds = %1783
  br i1 %1789, label %1796, label %2135

1796:                                             ; preds = %1795
  %1797 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 1
  %1798 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 2
  %1799 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 73, i32 3
  %1800 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 1
  %1801 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 2
  %1802 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 74, i32 3
  br label %1803

1803:                                             ; preds = %1993, %1796
  %1804 = phi i8* [ %748, %1796 ], [ %1995, %1993 ]
  %1805 = phi i32 [ 0, %1796 ], [ %1994, %1993 ]
  %1806 = getelementptr inbounds i8, i8* %1804, i64 6
  %1807 = load i8, i8* %1806, align 1, !noalias !71
  %1808 = zext i8 %1807 to i32
  %1809 = shl nuw nsw i32 %1808, 8
  %1810 = getelementptr inbounds i8, i8* %1804, i64 7
  %1811 = load i8, i8* %1810, align 1, !noalias !71
  %1812 = zext i8 %1811 to i32
  %1813 = or i32 %1809, %1812
  %1814 = trunc i32 %1813 to i16
  switch i16 %1814, label %1878 [
    i16 -1, label %1815
    i16 0, label %1860
  ]

1815:                                             ; preds = %1803
  %1816 = getelementptr inbounds i8, i8* %1804, i64 1
  %1817 = load i8, i8* %1816, align 1, !noalias !71
  %1818 = zext i8 %1817 to i32
  %1819 = lshr i32 %1818, %762
  %1820 = sext i32 %1819 to i64
  %1821 = getelementptr inbounds i16*, i16** %756, i64 %1820
  %1822 = load i16*, i16** %1821, align 8
  %1823 = load i8, i8* %1804, align 1, !noalias !71
  %1824 = zext i8 %1823 to i64
  %1825 = getelementptr inbounds i16, i16* %1822, i64 %1824
  %1826 = load i16, i16* %1825, align 2
  %1827 = lshr i16 %1826, 8
  %1828 = trunc i16 %1827 to i8
  store i8 %1828, i8* %1804, align 1, !noalias !71
  %1829 = trunc i16 %1826 to i8
  store i8 %1829, i8* %1816, align 1, !noalias !71
  %1830 = getelementptr inbounds i8, i8* %1804, i64 3
  %1831 = load i8, i8* %1830, align 1, !noalias !71
  %1832 = zext i8 %1831 to i32
  %1833 = lshr i32 %1832, %762
  %1834 = sext i32 %1833 to i64
  %1835 = getelementptr inbounds i16*, i16** %756, i64 %1834
  %1836 = load i16*, i16** %1835, align 8
  %1837 = getelementptr inbounds i8, i8* %1804, i64 2
  %1838 = load i8, i8* %1837, align 1, !noalias !71
  %1839 = zext i8 %1838 to i64
  %1840 = getelementptr inbounds i16, i16* %1836, i64 %1839
  %1841 = load i16, i16* %1840, align 2
  %1842 = lshr i16 %1841, 8
  %1843 = trunc i16 %1842 to i8
  store i8 %1843, i8* %1837, align 1, !noalias !71
  %1844 = trunc i16 %1841 to i8
  store i8 %1844, i8* %1830, align 1, !noalias !71
  %1845 = getelementptr inbounds i8, i8* %1804, i64 5
  %1846 = load i8, i8* %1845, align 1, !noalias !71
  %1847 = zext i8 %1846 to i32
  %1848 = lshr i32 %1847, %762
  %1849 = sext i32 %1848 to i64
  %1850 = getelementptr inbounds i16*, i16** %756, i64 %1849
  %1851 = load i16*, i16** %1850, align 8
  %1852 = getelementptr inbounds i8, i8* %1804, i64 4
  %1853 = load i8, i8* %1852, align 1, !noalias !71
  %1854 = zext i8 %1853 to i64
  %1855 = getelementptr inbounds i16, i16* %1851, i64 %1854
  %1856 = load i16, i16* %1855, align 2
  %1857 = lshr i16 %1856, 8
  %1858 = trunc i16 %1857 to i8
  store i8 %1858, i8* %1852, align 1, !noalias !71
  %1859 = trunc i16 %1856 to i8
  store i8 %1859, i8* %1845, align 1, !noalias !71
  br label %1993

1860:                                             ; preds = %1803
  %1861 = load i16, i16* %1797, align 2, !alias.scope !71
  %1862 = lshr i16 %1861, 8
  %1863 = trunc i16 %1862 to i8
  store i8 %1863, i8* %1804, align 1, !noalias !71
  %1864 = trunc i16 %1861 to i8
  %1865 = getelementptr inbounds i8, i8* %1804, i64 1
  store i8 %1864, i8* %1865, align 1, !noalias !71
  %1866 = load i16, i16* %1798, align 4, !alias.scope !71
  %1867 = lshr i16 %1866, 8
  %1868 = trunc i16 %1867 to i8
  %1869 = getelementptr inbounds i8, i8* %1804, i64 2
  store i8 %1868, i8* %1869, align 1, !noalias !71
  %1870 = trunc i16 %1866 to i8
  %1871 = getelementptr inbounds i8, i8* %1804, i64 3
  store i8 %1870, i8* %1871, align 1, !noalias !71
  %1872 = load i16, i16* %1799, align 2, !alias.scope !71
  %1873 = lshr i16 %1872, 8
  %1874 = trunc i16 %1873 to i8
  %1875 = getelementptr inbounds i8, i8* %1804, i64 4
  store i8 %1874, i8* %1875, align 1, !noalias !71
  %1876 = trunc i16 %1872 to i8
  %1877 = getelementptr inbounds i8, i8* %1804, i64 5
  store i8 %1876, i8* %1877, align 1, !noalias !71
  br label %1993

1878:                                             ; preds = %1803
  %1879 = getelementptr inbounds i8, i8* %1804, i64 1
  %1880 = load i8, i8* %1879, align 1, !noalias !71
  %1881 = zext i8 %1880 to i32
  %1882 = lshr i32 %1881, %762
  %1883 = sext i32 %1882 to i64
  %1884 = getelementptr inbounds i16*, i16** %760, i64 %1883
  %1885 = load i16*, i16** %1884, align 8
  %1886 = load i8, i8* %1804, align 1, !noalias !71
  %1887 = zext i8 %1886 to i64
  %1888 = getelementptr inbounds i16, i16* %1885, i64 %1887
  %1889 = load i16, i16* %1888, align 2
  %1890 = zext i16 %1889 to i32
  %1891 = mul nuw i32 %1813, %1890
  %1892 = load i16, i16* %1800, align 2, !alias.scope !71
  %1893 = zext i16 %1892 to i32
  %1894 = xor i32 %1813, 65535
  %1895 = mul nuw i32 %1894, %1893
  %1896 = add i32 %1891, 32768
  %1897 = add i32 %1896, %1895
  %1898 = lshr i32 %1897, 16
  %1899 = add i32 %1898, %1897
  %1900 = lshr i32 %1899, 16
  %1901 = trunc i32 %1900 to i16
  br i1 %765, label %1902, label %1912

1902:                                             ; preds = %1878
  %1903 = and i32 %1900, 255
  %1904 = lshr i32 %1903, %762
  %1905 = sext i32 %1904 to i64
  %1906 = getelementptr inbounds i16*, i16** %758, i64 %1905
  %1907 = load i16*, i16** %1906, align 8
  %1908 = lshr i32 %1899, 24
  %1909 = zext i32 %1908 to i64
  %1910 = getelementptr inbounds i16, i16* %1907, i64 %1909
  %1911 = load i16, i16* %1910, align 2
  br label %1912

1912:                                             ; preds = %1902, %1878
  %1913 = phi i16 [ %1911, %1902 ], [ %1901, %1878 ]
  %1914 = lshr i16 %1913, 8
  %1915 = trunc i16 %1914 to i8
  store i8 %1915, i8* %1804, align 1, !noalias !71
  %1916 = trunc i16 %1913 to i8
  store i8 %1916, i8* %1879, align 1, !noalias !71
  %1917 = getelementptr inbounds i8, i8* %1804, i64 3
  %1918 = load i8, i8* %1917, align 1, !noalias !71
  %1919 = zext i8 %1918 to i32
  %1920 = lshr i32 %1919, %762
  %1921 = sext i32 %1920 to i64
  %1922 = getelementptr inbounds i16*, i16** %760, i64 %1921
  %1923 = load i16*, i16** %1922, align 8
  %1924 = getelementptr inbounds i8, i8* %1804, i64 2
  %1925 = load i8, i8* %1924, align 1, !noalias !71
  %1926 = zext i8 %1925 to i64
  %1927 = getelementptr inbounds i16, i16* %1923, i64 %1926
  %1928 = load i16, i16* %1927, align 2
  %1929 = zext i16 %1928 to i32
  %1930 = mul nuw i32 %1813, %1929
  %1931 = load i16, i16* %1801, align 2, !alias.scope !71
  %1932 = zext i16 %1931 to i32
  %1933 = mul nuw i32 %1894, %1932
  %1934 = add i32 %1930, 32768
  %1935 = add i32 %1934, %1933
  %1936 = lshr i32 %1935, 16
  %1937 = add i32 %1936, %1935
  %1938 = lshr i32 %1937, 16
  %1939 = trunc i32 %1938 to i16
  br i1 %765, label %1940, label %1950

1940:                                             ; preds = %1912
  %1941 = and i32 %1938, 255
  %1942 = lshr i32 %1941, %762
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds i16*, i16** %758, i64 %1943
  %1945 = load i16*, i16** %1944, align 8
  %1946 = lshr i32 %1937, 24
  %1947 = zext i32 %1946 to i64
  %1948 = getelementptr inbounds i16, i16* %1945, i64 %1947
  %1949 = load i16, i16* %1948, align 2
  br label %1950

1950:                                             ; preds = %1940, %1912
  %1951 = phi i16 [ %1949, %1940 ], [ %1939, %1912 ]
  %1952 = lshr i16 %1951, 8
  %1953 = trunc i16 %1952 to i8
  store i8 %1953, i8* %1924, align 1, !noalias !71
  %1954 = trunc i16 %1951 to i8
  store i8 %1954, i8* %1917, align 1, !noalias !71
  %1955 = getelementptr inbounds i8, i8* %1804, i64 5
  %1956 = load i8, i8* %1955, align 1, !noalias !71
  %1957 = zext i8 %1956 to i32
  %1958 = lshr i32 %1957, %762
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds i16*, i16** %760, i64 %1959
  %1961 = load i16*, i16** %1960, align 8
  %1962 = getelementptr inbounds i8, i8* %1804, i64 4
  %1963 = load i8, i8* %1962, align 1, !noalias !71
  %1964 = zext i8 %1963 to i64
  %1965 = getelementptr inbounds i16, i16* %1961, i64 %1964
  %1966 = load i16, i16* %1965, align 2
  %1967 = zext i16 %1966 to i32
  %1968 = mul nuw i32 %1813, %1967
  %1969 = load i16, i16* %1802, align 2, !alias.scope !71
  %1970 = zext i16 %1969 to i32
  %1971 = mul nuw i32 %1894, %1970
  %1972 = add i32 %1968, 32768
  %1973 = add i32 %1972, %1971
  %1974 = lshr i32 %1973, 16
  %1975 = add i32 %1974, %1973
  %1976 = lshr i32 %1975, 16
  %1977 = trunc i32 %1976 to i16
  br i1 %765, label %1978, label %1988

1978:                                             ; preds = %1950
  %1979 = and i32 %1976, 255
  %1980 = lshr i32 %1979, %762
  %1981 = sext i32 %1980 to i64
  %1982 = getelementptr inbounds i16*, i16** %758, i64 %1981
  %1983 = load i16*, i16** %1982, align 8
  %1984 = lshr i32 %1975, 24
  %1985 = zext i32 %1984 to i64
  %1986 = getelementptr inbounds i16, i16* %1983, i64 %1985
  %1987 = load i16, i16* %1986, align 2
  br label %1988

1988:                                             ; preds = %1978, %1950
  %1989 = phi i16 [ %1987, %1978 ], [ %1977, %1950 ]
  %1990 = lshr i16 %1989, 8
  %1991 = trunc i16 %1990 to i8
  store i8 %1991, i8* %1962, align 1, !noalias !71
  %1992 = trunc i16 %1989 to i8
  store i8 %1992, i8* %1955, align 1, !noalias !71
  br label %1993

1993:                                             ; preds = %1988, %1860, %1815
  %1994 = add nuw i32 %1805, 1
  %1995 = getelementptr inbounds i8, i8* %1804, i64 8
  %1996 = icmp eq i32 %1994, %767
  br i1 %1996, label %2135, label %1803

1997:                                             ; preds = %2088, %1791
  %1998 = phi i8* [ %748, %1791 ], [ %2090, %2088 ]
  %1999 = phi i32 [ 0, %1791 ], [ %2089, %2088 ]
  %2000 = getelementptr inbounds i8, i8* %1998, i64 6
  %2001 = load i8, i8* %2000, align 1, !noalias !71
  %2002 = zext i8 %2001 to i32
  %2003 = shl nuw nsw i32 %2002, 8
  %2004 = getelementptr inbounds i8, i8* %1998, i64 7
  %2005 = load i8, i8* %2004, align 1, !noalias !71
  %2006 = zext i8 %2005 to i32
  %2007 = or i32 %2003, %2006
  %2008 = trunc i32 %2007 to i16
  switch i16 %2008, label %2027 [
    i16 0, label %2009
    i16 -1, label %2088
  ]

2009:                                             ; preds = %1997
  %2010 = load i16, i16* %1792, align 2, !alias.scope !71
  %2011 = lshr i16 %2010, 8
  %2012 = trunc i16 %2011 to i8
  store i8 %2012, i8* %1998, align 1, !noalias !71
  %2013 = trunc i16 %2010 to i8
  %2014 = getelementptr inbounds i8, i8* %1998, i64 1
  store i8 %2013, i8* %2014, align 1, !noalias !71
  %2015 = load i16, i16* %1793, align 4, !alias.scope !71
  %2016 = lshr i16 %2015, 8
  %2017 = trunc i16 %2016 to i8
  %2018 = getelementptr inbounds i8, i8* %1998, i64 2
  store i8 %2017, i8* %2018, align 1, !noalias !71
  %2019 = trunc i16 %2015 to i8
  %2020 = getelementptr inbounds i8, i8* %1998, i64 3
  store i8 %2019, i8* %2020, align 1, !noalias !71
  %2021 = load i16, i16* %1794, align 2, !alias.scope !71
  %2022 = lshr i16 %2021, 8
  %2023 = trunc i16 %2022 to i8
  %2024 = getelementptr inbounds i8, i8* %1998, i64 4
  store i8 %2023, i8* %2024, align 1, !noalias !71
  %2025 = trunc i16 %2021 to i8
  %2026 = getelementptr inbounds i8, i8* %1998, i64 5
  store i8 %2025, i8* %2026, align 1, !noalias !71
  br label %2088

2027:                                             ; preds = %1997
  %2028 = load i8, i8* %1998, align 1, !noalias !71
  %2029 = zext i8 %2028 to i32
  %2030 = shl nuw nsw i32 %2029, 8
  %2031 = getelementptr inbounds i8, i8* %1998, i64 1
  %2032 = load i8, i8* %2031, align 1, !noalias !71
  %2033 = zext i8 %2032 to i32
  %2034 = or i32 %2030, %2033
  %2035 = getelementptr inbounds i8, i8* %1998, i64 2
  %2036 = load i8, i8* %2035, align 1, !noalias !71
  %2037 = zext i8 %2036 to i32
  %2038 = shl nuw nsw i32 %2037, 8
  %2039 = getelementptr inbounds i8, i8* %1998, i64 3
  %2040 = load i8, i8* %2039, align 1, !noalias !71
  %2041 = zext i8 %2040 to i32
  %2042 = or i32 %2038, %2041
  %2043 = getelementptr inbounds i8, i8* %1998, i64 4
  %2044 = load i8, i8* %2043, align 1, !noalias !71
  %2045 = zext i8 %2044 to i32
  %2046 = shl nuw nsw i32 %2045, 8
  %2047 = getelementptr inbounds i8, i8* %1998, i64 5
  %2048 = load i8, i8* %2047, align 1, !noalias !71
  %2049 = zext i8 %2048 to i32
  %2050 = or i32 %2046, %2049
  %2051 = mul nuw i32 %2034, %2007
  %2052 = load i16, i16* %1792, align 2, !alias.scope !71
  %2053 = zext i16 %2052 to i32
  %2054 = xor i32 %2007, 65535
  %2055 = mul nuw i32 %2054, %2053
  %2056 = add i32 %2051, 32768
  %2057 = add i32 %2056, %2055
  %2058 = lshr i32 %2057, 16
  %2059 = add i32 %2058, %2057
  %2060 = lshr i32 %2059, 16
  %2061 = lshr i32 %2059, 24
  %2062 = trunc i32 %2061 to i8
  store i8 %2062, i8* %1998, align 1, !noalias !71
  %2063 = trunc i32 %2060 to i8
  store i8 %2063, i8* %2031, align 1, !noalias !71
  %2064 = mul nuw i32 %2042, %2007
  %2065 = load i16, i16* %1793, align 4, !alias.scope !71
  %2066 = zext i16 %2065 to i32
  %2067 = mul nuw i32 %2054, %2066
  %2068 = add i32 %2064, 32768
  %2069 = add i32 %2068, %2067
  %2070 = lshr i32 %2069, 16
  %2071 = add i32 %2070, %2069
  %2072 = lshr i32 %2071, 16
  %2073 = lshr i32 %2071, 24
  %2074 = trunc i32 %2073 to i8
  store i8 %2074, i8* %2035, align 1, !noalias !71
  %2075 = trunc i32 %2072 to i8
  store i8 %2075, i8* %2039, align 1, !noalias !71
  %2076 = mul nuw i32 %2050, %2007
  %2077 = load i16, i16* %1794, align 2, !alias.scope !71
  %2078 = zext i16 %2077 to i32
  %2079 = mul nuw i32 %2054, %2078
  %2080 = add i32 %2076, 32768
  %2081 = add i32 %2080, %2079
  %2082 = lshr i32 %2081, 16
  %2083 = add i32 %2082, %2081
  %2084 = lshr i32 %2083, 16
  %2085 = lshr i32 %2083, 24
  %2086 = trunc i32 %2085 to i8
  store i8 %2086, i8* %2043, align 1, !noalias !71
  %2087 = trunc i32 %2084 to i8
  store i8 %2087, i8* %2047, align 1, !noalias !71
  br label %2088

2088:                                             ; preds = %2027, %2009, %1997
  %2089 = add nuw i32 %1999, 1
  %2090 = getelementptr inbounds i8, i8* %1998, i64 8
  %2091 = icmp eq i32 %2089, %767
  br i1 %2091, label %2135, label %1997

2092:                                             ; preds = %4177, %988
  %2093 = phi i8* [ %748, %988 ], [ %4178, %4177 ]
  %2094 = icmp eq i32 %993, 0
  br i1 %2094, label %2135, label %2095

2095:                                             ; preds = %2092
  %2096 = load i8, i8* %2093, align 1, !noalias !71
  %2097 = zext i8 %2096 to i32
  %2098 = icmp eq i32 %2097, %992
  br i1 %2098, label %2099, label %2135

2099:                                             ; preds = %2095
  %2100 = load i16, i16* %990, align 4, !alias.scope !71
  %2101 = trunc i16 %2100 to i8
  store i8 %2101, i8* %2093, align 1, !noalias !71
  br label %2135

2102:                                             ; preds = %4188, %978
  %2103 = phi i8* [ %748, %978 ], [ %4190, %4188 ]
  %2104 = icmp eq i32 %983, 0
  br i1 %2104, label %2135, label %2105

2105:                                             ; preds = %2102
  %2106 = load i8, i8* %2103, align 1, !noalias !71
  %2107 = zext i8 %2106 to i32
  %2108 = icmp eq i32 %2107, %982
  br i1 %2108, label %2113, label %2109

2109:                                             ; preds = %2105
  %2110 = zext i8 %2106 to i64
  %2111 = getelementptr inbounds i8, i8* %750, i64 %2110
  %2112 = load i8, i8* %2111, align 1
  br label %2116

2113:                                             ; preds = %2105
  %2114 = load i16, i16* %980, align 4, !alias.scope !71
  %2115 = trunc i16 %2114 to i8
  br label %2116

2116:                                             ; preds = %2113, %2109
  %2117 = phi i8 [ %2112, %2109 ], [ %2115, %2113 ]
  store i8 %2117, i8* %2103, align 1, !noalias !71
  br label %2135

2118:                                             ; preds = %4198, %1040
  %2119 = phi i8* [ %748, %1040 ], [ %4199, %4198 ]
  %2120 = icmp eq i32 %1045, 0
  br i1 %2120, label %2135, label %2121

2121:                                             ; preds = %2118
  %2122 = load i8, i8* %2119, align 1, !noalias !71
  %2123 = zext i8 %2122 to i32
  %2124 = shl nuw nsw i32 %2123, 8
  %2125 = getelementptr inbounds i8, i8* %2119, i64 1
  %2126 = load i8, i8* %2125, align 1, !noalias !71
  %2127 = zext i8 %2126 to i32
  %2128 = or i32 %2124, %2127
  %2129 = icmp eq i32 %2128, %1044
  br i1 %2129, label %2130, label %2135

2130:                                             ; preds = %2121
  %2131 = load i16, i16* %1042, align 4, !alias.scope !71
  %2132 = lshr i16 %2131, 8
  %2133 = trunc i16 %2132 to i8
  store i8 %2133, i8* %2119, align 1, !noalias !71
  %2134 = trunc i16 %2131 to i8
  store i8 %2134, i8* %2125, align 1, !noalias !71
  br label %2135

2135:                                             ; preds = %2088, %1993, %1779, %1716, %1584, %1541, %1450, %1419, %1303, %1360, %1168, %1199, %1067, %2118, %2121, %2130, %2116, %2102, %2092, %2095, %2099, %938, %966, %856, %884, %798, %1795, %1790, %1604, %1599, %1464, %1461, %1378, %1375, %1216, %1206, %1119, %1109, %1039, %1033, %987, %977, %901, %895, %815, %809, %773, %770, %746, %742
  %2136 = load i32, i32* %15, align 4
  %2137 = and i32 %2136, 6299648
  %2138 = icmp eq i32 %2137, 8192
  br i1 %2138, label %2139, label %2709

2139:                                             ; preds = %2135
  %2140 = trunc i32 %2136 to i8
  %2141 = icmp slt i8 %2140, 0
  br i1 %2141, label %2145, label %2142

2142:                                             ; preds = %2139
  %2143 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %2144 = load i8, i8* %2143, align 1
  br label %2154

2145:                                             ; preds = %2139
  %2146 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 54
  %2147 = load i16, i16* %2146, align 2
  %2148 = icmp eq i16 %2147, 0
  br i1 %2148, label %2149, label %2709

2149:                                             ; preds = %2145
  %2150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %2151 = load i8, i8* %2150, align 1
  %2152 = and i8 %2151, 4
  %2153 = icmp eq i8 %2152, 0
  br i1 %2153, label %2154, label %2709

2154:                                             ; preds = %2142, %2149
  %2155 = phi i8 [ %2144, %2142 ], [ %2151, %2149 ]
  %2156 = icmp eq i8 %2155, 3
  br i1 %2156, label %2709, label %2157

2157:                                             ; preds = %2154
  %2158 = load i8*, i8** %4, align 8
  %2159 = getelementptr inbounds i8, i8* %2158, i64 1
  %2160 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 80
  %2161 = load i8*, i8** %2160, align 8, !alias.scope !74
  %2162 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 81
  %2163 = load i16**, i16*** %2162, align 8, !alias.scope !74
  %2164 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 78
  %2165 = load i32, i32* %2164, align 8, !alias.scope !74
  %2166 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %2167 = load i32, i32* %2166, align 8, !noalias !74
  %2168 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %2169 = load i8, i8* %2168, align 1, !noalias !74
  %2170 = icmp ult i8 %2169, 9
  %2171 = icmp ne i8* %2161, null
  %2172 = and i1 %2171, %2170
  br i1 %2172, label %2177, label %2173

2173:                                             ; preds = %2157
  %2174 = icmp eq i8 %2169, 16
  %2175 = icmp ne i16** %2163, null
  %2176 = and i1 %2175, %2174
  br i1 %2176, label %2177, label %2709

2177:                                             ; preds = %2173, %2157
  %2178 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %2179 = load i8, i8* %2178, align 8, !noalias !74
  switch i8 %2179, label %2709 [
    i8 2, label %2180
    i8 6, label %2275
    i8 4, label %2370
    i8 0, label %2446
  ]

2180:                                             ; preds = %2177
  %2181 = icmp eq i8 %2169, 8
  %2182 = icmp ne i32 %2167, 0
  br i1 %2181, label %2184, label %2183

2183:                                             ; preds = %2180
  br i1 %2182, label %2225, label %2709

2184:                                             ; preds = %2180
  br i1 %2182, label %2185, label %2709

2185:                                             ; preds = %2184
  %2186 = and i32 %2167, 1
  %2187 = icmp eq i32 %2167, 1
  br i1 %2187, label %2611, label %2188

2188:                                             ; preds = %2185
  %2189 = sub i32 %2167, %2186
  br label %2190

2190:                                             ; preds = %2190, %2188
  %2191 = phi i8* [ %2159, %2188 ], [ %2222, %2190 ]
  %2192 = phi i32 [ %2189, %2188 ], [ %2223, %2190 ]
  %2193 = load i8, i8* %2191, align 1, !noalias !74
  %2194 = zext i8 %2193 to i64
  %2195 = getelementptr inbounds i8, i8* %2161, i64 %2194
  %2196 = load i8, i8* %2195, align 1, !noalias !74
  store i8 %2196, i8* %2191, align 1, !noalias !74
  %2197 = getelementptr inbounds i8, i8* %2191, i64 1
  %2198 = load i8, i8* %2197, align 1, !noalias !74
  %2199 = zext i8 %2198 to i64
  %2200 = getelementptr inbounds i8, i8* %2161, i64 %2199
  %2201 = load i8, i8* %2200, align 1, !noalias !74
  store i8 %2201, i8* %2197, align 1, !noalias !74
  %2202 = getelementptr inbounds i8, i8* %2191, i64 2
  %2203 = load i8, i8* %2202, align 1, !noalias !74
  %2204 = zext i8 %2203 to i64
  %2205 = getelementptr inbounds i8, i8* %2161, i64 %2204
  %2206 = load i8, i8* %2205, align 1, !noalias !74
  store i8 %2206, i8* %2202, align 1, !noalias !74
  %2207 = getelementptr inbounds i8, i8* %2191, i64 3
  %2208 = load i8, i8* %2207, align 1, !noalias !74
  %2209 = zext i8 %2208 to i64
  %2210 = getelementptr inbounds i8, i8* %2161, i64 %2209
  %2211 = load i8, i8* %2210, align 1, !noalias !74
  store i8 %2211, i8* %2207, align 1, !noalias !74
  %2212 = getelementptr inbounds i8, i8* %2191, i64 4
  %2213 = load i8, i8* %2212, align 1, !noalias !74
  %2214 = zext i8 %2213 to i64
  %2215 = getelementptr inbounds i8, i8* %2161, i64 %2214
  %2216 = load i8, i8* %2215, align 1, !noalias !74
  store i8 %2216, i8* %2212, align 1, !noalias !74
  %2217 = getelementptr inbounds i8, i8* %2191, i64 5
  %2218 = load i8, i8* %2217, align 1, !noalias !74
  %2219 = zext i8 %2218 to i64
  %2220 = getelementptr inbounds i8, i8* %2161, i64 %2219
  %2221 = load i8, i8* %2220, align 1, !noalias !74
  store i8 %2221, i8* %2217, align 1, !noalias !74
  %2222 = getelementptr inbounds i8, i8* %2191, i64 6
  %2223 = add i32 %2192, -2
  %2224 = icmp eq i32 %2223, 0
  br i1 %2224, label %2611, label %2190

2225:                                             ; preds = %2183, %2225
  %2226 = phi i8* [ %2272, %2225 ], [ %2159, %2183 ]
  %2227 = phi i32 [ %2273, %2225 ], [ 0, %2183 ]
  %2228 = getelementptr inbounds i8, i8* %2226, i64 1
  %2229 = load i8, i8* %2228, align 1, !noalias !74
  %2230 = zext i8 %2229 to i32
  %2231 = lshr i32 %2230, %2165
  %2232 = sext i32 %2231 to i64
  %2233 = getelementptr inbounds i16*, i16** %2163, i64 %2232
  %2234 = load i16*, i16** %2233, align 8, !noalias !74
  %2235 = load i8, i8* %2226, align 1, !noalias !74
  %2236 = zext i8 %2235 to i64
  %2237 = getelementptr inbounds i16, i16* %2234, i64 %2236
  %2238 = load i16, i16* %2237, align 2, !noalias !74
  %2239 = lshr i16 %2238, 8
  %2240 = trunc i16 %2239 to i8
  store i8 %2240, i8* %2226, align 1, !noalias !74
  %2241 = trunc i16 %2238 to i8
  store i8 %2241, i8* %2228, align 1, !noalias !74
  %2242 = getelementptr inbounds i8, i8* %2226, i64 2
  %2243 = getelementptr inbounds i8, i8* %2226, i64 3
  %2244 = load i8, i8* %2243, align 1, !noalias !74
  %2245 = zext i8 %2244 to i32
  %2246 = lshr i32 %2245, %2165
  %2247 = sext i32 %2246 to i64
  %2248 = getelementptr inbounds i16*, i16** %2163, i64 %2247
  %2249 = load i16*, i16** %2248, align 8, !noalias !74
  %2250 = load i8, i8* %2242, align 1, !noalias !74
  %2251 = zext i8 %2250 to i64
  %2252 = getelementptr inbounds i16, i16* %2249, i64 %2251
  %2253 = load i16, i16* %2252, align 2, !noalias !74
  %2254 = lshr i16 %2253, 8
  %2255 = trunc i16 %2254 to i8
  store i8 %2255, i8* %2242, align 1, !noalias !74
  %2256 = trunc i16 %2253 to i8
  store i8 %2256, i8* %2243, align 1, !noalias !74
  %2257 = getelementptr inbounds i8, i8* %2226, i64 4
  %2258 = getelementptr inbounds i8, i8* %2226, i64 5
  %2259 = load i8, i8* %2258, align 1, !noalias !74
  %2260 = zext i8 %2259 to i32
  %2261 = lshr i32 %2260, %2165
  %2262 = sext i32 %2261 to i64
  %2263 = getelementptr inbounds i16*, i16** %2163, i64 %2262
  %2264 = load i16*, i16** %2263, align 8, !noalias !74
  %2265 = load i8, i8* %2257, align 1, !noalias !74
  %2266 = zext i8 %2265 to i64
  %2267 = getelementptr inbounds i16, i16* %2264, i64 %2266
  %2268 = load i16, i16* %2267, align 2, !noalias !74
  %2269 = lshr i16 %2268, 8
  %2270 = trunc i16 %2269 to i8
  store i8 %2270, i8* %2257, align 1, !noalias !74
  %2271 = trunc i16 %2268 to i8
  store i8 %2271, i8* %2258, align 1, !noalias !74
  %2272 = getelementptr inbounds i8, i8* %2226, i64 6
  %2273 = add nuw i32 %2227, 1
  %2274 = icmp eq i32 %2273, %2167
  br i1 %2274, label %2709, label %2225

2275:                                             ; preds = %2177
  %2276 = icmp eq i8 %2169, 8
  %2277 = icmp ne i32 %2167, 0
  br i1 %2276, label %2279, label %2278

2278:                                             ; preds = %2275
  br i1 %2277, label %2320, label %2709

2279:                                             ; preds = %2275
  br i1 %2277, label %2280, label %2709

2280:                                             ; preds = %2279
  %2281 = and i32 %2167, 1
  %2282 = icmp eq i32 %2167, 1
  br i1 %2282, label %2629, label %2283

2283:                                             ; preds = %2280
  %2284 = sub i32 %2167, %2281
  br label %2285

2285:                                             ; preds = %2285, %2283
  %2286 = phi i8* [ %2159, %2283 ], [ %2317, %2285 ]
  %2287 = phi i32 [ %2284, %2283 ], [ %2318, %2285 ]
  %2288 = load i8, i8* %2286, align 1, !noalias !74
  %2289 = zext i8 %2288 to i64
  %2290 = getelementptr inbounds i8, i8* %2161, i64 %2289
  %2291 = load i8, i8* %2290, align 1, !noalias !74
  store i8 %2291, i8* %2286, align 1, !noalias !74
  %2292 = getelementptr inbounds i8, i8* %2286, i64 1
  %2293 = load i8, i8* %2292, align 1, !noalias !74
  %2294 = zext i8 %2293 to i64
  %2295 = getelementptr inbounds i8, i8* %2161, i64 %2294
  %2296 = load i8, i8* %2295, align 1, !noalias !74
  store i8 %2296, i8* %2292, align 1, !noalias !74
  %2297 = getelementptr inbounds i8, i8* %2286, i64 2
  %2298 = load i8, i8* %2297, align 1, !noalias !74
  %2299 = zext i8 %2298 to i64
  %2300 = getelementptr inbounds i8, i8* %2161, i64 %2299
  %2301 = load i8, i8* %2300, align 1, !noalias !74
  store i8 %2301, i8* %2297, align 1, !noalias !74
  %2302 = getelementptr inbounds i8, i8* %2286, i64 4
  %2303 = load i8, i8* %2302, align 1, !noalias !74
  %2304 = zext i8 %2303 to i64
  %2305 = getelementptr inbounds i8, i8* %2161, i64 %2304
  %2306 = load i8, i8* %2305, align 1, !noalias !74
  store i8 %2306, i8* %2302, align 1, !noalias !74
  %2307 = getelementptr inbounds i8, i8* %2286, i64 5
  %2308 = load i8, i8* %2307, align 1, !noalias !74
  %2309 = zext i8 %2308 to i64
  %2310 = getelementptr inbounds i8, i8* %2161, i64 %2309
  %2311 = load i8, i8* %2310, align 1, !noalias !74
  store i8 %2311, i8* %2307, align 1, !noalias !74
  %2312 = getelementptr inbounds i8, i8* %2286, i64 6
  %2313 = load i8, i8* %2312, align 1, !noalias !74
  %2314 = zext i8 %2313 to i64
  %2315 = getelementptr inbounds i8, i8* %2161, i64 %2314
  %2316 = load i8, i8* %2315, align 1, !noalias !74
  store i8 %2316, i8* %2312, align 1, !noalias !74
  %2317 = getelementptr inbounds i8, i8* %2286, i64 8
  %2318 = add i32 %2287, -2
  %2319 = icmp eq i32 %2318, 0
  br i1 %2319, label %2629, label %2285

2320:                                             ; preds = %2278, %2320
  %2321 = phi i8* [ %2367, %2320 ], [ %2159, %2278 ]
  %2322 = phi i32 [ %2368, %2320 ], [ 0, %2278 ]
  %2323 = getelementptr inbounds i8, i8* %2321, i64 1
  %2324 = load i8, i8* %2323, align 1, !noalias !74
  %2325 = zext i8 %2324 to i32
  %2326 = lshr i32 %2325, %2165
  %2327 = sext i32 %2326 to i64
  %2328 = getelementptr inbounds i16*, i16** %2163, i64 %2327
  %2329 = load i16*, i16** %2328, align 8, !noalias !74
  %2330 = load i8, i8* %2321, align 1, !noalias !74
  %2331 = zext i8 %2330 to i64
  %2332 = getelementptr inbounds i16, i16* %2329, i64 %2331
  %2333 = load i16, i16* %2332, align 2, !noalias !74
  %2334 = lshr i16 %2333, 8
  %2335 = trunc i16 %2334 to i8
  store i8 %2335, i8* %2321, align 1, !noalias !74
  %2336 = trunc i16 %2333 to i8
  store i8 %2336, i8* %2323, align 1, !noalias !74
  %2337 = getelementptr inbounds i8, i8* %2321, i64 2
  %2338 = getelementptr inbounds i8, i8* %2321, i64 3
  %2339 = load i8, i8* %2338, align 1, !noalias !74
  %2340 = zext i8 %2339 to i32
  %2341 = lshr i32 %2340, %2165
  %2342 = sext i32 %2341 to i64
  %2343 = getelementptr inbounds i16*, i16** %2163, i64 %2342
  %2344 = load i16*, i16** %2343, align 8, !noalias !74
  %2345 = load i8, i8* %2337, align 1, !noalias !74
  %2346 = zext i8 %2345 to i64
  %2347 = getelementptr inbounds i16, i16* %2344, i64 %2346
  %2348 = load i16, i16* %2347, align 2, !noalias !74
  %2349 = lshr i16 %2348, 8
  %2350 = trunc i16 %2349 to i8
  store i8 %2350, i8* %2337, align 1, !noalias !74
  %2351 = trunc i16 %2348 to i8
  store i8 %2351, i8* %2338, align 1, !noalias !74
  %2352 = getelementptr inbounds i8, i8* %2321, i64 4
  %2353 = getelementptr inbounds i8, i8* %2321, i64 5
  %2354 = load i8, i8* %2353, align 1, !noalias !74
  %2355 = zext i8 %2354 to i32
  %2356 = lshr i32 %2355, %2165
  %2357 = sext i32 %2356 to i64
  %2358 = getelementptr inbounds i16*, i16** %2163, i64 %2357
  %2359 = load i16*, i16** %2358, align 8, !noalias !74
  %2360 = load i8, i8* %2352, align 1, !noalias !74
  %2361 = zext i8 %2360 to i64
  %2362 = getelementptr inbounds i16, i16* %2359, i64 %2361
  %2363 = load i16, i16* %2362, align 2, !noalias !74
  %2364 = lshr i16 %2363, 8
  %2365 = trunc i16 %2364 to i8
  store i8 %2365, i8* %2352, align 1, !noalias !74
  %2366 = trunc i16 %2363 to i8
  store i8 %2366, i8* %2353, align 1, !noalias !74
  %2367 = getelementptr inbounds i8, i8* %2321, i64 8
  %2368 = add nuw i32 %2322, 1
  %2369 = icmp eq i32 %2368, %2167
  br i1 %2369, label %2709, label %2320

2370:                                             ; preds = %2177
  %2371 = icmp eq i8 %2169, 8
  %2372 = icmp ne i32 %2167, 0
  br i1 %2371, label %2379, label %2373

2373:                                             ; preds = %2370
  br i1 %2372, label %2374, label %2709

2374:                                             ; preds = %2373
  %2375 = and i32 %2167, 1
  %2376 = icmp eq i32 %2167, 1
  br i1 %2376, label %2660, label %2377

2377:                                             ; preds = %2374
  %2378 = sub i32 %2167, %2375
  br label %2411

2379:                                             ; preds = %2370
  br i1 %2372, label %2380, label %2709

2380:                                             ; preds = %2379
  %2381 = add i32 %2167, -1
  %2382 = and i32 %2167, 3
  %2383 = icmp ult i32 %2381, 3
  br i1 %2383, label %2647, label %2384

2384:                                             ; preds = %2380
  %2385 = sub i32 %2167, %2382
  br label %2386

2386:                                             ; preds = %2386, %2384
  %2387 = phi i8* [ %2159, %2384 ], [ %2408, %2386 ]
  %2388 = phi i32 [ %2385, %2384 ], [ %2409, %2386 ]
  %2389 = load i8, i8* %2387, align 1, !noalias !74
  %2390 = zext i8 %2389 to i64
  %2391 = getelementptr inbounds i8, i8* %2161, i64 %2390
  %2392 = load i8, i8* %2391, align 1, !noalias !74
  store i8 %2392, i8* %2387, align 1, !noalias !74
  %2393 = getelementptr inbounds i8, i8* %2387, i64 2
  %2394 = load i8, i8* %2393, align 1, !noalias !74
  %2395 = zext i8 %2394 to i64
  %2396 = getelementptr inbounds i8, i8* %2161, i64 %2395
  %2397 = load i8, i8* %2396, align 1, !noalias !74
  store i8 %2397, i8* %2393, align 1, !noalias !74
  %2398 = getelementptr inbounds i8, i8* %2387, i64 4
  %2399 = load i8, i8* %2398, align 1, !noalias !74
  %2400 = zext i8 %2399 to i64
  %2401 = getelementptr inbounds i8, i8* %2161, i64 %2400
  %2402 = load i8, i8* %2401, align 1, !noalias !74
  store i8 %2402, i8* %2398, align 1, !noalias !74
  %2403 = getelementptr inbounds i8, i8* %2387, i64 6
  %2404 = load i8, i8* %2403, align 1, !noalias !74
  %2405 = zext i8 %2404 to i64
  %2406 = getelementptr inbounds i8, i8* %2161, i64 %2405
  %2407 = load i8, i8* %2406, align 1, !noalias !74
  store i8 %2407, i8* %2403, align 1, !noalias !74
  %2408 = getelementptr inbounds i8, i8* %2387, i64 8
  %2409 = add i32 %2388, -4
  %2410 = icmp eq i32 %2409, 0
  br i1 %2410, label %2647, label %2386

2411:                                             ; preds = %2411, %2377
  %2412 = phi i8* [ %2159, %2377 ], [ %2443, %2411 ]
  %2413 = phi i32 [ %2378, %2377 ], [ %2444, %2411 ]
  %2414 = getelementptr inbounds i8, i8* %2412, i64 1
  %2415 = load i8, i8* %2414, align 1, !noalias !74
  %2416 = zext i8 %2415 to i32
  %2417 = lshr i32 %2416, %2165
  %2418 = sext i32 %2417 to i64
  %2419 = getelementptr inbounds i16*, i16** %2163, i64 %2418
  %2420 = load i16*, i16** %2419, align 8, !noalias !74
  %2421 = load i8, i8* %2412, align 1, !noalias !74
  %2422 = zext i8 %2421 to i64
  %2423 = getelementptr inbounds i16, i16* %2420, i64 %2422
  %2424 = load i16, i16* %2423, align 2, !noalias !74
  %2425 = lshr i16 %2424, 8
  %2426 = trunc i16 %2425 to i8
  store i8 %2426, i8* %2412, align 1, !noalias !74
  %2427 = trunc i16 %2424 to i8
  store i8 %2427, i8* %2414, align 1, !noalias !74
  %2428 = getelementptr inbounds i8, i8* %2412, i64 4
  %2429 = getelementptr inbounds i8, i8* %2412, i64 5
  %2430 = load i8, i8* %2429, align 1, !noalias !74
  %2431 = zext i8 %2430 to i32
  %2432 = lshr i32 %2431, %2165
  %2433 = sext i32 %2432 to i64
  %2434 = getelementptr inbounds i16*, i16** %2163, i64 %2433
  %2435 = load i16*, i16** %2434, align 8, !noalias !74
  %2436 = load i8, i8* %2428, align 1, !noalias !74
  %2437 = zext i8 %2436 to i64
  %2438 = getelementptr inbounds i16, i16* %2435, i64 %2437
  %2439 = load i16, i16* %2438, align 2, !noalias !74
  %2440 = lshr i16 %2439, 8
  %2441 = trunc i16 %2440 to i8
  store i8 %2441, i8* %2428, align 1, !noalias !74
  %2442 = trunc i16 %2439 to i8
  store i8 %2442, i8* %2429, align 1, !noalias !74
  %2443 = getelementptr inbounds i8, i8* %2412, i64 8
  %2444 = add i32 %2413, -2
  %2445 = icmp eq i32 %2444, 0
  br i1 %2445, label %2660, label %2411

2446:                                             ; preds = %2177
  %2447 = icmp eq i8 %2169, 2
  %2448 = icmp ne i32 %2167, 0
  %2449 = and i1 %2448, %2447
  br i1 %2449, label %2450, label %2509

2450:                                             ; preds = %2446, %2450
  %2451 = phi i8* [ %2504, %2450 ], [ %2159, %2446 ]
  %2452 = phi i32 [ %2505, %2450 ], [ 0, %2446 ]
  %2453 = load i8, i8* %2451, align 1, !noalias !74
  %2454 = zext i8 %2453 to i32
  %2455 = and i32 %2454, 192
  %2456 = and i32 %2454, 48
  %2457 = and i32 %2454, 12
  %2458 = and i32 %2454, 3
  %2459 = lshr exact i32 %2455, 2
  %2460 = lshr exact i32 %2455, 4
  %2461 = lshr i32 %2454, 6
  %2462 = or i32 %2461, %2455
  %2463 = or i32 %2462, %2459
  %2464 = or i32 %2463, %2460
  %2465 = zext i32 %2464 to i64
  %2466 = getelementptr inbounds i8, i8* %2161, i64 %2465
  %2467 = load i8, i8* %2466, align 1, !noalias !74
  %2468 = and i8 %2467, -64
  %2469 = shl nuw nsw i32 %2456, 2
  %2470 = or i32 %2469, %2456
  %2471 = lshr exact i32 %2456, 2
  %2472 = or i32 %2470, %2471
  %2473 = lshr exact i32 %2456, 4
  %2474 = or i32 %2472, %2473
  %2475 = zext i32 %2474 to i64
  %2476 = getelementptr inbounds i8, i8* %2161, i64 %2475
  %2477 = load i8, i8* %2476, align 1, !noalias !74
  %2478 = lshr i8 %2477, 2
  %2479 = and i8 %2478, 48
  %2480 = or i8 %2479, %2468
  %2481 = shl nuw nsw i32 %2457, 4
  %2482 = shl nuw nsw i32 %2457, 2
  %2483 = lshr exact i32 %2457, 2
  %2484 = or i32 %2482, %2457
  %2485 = or i32 %2484, %2481
  %2486 = or i32 %2485, %2483
  %2487 = zext i32 %2486 to i64
  %2488 = getelementptr inbounds i8, i8* %2161, i64 %2487
  %2489 = load i8, i8* %2488, align 1, !noalias !74
  %2490 = lshr i8 %2489, 4
  %2491 = and i8 %2490, 12
  %2492 = or i8 %2480, %2491
  %2493 = shl nuw nsw i32 %2458, 6
  %2494 = shl nuw nsw i32 %2458, 4
  %2495 = shl nuw nsw i32 %2458, 2
  %2496 = or i32 %2494, %2458
  %2497 = or i32 %2496, %2493
  %2498 = or i32 %2497, %2495
  %2499 = zext i32 %2498 to i64
  %2500 = getelementptr inbounds i8, i8* %2161, i64 %2499
  %2501 = load i8, i8* %2500, align 1, !noalias !74
  %2502 = lshr i8 %2501, 6
  %2503 = or i8 %2492, %2502
  store i8 %2503, i8* %2451, align 1, !noalias !74
  %2504 = getelementptr inbounds i8, i8* %2451, i64 1
  %2505 = add i32 %2452, 4
  %2506 = icmp ult i32 %2505, %2167
  br i1 %2506, label %2450, label %2507

2507:                                             ; preds = %2450
  %2508 = load i8, i8* %2168, align 1, !noalias !74
  br label %2509

2509:                                             ; preds = %2507, %2446
  %2510 = phi i8 [ %2508, %2507 ], [ %2169, %2446 ]
  switch i8 %2510, label %2709 [
    i8 4, label %2526
    i8 8, label %2518
    i8 16, label %2511
  ]

2511:                                             ; preds = %2509
  %2512 = icmp eq i32 %2167, 0
  br i1 %2512, label %2709, label %2513

2513:                                             ; preds = %2511
  %2514 = and i32 %2167, 1
  %2515 = icmp eq i32 %2167, 1
  br i1 %2515, label %2691, label %2516

2516:                                             ; preds = %2513
  %2517 = sub i32 %2167, %2514
  br label %2576

2518:                                             ; preds = %2509
  %2519 = icmp eq i32 %2167, 0
  br i1 %2519, label %2709, label %2520

2520:                                             ; preds = %2518
  %2521 = add i32 %2167, -1
  %2522 = and i32 %2167, 3
  %2523 = icmp ult i32 %2521, 3
  br i1 %2523, label %2678, label %2524

2524:                                             ; preds = %2520
  %2525 = sub i32 %2167, %2522
  br label %2551

2526:                                             ; preds = %2509
  %2527 = icmp eq i32 %2167, 0
  br i1 %2527, label %2709, label %2528

2528:                                             ; preds = %2526, %2528
  %2529 = phi i8* [ %2548, %2528 ], [ %2159, %2526 ]
  %2530 = phi i32 [ %2549, %2528 ], [ 0, %2526 ]
  %2531 = load i8, i8* %2529, align 1, !noalias !74
  %2532 = zext i8 %2531 to i32
  %2533 = and i32 %2532, 240
  %2534 = and i32 %2532, 15
  %2535 = lshr i32 %2532, 4
  %2536 = or i32 %2533, %2535
  %2537 = zext i32 %2536 to i64
  %2538 = getelementptr inbounds i8, i8* %2161, i64 %2537
  %2539 = load i8, i8* %2538, align 1, !noalias !74
  %2540 = and i8 %2539, -16
  %2541 = shl nuw nsw i32 %2534, 4
  %2542 = or i32 %2541, %2534
  %2543 = zext i32 %2542 to i64
  %2544 = getelementptr inbounds i8, i8* %2161, i64 %2543
  %2545 = load i8, i8* %2544, align 1, !noalias !74
  %2546 = lshr i8 %2545, 4
  %2547 = or i8 %2546, %2540
  store i8 %2547, i8* %2529, align 1, !noalias !74
  %2548 = getelementptr inbounds i8, i8* %2529, i64 1
  %2549 = add i32 %2530, 2
  %2550 = icmp ult i32 %2549, %2167
  br i1 %2550, label %2528, label %2709

2551:                                             ; preds = %2551, %2524
  %2552 = phi i8* [ %2159, %2524 ], [ %2573, %2551 ]
  %2553 = phi i32 [ %2525, %2524 ], [ %2574, %2551 ]
  %2554 = load i8, i8* %2552, align 1, !noalias !74
  %2555 = zext i8 %2554 to i64
  %2556 = getelementptr inbounds i8, i8* %2161, i64 %2555
  %2557 = load i8, i8* %2556, align 1, !noalias !74
  store i8 %2557, i8* %2552, align 1, !noalias !74
  %2558 = getelementptr inbounds i8, i8* %2552, i64 1
  %2559 = load i8, i8* %2558, align 1, !noalias !74
  %2560 = zext i8 %2559 to i64
  %2561 = getelementptr inbounds i8, i8* %2161, i64 %2560
  %2562 = load i8, i8* %2561, align 1, !noalias !74
  store i8 %2562, i8* %2558, align 1, !noalias !74
  %2563 = getelementptr inbounds i8, i8* %2552, i64 2
  %2564 = load i8, i8* %2563, align 1, !noalias !74
  %2565 = zext i8 %2564 to i64
  %2566 = getelementptr inbounds i8, i8* %2161, i64 %2565
  %2567 = load i8, i8* %2566, align 1, !noalias !74
  store i8 %2567, i8* %2563, align 1, !noalias !74
  %2568 = getelementptr inbounds i8, i8* %2552, i64 3
  %2569 = load i8, i8* %2568, align 1, !noalias !74
  %2570 = zext i8 %2569 to i64
  %2571 = getelementptr inbounds i8, i8* %2161, i64 %2570
  %2572 = load i8, i8* %2571, align 1, !noalias !74
  store i8 %2572, i8* %2568, align 1, !noalias !74
  %2573 = getelementptr inbounds i8, i8* %2552, i64 4
  %2574 = add i32 %2553, -4
  %2575 = icmp eq i32 %2574, 0
  br i1 %2575, label %2678, label %2551

2576:                                             ; preds = %2576, %2516
  %2577 = phi i8* [ %2159, %2516 ], [ %2608, %2576 ]
  %2578 = phi i32 [ %2517, %2516 ], [ %2609, %2576 ]
  %2579 = getelementptr inbounds i8, i8* %2577, i64 1
  %2580 = load i8, i8* %2579, align 1, !noalias !74
  %2581 = zext i8 %2580 to i32
  %2582 = lshr i32 %2581, %2165
  %2583 = sext i32 %2582 to i64
  %2584 = getelementptr inbounds i16*, i16** %2163, i64 %2583
  %2585 = load i16*, i16** %2584, align 8, !noalias !74
  %2586 = load i8, i8* %2577, align 1, !noalias !74
  %2587 = zext i8 %2586 to i64
  %2588 = getelementptr inbounds i16, i16* %2585, i64 %2587
  %2589 = load i16, i16* %2588, align 2, !noalias !74
  %2590 = lshr i16 %2589, 8
  %2591 = trunc i16 %2590 to i8
  store i8 %2591, i8* %2577, align 1, !noalias !74
  %2592 = trunc i16 %2589 to i8
  store i8 %2592, i8* %2579, align 1, !noalias !74
  %2593 = getelementptr inbounds i8, i8* %2577, i64 2
  %2594 = getelementptr inbounds i8, i8* %2577, i64 3
  %2595 = load i8, i8* %2594, align 1, !noalias !74
  %2596 = zext i8 %2595 to i32
  %2597 = lshr i32 %2596, %2165
  %2598 = sext i32 %2597 to i64
  %2599 = getelementptr inbounds i16*, i16** %2163, i64 %2598
  %2600 = load i16*, i16** %2599, align 8, !noalias !74
  %2601 = load i8, i8* %2593, align 1, !noalias !74
  %2602 = zext i8 %2601 to i64
  %2603 = getelementptr inbounds i16, i16* %2600, i64 %2602
  %2604 = load i16, i16* %2603, align 2, !noalias !74
  %2605 = lshr i16 %2604, 8
  %2606 = trunc i16 %2605 to i8
  store i8 %2606, i8* %2593, align 1, !noalias !74
  %2607 = trunc i16 %2604 to i8
  store i8 %2607, i8* %2594, align 1, !noalias !74
  %2608 = getelementptr inbounds i8, i8* %2577, i64 4
  %2609 = add i32 %2578, -2
  %2610 = icmp eq i32 %2609, 0
  br i1 %2610, label %2691, label %2576

2611:                                             ; preds = %2190, %2185
  %2612 = phi i8* [ %2159, %2185 ], [ %2222, %2190 ]
  %2613 = icmp eq i32 %2186, 0
  br i1 %2613, label %2709, label %2614

2614:                                             ; preds = %2611
  %2615 = load i8, i8* %2612, align 1, !noalias !74
  %2616 = zext i8 %2615 to i64
  %2617 = getelementptr inbounds i8, i8* %2161, i64 %2616
  %2618 = load i8, i8* %2617, align 1, !noalias !74
  store i8 %2618, i8* %2612, align 1, !noalias !74
  %2619 = getelementptr inbounds i8, i8* %2612, i64 1
  %2620 = load i8, i8* %2619, align 1, !noalias !74
  %2621 = zext i8 %2620 to i64
  %2622 = getelementptr inbounds i8, i8* %2161, i64 %2621
  %2623 = load i8, i8* %2622, align 1, !noalias !74
  store i8 %2623, i8* %2619, align 1, !noalias !74
  %2624 = getelementptr inbounds i8, i8* %2612, i64 2
  %2625 = load i8, i8* %2624, align 1, !noalias !74
  %2626 = zext i8 %2625 to i64
  %2627 = getelementptr inbounds i8, i8* %2161, i64 %2626
  %2628 = load i8, i8* %2627, align 1, !noalias !74
  store i8 %2628, i8* %2624, align 1, !noalias !74
  br label %2709

2629:                                             ; preds = %2285, %2280
  %2630 = phi i8* [ %2159, %2280 ], [ %2317, %2285 ]
  %2631 = icmp eq i32 %2281, 0
  br i1 %2631, label %2709, label %2632

2632:                                             ; preds = %2629
  %2633 = load i8, i8* %2630, align 1, !noalias !74
  %2634 = zext i8 %2633 to i64
  %2635 = getelementptr inbounds i8, i8* %2161, i64 %2634
  %2636 = load i8, i8* %2635, align 1, !noalias !74
  store i8 %2636, i8* %2630, align 1, !noalias !74
  %2637 = getelementptr inbounds i8, i8* %2630, i64 1
  %2638 = load i8, i8* %2637, align 1, !noalias !74
  %2639 = zext i8 %2638 to i64
  %2640 = getelementptr inbounds i8, i8* %2161, i64 %2639
  %2641 = load i8, i8* %2640, align 1, !noalias !74
  store i8 %2641, i8* %2637, align 1, !noalias !74
  %2642 = getelementptr inbounds i8, i8* %2630, i64 2
  %2643 = load i8, i8* %2642, align 1, !noalias !74
  %2644 = zext i8 %2643 to i64
  %2645 = getelementptr inbounds i8, i8* %2161, i64 %2644
  %2646 = load i8, i8* %2645, align 1, !noalias !74
  store i8 %2646, i8* %2642, align 1, !noalias !74
  br label %2709

2647:                                             ; preds = %2386, %2380
  %2648 = phi i8* [ %2159, %2380 ], [ %2408, %2386 ]
  %2649 = icmp eq i32 %2382, 0
  br i1 %2649, label %2709, label %2650

2650:                                             ; preds = %2647, %2650
  %2651 = phi i8* [ %2657, %2650 ], [ %2648, %2647 ]
  %2652 = phi i32 [ %2658, %2650 ], [ %2382, %2647 ]
  %2653 = load i8, i8* %2651, align 1, !noalias !74
  %2654 = zext i8 %2653 to i64
  %2655 = getelementptr inbounds i8, i8* %2161, i64 %2654
  %2656 = load i8, i8* %2655, align 1, !noalias !74
  store i8 %2656, i8* %2651, align 1, !noalias !74
  %2657 = getelementptr inbounds i8, i8* %2651, i64 2
  %2658 = add i32 %2652, -1
  %2659 = icmp eq i32 %2658, 0
  br i1 %2659, label %2709, label %2650, !llvm.loop !77

2660:                                             ; preds = %2411, %2374
  %2661 = phi i8* [ %2159, %2374 ], [ %2443, %2411 ]
  %2662 = icmp eq i32 %2375, 0
  br i1 %2662, label %2709, label %2663

2663:                                             ; preds = %2660
  %2664 = getelementptr inbounds i8, i8* %2661, i64 1
  %2665 = load i8, i8* %2664, align 1, !noalias !74
  %2666 = zext i8 %2665 to i32
  %2667 = lshr i32 %2666, %2165
  %2668 = sext i32 %2667 to i64
  %2669 = getelementptr inbounds i16*, i16** %2163, i64 %2668
  %2670 = load i16*, i16** %2669, align 8, !noalias !74
  %2671 = load i8, i8* %2661, align 1, !noalias !74
  %2672 = zext i8 %2671 to i64
  %2673 = getelementptr inbounds i16, i16* %2670, i64 %2672
  %2674 = load i16, i16* %2673, align 2, !noalias !74
  %2675 = lshr i16 %2674, 8
  %2676 = trunc i16 %2675 to i8
  store i8 %2676, i8* %2661, align 1, !noalias !74
  %2677 = trunc i16 %2674 to i8
  store i8 %2677, i8* %2664, align 1, !noalias !74
  br label %2709

2678:                                             ; preds = %2551, %2520
  %2679 = phi i8* [ %2159, %2520 ], [ %2573, %2551 ]
  %2680 = icmp eq i32 %2522, 0
  br i1 %2680, label %2709, label %2681

2681:                                             ; preds = %2678, %2681
  %2682 = phi i8* [ %2688, %2681 ], [ %2679, %2678 ]
  %2683 = phi i32 [ %2689, %2681 ], [ %2522, %2678 ]
  %2684 = load i8, i8* %2682, align 1, !noalias !74
  %2685 = zext i8 %2684 to i64
  %2686 = getelementptr inbounds i8, i8* %2161, i64 %2685
  %2687 = load i8, i8* %2686, align 1, !noalias !74
  store i8 %2687, i8* %2682, align 1, !noalias !74
  %2688 = getelementptr inbounds i8, i8* %2682, i64 1
  %2689 = add i32 %2683, -1
  %2690 = icmp eq i32 %2689, 0
  br i1 %2690, label %2709, label %2681, !llvm.loop !79

2691:                                             ; preds = %2576, %2513
  %2692 = phi i8* [ %2159, %2513 ], [ %2608, %2576 ]
  %2693 = icmp eq i32 %2514, 0
  br i1 %2693, label %2709, label %2694

2694:                                             ; preds = %2691
  %2695 = getelementptr inbounds i8, i8* %2692, i64 1
  %2696 = load i8, i8* %2695, align 1, !noalias !74
  %2697 = zext i8 %2696 to i32
  %2698 = lshr i32 %2697, %2165
  %2699 = sext i32 %2698 to i64
  %2700 = getelementptr inbounds i16*, i16** %2163, i64 %2699
  %2701 = load i16*, i16** %2700, align 8, !noalias !74
  %2702 = load i8, i8* %2692, align 1, !noalias !74
  %2703 = zext i8 %2702 to i64
  %2704 = getelementptr inbounds i16, i16* %2701, i64 %2703
  %2705 = load i16, i16* %2704, align 2, !noalias !74
  %2706 = lshr i16 %2705, 8
  %2707 = trunc i16 %2706 to i8
  store i8 %2707, i8* %2692, align 1, !noalias !74
  %2708 = trunc i16 %2705 to i8
  store i8 %2708, i8* %2695, align 1, !noalias !74
  br label %2709

2709:                                             ; preds = %2694, %2691, %2678, %2681, %2528, %2663, %2660, %2647, %2650, %2320, %2632, %2629, %2225, %2614, %2611, %2526, %2518, %2511, %2509, %2379, %2373, %2279, %2278, %2184, %2183, %2177, %2173, %2135, %2149, %2145, %2154
  %2710 = load i32, i32* %15, align 4
  %2711 = and i32 %2710, 262272
  %2712 = icmp eq i32 %2711, 262272
  br i1 %2712, label %2713, label %2720

2713:                                             ; preds = %2709
  %2714 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %2715 = load i8, i8* %2714, align 8
  switch i8 %2715, label %2720 [
    i8 6, label %2716
    i8 4, label %2716
  ]

2716:                                             ; preds = %2713, %2713
  %2717 = load i8*, i8** %4, align 8
  %2718 = getelementptr inbounds i8, i8* %2717, i64 1
  tail call void @cr_png_do_strip_channel(%struct.png_row_info_struct* %1, i8* %2718, i32 0) #6
  %2719 = load i32, i32* %15, align 4
  br label %2720

2720:                                             ; preds = %2713, %2709, %2716
  %2721 = phi i32 [ %2710, %2713 ], [ %2710, %2709 ], [ %2719, %2716 ]
  %2722 = and i32 %2721, 8388608
  %2723 = icmp eq i32 %2722, 0
  br i1 %2723, label %2873, label %2724

2724:                                             ; preds = %2720
  %2725 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %2726 = load i8, i8* %2725, align 8
  %2727 = and i8 %2726, 4
  %2728 = icmp eq i8 %2727, 0
  br i1 %2728, label %2873, label %2729

2729:                                             ; preds = %2724
  %2730 = load i8*, i8** %4, align 8
  %2731 = getelementptr inbounds i8, i8* %2730, i64 1
  %2732 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %2733 = load i32, i32* %2732, align 8, !noalias !80
  %2734 = zext i8 %2726 to i32
  %2735 = and i32 %2734, 4
  %2736 = icmp eq i32 %2735, 0
  br i1 %2736, label %2872, label %2737

2737:                                             ; preds = %2729
  %2738 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %2739 = load i8, i8* %2738, align 1, !noalias !80
  switch i8 %2739, label %2872 [
    i8 8, label %2740
    i8 16, label %2798
  ]

2740:                                             ; preds = %2737
  %2741 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 82
  %2742 = load i8*, i8** %2741, align 8, !alias.scope !80
  %2743 = icmp eq i8* %2742, null
  br i1 %2743, label %2872, label %2744

2744:                                             ; preds = %2740
  %2745 = and i32 %2734, 2
  %2746 = icmp eq i32 %2745, 0
  %2747 = select i1 %2746, i32 2, i32 4
  %2748 = icmp eq i32 %2733, 0
  br i1 %2748, label %2873, label %2749

2749:                                             ; preds = %2744
  %2750 = add nsw i32 %2747, -1
  %2751 = sext i32 %2750 to i64
  %2752 = getelementptr inbounds i8, i8* %2731, i64 %2751
  %2753 = zext i32 %2747 to i64
  %2754 = add i32 %2733, -1
  %2755 = and i32 %2733, 3
  %2756 = icmp eq i32 %2755, 0
  br i1 %2756, label %2769, label %2757

2757:                                             ; preds = %2749, %2757
  %2758 = phi i8* [ %2766, %2757 ], [ %2752, %2749 ]
  %2759 = phi i32 [ %2765, %2757 ], [ %2733, %2749 ]
  %2760 = phi i32 [ %2767, %2757 ], [ %2755, %2749 ]
  %2761 = load i8, i8* %2758, align 1, !noalias !80
  %2762 = zext i8 %2761 to i64
  %2763 = getelementptr inbounds i8, i8* %2742, i64 %2762
  %2764 = load i8, i8* %2763, align 1
  store i8 %2764, i8* %2758, align 1, !noalias !80
  %2765 = add i32 %2759, -1
  %2766 = getelementptr inbounds i8, i8* %2758, i64 %2753
  %2767 = add i32 %2760, -1
  %2768 = icmp eq i32 %2767, 0
  br i1 %2768, label %2769, label %2757, !llvm.loop !83

2769:                                             ; preds = %2757, %2749
  %2770 = phi i8* [ %2752, %2749 ], [ %2766, %2757 ]
  %2771 = phi i32 [ %2733, %2749 ], [ %2765, %2757 ]
  %2772 = icmp ult i32 %2754, 3
  br i1 %2772, label %2873, label %2773

2773:                                             ; preds = %2769, %2773
  %2774 = phi i8* [ %2796, %2773 ], [ %2770, %2769 ]
  %2775 = phi i32 [ %2795, %2773 ], [ %2771, %2769 ]
  %2776 = load i8, i8* %2774, align 1, !noalias !80
  %2777 = zext i8 %2776 to i64
  %2778 = getelementptr inbounds i8, i8* %2742, i64 %2777
  %2779 = load i8, i8* %2778, align 1
  store i8 %2779, i8* %2774, align 1, !noalias !80
  %2780 = getelementptr inbounds i8, i8* %2774, i64 %2753
  %2781 = load i8, i8* %2780, align 1, !noalias !80
  %2782 = zext i8 %2781 to i64
  %2783 = getelementptr inbounds i8, i8* %2742, i64 %2782
  %2784 = load i8, i8* %2783, align 1
  store i8 %2784, i8* %2780, align 1, !noalias !80
  %2785 = getelementptr inbounds i8, i8* %2780, i64 %2753
  %2786 = load i8, i8* %2785, align 1, !noalias !80
  %2787 = zext i8 %2786 to i64
  %2788 = getelementptr inbounds i8, i8* %2742, i64 %2787
  %2789 = load i8, i8* %2788, align 1
  store i8 %2789, i8* %2785, align 1, !noalias !80
  %2790 = getelementptr inbounds i8, i8* %2785, i64 %2753
  %2791 = load i8, i8* %2790, align 1, !noalias !80
  %2792 = zext i8 %2791 to i64
  %2793 = getelementptr inbounds i8, i8* %2742, i64 %2792
  %2794 = load i8, i8* %2793, align 1
  store i8 %2794, i8* %2790, align 1, !noalias !80
  %2795 = add i32 %2775, -4
  %2796 = getelementptr inbounds i8, i8* %2790, i64 %2753
  %2797 = icmp eq i32 %2795, 0
  br i1 %2797, label %2873, label %2773

2798:                                             ; preds = %2737
  %2799 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 84
  %2800 = load i16**, i16*** %2799, align 8, !alias.scope !80
  %2801 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 78
  %2802 = load i32, i32* %2801, align 8, !alias.scope !80
  %2803 = icmp eq i16** %2800, null
  br i1 %2803, label %2872, label %2804

2804:                                             ; preds = %2798
  %2805 = and i32 %2734, 2
  %2806 = icmp eq i32 %2805, 0
  %2807 = select i1 %2806, i32 4, i32 8
  %2808 = icmp eq i32 %2733, 0
  br i1 %2808, label %2873, label %2809

2809:                                             ; preds = %2804
  %2810 = add nsw i32 %2807, -2
  %2811 = sext i32 %2810 to i64
  %2812 = getelementptr inbounds i8, i8* %2731, i64 %2811
  %2813 = zext i32 %2807 to i64
  %2814 = and i32 %2733, 1
  %2815 = icmp eq i32 %2814, 0
  br i1 %2815, label %2833, label %2816

2816:                                             ; preds = %2809
  %2817 = getelementptr inbounds i8, i8* %2812, i64 1
  %2818 = load i8, i8* %2817, align 1, !noalias !80
  %2819 = zext i8 %2818 to i32
  %2820 = lshr i32 %2819, %2802
  %2821 = sext i32 %2820 to i64
  %2822 = getelementptr inbounds i16*, i16** %2800, i64 %2821
  %2823 = load i16*, i16** %2822, align 8
  %2824 = load i8, i8* %2812, align 1, !noalias !80
  %2825 = zext i8 %2824 to i64
  %2826 = getelementptr inbounds i16, i16* %2823, i64 %2825
  %2827 = load i16, i16* %2826, align 2
  %2828 = lshr i16 %2827, 8
  %2829 = trunc i16 %2828 to i8
  store i8 %2829, i8* %2812, align 1, !noalias !80
  %2830 = trunc i16 %2827 to i8
  store i8 %2830, i8* %2817, align 1, !noalias !80
  %2831 = add i32 %2733, -1
  %2832 = getelementptr inbounds i8, i8* %2812, i64 %2813
  br label %2833

2833:                                             ; preds = %2809, %2816
  %2834 = phi i8* [ %2812, %2809 ], [ %2832, %2816 ]
  %2835 = phi i32 [ %2733, %2809 ], [ %2831, %2816 ]
  %2836 = icmp eq i32 %2733, 1
  br i1 %2836, label %2873, label %2837

2837:                                             ; preds = %2833, %2837
  %2838 = phi i8* [ %2870, %2837 ], [ %2834, %2833 ]
  %2839 = phi i32 [ %2869, %2837 ], [ %2835, %2833 ]
  %2840 = getelementptr inbounds i8, i8* %2838, i64 1
  %2841 = load i8, i8* %2840, align 1, !noalias !80
  %2842 = zext i8 %2841 to i32
  %2843 = lshr i32 %2842, %2802
  %2844 = sext i32 %2843 to i64
  %2845 = getelementptr inbounds i16*, i16** %2800, i64 %2844
  %2846 = load i16*, i16** %2845, align 8
  %2847 = load i8, i8* %2838, align 1, !noalias !80
  %2848 = zext i8 %2847 to i64
  %2849 = getelementptr inbounds i16, i16* %2846, i64 %2848
  %2850 = load i16, i16* %2849, align 2
  %2851 = lshr i16 %2850, 8
  %2852 = trunc i16 %2851 to i8
  store i8 %2852, i8* %2838, align 1, !noalias !80
  %2853 = trunc i16 %2850 to i8
  store i8 %2853, i8* %2840, align 1, !noalias !80
  %2854 = getelementptr inbounds i8, i8* %2838, i64 %2813
  %2855 = getelementptr inbounds i8, i8* %2854, i64 1
  %2856 = load i8, i8* %2855, align 1, !noalias !80
  %2857 = zext i8 %2856 to i32
  %2858 = lshr i32 %2857, %2802
  %2859 = sext i32 %2858 to i64
  %2860 = getelementptr inbounds i16*, i16** %2800, i64 %2859
  %2861 = load i16*, i16** %2860, align 8
  %2862 = load i8, i8* %2854, align 1, !noalias !80
  %2863 = zext i8 %2862 to i64
  %2864 = getelementptr inbounds i16, i16* %2861, i64 %2863
  %2865 = load i16, i16* %2864, align 2
  %2866 = lshr i16 %2865, 8
  %2867 = trunc i16 %2866 to i8
  store i8 %2867, i8* %2854, align 1, !noalias !80
  %2868 = trunc i16 %2865 to i8
  store i8 %2868, i8* %2855, align 1, !noalias !80
  %2869 = add i32 %2839, -2
  %2870 = getelementptr inbounds i8, i8* %2854, i64 %2813
  %2871 = icmp eq i32 %2869, 0
  br i1 %2871, label %2873, label %2837

2872:                                             ; preds = %2798, %2740, %2737, %2729
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0)) #6
  br label %2873

2873:                                             ; preds = %2833, %2837, %2769, %2773, %2872, %2804, %2744, %2724, %2720
  %2874 = load i32, i32* %15, align 4
  %2875 = and i32 %2874, 67108864
  %2876 = icmp eq i32 %2875, 0
  br i1 %2876, label %2918, label %2877

2877:                                             ; preds = %2873
  %2878 = load i8*, i8** %4, align 8
  %2879 = getelementptr inbounds i8, i8* %2878, i64 1
  %2880 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %2881 = load i8, i8* %2880, align 1
  %2882 = icmp eq i8 %2881, 16
  br i1 %2882, label %2883, label %2918

2883:                                             ; preds = %2877
  %2884 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %2885 = load i64, i64* %2884, align 8
  %2886 = getelementptr inbounds i8, i8* %2879, i64 %2885
  %2887 = icmp sgt i64 %2885, 0
  br i1 %2887, label %2888, label %2907

2888:                                             ; preds = %2883, %2888
  %2889 = phi i8* [ %2894, %2888 ], [ %2879, %2883 ]
  %2890 = phi i8* [ %2903, %2888 ], [ %2879, %2883 ]
  %2891 = getelementptr inbounds i8, i8* %2889, i64 1
  %2892 = load i8, i8* %2889, align 1
  %2893 = zext i8 %2892 to i32
  %2894 = getelementptr inbounds i8, i8* %2889, i64 2
  %2895 = load i8, i8* %2891, align 1
  %2896 = zext i8 %2895 to i32
  %2897 = sub nsw i32 %2896, %2893
  %2898 = mul nsw i32 %2897, 65535
  %2899 = add nsw i32 %2898, 8388480
  %2900 = lshr i32 %2899, 24
  %2901 = trunc i32 %2900 to i8
  %2902 = add i8 %2892, %2901
  %2903 = getelementptr inbounds i8, i8* %2890, i64 1
  store i8 %2902, i8* %2890, align 1
  %2904 = icmp ult i8* %2894, %2886
  br i1 %2904, label %2888, label %2905

2905:                                             ; preds = %2888
  %2906 = load i32, i32* %15, align 4
  br label %2907

2907:                                             ; preds = %2905, %2883
  %2908 = phi i32 [ %2906, %2905 ], [ %2874, %2883 ]
  store i8 8, i8* %2880, align 1
  %2909 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  %2910 = load i8, i8* %2909, align 2
  %2911 = shl i8 %2910, 3
  %2912 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 %2911, i8* %2912, align 1
  %2913 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %2914 = load i32, i32* %2913, align 8
  %2915 = zext i8 %2910 to i32
  %2916 = mul i32 %2914, %2915
  %2917 = zext i32 %2916 to i64
  store i64 %2917, i64* %2884, align 8
  br label %2918

2918:                                             ; preds = %2907, %2877, %2873
  %2919 = phi i32 [ %2908, %2907 ], [ %2874, %2877 ], [ %2874, %2873 ]
  %2920 = and i32 %2919, 1024
  %2921 = icmp eq i32 %2920, 0
  br i1 %2921, label %2953, label %2922

2922:                                             ; preds = %2918
  %2923 = load i8*, i8** %4, align 8
  %2924 = getelementptr inbounds i8, i8* %2923, i64 1
  %2925 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %2926 = load i8, i8* %2925, align 1
  %2927 = icmp eq i8 %2926, 16
  br i1 %2927, label %2928, label %2953

2928:                                             ; preds = %2922
  %2929 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %2930 = load i64, i64* %2929, align 8
  %2931 = getelementptr inbounds i8, i8* %2924, i64 %2930
  %2932 = icmp sgt i64 %2930, 0
  br i1 %2932, label %2933, label %2942

2933:                                             ; preds = %2928, %2933
  %2934 = phi i8* [ %2937, %2933 ], [ %2924, %2928 ]
  %2935 = phi i8* [ %2938, %2933 ], [ %2924, %2928 ]
  %2936 = load i8, i8* %2935, align 1
  %2937 = getelementptr inbounds i8, i8* %2934, i64 1
  store i8 %2936, i8* %2934, align 1
  %2938 = getelementptr inbounds i8, i8* %2935, i64 2
  %2939 = icmp ult i8* %2938, %2931
  br i1 %2939, label %2933, label %2940

2940:                                             ; preds = %2933
  %2941 = load i32, i32* %15, align 4
  br label %2942

2942:                                             ; preds = %2940, %2928
  %2943 = phi i32 [ %2941, %2940 ], [ %2919, %2928 ]
  store i8 8, i8* %2925, align 1
  %2944 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  %2945 = load i8, i8* %2944, align 2
  %2946 = shl i8 %2945, 3
  %2947 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 %2946, i8* %2947, align 1
  %2948 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %2949 = load i32, i32* %2948, align 8
  %2950 = zext i8 %2945 to i32
  %2951 = mul i32 %2949, %2950
  %2952 = zext i32 %2951 to i64
  store i64 %2952, i64* %2929, align 8
  br label %2953

2953:                                             ; preds = %2942, %2922, %2918
  %2954 = phi i32 [ %2943, %2942 ], [ %2919, %2922 ], [ %2919, %2918 ]
  %2955 = and i32 %2954, 512
  %2956 = icmp eq i32 %2955, 0
  br i1 %2956, label %2993, label %2957

2957:                                             ; preds = %2953
  %2958 = load i8*, i8** %4, align 8
  %2959 = getelementptr inbounds i8, i8* %2958, i64 1
  %2960 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %2961 = load i8, i8* %2960, align 1
  %2962 = icmp eq i8 %2961, 8
  br i1 %2962, label %2963, label %2993

2963:                                             ; preds = %2957
  %2964 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %2965 = load i8, i8* %2964, align 8
  %2966 = icmp eq i8 %2965, 3
  br i1 %2966, label %2993, label %2967

2967:                                             ; preds = %2963
  %2968 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %2969 = load i64, i64* %2968, align 8
  %2970 = getelementptr inbounds i8, i8* %2959, i64 %2969
  %2971 = icmp sgt i64 %2969, 0
  br i1 %2971, label %2972, label %2985

2972:                                             ; preds = %2967
  %2973 = getelementptr inbounds i8, i8* %2970, i64 %2969
  br label %2974

2974:                                             ; preds = %2974, %2972
  %2975 = phi i8* [ %2980, %2974 ], [ %2973, %2972 ]
  %2976 = phi i8* [ %2977, %2974 ], [ %2970, %2972 ]
  %2977 = getelementptr inbounds i8, i8* %2976, i64 -1
  %2978 = load i8, i8* %2977, align 1
  %2979 = getelementptr inbounds i8, i8* %2975, i64 -1
  store i8 %2978, i8* %2979, align 1
  %2980 = getelementptr inbounds i8, i8* %2975, i64 -2
  store i8 %2978, i8* %2980, align 1
  %2981 = icmp ugt i8* %2980, %2977
  br i1 %2981, label %2974, label %2982

2982:                                             ; preds = %2974
  %2983 = load i64, i64* %2968, align 8
  %2984 = load i32, i32* %15, align 4
  br label %2985

2985:                                             ; preds = %2982, %2967
  %2986 = phi i32 [ %2984, %2982 ], [ %2954, %2967 ]
  %2987 = phi i64 [ %2983, %2982 ], [ %2969, %2967 ]
  %2988 = shl i64 %2987, 1
  store i64 %2988, i64* %2968, align 8
  store i8 16, i8* %2960, align 1
  %2989 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  %2990 = load i8, i8* %2989, align 2
  %2991 = shl i8 %2990, 4
  %2992 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 %2991, i8* %2992, align 1
  br label %2993

2993:                                             ; preds = %2985, %2963, %2957, %2953
  %2994 = phi i32 [ %2986, %2985 ], [ %2954, %2963 ], [ %2954, %2957 ], [ %2954, %2953 ]
  %2995 = and i32 %2994, 16384
  %2996 = icmp eq i32 %2995, 0
  br i1 %2996, label %3006, label %2997

2997:                                             ; preds = %2993
  %2998 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %2999 = load i32, i32* %2998, align 4
  %3000 = and i32 %2999, 2048
  %3001 = icmp eq i32 %3000, 0
  br i1 %3001, label %3006, label %3002

3002:                                             ; preds = %2997
  %3003 = load i8*, i8** %4, align 8
  %3004 = getelementptr inbounds i8, i8* %3003, i64 1
  tail call fastcc void @cr_png_do_gray_to_rgb(%struct.png_row_info_struct* %1, i8* %3004)
  %3005 = load i32, i32* %15, align 4
  br label %3006

3006:                                             ; preds = %2997, %2993, %3002
  %3007 = phi i32 [ %2994, %2997 ], [ %2994, %2993 ], [ %3005, %3002 ]
  %3008 = and i32 %3007, 8
  %3009 = icmp eq i32 %3008, 0
  br i1 %3009, label %3286, label %3010

3010:                                             ; preds = %3006
  %3011 = load i8*, i8** %4, align 8
  %3012 = ptrtoint i8* %3011 to i64
  %3013 = getelementptr inbounds i8, i8* %3011, i64 1
  %3014 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %3015 = load i8, i8* %3014, align 8
  %3016 = zext i8 %3015 to i32
  %3017 = icmp eq i8 %3015, 3
  br i1 %3017, label %3286, label %3018

3018:                                             ; preds = %3010
  %3019 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3019) #6
  %3020 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %3021 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3019, i8 -86, i64 16, i1 false) #6
  %3022 = load i8, i8* %3021, align 1
  %3023 = zext i8 %3022 to i32
  %3024 = and i32 %3016, 2
  %3025 = icmp eq i32 %3024, 0
  br i1 %3025, label %3041, label %3026

3026:                                             ; preds = %3018
  %3027 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %3028 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %3029 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 0
  %3030 = load i8, i8* %3029, align 1
  %3031 = zext i8 %3030 to i32
  %3032 = sub nsw i32 %3023, %3031
  store i32 %3032, i32* %3020, align 16
  %3033 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 1
  %3034 = load i8, i8* %3033, align 1
  %3035 = zext i8 %3034 to i32
  %3036 = sub nsw i32 %3023, %3035
  store i32 %3036, i32* %3028, align 4
  %3037 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 2
  %3038 = load i8, i8* %3037, align 1
  %3039 = zext i8 %3038 to i32
  %3040 = sub nsw i32 %3023, %3039
  store i32 %3040, i32* %3027, align 8
  br label %3046

3041:                                             ; preds = %3018
  %3042 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 3
  %3043 = load i8, i8* %3042, align 1
  %3044 = zext i8 %3043 to i32
  %3045 = sub nsw i32 %3023, %3044
  store i32 %3045, i32* %3020, align 16
  br label %3046

3046:                                             ; preds = %3041, %3026
  %3047 = phi i32 [ 3, %3026 ], [ 1, %3041 ]
  %3048 = and i32 %3016, 4
  %3049 = icmp eq i32 %3048, 0
  br i1 %3049, label %3058, label %3050

3050:                                             ; preds = %3046
  %3051 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 87, i32 4
  %3052 = load i8, i8* %3051, align 1
  %3053 = zext i8 %3052 to i32
  %3054 = sub nsw i32 %3023, %3053
  %3055 = add nuw nsw i32 %3047, 1
  %3056 = zext i32 %3047 to i64
  %3057 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %3056
  store i32 %3054, i32* %3057, align 4
  br label %3058

3058:                                             ; preds = %3046, %3050
  %3059 = phi i32 [ %3055, %3050 ], [ %3047, %3046 ]
  %3060 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %3061 = load i32, i32* %3060, align 16
  %3062 = icmp sgt i32 %3061, 0
  %3063 = icmp slt i32 %3061, %3023
  %3064 = and i1 %3062, %3063
  br i1 %3064, label %3066, label %3065

3065:                                             ; preds = %3058
  store i32 0, i32* %3060, align 16
  br label %3066

3066:                                             ; preds = %3065, %3058
  %3067 = phi i32 [ 0, %3065 ], [ 1, %3058 ]
  %3068 = icmp eq i32 %3059, 1
  br i1 %3068, label %3069, label %4147

3069:                                             ; preds = %4167, %4173, %4164, %4154, %3066
  %3070 = phi i32 [ %3067, %3066 ], [ %4155, %4154 ], [ %4165, %4164 ], [ %4165, %4173 ], [ 1, %4167 ]
  %3071 = icmp eq i32 %3070, 0
  br i1 %3071, label %3284, label %3072

3072:                                             ; preds = %3069
  %3073 = add nsw i32 %3023, -2
  %3074 = lshr i32 %3073, 1
  %3075 = shl i32 %3073, 31
  %3076 = or i32 %3074, %3075
  switch i32 %3076, label %3284 [
    i32 0, label %3077
    i32 1, label %3158
    i32 3, label %3237
    i32 7, label %3257
  ]

3077:                                             ; preds = %3072
  %3078 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %3079 = load i64, i64* %3078, align 8
  %3080 = getelementptr inbounds i8, i8* %3013, i64 %3079
  %3081 = icmp sgt i64 %3079, 0
  br i1 %3081, label %3082, label %3284

3082:                                             ; preds = %3077
  %3083 = getelementptr i8, i8* %3011, i64 2
  %3084 = icmp ugt i8* %3080, %3083
  %3085 = select i1 %3084, i8* %3080, i8* %3083
  %3086 = xor i64 %3012, -1
  %3087 = getelementptr i8, i8* %3085, i64 %3086
  %3088 = ptrtoint i8* %3087 to i64
  %3089 = icmp ult i8* %3087, inttoptr (i64 32 to i8*)
  br i1 %3089, label %3149, label %3090

3090:                                             ; preds = %3082
  %3091 = and i64 %3088, -32
  %3092 = getelementptr i8, i8* %3013, i64 %3091
  %3093 = add i64 %3091, -32
  %3094 = lshr exact i64 %3093, 5
  %3095 = add nuw nsw i64 %3094, 1
  %3096 = and i64 %3095, 1
  %3097 = icmp eq i64 %3093, 0
  br i1 %3097, label %3131, label %3098

3098:                                             ; preds = %3090
  %3099 = sub nuw nsw i64 %3095, %3096
  br label %3100

3100:                                             ; preds = %3100, %3098
  %3101 = phi i64 [ 0, %3098 ], [ %3128, %3100 ]
  %3102 = phi i64 [ %3099, %3098 ], [ %3129, %3100 ]
  %3103 = getelementptr i8, i8* %3013, i64 %3101
  %3104 = bitcast i8* %3103 to <16 x i8>*
  %3105 = load <16 x i8>, <16 x i8>* %3104, align 1
  %3106 = getelementptr i8, i8* %3103, i64 16
  %3107 = bitcast i8* %3106 to <16 x i8>*
  %3108 = load <16 x i8>, <16 x i8>* %3107, align 1
  %3109 = lshr <16 x i8> %3105, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %3110 = lshr <16 x i8> %3108, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %3111 = and <16 x i8> %3109, <i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85>
  %3112 = and <16 x i8> %3110, <i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85>
  %3113 = bitcast i8* %3103 to <16 x i8>*
  store <16 x i8> %3111, <16 x i8>* %3113, align 1
  %3114 = bitcast i8* %3106 to <16 x i8>*
  store <16 x i8> %3112, <16 x i8>* %3114, align 1
  %3115 = or i64 %3101, 32
  %3116 = getelementptr i8, i8* %3013, i64 %3115
  %3117 = bitcast i8* %3116 to <16 x i8>*
  %3118 = load <16 x i8>, <16 x i8>* %3117, align 1
  %3119 = getelementptr i8, i8* %3116, i64 16
  %3120 = bitcast i8* %3119 to <16 x i8>*
  %3121 = load <16 x i8>, <16 x i8>* %3120, align 1
  %3122 = lshr <16 x i8> %3118, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %3123 = lshr <16 x i8> %3121, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %3124 = and <16 x i8> %3122, <i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85>
  %3125 = and <16 x i8> %3123, <i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85>
  %3126 = bitcast i8* %3116 to <16 x i8>*
  store <16 x i8> %3124, <16 x i8>* %3126, align 1
  %3127 = bitcast i8* %3119 to <16 x i8>*
  store <16 x i8> %3125, <16 x i8>* %3127, align 1
  %3128 = add i64 %3101, 64
  %3129 = add i64 %3102, -2
  %3130 = icmp eq i64 %3129, 0
  br i1 %3130, label %3131, label %3100, !llvm.loop !84

3131:                                             ; preds = %3100, %3090
  %3132 = phi i64 [ 0, %3090 ], [ %3128, %3100 ]
  %3133 = icmp eq i64 %3096, 0
  br i1 %3133, label %3147, label %3134

3134:                                             ; preds = %3131
  %3135 = getelementptr i8, i8* %3013, i64 %3132
  %3136 = bitcast i8* %3135 to <16 x i8>*
  %3137 = load <16 x i8>, <16 x i8>* %3136, align 1
  %3138 = getelementptr i8, i8* %3135, i64 16
  %3139 = bitcast i8* %3138 to <16 x i8>*
  %3140 = load <16 x i8>, <16 x i8>* %3139, align 1
  %3141 = lshr <16 x i8> %3137, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %3142 = lshr <16 x i8> %3140, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %3143 = and <16 x i8> %3141, <i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85>
  %3144 = and <16 x i8> %3142, <i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85, i8 85>
  %3145 = bitcast i8* %3135 to <16 x i8>*
  store <16 x i8> %3143, <16 x i8>* %3145, align 1
  %3146 = bitcast i8* %3138 to <16 x i8>*
  store <16 x i8> %3144, <16 x i8>* %3146, align 1
  br label %3147

3147:                                             ; preds = %3131, %3134
  %3148 = icmp eq i64 %3091, %3088
  br i1 %3148, label %3284, label %3149

3149:                                             ; preds = %3147, %3082
  %3150 = phi i8* [ %3013, %3082 ], [ %3092, %3147 ]
  br label %3151

3151:                                             ; preds = %3149, %3151
  %3152 = phi i8* [ %3156, %3151 ], [ %3150, %3149 ]
  %3153 = load i8, i8* %3152, align 1
  %3154 = lshr i8 %3153, 1
  %3155 = and i8 %3154, 85
  %3156 = getelementptr inbounds i8, i8* %3152, i64 1
  store i8 %3155, i8* %3152, align 1
  %3157 = icmp ult i8* %3156, %3080
  br i1 %3157, label %3151, label %3284, !llvm.loop !86

3158:                                             ; preds = %3072
  %3159 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %3160 = load i64, i64* %3159, align 8
  %3161 = getelementptr inbounds i8, i8* %3013, i64 %3160
  %3162 = load i32, i32* %3020, align 16
  %3163 = lshr i32 15, %3162
  %3164 = shl i32 %3163, 4
  %3165 = or i32 %3164, %3163
  %3166 = icmp sgt i64 %3160, 0
  br i1 %3166, label %3167, label %3284

3167:                                             ; preds = %3158
  %3168 = getelementptr i8, i8* %3011, i64 2
  %3169 = icmp ugt i8* %3161, %3168
  %3170 = select i1 %3169, i8* %3161, i8* %3168
  %3171 = xor i64 %3012, -1
  %3172 = getelementptr i8, i8* %3170, i64 %3171
  %3173 = ptrtoint i8* %3172 to i64
  %3174 = icmp ult i8* %3172, inttoptr (i64 16 to i8*)
  br i1 %3174, label %3226, label %3175

3175:                                             ; preds = %3167
  %3176 = and i64 %3173, -16
  %3177 = getelementptr i8, i8* %3013, i64 %3176
  %3178 = insertelement <16 x i32> undef, i32 %3162, i32 0
  %3179 = shufflevector <16 x i32> %3178, <16 x i32> undef, <16 x i32> zeroinitializer
  %3180 = insertelement <16 x i32> undef, i32 %3165, i32 0
  %3181 = shufflevector <16 x i32> %3180, <16 x i32> undef, <16 x i32> zeroinitializer
  %3182 = add i64 %3176, -16
  %3183 = lshr exact i64 %3182, 4
  %3184 = add nuw nsw i64 %3183, 1
  %3185 = and i64 %3184, 1
  %3186 = icmp eq i64 %3182, 0
  br i1 %3186, label %3212, label %3187

3187:                                             ; preds = %3175
  %3188 = sub nuw nsw i64 %3184, %3185
  br label %3189

3189:                                             ; preds = %3189, %3187
  %3190 = phi i64 [ 0, %3187 ], [ %3209, %3189 ]
  %3191 = phi i64 [ %3188, %3187 ], [ %3210, %3189 ]
  %3192 = getelementptr i8, i8* %3013, i64 %3190
  %3193 = bitcast i8* %3192 to <16 x i8>*
  %3194 = load <16 x i8>, <16 x i8>* %3193, align 1
  %3195 = zext <16 x i8> %3194 to <16 x i32>
  %3196 = lshr <16 x i32> %3195, %3179
  %3197 = and <16 x i32> %3196, %3181
  %3198 = trunc <16 x i32> %3197 to <16 x i8>
  %3199 = bitcast i8* %3192 to <16 x i8>*
  store <16 x i8> %3198, <16 x i8>* %3199, align 1
  %3200 = or i64 %3190, 16
  %3201 = getelementptr i8, i8* %3013, i64 %3200
  %3202 = bitcast i8* %3201 to <16 x i8>*
  %3203 = load <16 x i8>, <16 x i8>* %3202, align 1
  %3204 = zext <16 x i8> %3203 to <16 x i32>
  %3205 = lshr <16 x i32> %3204, %3179
  %3206 = and <16 x i32> %3205, %3181
  %3207 = trunc <16 x i32> %3206 to <16 x i8>
  %3208 = bitcast i8* %3201 to <16 x i8>*
  store <16 x i8> %3207, <16 x i8>* %3208, align 1
  %3209 = add i64 %3190, 32
  %3210 = add i64 %3191, -2
  %3211 = icmp eq i64 %3210, 0
  br i1 %3211, label %3212, label %3189, !llvm.loop !88

3212:                                             ; preds = %3189, %3175
  %3213 = phi i64 [ 0, %3175 ], [ %3209, %3189 ]
  %3214 = icmp eq i64 %3185, 0
  br i1 %3214, label %3224, label %3215

3215:                                             ; preds = %3212
  %3216 = getelementptr i8, i8* %3013, i64 %3213
  %3217 = bitcast i8* %3216 to <16 x i8>*
  %3218 = load <16 x i8>, <16 x i8>* %3217, align 1
  %3219 = zext <16 x i8> %3218 to <16 x i32>
  %3220 = lshr <16 x i32> %3219, %3179
  %3221 = and <16 x i32> %3220, %3181
  %3222 = trunc <16 x i32> %3221 to <16 x i8>
  %3223 = bitcast i8* %3216 to <16 x i8>*
  store <16 x i8> %3222, <16 x i8>* %3223, align 1
  br label %3224

3224:                                             ; preds = %3212, %3215
  %3225 = icmp eq i64 %3176, %3173
  br i1 %3225, label %3284, label %3226

3226:                                             ; preds = %3224, %3167
  %3227 = phi i8* [ %3013, %3167 ], [ %3177, %3224 ]
  br label %3228

3228:                                             ; preds = %3226, %3228
  %3229 = phi i8* [ %3235, %3228 ], [ %3227, %3226 ]
  %3230 = load i8, i8* %3229, align 1
  %3231 = zext i8 %3230 to i32
  %3232 = lshr i32 %3231, %3162
  %3233 = and i32 %3232, %3165
  %3234 = trunc i32 %3233 to i8
  %3235 = getelementptr inbounds i8, i8* %3229, i64 1
  store i8 %3234, i8* %3229, align 1
  %3236 = icmp ult i8* %3235, %3161
  br i1 %3236, label %3228, label %3284, !llvm.loop !89

3237:                                             ; preds = %3072
  %3238 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %3239 = load i64, i64* %3238, align 8
  %3240 = getelementptr inbounds i8, i8* %3013, i64 %3239
  %3241 = icmp sgt i64 %3239, 0
  br i1 %3241, label %3242, label %3284

3242:                                             ; preds = %3237, %3242
  %3243 = phi i32 [ %3253, %3242 ], [ 0, %3237 ]
  %3244 = phi i8* [ %3255, %3242 ], [ %3013, %3237 ]
  %3245 = load i8, i8* %3244, align 1
  %3246 = zext i8 %3245 to i32
  %3247 = sext i32 %3243 to i64
  %3248 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %3247
  %3249 = load i32, i32* %3248, align 4
  %3250 = lshr i32 %3246, %3249
  %3251 = add nsw i32 %3243, 1
  %3252 = icmp slt i32 %3251, %3059
  %3253 = select i1 %3252, i32 %3251, i32 0
  %3254 = trunc i32 %3250 to i8
  %3255 = getelementptr inbounds i8, i8* %3244, i64 1
  store i8 %3254, i8* %3244, align 1
  %3256 = icmp ult i8* %3255, %3240
  br i1 %3256, label %3242, label %3284

3257:                                             ; preds = %3072
  %3258 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %3259 = load i64, i64* %3258, align 8
  %3260 = getelementptr inbounds i8, i8* %3013, i64 %3259
  %3261 = icmp sgt i64 %3259, 0
  br i1 %3261, label %3262, label %3284

3262:                                             ; preds = %3257, %3262
  %3263 = phi i32 [ %3278, %3262 ], [ 0, %3257 ]
  %3264 = phi i8* [ %3282, %3262 ], [ %3013, %3257 ]
  %3265 = load i8, i8* %3264, align 1
  %3266 = zext i8 %3265 to i32
  %3267 = shl nuw nsw i32 %3266, 8
  %3268 = getelementptr inbounds i8, i8* %3264, i64 1
  %3269 = load i8, i8* %3268, align 1
  %3270 = zext i8 %3269 to i32
  %3271 = or i32 %3267, %3270
  %3272 = sext i32 %3263 to i64
  %3273 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %3272
  %3274 = load i32, i32* %3273, align 4
  %3275 = lshr i32 %3271, %3274
  %3276 = add nsw i32 %3263, 1
  %3277 = icmp slt i32 %3276, %3059
  %3278 = select i1 %3277, i32 %3276, i32 0
  %3279 = lshr i32 %3275, 8
  %3280 = trunc i32 %3279 to i8
  store i8 %3280, i8* %3264, align 1
  %3281 = trunc i32 %3275 to i8
  %3282 = getelementptr inbounds i8, i8* %3264, i64 2
  store i8 %3281, i8* %3268, align 1
  %3283 = icmp ult i8* %3282, %3260
  br i1 %3283, label %3262, label %3284

3284:                                             ; preds = %3262, %3242, %3228, %3151, %3224, %3147, %3257, %3237, %3158, %3077, %3072, %3069
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3019) #6
  %3285 = load i32, i32* %15, align 4
  br label %3286

3286:                                             ; preds = %3284, %3010, %3006
  %3287 = phi i32 [ %3285, %3284 ], [ %3007, %3010 ], [ %3007, %3006 ]
  %3288 = and i32 %3287, 4
  %3289 = icmp eq i32 %3288, 0
  br i1 %3289, label %3477, label %3290

3290:                                             ; preds = %3286
  %3291 = load i8*, i8** %4, align 8
  %3292 = getelementptr inbounds i8, i8* %3291, i64 1
  %3293 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %3294 = load i8, i8* %3293, align 1
  %3295 = icmp ult i8 %3294, 8
  br i1 %3295, label %3296, label %3477

3296:                                             ; preds = %3290
  %3297 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %3298 = load i32, i32* %3297, align 8
  switch i8 %3294, label %3467 [
    i8 1, label %3299
    i8 2, label %3344
    i8 4, label %3390
  ]

3299:                                             ; preds = %3296
  %3300 = icmp eq i32 %3298, 0
  br i1 %3300, label %3467, label %3301

3301:                                             ; preds = %3299
  %3302 = add i32 %3298, 7
  %3303 = and i32 %3302, 7
  %3304 = xor i32 %3303, 7
  %3305 = zext i32 %3298 to i64
  %3306 = getelementptr inbounds i8, i8* %3292, i64 %3305
  %3307 = add i32 %3298, -1
  %3308 = lshr i32 %3307, 3
  %3309 = zext i32 %3308 to i64
  %3310 = getelementptr inbounds i8, i8* %3292, i64 %3309
  %3311 = and i32 %3298, 1
  %3312 = icmp eq i32 %3307, 0
  br i1 %3312, label %3431, label %3313

3313:                                             ; preds = %3301
  %3314 = sub i32 %3298, %3311
  br label %3315

3315:                                             ; preds = %3315, %3313
  %3316 = phi i8* [ %3306, %3313 ], [ %3331, %3315 ]
  %3317 = phi i32 [ %3304, %3313 ], [ %3341, %3315 ]
  %3318 = phi i8* [ %3310, %3313 ], [ %3340, %3315 ]
  %3319 = phi i32 [ %3314, %3313 ], [ %3342, %3315 ]
  %3320 = getelementptr inbounds i8, i8* %3316, i64 -1
  %3321 = load i8, i8* %3318, align 1
  %3322 = zext i8 %3321 to i32
  %3323 = lshr i32 %3322, %3317
  %3324 = trunc i32 %3323 to i8
  %3325 = and i8 %3324, 1
  store i8 %3325, i8* %3320, align 1
  %3326 = icmp eq i32 %3317, 7
  %3327 = getelementptr inbounds i8, i8* %3318, i64 -1
  %3328 = add i32 %3317, 1
  %3329 = select i1 %3326, i8* %3327, i8* %3318
  %3330 = select i1 %3326, i32 0, i32 %3328
  %3331 = getelementptr inbounds i8, i8* %3316, i64 -2
  %3332 = load i8, i8* %3329, align 1
  %3333 = zext i8 %3332 to i32
  %3334 = lshr i32 %3333, %3330
  %3335 = trunc i32 %3334 to i8
  %3336 = and i8 %3335, 1
  store i8 %3336, i8* %3331, align 1
  %3337 = icmp eq i32 %3330, 7
  %3338 = getelementptr inbounds i8, i8* %3329, i64 -1
  %3339 = add i32 %3330, 1
  %3340 = select i1 %3337, i8* %3338, i8* %3329
  %3341 = select i1 %3337, i32 0, i32 %3339
  %3342 = add i32 %3319, -2
  %3343 = icmp eq i32 %3342, 0
  br i1 %3343, label %3431, label %3315

3344:                                             ; preds = %3296
  %3345 = icmp eq i32 %3298, 0
  br i1 %3345, label %3467, label %3346

3346:                                             ; preds = %3344
  %3347 = shl i32 %3298, 1
  %3348 = add i32 %3347, 6
  %3349 = and i32 %3348, 6
  %3350 = xor i32 %3349, 6
  %3351 = zext i32 %3298 to i64
  %3352 = getelementptr inbounds i8, i8* %3292, i64 %3351
  %3353 = add i32 %3298, -1
  %3354 = lshr i32 %3353, 2
  %3355 = zext i32 %3354 to i64
  %3356 = getelementptr inbounds i8, i8* %3292, i64 %3355
  %3357 = and i32 %3298, 1
  %3358 = icmp eq i32 %3353, 0
  br i1 %3358, label %3443, label %3359

3359:                                             ; preds = %3346
  %3360 = sub i32 %3298, %3357
  br label %3361

3361:                                             ; preds = %3361, %3359
  %3362 = phi i8* [ %3352, %3359 ], [ %3377, %3361 ]
  %3363 = phi i32 [ %3350, %3359 ], [ %3387, %3361 ]
  %3364 = phi i8* [ %3356, %3359 ], [ %3386, %3361 ]
  %3365 = phi i32 [ %3360, %3359 ], [ %3388, %3361 ]
  %3366 = getelementptr inbounds i8, i8* %3362, i64 -1
  %3367 = load i8, i8* %3364, align 1
  %3368 = zext i8 %3367 to i32
  %3369 = lshr i32 %3368, %3363
  %3370 = trunc i32 %3369 to i8
  %3371 = and i8 %3370, 3
  store i8 %3371, i8* %3366, align 1
  %3372 = icmp eq i32 %3363, 6
  %3373 = getelementptr inbounds i8, i8* %3364, i64 -1
  %3374 = add i32 %3363, 2
  %3375 = select i1 %3372, i8* %3373, i8* %3364
  %3376 = select i1 %3372, i32 0, i32 %3374
  %3377 = getelementptr inbounds i8, i8* %3362, i64 -2
  %3378 = load i8, i8* %3375, align 1
  %3379 = zext i8 %3378 to i32
  %3380 = lshr i32 %3379, %3376
  %3381 = trunc i32 %3380 to i8
  %3382 = and i8 %3381, 3
  store i8 %3382, i8* %3377, align 1
  %3383 = icmp eq i32 %3376, 6
  %3384 = getelementptr inbounds i8, i8* %3375, i64 -1
  %3385 = add i32 %3376, 2
  %3386 = select i1 %3383, i8* %3384, i8* %3375
  %3387 = select i1 %3383, i32 0, i32 %3385
  %3388 = add i32 %3365, -2
  %3389 = icmp eq i32 %3388, 0
  br i1 %3389, label %3443, label %3361

3390:                                             ; preds = %3296
  %3391 = icmp eq i32 %3298, 0
  br i1 %3391, label %3467, label %3392

3392:                                             ; preds = %3390
  %3393 = shl i32 %3298, 2
  %3394 = and i32 %3393, 4
  %3395 = zext i32 %3298 to i64
  %3396 = getelementptr inbounds i8, i8* %3292, i64 %3395
  %3397 = add i32 %3298, -1
  %3398 = lshr i32 %3397, 1
  %3399 = zext i32 %3398 to i64
  %3400 = getelementptr inbounds i8, i8* %3292, i64 %3399
  %3401 = and i32 %3298, 1
  %3402 = icmp eq i32 %3397, 0
  br i1 %3402, label %3455, label %3403

3403:                                             ; preds = %3392
  %3404 = sub i32 %3298, %3401
  br label %3405

3405:                                             ; preds = %3405, %3403
  %3406 = phi i8* [ %3396, %3403 ], [ %3420, %3405 ]
  %3407 = phi i32 [ %3394, %3403 ], [ %3428, %3405 ]
  %3408 = phi i8* [ %3400, %3403 ], [ %3427, %3405 ]
  %3409 = phi i32 [ %3404, %3403 ], [ %3429, %3405 ]
  %3410 = getelementptr inbounds i8, i8* %3406, i64 -1
  %3411 = load i8, i8* %3408, align 1
  %3412 = zext i8 %3411 to i32
  %3413 = lshr i32 %3412, %3407
  %3414 = trunc i32 %3413 to i8
  %3415 = and i8 %3414, 15
  store i8 %3415, i8* %3410, align 1
  %3416 = icmp eq i32 %3407, 4
  %3417 = getelementptr inbounds i8, i8* %3408, i64 -1
  %3418 = select i1 %3416, i8* %3417, i8* %3408
  %3419 = select i1 %3416, i32 0, i32 4
  %3420 = getelementptr inbounds i8, i8* %3406, i64 -2
  %3421 = load i8, i8* %3418, align 1
  %3422 = zext i8 %3421 to i32
  %3423 = lshr i32 %3422, %3419
  %3424 = trunc i32 %3423 to i8
  %3425 = and i8 %3424, 15
  store i8 %3425, i8* %3420, align 1
  %3426 = getelementptr inbounds i8, i8* %3418, i64 -1
  %3427 = select i1 %3416, i8* %3417, i8* %3426
  %3428 = select i1 %3416, i32 4, i32 0
  %3429 = add i32 %3409, -2
  %3430 = icmp eq i32 %3429, 0
  br i1 %3430, label %3455, label %3405

3431:                                             ; preds = %3315, %3301
  %3432 = phi i8* [ %3306, %3301 ], [ %3331, %3315 ]
  %3433 = phi i32 [ %3304, %3301 ], [ %3341, %3315 ]
  %3434 = phi i8* [ %3310, %3301 ], [ %3340, %3315 ]
  %3435 = icmp eq i32 %3311, 0
  br i1 %3435, label %3467, label %3436

3436:                                             ; preds = %3431
  %3437 = getelementptr inbounds i8, i8* %3432, i64 -1
  %3438 = load i8, i8* %3434, align 1
  %3439 = zext i8 %3438 to i32
  %3440 = lshr i32 %3439, %3433
  %3441 = trunc i32 %3440 to i8
  %3442 = and i8 %3441, 1
  store i8 %3442, i8* %3437, align 1
  br label %3467

3443:                                             ; preds = %3361, %3346
  %3444 = phi i8* [ %3352, %3346 ], [ %3377, %3361 ]
  %3445 = phi i32 [ %3350, %3346 ], [ %3387, %3361 ]
  %3446 = phi i8* [ %3356, %3346 ], [ %3386, %3361 ]
  %3447 = icmp eq i32 %3357, 0
  br i1 %3447, label %3467, label %3448

3448:                                             ; preds = %3443
  %3449 = getelementptr inbounds i8, i8* %3444, i64 -1
  %3450 = load i8, i8* %3446, align 1
  %3451 = zext i8 %3450 to i32
  %3452 = lshr i32 %3451, %3445
  %3453 = trunc i32 %3452 to i8
  %3454 = and i8 %3453, 3
  store i8 %3454, i8* %3449, align 1
  br label %3467

3455:                                             ; preds = %3405, %3392
  %3456 = phi i8* [ %3396, %3392 ], [ %3420, %3405 ]
  %3457 = phi i32 [ %3394, %3392 ], [ %3428, %3405 ]
  %3458 = phi i8* [ %3400, %3392 ], [ %3427, %3405 ]
  %3459 = icmp eq i32 %3401, 0
  br i1 %3459, label %3467, label %3460

3460:                                             ; preds = %3455
  %3461 = getelementptr inbounds i8, i8* %3456, i64 -1
  %3462 = load i8, i8* %3458, align 1
  %3463 = zext i8 %3462 to i32
  %3464 = lshr i32 %3463, %3457
  %3465 = trunc i32 %3464 to i8
  %3466 = and i8 %3465, 15
  store i8 %3466, i8* %3461, align 1
  br label %3467

3467:                                             ; preds = %3460, %3455, %3448, %3443, %3436, %3431, %3390, %3344, %3299, %3296
  store i8 8, i8* %3293, align 1
  %3468 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  %3469 = load i8, i8* %3468, align 2
  %3470 = shl i8 %3469, 3
  %3471 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 %3470, i8* %3471, align 1
  %3472 = zext i8 %3469 to i32
  %3473 = mul i32 %3298, %3472
  %3474 = zext i32 %3473 to i64
  %3475 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %3474, i64* %3475, align 8
  %3476 = load i32, i32* %15, align 4
  br label %3477

3477:                                             ; preds = %3467, %3290, %3286
  %3478 = phi i32 [ %3476, %3467 ], [ %3287, %3290 ], [ %3287, %3286 ]
  %3479 = and i32 %3478, 1
  %3480 = icmp eq i32 %3479, 0
  br i1 %3480, label %3485, label %3481

3481:                                             ; preds = %3477
  %3482 = load i8*, i8** %4, align 8
  %3483 = getelementptr inbounds i8, i8* %3482, i64 1
  tail call void @cr_png_do_bgr(%struct.png_row_info_struct* %1, i8* %3483) #6
  %3484 = load i32, i32* %15, align 4
  br label %3485

3485:                                             ; preds = %3477, %3481
  %3486 = phi i32 [ %3478, %3477 ], [ %3484, %3481 ]
  %3487 = and i32 %3486, 65536
  %3488 = icmp eq i32 %3487, 0
  br i1 %3488, label %3493, label %3489

3489:                                             ; preds = %3485
  %3490 = load i8*, i8** %4, align 8
  %3491 = getelementptr inbounds i8, i8* %3490, i64 1
  tail call void @cr_png_do_packswap(%struct.png_row_info_struct* %1, i8* %3491) #6
  %3492 = load i32, i32* %15, align 4
  br label %3493

3493:                                             ; preds = %3485, %3489
  %3494 = phi i32 [ %3486, %3485 ], [ %3492, %3489 ]
  %3495 = trunc i32 %3494 to i16
  %3496 = icmp slt i16 %3495, 0
  br i1 %3496, label %3497, label %3925

3497:                                             ; preds = %3493
  %3498 = load i8*, i8** %4, align 8
  %3499 = getelementptr inbounds i8, i8* %3498, i64 1
  %3500 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 70
  %3501 = load i16, i16* %3500, align 4
  %3502 = load i32, i32* %9, align 8
  %3503 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %3504 = load i32, i32* %3503, align 8
  %3505 = lshr i16 %3501, 8
  %3506 = trunc i16 %3505 to i8
  %3507 = trunc i16 %3501 to i8
  %3508 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %3509 = load i8, i8* %3508, align 8
  switch i8 %3509, label %3925 [
    i8 0, label %3510
    i8 2, label %3727
  ]

3510:                                             ; preds = %3497
  %3511 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %3512 = load i8, i8* %3511, align 1
  switch i8 %3512, label %3925 [
    i8 8, label %3513
    i8 16, label %3621
  ]

3513:                                             ; preds = %3510
  %3514 = trunc i32 %3502 to i8
  %3515 = icmp slt i8 %3514, 0
  %3516 = zext i32 %3504 to i64
  %3517 = getelementptr inbounds i8, i8* %3499, i64 %3516
  %3518 = getelementptr inbounds i8, i8* %3517, i64 %3516
  br i1 %3515, label %3527, label %3519

3519:                                             ; preds = %3513
  %3520 = icmp eq i32 %3504, 0
  br i1 %3520, label %3615, label %3521

3521:                                             ; preds = %3519
  %3522 = add i32 %3504, -1
  %3523 = and i32 %3504, 3
  %3524 = icmp ult i32 %3522, 3
  br i1 %3524, label %3601, label %3525

3525:                                             ; preds = %3521
  %3526 = sub i32 %3504, %3523
  br label %3579

3527:                                             ; preds = %3513
  %3528 = icmp ugt i32 %3504, 1
  %3529 = getelementptr inbounds i8, i8* %3518, i64 -1
  store i8 %3507, i8* %3529, align 1
  br i1 %3528, label %3530, label %3573

3530:                                             ; preds = %3527
  %3531 = add i32 %3504, -1
  %3532 = add i32 %3504, -2
  %3533 = and i32 %3531, 3
  %3534 = icmp ult i32 %3532, 3
  br i1 %3534, label %3559, label %3535

3535:                                             ; preds = %3530
  %3536 = sub i32 %3531, %3533
  br label %3537

3537:                                             ; preds = %3537, %3535
  %3538 = phi i8* [ %3518, %3535 ], [ %3555, %3537 ]
  %3539 = phi i8* [ %3517, %3535 ], [ %3553, %3537 ]
  %3540 = phi i32 [ %3536, %3535 ], [ %3557, %3537 ]
  %3541 = getelementptr inbounds i8, i8* %3539, i64 -1
  %3542 = load i8, i8* %3541, align 1
  %3543 = getelementptr inbounds i8, i8* %3538, i64 -2
  store i8 %3542, i8* %3543, align 1
  %3544 = getelementptr inbounds i8, i8* %3538, i64 -3
  store i8 %3507, i8* %3544, align 1
  %3545 = getelementptr inbounds i8, i8* %3539, i64 -2
  %3546 = load i8, i8* %3545, align 1
  %3547 = getelementptr inbounds i8, i8* %3538, i64 -4
  store i8 %3546, i8* %3547, align 1
  %3548 = getelementptr inbounds i8, i8* %3538, i64 -5
  store i8 %3507, i8* %3548, align 1
  %3549 = getelementptr inbounds i8, i8* %3539, i64 -3
  %3550 = load i8, i8* %3549, align 1
  %3551 = getelementptr inbounds i8, i8* %3538, i64 -6
  store i8 %3550, i8* %3551, align 1
  %3552 = getelementptr inbounds i8, i8* %3538, i64 -7
  store i8 %3507, i8* %3552, align 1
  %3553 = getelementptr inbounds i8, i8* %3539, i64 -4
  %3554 = load i8, i8* %3553, align 1
  %3555 = getelementptr inbounds i8, i8* %3538, i64 -8
  store i8 %3554, i8* %3555, align 1
  %3556 = getelementptr inbounds i8, i8* %3538, i64 -9
  store i8 %3507, i8* %3556, align 1
  %3557 = add i32 %3540, -4
  %3558 = icmp eq i32 %3557, 0
  br i1 %3558, label %3559, label %3537

3559:                                             ; preds = %3537, %3530
  %3560 = phi i8* [ %3518, %3530 ], [ %3555, %3537 ]
  %3561 = phi i8* [ %3517, %3530 ], [ %3553, %3537 ]
  %3562 = icmp eq i32 %3533, 0
  br i1 %3562, label %3573, label %3563

3563:                                             ; preds = %3559, %3563
  %3564 = phi i8* [ %3569, %3563 ], [ %3560, %3559 ]
  %3565 = phi i8* [ %3567, %3563 ], [ %3561, %3559 ]
  %3566 = phi i32 [ %3571, %3563 ], [ %3533, %3559 ]
  %3567 = getelementptr inbounds i8, i8* %3565, i64 -1
  %3568 = load i8, i8* %3567, align 1
  %3569 = getelementptr inbounds i8, i8* %3564, i64 -2
  store i8 %3568, i8* %3569, align 1
  %3570 = getelementptr inbounds i8, i8* %3564, i64 -3
  store i8 %3507, i8* %3570, align 1
  %3571 = add i32 %3566, -1
  %3572 = icmp eq i32 %3571, 0
  br i1 %3572, label %3573, label %3563, !llvm.loop !90

3573:                                             ; preds = %3559, %3563, %3527
  %3574 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 2, i8* %3574, align 2
  %3575 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 16, i8* %3575, align 1
  %3576 = shl i32 %3504, 1
  %3577 = zext i32 %3576 to i64
  %3578 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %3577, i64* %3578, align 8
  br label %3925

3579:                                             ; preds = %3579, %3525
  %3580 = phi i8* [ %3518, %3525 ], [ %3598, %3579 ]
  %3581 = phi i8* [ %3517, %3525 ], [ %3595, %3579 ]
  %3582 = phi i32 [ %3526, %3525 ], [ %3599, %3579 ]
  %3583 = getelementptr inbounds i8, i8* %3581, i64 -1
  %3584 = load i8, i8* %3583, align 1
  %3585 = getelementptr inbounds i8, i8* %3580, i64 -1
  store i8 %3584, i8* %3585, align 1
  %3586 = getelementptr inbounds i8, i8* %3580, i64 -2
  store i8 %3507, i8* %3586, align 1
  %3587 = getelementptr inbounds i8, i8* %3581, i64 -2
  %3588 = load i8, i8* %3587, align 1
  %3589 = getelementptr inbounds i8, i8* %3580, i64 -3
  store i8 %3588, i8* %3589, align 1
  %3590 = getelementptr inbounds i8, i8* %3580, i64 -4
  store i8 %3507, i8* %3590, align 1
  %3591 = getelementptr inbounds i8, i8* %3581, i64 -3
  %3592 = load i8, i8* %3591, align 1
  %3593 = getelementptr inbounds i8, i8* %3580, i64 -5
  store i8 %3592, i8* %3593, align 1
  %3594 = getelementptr inbounds i8, i8* %3580, i64 -6
  store i8 %3507, i8* %3594, align 1
  %3595 = getelementptr inbounds i8, i8* %3581, i64 -4
  %3596 = load i8, i8* %3595, align 1
  %3597 = getelementptr inbounds i8, i8* %3580, i64 -7
  store i8 %3596, i8* %3597, align 1
  %3598 = getelementptr inbounds i8, i8* %3580, i64 -8
  store i8 %3507, i8* %3598, align 1
  %3599 = add i32 %3582, -4
  %3600 = icmp eq i32 %3599, 0
  br i1 %3600, label %3601, label %3579

3601:                                             ; preds = %3579, %3521
  %3602 = phi i8* [ %3518, %3521 ], [ %3598, %3579 ]
  %3603 = phi i8* [ %3517, %3521 ], [ %3595, %3579 ]
  %3604 = icmp eq i32 %3523, 0
  br i1 %3604, label %3615, label %3605

3605:                                             ; preds = %3601, %3605
  %3606 = phi i8* [ %3612, %3605 ], [ %3602, %3601 ]
  %3607 = phi i8* [ %3609, %3605 ], [ %3603, %3601 ]
  %3608 = phi i32 [ %3613, %3605 ], [ %3523, %3601 ]
  %3609 = getelementptr inbounds i8, i8* %3607, i64 -1
  %3610 = load i8, i8* %3609, align 1
  %3611 = getelementptr inbounds i8, i8* %3606, i64 -1
  store i8 %3610, i8* %3611, align 1
  %3612 = getelementptr inbounds i8, i8* %3606, i64 -2
  store i8 %3507, i8* %3612, align 1
  %3613 = add i32 %3608, -1
  %3614 = icmp eq i32 %3613, 0
  br i1 %3614, label %3615, label %3605, !llvm.loop !91

3615:                                             ; preds = %3601, %3605, %3519
  %3616 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 2, i8* %3616, align 2
  %3617 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 16, i8* %3617, align 1
  %3618 = shl i32 %3504, 1
  %3619 = zext i32 %3618 to i64
  %3620 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %3619, i64* %3620, align 8
  br label %3925

3621:                                             ; preds = %3510
  %3622 = trunc i32 %3502 to i8
  %3623 = icmp slt i8 %3622, 0
  %3624 = zext i32 %3504 to i64
  %3625 = shl nuw nsw i64 %3624, 1
  %3626 = getelementptr inbounds i8, i8* %3499, i64 %3625
  %3627 = getelementptr inbounds i8, i8* %3626, i64 %3625
  br i1 %3623, label %3635, label %3628

3628:                                             ; preds = %3621
  %3629 = icmp eq i32 %3504, 0
  br i1 %3629, label %3721, label %3630

3630:                                             ; preds = %3628
  %3631 = and i32 %3504, 1
  %3632 = icmp eq i32 %3504, 1
  br i1 %3632, label %3708, label %3633

3633:                                             ; preds = %3630
  %3634 = sub i32 %3504, %3631
  br label %3686

3635:                                             ; preds = %3621
  %3636 = icmp ugt i32 %3504, 1
  %3637 = getelementptr inbounds i8, i8* %3627, i64 -1
  store i8 %3507, i8* %3637, align 1
  %3638 = getelementptr inbounds i8, i8* %3627, i64 -2
  store i8 %3506, i8* %3638, align 1
  br i1 %3636, label %3639, label %3680

3639:                                             ; preds = %3635
  %3640 = add i32 %3504, -1
  %3641 = and i32 %3640, 1
  %3642 = icmp eq i32 %3504, 2
  br i1 %3642, label %3667, label %3643

3643:                                             ; preds = %3639
  %3644 = sub i32 %3640, %3641
  br label %3645

3645:                                             ; preds = %3645, %3643
  %3646 = phi i8* [ %3627, %3643 ], [ %3662, %3645 ]
  %3647 = phi i8* [ %3626, %3643 ], [ %3660, %3645 ]
  %3648 = phi i32 [ %3644, %3643 ], [ %3665, %3645 ]
  %3649 = getelementptr inbounds i8, i8* %3647, i64 -1
  %3650 = load i8, i8* %3649, align 1
  %3651 = getelementptr inbounds i8, i8* %3646, i64 -3
  store i8 %3650, i8* %3651, align 1
  %3652 = getelementptr inbounds i8, i8* %3647, i64 -2
  %3653 = load i8, i8* %3652, align 1
  %3654 = getelementptr inbounds i8, i8* %3646, i64 -4
  store i8 %3653, i8* %3654, align 1
  %3655 = getelementptr inbounds i8, i8* %3646, i64 -5
  store i8 %3507, i8* %3655, align 1
  %3656 = getelementptr inbounds i8, i8* %3646, i64 -6
  store i8 %3506, i8* %3656, align 1
  %3657 = getelementptr inbounds i8, i8* %3647, i64 -3
  %3658 = load i8, i8* %3657, align 1
  %3659 = getelementptr inbounds i8, i8* %3646, i64 -7
  store i8 %3658, i8* %3659, align 1
  %3660 = getelementptr inbounds i8, i8* %3647, i64 -4
  %3661 = load i8, i8* %3660, align 1
  %3662 = getelementptr inbounds i8, i8* %3646, i64 -8
  store i8 %3661, i8* %3662, align 1
  %3663 = getelementptr inbounds i8, i8* %3646, i64 -9
  store i8 %3507, i8* %3663, align 1
  %3664 = getelementptr inbounds i8, i8* %3646, i64 -10
  store i8 %3506, i8* %3664, align 1
  %3665 = add i32 %3648, -2
  %3666 = icmp eq i32 %3665, 0
  br i1 %3666, label %3667, label %3645

3667:                                             ; preds = %3645, %3639
  %3668 = phi i8* [ %3627, %3639 ], [ %3662, %3645 ]
  %3669 = phi i8* [ %3626, %3639 ], [ %3660, %3645 ]
  %3670 = icmp eq i32 %3641, 0
  br i1 %3670, label %3680, label %3671

3671:                                             ; preds = %3667
  %3672 = getelementptr inbounds i8, i8* %3669, i64 -1
  %3673 = load i8, i8* %3672, align 1
  %3674 = getelementptr inbounds i8, i8* %3668, i64 -3
  store i8 %3673, i8* %3674, align 1
  %3675 = getelementptr inbounds i8, i8* %3669, i64 -2
  %3676 = load i8, i8* %3675, align 1
  %3677 = getelementptr inbounds i8, i8* %3668, i64 -4
  store i8 %3676, i8* %3677, align 1
  %3678 = getelementptr inbounds i8, i8* %3668, i64 -5
  store i8 %3507, i8* %3678, align 1
  %3679 = getelementptr inbounds i8, i8* %3668, i64 -6
  store i8 %3506, i8* %3679, align 1
  br label %3680

3680:                                             ; preds = %3671, %3667, %3635
  %3681 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 2, i8* %3681, align 2
  %3682 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 32, i8* %3682, align 1
  %3683 = shl i32 %3504, 2
  %3684 = zext i32 %3683 to i64
  %3685 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %3684, i64* %3685, align 8
  br label %3925

3686:                                             ; preds = %3686, %3633
  %3687 = phi i8* [ %3627, %3633 ], [ %3705, %3686 ]
  %3688 = phi i8* [ %3626, %3633 ], [ %3701, %3686 ]
  %3689 = phi i32 [ %3634, %3633 ], [ %3706, %3686 ]
  %3690 = getelementptr inbounds i8, i8* %3688, i64 -1
  %3691 = load i8, i8* %3690, align 1
  %3692 = getelementptr inbounds i8, i8* %3687, i64 -1
  store i8 %3691, i8* %3692, align 1
  %3693 = getelementptr inbounds i8, i8* %3688, i64 -2
  %3694 = load i8, i8* %3693, align 1
  %3695 = getelementptr inbounds i8, i8* %3687, i64 -2
  store i8 %3694, i8* %3695, align 1
  %3696 = getelementptr inbounds i8, i8* %3687, i64 -3
  store i8 %3507, i8* %3696, align 1
  %3697 = getelementptr inbounds i8, i8* %3687, i64 -4
  store i8 %3506, i8* %3697, align 1
  %3698 = getelementptr inbounds i8, i8* %3688, i64 -3
  %3699 = load i8, i8* %3698, align 1
  %3700 = getelementptr inbounds i8, i8* %3687, i64 -5
  store i8 %3699, i8* %3700, align 1
  %3701 = getelementptr inbounds i8, i8* %3688, i64 -4
  %3702 = load i8, i8* %3701, align 1
  %3703 = getelementptr inbounds i8, i8* %3687, i64 -6
  store i8 %3702, i8* %3703, align 1
  %3704 = getelementptr inbounds i8, i8* %3687, i64 -7
  store i8 %3507, i8* %3704, align 1
  %3705 = getelementptr inbounds i8, i8* %3687, i64 -8
  store i8 %3506, i8* %3705, align 1
  %3706 = add i32 %3689, -2
  %3707 = icmp eq i32 %3706, 0
  br i1 %3707, label %3708, label %3686

3708:                                             ; preds = %3686, %3630
  %3709 = phi i8* [ %3627, %3630 ], [ %3705, %3686 ]
  %3710 = phi i8* [ %3626, %3630 ], [ %3701, %3686 ]
  %3711 = icmp eq i32 %3631, 0
  br i1 %3711, label %3721, label %3712

3712:                                             ; preds = %3708
  %3713 = getelementptr inbounds i8, i8* %3710, i64 -1
  %3714 = load i8, i8* %3713, align 1
  %3715 = getelementptr inbounds i8, i8* %3709, i64 -1
  store i8 %3714, i8* %3715, align 1
  %3716 = getelementptr inbounds i8, i8* %3710, i64 -2
  %3717 = load i8, i8* %3716, align 1
  %3718 = getelementptr inbounds i8, i8* %3709, i64 -2
  store i8 %3717, i8* %3718, align 1
  %3719 = getelementptr inbounds i8, i8* %3709, i64 -3
  store i8 %3507, i8* %3719, align 1
  %3720 = getelementptr inbounds i8, i8* %3709, i64 -4
  store i8 %3506, i8* %3720, align 1
  br label %3721

3721:                                             ; preds = %3712, %3708, %3628
  %3722 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 2, i8* %3722, align 2
  %3723 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 32, i8* %3723, align 1
  %3724 = shl i32 %3504, 2
  %3725 = zext i32 %3724 to i64
  %3726 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %3725, i64* %3726, align 8
  br label %3925

3727:                                             ; preds = %3497
  %3728 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %3729 = load i8, i8* %3728, align 1
  switch i8 %3729, label %3925 [
    i8 8, label %3730
    i8 16, label %3847
  ]

3730:                                             ; preds = %3727
  %3731 = trunc i32 %3502 to i8
  %3732 = icmp slt i8 %3731, 0
  %3733 = zext i32 %3504 to i64
  %3734 = mul nuw nsw i64 %3733, 3
  %3735 = getelementptr inbounds i8, i8* %3499, i64 %3734
  %3736 = getelementptr inbounds i8, i8* %3735, i64 %3733
  br i1 %3732, label %3744, label %3737

3737:                                             ; preds = %3730
  %3738 = icmp eq i32 %3504, 0
  br i1 %3738, label %3841, label %3739

3739:                                             ; preds = %3737
  %3740 = and i32 %3504, 1
  %3741 = icmp eq i32 %3504, 1
  br i1 %3741, label %3826, label %3742

3742:                                             ; preds = %3739
  %3743 = sub i32 %3504, %3740
  br label %3800

3744:                                             ; preds = %3730
  %3745 = icmp ugt i32 %3504, 1
  %3746 = getelementptr inbounds i8, i8* %3736, i64 -1
  store i8 %3507, i8* %3746, align 1
  br i1 %3745, label %3747, label %3794

3747:                                             ; preds = %3744
  %3748 = add i32 %3504, -1
  %3749 = and i32 %3748, 1
  %3750 = icmp eq i32 %3504, 2
  br i1 %3750, label %3779, label %3751

3751:                                             ; preds = %3747
  %3752 = sub i32 %3748, %3749
  br label %3753

3753:                                             ; preds = %3753, %3751
  %3754 = phi i8* [ %3736, %3751 ], [ %3775, %3753 ]
  %3755 = phi i8* [ %3735, %3751 ], [ %3773, %3753 ]
  %3756 = phi i32 [ %3752, %3751 ], [ %3777, %3753 ]
  %3757 = getelementptr inbounds i8, i8* %3755, i64 -1
  %3758 = load i8, i8* %3757, align 1
  %3759 = getelementptr inbounds i8, i8* %3754, i64 -2
  store i8 %3758, i8* %3759, align 1
  %3760 = getelementptr inbounds i8, i8* %3755, i64 -2
  %3761 = load i8, i8* %3760, align 1
  %3762 = getelementptr inbounds i8, i8* %3754, i64 -3
  store i8 %3761, i8* %3762, align 1
  %3763 = getelementptr inbounds i8, i8* %3755, i64 -3
  %3764 = load i8, i8* %3763, align 1
  %3765 = getelementptr inbounds i8, i8* %3754, i64 -4
  store i8 %3764, i8* %3765, align 1
  %3766 = getelementptr inbounds i8, i8* %3754, i64 -5
  store i8 %3507, i8* %3766, align 1
  %3767 = getelementptr inbounds i8, i8* %3755, i64 -4
  %3768 = load i8, i8* %3767, align 1
  %3769 = getelementptr inbounds i8, i8* %3754, i64 -6
  store i8 %3768, i8* %3769, align 1
  %3770 = getelementptr inbounds i8, i8* %3755, i64 -5
  %3771 = load i8, i8* %3770, align 1
  %3772 = getelementptr inbounds i8, i8* %3754, i64 -7
  store i8 %3771, i8* %3772, align 1
  %3773 = getelementptr inbounds i8, i8* %3755, i64 -6
  %3774 = load i8, i8* %3773, align 1
  %3775 = getelementptr inbounds i8, i8* %3754, i64 -8
  store i8 %3774, i8* %3775, align 1
  %3776 = getelementptr inbounds i8, i8* %3754, i64 -9
  store i8 %3507, i8* %3776, align 1
  %3777 = add i32 %3756, -2
  %3778 = icmp eq i32 %3777, 0
  br i1 %3778, label %3779, label %3753

3779:                                             ; preds = %3753, %3747
  %3780 = phi i8* [ %3736, %3747 ], [ %3775, %3753 ]
  %3781 = phi i8* [ %3735, %3747 ], [ %3773, %3753 ]
  %3782 = icmp eq i32 %3749, 0
  br i1 %3782, label %3794, label %3783

3783:                                             ; preds = %3779
  %3784 = getelementptr inbounds i8, i8* %3781, i64 -1
  %3785 = load i8, i8* %3784, align 1
  %3786 = getelementptr inbounds i8, i8* %3780, i64 -2
  store i8 %3785, i8* %3786, align 1
  %3787 = getelementptr inbounds i8, i8* %3781, i64 -2
  %3788 = load i8, i8* %3787, align 1
  %3789 = getelementptr inbounds i8, i8* %3780, i64 -3
  store i8 %3788, i8* %3789, align 1
  %3790 = getelementptr inbounds i8, i8* %3781, i64 -3
  %3791 = load i8, i8* %3790, align 1
  %3792 = getelementptr inbounds i8, i8* %3780, i64 -4
  store i8 %3791, i8* %3792, align 1
  %3793 = getelementptr inbounds i8, i8* %3780, i64 -5
  store i8 %3507, i8* %3793, align 1
  br label %3794

3794:                                             ; preds = %3783, %3779, %3744
  %3795 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 4, i8* %3795, align 2
  %3796 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 32, i8* %3796, align 1
  %3797 = shl i32 %3504, 2
  %3798 = zext i32 %3797 to i64
  %3799 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %3798, i64* %3799, align 8
  br label %3925

3800:                                             ; preds = %3800, %3742
  %3801 = phi i8* [ %3736, %3742 ], [ %3823, %3800 ]
  %3802 = phi i8* [ %3735, %3742 ], [ %3820, %3800 ]
  %3803 = phi i32 [ %3743, %3742 ], [ %3824, %3800 ]
  %3804 = getelementptr inbounds i8, i8* %3802, i64 -1
  %3805 = load i8, i8* %3804, align 1
  %3806 = getelementptr inbounds i8, i8* %3801, i64 -1
  store i8 %3805, i8* %3806, align 1
  %3807 = getelementptr inbounds i8, i8* %3802, i64 -2
  %3808 = load i8, i8* %3807, align 1
  %3809 = getelementptr inbounds i8, i8* %3801, i64 -2
  store i8 %3808, i8* %3809, align 1
  %3810 = getelementptr inbounds i8, i8* %3802, i64 -3
  %3811 = load i8, i8* %3810, align 1
  %3812 = getelementptr inbounds i8, i8* %3801, i64 -3
  store i8 %3811, i8* %3812, align 1
  %3813 = getelementptr inbounds i8, i8* %3801, i64 -4
  store i8 %3507, i8* %3813, align 1
  %3814 = getelementptr inbounds i8, i8* %3802, i64 -4
  %3815 = load i8, i8* %3814, align 1
  %3816 = getelementptr inbounds i8, i8* %3801, i64 -5
  store i8 %3815, i8* %3816, align 1
  %3817 = getelementptr inbounds i8, i8* %3802, i64 -5
  %3818 = load i8, i8* %3817, align 1
  %3819 = getelementptr inbounds i8, i8* %3801, i64 -6
  store i8 %3818, i8* %3819, align 1
  %3820 = getelementptr inbounds i8, i8* %3802, i64 -6
  %3821 = load i8, i8* %3820, align 1
  %3822 = getelementptr inbounds i8, i8* %3801, i64 -7
  store i8 %3821, i8* %3822, align 1
  %3823 = getelementptr inbounds i8, i8* %3801, i64 -8
  store i8 %3507, i8* %3823, align 1
  %3824 = add i32 %3803, -2
  %3825 = icmp eq i32 %3824, 0
  br i1 %3825, label %3826, label %3800

3826:                                             ; preds = %3800, %3739
  %3827 = phi i8* [ %3736, %3739 ], [ %3823, %3800 ]
  %3828 = phi i8* [ %3735, %3739 ], [ %3820, %3800 ]
  %3829 = icmp eq i32 %3740, 0
  br i1 %3829, label %3841, label %3830

3830:                                             ; preds = %3826
  %3831 = getelementptr inbounds i8, i8* %3828, i64 -1
  %3832 = load i8, i8* %3831, align 1
  %3833 = getelementptr inbounds i8, i8* %3827, i64 -1
  store i8 %3832, i8* %3833, align 1
  %3834 = getelementptr inbounds i8, i8* %3828, i64 -2
  %3835 = load i8, i8* %3834, align 1
  %3836 = getelementptr inbounds i8, i8* %3827, i64 -2
  store i8 %3835, i8* %3836, align 1
  %3837 = getelementptr inbounds i8, i8* %3828, i64 -3
  %3838 = load i8, i8* %3837, align 1
  %3839 = getelementptr inbounds i8, i8* %3827, i64 -3
  store i8 %3838, i8* %3839, align 1
  %3840 = getelementptr inbounds i8, i8* %3827, i64 -4
  store i8 %3507, i8* %3840, align 1
  br label %3841

3841:                                             ; preds = %3830, %3826, %3737
  %3842 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 4, i8* %3842, align 2
  %3843 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 32, i8* %3843, align 1
  %3844 = shl i32 %3504, 2
  %3845 = zext i32 %3844 to i64
  %3846 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %3845, i64* %3846, align 8
  br label %3925

3847:                                             ; preds = %3727
  %3848 = trunc i32 %3502 to i8
  %3849 = icmp slt i8 %3848, 0
  %3850 = zext i32 %3504 to i64
  %3851 = mul nuw nsw i64 %3850, 6
  %3852 = getelementptr inbounds i8, i8* %3499, i64 %3851
  %3853 = shl nuw nsw i64 %3850, 1
  %3854 = getelementptr inbounds i8, i8* %3852, i64 %3853
  br i1 %3849, label %3857, label %3855

3855:                                             ; preds = %3847
  %3856 = icmp eq i32 %3504, 0
  br i1 %3856, label %3919, label %3893

3857:                                             ; preds = %3847
  %3858 = icmp ugt i32 %3504, 1
  %3859 = getelementptr inbounds i8, i8* %3854, i64 -1
  store i8 %3507, i8* %3859, align 1
  %3860 = getelementptr inbounds i8, i8* %3854, i64 -2
  store i8 %3506, i8* %3860, align 1
  br i1 %3858, label %3861, label %3887

3861:                                             ; preds = %3857, %3861
  %3862 = phi i8* [ %3882, %3861 ], [ %3854, %3857 ]
  %3863 = phi i8* [ %3880, %3861 ], [ %3852, %3857 ]
  %3864 = phi i32 [ %3883, %3861 ], [ 1, %3857 ]
  %3865 = getelementptr inbounds i8, i8* %3863, i64 -1
  %3866 = load i8, i8* %3865, align 1
  %3867 = getelementptr inbounds i8, i8* %3862, i64 -3
  store i8 %3866, i8* %3867, align 1
  %3868 = getelementptr inbounds i8, i8* %3863, i64 -2
  %3869 = load i8, i8* %3868, align 1
  %3870 = getelementptr inbounds i8, i8* %3862, i64 -4
  store i8 %3869, i8* %3870, align 1
  %3871 = getelementptr inbounds i8, i8* %3863, i64 -3
  %3872 = load i8, i8* %3871, align 1
  %3873 = getelementptr inbounds i8, i8* %3862, i64 -5
  store i8 %3872, i8* %3873, align 1
  %3874 = getelementptr inbounds i8, i8* %3863, i64 -4
  %3875 = load i8, i8* %3874, align 1
  %3876 = getelementptr inbounds i8, i8* %3862, i64 -6
  store i8 %3875, i8* %3876, align 1
  %3877 = getelementptr inbounds i8, i8* %3863, i64 -5
  %3878 = load i8, i8* %3877, align 1
  %3879 = getelementptr inbounds i8, i8* %3862, i64 -7
  store i8 %3878, i8* %3879, align 1
  %3880 = getelementptr inbounds i8, i8* %3863, i64 -6
  %3881 = load i8, i8* %3880, align 1
  %3882 = getelementptr inbounds i8, i8* %3862, i64 -8
  store i8 %3881, i8* %3882, align 1
  %3883 = add nuw i32 %3864, 1
  %3884 = getelementptr inbounds i8, i8* %3862, i64 -9
  store i8 %3507, i8* %3884, align 1
  %3885 = getelementptr inbounds i8, i8* %3862, i64 -10
  store i8 %3506, i8* %3885, align 1
  %3886 = icmp eq i32 %3883, %3504
  br i1 %3886, label %3887, label %3861

3887:                                             ; preds = %3861, %3857
  %3888 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 4, i8* %3888, align 2
  %3889 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 64, i8* %3889, align 1
  %3890 = shl i32 %3504, 3
  %3891 = zext i32 %3890 to i64
  %3892 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %3891, i64* %3892, align 8
  br label %3925

3893:                                             ; preds = %3855, %3893
  %3894 = phi i8* [ %3916, %3893 ], [ %3854, %3855 ]
  %3895 = phi i8* [ %3912, %3893 ], [ %3852, %3855 ]
  %3896 = phi i32 [ %3917, %3893 ], [ 0, %3855 ]
  %3897 = getelementptr inbounds i8, i8* %3895, i64 -1
  %3898 = load i8, i8* %3897, align 1
  %3899 = getelementptr inbounds i8, i8* %3894, i64 -1
  store i8 %3898, i8* %3899, align 1
  %3900 = getelementptr inbounds i8, i8* %3895, i64 -2
  %3901 = load i8, i8* %3900, align 1
  %3902 = getelementptr inbounds i8, i8* %3894, i64 -2
  store i8 %3901, i8* %3902, align 1
  %3903 = getelementptr inbounds i8, i8* %3895, i64 -3
  %3904 = load i8, i8* %3903, align 1
  %3905 = getelementptr inbounds i8, i8* %3894, i64 -3
  store i8 %3904, i8* %3905, align 1
  %3906 = getelementptr inbounds i8, i8* %3895, i64 -4
  %3907 = load i8, i8* %3906, align 1
  %3908 = getelementptr inbounds i8, i8* %3894, i64 -4
  store i8 %3907, i8* %3908, align 1
  %3909 = getelementptr inbounds i8, i8* %3895, i64 -5
  %3910 = load i8, i8* %3909, align 1
  %3911 = getelementptr inbounds i8, i8* %3894, i64 -5
  store i8 %3910, i8* %3911, align 1
  %3912 = getelementptr inbounds i8, i8* %3895, i64 -6
  %3913 = load i8, i8* %3912, align 1
  %3914 = getelementptr inbounds i8, i8* %3894, i64 -6
  store i8 %3913, i8* %3914, align 1
  %3915 = getelementptr inbounds i8, i8* %3894, i64 -7
  store i8 %3507, i8* %3915, align 1
  %3916 = getelementptr inbounds i8, i8* %3894, i64 -8
  store i8 %3506, i8* %3916, align 1
  %3917 = add nuw i32 %3896, 1
  %3918 = icmp eq i32 %3917, %3504
  br i1 %3918, label %3919, label %3893

3919:                                             ; preds = %3893, %3855
  %3920 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  store i8 4, i8* %3920, align 2
  %3921 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 64, i8* %3921, align 1
  %3922 = shl i32 %3504, 3
  %3923 = zext i32 %3922 to i64
  %3924 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %3923, i64* %3924, align 8
  br label %3925

3925:                                             ; preds = %3919, %3887, %3841, %3794, %3727, %3721, %3680, %3615, %3573, %3510, %3497, %3493
  %3926 = load i32, i32* %15, align 4
  %3927 = and i32 %3926, 131072
  %3928 = icmp eq i32 %3927, 0
  br i1 %3928, label %4092, label %3929

3929:                                             ; preds = %3925
  %3930 = load i8*, i8** %4, align 8
  %3931 = getelementptr inbounds i8, i8* %3930, i64 1
  %3932 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %3933 = load i32, i32* %3932, align 8
  %3934 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 2
  %3935 = load i8, i8* %3934, align 8
  switch i8 %3935, label %4092 [
    i8 6, label %3936
    i8 4, label %3993
  ]

3936:                                             ; preds = %3929
  %3937 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %3938 = load i8, i8* %3937, align 1
  %3939 = icmp eq i8 %3938, 8
  %3940 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %3941 = load i64, i64* %3940, align 8
  %3942 = getelementptr inbounds i8, i8* %3931, i64 %3941
  %3943 = icmp ne i32 %3933, 0
  br i1 %3939, label %3945, label %3944

3944:                                             ; preds = %3936
  br i1 %3943, label %3972, label %4092

3945:                                             ; preds = %3936
  br i1 %3943, label %3946, label %4092

3946:                                             ; preds = %3945
  %3947 = and i32 %3933, 1
  %3948 = icmp eq i32 %3933, 1
  br i1 %3948, label %4056, label %3949

3949:                                             ; preds = %3946
  %3950 = sub i32 %3933, %3947
  br label %3951

3951:                                             ; preds = %3951, %3949
  %3952 = phi i8* [ %3942, %3949 ], [ %3968, %3951 ]
  %3953 = phi i32 [ %3950, %3949 ], [ %3970, %3951 ]
  %3954 = getelementptr inbounds i8, i8* %3952, i64 -1
  %3955 = load i8, i8* %3954, align 1
  %3956 = getelementptr inbounds i8, i8* %3952, i64 -2
  %3957 = load i8, i8* %3956, align 1
  store i8 %3957, i8* %3954, align 1
  %3958 = getelementptr inbounds i8, i8* %3952, i64 -3
  %3959 = load i8, i8* %3958, align 1
  store i8 %3959, i8* %3956, align 1
  %3960 = getelementptr inbounds i8, i8* %3952, i64 -4
  %3961 = load i8, i8* %3960, align 1
  store i8 %3961, i8* %3958, align 1
  store i8 %3955, i8* %3960, align 1
  %3962 = getelementptr inbounds i8, i8* %3952, i64 -5
  %3963 = load i8, i8* %3962, align 1
  %3964 = getelementptr inbounds i8, i8* %3952, i64 -6
  %3965 = load i8, i8* %3964, align 1
  store i8 %3965, i8* %3962, align 1
  %3966 = getelementptr inbounds i8, i8* %3952, i64 -7
  %3967 = load i8, i8* %3966, align 1
  store i8 %3967, i8* %3964, align 1
  %3968 = getelementptr inbounds i8, i8* %3952, i64 -8
  %3969 = load i8, i8* %3968, align 1
  store i8 %3969, i8* %3966, align 1
  store i8 %3963, i8* %3968, align 1
  %3970 = add i32 %3953, -2
  %3971 = icmp eq i32 %3970, 0
  br i1 %3971, label %4056, label %3951

3972:                                             ; preds = %3944, %3972
  %3973 = phi i32 [ %3991, %3972 ], [ 0, %3944 ]
  %3974 = phi i8* [ %3989, %3972 ], [ %3942, %3944 ]
  %3975 = getelementptr inbounds i8, i8* %3974, i64 -1
  %3976 = load i8, i8* %3975, align 1
  %3977 = getelementptr inbounds i8, i8* %3974, i64 -2
  %3978 = load i8, i8* %3977, align 1
  %3979 = getelementptr inbounds i8, i8* %3974, i64 -3
  %3980 = load i8, i8* %3979, align 1
  store i8 %3980, i8* %3975, align 1
  %3981 = getelementptr inbounds i8, i8* %3974, i64 -4
  %3982 = load i8, i8* %3981, align 1
  store i8 %3982, i8* %3977, align 1
  %3983 = getelementptr inbounds i8, i8* %3974, i64 -5
  %3984 = load i8, i8* %3983, align 1
  store i8 %3984, i8* %3979, align 1
  %3985 = getelementptr inbounds i8, i8* %3974, i64 -6
  %3986 = load i8, i8* %3985, align 1
  store i8 %3986, i8* %3981, align 1
  %3987 = getelementptr inbounds i8, i8* %3974, i64 -7
  %3988 = load i8, i8* %3987, align 1
  store i8 %3988, i8* %3983, align 1
  %3989 = getelementptr inbounds i8, i8* %3974, i64 -8
  %3990 = load i8, i8* %3989, align 1
  store i8 %3990, i8* %3985, align 1
  store i8 %3976, i8* %3987, align 1
  store i8 %3978, i8* %3989, align 1
  %3991 = add nuw i32 %3973, 1
  %3992 = icmp eq i32 %3991, %3933
  br i1 %3992, label %4092, label %3972

3993:                                             ; preds = %3929
  %3994 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %3995 = load i8, i8* %3994, align 1
  %3996 = icmp eq i8 %3995, 8
  %3997 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %3998 = load i64, i64* %3997, align 8
  %3999 = getelementptr inbounds i8, i8* %3931, i64 %3998
  %4000 = icmp ne i32 %3933, 0
  br i1 %3996, label %4007, label %4001

4001:                                             ; preds = %3993
  br i1 %4000, label %4002, label %4092

4002:                                             ; preds = %4001
  %4003 = and i32 %3933, 1
  %4004 = icmp eq i32 %3933, 1
  br i1 %4004, label %4080, label %4005

4005:                                             ; preds = %4002
  %4006 = sub i32 %3933, %4003
  br label %4035

4007:                                             ; preds = %3993
  br i1 %4000, label %4008, label %4092

4008:                                             ; preds = %4007
  %4009 = add i32 %3933, -1
  %4010 = and i32 %3933, 3
  %4011 = icmp ult i32 %4009, 3
  br i1 %4011, label %4068, label %4012

4012:                                             ; preds = %4008
  %4013 = sub i32 %3933, %4010
  br label %4014

4014:                                             ; preds = %4014, %4012
  %4015 = phi i8* [ %3999, %4012 ], [ %4031, %4014 ]
  %4016 = phi i32 [ %4013, %4012 ], [ %4033, %4014 ]
  %4017 = getelementptr inbounds i8, i8* %4015, i64 -1
  %4018 = load i8, i8* %4017, align 1
  %4019 = getelementptr inbounds i8, i8* %4015, i64 -2
  %4020 = load i8, i8* %4019, align 1
  store i8 %4020, i8* %4017, align 1
  store i8 %4018, i8* %4019, align 1
  %4021 = getelementptr inbounds i8, i8* %4015, i64 -3
  %4022 = load i8, i8* %4021, align 1
  %4023 = getelementptr inbounds i8, i8* %4015, i64 -4
  %4024 = load i8, i8* %4023, align 1
  store i8 %4024, i8* %4021, align 1
  store i8 %4022, i8* %4023, align 1
  %4025 = getelementptr inbounds i8, i8* %4015, i64 -5
  %4026 = load i8, i8* %4025, align 1
  %4027 = getelementptr inbounds i8, i8* %4015, i64 -6
  %4028 = load i8, i8* %4027, align 1
  store i8 %4028, i8* %4025, align 1
  store i8 %4026, i8* %4027, align 1
  %4029 = getelementptr inbounds i8, i8* %4015, i64 -7
  %4030 = load i8, i8* %4029, align 1
  %4031 = getelementptr inbounds i8, i8* %4015, i64 -8
  %4032 = load i8, i8* %4031, align 1
  store i8 %4032, i8* %4029, align 1
  store i8 %4030, i8* %4031, align 1
  %4033 = add i32 %4016, -4
  %4034 = icmp eq i32 %4033, 0
  br i1 %4034, label %4068, label %4014

4035:                                             ; preds = %4035, %4005
  %4036 = phi i8* [ %3999, %4005 ], [ %4052, %4035 ]
  %4037 = phi i32 [ %4006, %4005 ], [ %4054, %4035 ]
  %4038 = getelementptr inbounds i8, i8* %4036, i64 -1
  %4039 = load i8, i8* %4038, align 1
  %4040 = getelementptr inbounds i8, i8* %4036, i64 -2
  %4041 = load i8, i8* %4040, align 1
  %4042 = getelementptr inbounds i8, i8* %4036, i64 -3
  %4043 = load i8, i8* %4042, align 1
  store i8 %4043, i8* %4038, align 1
  %4044 = getelementptr inbounds i8, i8* %4036, i64 -4
  %4045 = load i8, i8* %4044, align 1
  store i8 %4045, i8* %4040, align 1
  store i8 %4039, i8* %4042, align 1
  store i8 %4041, i8* %4044, align 1
  %4046 = getelementptr inbounds i8, i8* %4036, i64 -5
  %4047 = load i8, i8* %4046, align 1
  %4048 = getelementptr inbounds i8, i8* %4036, i64 -6
  %4049 = load i8, i8* %4048, align 1
  %4050 = getelementptr inbounds i8, i8* %4036, i64 -7
  %4051 = load i8, i8* %4050, align 1
  store i8 %4051, i8* %4046, align 1
  %4052 = getelementptr inbounds i8, i8* %4036, i64 -8
  %4053 = load i8, i8* %4052, align 1
  store i8 %4053, i8* %4048, align 1
  store i8 %4047, i8* %4050, align 1
  store i8 %4049, i8* %4052, align 1
  %4054 = add i32 %4037, -2
  %4055 = icmp eq i32 %4054, 0
  br i1 %4055, label %4080, label %4035

4056:                                             ; preds = %3951, %3946
  %4057 = phi i8* [ %3942, %3946 ], [ %3968, %3951 ]
  %4058 = icmp eq i32 %3947, 0
  br i1 %4058, label %4092, label %4059

4059:                                             ; preds = %4056
  %4060 = getelementptr inbounds i8, i8* %4057, i64 -1
  %4061 = load i8, i8* %4060, align 1
  %4062 = getelementptr inbounds i8, i8* %4057, i64 -2
  %4063 = load i8, i8* %4062, align 1
  store i8 %4063, i8* %4060, align 1
  %4064 = getelementptr inbounds i8, i8* %4057, i64 -3
  %4065 = load i8, i8* %4064, align 1
  store i8 %4065, i8* %4062, align 1
  %4066 = getelementptr inbounds i8, i8* %4057, i64 -4
  %4067 = load i8, i8* %4066, align 1
  store i8 %4067, i8* %4064, align 1
  store i8 %4061, i8* %4066, align 1
  br label %4092

4068:                                             ; preds = %4014, %4008
  %4069 = phi i8* [ %3999, %4008 ], [ %4031, %4014 ]
  %4070 = icmp eq i32 %4010, 0
  br i1 %4070, label %4092, label %4071

4071:                                             ; preds = %4068, %4071
  %4072 = phi i8* [ %4076, %4071 ], [ %4069, %4068 ]
  %4073 = phi i32 [ %4078, %4071 ], [ %4010, %4068 ]
  %4074 = getelementptr inbounds i8, i8* %4072, i64 -1
  %4075 = load i8, i8* %4074, align 1
  %4076 = getelementptr inbounds i8, i8* %4072, i64 -2
  %4077 = load i8, i8* %4076, align 1
  store i8 %4077, i8* %4074, align 1
  store i8 %4075, i8* %4076, align 1
  %4078 = add i32 %4073, -1
  %4079 = icmp eq i32 %4078, 0
  br i1 %4079, label %4092, label %4071, !llvm.loop !92

4080:                                             ; preds = %4035, %4002
  %4081 = phi i8* [ %3999, %4002 ], [ %4052, %4035 ]
  %4082 = icmp eq i32 %4003, 0
  br i1 %4082, label %4092, label %4083

4083:                                             ; preds = %4080
  %4084 = getelementptr inbounds i8, i8* %4081, i64 -1
  %4085 = load i8, i8* %4084, align 1
  %4086 = getelementptr inbounds i8, i8* %4081, i64 -2
  %4087 = load i8, i8* %4086, align 1
  %4088 = getelementptr inbounds i8, i8* %4081, i64 -3
  %4089 = load i8, i8* %4088, align 1
  store i8 %4089, i8* %4084, align 1
  %4090 = getelementptr inbounds i8, i8* %4081, i64 -4
  %4091 = load i8, i8* %4090, align 1
  store i8 %4091, i8* %4086, align 1
  store i8 %4085, i8* %4088, align 1
  store i8 %4087, i8* %4090, align 1
  br label %4092

4092:                                             ; preds = %4083, %4080, %4068, %4071, %3972, %4059, %4056, %4007, %4001, %3945, %3944, %3929, %3925
  %4093 = load i32, i32* %15, align 4
  %4094 = and i32 %4093, 16
  %4095 = icmp eq i32 %4094, 0
  br i1 %4095, label %4100, label %4096

4096:                                             ; preds = %4092
  %4097 = load i8*, i8** %4, align 8
  %4098 = getelementptr inbounds i8, i8* %4097, i64 1
  tail call void @cr_png_do_swap(%struct.png_row_info_struct* %1, i8* %4098) #6
  %4099 = load i32, i32* %15, align 4
  br label %4100

4100:                                             ; preds = %4092, %4096
  %4101 = phi i32 [ %4093, %4092 ], [ %4099, %4096 ]
  %4102 = and i32 %4101, 1048576
  %4103 = icmp eq i32 %4102, 0
  br i1 %4103, label %4146, label %4104

4104:                                             ; preds = %4100
  %4105 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 10
  %4106 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %4105, align 8
  %4107 = icmp eq void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %4106, null
  br i1 %4107, label %4111, label %4108

4108:                                             ; preds = %4104
  %4109 = load i8*, i8** %4, align 8
  %4110 = getelementptr inbounds i8, i8* %4109, i64 1
  tail call void %4106(%struct.png_struct_def* %0, %struct.png_row_info_struct* %1, i8* %4110) #6
  br label %4111

4111:                                             ; preds = %4104, %4108
  %4112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 13
  %4113 = load i8, i8* %4112, align 8
  %4114 = icmp eq i8 %4113, 0
  br i1 %4114, label %4117, label %4115

4115:                                             ; preds = %4111
  %4116 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  store i8 %4113, i8* %4116, align 1
  br label %4117

4117:                                             ; preds = %4111, %4115
  %4118 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 14
  %4119 = load i8, i8* %4118, align 1
  %4120 = icmp eq i8 %4119, 0
  %4121 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 4
  br i1 %4120, label %4122, label %4124

4122:                                             ; preds = %4117
  %4123 = load i8, i8* %4121, align 2
  br label %4125

4124:                                             ; preds = %4117
  store i8 %4119, i8* %4121, align 2
  br label %4125

4125:                                             ; preds = %4122, %4124
  %4126 = phi i8 [ %4123, %4122 ], [ %4119, %4124 ]
  %4127 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 3
  %4128 = load i8, i8* %4127, align 1
  %4129 = mul i8 %4126, %4128
  %4130 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 5
  store i8 %4129, i8* %4130, align 1
  %4131 = icmp ugt i8 %4129, 7
  %4132 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 0
  %4133 = load i32, i32* %4132, align 8
  %4134 = zext i32 %4133 to i64
  %4135 = zext i8 %4129 to i64
  br i1 %4131, label %4136, label %4139

4136:                                             ; preds = %4125
  %4137 = lshr i64 %4135, 3
  %4138 = mul nuw nsw i64 %4137, %4134
  br label %4143

4139:                                             ; preds = %4125
  %4140 = mul nuw nsw i64 %4134, %4135
  %4141 = add nuw nsw i64 %4140, 7
  %4142 = lshr i64 %4141, 3
  br label %4143

4143:                                             ; preds = %4139, %4136
  %4144 = phi i64 [ %4138, %4136 ], [ %4142, %4139 ]
  %4145 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  store i64 %4144, i64* %4145, align 8
  br label %4146

4146:                                             ; preds = %4100, %4143
  ret void

4147:                                             ; preds = %3066
  %4148 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %4149 = load i32, i32* %4148, align 4
  %4150 = icmp sgt i32 %4149, 0
  %4151 = icmp slt i32 %4149, %3023
  %4152 = and i1 %4150, %4151
  br i1 %4152, label %4154, label %4153

4153:                                             ; preds = %4147
  store i32 0, i32* %4148, align 4
  br label %4154

4154:                                             ; preds = %4153, %4147
  %4155 = phi i32 [ %3067, %4153 ], [ 1, %4147 ]
  %4156 = icmp eq i32 %3059, 2
  br i1 %4156, label %3069, label %4157

4157:                                             ; preds = %4154
  %4158 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %4159 = load i32, i32* %4158, align 8
  %4160 = icmp sgt i32 %4159, 0
  %4161 = icmp slt i32 %4159, %3023
  %4162 = and i1 %4160, %4161
  br i1 %4162, label %4164, label %4163

4163:                                             ; preds = %4157
  store i32 0, i32* %4158, align 8
  br label %4164

4164:                                             ; preds = %4163, %4157
  %4165 = phi i32 [ %4155, %4163 ], [ 1, %4157 ]
  %4166 = icmp eq i32 %3059, 3
  br i1 %4166, label %3069, label %4167

4167:                                             ; preds = %4164
  %4168 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %4169 = load i32, i32* %4168, align 4
  %4170 = icmp sgt i32 %4169, 0
  %4171 = icmp slt i32 %4169, %3023
  %4172 = and i1 %4170, %4171
  br i1 %4172, label %3069, label %4173

4173:                                             ; preds = %4167
  store i32 0, i32* %4168, align 4
  br label %3069

4174:                                             ; preds = %1025
  %4175 = load i16, i16* %990, align 4, !alias.scope !71
  %4176 = trunc i16 %4175 to i8
  store i8 %4176, i8* %1026, align 1, !noalias !71
  br label %4177

4177:                                             ; preds = %4174, %1025
  %4178 = getelementptr inbounds i8, i8* %1017, i64 2
  %4179 = add i32 %1018, -2
  %4180 = icmp eq i32 %4179, 0
  br i1 %4180, label %2092, label %1016

4181:                                             ; preds = %1010
  %4182 = zext i8 %1013 to i64
  %4183 = getelementptr inbounds i8, i8* %750, i64 %4182
  %4184 = load i8, i8* %4183, align 1
  br label %4188

4185:                                             ; preds = %1010
  %4186 = load i16, i16* %980, align 4, !alias.scope !71
  %4187 = trunc i16 %4186 to i8
  br label %4188

4188:                                             ; preds = %4185, %4181
  %4189 = phi i8 [ %4184, %4181 ], [ %4187, %4185 ]
  store i8 %4189, i8* %1012, align 1, !noalias !71
  %4190 = getelementptr inbounds i8, i8* %998, i64 2
  %4191 = add i32 %999, -2
  %4192 = icmp eq i32 %4191, 0
  br i1 %4192, label %2102, label %997

4193:                                             ; preds = %1092
  %4194 = load i16, i16* %1042, align 4, !alias.scope !71
  %4195 = lshr i16 %4194, 8
  %4196 = trunc i16 %4195 to i8
  store i8 %4196, i8* %1093, align 1, !noalias !71
  %4197 = trunc i16 %4194 to i8
  store i8 %4197, i8* %1097, align 1, !noalias !71
  br label %4198

4198:                                             ; preds = %4193, %1092
  %4199 = getelementptr inbounds i8, i8* %1077, i64 4
  %4200 = add i32 %1078, -2
  %4201 = icmp eq i32 %4200, 0
  br i1 %4201, label %2118, label %1076
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @cr_png_do_expand(%struct.png_row_info_struct* nocapture, i8* nocapture, %struct.png_color_16_struct* readonly) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %291

9:                                                ; preds = %3
  %10 = icmp ne %struct.png_color_16_struct* %2, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 4
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  br label %15

15:                                               ; preds = %9, %11
  %16 = phi i32 [ %14, %11 ], [ 0, %9 ]
  %17 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 3
  %18 = load i8, i8* %17, align 1
  %19 = icmp ult i8 %18, 8
  br i1 %19, label %20, label %190

20:                                               ; preds = %15
  switch i8 %18, label %21 [
    i8 1, label %23
    i8 2, label %72
    i8 4, label %111
  ]

21:                                               ; preds = %20
  %22 = zext i32 %5 to i64
  br label %185

23:                                               ; preds = %20
  %24 = and i32 %16, 1
  %25 = mul nuw nsw i32 %24, 255
  %26 = zext i32 %5 to i64
  %27 = icmp eq i32 %5, 0
  br i1 %27, label %185, label %28

28:                                               ; preds = %23
  %29 = add i32 %5, 7
  %30 = and i32 %29, 7
  %31 = xor i32 %30, 7
  %32 = getelementptr inbounds i8, i8* %1, i64 %26
  %33 = add i32 %5, -1
  %34 = lshr i32 %33, 3
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  %37 = and i32 %5, 1
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %158, label %39

39:                                               ; preds = %28
  %40 = sub i32 %5, %37
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i8* [ %32, %39 ], [ %58, %41 ]
  %43 = phi i8* [ %36, %39 ], [ %69, %41 ]
  %44 = phi i32 [ %31, %39 ], [ %68, %41 ]
  %45 = phi i32 [ %40, %39 ], [ %70, %41 ]
  %46 = getelementptr inbounds i8, i8* %42, i64 -1
  %47 = load i8, i8* %43, align 1
  %48 = zext i8 %47 to i32
  %49 = shl i32 1, %44
  %50 = and i32 %49, %48
  %51 = icmp ne i32 %50, 0
  %52 = sext i1 %51 to i8
  store i8 %52, i8* %46, align 1
  %53 = icmp eq i32 %44, 7
  %54 = getelementptr inbounds i8, i8* %43, i64 -1
  %55 = add nsw i32 %44, 1
  %56 = select i1 %53, i32 0, i32 %55
  %57 = select i1 %53, i8* %54, i8* %43
  %58 = getelementptr inbounds i8, i8* %42, i64 -2
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i32
  %61 = shl i32 1, %56
  %62 = and i32 %61, %60
  %63 = icmp ne i32 %62, 0
  %64 = sext i1 %63 to i8
  store i8 %64, i8* %58, align 1
  %65 = icmp eq i32 %56, 7
  %66 = getelementptr inbounds i8, i8* %57, i64 -1
  %67 = add nsw i32 %56, 1
  %68 = select i1 %65, i32 0, i32 %67
  %69 = select i1 %65, i8* %66, i8* %57
  %70 = add i32 %45, -2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %158, label %41

72:                                               ; preds = %20
  %73 = and i32 %16, 3
  %74 = mul nuw nsw i32 %73, 85
  %75 = zext i32 %5 to i64
  %76 = icmp eq i32 %5, 0
  br i1 %76, label %185, label %77

77:                                               ; preds = %72
  %78 = shl i32 %5, 1
  %79 = add i32 %78, 6
  %80 = and i32 %79, 6
  %81 = xor i32 %80, 6
  %82 = getelementptr inbounds i8, i8* %1, i64 %75
  %83 = add i32 %5, -1
  %84 = lshr i32 %83, 2
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %1, i64 %85
  br label %87

87:                                               ; preds = %87, %77
  %88 = phi i8* [ %92, %87 ], [ %82, %77 ]
  %89 = phi i32 [ %109, %87 ], [ 0, %77 ]
  %90 = phi i8* [ %108, %87 ], [ %86, %77 ]
  %91 = phi i32 [ %107, %87 ], [ %81, %77 ]
  %92 = getelementptr inbounds i8, i8* %88, i64 -1
  %93 = load i8, i8* %90, align 1
  %94 = zext i8 %93 to i32
  %95 = lshr i32 %94, %91
  %96 = and i32 %95, 3
  %97 = shl nuw nsw i32 %96, 2
  %98 = or i32 %97, %96
  %99 = shl nuw nsw i32 %96, 4
  %100 = or i32 %98, %99
  %101 = shl nuw nsw i32 %96, 6
  %102 = or i32 %100, %101
  %103 = trunc i32 %102 to i8
  store i8 %103, i8* %92, align 1
  %104 = icmp eq i32 %91, 6
  %105 = getelementptr inbounds i8, i8* %90, i64 -1
  %106 = add nsw i32 %91, 2
  %107 = select i1 %104, i32 0, i32 %106
  %108 = select i1 %104, i8* %105, i8* %90
  %109 = add nuw i32 %89, 1
  %110 = icmp eq i32 %109, %5
  br i1 %110, label %185, label %87

111:                                              ; preds = %20
  %112 = and i32 %16, 15
  %113 = mul nuw nsw i32 %112, 17
  %114 = zext i32 %5 to i64
  %115 = icmp eq i32 %5, 0
  br i1 %115, label %185, label %116

116:                                              ; preds = %111
  %117 = shl i32 %5, 2
  %118 = and i32 %117, 4
  %119 = getelementptr inbounds i8, i8* %1, i64 %114
  %120 = add i32 %5, -1
  %121 = lshr i32 %120, 1
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %1, i64 %122
  %124 = and i32 %5, 1
  %125 = icmp eq i32 %120, 0
  br i1 %125, label %171, label %126

126:                                              ; preds = %116
  %127 = sub i32 %5, %124
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi i8* [ %119, %126 ], [ %145, %128 ]
  %130 = phi i8* [ %123, %126 ], [ %155, %128 ]
  %131 = phi i32 [ %118, %126 ], [ %154, %128 ]
  %132 = phi i32 [ %127, %126 ], [ %156, %128 ]
  %133 = getelementptr inbounds i8, i8* %129, i64 -1
  %134 = load i8, i8* %130, align 1
  %135 = zext i8 %134 to i32
  %136 = lshr i32 %135, %131
  %137 = and i32 %136, 15
  %138 = shl nuw nsw i32 %137, 4
  %139 = or i32 %138, %137
  %140 = trunc i32 %139 to i8
  store i8 %140, i8* %133, align 1
  %141 = icmp eq i32 %131, 4
  %142 = getelementptr inbounds i8, i8* %130, i64 -1
  %143 = select i1 %141, i32 0, i32 4
  %144 = select i1 %141, i8* %142, i8* %130
  %145 = getelementptr inbounds i8, i8* %129, i64 -2
  %146 = load i8, i8* %144, align 1
  %147 = zext i8 %146 to i32
  %148 = lshr i32 %147, %143
  %149 = and i32 %148, 15
  %150 = shl nuw nsw i32 %148, 4
  %151 = or i32 %150, %149
  %152 = trunc i32 %151 to i8
  store i8 %152, i8* %145, align 1
  %153 = getelementptr inbounds i8, i8* %144, i64 -1
  %154 = select i1 %141, i32 4, i32 0
  %155 = select i1 %141, i8* %142, i8* %153
  %156 = add i32 %132, -2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %171, label %128

158:                                              ; preds = %41, %28
  %159 = phi i8* [ %32, %28 ], [ %58, %41 ]
  %160 = phi i8* [ %36, %28 ], [ %69, %41 ]
  %161 = phi i32 [ %31, %28 ], [ %68, %41 ]
  %162 = icmp eq i32 %37, 0
  br i1 %162, label %185, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds i8, i8* %159, i64 -1
  %165 = load i8, i8* %160, align 1
  %166 = zext i8 %165 to i32
  %167 = shl i32 1, %161
  %168 = and i32 %167, %166
  %169 = icmp ne i32 %168, 0
  %170 = sext i1 %169 to i8
  store i8 %170, i8* %164, align 1
  br label %185

171:                                              ; preds = %128, %116
  %172 = phi i8* [ %119, %116 ], [ %145, %128 ]
  %173 = phi i8* [ %123, %116 ], [ %155, %128 ]
  %174 = phi i32 [ %118, %116 ], [ %154, %128 ]
  %175 = icmp eq i32 %124, 0
  br i1 %175, label %185, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds i8, i8* %172, i64 -1
  %178 = load i8, i8* %173, align 1
  %179 = zext i8 %178 to i32
  %180 = lshr i32 %179, %174
  %181 = and i32 %180, 15
  %182 = shl nuw nsw i32 %181, 4
  %183 = or i32 %182, %181
  %184 = trunc i32 %183 to i8
  store i8 %184, i8* %177, align 1
  br label %185

185:                                              ; preds = %176, %171, %87, %163, %158, %21, %23, %72, %111
  %186 = phi i64 [ %22, %21 ], [ 0, %23 ], [ 0, %72 ], [ 0, %111 ], [ %26, %158 ], [ %26, %163 ], [ %75, %87 ], [ %114, %171 ], [ %114, %176 ]
  %187 = phi i32 [ %16, %21 ], [ %25, %23 ], [ %74, %72 ], [ %113, %111 ], [ %25, %158 ], [ %25, %163 ], [ %74, %87 ], [ %113, %171 ], [ %113, %176 ]
  store i8 8, i8* %17, align 1
  %188 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 5
  store i8 8, i8* %188, align 1
  %189 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  store i64 %186, i64* %189, align 8
  br label %190

190:                                              ; preds = %185, %15
  %191 = phi i8 [ 8, %185 ], [ %18, %15 ]
  %192 = phi i32 [ %187, %185 ], [ %16, %15 ]
  br i1 %10, label %193, label %455

193:                                              ; preds = %190
  switch i8 %191, label %273 [
    i8 8, label %194
    i8 16, label %227
  ]

194:                                              ; preds = %193
  %195 = zext i32 %5 to i64
  %196 = icmp eq i32 %5, 0
  br i1 %196, label %273, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds i8, i8* %1, i64 %195
  %199 = shl nuw nsw i64 %195, 1
  %200 = getelementptr inbounds i8, i8* %1, i64 %199
  %201 = getelementptr inbounds i8, i8* %200, i64 -1
  %202 = trunc i32 %192 to i8
  %203 = and i32 %5, 1
  %204 = icmp eq i32 %5, 1
  br i1 %204, label %262, label %205

205:                                              ; preds = %197
  %206 = sub i32 %5, %203
  br label %207

207:                                              ; preds = %207, %205
  %208 = phi i8* [ %198, %205 ], [ %218, %207 ]
  %209 = phi i8* [ %201, %205 ], [ %224, %207 ]
  %210 = phi i32 [ %206, %205 ], [ %225, %207 ]
  %211 = getelementptr inbounds i8, i8* %208, i64 -1
  %212 = load i8, i8* %211, align 1
  %213 = icmp ne i8 %212, %202
  %214 = getelementptr inbounds i8, i8* %209, i64 -1
  %215 = sext i1 %213 to i8
  store i8 %215, i8* %209, align 1
  %216 = load i8, i8* %211, align 1
  %217 = getelementptr inbounds i8, i8* %209, i64 -2
  store i8 %216, i8* %214, align 1
  %218 = getelementptr inbounds i8, i8* %208, i64 -2
  %219 = load i8, i8* %218, align 1
  %220 = icmp ne i8 %219, %202
  %221 = getelementptr inbounds i8, i8* %209, i64 -3
  %222 = sext i1 %220 to i8
  store i8 %222, i8* %217, align 1
  %223 = load i8, i8* %218, align 1
  %224 = getelementptr inbounds i8, i8* %209, i64 -4
  store i8 %223, i8* %221, align 1
  %225 = add i32 %210, -2
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %262, label %207

227:                                              ; preds = %193
  %228 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %229 = load i64, i64* %228, align 8
  %230 = icmp eq i32 %5, 0
  br i1 %230, label %273, label %231

231:                                              ; preds = %227
  %232 = shl i64 %229, 1
  %233 = getelementptr inbounds i8, i8* %1, i64 %232
  %234 = getelementptr inbounds i8, i8* %233, i64 -1
  %235 = getelementptr inbounds i8, i8* %1, i64 %229
  %236 = getelementptr inbounds i8, i8* %235, i64 -1
  %237 = lshr i32 %192, 8
  %238 = trunc i32 %237 to i8
  %239 = trunc i32 %192 to i8
  br label %240

240:                                              ; preds = %251, %231
  %241 = phi i32 [ 0, %231 ], [ %260, %251 ]
  %242 = phi i8* [ %234, %231 ], [ %259, %251 ]
  %243 = phi i8* [ %236, %231 ], [ %257, %251 ]
  %244 = getelementptr inbounds i8, i8* %243, i64 -1
  %245 = load i8, i8* %244, align 1
  %246 = icmp eq i8 %245, %238
  br i1 %246, label %247, label %250

247:                                              ; preds = %240
  %248 = load i8, i8* %243, align 1
  %249 = icmp eq i8 %248, %239
  br i1 %249, label %251, label %250

250:                                              ; preds = %247, %240
  br label %251

251:                                              ; preds = %247, %250
  %252 = phi i8 [ -1, %250 ], [ 0, %247 ]
  %253 = getelementptr inbounds i8, i8* %242, i64 -1
  store i8 %252, i8* %242, align 1
  store i8 %252, i8* %253, align 1
  %254 = getelementptr inbounds i8, i8* %242, i64 -2
  %255 = load i8, i8* %243, align 1
  %256 = getelementptr inbounds i8, i8* %242, i64 -3
  store i8 %255, i8* %254, align 1
  %257 = getelementptr inbounds i8, i8* %243, i64 -2
  %258 = load i8, i8* %244, align 1
  %259 = getelementptr inbounds i8, i8* %242, i64 -4
  store i8 %258, i8* %256, align 1
  %260 = add nuw i32 %241, 1
  %261 = icmp eq i32 %260, %5
  br i1 %261, label %273, label %240

262:                                              ; preds = %207, %197
  %263 = phi i8* [ %198, %197 ], [ %218, %207 ]
  %264 = phi i8* [ %201, %197 ], [ %224, %207 ]
  %265 = icmp eq i32 %203, 0
  br i1 %265, label %273, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds i8, i8* %263, i64 -1
  %268 = load i8, i8* %267, align 1
  %269 = icmp ne i8 %268, %202
  %270 = getelementptr inbounds i8, i8* %264, i64 -1
  %271 = sext i1 %269 to i8
  store i8 %271, i8* %264, align 1
  %272 = load i8, i8* %267, align 1
  store i8 %272, i8* %270, align 1
  br label %273

273:                                              ; preds = %251, %266, %262, %194, %227, %193
  store i8 4, i8* %6, align 8
  %274 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 4
  store i8 2, i8* %274, align 2
  %275 = load i8, i8* %17, align 1
  %276 = shl i8 %275, 1
  %277 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 5
  store i8 %276, i8* %277, align 1
  %278 = icmp ugt i8 %276, 7
  %279 = zext i32 %5 to i64
  %280 = zext i8 %276 to i64
  br i1 %278, label %281, label %284

281:                                              ; preds = %273
  %282 = lshr i64 %280, 3
  %283 = mul nuw nsw i64 %282, %279
  br label %288

284:                                              ; preds = %273
  %285 = mul nuw nsw i64 %280, %279
  %286 = add nuw nsw i64 %285, 7
  %287 = lshr i64 %286, 3
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %283, %281 ], [ %287, %284 ]
  %290 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  store i64 %289, i64* %290, align 8
  br label %455

291:                                              ; preds = %3
  %292 = icmp eq i8 %7, 2
  %293 = icmp ne %struct.png_color_16_struct* %2, null
  %294 = and i1 %293, %292
  br i1 %294, label %295, label %455

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 3
  %297 = load i8, i8* %296, align 1
  switch i8 %297, label %437 [
    i8 8, label %298
    i8 16, label %352
  ]

298:                                              ; preds = %295
  %299 = icmp eq i32 %5, 0
  br i1 %299, label %437, label %300

300:                                              ; preds = %298
  %301 = zext i32 %5 to i64
  %302 = shl nuw nsw i64 %301, 2
  %303 = getelementptr inbounds i8, i8* %1, i64 %302
  %304 = getelementptr inbounds i8, i8* %303, i64 -1
  %305 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %306 = load i64, i64* %305, align 8
  %307 = getelementptr inbounds i8, i8* %1, i64 %306
  %308 = getelementptr inbounds i8, i8* %307, i64 -1
  %309 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 3
  %310 = load i16, i16* %309, align 2
  %311 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 2
  %312 = load i16, i16* %311, align 2
  %313 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 1
  %314 = load i16, i16* %313, align 2
  %315 = and i16 %314, 255
  %316 = zext i16 %315 to i32
  %317 = and i16 %312, 255
  %318 = zext i16 %317 to i32
  %319 = and i16 %310, 255
  %320 = zext i16 %319 to i32
  br label %321

321:                                              ; preds = %339, %300
  %322 = phi i32 [ 0, %300 ], [ %350, %339 ]
  %323 = phi i8* [ %304, %300 ], [ %349, %339 ]
  %324 = phi i8* [ %308, %300 ], [ %347, %339 ]
  %325 = getelementptr inbounds i8, i8* %324, i64 -2
  %326 = load i8, i8* %325, align 1
  %327 = zext i8 %326 to i32
  %328 = icmp eq i32 %327, %316
  br i1 %328, label %329, label %338

329:                                              ; preds = %321
  %330 = getelementptr inbounds i8, i8* %324, i64 -1
  %331 = load i8, i8* %330, align 1
  %332 = zext i8 %331 to i32
  %333 = icmp eq i32 %332, %318
  br i1 %333, label %334, label %338

334:                                              ; preds = %329
  %335 = load i8, i8* %324, align 1
  %336 = zext i8 %335 to i32
  %337 = icmp eq i32 %336, %320
  br i1 %337, label %339, label %338

338:                                              ; preds = %334, %329, %321
  br label %339

339:                                              ; preds = %334, %338
  %340 = phi i8 [ -1, %338 ], [ 0, %334 ]
  %341 = getelementptr inbounds i8, i8* %323, i64 -1
  store i8 %340, i8* %323, align 1
  %342 = getelementptr inbounds i8, i8* %324, i64 -1
  %343 = load i8, i8* %324, align 1
  %344 = getelementptr inbounds i8, i8* %323, i64 -2
  store i8 %343, i8* %341, align 1
  %345 = load i8, i8* %342, align 1
  %346 = getelementptr inbounds i8, i8* %323, i64 -3
  store i8 %345, i8* %344, align 1
  %347 = getelementptr inbounds i8, i8* %324, i64 -3
  %348 = load i8, i8* %325, align 1
  %349 = getelementptr inbounds i8, i8* %323, i64 -4
  store i8 %348, i8* %346, align 1
  %350 = add nuw i32 %322, 1
  %351 = icmp eq i32 %350, %5
  br i1 %351, label %437, label %321

352:                                              ; preds = %295
  %353 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 1
  %354 = load i16, i16* %353, align 2
  %355 = lshr i16 %354, 8
  %356 = zext i16 %355 to i32
  %357 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 2
  %358 = load i16, i16* %357, align 2
  %359 = lshr i16 %358, 8
  %360 = zext i16 %359 to i32
  %361 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 3
  %362 = load i16, i16* %361, align 2
  %363 = lshr i16 %362, 8
  %364 = zext i16 %363 to i32
  %365 = icmp eq i32 %5, 0
  br i1 %365, label %437, label %366

366:                                              ; preds = %352
  %367 = zext i32 %5 to i64
  %368 = shl nuw nsw i64 %367, 3
  %369 = getelementptr inbounds i8, i8* %1, i64 %368
  %370 = getelementptr inbounds i8, i8* %369, i64 -1
  %371 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %372 = load i64, i64* %371, align 8
  %373 = getelementptr inbounds i8, i8* %1, i64 %372
  %374 = getelementptr inbounds i8, i8* %373, i64 -1
  %375 = and i16 %354, 255
  %376 = zext i16 %375 to i32
  %377 = and i16 %358, 255
  %378 = zext i16 %377 to i32
  %379 = and i16 %362, 255
  %380 = zext i16 %379 to i32
  br label %381

381:                                              ; preds = %414, %366
  %382 = phi i32 [ 0, %366 ], [ %435, %414 ]
  %383 = phi i8* [ %370, %366 ], [ %434, %414 ]
  %384 = phi i8* [ %374, %366 ], [ %432, %414 ]
  %385 = getelementptr inbounds i8, i8* %384, i64 -5
  %386 = load i8, i8* %385, align 1
  %387 = zext i8 %386 to i32
  %388 = icmp eq i32 %387, %356
  br i1 %388, label %389, label %413

389:                                              ; preds = %381
  %390 = getelementptr inbounds i8, i8* %384, i64 -4
  %391 = load i8, i8* %390, align 1
  %392 = zext i8 %391 to i32
  %393 = icmp eq i32 %392, %376
  br i1 %393, label %394, label %413

394:                                              ; preds = %389
  %395 = getelementptr inbounds i8, i8* %384, i64 -3
  %396 = load i8, i8* %395, align 1
  %397 = zext i8 %396 to i32
  %398 = icmp eq i32 %397, %360
  br i1 %398, label %399, label %413

399:                                              ; preds = %394
  %400 = getelementptr inbounds i8, i8* %384, i64 -2
  %401 = load i8, i8* %400, align 1
  %402 = zext i8 %401 to i32
  %403 = icmp eq i32 %402, %378
  br i1 %403, label %404, label %413

404:                                              ; preds = %399
  %405 = getelementptr inbounds i8, i8* %384, i64 -1
  %406 = load i8, i8* %405, align 1
  %407 = zext i8 %406 to i32
  %408 = icmp eq i32 %407, %364
  br i1 %408, label %409, label %413

409:                                              ; preds = %404
  %410 = load i8, i8* %384, align 1
  %411 = zext i8 %410 to i32
  %412 = icmp eq i32 %411, %380
  br i1 %412, label %414, label %413

413:                                              ; preds = %409, %404, %399, %394, %389, %381
  br label %414

414:                                              ; preds = %409, %413
  %415 = phi i8 [ -1, %413 ], [ 0, %409 ]
  %416 = getelementptr inbounds i8, i8* %383, i64 -1
  store i8 %415, i8* %383, align 1
  store i8 %415, i8* %416, align 1
  %417 = getelementptr inbounds i8, i8* %383, i64 -2
  %418 = getelementptr inbounds i8, i8* %384, i64 -1
  %419 = load i8, i8* %384, align 1
  %420 = getelementptr inbounds i8, i8* %383, i64 -3
  store i8 %419, i8* %417, align 1
  %421 = getelementptr inbounds i8, i8* %384, i64 -2
  %422 = load i8, i8* %418, align 1
  %423 = getelementptr inbounds i8, i8* %383, i64 -4
  store i8 %422, i8* %420, align 1
  %424 = getelementptr inbounds i8, i8* %384, i64 -3
  %425 = load i8, i8* %421, align 1
  %426 = getelementptr inbounds i8, i8* %383, i64 -5
  store i8 %425, i8* %423, align 1
  %427 = getelementptr inbounds i8, i8* %384, i64 -4
  %428 = load i8, i8* %424, align 1
  %429 = getelementptr inbounds i8, i8* %383, i64 -6
  store i8 %428, i8* %426, align 1
  %430 = load i8, i8* %427, align 1
  %431 = getelementptr inbounds i8, i8* %383, i64 -7
  store i8 %430, i8* %429, align 1
  %432 = getelementptr inbounds i8, i8* %384, i64 -6
  %433 = load i8, i8* %385, align 1
  %434 = getelementptr inbounds i8, i8* %383, i64 -8
  store i8 %433, i8* %431, align 1
  %435 = add nuw i32 %382, 1
  %436 = icmp eq i32 %435, %5
  br i1 %436, label %437, label %381

437:                                              ; preds = %414, %339, %298, %352, %295
  store i8 6, i8* %6, align 8
  %438 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 4
  store i8 4, i8* %438, align 2
  %439 = load i8, i8* %296, align 1
  %440 = shl i8 %439, 2
  %441 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 5
  store i8 %440, i8* %441, align 1
  %442 = icmp ugt i8 %440, 7
  %443 = zext i32 %5 to i64
  %444 = zext i8 %440 to i64
  br i1 %442, label %445, label %448

445:                                              ; preds = %437
  %446 = lshr i64 %444, 3
  %447 = mul nuw nsw i64 %446, %443
  br label %452

448:                                              ; preds = %437
  %449 = mul nuw nsw i64 %444, %443
  %450 = add nuw nsw i64 %449, 7
  %451 = lshr i64 %450, 3
  br label %452

452:                                              ; preds = %448, %445
  %453 = phi i64 [ %447, %445 ], [ %451, %448 ]
  %454 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  store i64 %453, i64* %454, align 8
  br label %455

455:                                              ; preds = %190, %288, %291, %452
  ret void
}

declare void @cr_png_do_strip_channel(%struct.png_row_info_struct*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @cr_png_do_gray_to_rgb(%struct.png_row_info_struct* nocapture, i8* nocapture) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 1
  %7 = icmp ugt i8 %6, 7
  br i1 %7, label %8, label %231

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %231

13:                                               ; preds = %8
  switch i8 %10, label %14 [
    i8 0, label %16
    i8 4, label %96
  ]

14:                                               ; preds = %13
  %15 = zext i32 %4 to i64
  br label %209

16:                                               ; preds = %13
  %17 = icmp eq i8 %6, 8
  %18 = zext i32 %4 to i64
  br i1 %17, label %19, label %50

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %1, i64 %18
  %21 = getelementptr inbounds i8, i8* %20, i64 -1
  %22 = icmp eq i32 %4, 0
  br i1 %22, label %209, label %23

23:                                               ; preds = %19
  %24 = shl nuw nsw i64 %18, 1
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  %26 = and i32 %4, 1
  %27 = icmp eq i32 %4, 1
  br i1 %27, label %169, label %28

28:                                               ; preds = %23
  %29 = sub i32 %4, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i8* [ %25, %28 ], [ %47, %30 ]
  %32 = phi i8* [ %21, %28 ], [ %45, %30 ]
  %33 = phi i32 [ %29, %28 ], [ %48, %30 ]
  %34 = load i8, i8* %32, align 1
  %35 = getelementptr inbounds i8, i8* %31, i64 -1
  store i8 %34, i8* %31, align 1
  %36 = load i8, i8* %32, align 1
  %37 = getelementptr inbounds i8, i8* %31, i64 -2
  store i8 %36, i8* %35, align 1
  %38 = getelementptr inbounds i8, i8* %32, i64 -1
  %39 = load i8, i8* %32, align 1
  %40 = getelementptr inbounds i8, i8* %31, i64 -3
  store i8 %39, i8* %37, align 1
  %41 = load i8, i8* %38, align 1
  %42 = getelementptr inbounds i8, i8* %31, i64 -4
  store i8 %41, i8* %40, align 1
  %43 = load i8, i8* %38, align 1
  %44 = getelementptr inbounds i8, i8* %31, i64 -5
  store i8 %43, i8* %42, align 1
  %45 = getelementptr inbounds i8, i8* %32, i64 -2
  %46 = load i8, i8* %38, align 1
  %47 = getelementptr inbounds i8, i8* %31, i64 -6
  store i8 %46, i8* %44, align 1
  %48 = add i32 %33, -2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %169, label %30

50:                                               ; preds = %16
  %51 = shl nuw nsw i64 %18, 1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = getelementptr inbounds i8, i8* %52, i64 -1
  %54 = icmp eq i32 %4, 0
  br i1 %54, label %209, label %55

55:                                               ; preds = %50
  %56 = shl nuw nsw i64 %18, 2
  %57 = getelementptr inbounds i8, i8* %53, i64 %56
  %58 = and i32 %4, 1
  %59 = icmp eq i32 %4, 1
  br i1 %59, label %179, label %60

60:                                               ; preds = %55
  %61 = sub i32 %4, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i8* [ %57, %60 ], [ %93, %62 ]
  %64 = phi i8* [ %53, %60 ], [ %91, %62 ]
  %65 = phi i32 [ %61, %60 ], [ %94, %62 ]
  %66 = load i8, i8* %64, align 1
  %67 = getelementptr inbounds i8, i8* %63, i64 -1
  store i8 %66, i8* %63, align 1
  %68 = getelementptr inbounds i8, i8* %64, i64 -1
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %63, i64 -2
  store i8 %69, i8* %67, align 1
  %71 = load i8, i8* %64, align 1
  %72 = getelementptr inbounds i8, i8* %63, i64 -3
  store i8 %71, i8* %70, align 1
  %73 = load i8, i8* %68, align 1
  %74 = getelementptr inbounds i8, i8* %63, i64 -4
  store i8 %73, i8* %72, align 1
  %75 = load i8, i8* %64, align 1
  %76 = getelementptr inbounds i8, i8* %63, i64 -5
  store i8 %75, i8* %74, align 1
  %77 = getelementptr inbounds i8, i8* %64, i64 -2
  %78 = load i8, i8* %68, align 1
  %79 = getelementptr inbounds i8, i8* %63, i64 -6
  store i8 %78, i8* %76, align 1
  %80 = load i8, i8* %77, align 1
  %81 = getelementptr inbounds i8, i8* %63, i64 -7
  store i8 %80, i8* %79, align 1
  %82 = getelementptr inbounds i8, i8* %64, i64 -3
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds i8, i8* %63, i64 -8
  store i8 %83, i8* %81, align 1
  %85 = load i8, i8* %77, align 1
  %86 = getelementptr inbounds i8, i8* %63, i64 -9
  store i8 %85, i8* %84, align 1
  %87 = load i8, i8* %82, align 1
  %88 = getelementptr inbounds i8, i8* %63, i64 -10
  store i8 %87, i8* %86, align 1
  %89 = load i8, i8* %77, align 1
  %90 = getelementptr inbounds i8, i8* %63, i64 -11
  store i8 %89, i8* %88, align 1
  %91 = getelementptr inbounds i8, i8* %64, i64 -4
  %92 = load i8, i8* %82, align 1
  %93 = getelementptr inbounds i8, i8* %63, i64 -12
  store i8 %92, i8* %90, align 1
  %94 = add i32 %65, -2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %179, label %62

96:                                               ; preds = %13
  %97 = icmp eq i8 %6, 8
  %98 = zext i32 %4 to i64
  br i1 %97, label %99, label %136

99:                                               ; preds = %96
  %100 = shl nuw nsw i64 %98, 1
  %101 = getelementptr inbounds i8, i8* %1, i64 %100
  %102 = getelementptr inbounds i8, i8* %101, i64 -1
  %103 = icmp eq i32 %4, 0
  br i1 %103, label %209, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds i8, i8* %102, i64 %100
  %106 = and i32 %4, 1
  %107 = icmp eq i32 %4, 1
  br i1 %107, label %196, label %108

108:                                              ; preds = %104
  %109 = sub i32 %4, %106
  br label %110

110:                                              ; preds = %110, %108
  %111 = phi i8* [ %105, %108 ], [ %133, %110 ]
  %112 = phi i8* [ %102, %108 ], [ %131, %110 ]
  %113 = phi i32 [ %109, %108 ], [ %134, %110 ]
  %114 = getelementptr inbounds i8, i8* %112, i64 -1
  %115 = load i8, i8* %112, align 1
  %116 = getelementptr inbounds i8, i8* %111, i64 -1
  store i8 %115, i8* %111, align 1
  %117 = load i8, i8* %114, align 1
  %118 = getelementptr inbounds i8, i8* %111, i64 -2
  store i8 %117, i8* %116, align 1
  %119 = load i8, i8* %114, align 1
  %120 = getelementptr inbounds i8, i8* %111, i64 -3
  store i8 %119, i8* %118, align 1
  %121 = getelementptr inbounds i8, i8* %112, i64 -2
  %122 = load i8, i8* %114, align 1
  %123 = getelementptr inbounds i8, i8* %111, i64 -4
  store i8 %122, i8* %120, align 1
  %124 = getelementptr inbounds i8, i8* %112, i64 -3
  %125 = load i8, i8* %121, align 1
  %126 = getelementptr inbounds i8, i8* %111, i64 -5
  store i8 %125, i8* %123, align 1
  %127 = load i8, i8* %124, align 1
  %128 = getelementptr inbounds i8, i8* %111, i64 -6
  store i8 %127, i8* %126, align 1
  %129 = load i8, i8* %124, align 1
  %130 = getelementptr inbounds i8, i8* %111, i64 -7
  store i8 %129, i8* %128, align 1
  %131 = getelementptr inbounds i8, i8* %112, i64 -4
  %132 = load i8, i8* %124, align 1
  %133 = getelementptr inbounds i8, i8* %111, i64 -8
  store i8 %132, i8* %130, align 1
  %134 = add i32 %113, -2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %196, label %110

136:                                              ; preds = %96
  %137 = shl nuw nsw i64 %98, 2
  %138 = getelementptr inbounds i8, i8* %1, i64 %137
  %139 = getelementptr inbounds i8, i8* %138, i64 -1
  %140 = icmp eq i32 %4, 0
  br i1 %140, label %209, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds i8, i8* %139, i64 %137
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i8* [ %166, %143 ], [ %142, %141 ]
  %145 = phi i8* [ %164, %143 ], [ %139, %141 ]
  %146 = phi i32 [ %167, %143 ], [ 0, %141 ]
  %147 = getelementptr inbounds i8, i8* %145, i64 -1
  %148 = load i8, i8* %145, align 1
  %149 = getelementptr inbounds i8, i8* %144, i64 -1
  store i8 %148, i8* %144, align 1
  %150 = getelementptr inbounds i8, i8* %145, i64 -2
  %151 = load i8, i8* %147, align 1
  %152 = getelementptr inbounds i8, i8* %144, i64 -2
  store i8 %151, i8* %149, align 1
  %153 = load i8, i8* %150, align 1
  %154 = getelementptr inbounds i8, i8* %144, i64 -3
  store i8 %153, i8* %152, align 1
  %155 = getelementptr inbounds i8, i8* %145, i64 -3
  %156 = load i8, i8* %155, align 1
  %157 = getelementptr inbounds i8, i8* %144, i64 -4
  store i8 %156, i8* %154, align 1
  %158 = load i8, i8* %150, align 1
  %159 = getelementptr inbounds i8, i8* %144, i64 -5
  store i8 %158, i8* %157, align 1
  %160 = load i8, i8* %155, align 1
  %161 = getelementptr inbounds i8, i8* %144, i64 -6
  store i8 %160, i8* %159, align 1
  %162 = load i8, i8* %150, align 1
  %163 = getelementptr inbounds i8, i8* %144, i64 -7
  store i8 %162, i8* %161, align 1
  %164 = getelementptr inbounds i8, i8* %145, i64 -4
  %165 = load i8, i8* %155, align 1
  %166 = getelementptr inbounds i8, i8* %144, i64 -8
  store i8 %165, i8* %163, align 1
  %167 = add nuw i32 %146, 1
  %168 = icmp eq i32 %167, %4
  br i1 %168, label %209, label %143

169:                                              ; preds = %30, %23
  %170 = phi i8* [ %25, %23 ], [ %47, %30 ]
  %171 = phi i8* [ %21, %23 ], [ %45, %30 ]
  %172 = icmp eq i32 %26, 0
  br i1 %172, label %209, label %173

173:                                              ; preds = %169
  %174 = load i8, i8* %171, align 1
  %175 = getelementptr inbounds i8, i8* %170, i64 -1
  store i8 %174, i8* %170, align 1
  %176 = load i8, i8* %171, align 1
  %177 = getelementptr inbounds i8, i8* %170, i64 -2
  store i8 %176, i8* %175, align 1
  %178 = load i8, i8* %171, align 1
  store i8 %178, i8* %177, align 1
  br label %209

179:                                              ; preds = %62, %55
  %180 = phi i8* [ %57, %55 ], [ %93, %62 ]
  %181 = phi i8* [ %53, %55 ], [ %91, %62 ]
  %182 = icmp eq i32 %58, 0
  br i1 %182, label %209, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %181, align 1
  %185 = getelementptr inbounds i8, i8* %180, i64 -1
  store i8 %184, i8* %180, align 1
  %186 = getelementptr inbounds i8, i8* %181, i64 -1
  %187 = load i8, i8* %186, align 1
  %188 = getelementptr inbounds i8, i8* %180, i64 -2
  store i8 %187, i8* %185, align 1
  %189 = load i8, i8* %181, align 1
  %190 = getelementptr inbounds i8, i8* %180, i64 -3
  store i8 %189, i8* %188, align 1
  %191 = load i8, i8* %186, align 1
  %192 = getelementptr inbounds i8, i8* %180, i64 -4
  store i8 %191, i8* %190, align 1
  %193 = load i8, i8* %181, align 1
  %194 = getelementptr inbounds i8, i8* %180, i64 -5
  store i8 %193, i8* %192, align 1
  %195 = load i8, i8* %186, align 1
  store i8 %195, i8* %194, align 1
  br label %209

196:                                              ; preds = %110, %104
  %197 = phi i8* [ %105, %104 ], [ %133, %110 ]
  %198 = phi i8* [ %102, %104 ], [ %131, %110 ]
  %199 = icmp eq i32 %106, 0
  br i1 %199, label %209, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds i8, i8* %198, i64 -1
  %202 = load i8, i8* %198, align 1
  %203 = getelementptr inbounds i8, i8* %197, i64 -1
  store i8 %202, i8* %197, align 1
  %204 = load i8, i8* %201, align 1
  %205 = getelementptr inbounds i8, i8* %197, i64 -2
  store i8 %204, i8* %203, align 1
  %206 = load i8, i8* %201, align 1
  %207 = getelementptr inbounds i8, i8* %197, i64 -3
  store i8 %206, i8* %205, align 1
  %208 = load i8, i8* %201, align 1
  store i8 %208, i8* %207, align 1
  br label %209

209:                                              ; preds = %143, %200, %196, %183, %179, %173, %169, %14, %19, %50, %99, %136
  %210 = phi i64 [ %15, %14 ], [ 0, %19 ], [ 0, %50 ], [ 0, %99 ], [ 0, %136 ], [ %18, %169 ], [ %18, %173 ], [ %18, %179 ], [ %18, %183 ], [ %98, %196 ], [ %98, %200 ], [ %98, %143 ]
  %211 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 4
  %212 = load i8, i8* %211, align 2
  %213 = add i8 %212, 2
  store i8 %213, i8* %211, align 2
  %214 = load i8, i8* %9, align 8
  %215 = or i8 %214, 2
  store i8 %215, i8* %9, align 8
  %216 = load i8, i8* %5, align 1
  %217 = mul i8 %216, %213
  %218 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 5
  store i8 %217, i8* %218, align 1
  %219 = icmp ugt i8 %217, 7
  %220 = zext i8 %217 to i64
  br i1 %219, label %221, label %224

221:                                              ; preds = %209
  %222 = lshr i64 %220, 3
  %223 = mul nuw nsw i64 %222, %210
  br label %228

224:                                              ; preds = %209
  %225 = mul nuw nsw i64 %210, %220
  %226 = add nuw nsw i64 %225, 7
  %227 = lshr i64 %226, 3
  br label %228

228:                                              ; preds = %224, %221
  %229 = phi i64 [ %223, %221 ], [ %227, %224 ]
  %230 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  store i64 %229, i64* %230, align 8
  br label %231

231:                                              ; preds = %228, %8, %2
  ret void
}

declare void @cr_png_do_bgr(%struct.png_row_info_struct*, i8*) local_unnamed_addr #1

declare void @cr_png_do_packswap(%struct.png_row_info_struct*, i8*) local_unnamed_addr #1

declare void @cr_png_do_swap(%struct.png_row_info_struct*, i8*) local_unnamed_addr #1

declare void @cr_png_app_error(%struct.png_struct_def*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #5

; Function Attrs: noreturn
declare void @cr_png_fixed_error(%struct.png_struct_def*, i8*) local_unnamed_addr #3

declare i32 @cr_png_muldiv(i32*, i32, i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"png_rtran_ok: argument 0"}
!4 = distinct !{!4, !"png_rtran_ok"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"png_rtran_ok: argument 0"}
!7 = distinct !{!7, !"png_rtran_ok"}
!8 = distinct !{!8, !9, !"cr_png_set_background_fixed: argument 0"}
!9 = distinct !{!9, !"cr_png_set_background_fixed"}
!10 = !{!8}
!11 = !{!12}
!12 = distinct !{!12, !13, !"png_rtran_ok: argument 0"}
!13 = distinct !{!13, !"png_rtran_ok"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"png_rtran_ok: argument 0"}
!16 = distinct !{!16, !"png_rtran_ok"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"png_rtran_ok: argument 0"}
!19 = distinct !{!19, !"png_rtran_ok"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"png_rtran_ok: argument 0"}
!22 = distinct !{!22, !"png_rtran_ok"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"translate_gamma_flags: argument 0"}
!25 = distinct !{!25, !"translate_gamma_flags"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"png_rtran_ok: argument 0"}
!28 = distinct !{!28, !"png_rtran_ok"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"translate_gamma_flags: argument 0"}
!31 = distinct !{!31, !"translate_gamma_flags"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"translate_gamma_flags: argument 0"}
!34 = distinct !{!34, !"translate_gamma_flags"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"png_rtran_ok: argument 0"}
!37 = distinct !{!37, !"png_rtran_ok"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"png_rtran_ok: argument 0"}
!40 = distinct !{!40, !"png_rtran_ok"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"png_rtran_ok: argument 0"}
!43 = distinct !{!43, !"png_rtran_ok"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"png_rtran_ok: argument 0"}
!46 = distinct !{!46, !"png_rtran_ok"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"png_rtran_ok: argument 0"}
!49 = distinct !{!49, !"png_rtran_ok"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"png_rtran_ok: argument 0"}
!52 = distinct !{!52, !"png_rtran_ok"}
!53 = !{!54, !56}
!54 = distinct !{!54, !55, !"png_rtran_ok: argument 0"}
!55 = distinct !{!55, !"png_rtran_ok"}
!56 = distinct !{!56, !57, !"cr_png_set_expand_gray_1_2_4_to_8: argument 0"}
!57 = distinct !{!57, !"cr_png_set_expand_gray_1_2_4_to_8"}
!58 = !{!56}
!59 = !{!60}
!60 = distinct !{!60, !61, !"png_rtran_ok: argument 0"}
!61 = distinct !{!61, !"png_rtran_ok"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"png_init_palette_transformations: argument 0"}
!64 = distinct !{!64, !"png_init_palette_transformations"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"png_init_rgb_transformations: argument 0"}
!67 = distinct !{!67, !"png_init_rgb_transformations"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"cr_png_do_rgb_to_gray: argument 0"}
!70 = distinct !{!70, !"cr_png_do_rgb_to_gray"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"cr_png_do_compose: argument 0"}
!73 = distinct !{!73, !"cr_png_do_compose"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"cr_png_do_gamma: argument 0"}
!76 = distinct !{!76, !"cr_png_do_gamma"}
!77 = distinct !{!77, !78}
!78 = !{!"llvm.loop.unroll.disable"}
!79 = distinct !{!79, !78}
!80 = !{!81}
!81 = distinct !{!81, !82, !"cr_png_do_encode_alpha: argument 0"}
!82 = distinct !{!82, !"cr_png_do_encode_alpha"}
!83 = distinct !{!83, !78}
!84 = distinct !{!84, !85}
!85 = !{!"llvm.loop.isvectorized", i32 1}
!86 = distinct !{!86, !87, !85}
!87 = !{!"llvm.loop.unroll.runtime.disable"}
!88 = distinct !{!88, !85}
!89 = distinct !{!89, !87, !85}
!90 = distinct !{!90, !78}
!91 = distinct !{!91, !78}
!92 = distinct !{!92, !78}
