; ModuleID = '../../v8/src/heap/cppgc/marking-state.cc'
source_filename = "../../v8/src/heap/cppgc/marking-state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::internal::MutatorMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" }
%"class.cppgc::internal::MarkingStateBase" = type { %"class.cppgc::internal::HeapBase"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.std::__1::unique_ptr.130", i64 }
%"class.cppgc::internal::HeapBase" = type <{ i32 (...)**, %"class.cppgc::internal::RawHeap", %"class.std::__1::shared_ptr", %"class.cppgc::internal::CagedHeap", %"class.std::__1::unique_ptr.29", %"class.cppgc::internal::HeapRegistry::Subscription", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.cppgc::internal::Compactor", %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::Sweeper", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl", i64, i64, i8, [3 x i8], i32, %"class.std::__1::unique_ptr.100", i64, i8, [7 x i8] }>
%"class.cppgc::internal::RawHeap" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BaseSpace"* }
%"class.cppgc::internal::BaseSpace" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8, [3 x i8] }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"**, %"class.std::__1::__compressed_pair.2" }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cppgc::internal::BasePage"** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::shared_ptr" = type { %"class.cppgc::Platform"*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::CagedHeap" = type { %"class.cppgc::internal::VirtualMemory", %"class.std::__1::unique_ptr.11" }
%"class.cppgc::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, i8*, i64 }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.22" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::set.22" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.cppgc::internal::PageBackend"* }
%"class.cppgc::internal::PageBackend" = type opaque
%"class.cppgc::internal::HeapRegistry::Subscription" = type { %"class.cppgc::internal::HeapBase"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector.38", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr.45", %"class.cppgc::Platform"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair.40" }
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.heap::base::Stack"* }
%"class.heap::base::Stack" = type { i8* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.cppgc::internal::PreFinalizerHandler"* }
%"class.cppgc::internal::PreFinalizerHandler" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.cppgc::internal::MarkerBase"* }
%"class.cppgc::internal::MarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"struct.cppgc::internal::MarkerBase::MarkingConfig", [4 x i8], %"class.cppgc::Platform"*, %"class.std::__1::shared_ptr.143", %"struct.cppgc::internal::SingleThreadedHandle", %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MutatorMarkingState", i8, [7 x i8], %"class.cppgc::internal::IncrementalMarkingSchedule", %"class.std::__1::unique_ptr.145", i8, [7 x i8] }>
%"struct.cppgc::internal::MarkerBase::MarkingConfig" = type <{ i8, [3 x i8], i32, i8, i8, [2 x i8] }>
%"class.std::__1::shared_ptr.143" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr.144" }
%"class.std::__1::shared_ptr.144" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist.106", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.125", %"class.heap::base::Worklist.127", %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.128", %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.125" }
%"class.heap::base::Worklist.106" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.heap::base::Worklist.127" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.heap::base::Worklist.126" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.heap::base::Worklist.128" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.129" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { float }
%"class.heap::base::Worklist.125" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::IncrementalMarkingSchedule" = type { %"class.v8::base::TimeTicks", i64, %"struct.std::__1::atomic", double, i64, double }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.cppgc::internal::ConcurrentMarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.148", i64, %"class.v8::base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.cppgc::internal::Compactor" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.72", %"class.std::__1::unique_ptr.79", i8, i8, [6 x i8] }>
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"**, %"class.std::__1::__compressed_pair.74" }
%"class.cppgc::internal::NormalPageSpace" = type { %"class.cppgc::internal::BaseSpace.base", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::FreeList" }
%"class.cppgc::internal::BaseSpace.base" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8 }>
%"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer" = type { i8*, i64 }
%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type opaque
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.cppgc::internal::NormalPageSpace"** }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.cppgc::internal::CompactionWorklists"* }
%"class.cppgc::internal::CompactionWorklists" = type { %"class.heap::base::Worklist" }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<const void **, 256>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<const void **, 256>::Segment"*, [256 x i8**] }
%"class.cppgc::internal::ObjectAllocator" = type { %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::Sweeper" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.cppgc::internal::Sweeper::SweeperImpl"* }
%"class.cppgc::internal::Sweeper::SweeperImpl" = type opaque
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.92", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::unique_ptr.94" = type opaque
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::unique_ptr.94"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::internal::CrossThreadPersistentRegion" = type { %"class.cppgc::internal::PersistentRegion" }
%"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver", i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i32* }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local" = type { %"class.heap::base::Worklist.106"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local" = type { %"class.heap::base::Worklist.126"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local" = type { %"class.heap::base::Worklist.127"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local" = type { %"class.heap::base::Worklist.128"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local" = type { %"class.heap::base::Worklist.129"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local" = type { %"class.heap::base::Worklist.125"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.heap::base::Worklist<const void **, 256>::Local"* }
%"class.heap::base::Worklist<const void **, 256>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.136", i64 }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"class.cppgc::internal::HeapObjectHeader"**, %"class.cppgc::internal::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.cppgc::internal::HeapObjectHeader"** }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.cppgc::internal::HeapObjectHeader"* }
%"class.cppgc::internal::StatsCollector::InternalScope" = type <{ %"class.cppgc::internal::StatsCollector"*, %"class.v8::base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::TracingController" = type { i32 (...)** }

$_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EEC2IJEEEPS1_NS1_7ScopeIdEDpT_ = comdat any

$_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5Local7PublishEv = comdat any

$_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4swapERSB_ = comdat any

$_ZN5cppgc8internal14StatsCollector12GetScopeNameENS1_7ScopeIdENS0_10MarkerBase13MarkingConfig14CollectionTypeE = comdat any

$_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEv = comdat any

$_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE14StartTraceImplEvE28trace_event_unique_atomic398 = comdat any

$_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEvE28trace_event_unique_atomic432 = comdat any

@_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE14StartTraceImplEvE28trace_event_unique_atomic398 = linkonce_odr hidden global i64 0, comdat, align 8
@.str = private unnamed_addr constant [6 x i8] c"cppgc\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"CppGC.AtomicMark\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"CppGC.AtomicMark.Minor\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"CppGC.AtomicWeak\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"CppGC.AtomicWeak.Minor\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"CppGC.AtomicCompact\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"CppGC.AtomicCompact.Minor\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"CppGC.AtomicSweep\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"CppGC.AtomicSweep.Minor\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"CppGC.IncrementalMark\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"CppGC.IncrementalMark.Minor\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"CppGC.IncrementalSweep\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"CppGC.IncrementalSweep.Minor\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"CppGC.MarkIncrementalStart\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"CppGC.MarkIncrementalStart.Minor\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"CppGC.MarkIncrementalFinalize\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"CppGC.MarkIncrementalFinalize.Minor\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"CppGC.MarkAtomicPrologue\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"CppGC.MarkAtomicPrologue.Minor\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"CppGC.MarkAtomicEpilogue\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"CppGC.MarkAtomicEpilogue.Minor\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"CppGC.MarkTransitiveClosure\00", align 1
@.str.22 = private unnamed_addr constant [34 x i8] c"CppGC.MarkTransitiveClosure.Minor\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"CppGC.MarkTransitiveClosureWithDeadline\00", align 1
@.str.24 = private unnamed_addr constant [46 x i8] c"CppGC.MarkTransitiveClosureWithDeadline.Minor\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"CppGC.MarkFlushEphemerons\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"CppGC.MarkFlushEphemerons.Minor\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"CppGC.MarkOnAllocation\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"CppGC.MarkOnAllocation.Minor\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"CppGC.MarkProcessBailOutObjects\00", align 1
@.str.30 = private unnamed_addr constant [38 x i8] c"CppGC.MarkProcessBailOutObjects.Minor\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"CppGC.MarkProcessMarkingWorklist\00", align 1
@.str.32 = private unnamed_addr constant [39 x i8] c"CppGC.MarkProcessMarkingWorklist.Minor\00", align 1
@.str.33 = private unnamed_addr constant [38 x i8] c"CppGC.MarkProcessWriteBarrierWorklist\00", align 1
@.str.34 = private unnamed_addr constant [44 x i8] c"CppGC.MarkProcessWriteBarrierWorklist.Minor\00", align 1
@.str.35 = private unnamed_addr constant [45 x i8] c"CppGC.MarkProcessNotFullyconstructedWorklist\00", align 1
@.str.36 = private unnamed_addr constant [51 x i8] c"CppGC.MarkProcessNotFullyconstructedWorklist.Minor\00", align 1
@.str.37 = private unnamed_addr constant [28 x i8] c"CppGC.MarkProcessEphemerons\00", align 1
@.str.38 = private unnamed_addr constant [34 x i8] c"CppGC.MarkProcessEphemerons.Minor\00", align 1
@.str.39 = private unnamed_addr constant [21 x i8] c"CppGC.MarkVisitRoots\00", align 1
@.str.40 = private unnamed_addr constant [27 x i8] c"CppGC.MarkVisitRoots.Minor\00", align 1
@.str.41 = private unnamed_addr constant [42 x i8] c"CppGC.MarkVisitNotFullyConstructedObjects\00", align 1
@.str.42 = private unnamed_addr constant [48 x i8] c"CppGC.MarkVisitNotFullyConstructedObjects.Minor\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"CppGC.MarkVisitPersistents\00", align 1
@.str.44 = private unnamed_addr constant [33 x i8] c"CppGC.MarkVisitPersistents.Minor\00", align 1
@.str.45 = private unnamed_addr constant [38 x i8] c"CppGC.MarkVisitCrossThreadPersistents\00", align 1
@.str.46 = private unnamed_addr constant [44 x i8] c"CppGC.MarkVisitCrossThreadPersistents.Minor\00", align 1
@.str.47 = private unnamed_addr constant [21 x i8] c"CppGC.MarkVisitStack\00", align 1
@.str.48 = private unnamed_addr constant [27 x i8] c"CppGC.MarkVisitStack.Minor\00", align 1
@.str.49 = private unnamed_addr constant [30 x i8] c"CppGC.MarkVisitRememberedSets\00", align 1
@.str.50 = private unnamed_addr constant [36 x i8] c"CppGC.MarkVisitRememberedSets.Minor\00", align 1
@.str.51 = private unnamed_addr constant [31 x i8] c"CppGC.SweepInvokePreFinalizers\00", align 1
@.str.52 = private unnamed_addr constant [37 x i8] c"CppGC.SweepInvokePreFinalizers.Minor\00", align 1
@.str.53 = private unnamed_addr constant [20 x i8] c"CppGC.SweepIdleStep\00", align 1
@.str.54 = private unnamed_addr constant [26 x i8] c"CppGC.SweepIdleStep.Minor\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"CppGC.SweepInTask\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"CppGC.SweepInTask.Minor\00", align 1
@.str.57 = private unnamed_addr constant [24 x i8] c"CppGC.SweepOnAllocation\00", align 1
@.str.58 = private unnamed_addr constant [30 x i8] c"CppGC.SweepOnAllocation.Minor\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"CppGC.SweepFinalize\00", align 1
@.str.60 = private unnamed_addr constant [26 x i8] c"CppGC.SweepFinalize.Minor\00", align 1
@_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEvE28trace_event_unique_atomic432 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.61 = private unnamed_addr constant [6 x i8] c"epoch\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"forced\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal19MutatorMarkingState31FlushNotFullyConstructedObjectsEv(%"class.cppgc::internal::MutatorMarkingState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unordered_set", align 8
  %3 = bitcast %"class.std::__1::unordered_set"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.cppgc::internal::MutatorMarkingState", %"class.cppgc::internal::MutatorMarkingState"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"** %4, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %5, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %6) #7, !noalias !2
  %7 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %2, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::__compressed_pair.122"* %7 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 32, i1 false) #7, !alias.scope !2
  store i32 1065353216, i32* %8, align 8, !alias.scope !2
  %9 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %5, i64 0, i32 1, i32 0
  call void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4swapERSB_(%"class.std::__1::__hash_table"* nonnull %9, %"class.std::__1::__hash_table"* dereferenceable(40) %10) #7
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %6) #7
  %11 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"struct.std::__1::__hash_node_base"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = inttoptr i64 %13 to %"struct.std::__1::__hash_node_base"*
  br i1 %14, label %23, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.cppgc::internal::MutatorMarkingState", %"class.cppgc::internal::MutatorMarkingState"* %0, i64 0, i32 0, i32 3, i32 1
  %18 = getelementptr inbounds %"class.cppgc::internal::MutatorMarkingState", %"class.cppgc::internal::MutatorMarkingState"* %0, i64 0, i32 0, i32 3, i32 0
  %19 = bitcast %"class.heap::base::internal::SegmentBase"** %17 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"**
  %20 = bitcast %"class.heap::base::internal::SegmentBase"** %17 to i8**
  br label %39

21:                                               ; preds = %89
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %11, align 8
  br label %23

23:                                               ; preds = %21, %1
  %24 = phi %"struct.std::__1::__hash_node_base"* [ %22, %21 ], [ %15, %1 ]
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %23, %26
  %27 = phi %"struct.std::__1::__hash_node_base"* [ %29, %26 ], [ %24, %23 ]
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %27, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = bitcast %"struct.std::__1::__hash_node_base"* %27 to i8*
  call void @_ZdlPv(i8* %30) #8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %31, label %32, label %26

32:                                               ; preds = %26, %23
  %33 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"** %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %"struct.std::__1::__hash_node_base"** %34 to i8*
  call void @_ZdlPv(i8* %37) #8
  br label %38

38:                                               ; preds = %32, %36
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #7
  ret void

39:                                               ; preds = %16, %89
  %40 = phi i64 [ %13, %16 ], [ %91, %89 ]
  %41 = inttoptr i64 %40 to %"struct.std::__1::__hash_node"*
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %41, i64 0, i32 2
  %43 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %42, align 8
  %44 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %43, i64 0, i32 2
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = or i16 %45, 1
  %47 = icmp eq i16 %46, %45
  br i1 %47, label %89, label %48

48:                                               ; preds = %39
  %49 = cmpxchg i16* %44, i16 %45, i16 %46 monotonic monotonic
  %50 = extractvalue { i16, i1 } %49, 1
  br i1 %50, label %51, label %89

51:                                               ; preds = %48
  %52 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %17, align 8
  %53 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %52, i64 0, i32 1
  %54 = load i16, i16* %53, align 2
  %55 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %52, i64 0, i32 0
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %54, %56
  %58 = bitcast %"class.heap::base::internal::SegmentBase"* %52 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*
  br i1 %57, label %59, label %82, !prof !5

59:                                               ; preds = %51
  %60 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #7
  %61 = icmp eq %"class.heap::base::internal::SegmentBase"* %52, %60
  br i1 %61, label %74, label %62

62:                                               ; preds = %59
  %63 = load %"class.heap::base::Worklist.125"*, %"class.heap::base::Worklist.125"** %18, align 8
  %64 = load %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %19, align 8
  %65 = getelementptr inbounds %"class.heap::base::Worklist.125", %"class.heap::base::Worklist.125"* %63, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %65) #7
  %66 = getelementptr inbounds %"class.heap::base::Worklist.125", %"class.heap::base::Worklist.125"* %63, i64 0, i32 1
  %67 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %64, i64 0, i32 1
  %70 = bitcast %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %64 to i64
  store atomic i64 %71, i64* %67 monotonic, align 8
  %72 = getelementptr inbounds %"class.heap::base::Worklist.125", %"class.heap::base::Worklist.125"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i64* %72, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %65) #7
  br label %74

74:                                               ; preds = %62, %59
  %75 = call i8* @_Znwm(i64 144) #8
  %76 = bitcast i8* %75 to i16*
  store i16 16, i16* %76, align 2
  %77 = getelementptr inbounds i8, i8* %75, i64 2
  %78 = bitcast i8* %77 to i16*
  store i16 0, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %75, i64 8
  %80 = bitcast i8* %79 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"** %80, align 8
  store i8* %75, i8** %20, align 8
  %81 = bitcast i8* %75 to %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*
  br label %82

82:                                               ; preds = %51, %74
  %83 = phi %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* [ %81, %74 ], [ %58, %51 ]
  %84 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %83, i64 0, i32 0, i32 1
  %85 = load i16, i16* %84, align 2
  %86 = add i16 %85, 1
  store i16 %86, i16* %84, align 2
  %87 = zext i16 %85 to i64
  %88 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"* %83, i64 0, i32 2, i64 %87
  store %"class.cppgc::internal::HeapObjectHeader"* %43, %"class.cppgc::internal::HeapObjectHeader"** %88, align 8
  br label %89

89:                                               ; preds = %39, %82, %48
  %90 = inttoptr i64 %40 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %21, label %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal19MutatorMarkingState29FlushDiscoveredEphemeronPairsEv(%"class.cppgc::internal::MutatorMarkingState"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.cppgc::internal::StatsCollector::InternalScope", align 8
  %3 = bitcast %"class.cppgc::internal::StatsCollector::InternalScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.cppgc::internal::MutatorMarkingState", %"class.cppgc::internal::MutatorMarkingState"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %4, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %6, align 8
  call void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EEC2IJEEEPS1_NS1_7ScopeIdEDpT_(%"class.cppgc::internal::StatsCollector::InternalScope"* nonnull %2, %"class.cppgc::internal::StatsCollector"* %7, i32 13)
  %8 = getelementptr inbounds %"class.cppgc::internal::MutatorMarkingState", %"class.cppgc::internal::MutatorMarkingState"* %0, i64 0, i32 0, i32 7
  call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %8)
  %9 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %8, i64 0, i32 0
  %10 = load %"class.heap::base::Worklist.129"*, %"class.heap::base::Worklist.129"** %9, align 8
  %11 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %10, i64 0, i32 1
  %12 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %11 to i64*
  %13 = load atomic i64, i64* %12 monotonic, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %44, label %15

15:                                               ; preds = %1
  call void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %8) #7
  %16 = getelementptr inbounds %"class.cppgc::internal::MutatorMarkingState", %"class.cppgc::internal::MutatorMarkingState"* %0, i64 0, i32 0, i32 8, i32 0
  %17 = load %"class.heap::base::Worklist.129"*, %"class.heap::base::Worklist.129"** %16, align 8
  %18 = load %"class.heap::base::Worklist.129"*, %"class.heap::base::Worklist.129"** %9, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %18, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %19) #7
  %20 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %18, i64 0, i32 1
  %21 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %20, align 8
  %22 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i64, i64* %24 monotonic, align 8
  store atomic i64 0, i64* %24 monotonic, align 8
  %26 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %19) #7
  br label %27

27:                                               ; preds = %27, %23
  %28 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* [ %21, %23 ], [ %30, %27 ]
  %29 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %28, i64 0, i32 1
  %30 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %29, align 8
  %31 = icmp eq %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %30, null
  br i1 %31, label %32, label %27

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %28, i64 0, i32 1
  %34 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %17, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %34) #7
  %35 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i64* %35, i64 %25 monotonic
  %37 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %17, i64 0, i32 1
  %38 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %33 to i64*
  store i64 %39, i64* %40, align 8
  %41 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %21 to i64
  store atomic i64 %41, i64* %38 monotonic, align 8
  br label %42

42:                                               ; preds = %15, %32
  %43 = phi %"class.v8::base::Mutex"* [ %34, %32 ], [ %19, %15 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %43) #7
  br label %44

44:                                               ; preds = %42, %1
  call void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEv(%"class.cppgc::internal::StatsCollector::InternalScope"* nonnull %2) #7
  %45 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %2, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, 5
  br i1 %47, label %66, label %48

48:                                               ; preds = %44
  %49 = call i64 @_ZN2v84base9TimeTicks3NowEv() #7
  %50 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %2, i64 0, i32 1, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = sub nsw i64 %49, %51
  %53 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %2, i64 0, i32 0
  %54 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %53, align 8
  %55 = load i32, i32* %45, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %54, i64 0, i32 8, i32 0, i64 %56, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = add nsw i64 %58, %52
  store i64 %59, i64* %57, align 8
  %60 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %53, align 8
  %61 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %60, i64 0, i32 10, i32 0, i32 0, i32 0
  %62 = load %"class.cppgc::internal::MetricRecorder"*, %"class.cppgc::internal::MetricRecorder"** %61, align 8
  %63 = icmp eq %"class.cppgc::internal::MetricRecorder"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %48
  %65 = load i32, i32* %45, align 8
  call void @_ZN5cppgc8internal14StatsCollector21RecordHistogramSampleENS1_7ScopeIdEN2v84base9TimeDeltaE(%"class.cppgc::internal::StatsCollector"* %60, i32 %65, i64 %52) #7
  br label %66

66:                                               ; preds = %44, %48, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EEC2IJEEEPS1_NS1_7ScopeIdEDpT_(%"class.cppgc::internal::StatsCollector::InternalScope"*, %"class.cppgc::internal::StatsCollector"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.180"], align 16
  %5 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 0
  store %"class.cppgc::internal::StatsCollector"* %1, %"class.cppgc::internal::StatsCollector"** %5, align 8
  %6 = tail call i64 @_ZN2v84base9TimeTicks3NowEv() #7
  %7 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  %9 = load atomic i64, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE14StartTraceImplEvE28trace_event_unique_atomic398 monotonic, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %3
  %13 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %14 = bitcast %"class.v8::TracingController"* %13 to i8* (%"class.v8::TracingController"*, i8*)***
  %15 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %15, i64 2
  %17 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %16, align 8
  %18 = tail call i8* %17(%"class.v8::TracingController"* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #7
  %19 = ptrtoint i8* %18 to i64
  store atomic volatile i64 %19, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE14StartTraceImplEvE28trace_event_unique_atomic398 monotonic, align 8
  br label %20

20:                                               ; preds = %12, %3
  %21 = phi i8* [ %10, %3 ], [ %18, %12 ]
  %22 = load atomic i8, i8* %21 monotonic, align 1
  %23 = and i8 %22, 5
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %20
  %26 = load i32, i32* %8, align 8
  %27 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %5, align 8
  %28 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %27, i64 0, i32 8, i32 3
  %29 = load i8, i8* %28, align 8
  %30 = tail call i8* @_ZN5cppgc8internal14StatsCollector12GetScopeNameENS1_7ScopeIdENS0_10MarkerBase13MarkingConfig14CollectionTypeE(i32 %26, i8 zeroext %29) #7
  %31 = bitcast [2 x %"class.std::__1::unique_ptr.180"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  %32 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.180"], [2 x %"class.std::__1::unique_ptr.180"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 16, i1 false) #7
  %33 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %34 = bitcast %"class.v8::TracingController"* %33 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)***
  %35 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)** %35, i64 3
  %37 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)** %36, align 8
  %38 = call i64 %37(%"class.v8::TracingController"* %33, i8 signext 66, i8* %21, i8* %30, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.180"* nonnull %32, i32 0) #7
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.180"], [2 x %"class.std::__1::unique_ptr.180"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %40 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %39, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.v8::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %25
  %43 = bitcast %"class.v8::ConvertableToTraceFormat"* %40 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.v8::ConvertableToTraceFormat"* nonnull %40) #7
  br label %47

47:                                               ; preds = %42, %25
  %48 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.180"], [2 x %"class.std::__1::unique_ptr.180"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %48, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %48, align 16
  %50 = icmp eq %"class.v8::ConvertableToTraceFormat"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.v8::ConvertableToTraceFormat"* %49 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %53, i64 1
  %55 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %54, align 8
  call void %55(%"class.v8::ConvertableToTraceFormat"* nonnull %49) #7
  br label %56

56:                                               ; preds = %51, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  br label %57

57:                                               ; preds = %20, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN5cppgc8internal16MarkingWorklists17EphemeronPairItemELt64EE5Local7PublishEv(%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #7
  %9 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 0
  %12 = load %"class.heap::base::Worklist.129"*, %"class.heap::base::Worklist.129"** %11, align 8
  %13 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  %14 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %13, align 8
  %15 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %15) #7
  %16 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %12, i64 0, i32 1
  %17 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %14, i64 0, i32 1
  %20 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %14 to i64
  store atomic i64 %21, i64* %17 monotonic, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %15) #7
  br label %24

24:                                               ; preds = %7, %10
  %25 = tail call i8* @_Znwm(i64 2064) #8
  %26 = bitcast i8* %25 to i16*
  store i16 64, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %25, i64 2
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %30, align 8
  %31 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to i8**
  store i8* %25, i8** %31, align 8
  br label %32

32:                                               ; preds = %24, %1
  %33 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 2
  %34 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %63, label %38

38:                                               ; preds = %32
  %39 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #7
  %40 = icmp eq %"class.heap::base::internal::SegmentBase"* %34, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local"* %0, i64 0, i32 0
  %43 = load %"class.heap::base::Worklist.129"*, %"class.heap::base::Worklist.129"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  %45 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %43, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %46) #7
  %47 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %43, i64 0, i32 1
  %48 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %45, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %45 to i64
  store atomic i64 %52, i64* %48 monotonic, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %46) #7
  br label %55

55:                                               ; preds = %38, %41
  %56 = tail call i8* @_Znwm(i64 2064) #8
  %57 = bitcast i8* %56 to i16*
  store i16 64, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = bitcast i8* %58 to i16*
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %61, align 8
  %62 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to i8**
  store i8* %56, i8** %62, align 8
  br label %63

63:                                               ; preds = %55, %32
  ret void
}

declare %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() local_unnamed_addr #2

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4swapERSB_(%"class.std::__1::__hash_table"*, %"class.std::__1::__hash_table"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__hash_table"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %3, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__hash_table"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %6, align 8
  %9 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %3, align 8
  store i64 %8, i64* %4, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base"** %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.std::__1::__hash_node_base"** %9 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %2, %11
  %14 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %6, align 8
  store i64 %5, i64* %7, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = bitcast %"struct.std::__1::__hash_node_base"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #8
  br label %18

18:                                               ; preds = %13, %16
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %19, align 8
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  store i64 %27, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %32 = load i64, i64* %30, align 8
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3
  %35 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 3
  %36 = bitcast %"class.std::__1::__compressed_pair.122"* %34 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %"class.std::__1::__compressed_pair.122"* %35 to i32*
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %36, align 4
  store i32 %37, i32* %38, align 4
  %40 = load i64, i64* %30, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %62, label %42

42:                                               ; preds = %18
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %46 = bitcast %"struct.std::__1::__hash_node_base"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = load i64, i64* %19, align 8
  %49 = tail call i64 @llvm.ctpop.i64(i64 %48) #7, !range !6
  %50 = icmp ugt i64 %49, 1
  br i1 %50, label %54, label %51

51:                                               ; preds = %42
  %52 = add i64 %48, -1
  %53 = and i64 %52, %47
  br label %58

54:                                               ; preds = %42
  %55 = icmp ult i64 %47, %48
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %47, %48
  br label %58

58:                                               ; preds = %51, %54, %56
  %59 = phi i64 [ %53, %51 ], [ %57, %56 ], [ %47, %54 ]
  %60 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %3, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %60, i64 %59
  store %"struct.std::__1::__hash_node_base"* %23, %"struct.std::__1::__hash_node_base"** %61, align 8
  br label %62

62:                                               ; preds = %18, %58
  %63 = load i64, i64* %31, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %84, label %65

65:                                               ; preds = %62
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 1
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %20, align 8
  %71 = tail call i64 @llvm.ctpop.i64(i64 %70) #7, !range !6
  %72 = icmp ugt i64 %71, 1
  br i1 %72, label %76, label %73

73:                                               ; preds = %65
  %74 = add i64 %70, -1
  %75 = and i64 %74, %69
  br label %80

76:                                               ; preds = %65
  %77 = icmp ult i64 %69, %70
  br i1 %77, label %80, label %78

78:                                               ; preds = %76
  %79 = urem i64 %69, %70
  br label %80

80:                                               ; preds = %73, %76, %78
  %81 = phi i64 [ %75, %73 ], [ %79, %78 ], [ %69, %76 ]
  %82 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %6, align 8
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %82, i64 %81
  store %"struct.std::__1::__hash_node_base"* %24, %"struct.std::__1::__hash_node_base"** %83, align 8
  br label %84

84:                                               ; preds = %62, %80
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i64 @_ZN2v84base9TimeTicks3NowEv() local_unnamed_addr #2

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5cppgc8internal14StatsCollector12GetScopeNameENS1_7ScopeIdENS0_10MarkerBase13MarkingConfig14CollectionTypeE(i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %93 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
    i32 4, label %15
    i32 5, label %18
    i32 7, label %21
    i32 8, label %24
    i32 9, label %27
    i32 10, label %30
    i32 11, label %33
    i32 12, label %36
    i32 13, label %39
    i32 14, label %42
    i32 15, label %45
    i32 16, label %48
    i32 17, label %51
    i32 18, label %54
    i32 19, label %57
    i32 20, label %60
    i32 21, label %63
    i32 22, label %66
    i32 23, label %69
    i32 24, label %72
    i32 25, label %75
    i32 26, label %78
    i32 27, label %81
    i32 28, label %84
    i32 29, label %87
    i32 30, label %90
  ]

3:                                                ; preds = %2
  %4 = icmp eq i8 %1, 1
  %5 = select i1 %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)
  br label %93

6:                                                ; preds = %2
  %7 = icmp eq i8 %1, 1
  %8 = select i1 %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)
  br label %93

9:                                                ; preds = %2
  %10 = icmp eq i8 %1, 1
  %11 = select i1 %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)
  br label %93

12:                                               ; preds = %2
  %13 = icmp eq i8 %1, 1
  %14 = select i1 %13, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0)
  br label %93

15:                                               ; preds = %2
  %16 = icmp eq i8 %1, 1
  %17 = select i1 %16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0)
  br label %93

18:                                               ; preds = %2
  %19 = icmp eq i8 %1, 1
  %20 = select i1 %19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0)
  br label %93

21:                                               ; preds = %2
  %22 = icmp eq i8 %1, 1
  %23 = select i1 %22, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)
  br label %93

24:                                               ; preds = %2
  %25 = icmp eq i8 %1, 1
  %26 = select i1 %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0)
  br label %93

27:                                               ; preds = %2
  %28 = icmp eq i8 %1, 1
  %29 = select i1 %28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0)
  br label %93

30:                                               ; preds = %2
  %31 = icmp eq i8 %1, 1
  %32 = select i1 %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i64 0, i64 0)
  br label %93

33:                                               ; preds = %2
  %34 = icmp eq i8 %1, 1
  %35 = select i1 %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0)
  br label %93

36:                                               ; preds = %2
  %37 = icmp eq i8 %1, 1
  %38 = select i1 %37, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.24, i64 0, i64 0)
  br label %93

39:                                               ; preds = %2
  %40 = icmp eq i8 %1, 1
  %41 = select i1 %40, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0)
  br label %93

42:                                               ; preds = %2
  %43 = icmp eq i8 %1, 1
  %44 = select i1 %43, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)
  br label %93

45:                                               ; preds = %2
  %46 = icmp eq i8 %1, 1
  %47 = select i1 %46, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i64 0, i64 0)
  br label %93

48:                                               ; preds = %2
  %49 = icmp eq i8 %1, 1
  %50 = select i1 %49, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.32, i64 0, i64 0)
  br label %93

51:                                               ; preds = %2
  %52 = icmp eq i8 %1, 1
  %53 = select i1 %52, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0)
  br label %93

54:                                               ; preds = %2
  %55 = icmp eq i8 %1, 1
  %56 = select i1 %55, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.36, i64 0, i64 0)
  br label %93

57:                                               ; preds = %2
  %58 = icmp eq i8 %1, 1
  %59 = select i1 %58, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.38, i64 0, i64 0)
  br label %93

60:                                               ; preds = %2
  %61 = icmp eq i8 %1, 1
  %62 = select i1 %61, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0)
  br label %93

63:                                               ; preds = %2
  %64 = icmp eq i8 %1, 1
  %65 = select i1 %64, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.42, i64 0, i64 0)
  br label %93

66:                                               ; preds = %2
  %67 = icmp eq i8 %1, 1
  %68 = select i1 %67, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0)
  br label %93

69:                                               ; preds = %2
  %70 = icmp eq i8 %1, 1
  %71 = select i1 %70, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.46, i64 0, i64 0)
  br label %93

72:                                               ; preds = %2
  %73 = icmp eq i8 %1, 1
  %74 = select i1 %73, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0)
  br label %93

75:                                               ; preds = %2
  %76 = icmp eq i8 %1, 1
  %77 = select i1 %76, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.50, i64 0, i64 0)
  br label %93

78:                                               ; preds = %2
  %79 = icmp eq i8 %1, 1
  %80 = select i1 %79, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.52, i64 0, i64 0)
  br label %93

81:                                               ; preds = %2
  %82 = icmp eq i8 %1, 1
  %83 = select i1 %82, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.54, i64 0, i64 0)
  br label %93

84:                                               ; preds = %2
  %85 = icmp eq i8 %1, 1
  %86 = select i1 %85, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0)
  br label %93

87:                                               ; preds = %2
  %88 = icmp eq i8 %1, 1
  %89 = select i1 %88, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.58, i64 0, i64 0)
  br label %93

90:                                               ; preds = %2
  %91 = icmp eq i8 %1, 1
  %92 = select i1 %91, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)
  br label %93

93:                                               ; preds = %2, %90, %87, %84, %81, %78, %75, %72, %69, %66, %63, %60, %57, %54, %51, %48, %45, %42, %39, %36, %33, %30, %27, %24, %21, %18, %15, %12, %9, %6, %3
  %94 = phi i8* [ %92, %90 ], [ %89, %87 ], [ %86, %84 ], [ %83, %81 ], [ %80, %78 ], [ %77, %75 ], [ %74, %72 ], [ %71, %69 ], [ %68, %66 ], [ %65, %63 ], [ %62, %60 ], [ %59, %57 ], [ %56, %54 ], [ %53, %51 ], [ %50, %48 ], [ %47, %45 ], [ %44, %42 ], [ %41, %39 ], [ %38, %36 ], [ %35, %33 ], [ %32, %30 ], [ %29, %27 ], [ %26, %24 ], [ %23, %21 ], [ %20, %18 ], [ %17, %15 ], [ %14, %12 ], [ %11, %9 ], [ %8, %6 ], [ %5, %3 ], [ null, %2 ]
  ret i8* %94
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEv(%"class.cppgc::internal::StatsCollector::InternalScope"*) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca [2 x %"class.std::__1::unique_ptr.180"], align 16
  %3 = alloca <2 x i8*>, align 16
  %4 = alloca [2 x i8], align 1
  %5 = alloca [2 x i64], align 16
  %6 = load atomic i64, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEvE28trace_event_unique_atomic432 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %1
  %10 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %11 = bitcast %"class.v8::TracingController"* %10 to i8* (%"class.v8::TracingController"*, i8*)***
  %12 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %12, i64 2
  %14 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %13, align 8
  %15 = tail call i8* %14(%"class.v8::TracingController"* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #7
  %16 = ptrtoint i8* %15 to i64
  store atomic volatile i64 %16, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEvE28trace_event_unique_atomic432 monotonic, align 8
  br label %17

17:                                               ; preds = %1, %9
  %18 = phi i8* [ %7, %1 ], [ %15, %9 ]
  %19 = load atomic i8, i8* %18 monotonic, align 1
  %20 = and i8 %19, 5
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %70, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 0
  %26 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %25, align 8
  %27 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %26, i64 0, i32 8, i32 3
  %28 = load i8, i8* %27, align 8
  %29 = tail call i8* @_ZN5cppgc8internal14StatsCollector12GetScopeNameENS1_7ScopeIdENS0_10MarkerBase13MarkingConfig14CollectionTypeE(i32 %24, i8 zeroext %28)
  %30 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %25, align 8
  %31 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %30, i64 0, i32 8, i32 2
  %32 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %30, i64 0, i32 8, i32 4
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 1
  %35 = load i64, i64* %31, align 8
  %36 = bitcast <2 x i8*>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #7
  %37 = getelementptr inbounds <2 x i8*>, <2 x i8*>* %3, i64 0, i64 0
  store <2 x i8*> <i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0)>, <2 x i8*>* %3, align 16
  %38 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %38) #7
  %39 = bitcast [2 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #7
  %40 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 0
  store i8 2, i8* %38, align 1
  store i64 %35, i64* %40, align 16
  %41 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1
  %42 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 1
  store i8 1, i8* %41, align 1
  %43 = zext i1 %34 to i64
  store i64 %43, i64* %42, align 8
  %44 = bitcast [2 x %"class.std::__1::unique_ptr.180"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #7
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.180"], [2 x %"class.std::__1::unique_ptr.180"]* %2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 16, i1 false) #7
  %46 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %47 = bitcast %"class.v8::TracingController"* %46 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)***
  %48 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)** %48, i64 3
  %50 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.180"*, i32)** %49, align 8
  %51 = call i64 %50(%"class.v8::TracingController"* %46, i8 signext 69, i8* %18, i8* %29, i8* null, i64 0, i64 0, i32 2, i8** nonnull %37, i8* nonnull %38, i64* nonnull %40, %"class.std::__1::unique_ptr.180"* nonnull %45, i32 0) #7
  %52 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.180"], [2 x %"class.std::__1::unique_ptr.180"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %53 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %52, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %52, align 8
  %54 = icmp eq %"class.v8::ConvertableToTraceFormat"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %22
  %56 = bitcast %"class.v8::ConvertableToTraceFormat"* %53 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %57 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %57, i64 1
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, align 8
  call void %59(%"class.v8::ConvertableToTraceFormat"* nonnull %53) #7
  br label %60

60:                                               ; preds = %55, %22
  %61 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.180"], [2 x %"class.std::__1::unique_ptr.180"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %61, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %61, align 16
  %63 = icmp eq %"class.v8::ConvertableToTraceFormat"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.v8::ConvertableToTraceFormat"* %62 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %66 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %66, i64 1
  %68 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %67, align 8
  call void %68(%"class.v8::ConvertableToTraceFormat"* nonnull %62) #7
  br label %69

69:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %38) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #7
  br label %70

70:                                               ; preds = %17, %69
  ret void
}

declare void @_ZN5cppgc8internal14StatsCollector21RecordHistogramSampleENS1_7ScopeIdEN2v84base9TimeDeltaE(%"class.cppgc::internal::StatsCollector"*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5cppgc8internal16MarkingWorklists23ExternalMarkingWorklist7ExtractILNS0_10AccessModeE1EEENSt3__113unordered_setIPNS0_16HeapObjectHeaderENS5_4hashIS8_EENS5_8equal_toIS8_EENS5_9allocatorIS8_EEEEv: argument 0"}
!4 = distinct !{!4, !"_ZN5cppgc8internal16MarkingWorklists23ExternalMarkingWorklist7ExtractILNS0_10AccessModeE1EEENSt3__113unordered_setIPNS0_16HeapObjectHeaderENS5_4hashIS8_EENS5_8equal_toIS8_EENS5_9allocatorIS8_EEEEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i64 0, i64 65}
