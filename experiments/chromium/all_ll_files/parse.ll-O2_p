; ModuleID = '../../third_party/re2/src/re2/parse.cc'
source_filename = "../../third_party/re2/src/re2/parse.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.re2::CaseFold" = type { i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"struct.re2::UGroup" = type { i8*, i32, %"struct.re2::URange16"*, i32, %"struct.re2::URange32"*, i32 }
%"struct.re2::URange16" = type { i16, i16 }
%"struct.re2::URange32" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.re2::Regexp::ParseState" = type { i32, %"class.re2::StringPiece", %"class.re2::RegexpStatus"*, %"class.re2::Regexp"*, i32, i32 }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.re2::Regexp" = type { i8, i8, i16, i16, i16, %union.anon.1, %"class.re2::Regexp"*, %union.anon.2 }
%union.anon.1 = type { %"class.re2::Regexp"** }
%union.anon.2 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.re2::RegexpStatus" = type { i32, %"class.re2::StringPiece", %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.re2::CharClassBuilder" = type { i32, i32, i32, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.re2::CharClass" = type <{ i8, [3 x i8], i32, %"struct.re2::RuneRange"*, i32, [4 x i8] }>
%"struct.re2::RuneRange" = type { i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.re2::RuneRange", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.re2::RepetitionWalker" = type { %"class.re2::Regexp::Walker" }
%"class.re2::Regexp::Walker" = type { i32 (...)**, %"class.std::__1::stack", i8, i32 }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::__split_buffer" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair.15" }
%"struct.re2::WalkState" = type { %"class.re2::Regexp"*, i32, i32, i32, i32, i32* }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.re2::WalkState"** }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%struct.anon.3 = type { i32, i32 }
%class.LogMessage = type { i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.re2::Frame"*, %"struct.re2::Frame"*, %"class.std::__1::__compressed_pair.31" }
%"struct.re2::Frame" = type <{ %"class.re2::Regexp"**, i32, i32, %"class.std::__1::vector.24", i32, [4 x i8] }>
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.re2::Splice"*, %"struct.re2::Splice"*, %"class.std::__1::__compressed_pair.26" }
%"struct.re2::Splice" = type { %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32, i32 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.re2::Splice"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.re2::Frame"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer.43" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::allocator.18"* }
%"class.std::__1::allocator.18" = type { i8 }

$_ZN10LogMessageD2Ev = comdat any

$_ZN3re26Regexp6WalkerIiED2Ev = comdat any

$_ZN3re216RepetitionWalkerD0Ev = comdat any

$_ZN3re26Regexp6WalkerIiE4CopyEi = comdat any

$_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZN3re26Regexp6WalkerIiED0Ev = comdat any

$_ZN3re26Regexp6WalkerIiE8PreVisitEPS0_iPb = comdat any

$_ZN3re26Regexp6WalkerIiE9PostVisitEPS0_iiPii = comdat any

$_ZN3re26Regexp6WalkerIiE5ResetEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3re26Regexp6WalkerIiE12WalkInternalEPS0_ib = comdat any

$_ZNSt3__15dequeIN3re29WalkStateIiEENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIiEERNS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

$_ZNSt3__16vectorIN3re25FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRPPNS1_6RegexpERiEEEvDpOT_ = comdat any

$_ZTVN3re26Regexp6WalkerIiEE = comdat any

@_ZN3re216unicode_casefoldE = external global [0 x %"struct.re2::CaseFold"], align 4
@_ZN3re220num_unicode_casefoldE = external local_unnamed_addr constant i32, align 4
@.str = private unnamed_addr constant [39 x i8] c"../../third_party/re2/src/re2/parse.cc\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"RepetitionWalker::ShortVisit called\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"Concat of \00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"unknown round: \00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"RE2: unexpected op: \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"Bad call to ParseState::ParsePerlFlags\00", align 1
@_ZTVN3re216RepetitionWalkerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIiED2Ev to i8*), i8* bitcast (void (%"class.re2::RepetitionWalker"*)* @_ZN3re216RepetitionWalkerD0Ev to i8*), i8* bitcast (i32 (%"class.re2::RepetitionWalker"*, %"class.re2::Regexp"*, i32, i8*)* @_ZN3re216RepetitionWalker8PreVisitEPNS_6RegexpEiPb to i8*), i8* bitcast (i32 (%"class.re2::RepetitionWalker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)* @_ZN3re216RepetitionWalker9PostVisitEPNS_6RegexpEiiPii to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, i32)* @_ZN3re26Regexp6WalkerIiE4CopyEi to i8*), i8* bitcast (i32 (%"class.re2::RepetitionWalker"*, %"class.re2::Regexp"*, i32)* @_ZN3re216RepetitionWalker10ShortVisitEPNS_6RegexpEi to i8*)] }, align 8
@.str.7 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN3re26Regexp6WalkerIiEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIiED2Ev to i8*), i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIiED0Ev to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)* @_ZN3re26Regexp6WalkerIiE8PreVisitEPS0_iPb to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)* @_ZN3re26Regexp6WalkerIiE9PostVisitEPS0_iiPii to i8*), i8* bitcast (i32 (%"class.re2::Regexp::Walker"*, i32)* @_ZN3re26Regexp6WalkerIiE4CopyEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.10 = private unnamed_addr constant [43 x i8] c"../../third_party/re2/src/re2/walker-inl.h\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"Stack not empty.\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"AddFoldedRange recurses too much.\00", align 1
@_ZN3re211perl_groupsE = external global [0 x %"struct.re2::UGroup"], align 8
@_ZN3re215num_perl_groupsE = external local_unnamed_addr constant i32, align 4
@.str.13 = private unnamed_addr constant [4 x i8] c"Any\00", align 1
@_ZN3re2L8anygroupE = internal global %"struct.re2::UGroup" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i32 1, %"struct.re2::URange16"* getelementptr inbounds ([1 x %"struct.re2::URange16"], [1 x %"struct.re2::URange16"]* @_ZN3re2L5any16E, i32 0, i32 0), i32 1, %"struct.re2::URange32"* getelementptr inbounds ([1 x %"struct.re2::URange32"], [1 x %"struct.re2::URange32"]* @_ZN3re2L5any32E, i32 0, i32 0), i32 1 }, align 8
@_ZN3re214unicode_groupsE = external global [0 x %"struct.re2::UGroup"], align 8
@_ZN3re218num_unicode_groupsE = external local_unnamed_addr constant i32, align 4
@_ZN3re2L5any16E = internal global [1 x %"struct.re2::URange16"] [%"struct.re2::URange16" { i16 0, i16 -1 }], align 2
@_ZN3re2L5any32E = internal global [1 x %"struct.re2::URange32"] [%"struct.re2::URange32" { i32 65536, i32 1114111 }], align 4
@.str.14 = private unnamed_addr constant [15 x i8] c"Bad hex digit \00", align 1
@_ZN3re212posix_groupsE = external global [0 x %"struct.re2::UGroup"], align 8
@_ZN3re216num_posix_groupsE = external local_unnamed_addr constant i32, align 4
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.16 = private unnamed_addr constant [10 x i8] c"Walk NULL\00", align 1

@_ZN3re26Regexp10ParseStateC1ENS0_10ParseFlagsERKNS_11StringPieceEPNS_12RegexpStatusE = hidden unnamed_addr alias void (%"class.re2::Regexp::ParseState"*, i32, %"class.re2::StringPiece"*, %"class.re2::RegexpStatus"*), void (%"class.re2::Regexp::ParseState"*, i32, %"class.re2::StringPiece"*, %"class.re2::RegexpStatus"*)* @_ZN3re26Regexp10ParseStateC2ENS0_10ParseFlagsERKNS_11StringPieceEPNS_12RegexpStatusE
@_ZN3re26Regexp10ParseStateD1Ev = hidden unnamed_addr alias void (%"class.re2::Regexp::ParseState"*), void (%"class.re2::Regexp::ParseState"*)* @_ZN3re26Regexp10ParseStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp10ParseStateC2ENS0_10ParseFlagsERKNS_11StringPieceEPNS_12RegexpStatusE(%"class.re2::Regexp::ParseState"* nocapture, i32, %"class.re2::StringPiece"* nocapture readonly dereferenceable(16), %"class.re2::RegexpStatus"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 1
  %7 = bitcast %"class.re2::StringPiece"* %6 to i8*
  %8 = bitcast %"class.re2::StringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  store %"class.re2::RegexpStatus"* %3, %"class.re2::RegexpStatus"** %9, align 8
  %10 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %10, align 8
  %11 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 4
  store i32 0, i32* %11, align 8
  %12 = and i32 %1, 32
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 5
  %15 = select i1 %13, i32 1114111, i32 255
  store i32 %15, i32* %14, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp10ParseStateD2Ev(%"class.re2::Regexp::ParseState"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %3 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %2, align 8
  %4 = icmp eq %"class.re2::Regexp"* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %27, %1
  ret void

6:                                                ; preds = %1, %27
  %7 = phi %"class.re2::Regexp"* [ %9, %27 ], [ %3, %1 ]
  %8 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %7, i64 0, i32 6
  %9 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %8, align 8
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %8, align 8
  %10 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %7, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 22
  br i1 %12, label %13, label %27

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %7, i64 0, i32 7, i32 0, i32 1
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = icmp eq %"class.std::__1::basic_string"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #17
  br label %25

25:                                               ; preds = %17, %22
  %26 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %13, %25, %6
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %7) #18
  %28 = icmp eq %"class.re2::Regexp"* %9, null
  br i1 %28, label %5, label %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

declare void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp10ParseState12FinishRegexpEPS0_(%"class.re2::Regexp::ParseState"* nocapture readnone, %"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.re2::Regexp"* %1, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 6
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %5, align 8
  %6 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 20
  br i1 %8, label %9, label %23

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to %"class.re2::CharClassBuilder"**
  %12 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %11, align 8
  %13 = icmp eq %"class.re2::CharClassBuilder"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7
  store %"class.re2::CharClassBuilder"* null, %"class.re2::CharClassBuilder"** %11, align 8
  %16 = tail call %"class.re2::CharClass"* @_ZN3re216CharClassBuilder12GetCharClassEv(%"class.re2::CharClassBuilder"* nonnull %12) #18
  %17 = bitcast %union.anon.2* %15 to %"class.re2::CharClass"**
  store %"class.re2::CharClass"* %16, %"class.re2::CharClass"** %17, align 8
  %18 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %12, i64 0, i32 3, i32 0
  %19 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %12, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %18, %"class.std::__1::__tree_node"* %21) #18
  %22 = bitcast %"class.re2::CharClassBuilder"* %12 to i8*
  tail call void @_ZdlPv(i8* %22) #17
  br label %23

23:                                               ; preds = %4, %14, %9, %2
  ret %"class.re2::Regexp"* %1
}

declare %"class.re2::CharClass"* @_ZN3re216CharClassBuilder12GetCharClassEv(%"class.re2::CharClassBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nocapture, %"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3re26Regexp10ParseState17MaybeConcatStringEiNS0_10ParseFlagsE(%"class.re2::Regexp::ParseState"* %0, i32 -1, i32 0)
  %4 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 20
  br i1 %6, label %7, label %49

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"** %8 to %"class.re2::CharClassBuilder"**
  %10 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %9, align 8
  %11 = icmp eq %"class.re2::CharClassBuilder"* %10, null
  br i1 %11, label %49, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  tail call void @_ZN3re216CharClassBuilder11RemoveAboveEi(%"class.re2::CharClassBuilder"* nonnull %10, i32 %14) #18
  %15 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %9, align 8
  %16 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %15, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %49 [
    i32 1, label %18
    i32 2, label %30
  ]

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %15, i64 0, i32 3, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"** %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %1) #18
  %24 = tail call i8* @_Znwm(i64 40) #17
  %25 = bitcast i8* %24 to %"class.re2::Regexp"*
  %26 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %25, i32 3, i32 %27) #18
  %28 = getelementptr inbounds i8, i8* %24, i64 24
  %29 = bitcast i8* %28 to i32*
  store i32 %23, i32* %29, align 8
  br label %49

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %15, i64 0, i32 3, i32 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_end_node"** %31 to %"class.std::__1::__tree_node"**
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 1, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, -65
  %37 = icmp ult i32 %36, 26
  br i1 %37, label %38, label %49

38:                                               ; preds = %30
  %39 = add nuw nsw i32 %35, 32
  %40 = tail call zeroext i1 @_ZN3re216CharClassBuilder8ContainsEi(%"class.re2::CharClassBuilder"* %15, i32 %39) #18
  br i1 %40, label %41, label %49

41:                                               ; preds = %38
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %1) #18
  %42 = tail call i8* @_Znwm(i64 40) #17
  %43 = bitcast i8* %42 to %"class.re2::Regexp"*
  %44 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = or i32 %45, 1
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %43, i32 3, i32 %46) #18
  %47 = getelementptr inbounds i8, i8* %42, i64 24
  %48 = bitcast i8* %47 to i32*
  store i32 %39, i32* %48, align 8
  br label %49

49:                                               ; preds = %12, %30, %38, %41, %7, %18, %2
  %50 = phi %"class.re2::Regexp"* [ %25, %18 ], [ %1, %7 ], [ %1, %2 ], [ %43, %41 ], [ %1, %38 ], [ %1, %30 ], [ %1, %12 ]
  %51 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %50, i64 0, i32 0
  %52 = load i8, i8* %51, align 8
  %53 = icmp ugt i8 %52, 21
  br i1 %53, label %58, label %54

54:                                               ; preds = %49
  %55 = tail call zeroext i1 @_ZN3re26Regexp13ComputeSimpleEv(%"class.re2::Regexp"* %50) #18
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %50, i64 0, i32 1
  store i8 %56, i8* %57, align 1
  br label %58

58:                                               ; preds = %54, %49
  %59 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %60 = bitcast %"class.re2::Regexp"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %50, i64 0, i32 6
  %63 = bitcast %"class.re2::Regexp"** %62 to i64*
  store i64 %61, i64* %63, align 8
  store %"class.re2::Regexp"* %50, %"class.re2::Regexp"** %59, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState17MaybeConcatStringEiNS0_10ParseFlagsE(%"class.re2::Regexp::ParseState"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %5 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, align 8
  %6 = icmp eq %"class.re2::Regexp"* %5, null
  br i1 %6, label %70, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 6
  %9 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %8, align 8
  %10 = icmp eq %"class.re2::Regexp"* %9, null
  br i1 %10, label %70, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = add i8 %13, -3
  %15 = icmp ult i8 %14, 2
  br i1 %15, label %16, label %70

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = add i8 %18, -3
  %20 = icmp ult i8 %19, 2
  br i1 %20, label %21, label %70

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 2
  %23 = load i16, i16* %22, align 2
  %24 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 2
  %25 = load i16, i16* %24, align 2
  %26 = xor i16 %25, %23
  %27 = and i16 %26, 1
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %70

29:                                               ; preds = %21
  %30 = icmp eq i8 %18, 3
  br i1 %30, label %31, label %37

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  store i8 4, i8* %17, align 8
  store i32 0, i32* %32, align 8
  %34 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"** %34 to i32**
  store i32* null, i32** %35, align 8
  tail call void @_ZN3re26Regexp15AddRuneToStringEi(%"class.re2::Regexp"* nonnull %9, i32 %33) #18
  %36 = load i8, i8* %12, align 8
  br label %37

37:                                               ; preds = %31, %29
  %38 = phi i8 [ %36, %31 ], [ %13, %29 ]
  %39 = icmp eq i8 %38, 3
  %40 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 7, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  br i1 %39, label %47, label %42

42:                                               ; preds = %37
  %43 = icmp sgt i32 %41, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 7, i32 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"** %45 to i32**
  br label %53

47:                                               ; preds = %37
  tail call void @_ZN3re26Regexp15AddRuneToStringEi(%"class.re2::Regexp"* nonnull %9, i32 %41) #18
  br label %65

48:                                               ; preds = %53, %42
  store i32 0, i32* %40, align 8
  %49 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 7, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"** %49 to i32**
  %51 = load i32*, i32** %50, align 8
  %52 = icmp eq i32* %51, null
  br i1 %52, label %64, label %62

53:                                               ; preds = %44, %53
  %54 = phi i64 [ 0, %44 ], [ %58, %53 ]
  %55 = load i32*, i32** %46, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  %57 = load i32, i32* %56, align 4
  tail call void @_ZN3re26Regexp15AddRuneToStringEi(%"class.re2::Regexp"* nonnull %9, i32 %57) #18
  %58 = add nuw nsw i64 %54, 1
  %59 = load i32, i32* %40, align 8
  %60 = sext i32 %59 to i64
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %53, label %48

62:                                               ; preds = %48
  %63 = bitcast i32* %51 to i8*
  tail call void @_ZdaPv(i8* %63) #17
  br label %64

64:                                               ; preds = %62, %48
  store i32* null, i32** %50, align 8
  br label %65

65:                                               ; preds = %64, %47
  %66 = icmp sgt i32 %1, -1
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  store i8 3, i8* %12, align 8
  store i32 %1, i32* %40, align 8
  %68 = trunc i32 %2 to i16
  store i16 %68, i16* %22, align 2
  br label %70

69:                                               ; preds = %65
  store %"class.re2::Regexp"* %9, %"class.re2::Regexp"** %4, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %5) #18
  br label %70

70:                                               ; preds = %16, %11, %21, %3, %7, %69, %67
  %71 = phi i1 [ true, %67 ], [ false, %69 ], [ false, %7 ], [ false, %3 ], [ false, %11 ], [ false, %16 ], [ false, %21 ]
  ret i1 %71
}

declare void @_ZN3re216CharClassBuilder11RemoveAboveEi(%"class.re2::CharClassBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"*, i32, i32) unnamed_addr #3

declare zeroext i1 @_ZN3re216CharClassBuilder8ContainsEi(%"class.re2::CharClassBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState8IsMarkerENS_8RegexpOpE(%"class.re2::Regexp::ParseState"* nocapture readnone, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp sgt i32 %1, 21
  ret i1 %3
}

declare zeroext i1 @_ZN3re26Regexp13ComputeSimpleEv(%"class.re2::Regexp"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.re2::CaseFold"* @_ZN3re214LookupCaseFoldEPKNS_8CaseFoldEii(%"struct.re2::CaseFold"* readonly, i32, i32) local_unnamed_addr #6 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %0, i64 %4
  %6 = icmp sgt i32 %1, 0
  br i1 %6, label %7, label %29

7:                                                ; preds = %3, %25
  %8 = phi i32 [ %27, %25 ], [ %1, %3 ]
  %9 = phi %"struct.re2::CaseFold"* [ %26, %25 ], [ %0, %3 ]
  %10 = lshr i32 %8, 1
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %9, i64 %11
  %13 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %2
  br i1 %15, label %25, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %9, i64 %11, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, %2
  br i1 %19, label %20, label %33

20:                                               ; preds = %16
  %21 = add nuw nsw i32 %10, 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %9, i64 %22
  %24 = sub nsw i32 %8, %21
  br label %25

25:                                               ; preds = %7, %20
  %26 = phi %"struct.re2::CaseFold"* [ %23, %20 ], [ %9, %7 ]
  %27 = phi i32 [ %24, %20 ], [ %10, %7 ]
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %7, label %29

29:                                               ; preds = %25, %3
  %30 = phi %"struct.re2::CaseFold"* [ %0, %3 ], [ %26, %25 ]
  %31 = icmp ult %"struct.re2::CaseFold"* %30, %5
  %32 = select i1 %31, %"struct.re2::CaseFold"* %30, %"struct.re2::CaseFold"* null
  br label %33

33:                                               ; preds = %16, %29
  %34 = phi %"struct.re2::CaseFold"* [ %32, %29 ], [ %12, %16 ]
  ret %"struct.re2::CaseFold"* %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3re29ApplyFoldEPKNS_8CaseFoldEi(%"struct.re2::CaseFold"* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %5 [
    i32 1073741824, label %7
    i32 1, label %13
    i32 1073741825, label %20
    i32 -1, label %26
  ]

5:                                                ; preds = %2
  %6 = add nsw i32 %4, %1
  br label %33

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sub nsw i32 %1, %9
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %33

13:                                               ; preds = %7, %2
  %14 = and i32 %1, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = add nsw i32 %1, 1
  br label %33

18:                                               ; preds = %13
  %19 = add nsw i32 %1, -1
  br label %33

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %0, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sub nsw i32 %1, %22
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20, %2
  %27 = srem i32 %1, 2
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = add nsw i32 %1, 1
  br label %33

31:                                               ; preds = %26
  %32 = add nsw i32 %1, -1
  br label %33

33:                                               ; preds = %20, %7, %31, %29, %18, %16, %5
  %34 = phi i32 [ %6, %5 ], [ %30, %29 ], [ %32, %31 ], [ %17, %16 ], [ %19, %18 ], [ %1, %7 ], [ %1, %20 ]
  ret i32 %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3re213CycleFoldRuneEi(i32) local_unnamed_addr #6 {
  %2 = load i32, i32* @_ZN3re220num_unicode_casefoldE, align 4
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [0 x %"struct.re2::CaseFold"], [0 x %"struct.re2::CaseFold"]* @_ZN3re216unicode_casefoldE, i64 0, i64 %3
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %28

6:                                                ; preds = %1, %24
  %7 = phi i32 [ %26, %24 ], [ %2, %1 ]
  %8 = phi %"struct.re2::CaseFold"* [ %25, %24 ], [ getelementptr inbounds ([0 x %"struct.re2::CaseFold"], [0 x %"struct.re2::CaseFold"]* @_ZN3re216unicode_casefoldE, i64 0, i64 0), %1 ]
  %9 = lshr i32 %7, 1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %8, i64 %10
  %12 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %24, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %8, i64 %10, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, %0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = add nuw nsw i32 %9, 1
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %8, i64 %21
  %23 = sub nsw i32 %7, %20
  br label %24

24:                                               ; preds = %19, %6
  %25 = phi %"struct.re2::CaseFold"* [ %22, %19 ], [ %8, %6 ]
  %26 = phi i32 [ %23, %19 ], [ %9, %6 ]
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %6, label %28

28:                                               ; preds = %24, %1
  %29 = phi %"struct.re2::CaseFold"* [ getelementptr inbounds ([0 x %"struct.re2::CaseFold"], [0 x %"struct.re2::CaseFold"]* @_ZN3re216unicode_casefoldE, i64 0, i64 0), %1 ], [ %25, %24 ]
  %30 = icmp ult %"struct.re2::CaseFold"* %29, %4
  br i1 %30, label %31, label %65

31:                                               ; preds = %15, %28
  %32 = phi %"struct.re2::CaseFold"* [ %29, %28 ], [ %11, %15 ]
  %33 = icmp eq %"struct.re2::CaseFold"* %32, null
  br i1 %33, label %65, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %32, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, %0
  br i1 %37, label %65, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %32, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  switch i32 %40, label %41 [
    i32 1073741824, label %43
    i32 1, label %47
    i32 1073741825, label %54
    i32 -1, label %58
  ]

41:                                               ; preds = %38
  %42 = add nsw i32 %40, %0
  br label %65

43:                                               ; preds = %38
  %44 = sub nsw i32 %0, %36
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %65

47:                                               ; preds = %43, %38
  %48 = and i32 %0, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = add nsw i32 %0, 1
  br label %65

52:                                               ; preds = %47
  %53 = add nsw i32 %0, -1
  br label %65

54:                                               ; preds = %38
  %55 = sub nsw i32 %0, %36
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %54, %38
  %59 = srem i32 %0, 2
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = add nsw i32 %0, 1
  br label %65

63:                                               ; preds = %58
  %64 = add nsw i32 %0, -1
  br label %65

65:                                               ; preds = %28, %63, %61, %54, %52, %50, %43, %41, %31, %34
  %66 = phi i32 [ %0, %34 ], [ %0, %31 ], [ %42, %41 ], [ %62, %61 ], [ %64, %63 ], [ %51, %50 ], [ %53, %52 ], [ %0, %43 ], [ %0, %54 ], [ %0, %28 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState11PushLiteralEi(%"class.re2::Regexp::ParseState"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN3re213CycleFoldRuneEi(i32 %1)
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %32, label %10

10:                                               ; preds = %7
  %11 = tail call i8* @_Znwm(i64 40) #17
  %12 = bitcast i8* %11 to %"class.re2::Regexp"*
  %13 = and i32 %4, 16382
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %12, i32 20, i32 %13) #18
  %14 = tail call i8* @_Znwm(i64 40) #17
  %15 = bitcast i8* %14 to %"class.re2::CharClassBuilder"*
  tail call void @_ZN3re216CharClassBuilderC1Ev(%"class.re2::CharClassBuilder"* nonnull %15) #18
  %16 = getelementptr inbounds i8, i8* %11, i64 32
  %17 = bitcast i8* %16 to %"class.re2::CharClassBuilder"**
  %18 = bitcast i8* %16 to i8**
  store i8* %14, i8** %18, align 8
  br label %19

19:                                               ; preds = %29, %10
  %20 = phi i32 [ %1, %10 ], [ %30, %29 ]
  %21 = load i32, i32* %3, align 8
  %22 = and i32 %21, 2048
  %23 = icmp eq i32 %22, 0
  %24 = icmp ne i32 %20, 10
  %25 = or i1 %24, %23
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %17, align 8
  %28 = tail call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* %27, i32 %20, i32 %20) #18
  br label %29

29:                                               ; preds = %19, %26
  %30 = tail call i32 @_ZN3re213CycleFoldRuneEi(i32 %20)
  %31 = icmp eq i32 %30, %1
  br i1 %31, label %48, label %19

32:                                               ; preds = %7, %2
  %33 = and i32 %4, 2048
  %34 = icmp ne i32 %33, 0
  %35 = icmp eq i32 %1, 10
  %36 = and i1 %35, %34
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = tail call i8* @_Znwm(i64 40) #17
  %39 = bitcast i8* %38 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %39, i32 1, i32 %4) #18
  br label %48

40:                                               ; preds = %32
  %41 = tail call zeroext i1 @_ZN3re26Regexp10ParseState17MaybeConcatStringEiNS0_10ParseFlagsE(%"class.re2::Regexp::ParseState"* %0, i32 %1, i32 %4)
  br i1 %41, label %51, label %42

42:                                               ; preds = %40
  %43 = tail call i8* @_Znwm(i64 40) #17
  %44 = bitcast i8* %43 to %"class.re2::Regexp"*
  %45 = load i32, i32* %3, align 8
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %44, i32 3, i32 %45) #18
  %46 = getelementptr inbounds i8, i8* %43, i64 24
  %47 = bitcast i8* %46 to i32*
  store i32 %1, i32* %47, align 8
  br label %48

48:                                               ; preds = %29, %37, %42
  %49 = phi %"class.re2::Regexp"* [ %44, %42 ], [ %39, %37 ], [ %12, %29 ]
  %50 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %49)
  br label %51

51:                                               ; preds = %48, %40
  ret i1 true
}

declare void @_ZN3re216CharClassBuilderC1Ev(%"class.re2::CharClassBuilder"*) unnamed_addr #3

declare zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState9PushCaretEv(%"class.re2::Regexp::ParseState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16
  %5 = icmp eq i32 %4, 0
  %6 = tail call i8* @_Znwm(i64 40) #17
  %7 = bitcast i8* %6 to %"class.re2::Regexp"*
  %8 = select i1 %5, i32 14, i32 18
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %7, i32 %8, i32 %3) #18
  %9 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %7) #18
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState12PushSimpleOpENS_8RegexpOpE(%"class.re2::Regexp::ParseState"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #17
  %4 = bitcast i8* %3 to %"class.re2::Regexp"*
  %5 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %4, i32 %1, i32 %6) #18
  %7 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState16PushWordBoundaryEb(%"class.re2::Regexp::ParseState"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #17
  %4 = bitcast i8* %3 to %"class.re2::Regexp"*
  %5 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = select i1 %1, i32 16, i32 17
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %4, i32 %7, i32 %6) #18
  %8 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %4) #18
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState10PushDollarEv(%"class.re2::Regexp::ParseState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = or i32 %3, 8192
  store i32 %7, i32* %2, align 8
  %8 = tail call i8* @_Znwm(i64 40) #17
  %9 = bitcast i8* %8 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %9, i32 19, i32 %7) #18
  %10 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %9) #18
  store i32 %3, i32* %2, align 8
  br label %15

11:                                               ; preds = %1
  %12 = tail call i8* @_Znwm(i64 40) #17
  %13 = bitcast i8* %12 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %13, i32 15, i32 %3) #18
  %14 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %13) #18
  br label %15

15:                                               ; preds = %11, %6
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState7PushDotEv(%"class.re2::Regexp::ParseState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 2056
  %5 = icmp eq i32 %4, 8
  %6 = tail call i8* @_Znwm(i64 40) #17
  %7 = bitcast i8* %6 to %"class.re2::Regexp"*
  br i1 %5, label %8, label %10

8:                                                ; preds = %1
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %7, i32 12, i32 %3) #18
  %9 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %7) #18
  br label %23

10:                                               ; preds = %1
  %11 = and i32 %3, 16382
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %7, i32 20, i32 %11) #18
  %12 = tail call i8* @_Znwm(i64 40) #17
  %13 = bitcast i8* %12 to %"class.re2::CharClassBuilder"*
  tail call void @_ZN3re216CharClassBuilderC1Ev(%"class.re2::CharClassBuilder"* nonnull %13) #18
  %14 = getelementptr inbounds i8, i8* %6, i64 32
  %15 = bitcast i8* %14 to %"class.re2::CharClassBuilder"**
  %16 = bitcast i8* %14 to i8**
  store i8* %12, i8** %16, align 8
  %17 = tail call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* nonnull %13, i32 0, i32 9) #18
  %18 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %15, align 8
  %19 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = tail call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* %18, i32 11, i32 %20) #18
  %22 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %7)
  br label %23

23:                                               ; preds = %10, %8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState12PushRepeatOpENS_8RegexpOpERKNS_11StringPieceEb(%"class.re2::Regexp::ParseState"* nocapture, i32, %"class.re2::StringPiece"* nocapture readonly dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %6 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %5, align 8
  %7 = icmp eq %"class.re2::Regexp"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 0
  %10 = load i8, i8* %9, align 8
  %11 = zext i8 %10 to i32
  %12 = icmp ugt i8 %10, 21
  br i1 %12, label %13, label %21

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %15 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %14, align 8
  %16 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %15, i64 0, i32 0
  store i32 9, i32* %16, align 8
  %17 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %14, align 8
  %18 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %17, i64 0, i32 1
  %19 = bitcast %"class.re2::StringPiece"* %18 to i8*
  %20 = bitcast %"class.re2::StringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false) #18
  br label %86

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = xor i32 %23, 64
  %25 = select i1 %3, i32 %24, i32 %23
  %26 = icmp eq i32 %11, %1
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 2
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = icmp eq i32 %25, %30
  br i1 %31, label %86, label %32

32:                                               ; preds = %27, %21
  %33 = add nsw i32 %11, -7
  %34 = icmp ult i32 %33, 3
  br i1 %34, label %35, label %41

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 2
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp eq i32 %25, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  store i8 7, i8* %9, align 8
  br label %86

41:                                               ; preds = %32, %35
  %42 = tail call i8* @_Znwm(i64 40) #17
  %43 = bitcast i8* %42 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %43, i32 %1, i32 %25) #18
  %44 = getelementptr inbounds i8, i8* %42, i64 6
  %45 = bitcast i8* %44 to i16*
  store i16 1, i16* %45, align 2
  %46 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %5, align 8
  %47 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %46, i64 0, i32 6
  %48 = bitcast %"class.re2::Regexp"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %42, i64 16
  %51 = bitcast i8* %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = icmp eq %"class.re2::Regexp"* %46, null
  br i1 %52, label %71, label %53

53:                                               ; preds = %41
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %47, align 8
  %54 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %46, i64 0, i32 0
  %55 = load i8, i8* %54, align 8
  %56 = icmp eq i8 %55, 20
  br i1 %56, label %57, label %71

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %46, i64 0, i32 7, i32 0, i32 1
  %59 = bitcast %"class.std::__1::basic_string"** %58 to %"class.re2::CharClassBuilder"**
  %60 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %59, align 8
  %61 = icmp eq %"class.re2::CharClassBuilder"* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %46, i64 0, i32 7
  store %"class.re2::CharClassBuilder"* null, %"class.re2::CharClassBuilder"** %59, align 8
  %64 = tail call %"class.re2::CharClass"* @_ZN3re216CharClassBuilder12GetCharClassEv(%"class.re2::CharClassBuilder"* nonnull %60) #18
  %65 = bitcast %union.anon.2* %63 to %"class.re2::CharClass"**
  store %"class.re2::CharClass"* %64, %"class.re2::CharClass"** %65, align 8
  %66 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %60, i64 0, i32 3, i32 0
  %67 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %60, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to %"class.std::__1::__tree_node"**
  %69 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %68, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %66, %"class.std::__1::__tree_node"* %69) #18
  %70 = bitcast %"class.re2::CharClassBuilder"* %60 to i8*
  tail call void @_ZdlPv(i8* %70) #17
  br label %71

71:                                               ; preds = %41, %53, %57, %62
  %72 = load i16, i16* %45, align 2
  %73 = icmp ult i16 %72, 2
  %74 = getelementptr inbounds i8, i8* %42, i64 8
  br i1 %73, label %75, label %77

75:                                               ; preds = %71
  %76 = bitcast i8* %74 to %"class.re2::Regexp"**
  br label %80

77:                                               ; preds = %71
  %78 = bitcast i8* %74 to %"class.re2::Regexp"***
  %79 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %78, align 8
  br label %80

80:                                               ; preds = %75, %77
  %81 = phi %"class.re2::Regexp"** [ %76, %75 ], [ %79, %77 ]
  store %"class.re2::Regexp"* %46, %"class.re2::Regexp"** %81, align 8
  %82 = tail call zeroext i1 @_ZN3re26Regexp13ComputeSimpleEv(%"class.re2::Regexp"* nonnull %43) #18
  %83 = zext i1 %82 to i8
  %84 = getelementptr inbounds i8, i8* %42, i64 1
  store i8 %83, i8* %84, align 1
  %85 = bitcast %"class.re2::Regexp"** %5 to i8**
  store i8* %42, i8** %85, align 8
  br label %86

86:                                               ; preds = %40, %80, %27, %13
  %87 = phi i1 [ false, %13 ], [ true, %27 ], [ true, %80 ], [ true, %40 ]
  ret i1 %87
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3re216RepetitionWalker8PreVisitEPNS_6RegexpEiPb(%"class.re2::RepetitionWalker"* nocapture readnone, %"class.re2::Regexp"* nocapture readonly, i32, i8* nocapture readnone) unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 10
  br i1 %7, label %8, label %22

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7
  %14 = bitcast %union.anon.2* %13 to %struct.anon.3*
  %15 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %12, %8
  %18 = phi i32 [ %16, %12 ], [ %10, %8 ]
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = sdiv i32 %2, %18
  br label %22

22:                                               ; preds = %17, %20, %4
  %23 = phi i32 [ %2, %4 ], [ %21, %20 ], [ %2, %17 ]
  ret i32 %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3re216RepetitionWalker9PostVisitEPNS_6RegexpEiiPii(%"class.re2::RepetitionWalker"* nocapture readnone, %"class.re2::Regexp"* nocapture readnone, i32, i32, i32* nocapture readonly, i32) unnamed_addr #6 align 2 {
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %8, label %85

8:                                                ; preds = %6
  %9 = zext i32 %5 to i64
  %10 = icmp ult i32 %5, 8
  br i1 %10, label %11, label %14

11:                                               ; preds = %72, %8
  %12 = phi i64 [ 0, %8 ], [ %15, %72 ]
  %13 = phi i32 [ %3, %8 ], [ %83, %72 ]
  br label %87

14:                                               ; preds = %8
  %15 = and i64 %9, 4294967288
  %16 = insertelement <4 x i32> undef, i32 %3, i32 0
  %17 = shufflevector <4 x i32> %16, <4 x i32> undef, <4 x i32> zeroinitializer
  %18 = add nsw i64 %15, -8
  %19 = lshr exact i64 %18, 3
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %54, label %23

23:                                               ; preds = %14
  %24 = sub nuw nsw i64 %20, %21
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %51, %25 ]
  %27 = phi <4 x i32> [ %17, %23 ], [ %49, %25 ]
  %28 = phi <4 x i32> [ %17, %23 ], [ %50, %25 ]
  %29 = phi i64 [ %24, %23 ], [ %52, %25 ]
  %30 = getelementptr inbounds i32, i32* %4, i64 %26
  %31 = bitcast i32* %30 to <4 x i32>*
  %32 = load <4 x i32>, <4 x i32>* %31, align 4
  %33 = getelementptr inbounds i32, i32* %30, i64 4
  %34 = bitcast i32* %33 to <4 x i32>*
  %35 = load <4 x i32>, <4 x i32>* %34, align 4
  %36 = icmp slt <4 x i32> %32, %27
  %37 = icmp slt <4 x i32> %35, %28
  %38 = select <4 x i1> %36, <4 x i32> %32, <4 x i32> %27
  %39 = select <4 x i1> %37, <4 x i32> %35, <4 x i32> %28
  %40 = or i64 %26, 8
  %41 = getelementptr inbounds i32, i32* %4, i64 %40
  %42 = bitcast i32* %41 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4
  %44 = getelementptr inbounds i32, i32* %41, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  %46 = load <4 x i32>, <4 x i32>* %45, align 4
  %47 = icmp slt <4 x i32> %43, %38
  %48 = icmp slt <4 x i32> %46, %39
  %49 = select <4 x i1> %47, <4 x i32> %43, <4 x i32> %38
  %50 = select <4 x i1> %48, <4 x i32> %46, <4 x i32> %39
  %51 = add i64 %26, 16
  %52 = add i64 %29, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %25, !llvm.loop !2

54:                                               ; preds = %25, %14
  %55 = phi <4 x i32> [ undef, %14 ], [ %49, %25 ]
  %56 = phi <4 x i32> [ undef, %14 ], [ %50, %25 ]
  %57 = phi i64 [ 0, %14 ], [ %51, %25 ]
  %58 = phi <4 x i32> [ %17, %14 ], [ %49, %25 ]
  %59 = phi <4 x i32> [ %17, %14 ], [ %50, %25 ]
  %60 = icmp eq i64 %21, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds i32, i32* %4, i64 %57
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds i32, i32* %62, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = icmp slt <4 x i32> %67, %59
  %69 = select <4 x i1> %68, <4 x i32> %67, <4 x i32> %59
  %70 = icmp slt <4 x i32> %64, %58
  %71 = select <4 x i1> %70, <4 x i32> %64, <4 x i32> %58
  br label %72

72:                                               ; preds = %54, %61
  %73 = phi <4 x i32> [ %55, %54 ], [ %71, %61 ]
  %74 = phi <4 x i32> [ %56, %54 ], [ %69, %61 ]
  %75 = icmp slt <4 x i32> %73, %74
  %76 = select <4 x i1> %75, <4 x i32> %73, <4 x i32> %74
  %77 = shufflevector <4 x i32> %76, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %78 = icmp slt <4 x i32> %76, %77
  %79 = select <4 x i1> %78, <4 x i32> %76, <4 x i32> %77
  %80 = shufflevector <4 x i32> %79, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %81 = icmp slt <4 x i32> %79, %80
  %82 = select <4 x i1> %81, <4 x i32> %79, <4 x i32> %80
  %83 = extractelement <4 x i32> %82, i32 0
  %84 = icmp eq i64 %15, %9
  br i1 %84, label %85, label %11

85:                                               ; preds = %87, %72, %6
  %86 = phi i32 [ %3, %6 ], [ %83, %72 ], [ %93, %87 ]
  ret i32 %86

87:                                               ; preds = %11, %87
  %88 = phi i64 [ %94, %87 ], [ %12, %11 ]
  %89 = phi i32 [ %93, %87 ], [ %13, %11 ]
  %90 = getelementptr inbounds i32, i32* %4, i64 %88
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, %89
  %93 = select i1 %92, i32 %91, i32 %89
  %94 = add nuw nsw i64 %88, 1
  %95 = icmp eq i64 %94, %9
  br i1 %95, label %85, label %87, !llvm.loop !4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re216RepetitionWalker10ShortVisitEPNS_6RegexpEi(%"class.re2::RepetitionWalker"* nocapture readnone, %"class.re2::Regexp"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.LogMessage, align 8
  %5 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %5) #18
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i64*
  store i64 %13, i64* %21, align 8
  %22 = load i8*, i8** %14, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #18
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #18
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 1
  %35 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %35, align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 38) #18
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %39, i32 561) #18
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i64 35) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %5) #18
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10LogMessageD2Ev(%class.LogMessage*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !6
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #18
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #18
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_stringbuf"* %13) #18
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i64, i64* %12, align 8
  %19 = load i8*, i8** %11, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %18, i64 %20
  %22 = select i1 %17, i8* %19, i8* %10
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = call i64 @fwrite(i8* %22, i64 1, i64 %21, %struct._IO_FILE* %23) #19
  store i8 1, i8* %3, align 8
  %25 = load i8, i8* %15, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %6
  %28 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #18
  br label %30

30:                                               ; preds = %1, %29
  %31 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %32 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %35 = inttoptr i64 %32 to i8*
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = bitcast i8* %40 to i64*
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #17
  br label %52

52:                                               ; preds = %30, %49
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %53) #18
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %31 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %54, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #18
  %55 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 2
  %56 = bitcast %"class.std::__1::basic_ios.base"* %55 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %56) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState14PushRepetitionEiiRKNS_11StringPieceEb(%"class.re2::Regexp::ParseState"* nocapture, i32, i32, %"class.re2::StringPiece"* nocapture readonly dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.re2::RepetitionWalker", align 8
  %7 = icmp ne i32 %2, -1
  %8 = icmp slt i32 %2, %1
  %9 = and i1 %7, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = icmp sgt i32 %1, 1000
  %12 = icmp sgt i32 %2, 1000
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %22

14:                                               ; preds = %5, %10
  %15 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %16 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %15, align 8
  %17 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %16, i64 0, i32 0
  store i32 10, i32* %17, align 8
  %18 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %15, align 8
  %19 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %18, i64 0, i32 1
  %20 = bitcast %"class.re2::StringPiece"* %19 to i8*
  %21 = bitcast %"class.re2::StringPiece"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false) #18
  br label %112

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %24 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %23, align 8
  %25 = icmp eq %"class.re2::Regexp"* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %24, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp ugt i8 %28, 21
  br i1 %29, label %30, label %38

30:                                               ; preds = %26, %22
  %31 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %32 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %31, align 8
  %33 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %32, i64 0, i32 0
  store i32 9, i32* %33, align 8
  %34 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %31, align 8
  %35 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %34, i64 0, i32 1
  %36 = bitcast %"class.re2::StringPiece"* %35 to i8*
  %37 = bitcast %"class.re2::StringPiece"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false) #18
  br label %112

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = xor i32 %40, 64
  %42 = select i1 %4, i32 %41, i32 %40
  %43 = tail call i8* @_Znwm(i64 40) #17
  %44 = bitcast i8* %43 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %44, i32 10, i32 %42) #18
  %45 = getelementptr inbounds i8, i8* %43, i64 24
  %46 = getelementptr inbounds i8, i8* %43, i64 28
  %47 = bitcast i8* %46 to i32*
  store i32 %1, i32* %47, align 4
  %48 = bitcast i8* %45 to i32*
  store i32 %2, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 6
  %50 = bitcast i8* %49 to i16*
  store i16 1, i16* %50, align 2
  %51 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %23, align 8
  %52 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %51, i64 0, i32 6
  %53 = bitcast %"class.re2::Regexp"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds i8, i8* %43, i64 16
  %56 = bitcast i8* %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = icmp eq %"class.re2::Regexp"* %51, null
  br i1 %57, label %76, label %58

58:                                               ; preds = %38
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %52, align 8
  %59 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %51, i64 0, i32 0
  %60 = load i8, i8* %59, align 8
  %61 = icmp eq i8 %60, 20
  br i1 %61, label %62, label %76

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %51, i64 0, i32 7, i32 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"** %63 to %"class.re2::CharClassBuilder"**
  %65 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %64, align 8
  %66 = icmp eq %"class.re2::CharClassBuilder"* %65, null
  br i1 %66, label %76, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %51, i64 0, i32 7
  store %"class.re2::CharClassBuilder"* null, %"class.re2::CharClassBuilder"** %64, align 8
  %69 = tail call %"class.re2::CharClass"* @_ZN3re216CharClassBuilder12GetCharClassEv(%"class.re2::CharClassBuilder"* nonnull %65) #18
  %70 = bitcast %union.anon.2* %68 to %"class.re2::CharClass"**
  store %"class.re2::CharClass"* %69, %"class.re2::CharClass"** %70, align 8
  %71 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %65, i64 0, i32 3, i32 0
  %72 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %65, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node"**
  %74 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %73, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %71, %"class.std::__1::__tree_node"* %74) #18
  %75 = bitcast %"class.re2::CharClassBuilder"* %65 to i8*
  tail call void @_ZdlPv(i8* %75) #17
  br label %76

76:                                               ; preds = %38, %58, %62, %67
  %77 = load i16, i16* %50, align 2
  %78 = icmp ult i16 %77, 2
  %79 = getelementptr inbounds i8, i8* %43, i64 8
  br i1 %78, label %80, label %82

80:                                               ; preds = %76
  %81 = bitcast i8* %79 to %"class.re2::Regexp"**
  br label %85

82:                                               ; preds = %76
  %83 = bitcast i8* %79 to %"class.re2::Regexp"***
  %84 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %83, align 8
  br label %85

85:                                               ; preds = %80, %82
  %86 = phi %"class.re2::Regexp"** [ %81, %80 ], [ %84, %82 ]
  store %"class.re2::Regexp"* %51, %"class.re2::Regexp"** %86, align 8
  %87 = tail call zeroext i1 @_ZN3re26Regexp13ComputeSimpleEv(%"class.re2::Regexp"* nonnull %44) #18
  %88 = zext i1 %87 to i8
  %89 = getelementptr inbounds i8, i8* %43, i64 1
  store i8 %88, i8* %89, align 1
  %90 = bitcast %"class.re2::Regexp"** %23 to i8**
  store i8* %43, i8** %90, align 8
  %91 = icmp sgt i32 %1, 1
  %92 = icmp sgt i32 %2, 1
  %93 = or i1 %91, %92
  br i1 %93, label %94, label %112

94:                                               ; preds = %85
  %95 = bitcast %"class.re2::RepetitionWalker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %95) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 64, i1 false)
  %96 = getelementptr inbounds %"class.re2::RepetitionWalker", %"class.re2::RepetitionWalker"* %6, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.re2::RepetitionWalker", %"class.re2::RepetitionWalker"* %6, i64 0, i32 0, i32 1
  %98 = bitcast %"class.std::__1::stack"* %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 49, i1 false) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re216RepetitionWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %99 = getelementptr inbounds %"class.re2::RepetitionWalker", %"class.re2::RepetitionWalker"* %6, i64 0, i32 0
  %100 = getelementptr inbounds %"class.re2::RepetitionWalker", %"class.re2::RepetitionWalker"* %6, i64 0, i32 0, i32 3
  store i32 1000000, i32* %100, align 4
  %101 = call i32 @_ZN3re26Regexp6WalkerIiE12WalkInternalEPS0_ib(%"class.re2::Regexp::Walker"* nonnull %99, %"class.re2::Regexp"* nonnull %44, i32 1000, i1 zeroext true) #18
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %111

103:                                              ; preds = %94
  %104 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %105 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %104, align 8
  %106 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %105, i64 0, i32 0
  store i32 10, i32* %106, align 8
  %107 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %104, align 8
  %108 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %107, i64 0, i32 1
  %109 = bitcast %"class.re2::StringPiece"* %108 to i8*
  %110 = bitcast %"class.re2::StringPiece"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #18
  call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* nonnull %99) #18
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %95) #18
  br label %112

111:                                              ; preds = %94
  call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* nonnull %99) #18
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %95) #18
  br label %112

112:                                              ; preds = %103, %111, %85, %30, %14
  %113 = phi i1 [ false, %14 ], [ false, %30 ], [ false, %103 ], [ true, %111 ], [ true, %85 ]
  ret i1 %113
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re26Regexp6WalkerIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3re26Regexp6WalkerIiE5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 7
  %8 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %4, i64 %7
  %9 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %9, align 8
  %11 = icmp eq %"struct.re2::WalkState"** %10, %4
  %12 = ptrtoint %"struct.re2::WalkState"** %10 to i64
  %13 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %8, align 8
  %18 = and i64 %6, 127
  %19 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %17, i64 %18
  %20 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %6
  %23 = lshr i64 %22, 7
  %24 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %4, i64 %23
  %25 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %24, align 8
  %26 = and i64 %22, 127
  %27 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %25, i64 %26
  %28 = icmp eq %"struct.re2::WalkState"* %27, %19
  br i1 %28, label %29, label %35

29:                                               ; preds = %48, %16, %14
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ], [ %20, %48 ]
  store i64 0, i64* %30, align 8
  %31 = bitcast %"struct.re2::WalkState"*** %9 to i64*
  %32 = sub i64 %12, %13
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, 2
  br i1 %34, label %53, label %66

35:                                               ; preds = %16, %48
  %36 = phi %"struct.re2::WalkState"* [ %51, %48 ], [ %19, %16 ]
  %37 = phi %"struct.re2::WalkState"** [ %50, %48 ], [ %8, %16 ]
  %38 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %36, i64 1
  %39 = ptrtoint %"struct.re2::WalkState"* %38 to i64
  %40 = bitcast %"struct.re2::WalkState"** %37 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 4096
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %37, i64 1
  %46 = bitcast %"struct.re2::WalkState"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %44, %35
  %49 = phi i64 [ %47, %44 ], [ %39, %35 ]
  %50 = phi %"struct.re2::WalkState"** [ %45, %44 ], [ %37, %35 ]
  %51 = inttoptr i64 %49 to %"struct.re2::WalkState"*
  %52 = icmp eq %"struct.re2::WalkState"* %27, %51
  br i1 %52, label %29, label %35

53:                                               ; preds = %29, %53
  %54 = phi %"struct.re2::WalkState"** [ %58, %53 ], [ %4, %29 ]
  %55 = bitcast %"struct.re2::WalkState"** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #17
  %57 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %58 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %57, i64 1
  store %"struct.re2::WalkState"** %58, %"struct.re2::WalkState"*** %3, align 8
  %59 = load i64, i64* %31, align 8
  %60 = ptrtoint %"struct.re2::WalkState"** %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 2
  br i1 %63, label %53, label %64

64:                                               ; preds = %53
  %65 = inttoptr i64 %59 to %"struct.re2::WalkState"**
  br label %66

66:                                               ; preds = %64, %29
  %67 = phi %"struct.re2::WalkState"** [ %10, %29 ], [ %65, %64 ]
  %68 = phi %"struct.re2::WalkState"** [ %4, %29 ], [ %58, %64 ]
  %69 = phi i64 [ %33, %29 ], [ %62, %64 ]
  switch i64 %69, label %73 [
    i64 1, label %71
    i64 2, label %70
  ]

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %66, %70
  %72 = phi i64 [ 128, %70 ], [ 64, %66 ]
  store i64 %72, i64* %5, align 8
  br label %73

73:                                               ; preds = %71, %66
  %74 = icmp eq %"struct.re2::WalkState"** %68, %67
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"struct.re2::WalkState"** [ %79, %75 ], [ %68, %73 ]
  %77 = bitcast %"struct.re2::WalkState"** %76 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #17
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %76, i64 1
  %80 = icmp eq %"struct.re2::WalkState"** %79, %67
  br i1 %80, label %81, label %75

81:                                               ; preds = %75
  %82 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %83 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %9, align 8
  %84 = icmp eq %"struct.re2::WalkState"** %83, %82
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"struct.re2::WalkState"** %82 to i64
  %87 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %83, i64 -1
  %88 = ptrtoint %"struct.re2::WalkState"** %87 to i64
  %89 = sub i64 %88, %86
  %90 = lshr i64 %89, 3
  %91 = xor i64 %90, -1
  %92 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %83, i64 %91
  store %"struct.re2::WalkState"** %92, %"struct.re2::WalkState"*** %9, align 8
  br label %93

93:                                               ; preds = %85, %81, %73
  %94 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %95 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %94, align 8
  %96 = icmp eq %"struct.re2::WalkState"** %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = bitcast %"struct.re2::WalkState"** %95 to i8*
  tail call void @_ZdlPv(i8* %98) #17
  br label %99

99:                                               ; preds = %93, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState11DoLeftParenERKNS_11StringPieceE(%"class.re2::Regexp::ParseState"* nocapture, %"class.re2::StringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #17
  %4 = bitcast i8* %3 to %"class.re2::Regexp"*
  %5 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %4, i32 22, i32 %6) #18
  %7 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 24
  %11 = bitcast i8* %10 to i32*
  store i32 %9, i32* %11, align 8
  %12 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %45, label %15

15:                                               ; preds = %2
  %16 = tail call i8* @_Znwm(i64 24) #17
  %17 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !7
  %19 = icmp ugt i64 %18, -17
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = bitcast i8* %16 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %21) #20
  unreachable

22:                                               ; preds = %15
  %23 = icmp ult i64 %18, 23
  br i1 %23, label %34, label %24

24:                                               ; preds = %22
  %25 = add nuw i64 %18, 16
  %26 = and i64 %25, -16
  %27 = tail call i8* @_Znwm(i64 %26) #17
  %28 = bitcast i8* %16 to i8**
  store i8* %27, i8** %28, align 8, !alias.scope !7
  %29 = or i64 %26, -9223372036854775808
  %30 = getelementptr inbounds i8, i8* %16, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %29, i64* %31, align 8, !alias.scope !7
  %32 = getelementptr inbounds i8, i8* %16, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %18, i64* %33, align 8, !alias.scope !7
  br label %38

34:                                               ; preds = %22
  %35 = trunc i64 %18 to i8
  %36 = getelementptr inbounds i8, i8* %16, i64 23
  store i8 %35, i8* %36, align 1, !alias.scope !7
  %37 = icmp eq i64 %18, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34, %24
  %39 = phi i8* [ %27, %24 ], [ %16, %34 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* nonnull align 1 %13, i64 %18, i1 false) #18
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi i8* [ %16, %34 ], [ %39, %38 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %18
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds i8, i8* %3, i64 32
  %44 = bitcast i8* %43 to i8**
  store i8* %16, i8** %44, align 8
  br label %45

45:                                               ; preds = %2, %40
  %46 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState20DoLeftParenNoCaptureEv(%"class.re2::Regexp::ParseState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #17
  %3 = bitcast i8* %2 to %"class.re2::Regexp"*
  %4 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %3, i32 22, i32 %5) #18
  %6 = getelementptr inbounds i8, i8* %2, i64 24
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7, align 8
  %8 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %3)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState13DoVerticalBarEv(%"class.re2::Regexp::ParseState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN3re26Regexp10ParseState17MaybeConcatStringEiNS0_10ParseFlagsE(%"class.re2::Regexp::ParseState"* %0, i32 -1, i32 0)
  %3 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %4 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  %5 = icmp eq %"class.re2::Regexp"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = icmp ugt i8 %8, 21
  br i1 %9, label %10, label %16

10:                                               ; preds = %6, %1
  %11 = tail call i8* @_Znwm(i64 40) #17
  %12 = bitcast i8* %11 to %"class.re2::Regexp"*
  %13 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %12, i32 2, i32 %14) #18
  %15 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %12) #18
  br label %16

16:                                               ; preds = %6, %10
  tail call void @_ZN3re26Regexp10ParseState10DoCollapseENS_8RegexpOpE(%"class.re2::Regexp::ParseState"* %0, i32 5) #18
  %17 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  %18 = icmp eq %"class.re2::Regexp"* %17, null
  br i1 %18, label %51, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %17, i64 0, i32 6
  %21 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %20, align 8
  %22 = icmp eq %"class.re2::Regexp"* %21, null
  br i1 %22, label %51, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %21, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 23
  br i1 %26, label %27, label %51

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %21, i64 0, i32 6
  %29 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %28, align 8
  %30 = icmp eq %"class.re2::Regexp"* %29, null
  %31 = ptrtoint %"class.re2::Regexp"* %29 to i64
  br i1 %30, label %49, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %17, i64 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 12
  %36 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %29, i64 0, i32 0
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 12
  br i1 %35, label %40, label %39

39:                                               ; preds = %32
  br i1 %38, label %41, label %49

40:                                               ; preds = %32
  br i1 %38, label %42, label %43

41:                                               ; preds = %39
  switch i8 %34, label %49 [
    i8 3, label %42
    i8 20, label %42
  ]

42:                                               ; preds = %40, %41, %41
  store %"class.re2::Regexp"* %21, %"class.re2::Regexp"** %3, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %17) #18
  br label %57

43:                                               ; preds = %40
  switch i8 %37, label %49 [
    i8 3, label %44
    i8 20, label %44
  ]

44:                                               ; preds = %43, %43
  %45 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %29, i64 0, i32 6
  %46 = bitcast %"class.re2::Regexp"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.re2::Regexp"** %20 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.re2::Regexp"* %17, %"class.re2::Regexp"** %28, align 8
  store %"class.re2::Regexp"* %21, %"class.re2::Regexp"** %3, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %29) #18
  br label %57

49:                                               ; preds = %41, %43, %27, %39
  %50 = bitcast %"class.re2::Regexp"** %20 to i64*
  store i64 %31, i64* %50, align 8
  store %"class.re2::Regexp"* %17, %"class.re2::Regexp"** %28, align 8
  store %"class.re2::Regexp"* %21, %"class.re2::Regexp"** %3, align 8
  br label %57

51:                                               ; preds = %19, %16, %23
  %52 = tail call i8* @_Znwm(i64 40) #17
  %53 = bitcast i8* %52 to %"class.re2::Regexp"*
  %54 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %53, i32 23, i32 %55) #18
  %56 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %53) #18
  br label %57

57:                                               ; preds = %42, %44, %49, %51
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp10ParseState15DoConcatenationEv(%"class.re2::Regexp::ParseState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %3 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %2, align 8
  %4 = icmp eq %"class.re2::Regexp"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %3, i64 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = icmp ugt i8 %7, 21
  br i1 %8, label %9, label %15

9:                                                ; preds = %5, %1
  %10 = tail call i8* @_Znwm(i64 40) #17
  %11 = bitcast i8* %10 to %"class.re2::Regexp"*
  %12 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %11, i32 2, i32 %13) #18
  %14 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %11)
  br label %15

15:                                               ; preds = %9, %5
  tail call void @_ZN3re26Regexp10ParseState10DoCollapseENS_8RegexpOpE(%"class.re2::Regexp::ParseState"* %0, i32 5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState12DoRightParenEv(%"class.re2::Regexp::ParseState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN3re26Regexp10ParseState13DoVerticalBarEv(%"class.re2::Regexp::ParseState"* %0) #18
  %3 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %4 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 6
  %6 = bitcast %"class.re2::Regexp"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.re2::Regexp"** %3 to i64*
  store i64 %7, i64* %8, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %4) #18
  tail call void @_ZN3re26Regexp10ParseState10DoCollapseENS_8RegexpOpE(%"class.re2::Regexp::ParseState"* %0, i32 6) #18
  %9 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  %10 = icmp eq %"class.re2::Regexp"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 6
  %13 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %12, align 8
  %14 = icmp eq %"class.re2::Regexp"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %13, i64 0, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 22
  br i1 %18, label %28, label %19

19:                                               ; preds = %15, %11, %1
  %20 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %21 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %20, align 8
  %22 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %21, i64 0, i32 0
  store i32 7, i32* %22, align 8
  %23 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %20, align 8
  %24 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 1
  %26 = bitcast %"class.re2::StringPiece"* %25 to i8*
  %27 = bitcast %"class.re2::StringPiece"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false) #18
  br label %76

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %13, i64 0, i32 6
  %30 = bitcast %"class.re2::Regexp"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %8, align 8
  %32 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %13, i64 0, i32 2
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %13, i64 0, i32 7, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %72

39:                                               ; preds = %28
  store i8 11, i8* %16, align 8
  %40 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %13, i64 0, i32 4
  store i16 1, i16* %40, align 2
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %12, align 8
  %41 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 0
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 20
  br i1 %43, label %44, label %58

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7, i32 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"** %45 to %"class.re2::CharClassBuilder"**
  %47 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %46, align 8
  %48 = icmp eq %"class.re2::CharClassBuilder"* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7
  store %"class.re2::CharClassBuilder"* null, %"class.re2::CharClassBuilder"** %46, align 8
  %51 = tail call %"class.re2::CharClass"* @_ZN3re216CharClassBuilder12GetCharClassEv(%"class.re2::CharClassBuilder"* nonnull %47) #18
  %52 = bitcast %union.anon.2* %50 to %"class.re2::CharClass"**
  store %"class.re2::CharClass"* %51, %"class.re2::CharClass"** %52, align 8
  %53 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %47, i64 0, i32 3, i32 0
  %54 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %47, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node"**
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %55, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %53, %"class.std::__1::__tree_node"* %56) #18
  %57 = bitcast %"class.re2::CharClassBuilder"* %47 to i8*
  tail call void @_ZdlPv(i8* %57) #17
  br label %58

58:                                               ; preds = %39, %44, %49
  %59 = load i16, i16* %40, align 2
  %60 = icmp ult i16 %59, 2
  %61 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %13, i64 0, i32 5
  br i1 %60, label %62, label %64

62:                                               ; preds = %58
  %63 = bitcast %union.anon.1* %61 to %"class.re2::Regexp"**
  br label %67

64:                                               ; preds = %58
  %65 = getelementptr inbounds %union.anon.1, %union.anon.1* %61, i64 0, i32 0
  %66 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %65, align 8
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi %"class.re2::Regexp"** [ %63, %62 ], [ %66, %64 ]
  store %"class.re2::Regexp"* %9, %"class.re2::Regexp"** %68, align 8
  %69 = tail call zeroext i1 @_ZN3re26Regexp13ComputeSimpleEv(%"class.re2::Regexp"* nonnull %13) #18
  %70 = zext i1 %69 to i8
  %71 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %13, i64 0, i32 1
  store i8 %70, i8* %71, align 1
  br label %73

72:                                               ; preds = %28
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %13) #18
  br label %73

73:                                               ; preds = %72, %67
  %74 = phi %"class.re2::Regexp"* [ %13, %67 ], [ %9, %72 ]
  %75 = tail call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %74)
  br label %76

76:                                               ; preds = %73, %19
  %77 = phi i1 [ false, %19 ], [ true, %73 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp10ParseState13DoAlternationEv(%"class.re2::Regexp::ParseState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN3re26Regexp10ParseState13DoVerticalBarEv(%"class.re2::Regexp::ParseState"* %0)
  %3 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %4 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 6
  %6 = bitcast %"class.re2::Regexp"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.re2::Regexp"** %3 to i64*
  store i64 %7, i64* %8, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %4) #18
  tail call void @_ZN3re26Regexp10ParseState10DoCollapseENS_8RegexpOpE(%"class.re2::Regexp::ParseState"* %0, i32 6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp10ParseState8DoFinishEv(%"class.re2::Regexp::ParseState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN3re26Regexp10ParseState13DoVerticalBarEv(%"class.re2::Regexp::ParseState"* %0) #18
  %3 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %4 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 6
  %6 = bitcast %"class.re2::Regexp"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.re2::Regexp"** %3 to i64*
  store i64 %7, i64* %8, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %4) #18
  tail call void @_ZN3re26Regexp10ParseState10DoCollapseENS_8RegexpOpE(%"class.re2::Regexp::ParseState"* %0, i32 6) #18
  %9 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  %10 = icmp eq %"class.re2::Regexp"* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %3, align 8
  br label %43

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 6
  %14 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %13, align 8
  %15 = icmp eq %"class.re2::Regexp"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %18 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %17, align 8
  %19 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %18, i64 0, i32 0
  store i32 6, i32* %19, align 8
  %20 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %17, align 8
  %21 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %20, i64 0, i32 1
  %23 = bitcast %"class.re2::StringPiece"* %22 to i8*
  %24 = bitcast %"class.re2::StringPiece"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false) #18
  br label %43

25:                                               ; preds = %12
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %3, align 8
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %13, align 8
  %26 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 20
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"** %30 to %"class.re2::CharClassBuilder"**
  %32 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %31, align 8
  %33 = icmp eq %"class.re2::CharClassBuilder"* %32, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7
  store %"class.re2::CharClassBuilder"* null, %"class.re2::CharClassBuilder"** %31, align 8
  %36 = tail call %"class.re2::CharClass"* @_ZN3re216CharClassBuilder12GetCharClassEv(%"class.re2::CharClassBuilder"* nonnull %32) #18
  %37 = bitcast %union.anon.2* %35 to %"class.re2::CharClass"**
  store %"class.re2::CharClass"* %36, %"class.re2::CharClass"** %37, align 8
  %38 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %32, i64 0, i32 3, i32 0
  %39 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %32, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %38, %"class.std::__1::__tree_node"* %41) #18
  %42 = bitcast %"class.re2::CharClassBuilder"* %32 to i8*
  tail call void @_ZdlPv(i8* %42) #17
  br label %43

43:                                               ; preds = %34, %29, %25, %11, %16
  %44 = phi %"class.re2::Regexp"* [ null, %16 ], [ null, %11 ], [ %9, %25 ], [ %9, %29 ], [ %9, %34 ]
  ret %"class.re2::Regexp"* %44
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp13LeadingRegexpEPS0_(%"class.re2::Regexp"* readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %16 [
    i8 2, label %17
    i8 5, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %6 = load i16, i16* %5, align 2
  %7 = icmp ugt i16 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 5, i32 0
  %10 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %9, align 8
  %11 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %10, align 8
  %12 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 2
  %15 = select i1 %14, %"class.re2::Regexp"* null, %"class.re2::Regexp"* %11
  ret %"class.re2::Regexp"* %15

16:                                               ; preds = %1
  br label %17

17:                                               ; preds = %1, %16, %4
  %18 = phi %"class.re2::Regexp"* [ null, %1 ], [ %0, %4 ], [ %0, %16 ]
  ret %"class.re2::Regexp"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp19RemoveLeadingRegexpEPS0_(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %28 [
    i8 2, label %34
    i8 5, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %6 = load i16, i16* %5, align 2
  %7 = icmp ugt i16 %6, 1
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 5, i32 0
  %10 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %9, align 8
  %11 = bitcast %"class.re2::Regexp"** %10 to i8*
  %12 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %10, align 8
  %13 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %12, i64 0, i32 0
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 2
  br i1 %15, label %34, label %16

16:                                               ; preds = %8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %12) #18
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %10, align 8
  %17 = load i16, i16* %5, align 2
  %18 = icmp eq i16 %17, 2
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %10, i64 1
  %21 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %20, align 8
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %20, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %0) #18
  br label %34

22:                                               ; preds = %16
  %23 = add i16 %17, -1
  store i16 %23, i16* %5, align 2
  %24 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %10, i64 1
  %25 = bitcast %"class.re2::Regexp"** %24 to i8*
  %26 = zext i16 %23 to i64
  %27 = shl nuw nsw i64 %26, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %25, i64 %27, i1 false)
  br label %34

28:                                               ; preds = %1, %4
  %29 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %0) #18
  %32 = tail call i8* @_Znwm(i64 40) #17
  %33 = bitcast i8* %32 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %33, i32 2, i32 %31) #18
  br label %34

34:                                               ; preds = %1, %19, %22, %8, %28
  %35 = phi %"class.re2::Regexp"* [ %33, %28 ], [ %0, %1 ], [ %21, %19 ], [ %0, %22 ], [ %0, %8 ]
  ret %"class.re2::Regexp"* %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32* @_ZN3re26Regexp13LeadingStringEPS0_PiPNS0_10ParseFlagsE(%"class.re2::Regexp"* readonly, i32* nocapture, i32* nocapture) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 5
  br i1 %6, label %7, label %33

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %9 = load i16, i16* %8, align 2
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %33, label %15

11:                                               ; preds = %25
  %12 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %27, i64 0, i32 4
  %13 = load i16, i16* %12, align 2
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %7, %11
  %16 = phi i16 [ %13, %11 ], [ %9, %7 ]
  %17 = phi %"class.re2::Regexp"* [ %27, %11 ], [ %0, %7 ]
  %18 = icmp eq i16 %16, 1
  %19 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %17, i64 0, i32 5
  br i1 %18, label %20, label %22

20:                                               ; preds = %15
  %21 = bitcast %union.anon.1* %19 to %"class.re2::Regexp"**
  br label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds %union.anon.1, %union.anon.1* %19, i64 0, i32 0
  %24 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %23, align 8
  br label %25

25:                                               ; preds = %20, %22
  %26 = phi %"class.re2::Regexp"** [ %21, %20 ], [ %24, %22 ]
  %27 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %26, align 8
  %28 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %27, i64 0, i32 0
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 5
  br i1 %30, label %11, label %31

31:                                               ; preds = %25, %11
  %32 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %27, i64 0, i32 0
  br label %33

33:                                               ; preds = %31, %7, %3
  %34 = phi %"class.re2::Regexp"* [ %0, %3 ], [ %0, %7 ], [ %27, %31 ]
  %35 = phi i8* [ %4, %3 ], [ %4, %7 ], [ %32, %31 ]
  %36 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %34, i64 0, i32 2
  %37 = load i16, i16* %36, align 2
  %38 = and i16 %37, 1
  %39 = zext i16 %38 to i32
  store i32 %39, i32* %2, align 4
  %40 = load i8, i8* %35, align 8
  switch i8 %40, label %49 [
    i8 3, label %41
    i8 4, label %43
  ]

41:                                               ; preds = %33
  store i32 1, i32* %1, align 4
  %42 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %34, i64 0, i32 7, i32 0, i32 0
  br label %50

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %34, i64 0, i32 7, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %1, align 4
  %46 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %34, i64 0, i32 7, i32 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"** %46 to i32**
  %48 = load i32*, i32** %47, align 8
  br label %50

49:                                               ; preds = %33
  store i32 0, i32* %1, align 4
  br label %50

50:                                               ; preds = %49, %43, %41
  %51 = phi i32* [ %42, %41 ], [ %48, %43 ], [ null, %49 ]
  ret i32* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp19RemoveLeadingStringEPS0_i(%"class.re2::Regexp"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x %"class.re2::Regexp"*], align 16
  %4 = alloca %class.LogMessage, align 8
  %5 = bitcast [4 x %"class.re2::Regexp"*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #18
  %6 = bitcast [4 x %"class.re2::Regexp"*]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 32, i1 false)
  br label %7

7:                                                ; preds = %28, %2
  %8 = phi i64 [ 0, %2 ], [ %18, %28 ]
  %9 = phi %"class.re2::Regexp"* [ %0, %2 ], [ %30, %28 ]
  %10 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  switch i8 %11, label %72 [
    i8 5, label %12
    i8 3, label %31
    i8 4, label %34
  ]

12:                                               ; preds = %7
  %13 = icmp ult i64 %8, 4
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = add nuw nsw i64 %8, 1
  %16 = getelementptr inbounds [4 x %"class.re2::Regexp"*], [4 x %"class.re2::Regexp"*]* %3, i64 0, i64 %8
  store %"class.re2::Regexp"* %9, %"class.re2::Regexp"** %16, align 8
  br label %17

17:                                               ; preds = %14, %12
  %18 = phi i64 [ %15, %14 ], [ %8, %12 ]
  %19 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 4
  %20 = load i16, i16* %19, align 2
  %21 = icmp ult i16 %20, 2
  %22 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 5
  br i1 %21, label %23, label %25

23:                                               ; preds = %17
  %24 = bitcast %union.anon.1* %22 to %"class.re2::Regexp"**
  br label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds %union.anon.1, %union.anon.1* %22, i64 0, i32 0
  %27 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %26, align 8
  br label %28

28:                                               ; preds = %23, %25
  %29 = phi %"class.re2::Regexp"** [ %24, %23 ], [ %27, %25 ]
  %30 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %29, align 8
  br label %7

31:                                               ; preds = %7
  %32 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 0
  %33 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7, i32 0, i32 0
  store i32 0, i32* %33, align 8
  store i8 2, i8* %32, align 8
  br label %72

34:                                               ; preds = %7
  %35 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 0
  %36 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, %1
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"** %40 to i32**
  %42 = load i32*, i32** %41, align 8
  %43 = icmp eq i32* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = bitcast i32* %42 to i8*
  tail call void @_ZdaPv(i8* %45) #17
  br label %46

46:                                               ; preds = %44, %39
  store i32* null, i32** %41, align 8
  store i32 0, i32* %36, align 8
  store i8 2, i8* %35, align 8
  br label %72

47:                                               ; preds = %34
  %48 = add nsw i32 %37, -1
  %49 = icmp eq i32 %48, %1
  br i1 %49, label %50, label %61

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7, i32 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"** %51 to i32**
  %53 = load i32*, i32** %52, align 8
  %54 = sext i32 %1 to i64
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32* %53, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %50
  %59 = bitcast i32* %53 to i8*
  tail call void @_ZdaPv(i8* %59) #17
  br label %60

60:                                               ; preds = %58, %50
  store i32* null, i32** %52, align 8
  store i32 %56, i32* %36, align 8
  store i8 3, i8* %35, align 8
  br label %72

61:                                               ; preds = %47
  %62 = sub nsw i32 %37, %1
  store i32 %62, i32* %36, align 8
  %63 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %9, i64 0, i32 7, i32 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"** %63 to i32**
  %65 = load i32*, i32** %64, align 8
  %66 = bitcast i32* %65 to i8*
  %67 = sext i32 %1 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  %69 = bitcast i32* %68 to i8*
  %70 = sext i32 %62 to i64
  %71 = shl nsw i64 %70, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %69, i64 %71, i1 false)
  br label %72

72:                                               ; preds = %7, %60, %61, %46, %31
  %73 = icmp eq i64 %8, 0
  br i1 %73, label %153, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 0
  %76 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1
  %77 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %76, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1
  %80 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %79, i64 0, i32 0
  %81 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %82 = bitcast %"class.std::__1::basic_ostringstream"* %76 to i64*
  %83 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %84 = bitcast %"class.std::__1::basic_ostringstream"* %76 to i8**
  %85 = inttoptr i64 %81 to i8*
  %86 = getelementptr i8, i8* %85, i64 -24
  %87 = bitcast i8* %86 to i64*
  %88 = bitcast %"class.std::__1::basic_ostringstream"* %76 to i8*
  %89 = bitcast %"class.std::__1::basic_stringbuf"* %79 to i8*
  %90 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %79, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 1
  %92 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 3
  %93 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  %94 = bitcast %"class.std::__1::basic_ostringstream"* %76 to %"class.std::__1::basic_ostream"*
  br label %95

95:                                               ; preds = %74, %151
  %96 = phi i64 [ %8, %74 ], [ %97, %151 ]
  %97 = add i64 %96, -1
  %98 = getelementptr inbounds [4 x %"class.re2::Regexp"*], [4 x %"class.re2::Regexp"*]* %3, i64 0, i64 %97
  %99 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %98, align 8
  %100 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %99, i64 0, i32 4
  %101 = load i16, i16* %100, align 2
  %102 = icmp ult i16 %101, 2
  %103 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %99, i64 0, i32 5
  br i1 %102, label %104, label %106

104:                                              ; preds = %95
  %105 = bitcast %union.anon.1* %103 to %"class.re2::Regexp"**
  br label %109

106:                                              ; preds = %95
  %107 = getelementptr inbounds %union.anon.1, %union.anon.1* %103, i64 0, i32 0
  %108 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %107, align 8
  br label %109

109:                                              ; preds = %104, %106
  %110 = phi %"class.re2::Regexp"** [ %105, %104 ], [ %108, %106 ]
  %111 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %110, align 8
  %112 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %111, i64 0, i32 0
  %113 = load i8, i8* %112, align 8
  %114 = icmp eq i8 %113, 2
  br i1 %114, label %115, label %151

115:                                              ; preds = %109
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %111) #18
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %110, align 8
  %116 = load i16, i16* %100, align 2
  switch i16 %116, label %144 [
    i16 0, label %117
    i16 1, label %117
    i16 2, label %141
  ]

117:                                              ; preds = %115, %115
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %75) #18
  store i8 0, i8* %75, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %77, align 8
  store i64 %81, i64* %82, align 8
  %118 = load i64, i64* %87, align 8
  %119 = getelementptr inbounds i8, i8* %88, i64 %118
  %120 = bitcast i8* %119 to i64*
  store i64 %83, i64* %120, align 8
  %121 = load i8*, i8** %84, align 8
  %122 = getelementptr i8, i8* %121, i64 -24
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds i8, i8* %88, i64 %124
  %126 = bitcast i8* %125 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %126, i8* %89) #18
  %127 = getelementptr inbounds i8, i8* %125, i64 136
  %128 = bitcast i8* %127 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %128, align 8
  %129 = getelementptr inbounds i8, i8* %125, i64 144
  %130 = bitcast i8* %129 to i32*
  store i32 -1, i32* %130, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %78, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %77, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %80) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %92, align 8
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %94, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 38) #18
  %132 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %132, i32 847) #18
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %133, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %135 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %94, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i64 10) #18
  %136 = load i16, i16* %100, align 2
  %137 = zext i16 %136 to i32
  %138 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %135, i32 %137) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %75) #18
  %139 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %99, i64 0, i32 5, i32 0
  store %"class.re2::Regexp"** null, %"class.re2::Regexp"*** %139, align 8
  %140 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %99, i64 0, i32 0
  store i8 2, i8* %140, align 8
  br label %151

141:                                              ; preds = %115
  %142 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %110, i64 1
  %143 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %142, align 8
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %142, align 8
  call void @_ZN3re26Regexp4SwapEPS0_(%"class.re2::Regexp"* %99, %"class.re2::Regexp"* %143) #18
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %143) #18
  br label %151

144:                                              ; preds = %115
  %145 = add i16 %116, -1
  store i16 %145, i16* %100, align 2
  %146 = bitcast %"class.re2::Regexp"** %110 to i8*
  %147 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %110, i64 1
  %148 = bitcast %"class.re2::Regexp"** %147 to i8*
  %149 = zext i16 %145 to i64
  %150 = shl nuw nsw i64 %149, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %148, i64 %150, i1 false)
  br label %151

151:                                              ; preds = %117, %141, %144, %109
  %152 = icmp eq i64 %97, 0
  br i1 %152, label %153, label %95

153:                                              ; preds = %151, %72
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare void @_ZN3re26Regexp4SwapEPS0_(%"class.re2::Regexp"*, %"class.re2::Regexp"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re26Regexp17FactorAlternationEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"**, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.re2::Regexp"**, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [2 x %"class.re2::Regexp"*], align 16
  %8 = alloca %class.LogMessage, align 8
  %9 = alloca %class.LogMessage, align 8
  store %"class.re2::Regexp"** %0, %"class.re2::Regexp"*** %4, align 8
  store i32 %1, i32* %5, align 4
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #18
  call void @_ZNSt3__16vectorIN3re25FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRPPNS1_6RegexpERiEEEvDpOT_(%"class.std::__1::vector"* nonnull %6, %"class.re2::Regexp"*** nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %5) #18
  %13 = bitcast %"struct.re2::Frame"** %11 to i64*
  %14 = bitcast [2 x %"class.re2::Regexp"*]* %7 to i8*
  %15 = getelementptr inbounds [2 x %"class.re2::Regexp"*], [2 x %"class.re2::Regexp"*]* %7, i64 0, i64 0
  %16 = getelementptr inbounds [2 x %"class.re2::Regexp"*], [2 x %"class.re2::Regexp"*]* %7, i64 0, i64 1
  %17 = bitcast [2 x %"class.re2::Regexp"*]* %7 to i64*
  %18 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 0
  %19 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1
  %20 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %19, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %22, i64 0, i32 0
  %24 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %19 to i64*
  %26 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %27 = bitcast %"class.std::__1::basic_ostringstream"* %19 to i8**
  %28 = inttoptr i64 %24 to i8*
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = bitcast %"class.std::__1::basic_ostringstream"* %19 to i8*
  %32 = bitcast %"class.std::__1::basic_stringbuf"* %22 to i8*
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %22, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1, i32 1, i32 1
  %35 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %19 to %"class.std::__1::basic_ostream"*
  %38 = bitcast %"class.std::__1::vector"* %6 to i64*
  %39 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %9, i64 0, i32 0
  %40 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %9, i64 0, i32 1
  %41 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %9, i64 0, i32 1, i32 2, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %40, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %9, i64 0, i32 1, i32 1
  %44 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %43, i64 0, i32 0
  %45 = bitcast %"class.std::__1::basic_ostringstream"* %40 to i64*
  %46 = bitcast %"class.std::__1::basic_ostringstream"* %40 to i8**
  %47 = bitcast %"class.std::__1::basic_ostringstream"* %40 to i8*
  %48 = bitcast %"class.std::__1::basic_stringbuf"* %43 to i8*
  %49 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %43, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %9, i64 0, i32 1, i32 1, i32 1
  %51 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %9, i64 0, i32 1, i32 1, i32 3
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_ostringstream"* %40 to %"class.std::__1::basic_ostream"*
  %54 = bitcast [2 x %"class.re2::Regexp"*]* %7 to i8*
  br label %55

55:                                               ; preds = %97, %3
  %56 = load %"struct.re2::Frame"*, %"struct.re2::Frame"** %11, align 8
  %57 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %56, i64 -1, i32 0
  %58 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %56, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %56, i64 -1, i32 2
  %60 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %56, i64 -1, i32 3
  %61 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %56, i64 -1, i32 4
  %62 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %60, i64 0, i32 0, i32 0
  %63 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %62, align 8
  %64 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %56, i64 -1, i32 3, i32 0, i32 1
  %65 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %64, align 8
  %66 = icmp eq %"struct.re2::Splice"* %63, %65
  %67 = ptrtoint %"struct.re2::Splice"* %63 to i64
  br i1 %66, label %218, label %68

68:                                               ; preds = %55
  %69 = ptrtoint %"struct.re2::Splice"* %65 to i64
  %70 = load i32, i32* %61, align 4
  %71 = bitcast %"struct.re2::Splice"** %64 to i64*
  %72 = bitcast %"class.std::__1::vector.24"* %60 to i64*
  %73 = sub i64 %69, %67
  %74 = sdiv exact i64 %73, 24
  %75 = trunc i64 %74 to i32
  %76 = icmp slt i32 %70, %75
  br i1 %76, label %80, label %77

77:                                               ; preds = %68
  %78 = load i32, i32* %58, align 4
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %98, label %112

80:                                               ; preds = %68
  %81 = sext i32 %70 to i64
  %82 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %63, i64 %81, i32 1
  %83 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %63, i64 %81, i32 2
  %84 = load %"struct.re2::Frame"*, %"struct.re2::Frame"** %12, align 8
  %85 = icmp ult %"struct.re2::Frame"* %56, %84
  br i1 %85, label %86, label %96

86:                                               ; preds = %80
  %87 = bitcast %"class.re2::Regexp"*** %82 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = load i32, i32* %83, align 4
  %90 = bitcast %"struct.re2::Frame"* %56 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %56, i64 0, i32 1
  store i32 %89, i32* %91, align 8
  %92 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %56, i64 0, i32 2
  %93 = bitcast i32* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %93, i8 0, i64 28, i1 false) #18
  %94 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %56, i64 1
  %95 = ptrtoint %"struct.re2::Frame"* %94 to i64
  store i64 %95, i64* %13, align 8
  br label %97

96:                                               ; preds = %80
  call void @_ZNSt3__16vectorIN3re25FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRPPNS1_6RegexpERiEEEvDpOT_(%"class.std::__1::vector"* nonnull %6, %"class.re2::Regexp"*** dereferenceable(8) %82, i32* dereferenceable(4) %83) #18
  br label %97

97:                                               ; preds = %96, %86, %292, %246
  br label %55

98:                                               ; preds = %77, %213
  %99 = phi i32 [ %216, %213 ], [ 0, %77 ]
  %100 = phi i32 [ %215, %213 ], [ 0, %77 ]
  %101 = phi %"struct.re2::Splice"* [ %187, %213 ], [ %63, %77 ]
  %102 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %57, align 8
  %103 = sext i32 %99 to i64
  %104 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %102, i64 %103
  %105 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %101, i64 0, i32 1
  %106 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %105, align 8
  %107 = icmp ult %"class.re2::Regexp"** %104, %106
  br i1 %107, label %108, label %133

108:                                              ; preds = %98
  %109 = sext i32 %100 to i64
  br label %115

110:                                              ; preds = %213
  %111 = load i64, i64* %72, align 8
  br label %112

112:                                              ; preds = %110, %77
  %113 = phi i64 [ %67, %77 ], [ %111, %110 ]
  %114 = phi i32 [ 0, %77 ], [ %215, %110 ]
  store i64 %113, i64* %71, align 8
  store i32 %114, i32* %58, align 4
  br label %218

115:                                              ; preds = %108, %115
  %116 = phi i64 [ %109, %108 ], [ %123, %115 ]
  %117 = phi i64 [ %103, %108 ], [ %120, %115 ]
  %118 = phi %"class.re2::Regexp"** [ %104, %108 ], [ %127, %115 ]
  %119 = phi %"class.re2::Regexp"** [ %102, %108 ], [ %126, %115 ]
  %120 = add nsw i64 %117, 1
  %121 = bitcast %"class.re2::Regexp"** %118 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %116, 1
  %124 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %119, i64 %116
  %125 = bitcast %"class.re2::Regexp"** %124 to i64*
  store i64 %122, i64* %125, align 8
  %126 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %57, align 8
  %127 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %126, i64 %120
  %128 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %105, align 8
  %129 = icmp ult %"class.re2::Regexp"** %127, %128
  br i1 %129, label %115, label %130

130:                                              ; preds = %115
  %131 = trunc i64 %123 to i32
  %132 = trunc i64 %120 to i32
  br label %133

133:                                              ; preds = %130, %98
  %134 = phi i32 [ %100, %98 ], [ %131, %130 ]
  %135 = phi i32 [ %99, %98 ], [ %132, %130 ]
  %136 = phi %"class.re2::Regexp"** [ %102, %98 ], [ %126, %130 ]
  %137 = load i32, i32* %59, align 4
  switch i32 %137, label %163 [
    i32 1, label %138
    i32 2, label %138
    i32 3, label %153
  ]

138:                                              ; preds = %133, %133
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #18
  %139 = bitcast %"struct.re2::Splice"* %101 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %54, i8 -86, i64 16, i1 false)
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %17, align 16
  %141 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %105, align 8
  %142 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %101, i64 0, i32 3
  %143 = load i32, i32* %142, align 4
  %144 = call %"class.re2::Regexp"* @_ZN3re26Regexp17AlternateNoFactorEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"** %141, i32 %143, i32 %2) #18
  store %"class.re2::Regexp"* %144, %"class.re2::Regexp"** %16, align 8
  %145 = call %"class.re2::Regexp"* @_ZN3re26Regexp6ConcatEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"** nonnull %15, i32 2, i32 %2) #18
  %146 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %57, align 8
  %147 = add nsw i32 %134, 1
  %148 = sext i32 %134 to i64
  %149 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %146, i64 %148
  store %"class.re2::Regexp"* %145, %"class.re2::Regexp"** %149, align 8
  %150 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %101, i64 0, i32 2
  %151 = load i32, i32* %150, align 8
  %152 = add nsw i32 %151, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #18
  br label %184

153:                                              ; preds = %133
  %154 = bitcast %"struct.re2::Splice"* %101 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = add nsw i32 %134, 1
  %157 = sext i32 %134 to i64
  %158 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %136, i64 %157
  %159 = bitcast %"class.re2::Regexp"** %158 to i64*
  store i64 %155, i64* %159, align 8
  %160 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %101, i64 0, i32 2
  %161 = load i32, i32* %160, align 8
  %162 = add nsw i32 %161, %135
  br label %184

163:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %18) #18
  store i8 0, i8* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %20, align 8
  store i64 %24, i64* %25, align 8
  %164 = load i64, i64* %30, align 8
  %165 = getelementptr inbounds i8, i8* %31, i64 %164
  %166 = bitcast i8* %165 to i64*
  store i64 %26, i64* %166, align 8
  %167 = load i8*, i8** %27, align 8
  %168 = getelementptr i8, i8* %167, i64 -24
  %169 = bitcast i8* %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds i8, i8* %31, i64 %170
  %172 = bitcast i8* %171 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %172, i8* %32) #18
  %173 = getelementptr inbounds i8, i8* %171, i64 136
  %174 = bitcast i8* %173 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %174, align 8
  %175 = getelementptr inbounds i8, i8* %171, i64 144
  %176 = bitcast i8* %175 to i32*
  store i32 -1, i32* %176, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %20, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %23) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %35, align 8
  %177 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 38) #18
  %178 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %177, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %179 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %178, i32 977) #18
  %180 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %179, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %181 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 15) #18
  %182 = load i32, i32* %59, align 4
  %183 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %181, i32 %182) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %18) #18
  br label %184

184:                                              ; preds = %163, %153, %138
  %185 = phi i32 [ %134, %163 ], [ %156, %153 ], [ %147, %138 ]
  %186 = phi i32 [ %135, %163 ], [ %162, %153 ], [ %152, %138 ]
  %187 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %101, i64 1
  %188 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %64, align 8
  %189 = icmp eq %"struct.re2::Splice"* %187, %188
  %190 = load i32, i32* %58, align 4
  %191 = icmp slt i32 %186, %190
  %192 = and i1 %189, %191
  br i1 %192, label %193, label %213

193:                                              ; preds = %184
  %194 = sext i32 %186 to i64
  %195 = sext i32 %185 to i64
  br label %196

196:                                              ; preds = %193, %196
  %197 = phi i64 [ %195, %193 ], [ %204, %196 ]
  %198 = phi i64 [ %194, %193 ], [ %200, %196 ]
  %199 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %57, align 8
  %200 = add nsw i64 %198, 1
  %201 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %199, i64 %198
  %202 = bitcast %"class.re2::Regexp"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = add nsw i64 %197, 1
  %205 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %199, i64 %197
  %206 = bitcast %"class.re2::Regexp"** %205 to i64*
  store i64 %203, i64* %206, align 8
  %207 = load i32, i32* %58, align 4
  %208 = sext i32 %207 to i64
  %209 = icmp slt i64 %200, %208
  br i1 %209, label %196, label %210

210:                                              ; preds = %196
  %211 = trunc i64 %204 to i32
  %212 = trunc i64 %200 to i32
  br label %213

213:                                              ; preds = %184, %210
  %214 = phi i32 [ %207, %210 ], [ %190, %184 ]
  %215 = phi i32 [ %211, %210 ], [ %185, %184 ]
  %216 = phi i32 [ %212, %210 ], [ %186, %184 ]
  %217 = icmp slt i32 %216, %214
  br i1 %217, label %98, label %110

218:                                              ; preds = %55, %112
  %219 = load i32, i32* %59, align 4
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %59, align 4
  switch i32 %219, label %258 [
    i32 0, label %221
    i32 1, label %224
    i32 2, label %227
    i32 3, label %230
  ]

221:                                              ; preds = %218
  %222 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %57, align 8
  %223 = load i32, i32* %58, align 4
  call void @_ZN3re221FactorAlternationImpl6Round1EPPNS_6RegexpEiNS1_10ParseFlagsEPNSt3__16vectorINS_6SpliceENS5_9allocatorIS7_EEEE(%"class.re2::Regexp"** %222, i32 %223, i32 undef, %"class.std::__1::vector.24"* %60)
  br label %279

224:                                              ; preds = %218
  %225 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %57, align 8
  %226 = load i32, i32* %58, align 4
  call void @_ZN3re221FactorAlternationImpl6Round2EPPNS_6RegexpEiNS1_10ParseFlagsEPNSt3__16vectorINS_6SpliceENS5_9allocatorIS7_EEEE(%"class.re2::Regexp"** %225, i32 %226, i32 undef, %"class.std::__1::vector.24"* %60)
  br label %279

227:                                              ; preds = %218
  %228 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %57, align 8
  %229 = load i32, i32* %58, align 4
  call void @_ZN3re221FactorAlternationImpl6Round3EPPNS_6RegexpEiNS1_10ParseFlagsEPNSt3__16vectorINS_6SpliceENS5_9allocatorIS7_EEEE(%"class.re2::Regexp"** %228, i32 %229, i32 %2, %"class.std::__1::vector.24"* %60)
  br label %279

230:                                              ; preds = %218
  %231 = load i64, i64* %13, align 8
  %232 = load i64, i64* %38, align 8
  %233 = sub i64 %231, %232
  %234 = icmp eq i64 %233, 48
  %235 = load i32, i32* %58, align 4
  %236 = inttoptr i64 %231 to %"struct.re2::Frame"*
  br i1 %234, label %294, label %237

237:                                              ; preds = %230
  %238 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %236, i64 -1, i32 3, i32 0, i32 0
  %239 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %238, align 8
  %240 = icmp eq %"struct.re2::Splice"* %239, null
  br i1 %240, label %246, label %241

241:                                              ; preds = %237
  %242 = ptrtoint %"struct.re2::Splice"* %239 to i64
  %243 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %236, i64 -1, i32 3, i32 0, i32 1
  %244 = bitcast %"struct.re2::Splice"** %243 to i64*
  store i64 %242, i64* %244, align 8
  %245 = bitcast %"struct.re2::Splice"* %239 to i8*
  call void @_ZdlPv(i8* %245) #17
  br label %246

246:                                              ; preds = %237, %241
  %247 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %236, i64 -1
  store %"struct.re2::Frame"* %247, %"struct.re2::Frame"** %11, align 8
  %248 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %236, i64 -2, i32 4
  %249 = load i32, i32* %248, align 8
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %236, i64 -2, i32 3, i32 0, i32 0
  %252 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %251, align 8
  %253 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %252, i64 %250, i32 3
  store i32 %235, i32* %253, align 4
  %254 = load %"struct.re2::Frame"*, %"struct.re2::Frame"** %11, align 8
  %255 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %254, i64 -1, i32 4
  %256 = load i32, i32* %255, align 8
  %257 = add nsw i32 %256, 1
  store i32 %257, i32* %255, align 8
  br label %97

258:                                              ; preds = %218
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %39) #18
  store i8 0, i8* %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %41, align 8
  store i64 %24, i64* %45, align 8
  %259 = load i64, i64* %30, align 8
  %260 = getelementptr inbounds i8, i8* %47, i64 %259
  %261 = bitcast i8* %260 to i64*
  store i64 %26, i64* %261, align 8
  %262 = load i8*, i8** %46, align 8
  %263 = getelementptr i8, i8* %262, i64 -24
  %264 = bitcast i8* %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds i8, i8* %47, i64 %265
  %267 = bitcast i8* %266 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %267, i8* %48) #18
  %268 = getelementptr inbounds i8, i8* %266, i64 136
  %269 = bitcast i8* %268 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %269, align 8
  %270 = getelementptr inbounds i8, i8* %266, i64 144
  %271 = bitcast i8* %270 to i32*
  store i32 -1, i32* %271, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %41, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %44) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %51, align 8
  %272 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 38) #18
  %273 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %272, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %274 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %273, i32 1016) #18
  %275 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %274, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %276 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 15) #18
  %277 = load i32, i32* %59, align 4
  %278 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %276, i32 %277) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %39) #18
  br label %279

279:                                              ; preds = %258, %227, %224, %221
  %280 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %62, align 8
  %281 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %64, align 8
  %282 = icmp eq %"struct.re2::Splice"* %280, %281
  %283 = ptrtoint %"struct.re2::Splice"* %281 to i64
  %284 = ptrtoint %"struct.re2::Splice"* %280 to i64
  br i1 %282, label %288, label %285

285:                                              ; preds = %279
  %286 = load i32, i32* %59, align 4
  %287 = icmp eq i32 %286, 3
  br i1 %287, label %288, label %292

288:                                              ; preds = %285, %279
  %289 = sub i64 %283, %284
  %290 = sdiv exact i64 %289, 24
  %291 = trunc i64 %290 to i32
  br label %292

292:                                              ; preds = %285, %288
  %293 = phi i32 [ %291, %288 ], [ 0, %285 ]
  store i32 %293, i32* %61, align 4
  br label %97

294:                                              ; preds = %230
  %295 = inttoptr i64 %231 to %"struct.re2::Frame"*
  %296 = inttoptr i64 %232 to %"struct.re2::Frame"*
  %297 = icmp eq i64 %232, 0
  br i1 %297, label %319, label %298

298:                                              ; preds = %294
  %299 = inttoptr i64 %232 to i8*
  %300 = icmp eq %"struct.re2::Frame"* %295, %296
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %312
  %302 = phi %"struct.re2::Frame"* [ %303, %312 ], [ %295, %298 ]
  %303 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %302, i64 -1
  %304 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %302, i64 -1, i32 3, i32 0, i32 0
  %305 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %304, align 8
  %306 = icmp eq %"struct.re2::Splice"* %305, null
  br i1 %306, label %312, label %307

307:                                              ; preds = %301
  %308 = ptrtoint %"struct.re2::Splice"* %305 to i64
  %309 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %302, i64 -1, i32 3, i32 0, i32 1
  %310 = bitcast %"struct.re2::Splice"** %309 to i64*
  store i64 %308, i64* %310, align 8
  %311 = bitcast %"struct.re2::Splice"* %305 to i8*
  call void @_ZdlPv(i8* %311) #17
  br label %312

312:                                              ; preds = %307, %301
  %313 = icmp eq %"struct.re2::Frame"* %303, %296
  br i1 %313, label %314, label %301

314:                                              ; preds = %312
  %315 = bitcast %"class.std::__1::vector"* %6 to i8**
  %316 = load i8*, i8** %315, align 8
  br label %317

317:                                              ; preds = %314, %298
  %318 = phi i8* [ %316, %314 ], [ %299, %298 ]
  store %"struct.re2::Frame"* %296, %"struct.re2::Frame"** %11, align 8
  call void @_ZdlPv(i8* %318) #17
  br label %319

319:                                              ; preds = %294, %317
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #18
  ret i32 %235
}

declare %"class.re2::Regexp"* @_ZN3re26Regexp17AlternateNoFactorEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"**, i32, i32) local_unnamed_addr #3

declare %"class.re2::Regexp"* @_ZN3re26Regexp6ConcatEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"**, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re221FactorAlternationImpl6Round1EPPNS_6RegexpEiNS1_10ParseFlagsEPNSt3__16vectorINS_6SpliceENS5_9allocatorIS7_EEEE(%"class.re2::Regexp"**, i32, i32, %"class.std::__1::vector.24"*) local_unnamed_addr #0 align 2 {
  %5 = icmp slt i32 %1, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.re2::Splice"** %7 to i64*
  %10 = bitcast %"class.std::__1::vector.24"* %3 to i64*
  %11 = bitcast %"struct.re2::Splice"** %8 to i64*
  %12 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 0
  %13 = sext i32 %1 to i64
  %14 = add nuw i32 %1, 1
  %15 = zext i32 %14 to i64
  br label %17

16:                                               ; preds = %204, %4
  ret void

17:                                               ; preds = %204, %6
  %18 = phi i64 [ %209, %204 ], [ 0, %6 ]
  %19 = phi i32 [ %208, %204 ], [ 0, %6 ]
  %20 = phi i32 [ %207, %204 ], [ 0, %6 ]
  %21 = phi i32* [ %206, %204 ], [ null, %6 ]
  %22 = phi i32 [ %205, %204 ], [ 0, %6 ]
  %23 = icmp slt i64 %18, %13
  br i1 %23, label %24, label %104

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, i64 %18
  %26 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %25, align 8
  %27 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %26, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 5
  br i1 %29, label %30, label %60

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %26, i64 0, i32 4
  %32 = load i16, i16* %31, align 2
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %54, label %38

34:                                               ; preds = %48
  %35 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %50, i64 0, i32 4
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %54, label %38

38:                                               ; preds = %30, %34
  %39 = phi i16 [ %36, %34 ], [ %32, %30 ]
  %40 = phi %"class.re2::Regexp"* [ %50, %34 ], [ %26, %30 ]
  %41 = icmp eq i16 %39, 1
  %42 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %40, i64 0, i32 5
  br i1 %41, label %43, label %45

43:                                               ; preds = %38
  %44 = bitcast %union.anon.1* %42 to %"class.re2::Regexp"**
  br label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %union.anon.1, %union.anon.1* %42, i64 0, i32 0
  %47 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %46, align 8
  br label %48

48:                                               ; preds = %45, %43
  %49 = phi %"class.re2::Regexp"** [ %44, %43 ], [ %47, %45 ]
  %50 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %49, align 8
  %51 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %50, i64 0, i32 0
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 5
  br i1 %53, label %34, label %60

54:                                               ; preds = %34, %30
  %55 = phi %"class.re2::Regexp"* [ %26, %30 ], [ %50, %34 ]
  %56 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %55, i64 0, i32 2
  %57 = load i16, i16* %56, align 2
  %58 = and i16 %57, 1
  %59 = zext i16 %58 to i32
  br label %75

60:                                               ; preds = %48, %24
  %61 = phi i8 [ %28, %24 ], [ %52, %48 ]
  %62 = phi %"class.re2::Regexp"* [ %26, %24 ], [ %50, %48 ]
  %63 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %62, i64 0, i32 2
  %64 = load i16, i16* %63, align 2
  %65 = and i16 %64, 1
  %66 = zext i16 %65 to i32
  switch i8 %61, label %75 [
    i8 3, label %67
    i8 4, label %69
  ]

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %62, i64 0, i32 7, i32 0, i32 0
  br label %75

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %62, i64 0, i32 7, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %62, i64 0, i32 7, i32 0, i32 1
  %73 = bitcast %"class.std::__1::basic_string"** %72 to i32**
  %74 = load i32*, i32** %73, align 8
  br label %75

75:                                               ; preds = %54, %60, %67, %69
  %76 = phi i32 [ %66, %69 ], [ %66, %67 ], [ %66, %60 ], [ %59, %54 ]
  %77 = phi i32 [ %71, %69 ], [ 1, %67 ], [ 0, %60 ], [ 0, %54 ]
  %78 = phi i32* [ %74, %69 ], [ %68, %67 ], [ null, %60 ], [ null, %54 ]
  %79 = icmp eq i32 %19, %76
  br i1 %79, label %80, label %104

80:                                               ; preds = %75
  %81 = icmp sgt i32 %20, 0
  %82 = icmp sgt i32 %77, 0
  %83 = and i1 %81, %82
  br i1 %83, label %84, label %104

84:                                               ; preds = %80
  %85 = sext i32 %77 to i64
  %86 = sext i32 %20 to i64
  br label %87

87:                                               ; preds = %84, %95
  %88 = phi i64 [ 0, %84 ], [ %96, %95 ]
  %89 = phi i32 [ 0, %84 ], [ %97, %95 ]
  %90 = getelementptr inbounds i32, i32* %21, i64 %88
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds i32, i32* %78, i64 %88
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %91, %93
  br i1 %94, label %95, label %101

95:                                               ; preds = %87
  %96 = add nuw nsw i64 %88, 1
  %97 = add nuw nsw i32 %89, 1
  %98 = icmp slt i64 %96, %86
  %99 = icmp slt i64 %96, %85
  %100 = and i1 %98, %99
  br i1 %100, label %87, label %204

101:                                              ; preds = %87
  %102 = trunc i64 %88 to i32
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %204

104:                                              ; preds = %80, %75, %101, %17
  %105 = phi i32 [ %19, %101 ], [ %76, %75 ], [ 0, %17 ], [ %19, %80 ]
  %106 = phi i32 [ %77, %101 ], [ %77, %75 ], [ 0, %17 ], [ %77, %80 ]
  %107 = phi i32* [ %78, %101 ], [ %78, %75 ], [ null, %17 ], [ %78, %80 ]
  %108 = zext i32 %22 to i64
  %109 = icmp eq i64 %18, %108
  %110 = add nsw i32 %22, 1
  %111 = zext i32 %110 to i64
  %112 = icmp eq i64 %18, %111
  %113 = or i1 %109, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %104
  %115 = trunc i64 %18 to i32
  br label %198

116:                                              ; preds = %104
  %117 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp13LiteralStringEPiiNS0_10ParseFlagsE(i32* %21, i32 %20, i32 %19) #18
  %118 = ptrtoint %"class.re2::Regexp"* %117 to i64
  %119 = sext i32 %22 to i64
  %120 = icmp sgt i64 %18, %119
  br i1 %120, label %191, label %121

121:                                              ; preds = %191, %116
  %122 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, i64 %119
  %123 = ptrtoint %"class.re2::Regexp"** %122 to i64
  %124 = trunc i64 %18 to i32
  %125 = sub nsw i32 %124, %22
  %126 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %7, align 8
  %127 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %8, align 8
  %128 = icmp ult %"struct.re2::Splice"* %126, %127
  %129 = ptrtoint %"struct.re2::Splice"* %127 to i64
  br i1 %128, label %130, label %138

130:                                              ; preds = %121
  %131 = bitcast %"struct.re2::Splice"* %126 to i64*
  store i64 %118, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %126, i64 0, i32 1
  %133 = bitcast %"class.re2::Regexp"*** %132 to i64*
  store i64 %123, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %126, i64 0, i32 2
  store i32 %125, i32* %134, align 8
  %135 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %126, i64 0, i32 3
  store i32 -1, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %126, i64 1
  %137 = ptrtoint %"struct.re2::Splice"* %136 to i64
  store i64 %137, i64* %9, align 8
  br label %198

138:                                              ; preds = %121
  %139 = ptrtoint %"struct.re2::Splice"* %126 to i64
  %140 = load i64, i64* %10, align 8
  %141 = sub i64 %139, %140
  %142 = sdiv exact i64 %141, 24
  %143 = add nsw i64 %142, 1
  %144 = icmp ugt i64 %143, 768614336404564650
  br i1 %144, label %145, label %147

145:                                              ; preds = %138
  %146 = bitcast %"class.std::__1::vector.24"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %146) #20
  unreachable

147:                                              ; preds = %138
  %148 = sub i64 %129, %140
  %149 = sdiv exact i64 %148, 24
  %150 = icmp ult i64 %149, 384307168202282325
  br i1 %150, label %151, label %156

151:                                              ; preds = %147
  %152 = shl nsw i64 %149, 1
  %153 = icmp ult i64 %152, %143
  %154 = select i1 %153, i64 %143, i64 %152
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %151, %147
  %157 = phi i64 [ %154, %151 ], [ 768614336404564650, %147 ]
  %158 = mul i64 %157, 24
  %159 = tail call i8* @_Znwm(i64 %158) #17
  %160 = bitcast i8* %159 to %"struct.re2::Splice"*
  br label %161

161:                                              ; preds = %156, %151
  %162 = phi i64 [ %157, %156 ], [ 0, %151 ]
  %163 = phi %"struct.re2::Splice"* [ %160, %156 ], [ null, %151 ]
  %164 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %163, i64 %142
  %165 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %163, i64 %162
  %166 = ptrtoint %"struct.re2::Splice"* %165 to i64
  %167 = bitcast %"struct.re2::Splice"* %164 to i64*
  store i64 %118, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %163, i64 %142, i32 1
  %169 = bitcast %"class.re2::Regexp"*** %168 to i64*
  store i64 %123, i64* %169, align 8
  %170 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %163, i64 %142, i32 2
  store i32 %125, i32* %170, align 8
  %171 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %163, i64 %142, i32 3
  store i32 -1, i32* %171, align 4
  %172 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %164, i64 1
  %173 = ptrtoint %"struct.re2::Splice"* %172 to i64
  %174 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %12, align 8
  %175 = load i64, i64* %9, align 8
  %176 = ptrtoint %"struct.re2::Splice"* %174 to i64
  %177 = sub i64 %175, %176
  %178 = sdiv exact i64 %177, -24
  %179 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %164, i64 %178
  %180 = ptrtoint %"struct.re2::Splice"* %179 to i64
  %181 = icmp sgt i64 %177, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %161
  %183 = bitcast %"struct.re2::Splice"* %179 to i8*
  %184 = bitcast %"struct.re2::Splice"* %174 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 %177, i1 false) #18
  %185 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %12, align 8
  br label %186

186:                                              ; preds = %182, %161
  %187 = phi %"struct.re2::Splice"* [ %174, %161 ], [ %185, %182 ]
  store i64 %180, i64* %10, align 8
  store i64 %173, i64* %9, align 8
  store i64 %166, i64* %11, align 8
  %188 = icmp eq %"struct.re2::Splice"* %187, null
  br i1 %188, label %198, label %189

189:                                              ; preds = %186
  %190 = bitcast %"struct.re2::Splice"* %187 to i8*
  tail call void @_ZdlPv(i8* %190) #17
  br label %198

191:                                              ; preds = %116, %191
  %192 = phi i64 [ %195, %191 ], [ %119, %116 ]
  %193 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, i64 %192
  %194 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %193, align 8
  tail call void @_ZN3re26Regexp19RemoveLeadingStringEPS0_i(%"class.re2::Regexp"* %194, i32 %20)
  %195 = add nsw i64 %192, 1
  %196 = and i64 %195, 4294967295
  %197 = icmp eq i64 %196, %18
  br i1 %197, label %121, label %191

198:                                              ; preds = %114, %189, %186, %130
  %199 = phi i32 [ %115, %114 ], [ %124, %189 ], [ %124, %186 ], [ %124, %130 ]
  %200 = select i1 %23, i32 %199, i32 %22
  %201 = select i1 %23, i32* %107, i32* %21
  %202 = select i1 %23, i32 %106, i32 %20
  %203 = select i1 %23, i32 %105, i32 %19
  br label %204

204:                                              ; preds = %95, %198, %101
  %205 = phi i32 [ %22, %101 ], [ %200, %198 ], [ %22, %95 ]
  %206 = phi i32* [ %21, %101 ], [ %201, %198 ], [ %21, %95 ]
  %207 = phi i32 [ %102, %101 ], [ %202, %198 ], [ %97, %95 ]
  %208 = phi i32 [ %19, %101 ], [ %203, %198 ], [ %19, %95 ]
  %209 = add nuw nsw i64 %18, 1
  %210 = icmp eq i64 %209, %15
  br i1 %210, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re221FactorAlternationImpl6Round2EPPNS_6RegexpEiNS1_10ParseFlagsEPNSt3__16vectorINS_6SpliceENS5_9allocatorIS7_EEEE(%"class.re2::Regexp"**, i32, i32, %"class.std::__1::vector.24"*) local_unnamed_addr #0 align 2 {
  %5 = icmp slt i32 %1, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.re2::Splice"** %7 to i64*
  %10 = bitcast %"class.std::__1::vector.24"* %3 to i64*
  %11 = bitcast %"struct.re2::Splice"** %8 to i64*
  %12 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 0
  %13 = sext i32 %1 to i64
  %14 = add nuw i32 %1, 1
  %15 = zext i32 %14 to i64
  br label %17

16:                                               ; preds = %205, %4
  ret void

17:                                               ; preds = %205, %6
  %18 = phi i64 [ %208, %205 ], [ 0, %6 ]
  %19 = phi %"class.re2::Regexp"* [ %207, %205 ], [ null, %6 ]
  %20 = phi i32 [ %206, %205 ], [ 0, %6 ]
  %21 = icmp slt i64 %18, %13
  br i1 %21, label %22, label %108

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, i64 %18
  %24 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %23, align 8
  %25 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %24, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  switch i8 %26, label %39 [
    i8 2, label %40
    i8 5, label %27
  ]

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %24, i64 0, i32 4
  %29 = load i16, i16* %28, align 2
  %30 = icmp ugt i16 %29, 1
  br i1 %30, label %31, label %40

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %24, i64 0, i32 5, i32 0
  %33 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %32, align 8
  %34 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %33, align 8
  %35 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %34, i64 0, i32 0
  %36 = load i8, i8* %35, align 8
  %37 = icmp eq i8 %36, 2
  %38 = select i1 %37, %"class.re2::Regexp"* null, %"class.re2::Regexp"* %34
  br label %40

39:                                               ; preds = %22
  br label %40

40:                                               ; preds = %22, %27, %39, %31
  %41 = phi %"class.re2::Regexp"* [ %38, %31 ], [ null, %22 ], [ %24, %27 ], [ %24, %39 ]
  %42 = icmp eq %"class.re2::Regexp"* %19, null
  br i1 %42, label %108, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %19, i64 0, i32 0
  %45 = load i8, i8* %44, align 8
  switch i8 %45, label %108 [
    i8 14, label %106
    i8 15, label %106
    i8 16, label %106
    i8 17, label %106
    i8 18, label %106
    i8 19, label %106
    i8 20, label %106
    i8 12, label %106
    i8 13, label %106
    i8 10, label %46
  ]

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %19, i64 0, i32 7
  %48 = bitcast %union.anon.2* %47 to %struct.anon.3*
  %49 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %19, i64 0, i32 7, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %108

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %19, i64 0, i32 4
  %56 = load i16, i16* %55, align 2
  %57 = icmp ult i16 %56, 2
  %58 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %19, i64 0, i32 5
  br i1 %57, label %59, label %61

59:                                               ; preds = %54
  %60 = bitcast %union.anon.1* %58 to %"class.re2::Regexp"**
  br label %64

61:                                               ; preds = %54
  %62 = getelementptr inbounds %union.anon.1, %union.anon.1* %58, i64 0, i32 0
  %63 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %62, align 8
  br label %64

64:                                               ; preds = %59, %61
  %65 = phi %"class.re2::Regexp"** [ %60, %59 ], [ %63, %61 ]
  %66 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %65, align 8
  %67 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %66, i64 0, i32 0
  %68 = load i8, i8* %67, align 8
  %69 = icmp eq i8 %68, 3
  br i1 %69, label %106, label %70

70:                                               ; preds = %64
  br i1 %57, label %71, label %73

71:                                               ; preds = %70
  %72 = bitcast %union.anon.1* %58 to %"class.re2::Regexp"**
  br label %76

73:                                               ; preds = %70
  %74 = getelementptr inbounds %union.anon.1, %union.anon.1* %58, i64 0, i32 0
  %75 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %74, align 8
  br label %76

76:                                               ; preds = %71, %73
  %77 = phi %"class.re2::Regexp"** [ %72, %71 ], [ %75, %73 ]
  %78 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %77, align 8
  %79 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %78, i64 0, i32 0
  %80 = load i8, i8* %79, align 8
  %81 = icmp eq i8 %80, 20
  br i1 %81, label %106, label %82

82:                                               ; preds = %76
  br i1 %57, label %83, label %85

83:                                               ; preds = %82
  %84 = bitcast %union.anon.1* %58 to %"class.re2::Regexp"**
  br label %88

85:                                               ; preds = %82
  %86 = getelementptr inbounds %union.anon.1, %union.anon.1* %58, i64 0, i32 0
  %87 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %86, align 8
  br label %88

88:                                               ; preds = %83, %85
  %89 = phi %"class.re2::Regexp"** [ %84, %83 ], [ %87, %85 ]
  %90 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %89, align 8
  %91 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %90, i64 0, i32 0
  %92 = load i8, i8* %91, align 8
  %93 = icmp eq i8 %92, 12
  br i1 %93, label %106, label %94

94:                                               ; preds = %88
  br i1 %57, label %95, label %97

95:                                               ; preds = %94
  %96 = bitcast %union.anon.1* %58 to %"class.re2::Regexp"**
  br label %100

97:                                               ; preds = %94
  %98 = getelementptr inbounds %union.anon.1, %union.anon.1* %58, i64 0, i32 0
  %99 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %98, align 8
  br label %100

100:                                              ; preds = %95, %97
  %101 = phi %"class.re2::Regexp"** [ %96, %95 ], [ %99, %97 ]
  %102 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %101, align 8
  %103 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %102, i64 0, i32 0
  %104 = load i8, i8* %103, align 8
  %105 = icmp eq i8 %104, 13
  br i1 %105, label %106, label %108

106:                                              ; preds = %43, %43, %43, %43, %43, %43, %43, %43, %43, %100, %88, %76, %64
  %107 = tail call zeroext i1 @_ZN3re26Regexp5EqualEPS0_S1_(%"class.re2::Regexp"* nonnull %19, %"class.re2::Regexp"* %41) #18
  br i1 %107, label %205, label %108

108:                                              ; preds = %43, %40, %46, %100, %106, %17
  %109 = phi %"class.re2::Regexp"* [ %41, %106 ], [ %41, %100 ], [ %41, %46 ], [ %41, %40 ], [ null, %17 ], [ %41, %43 ]
  %110 = zext i32 %20 to i64
  %111 = icmp eq i64 %18, %110
  %112 = add nsw i32 %20, 1
  %113 = zext i32 %112 to i64
  %114 = icmp eq i64 %18, %113
  %115 = or i1 %111, %114
  br i1 %115, label %116, label %118

116:                                              ; preds = %108
  %117 = trunc i64 %18 to i32
  br label %201

118:                                              ; preds = %108
  %119 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %19) #18
  %120 = ptrtoint %"class.re2::Regexp"* %119 to i64
  %121 = sext i32 %20 to i64
  %122 = icmp sgt i64 %18, %121
  br i1 %122, label %193, label %123

123:                                              ; preds = %193, %118
  %124 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, i64 %121
  %125 = ptrtoint %"class.re2::Regexp"** %124 to i64
  %126 = trunc i64 %18 to i32
  %127 = sub nsw i32 %126, %20
  %128 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %7, align 8
  %129 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %8, align 8
  %130 = icmp ult %"struct.re2::Splice"* %128, %129
  %131 = ptrtoint %"struct.re2::Splice"* %129 to i64
  br i1 %130, label %132, label %140

132:                                              ; preds = %123
  %133 = bitcast %"struct.re2::Splice"* %128 to i64*
  store i64 %120, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %128, i64 0, i32 1
  %135 = bitcast %"class.re2::Regexp"*** %134 to i64*
  store i64 %125, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %128, i64 0, i32 2
  store i32 %127, i32* %136, align 8
  %137 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %128, i64 0, i32 3
  store i32 -1, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %128, i64 1
  %139 = ptrtoint %"struct.re2::Splice"* %138 to i64
  store i64 %139, i64* %9, align 8
  br label %201

140:                                              ; preds = %123
  %141 = ptrtoint %"struct.re2::Splice"* %128 to i64
  %142 = load i64, i64* %10, align 8
  %143 = sub i64 %141, %142
  %144 = sdiv exact i64 %143, 24
  %145 = add nsw i64 %144, 1
  %146 = icmp ugt i64 %145, 768614336404564650
  br i1 %146, label %147, label %149

147:                                              ; preds = %140
  %148 = bitcast %"class.std::__1::vector.24"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %148) #20
  unreachable

149:                                              ; preds = %140
  %150 = sub i64 %131, %142
  %151 = sdiv exact i64 %150, 24
  %152 = icmp ult i64 %151, 384307168202282325
  br i1 %152, label %153, label %158

153:                                              ; preds = %149
  %154 = shl nsw i64 %151, 1
  %155 = icmp ult i64 %154, %145
  %156 = select i1 %155, i64 %145, i64 %154
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %153, %149
  %159 = phi i64 [ %156, %153 ], [ 768614336404564650, %149 ]
  %160 = mul i64 %159, 24
  %161 = tail call i8* @_Znwm(i64 %160) #17
  %162 = bitcast i8* %161 to %"struct.re2::Splice"*
  br label %163

163:                                              ; preds = %158, %153
  %164 = phi i64 [ %159, %158 ], [ 0, %153 ]
  %165 = phi %"struct.re2::Splice"* [ %162, %158 ], [ null, %153 ]
  %166 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %165, i64 %144
  %167 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %165, i64 %164
  %168 = ptrtoint %"struct.re2::Splice"* %167 to i64
  %169 = bitcast %"struct.re2::Splice"* %166 to i64*
  store i64 %120, i64* %169, align 8
  %170 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %165, i64 %144, i32 1
  %171 = bitcast %"class.re2::Regexp"*** %170 to i64*
  store i64 %125, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %165, i64 %144, i32 2
  store i32 %127, i32* %172, align 8
  %173 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %165, i64 %144, i32 3
  store i32 -1, i32* %173, align 4
  %174 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %166, i64 1
  %175 = ptrtoint %"struct.re2::Splice"* %174 to i64
  %176 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %12, align 8
  %177 = load i64, i64* %9, align 8
  %178 = ptrtoint %"struct.re2::Splice"* %176 to i64
  %179 = sub i64 %177, %178
  %180 = sdiv exact i64 %179, -24
  %181 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %166, i64 %180
  %182 = ptrtoint %"struct.re2::Splice"* %181 to i64
  %183 = icmp sgt i64 %179, 0
  br i1 %183, label %184, label %188

184:                                              ; preds = %163
  %185 = bitcast %"struct.re2::Splice"* %181 to i8*
  %186 = bitcast %"struct.re2::Splice"* %176 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 %179, i1 false) #18
  %187 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %12, align 8
  br label %188

188:                                              ; preds = %184, %163
  %189 = phi %"struct.re2::Splice"* [ %176, %163 ], [ %187, %184 ]
  store i64 %182, i64* %10, align 8
  store i64 %175, i64* %9, align 8
  store i64 %168, i64* %11, align 8
  %190 = icmp eq %"struct.re2::Splice"* %189, null
  br i1 %190, label %201, label %191

191:                                              ; preds = %188
  %192 = bitcast %"struct.re2::Splice"* %189 to i8*
  tail call void @_ZdlPv(i8* %192) #17
  br label %201

193:                                              ; preds = %118, %193
  %194 = phi i64 [ %198, %193 ], [ %121, %118 ]
  %195 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, i64 %194
  %196 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %195, align 8
  %197 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp19RemoveLeadingRegexpEPS0_(%"class.re2::Regexp"* %196)
  store %"class.re2::Regexp"* %197, %"class.re2::Regexp"** %195, align 8
  %198 = add nsw i64 %194, 1
  %199 = and i64 %198, 4294967295
  %200 = icmp eq i64 %199, %18
  br i1 %200, label %123, label %193

201:                                              ; preds = %116, %191, %188, %132
  %202 = phi i32 [ %117, %116 ], [ %126, %191 ], [ %126, %188 ], [ %126, %132 ]
  %203 = select i1 %21, i32 %202, i32 %20
  %204 = select i1 %21, %"class.re2::Regexp"* %109, %"class.re2::Regexp"* %19
  br label %205

205:                                              ; preds = %106, %201
  %206 = phi i32 [ %203, %201 ], [ %20, %106 ]
  %207 = phi %"class.re2::Regexp"* [ %204, %201 ], [ %19, %106 ]
  %208 = add nuw nsw i64 %18, 1
  %209 = icmp eq i64 %208, %15
  br i1 %209, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re221FactorAlternationImpl6Round3EPPNS_6RegexpEiNS1_10ParseFlagsEPNSt3__16vectorINS_6SpliceENS5_9allocatorIS7_EEEE(%"class.re2::Regexp"**, i32, i32, %"class.std::__1::vector.24"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.re2::CharClassBuilder", align 8
  %6 = alloca %class.LogMessage, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp slt i32 %1, 0
  br i1 %8, label %48, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.re2::CharClassBuilder"* %5 to i8*
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 0
  %12 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %12, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %12 to i64*
  %19 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %20 = bitcast %"class.std::__1::basic_ostringstream"* %12 to i8**
  %21 = inttoptr i64 %17 to i8*
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = bitcast %"class.std::__1::basic_ostringstream"* %12 to i8*
  %25 = bitcast %"class.std::__1::basic_stringbuf"* %15 to i8*
  %26 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1, i32 1, i32 1
  %28 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1, i32 1, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.re2::Splice"** %36 to i64*
  %39 = bitcast %"class.std::__1::vector.24"* %3 to i64*
  %40 = bitcast %"struct.re2::Splice"** %37 to i64*
  %41 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %3, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %5, i64 0, i32 3, i32 0
  %43 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %5, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to %"class.std::__1::__tree_node"**
  %45 = sext i32 %1 to i64
  %46 = add nuw i32 %1, 1
  %47 = zext i32 %46 to i64
  br label %49

48:                                               ; preds = %231, %4
  ret void

49:                                               ; preds = %231, %9
  %50 = phi i64 [ %234, %231 ], [ 0, %9 ]
  %51 = phi %"class.re2::Regexp"* [ %233, %231 ], [ null, %9 ]
  %52 = phi i32 [ %232, %231 ], [ 0, %9 ]
  %53 = icmp slt i64 %50, %45
  br i1 %53, label %54, label %64

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, i64 %50
  %56 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %55, align 8
  %57 = icmp eq %"class.re2::Regexp"* %51, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %51, i64 0, i32 0
  %60 = load i8, i8* %59, align 8
  switch i8 %60, label %64 [
    i8 3, label %61
    i8 20, label %61
  ]

61:                                               ; preds = %58, %58
  %62 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %56, i64 0, i32 0
  %63 = load i8, i8* %62, align 8
  switch i8 %63, label %64 [
    i8 3, label %231
    i8 20, label %231
  ]

64:                                               ; preds = %61, %58, %54, %49
  %65 = phi %"class.re2::Regexp"* [ %56, %54 ], [ null, %49 ], [ %56, %58 ], [ %56, %61 ]
  %66 = zext i32 %52 to i64
  %67 = icmp eq i64 %50, %66
  %68 = add nsw i32 %52, 1
  %69 = zext i32 %68 to i64
  %70 = icmp eq i64 %50, %69
  %71 = or i1 %67, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %64
  %73 = trunc i64 %50 to i32
  br label %227

74:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  call void @_ZN3re216CharClassBuilderC1Ev(%"class.re2::CharClassBuilder"* nonnull %5) #18
  %75 = sext i32 %52 to i64
  %76 = icmp sgt i64 %50, %75
  br i1 %76, label %152, label %77

77:                                               ; preds = %223, %74
  %78 = call %"class.re2::CharClass"* @_ZN3re216CharClassBuilder12GetCharClassEv(%"class.re2::CharClassBuilder"* nonnull %5) #18
  %79 = call %"class.re2::Regexp"* @_ZN3re26Regexp12NewCharClassEPNS_9CharClassENS0_10ParseFlagsE(%"class.re2::CharClass"* %78, i32 %2) #18
  %80 = ptrtoint %"class.re2::Regexp"* %79 to i64
  %81 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, i64 %75
  %82 = ptrtoint %"class.re2::Regexp"** %81 to i64
  %83 = trunc i64 %50 to i32
  %84 = sub nsw i32 %83, %52
  %85 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %36, align 8
  %86 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %37, align 8
  %87 = icmp ult %"struct.re2::Splice"* %85, %86
  %88 = ptrtoint %"struct.re2::Splice"* %86 to i64
  br i1 %87, label %89, label %97

89:                                               ; preds = %77
  %90 = bitcast %"struct.re2::Splice"* %85 to i64*
  store i64 %80, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %85, i64 0, i32 1
  %92 = bitcast %"class.re2::Regexp"*** %91 to i64*
  store i64 %82, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %85, i64 0, i32 2
  store i32 %84, i32* %93, align 8
  %94 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %85, i64 0, i32 3
  store i32 -1, i32* %94, align 4
  %95 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %85, i64 1
  %96 = ptrtoint %"struct.re2::Splice"* %95 to i64
  store i64 %96, i64* %38, align 8
  br label %150

97:                                               ; preds = %77
  %98 = ptrtoint %"struct.re2::Splice"* %85 to i64
  %99 = load i64, i64* %39, align 8
  %100 = sub i64 %98, %99
  %101 = sdiv exact i64 %100, 24
  %102 = add nsw i64 %101, 1
  %103 = icmp ugt i64 %102, 768614336404564650
  br i1 %103, label %104, label %106

104:                                              ; preds = %97
  %105 = bitcast %"class.std::__1::vector.24"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %105) #20
  unreachable

106:                                              ; preds = %97
  %107 = sub i64 %88, %99
  %108 = sdiv exact i64 %107, 24
  %109 = icmp ult i64 %108, 384307168202282325
  br i1 %109, label %110, label %115

110:                                              ; preds = %106
  %111 = shl nsw i64 %108, 1
  %112 = icmp ult i64 %111, %102
  %113 = select i1 %112, i64 %102, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %110, %106
  %116 = phi i64 [ %113, %110 ], [ 768614336404564650, %106 ]
  %117 = mul i64 %116, 24
  %118 = call i8* @_Znwm(i64 %117) #17
  %119 = bitcast i8* %118 to %"struct.re2::Splice"*
  br label %120

120:                                              ; preds = %115, %110
  %121 = phi i64 [ %116, %115 ], [ 0, %110 ]
  %122 = phi %"struct.re2::Splice"* [ %119, %115 ], [ null, %110 ]
  %123 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %122, i64 %101
  %124 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %122, i64 %121
  %125 = ptrtoint %"struct.re2::Splice"* %124 to i64
  %126 = bitcast %"struct.re2::Splice"* %123 to i64*
  store i64 %80, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %122, i64 %101, i32 1
  %128 = bitcast %"class.re2::Regexp"*** %127 to i64*
  store i64 %82, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %122, i64 %101, i32 2
  store i32 %84, i32* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %122, i64 %101, i32 3
  store i32 -1, i32* %130, align 4
  %131 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %123, i64 1
  %132 = ptrtoint %"struct.re2::Splice"* %131 to i64
  %133 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %41, align 8
  %134 = load i64, i64* %38, align 8
  %135 = ptrtoint %"struct.re2::Splice"* %133 to i64
  %136 = sub i64 %134, %135
  %137 = sdiv exact i64 %136, -24
  %138 = getelementptr inbounds %"struct.re2::Splice", %"struct.re2::Splice"* %123, i64 %137
  %139 = ptrtoint %"struct.re2::Splice"* %138 to i64
  %140 = icmp sgt i64 %136, 0
  br i1 %140, label %141, label %145

141:                                              ; preds = %120
  %142 = bitcast %"struct.re2::Splice"* %138 to i8*
  %143 = bitcast %"struct.re2::Splice"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 %136, i1 false) #18
  %144 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %41, align 8
  br label %145

145:                                              ; preds = %141, %120
  %146 = phi %"struct.re2::Splice"* [ %133, %120 ], [ %144, %141 ]
  store i64 %139, i64* %39, align 8
  store i64 %132, i64* %38, align 8
  store i64 %125, i64* %40, align 8
  %147 = icmp eq %"struct.re2::Splice"* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %145
  %149 = bitcast %"struct.re2::Splice"* %146 to i8*
  call void @_ZdlPv(i8* %149) #17
  br label %150

150:                                              ; preds = %89, %145, %148
  %151 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %42, %"class.std::__1::__tree_node"* %151) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #18
  br label %227

152:                                              ; preds = %74, %223
  %153 = phi i64 [ %224, %223 ], [ %75, %74 ]
  %154 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, i64 %153
  %155 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %154, align 8
  %156 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %155, i64 0, i32 0
  %157 = load i8, i8* %156, align 8
  switch i8 %157, label %187 [
    i8 20, label %158
    i8 3, label %181
  ]

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %155, i64 0, i32 7
  %160 = bitcast %union.anon.2* %159 to %"class.re2::CharClass"**
  %161 = load %"class.re2::CharClass"*, %"class.re2::CharClass"** %160, align 8
  %162 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %161, i64 0, i32 3
  %163 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %161, i64 0, i32 4
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %223, label %166

166:                                              ; preds = %158
  %167 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %162, align 8
  br label %168

168:                                              ; preds = %166, %168
  %169 = phi %"struct.re2::RuneRange"* [ %175, %168 ], [ %167, %166 ]
  %170 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %169, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* nonnull %5, i32 %171, i32 %173) #18
  %175 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %169, i64 1
  %176 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %162, align 8
  %177 = load i32, i32* %163, align 8
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %176, i64 %178
  %180 = icmp eq %"struct.re2::RuneRange"* %175, %179
  br i1 %180, label %223, label %168

181:                                              ; preds = %152
  %182 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %155, i64 0, i32 7, i32 0, i32 0
  %183 = load i32, i32* %182, align 8
  %184 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %155, i64 0, i32 2
  %185 = load i16, i16* %184, align 2
  %186 = zext i16 %185 to i32
  call void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* nonnull %5, i32 %183, i32 %183, i32 %186)
  br label %223

187:                                              ; preds = %152
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %11) #18
  store i8 0, i8* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  store i64 %17, i64* %18, align 8
  %188 = load i64, i64* %23, align 8
  %189 = getelementptr inbounds i8, i8* %24, i64 %188
  %190 = bitcast i8* %189 to i64*
  store i64 %19, i64* %190, align 8
  %191 = load i8*, i8** %20, align 8
  %192 = getelementptr i8, i8* %191, i64 -24
  %193 = bitcast i8* %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i8, i8* %24, i64 %194
  %196 = bitcast i8* %195 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %196, i8* %25) #18
  %197 = getelementptr inbounds i8, i8* %195, i64 136
  %198 = bitcast i8* %197 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %198, align 8
  %199 = getelementptr inbounds i8, i8* %195, i64 144
  %200 = bitcast i8* %199 to i32*
  store i32 -1, i32* %200, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %16) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %28, align 8
  %201 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 38) #18
  %202 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %201, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %203 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %202, i32 1183) #18
  %204 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %203, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %205 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 20) #18
  %206 = load i8, i8* %156, align 8
  %207 = zext i8 %206 to i32
  %208 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %205, i32 %207) #18
  %209 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %208, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #18
  call void @_ZN3re26Regexp8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.re2::Regexp"* %155) #18
  %210 = load i8, i8* %33, align 1
  %211 = icmp slt i8 %210, 0
  %212 = load i8*, i8** %34, align 8
  %213 = load i64, i64* %35, align 8
  %214 = zext i8 %210 to i64
  %215 = select i1 %211, i8* %212, i8* %31
  %216 = select i1 %211, i64 %213, i64 %214
  %217 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %209, i8* %215, i64 %216) #18
  %218 = load i8, i8* %33, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %187
  %221 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %221) #17
  br label %222

222:                                              ; preds = %187, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %11) #18
  br label %223

223:                                              ; preds = %168, %158, %181, %222
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %155) #18
  %224 = add nsw i64 %153, 1
  %225 = and i64 %224, 4294967295
  %226 = icmp eq i64 %225, %50
  br i1 %226, label %77, label %152

227:                                              ; preds = %72, %150
  %228 = phi i32 [ %73, %72 ], [ %83, %150 ]
  %229 = select i1 %53, i32 %228, i32 %52
  %230 = select i1 %53, %"class.re2::Regexp"* %65, %"class.re2::Regexp"* %51
  br label %231

231:                                              ; preds = %61, %61, %227
  %232 = phi i32 [ %229, %227 ], [ %52, %61 ], [ %52, %61 ]
  %233 = phi %"class.re2::Regexp"* [ %230, %227 ], [ %51, %61 ], [ %51, %61 ]
  %234 = add nuw nsw i64 %50, 1
  %235 = icmp eq i64 %234, %47
  br i1 %235, label %48, label %49
}

declare %"class.re2::Regexp"* @_ZN3re26Regexp13LiteralStringEPiiNS0_10ParseFlagsE(i32*, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN3re26Regexp5EqualEPS0_S1_(%"class.re2::Regexp"*, %"class.re2::Regexp"*) local_unnamed_addr #3

declare %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = and i32 %3, 2052
  %6 = icmp ne i32 %5, 4
  %7 = icmp slt i32 %1, 11
  %8 = and i1 %7, %6
  %9 = icmp sgt i32 %2, 9
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %27

11:                                               ; preds = %4
  %12 = icmp slt i32 %1, 10
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = and i32 %3, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call fastcc void @_ZN3re2L14AddFoldedRangeEPNS_16CharClassBuilderEiii(%"class.re2::CharClassBuilder"* %0, i32 %1, i32 9, i32 0) #18
  br label %19

17:                                               ; preds = %13
  %18 = tail call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* %0, i32 %1, i32 9) #18
  br label %19

19:                                               ; preds = %17, %16, %11
  %20 = icmp sgt i32 %2, 10
  br i1 %20, label %21, label %33

21:                                               ; preds = %19
  %22 = and i32 %3, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  tail call fastcc void @_ZN3re2L14AddFoldedRangeEPNS_16CharClassBuilderEiii(%"class.re2::CharClassBuilder"* %0, i32 11, i32 %2, i32 0) #18
  br label %33

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* %0, i32 11, i32 %2) #18
  br label %33

27:                                               ; preds = %4
  %28 = and i32 %3, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call fastcc void @_ZN3re2L14AddFoldedRangeEPNS_16CharClassBuilderEiii(%"class.re2::CharClassBuilder"* %0, i32 %1, i32 %2, i32 0)
  br label %33

31:                                               ; preds = %27
  %32 = tail call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* %0, i32 %1, i32 %2) #18
  br label %33

33:                                               ; preds = %25, %24, %30, %31, %19
  ret void
}

declare void @_ZN3re26Regexp8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.re2::Regexp"*) local_unnamed_addr #3

declare %"class.re2::Regexp"* @_ZN3re26Regexp12NewCharClassEPNS_9CharClassENS0_10ParseFlagsE(%"class.re2::CharClass"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re26Regexp10ParseState10DoCollapseENS_8RegexpOpE(%"class.re2::Regexp::ParseState"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 3
  %4 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  %5 = icmp eq %"class.re2::Regexp"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = icmp ugt i8 %8, 21
  br i1 %9, label %30, label %14

10:                                               ; preds = %26
  %11 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %20, i64 0, i32 0
  %12 = load i8, i8* %11, align 8
  %13 = icmp ugt i8 %12, 21
  br i1 %13, label %30, label %14

14:                                               ; preds = %6, %10
  %15 = phi i8 [ %12, %10 ], [ %8, %6 ]
  %16 = phi %"class.re2::Regexp"* [ %20, %10 ], [ %4, %6 ]
  %17 = phi i32 [ %28, %10 ], [ 0, %6 ]
  %18 = zext i8 %15 to i32
  %19 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %16, i64 0, i32 6
  %20 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %19, align 8
  %21 = icmp eq i32 %18, %1
  br i1 %21, label %22, label %26

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %16, i64 0, i32 4
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  br label %26

26:                                               ; preds = %14, %22
  %27 = phi i32 [ %25, %22 ], [ 1, %14 ]
  %28 = add nuw nsw i32 %27, %17
  %29 = icmp eq %"class.re2::Regexp"* %20, null
  br i1 %29, label %30, label %10

30:                                               ; preds = %10, %26, %6
  %31 = phi %"class.re2::Regexp"* [ null, %6 ], [ %20, %10 ], [ null, %26 ]
  %32 = phi i32 [ 0, %6 ], [ %28, %26 ], [ %28, %10 ]
  br i1 %5, label %37, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 6
  %35 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %34, align 8
  %36 = icmp eq %"class.re2::Regexp"* %35, %31
  br i1 %36, label %127, label %43

37:                                               ; preds = %2, %30
  %38 = phi i32 [ %32, %30 ], [ 0, %2 ]
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  %41 = tail call i8* @_Znwm(i64 %40) #17
  %42 = bitcast i8* %41 to %"class.re2::Regexp"**
  br label %115

43:                                               ; preds = %33
  %44 = zext i32 %32 to i64
  %45 = shl nuw nsw i64 %44, 3
  %46 = tail call i8* @_Znwm(i64 %45) #17
  %47 = bitcast i8* %46 to %"class.re2::Regexp"**
  %48 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 0
  %49 = load i8, i8* %48, align 8
  %50 = icmp ugt i8 %49, 21
  br i1 %50, label %115, label %55

51:                                               ; preds = %112
  %52 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %61, i64 0, i32 0
  %53 = load i8, i8* %52, align 8
  %54 = icmp ugt i8 %53, 21
  br i1 %54, label %115, label %55

55:                                               ; preds = %43, %51
  %56 = phi i8 [ %53, %51 ], [ %49, %43 ]
  %57 = phi %"class.re2::Regexp"* [ %61, %51 ], [ %4, %43 ]
  %58 = phi i32 [ %113, %51 ], [ %32, %43 ]
  %59 = zext i8 %56 to i32
  %60 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %57, i64 0, i32 6
  %61 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %60, align 8
  %62 = icmp eq i32 %59, %1
  br i1 %62, label %63, label %92

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %57, i64 0, i32 4
  %65 = load i16, i16* %64, align 2
  %66 = icmp ult i16 %65, 2
  %67 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %57, i64 0, i32 5
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %union.anon.1, %union.anon.1* %67, i64 0, i32 0
  %70 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %69, align 8
  br label %74

71:                                               ; preds = %63
  %72 = bitcast %union.anon.1* %67 to %"class.re2::Regexp"**
  %73 = icmp eq i16 %65, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68, %71
  %75 = phi %"class.re2::Regexp"** [ %70, %68 ], [ %72, %71 ]
  %76 = zext i16 %65 to i64
  %77 = sext i32 %58 to i64
  br label %82

78:                                               ; preds = %82
  %79 = trunc i64 %89 to i32
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %58, %71 ], [ %79, %78 ]
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %57) #18
  br label %112

82:                                               ; preds = %74, %82
  %83 = phi i64 [ %77, %74 ], [ %89, %82 ]
  %84 = phi i64 [ %76, %74 ], [ %85, %82 ]
  %85 = add nsw i64 %84, -1
  %86 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %75, i64 %85
  %87 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %86, align 8
  %88 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %87) #18
  %89 = add nsw i64 %83, -1
  %90 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %47, i64 %89
  store %"class.re2::Regexp"* %88, %"class.re2::Regexp"** %90, align 8
  %91 = icmp sgt i64 %85, 0
  br i1 %91, label %82, label %78

92:                                               ; preds = %55
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %60, align 8
  %93 = icmp eq i8 %56, 20
  br i1 %93, label %94, label %108

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %57, i64 0, i32 7, i32 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string"** %95 to %"class.re2::CharClassBuilder"**
  %97 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %96, align 8
  %98 = icmp eq %"class.re2::CharClassBuilder"* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %57, i64 0, i32 7
  store %"class.re2::CharClassBuilder"* null, %"class.re2::CharClassBuilder"** %96, align 8
  %101 = tail call %"class.re2::CharClass"* @_ZN3re216CharClassBuilder12GetCharClassEv(%"class.re2::CharClassBuilder"* nonnull %97) #18
  %102 = bitcast %union.anon.2* %100 to %"class.re2::CharClass"**
  store %"class.re2::CharClass"* %101, %"class.re2::CharClass"** %102, align 8
  %103 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %97, i64 0, i32 3, i32 0
  %104 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %97, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_node"**
  %106 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %105, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %103, %"class.std::__1::__tree_node"* %106) #18
  %107 = bitcast %"class.re2::CharClassBuilder"* %97 to i8*
  tail call void @_ZdlPv(i8* %107) #17
  br label %108

108:                                              ; preds = %92, %94, %99
  %109 = add nsw i32 %58, -1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %47, i64 %110
  store %"class.re2::Regexp"* %57, %"class.re2::Regexp"** %111, align 8
  br label %112

112:                                              ; preds = %80, %108
  %113 = phi i32 [ %81, %80 ], [ %109, %108 ]
  %114 = icmp eq %"class.re2::Regexp"* %61, null
  br i1 %114, label %115, label %51

115:                                              ; preds = %51, %112, %43, %37
  %116 = phi i8* [ %41, %37 ], [ %46, %43 ], [ %46, %112 ], [ %46, %51 ]
  %117 = phi i32 [ %38, %37 ], [ %32, %43 ], [ %32, %112 ], [ %32, %51 ]
  %118 = phi %"class.re2::Regexp"** [ %42, %37 ], [ %47, %43 ], [ %47, %112 ], [ %47, %51 ]
  %119 = phi %"class.re2::Regexp"* [ null, %37 ], [ null, %43 ], [ %61, %51 ], [ null, %112 ]
  %120 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp17ConcatOrAlternateENS_8RegexpOpEPPS0_iNS0_10ParseFlagsEb(i32 %1, %"class.re2::Regexp"** nonnull %118, i32 %117, i32 %121, i1 zeroext true) #18
  %123 = tail call zeroext i1 @_ZN3re26Regexp13ComputeSimpleEv(%"class.re2::Regexp"* %122) #18
  %124 = zext i1 %123 to i8
  %125 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %122, i64 0, i32 1
  store i8 %124, i8* %125, align 1
  %126 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %122, i64 0, i32 6
  store %"class.re2::Regexp"* %119, %"class.re2::Regexp"** %126, align 8
  store %"class.re2::Regexp"* %122, %"class.re2::Regexp"** %3, align 8
  tail call void @_ZdlPv(i8* nonnull %116) #17
  br label %127

127:                                              ; preds = %33, %115
  ret void
}

declare %"class.re2::Regexp"* @_ZN3re26Regexp17ConcatOrAlternateENS_8RegexpOpEPPS0_iNS0_10ParseFlagsEb(i32, %"class.re2::Regexp"**, i32, i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN3re26Regexp15AddRuneToStringEi(%"class.re2::Regexp"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3re2L14AddFoldedRangeEPNS_16CharClassBuilderEiii(%"class.re2::CharClassBuilder"*, i32, i32, i32) unnamed_addr #0 {
  %5 = alloca %class.LogMessage, align 8
  %6 = icmp sgt i32 %3, 10
  br i1 %6, label %7, label %46

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %8) #18
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1
  %10 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %12 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %12, i64 0, i32 0
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %9 to i64*
  store i64 %14, i64* %15, align 8
  %16 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %9 to i8**
  %18 = inttoptr i64 %14 to i8*
  %19 = getelementptr i8, i8* %18, i64 -24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::basic_ostringstream"* %9 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = bitcast i8* %23 to i64*
  store i64 %16, i64* %24, align 8
  %25 = load i8*, i8** %17, align 8
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %22, i64 %28
  %30 = bitcast i8* %29 to %"class.std::__1::ios_base"*
  %31 = bitcast %"class.std::__1::basic_stringbuf"* %12 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %30, i8* %31) #18
  %32 = getelementptr inbounds i8, i8* %29, i64 136
  %33 = bitcast i8* %32 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %29, i64 144
  %35 = bitcast i8* %34 to i32*
  store i32 -1, i32* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %13) #18
  %36 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %12, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 1
  %38 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 3
  %39 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %38, align 8
  %40 = bitcast %"class.std::__1::basic_ostringstream"* %9 to %"class.std::__1::basic_ostream"*
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 38) #18
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %42, i32 351) #18
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0), i64 33) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %8) #18
  br label %120

46:                                               ; preds = %4
  %47 = tail call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* %0, i32 %1, i32 %2) #18
  %48 = xor i1 %47, true
  %49 = icmp sgt i32 %1, %2
  %50 = or i1 %49, %48
  br i1 %50, label %120, label %51

51:                                               ; preds = %46
  %52 = load i32, i32* @_ZN3re220num_unicode_casefoldE, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [0 x %"struct.re2::CaseFold"], [0 x %"struct.re2::CaseFold"]* @_ZN3re216unicode_casefoldE, i64 0, i64 %53
  %55 = icmp sgt i32 %52, 0
  %56 = add nsw i32 %3, 1
  br label %57

57:                                               ; preds = %51, %117
  %58 = phi i32 [ %1, %51 ], [ %118, %117 ]
  br i1 %55, label %59, label %81

59:                                               ; preds = %57, %77
  %60 = phi i32 [ %79, %77 ], [ %52, %57 ]
  %61 = phi %"struct.re2::CaseFold"* [ %78, %77 ], [ getelementptr inbounds ([0 x %"struct.re2::CaseFold"], [0 x %"struct.re2::CaseFold"]* @_ZN3re216unicode_casefoldE, i64 0, i64 0), %57 ]
  %62 = lshr i32 %60, 1
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %61, i64 %63
  %65 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %66, %58
  br i1 %67, label %77, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %61, i64 %63, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, %58
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = add nuw nsw i32 %62, 1
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %61, i64 %74
  %76 = sub nsw i32 %60, %73
  br label %77

77:                                               ; preds = %72, %59
  %78 = phi %"struct.re2::CaseFold"* [ %75, %72 ], [ %61, %59 ]
  %79 = phi i32 [ %76, %72 ], [ %62, %59 ]
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %59, label %81

81:                                               ; preds = %77, %57
  %82 = phi %"struct.re2::CaseFold"* [ getelementptr inbounds ([0 x %"struct.re2::CaseFold"], [0 x %"struct.re2::CaseFold"]* @_ZN3re216unicode_casefoldE, i64 0, i64 0), %57 ], [ %78, %77 ]
  %83 = icmp ult %"struct.re2::CaseFold"* %82, %54
  br i1 %83, label %84, label %120

84:                                               ; preds = %68, %81
  %85 = phi %"struct.re2::CaseFold"* [ %82, %81 ], [ %64, %68 ]
  %86 = icmp eq %"struct.re2::CaseFold"* %85, null
  br i1 %86, label %120, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %85, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %58, %89
  br i1 %90, label %117, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %85, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %93, %2
  %95 = select i1 %94, i32 %93, i32 %2
  %96 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %85, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  switch i32 %97, label %110 [
    i32 1, label %98
    i32 -1, label %104
  ]

98:                                               ; preds = %91
  %99 = srem i32 %58, 2
  %100 = icmp eq i32 %99, 1
  %101 = sext i1 %100 to i32
  %102 = and i32 %95, 1
  %103 = xor i32 %102, 1
  br label %110

104:                                              ; preds = %91
  %105 = and i32 %58, 1
  %106 = add nsw i32 %105, -1
  %107 = srem i32 %95, 2
  %108 = icmp eq i32 %107, 1
  %109 = zext i1 %108 to i32
  br label %110

110:                                              ; preds = %91, %104, %98
  %111 = phi i32 [ %101, %98 ], [ %106, %104 ], [ %97, %91 ]
  %112 = phi i32 [ %103, %98 ], [ %109, %104 ], [ %97, %91 ]
  %113 = add nsw i32 %112, %95
  %114 = add nsw i32 %111, %58
  tail call fastcc void @_ZN3re2L14AddFoldedRangeEPNS_16CharClassBuilderEiii(%"class.re2::CharClassBuilder"* %0, i32 %114, i32 %113, i32 %56)
  %115 = load i32, i32* %92, align 4
  %116 = add nsw i32 %115, 1
  br label %117

117:                                              ; preds = %87, %110
  %118 = phi i32 [ %116, %110 ], [ %89, %87 ]
  %119 = icmp sgt i32 %118, %2
  br i1 %119, label %120, label %57

120:                                              ; preds = %117, %84, %81, %46, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.re2::UGroup"* @_ZN3re222MaybeParsePerlCCEscapeEPNS_11StringPieceENS_6Regexp10ParseFlagsE(%"class.re2::StringPiece"* nocapture, i32) local_unnamed_addr #0 {
  %3 = trunc i32 %1 to i8
  %4 = icmp sgt i8 %3, -1
  br i1 %4, label %41, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %41, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 92
  br i1 %13, label %14, label %41

14:                                               ; preds = %9
  %15 = load i32, i32* @_ZN3re215num_perl_groupsE, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %41

17:                                               ; preds = %14
  %18 = zext i32 %15 to i64
  br label %19

19:                                               ; preds = %33, %17
  %20 = phi i64 [ 0, %17 ], [ %34, %33 ]
  %21 = getelementptr inbounds [0 x %"struct.re2::UGroup"], [0 x %"struct.re2::UGroup"]* @_ZN3re211perl_groupsE, i64 0, i64 %20
  %22 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %21, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %19
  %26 = tail call i64 @strlen(i8* nonnull %23) #21
  %27 = icmp eq i64 %26, 2
  br i1 %27, label %28, label %33

28:                                               ; preds = %25
  %29 = icmp eq i8* %23, %11
  br i1 %29, label %36, label %30

30:                                               ; preds = %28
  %31 = tail call i32 @bcmp(i8* nonnull %23, i8* %11, i64 2) #18
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %19, %30, %25
  %34 = add nuw nsw i64 %20, 1
  %35 = icmp eq i64 %34, %18
  br i1 %35, label %41, label %19

36:                                               ; preds = %28, %30
  %37 = icmp eq %"struct.re2::UGroup"* %21, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds i8, i8* %11, i64 2
  store i8* %39, i8** %10, align 8
  %40 = add i64 %7, -2
  store i64 %40, i64* %6, align 8
  br label %41

41:                                               ; preds = %33, %14, %38, %36, %5, %9, %2
  %42 = phi %"struct.re2::UGroup"* [ null, %2 ], [ null, %9 ], [ null, %5 ], [ %21, %38 ], [ null, %36 ], [ null, %14 ], [ null, %33 ]
  ret %"struct.re2::UGroup"* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re217ParseUnicodeGroupEPNS_11StringPieceENS_6Regexp10ParseFlagsEPNS_16CharClassBuilderEPNS_12RegexpStatusE(%"class.re2::StringPiece"*, i32, %"class.re2::CharClassBuilder"*, %"class.re2::RegexpStatus"* nocapture) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = and i32 %1, 1024
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %205, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, 2
  br i1 %13, label %205, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 92
  br i1 %18, label %19, label %205

19:                                               ; preds = %14
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #18
  store i32 -1431655766, i32* %7, align 4
  %21 = getelementptr inbounds i8, i8* %16, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  store i32 %23, i32* %7, align 4
  %24 = or i8 %22, 32
  %25 = icmp eq i8 %24, 112
  br i1 %25, label %26, label %203

26:                                               ; preds = %19
  %27 = icmp eq i8 %22, 80
  %28 = select i1 %27, i32 -1, i32 1
  %29 = getelementptr inbounds i8, i8* %16, i64 2
  store i8* %29, i8** %15, align 8
  %30 = add i64 %12, -2
  store i64 %30, i64* %11, align 8
  %31 = icmp ult i64 %30, 4
  %32 = select i1 %31, i64 %30, i64 4
  %33 = trunc i64 %32 to i32
  %34 = tail call i32 @_ZN3re28fullruneEPKci(i8* %29, i32 %33) #18
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %26
  %37 = load i8*, i8** %15, align 8
  %38 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %7, i8* %37) #18
  %39 = load i32, i32* %7, align 4
  %40 = icmp sgt i32 %39, 1114111
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  store i32 65533, i32* %7, align 4
  br label %46

42:                                               ; preds = %36
  %43 = icmp eq i32 %38, 1
  %44 = icmp eq i32 %39, 65533
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %26, %41, %42
  %47 = phi i32 [ %23, %26 ], [ 65533, %41 ], [ 65533, %42 ]
  %48 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 0
  store i32 13, i32* %48, align 8
  %49 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1
  %50 = bitcast %"class.re2::StringPiece"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #18
  br label %58

51:                                               ; preds = %42
  %52 = sext i32 %38 to i64
  %53 = load i8*, i8** %15, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  store i8* %54, i8** %15, align 8
  %55 = load i64, i64* %11, align 8
  %56 = sub i64 %55, %52
  store i64 %56, i64* %11, align 8
  %57 = icmp eq i32 %38, 0
  br i1 %57, label %203, label %58

58:                                               ; preds = %46, %51
  %59 = phi i32 [ %47, %46 ], [ %39, %51 ]
  %60 = icmp eq i32 %59, 123
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.re2::StringPiece"* %0 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint i8* %29 to i64
  %65 = sub i64 %63, %64
  br label %143

66:                                               ; preds = %58
  %67 = call i64 @_ZNK3re211StringPiece4findEcm(%"class.re2::StringPiece"* %0, i8 signext 125, i64 0) #18
  %68 = icmp eq i64 %67, -1
  br i1 %68, label %69, label %104

69:                                               ; preds = %66
  %70 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #18
  store i32 -1431655766, i32* %5, align 4
  br label %71

71:                                               ; preds = %94, %69
  %72 = phi i64 [ %12, %69 ], [ %97, %94 ]
  %73 = phi i8* [ %16, %69 ], [ %96, %94 ]
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %100, label %75

75:                                               ; preds = %71
  %76 = icmp ult i64 %72, 4
  %77 = select i1 %76, i64 %72, i64 4
  %78 = trunc i64 %77 to i32
  %79 = call i32 @_ZN3re28fullruneEPKci(i8* %73, i32 %78) #18
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %90, label %81

81:                                               ; preds = %75
  %82 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %5, i8* %73) #18
  %83 = load i32, i32* %5, align 4
  %84 = icmp sgt i32 %83, 1114111
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  store i32 65533, i32* %5, align 4
  br label %90

86:                                               ; preds = %81
  %87 = icmp eq i32 %82, 1
  %88 = icmp eq i32 %83, 65533
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %94

90:                                               ; preds = %86, %75, %85
  %91 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 0
  store i32 13, i32* %91, align 8
  %92 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1
  %93 = bitcast %"class.re2::StringPiece"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #18
  br label %99

94:                                               ; preds = %86
  %95 = sext i32 %82 to i64
  %96 = getelementptr inbounds i8, i8* %73, i64 %95
  %97 = sub i64 %72, %95
  %98 = icmp slt i32 %82, 0
  br i1 %98, label %99, label %71

99:                                               ; preds = %94, %90
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #18
  br label %203

100:                                              ; preds = %71
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #18
  %101 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 0
  store i32 4, i32* %101, align 8
  %102 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1, i32 0
  store i8* %16, i8** %102, align 8
  %103 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1, i32 1
  store i64 %12, i64* %103, align 8
  br label %203

104:                                              ; preds = %66
  %105 = load i8*, i8** %15, align 8
  %106 = add nuw i64 %67, 1
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  store i8* %107, i8** %15, align 8
  %108 = load i64, i64* %11, align 8
  %109 = sub i64 %108, %106
  store i64 %109, i64* %11, align 8
  %110 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #18
  store i32 -1431655766, i32* %6, align 4
  br label %111

111:                                              ; preds = %134, %104
  %112 = phi i64 [ %67, %104 ], [ %137, %134 ]
  %113 = phi i8* [ %105, %104 ], [ %136, %134 ]
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %139, label %115

115:                                              ; preds = %111
  %116 = icmp ult i64 %112, 4
  %117 = select i1 %116, i64 %112, i64 4
  %118 = trunc i64 %117 to i32
  %119 = call i32 @_ZN3re28fullruneEPKci(i8* %113, i32 %118) #18
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %130, label %121

121:                                              ; preds = %115
  %122 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %6, i8* %113) #18
  %123 = load i32, i32* %6, align 4
  %124 = icmp sgt i32 %123, 1114111
  br i1 %124, label %125, label %126

125:                                              ; preds = %121
  store i32 65533, i32* %6, align 4
  br label %130

126:                                              ; preds = %121
  %127 = icmp eq i32 %122, 1
  %128 = icmp eq i32 %123, 65533
  %129 = and i1 %127, %128
  br i1 %129, label %130, label %134

130:                                              ; preds = %126, %115, %125
  %131 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 0
  store i32 13, i32* %131, align 8
  %132 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1
  %133 = bitcast %"class.re2::StringPiece"* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 16, i1 false) #18
  br label %142

134:                                              ; preds = %126
  %135 = sext i32 %122 to i64
  %136 = getelementptr inbounds i8, i8* %113, i64 %135
  %137 = sub i64 %112, %135
  %138 = icmp slt i32 %122, 0
  br i1 %138, label %142, label %111

139:                                              ; preds = %111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #18
  %140 = bitcast %"class.re2::StringPiece"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  br label %143

142:                                              ; preds = %134, %130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #18
  br label %203

143:                                              ; preds = %139, %61
  %144 = phi i64 [ %63, %61 ], [ %141, %139 ]
  %145 = phi i64 [ %65, %61 ], [ %67, %139 ]
  %146 = phi i8* [ %29, %61 ], [ %105, %139 ]
  %147 = ptrtoint i8* %16 to i64
  %148 = sub i64 %144, %147
  %149 = icmp eq i64 %145, 0
  br i1 %149, label %165, label %150

150:                                              ; preds = %143
  %151 = load i8, i8* %146, align 1
  %152 = icmp eq i8 %151, 94
  %153 = sub nsw i32 0, %28
  %154 = getelementptr inbounds i8, i8* %146, i64 1
  %155 = zext i1 %152 to i64
  %156 = sub nuw i64 %145, %155
  %157 = select i1 %152, i8* %154, i8* %146
  %158 = select i1 %152, i32 %153, i32 %28
  %159 = icmp eq i64 %156, 3
  br i1 %159, label %160, label %165

160:                                              ; preds = %150
  %161 = icmp eq i8* %157, getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)
  br i1 %161, label %200, label %162

162:                                              ; preds = %160
  %163 = call i32 @bcmp(i8* %157, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 3) #18
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %200, label %165

165:                                              ; preds = %143, %162, %150
  %166 = phi i32 [ %158, %162 ], [ %158, %150 ], [ %28, %143 ]
  %167 = phi i8* [ %157, %162 ], [ %157, %150 ], [ %146, %143 ]
  %168 = phi i64 [ 3, %162 ], [ %156, %150 ], [ 0, %143 ]
  %169 = load i32, i32* @_ZN3re218num_unicode_groupsE, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %196

171:                                              ; preds = %165
  %172 = zext i32 %169 to i64
  %173 = icmp eq i64 %168, 0
  br label %174

174:                                              ; preds = %191, %171
  %175 = phi i64 [ 0, %171 ], [ %192, %191 ]
  %176 = getelementptr inbounds [0 x %"struct.re2::UGroup"], [0 x %"struct.re2::UGroup"]* @_ZN3re214unicode_groupsE, i64 0, i64 %175
  %177 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %176, i64 0, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %174
  %181 = call i64 @strlen(i8* nonnull %178) #21
  br label %182

182:                                              ; preds = %180, %174
  %183 = phi i64 [ %181, %180 ], [ 0, %174 ]
  %184 = icmp eq i64 %183, %168
  br i1 %184, label %185, label %191

185:                                              ; preds = %182
  %186 = icmp eq i8* %178, %167
  %187 = or i1 %173, %186
  br i1 %187, label %194, label %188

188:                                              ; preds = %185
  %189 = call i32 @bcmp(i8* %178, i8* %167, i64 %168) #18
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %188, %182
  %192 = add nuw nsw i64 %175, 1
  %193 = icmp eq i64 %192, %172
  br i1 %193, label %196, label %174

194:                                              ; preds = %185, %188
  %195 = icmp eq %"struct.re2::UGroup"* %176, null
  br i1 %195, label %196, label %200

196:                                              ; preds = %191, %165, %194
  %197 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 0
  store i32 4, i32* %197, align 8
  %198 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1, i32 0
  store i8* %16, i8** %198, align 8
  %199 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1, i32 1
  store i64 %148, i64* %199, align 8
  br label %203

200:                                              ; preds = %160, %162, %194
  %201 = phi %"struct.re2::UGroup"* [ %176, %194 ], [ @_ZN3re2L8anygroupE, %162 ], [ @_ZN3re2L8anygroupE, %160 ]
  %202 = phi i32 [ %166, %194 ], [ %158, %162 ], [ %158, %160 ]
  call fastcc void @_ZN3re2L9AddUGroupEPNS_16CharClassBuilderEPKNS_6UGroupEiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* %2, %"struct.re2::UGroup"* nonnull %201, i32 %202, i32 %1)
  br label %203

203:                                              ; preds = %51, %100, %200, %196, %99, %142, %19
  %204 = phi i32 [ 2, %19 ], [ 1, %142 ], [ 1, %51 ], [ 1, %100 ], [ 1, %196 ], [ 0, %200 ], [ 1, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #18
  br label %205

205:                                              ; preds = %10, %14, %4, %203
  %206 = phi i32 [ %204, %203 ], [ 2, %4 ], [ 2, %14 ], [ 2, %10 ]
  ret i32 %206
}

declare i64 @_ZNK3re211StringPiece4findEcm(%"class.re2::StringPiece"*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3re2L9AddUGroupEPNS_16CharClassBuilderEPKNS_6UGroupEiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"*, %"struct.re2::UGroup"* nocapture readonly, i32, i32) unnamed_addr #0 {
  %5 = alloca %"class.re2::CharClassBuilder", align 8
  %6 = icmp eq i32 %2, 1
  br i1 %6, label %7, label %43

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 2
  br label %19

13:                                               ; preds = %19, %7
  %14 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %156

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 4
  br label %32

19:                                               ; preds = %11, %19
  %20 = phi i64 [ 0, %11 ], [ %28, %19 ]
  %21 = load %"struct.re2::URange16"*, %"struct.re2::URange16"** %12, align 8
  %22 = getelementptr inbounds %"struct.re2::URange16", %"struct.re2::URange16"* %21, i64 %20, i32 0
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds %"struct.re2::URange16", %"struct.re2::URange16"* %21, i64 %20, i32 1
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  tail call void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* %0, i32 %24, i32 %27, i32 %3)
  %28 = add nuw nsw i64 %20, 1
  %29 = load i32, i32* %8, align 8
  %30 = sext i32 %29 to i64
  %31 = icmp slt i64 %28, %30
  br i1 %31, label %19, label %13

32:                                               ; preds = %17, %32
  %33 = phi i64 [ 0, %17 ], [ %39, %32 ]
  %34 = load %"struct.re2::URange32"*, %"struct.re2::URange32"** %18, align 8
  %35 = getelementptr inbounds %"struct.re2::URange32", %"struct.re2::URange32"* %34, i64 %33, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.re2::URange32", %"struct.re2::URange32"* %34, i64 %33, i32 1
  %38 = load i32, i32* %37, align 4
  tail call void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* %0, i32 %36, i32 %38, i32 %3)
  %39 = add nuw nsw i64 %33, 1
  %40 = load i32, i32* %14, align 8
  %41 = sext i32 %40 to i64
  %42 = icmp slt i64 %39, %41
  br i1 %42, label %32, label %156

43:                                               ; preds = %4
  %44 = and i32 %3, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %100

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 2
  %52 = load %"struct.re2::URange16"*, %"struct.re2::URange16"** %51, align 8
  br label %108

53:                                               ; preds = %43
  %54 = bitcast %"class.re2::CharClassBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 40, i1 false)
  call void @_ZN3re216CharClassBuilderC1Ev(%"class.re2::CharClassBuilder"* nonnull %5) #18
  %55 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 2
  br label %66

60:                                               ; preds = %66, %53
  %61 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 5
  %62 = load i32, i32* %61, align 8
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %90

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 4
  br label %79

66:                                               ; preds = %58, %66
  %67 = phi i64 [ 0, %58 ], [ %75, %66 ]
  %68 = load %"struct.re2::URange16"*, %"struct.re2::URange16"** %59, align 8
  %69 = getelementptr inbounds %"struct.re2::URange16", %"struct.re2::URange16"* %68, i64 %67, i32 0
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i32
  %72 = getelementptr inbounds %"struct.re2::URange16", %"struct.re2::URange16"* %68, i64 %67, i32 1
  %73 = load i16, i16* %72, align 2
  %74 = zext i16 %73 to i32
  call void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* nonnull %5, i32 %71, i32 %74, i32 %3) #18
  %75 = add nuw nsw i64 %67, 1
  %76 = load i32, i32* %55, align 8
  %77 = sext i32 %76 to i64
  %78 = icmp slt i64 %75, %77
  br i1 %78, label %66, label %60

79:                                               ; preds = %64, %79
  %80 = phi i64 [ 0, %64 ], [ %86, %79 ]
  %81 = load %"struct.re2::URange32"*, %"struct.re2::URange32"** %65, align 8
  %82 = getelementptr inbounds %"struct.re2::URange32", %"struct.re2::URange32"* %81, i64 %80, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.re2::URange32", %"struct.re2::URange32"* %81, i64 %80, i32 1
  %85 = load i32, i32* %84, align 4
  call void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* nonnull %5, i32 %83, i32 %85, i32 %3) #18
  %86 = add nuw nsw i64 %80, 1
  %87 = load i32, i32* %61, align 8
  %88 = sext i32 %87 to i64
  %89 = icmp slt i64 %86, %88
  br i1 %89, label %79, label %90

90:                                               ; preds = %79, %60
  %91 = and i32 %3, 2052
  %92 = icmp eq i32 %91, 4
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* nonnull %5, i32 10, i32 10) #18
  br label %95

95:                                               ; preds = %90, %93
  call void @_ZN3re216CharClassBuilder6NegateEv(%"class.re2::CharClassBuilder"* nonnull %5) #18
  call void @_ZN3re216CharClassBuilder12AddCharClassEPS0_(%"class.re2::CharClassBuilder"* %0, %"class.re2::CharClassBuilder"* nonnull %5) #18
  %96 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %5, i64 0, i32 3, i32 0
  %97 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %5, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to %"class.std::__1::__tree_node"**
  %99 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %98, align 8
  call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %96, %"class.std::__1::__tree_node"* %99) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #18
  br label %156

100:                                              ; preds = %121, %46
  %101 = phi i32 [ 0, %46 ], [ %127, %121 ]
  %102 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 5
  %103 = load i32, i32* %102, align 8
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %105, label %154

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %1, i64 0, i32 4
  %107 = load %"struct.re2::URange32"*, %"struct.re2::URange32"** %106, align 8
  br label %133

108:                                              ; preds = %50, %121
  %109 = phi i32 [ %48, %50 ], [ %122, %121 ]
  %110 = phi %"struct.re2::URange16"* [ %52, %50 ], [ %123, %121 ]
  %111 = phi i64 [ 0, %50 ], [ %128, %121 ]
  %112 = phi i32 [ 0, %50 ], [ %127, %121 ]
  %113 = getelementptr inbounds %"struct.re2::URange16", %"struct.re2::URange16"* %110, i64 %111, i32 0
  %114 = load i16, i16* %113, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp ult i32 %112, %115
  br i1 %116, label %117, label %121

117:                                              ; preds = %108
  %118 = add nsw i32 %115, -1
  tail call void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* %0, i32 %112, i32 %118, i32 %3)
  %119 = load %"struct.re2::URange16"*, %"struct.re2::URange16"** %51, align 8
  %120 = load i32, i32* %47, align 8
  br label %121

121:                                              ; preds = %117, %108
  %122 = phi i32 [ %120, %117 ], [ %109, %108 ]
  %123 = phi %"struct.re2::URange16"* [ %119, %117 ], [ %110, %108 ]
  %124 = getelementptr inbounds %"struct.re2::URange16", %"struct.re2::URange16"* %123, i64 %111, i32 1
  %125 = load i16, i16* %124, align 2
  %126 = zext i16 %125 to i32
  %127 = add nuw nsw i32 %126, 1
  %128 = add nuw nsw i64 %111, 1
  %129 = sext i32 %122 to i64
  %130 = icmp slt i64 %128, %129
  br i1 %130, label %108, label %100

131:                                              ; preds = %145
  %132 = icmp slt i32 %150, 1114112
  br i1 %132, label %154, label %156

133:                                              ; preds = %105, %145
  %134 = phi i32 [ %103, %105 ], [ %146, %145 ]
  %135 = phi %"struct.re2::URange32"* [ %107, %105 ], [ %147, %145 ]
  %136 = phi i64 [ 0, %105 ], [ %151, %145 ]
  %137 = phi i32 [ %101, %105 ], [ %150, %145 ]
  %138 = getelementptr inbounds %"struct.re2::URange32", %"struct.re2::URange32"* %135, i64 %136, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp slt i32 %137, %139
  br i1 %140, label %141, label %145

141:                                              ; preds = %133
  %142 = add nsw i32 %139, -1
  tail call void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* %0, i32 %137, i32 %142, i32 %3)
  %143 = load %"struct.re2::URange32"*, %"struct.re2::URange32"** %106, align 8
  %144 = load i32, i32* %102, align 8
  br label %145

145:                                              ; preds = %141, %133
  %146 = phi i32 [ %144, %141 ], [ %134, %133 ]
  %147 = phi %"struct.re2::URange32"* [ %143, %141 ], [ %135, %133 ]
  %148 = getelementptr inbounds %"struct.re2::URange32", %"struct.re2::URange32"* %147, i64 %136, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = add nsw i32 %149, 1
  %151 = add nuw nsw i64 %136, 1
  %152 = sext i32 %146 to i64
  %153 = icmp slt i64 %151, %152
  br i1 %153, label %133, label %131

154:                                              ; preds = %100, %131
  %155 = phi i32 [ %150, %131 ], [ %101, %100 ]
  tail call void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* %0, i32 %155, i32 1114111, i32 %3)
  br label %156

156:                                              ; preds = %32, %13, %131, %154, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState16ParseCCCharacterEPNS_11StringPieceEPiRKS2_PNS_12RegexpStatusE(%"class.re2::Regexp::ParseState"* nocapture readonly, %"class.re2::StringPiece"*, i32*, %"class.re2::StringPiece"* nocapture readonly dereferenceable(16), %"class.re2::RegexpStatus"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %4, i64 0, i32 0
  store i32 5, i32* %10, align 8
  %11 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %4, i64 0, i32 1
  %12 = bitcast %"class.re2::StringPiece"* %11 to i8*
  %13 = bitcast %"class.re2::StringPiece"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #18
  br label %50

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 92
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = tail call fastcc zeroext i1 @_ZN3re2L11ParseEscapeEPNS_11StringPieceEPiPNS_12RegexpStatusEi(%"class.re2::StringPiece"* %1, i32* %2, %"class.re2::RegexpStatus"* %4, i32 %21)
  br label %50

23:                                               ; preds = %14
  %24 = icmp ult i64 %7, 4
  %25 = select i1 %24, i64 %7, i64 4
  %26 = trunc i64 %25 to i32
  %27 = tail call i32 @_ZN3re28fullruneEPKci(i8* %16, i32 %26) #18
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %23
  %30 = load i8*, i8** %15, align 8
  %31 = tail call i32 @_ZN3re210chartoruneEPiPKc(i32* %2, i8* %30) #18
  %32 = load i32, i32* %2, align 4
  %33 = icmp sgt i32 %32, 1114111
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i32 65533, i32* %2, align 4
  br label %46

35:                                               ; preds = %29
  %36 = icmp eq i32 %31, 1
  %37 = icmp eq i32 %32, 65533
  %38 = and i1 %36, %37
  br i1 %38, label %46, label %39

39:                                               ; preds = %35
  %40 = sext i32 %31 to i64
  %41 = load i8*, i8** %15, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %40
  store i8* %42, i8** %15, align 8
  %43 = load i64, i64* %6, align 8
  %44 = sub i64 %43, %40
  store i64 %44, i64* %6, align 8
  %45 = icmp sgt i32 %31, -1
  br label %50

46:                                               ; preds = %35, %34, %23
  %47 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %4, i64 0, i32 0
  store i32 13, i32* %47, align 8
  %48 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %4, i64 0, i32 1
  %49 = bitcast %"class.re2::StringPiece"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #18
  br label %50

50:                                               ; preds = %46, %39, %19, %9
  %51 = phi i1 [ false, %9 ], [ %22, %19 ], [ false, %46 ], [ %45, %39 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3re2L11ParseEscapeEPNS_11StringPieceEPiPNS_12RegexpStatusEi(%"class.re2::StringPiece"*, i32* nocapture, %"class.re2::RegexpStatus"* nocapture, i32) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = load i8, i8* %8, align 1
  %14 = icmp eq i8 %13, 92
  br i1 %14, label %19, label %15

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 0
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 1
  %18 = bitcast %"class.re2::StringPiece"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  br label %276

19:                                               ; preds = %12
  %20 = icmp eq i64 %10, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 0
  store i32 8, i32* %22, align 8
  %23 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 1
  %24 = bitcast %"class.re2::StringPiece"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  br label %276

25:                                               ; preds = %19
  %26 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #18
  store i32 -1431655766, i32* %5, align 4
  %27 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #18
  store i32 -1431655766, i32* %6, align 4
  %28 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %28, i8** %7, align 8
  %29 = add i64 %10, -1
  store i64 %29, i64* %9, align 8
  %30 = icmp ult i64 %29, 4
  %31 = select i1 %30, i64 %29, i64 4
  %32 = trunc i64 %31 to i32
  %33 = tail call i32 @_ZN3re28fullruneEPKci(i8* %28, i32 %32) #18
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %25
  %36 = load i8*, i8** %7, align 8
  %37 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %5, i8* %36) #18
  %38 = load i32, i32* %5, align 4
  %39 = icmp sgt i32 %38, 1114111
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  store i32 65533, i32* %5, align 4
  br label %45

41:                                               ; preds = %35
  %42 = icmp eq i32 %37, 1
  %43 = icmp eq i32 %38, 65533
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %25, %40, %41
  %46 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 0
  store i32 13, i32* %46, align 8
  %47 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 1
  %48 = bitcast %"class.re2::StringPiece"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #18
  br label %274

49:                                               ; preds = %41
  %50 = sext i32 %37 to i64
  %51 = load i8*, i8** %7, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8* %52, i8** %7, align 8
  %53 = load i64, i64* %9, align 8
  %54 = sub i64 %53, %50
  store i64 %54, i64* %9, align 8
  %55 = icmp slt i32 %37, 0
  br i1 %55, label %274, label %56

56:                                               ; preds = %49
  switch i32 %38, label %57 [
    i32 49, label %71
    i32 50, label %71
    i32 51, label %71
    i32 52, label %71
    i32 53, label %71
    i32 54, label %71
    i32 55, label %71
    i32 48, label %79
    i32 120, label %109
    i32 110, label %260
    i32 114, label %261
    i32 116, label %262
    i32 97, label %263
    i32 102, label %264
    i32 118, label %265
  ]

57:                                               ; preds = %56
  %58 = icmp slt i32 %38, 128
  br i1 %58, label %59, label %266

59:                                               ; preds = %57
  %60 = tail call i16** @__ctype_b_loc() #22
  %61 = load i16*, i16** %60, align 8
  %62 = sext i32 %38 to i64
  %63 = getelementptr inbounds i16, i16* %61, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = and i16 %64, 1024
  %66 = icmp ne i16 %65, 0
  %67 = add i32 %38, -48
  %68 = icmp ult i32 %67, 10
  %69 = or i1 %68, %66
  br i1 %69, label %266, label %70

70:                                               ; preds = %59
  store i32 %38, i32* %1, align 4
  br label %274

71:                                               ; preds = %56, %56, %56, %56, %56, %56, %56
  %72 = icmp eq i64 %54, 0
  br i1 %72, label %266, label %73

73:                                               ; preds = %71
  %74 = load i8, i8* %52, align 1
  %75 = and i8 %74, -8
  %76 = icmp eq i8 %75, 48
  br i1 %76, label %77, label %266

77:                                               ; preds = %73
  %78 = add nsw i32 %38, -48
  br label %81

79:                                               ; preds = %56
  %80 = icmp eq i64 %54, 0
  br i1 %80, label %105, label %81

81:                                               ; preds = %77, %79
  %82 = phi i32 [ %78, %77 ], [ 0, %79 ]
  %83 = load i8, i8* %52, align 1
  %84 = sext i8 %83 to i32
  store i32 %84, i32* %5, align 4
  %85 = and i8 %83, -8
  %86 = icmp eq i8 %85, 48
  br i1 %86, label %87, label %105

87:                                               ; preds = %81
  %88 = shl i32 %82, 3
  %89 = add nsw i32 %88, -48
  %90 = add nsw i32 %89, %84
  %91 = getelementptr inbounds i8, i8* %52, i64 1
  store i8* %91, i8** %7, align 8
  %92 = add i64 %54, -1
  store i64 %92, i64* %9, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = load i8, i8* %91, align 1
  %96 = sext i8 %95 to i32
  store i32 %96, i32* %5, align 4
  %97 = and i8 %95, -8
  %98 = icmp eq i8 %97, 48
  br i1 %98, label %99, label %105

99:                                               ; preds = %94
  %100 = shl i32 %90, 3
  %101 = add i32 %100, -48
  %102 = add i32 %101, %96
  %103 = getelementptr inbounds i8, i8* %52, i64 2
  store i8* %103, i8** %7, align 8
  %104 = add i64 %54, -2
  store i64 %104, i64* %9, align 8
  br label %105

105:                                              ; preds = %87, %99, %94, %81, %79
  %106 = phi i32 [ 0, %79 ], [ %90, %87 ], [ %102, %99 ], [ %90, %94 ], [ %82, %81 ]
  %107 = icmp sgt i32 %106, %3
  br i1 %107, label %266, label %108

108:                                              ; preds = %105
  store i32 %106, i32* %1, align 4
  br label %274

109:                                              ; preds = %56
  %110 = icmp eq i64 %54, 0
  br i1 %110, label %266, label %111

111:                                              ; preds = %109
  %112 = icmp ult i64 %54, 4
  %113 = select i1 %112, i64 %54, i64 4
  %114 = trunc i64 %113 to i32
  %115 = call i32 @_ZN3re28fullruneEPKci(i8* %52, i32 %114) #18
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %127, label %117

117:                                              ; preds = %111
  %118 = load i8*, i8** %7, align 8
  %119 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %5, i8* %118) #18
  %120 = load i32, i32* %5, align 4
  %121 = icmp sgt i32 %120, 1114111
  br i1 %121, label %122, label %123

122:                                              ; preds = %117
  store i32 65533, i32* %5, align 4
  br label %127

123:                                              ; preds = %117
  %124 = icmp eq i32 %119, 1
  %125 = icmp eq i32 %120, 65533
  %126 = and i1 %124, %125
  br i1 %126, label %127, label %131

127:                                              ; preds = %111, %122, %123
  %128 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 0
  store i32 13, i32* %128, align 8
  %129 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 1
  %130 = bitcast %"class.re2::StringPiece"* %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #18
  br label %274

131:                                              ; preds = %123
  %132 = sext i32 %119 to i64
  %133 = load i8*, i8** %7, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 %132
  store i8* %134, i8** %7, align 8
  %135 = load i64, i64* %9, align 8
  %136 = sub i64 %135, %132
  store i64 %136, i64* %9, align 8
  %137 = icmp slt i32 %119, 0
  br i1 %137, label %274, label %138

138:                                              ; preds = %131
  %139 = icmp eq i32 %120, 123
  br i1 %139, label %140, label %216

140:                                              ; preds = %138
  %141 = icmp ult i64 %136, 4
  %142 = select i1 %141, i64 %136, i64 4
  %143 = trunc i64 %142 to i32
  %144 = call i32 @_ZN3re28fullruneEPKci(i8* %134, i32 %143) #18
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %156, label %146

146:                                              ; preds = %140
  %147 = load i8*, i8** %7, align 8
  %148 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %5, i8* %147) #18
  %149 = load i32, i32* %5, align 4
  %150 = icmp sgt i32 %149, 1114111
  br i1 %150, label %151, label %152

151:                                              ; preds = %146
  store i32 65533, i32* %5, align 4
  br label %156

152:                                              ; preds = %146
  %153 = icmp eq i32 %148, 1
  %154 = icmp eq i32 %149, 65533
  %155 = and i1 %153, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %140, %151, %152
  %157 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 0
  store i32 13, i32* %157, align 8
  %158 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 1
  %159 = bitcast %"class.re2::StringPiece"* %158 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 16, i1 false) #18
  br label %274

160:                                              ; preds = %152
  %161 = sext i32 %148 to i64
  %162 = load i8*, i8** %7, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 %161
  store i8* %163, i8** %7, align 8
  %164 = load i64, i64* %9, align 8
  %165 = sub i64 %164, %161
  store i64 %165, i64* %9, align 8
  %166 = icmp slt i32 %148, 0
  br i1 %166, label %274, label %167

167:                                              ; preds = %160, %204
  %168 = phi i32 [ %193, %204 ], [ %149, %160 ]
  %169 = phi i32 [ %178, %204 ], [ 0, %160 ]
  %170 = phi i32 [ %175, %204 ], [ 0, %160 ]
  %171 = add i32 %168, -48
  %172 = icmp ugt i32 %171, 9
  br i1 %172, label %173, label %174

173:                                              ; preds = %167
  switch i32 %168, label %211 [
    i32 102, label %174
    i32 101, label %174
    i32 100, label %174
    i32 99, label %174
    i32 98, label %174
    i32 97, label %174
    i32 70, label %174
    i32 69, label %174
    i32 68, label %174
    i32 67, label %174
    i32 66, label %174
    i32 65, label %174
  ]

174:                                              ; preds = %173, %173, %173, %173, %173, %173, %173, %173, %173, %173, %173, %173, %167
  %175 = add nuw nsw i32 %170, 1
  %176 = shl nsw i32 %169, 4
  %177 = call fastcc i32 @_ZN3re2L5UnHexEi(i32 %168)
  %178 = add nsw i32 %177, %176
  %179 = icmp sgt i32 %178, %3
  br i1 %179, label %266, label %180

180:                                              ; preds = %174
  %181 = load i64, i64* %9, align 8
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %266, label %183

183:                                              ; preds = %180
  %184 = load i8*, i8** %7, align 8
  %185 = icmp ult i64 %181, 4
  %186 = select i1 %185, i64 %181, i64 4
  %187 = trunc i64 %186 to i32
  %188 = call i32 @_ZN3re28fullruneEPKci(i8* %184, i32 %187) #18
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %200, label %190

190:                                              ; preds = %183
  %191 = load i8*, i8** %7, align 8
  %192 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %5, i8* %191) #18
  %193 = load i32, i32* %5, align 4
  %194 = icmp sgt i32 %193, 1114111
  br i1 %194, label %195, label %196

195:                                              ; preds = %190
  store i32 65533, i32* %5, align 4
  br label %200

196:                                              ; preds = %190
  %197 = icmp eq i32 %192, 1
  %198 = icmp eq i32 %193, 65533
  %199 = and i1 %197, %198
  br i1 %199, label %200, label %204

200:                                              ; preds = %183, %196, %195
  %201 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 0
  store i32 13, i32* %201, align 8
  %202 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 1
  %203 = bitcast %"class.re2::StringPiece"* %202 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %203, i8 0, i64 16, i1 false) #18
  br label %274

204:                                              ; preds = %196
  %205 = sext i32 %192 to i64
  %206 = load i8*, i8** %7, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 %205
  store i8* %207, i8** %7, align 8
  %208 = load i64, i64* %9, align 8
  %209 = sub i64 %208, %205
  store i64 %209, i64* %9, align 8
  %210 = icmp slt i32 %192, 0
  br i1 %210, label %274, label %167

211:                                              ; preds = %173
  %212 = icmp ne i32 %168, 125
  %213 = icmp eq i32 %170, 0
  %214 = or i1 %213, %212
  br i1 %214, label %266, label %215

215:                                              ; preds = %211
  store i32 %169, i32* %1, align 4
  br label %274

216:                                              ; preds = %138
  %217 = icmp eq i64 %136, 0
  br i1 %217, label %266, label %218

218:                                              ; preds = %216
  %219 = icmp ult i64 %136, 4
  %220 = select i1 %219, i64 %136, i64 4
  %221 = trunc i64 %220 to i32
  %222 = call i32 @_ZN3re28fullruneEPKci(i8* %134, i32 %221) #18
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %234, label %224

224:                                              ; preds = %218
  %225 = load i8*, i8** %7, align 8
  %226 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %6, i8* %225) #18
  %227 = load i32, i32* %6, align 4
  %228 = icmp sgt i32 %227, 1114111
  br i1 %228, label %229, label %230

229:                                              ; preds = %224
  store i32 65533, i32* %6, align 4
  br label %234

230:                                              ; preds = %224
  %231 = icmp eq i32 %226, 1
  %232 = icmp eq i32 %227, 65533
  %233 = and i1 %231, %232
  br i1 %233, label %234, label %238

234:                                              ; preds = %218, %229, %230
  %235 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 0
  store i32 13, i32* %235, align 8
  %236 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 1
  %237 = bitcast %"class.re2::StringPiece"* %236 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 16, i1 false) #18
  br label %274

238:                                              ; preds = %230
  %239 = sext i32 %226 to i64
  %240 = load i8*, i8** %7, align 8
  %241 = getelementptr inbounds i8, i8* %240, i64 %239
  store i8* %241, i8** %7, align 8
  %242 = load i64, i64* %9, align 8
  %243 = sub i64 %242, %239
  store i64 %243, i64* %9, align 8
  %244 = icmp slt i32 %226, 0
  br i1 %244, label %274, label %245

245:                                              ; preds = %238
  %246 = load i32, i32* %5, align 4
  %247 = add i32 %246, -48
  %248 = icmp ugt i32 %247, 9
  br i1 %248, label %249, label %250

249:                                              ; preds = %245
  switch i32 %246, label %266 [
    i32 102, label %250
    i32 101, label %250
    i32 100, label %250
    i32 99, label %250
    i32 98, label %250
    i32 97, label %250
    i32 70, label %250
    i32 69, label %250
    i32 68, label %250
    i32 67, label %250
    i32 66, label %250
    i32 65, label %250
  ]

250:                                              ; preds = %249, %249, %249, %249, %249, %249, %249, %249, %249, %249, %249, %249, %245
  %251 = add i32 %227, -48
  %252 = icmp ugt i32 %251, 9
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  switch i32 %227, label %266 [
    i32 102, label %254
    i32 101, label %254
    i32 100, label %254
    i32 99, label %254
    i32 98, label %254
    i32 97, label %254
    i32 70, label %254
    i32 69, label %254
    i32 68, label %254
    i32 67, label %254
    i32 66, label %254
    i32 65, label %254
  ]

254:                                              ; preds = %253, %253, %253, %253, %253, %253, %253, %253, %253, %253, %253, %253, %250
  %255 = call fastcc i32 @_ZN3re2L5UnHexEi(i32 %246)
  %256 = shl i32 %255, 4
  %257 = load i32, i32* %6, align 4
  %258 = call fastcc i32 @_ZN3re2L5UnHexEi(i32 %257)
  %259 = add nsw i32 %258, %256
  store i32 %259, i32* %1, align 4
  br label %274

260:                                              ; preds = %56
  store i32 10, i32* %1, align 4
  br label %274

261:                                              ; preds = %56
  store i32 13, i32* %1, align 4
  br label %274

262:                                              ; preds = %56
  store i32 9, i32* %1, align 4
  br label %274

263:                                              ; preds = %56
  store i32 7, i32* %1, align 4
  br label %274

264:                                              ; preds = %56
  store i32 12, i32* %1, align 4
  br label %274

265:                                              ; preds = %56
  store i32 11, i32* %1, align 4
  br label %274

266:                                              ; preds = %180, %174, %253, %249, %73, %211, %59, %216, %109, %105, %71, %57
  %267 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 0
  store i32 2, i32* %267, align 8
  %268 = bitcast %"class.re2::StringPiece"* %0 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = ptrtoint i8* %8 to i64
  %271 = sub i64 %269, %270
  %272 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 1, i32 0
  store i8* %8, i8** %272, align 8
  %273 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %2, i64 0, i32 1, i32 1
  store i64 %271, i64* %273, align 8
  br label %274

274:                                              ; preds = %204, %234, %215, %200, %156, %127, %45, %70, %108, %254, %260, %261, %262, %263, %264, %265, %266, %131, %160, %238, %49
  %275 = phi i1 [ false, %49 ], [ false, %266 ], [ true, %70 ], [ true, %265 ], [ true, %264 ], [ true, %263 ], [ true, %262 ], [ true, %261 ], [ true, %260 ], [ true, %254 ], [ true, %108 ], [ false, %131 ], [ false, %160 ], [ false, %238 ], [ false, %45 ], [ false, %127 ], [ false, %156 ], [ true, %215 ], [ false, %200 ], [ false, %234 ], [ false, %204 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #18
  br label %276

276:                                              ; preds = %274, %21, %15
  %277 = phi i1 [ false, %15 ], [ false, %21 ], [ %275, %274 ]
  ret i1 %277
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState12ParseCCRangeEPNS_11StringPieceEPNS_9RuneRangeERKS2_PNS_12RegexpStatusE(%"class.re2::Regexp::ParseState"* nocapture readonly, %"class.re2::StringPiece"*, %"struct.re2::RuneRange"*, %"class.re2::StringPiece"* nocapture readonly dereferenceable(16), %"class.re2::RegexpStatus"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %2, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN3re26Regexp10ParseState16ParseCCCharacterEPNS_11StringPieceEPiRKS2_PNS_12RegexpStatusE(%"class.re2::Regexp::ParseState"* %0, %"class.re2::StringPiece"* %1, i32* %9, %"class.re2::StringPiece"* dereferenceable(16) %3, %"class.re2::RegexpStatus"* %4)
  br i1 %10, label %11, label %41

11:                                               ; preds = %5
  %12 = load i64, i64* %8, align 8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %14, label %38

14:                                               ; preds = %11
  %15 = load i8*, i8** %6, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 45
  br i1 %17, label %18, label %38

18:                                               ; preds = %14
  %19 = getelementptr inbounds i8, i8* %15, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 93
  br i1 %21, label %38, label %22

22:                                               ; preds = %18
  store i8* %19, i8** %6, align 8
  %23 = add i64 %12, -1
  store i64 %23, i64* %8, align 8
  %24 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %2, i64 0, i32 1
  %25 = tail call zeroext i1 @_ZN3re26Regexp10ParseState16ParseCCCharacterEPNS_11StringPieceEPiRKS2_PNS_12RegexpStatusE(%"class.re2::Regexp::ParseState"* %0, %"class.re2::StringPiece"* %1, i32* %24, %"class.re2::StringPiece"* dereferenceable(16) %3, %"class.re2::RegexpStatus"* %4)
  br i1 %25, label %26, label %41

26:                                               ; preds = %22
  %27 = load i32, i32* %24, align 4
  %28 = load i32, i32* %9, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %41

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %4, i64 0, i32 0
  store i32 4, i32* %31, align 8
  %32 = bitcast %"class.re2::StringPiece"* %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = ptrtoint i8* %7 to i64
  %35 = sub i64 %33, %34
  %36 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %4, i64 0, i32 1, i32 0
  store i8* %7, i8** %36, align 8
  %37 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %4, i64 0, i32 1, i32 1
  store i64 %35, i64* %37, align 8
  br label %41

38:                                               ; preds = %18, %14, %11
  %39 = load i32, i32* %9, align 4
  %40 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %2, i64 0, i32 1
  store i32 %39, i32* %40, align 4
  br label %41

41:                                               ; preds = %38, %26, %22, %5, %30
  %42 = phi i1 [ false, %30 ], [ false, %5 ], [ false, %22 ], [ true, %26 ], [ true, %38 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState14ParseCharClassEPNS_11StringPieceEPPS0_PNS_12RegexpStatusE(%"class.re2::Regexp::ParseState"* nocapture readonly, %"class.re2::StringPiece"*, %"class.re2::Regexp"** nocapture, %"class.re2::RegexpStatus"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.re2::StringPiece", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"struct.re2::RuneRange", align 4
  %8 = bitcast %"class.re2::StringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #18
  %9 = bitcast %"class.re2::StringPiece"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 91
  br i1 %17, label %22, label %18

18:                                               ; preds = %13, %4
  %19 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 0
  store i32 1, i32* %19, align 8
  %20 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1
  %21 = bitcast %"class.re2::StringPiece"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  br label %276

22:                                               ; preds = %13
  %23 = tail call i8* @_Znwm(i64 40) #17
  %24 = bitcast i8* %23 to %"class.re2::Regexp"*
  %25 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 16382
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %24, i32 20, i32 %27) #18
  %28 = tail call i8* @_Znwm(i64 40) #17
  %29 = bitcast i8* %28 to %"class.re2::CharClassBuilder"*
  tail call void @_ZN3re216CharClassBuilderC1Ev(%"class.re2::CharClassBuilder"* nonnull %29) #18
  %30 = getelementptr inbounds i8, i8* %23, i64 32
  %31 = bitcast i8* %30 to %"class.re2::CharClassBuilder"**
  %32 = bitcast i8* %30 to i8**
  store i8* %28, i8** %32, align 8
  %33 = load i8*, i8** %14, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %34, i8** %14, align 8
  %35 = load i64, i64* %10, align 8
  %36 = add i64 %35, -1
  store i64 %36, i64* %10, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %264, label %38

38:                                               ; preds = %22
  %39 = load i8, i8* %34, align 1
  %40 = icmp eq i8 %39, 94
  br i1 %40, label %41, label %53

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %42, i8** %14, align 8
  %43 = add i64 %35, -2
  store i64 %43, i64* %10, align 8
  %44 = load i32, i32* %25, align 8
  %45 = and i32 %44, 2052
  %46 = icmp eq i32 %45, 4
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = tail call zeroext i1 @_ZN3re216CharClassBuilder8AddRangeEii(%"class.re2::CharClassBuilder"* nonnull %29, i32 10, i32 10) #18
  %49 = load i64, i64* %10, align 8
  br label %50

50:                                               ; preds = %41, %47
  %51 = phi i64 [ %49, %47 ], [ %43, %41 ]
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %264, label %53

53:                                               ; preds = %38, %50
  %54 = phi i1 [ true, %50 ], [ false, %38 ]
  %55 = phi i64 [ %51, %50 ], [ %36, %38 ]
  %56 = load i32, i32* @_ZN3re216num_posix_groupsE, align 4
  %57 = icmp sgt i32 %56, 0
  %58 = zext i32 %56 to i64
  %59 = load i32, i32* @_ZN3re215num_perl_groupsE, align 4
  %60 = icmp slt i32 %59, 1
  %61 = zext i32 %59 to i64
  %62 = bitcast %"struct.re2::RuneRange"* %7 to i8*
  %63 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %7, i64 0, i32 0
  %64 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %7, i64 0, i32 1
  %65 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 0
  %66 = bitcast %"class.re2::StringPiece"* %1 to i64*
  %67 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1, i32 1
  br label %69

69:                                               ; preds = %53, %261
  %70 = phi i64 [ %55, %53 ], [ %262, %261 ]
  %71 = phi i1 [ true, %53 ], [ false, %261 ]
  %72 = load i8*, i8** %14, align 8
  %73 = load i8, i8* %72, align 1
  %74 = icmp ne i8 %73, 93
  %75 = or i1 %71, %74
  br i1 %75, label %76, label %268

76:                                               ; preds = %69
  %77 = icmp ne i8 %73, 45
  %78 = or i1 %71, %77
  br i1 %78, label %118, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* %25, align 8
  %81 = and i32 %80, 512
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %190

83:                                               ; preds = %79
  %84 = icmp eq i64 %70, 1
  br i1 %84, label %89, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %72, i64 1
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 93
  br i1 %88, label %190, label %89

89:                                               ; preds = %85, %83
  %90 = getelementptr inbounds i8, i8* %72, i64 1
  %91 = add i64 %70, -1
  %92 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #18
  store i32 -1431655766, i32* %6, align 4
  %93 = icmp ult i64 %91, 4
  %94 = select i1 %93, i64 %91, i64 4
  %95 = trunc i64 %94 to i32
  %96 = call i32 @_ZN3re28fullruneEPKci(i8* %90, i32 %95) #18
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %107, label %98

98:                                               ; preds = %89
  %99 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %6, i8* %90) #18
  %100 = load i32, i32* %6, align 4
  %101 = icmp sgt i32 %100, 1114111
  br i1 %101, label %102, label %103

102:                                              ; preds = %98
  store i32 65533, i32* %6, align 4
  br label %107

103:                                              ; preds = %98
  %104 = icmp eq i32 %99, 1
  %105 = icmp eq i32 %100, 65533
  %106 = and i1 %104, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %89, %102, %103
  store i32 13, i32* %65, align 8
  %108 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1
  %109 = bitcast %"class.re2::StringPiece"* %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #18
  br label %117

110:                                              ; preds = %103
  %111 = icmp slt i32 %99, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %110
  store i32 4, i32* %65, align 8
  %113 = load i64, i64* %66, align 8
  %114 = add nuw nsw i32 %99, 1
  %115 = sext i32 %114 to i64
  %116 = bitcast i8** %67 to i64*
  store i64 %113, i64* %116, align 8
  store i64 %115, i64* %68, align 8
  br label %117

117:                                              ; preds = %110, %107, %112
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #18
  br label %276

118:                                              ; preds = %76
  %119 = icmp ugt i64 %70, 2
  %120 = icmp eq i8 %73, 91
  %121 = and i1 %119, %120
  br i1 %121, label %122, label %179

122:                                              ; preds = %118
  %123 = getelementptr inbounds i8, i8* %72, i64 1
  %124 = load i8, i8* %123, align 1
  %125 = icmp eq i8 %124, 58
  br i1 %125, label %126, label %179

126:                                              ; preds = %122
  %127 = load i32, i32* %25, align 8
  %128 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %31, align 8
  %129 = ptrtoint i8* %72 to i64
  %130 = icmp slt i64 %70, 2
  br i1 %130, label %179, label %131

131:                                              ; preds = %126
  %132 = add nsw i64 %70, -2
  %133 = getelementptr inbounds i8, i8* %72, i64 %132
  %134 = icmp slt i64 %132, 2
  br i1 %134, label %179, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds i8, i8* %72, i64 2
  br label %137

137:                                              ; preds = %145, %135
  %138 = phi i8* [ %146, %145 ], [ %136, %135 ]
  %139 = load i8, i8* %138, align 1
  %140 = icmp eq i8 %139, 58
  br i1 %140, label %141, label %145

141:                                              ; preds = %137
  %142 = getelementptr inbounds i8, i8* %138, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 93
  br i1 %144, label %148, label %145

145:                                              ; preds = %141, %137
  %146 = getelementptr inbounds i8, i8* %138, i64 1
  %147 = icmp ugt i8* %146, %133
  br i1 %147, label %179, label %137

148:                                              ; preds = %141
  %149 = getelementptr inbounds i8, i8* %138, i64 2
  %150 = ptrtoint i8* %149 to i64
  %151 = sub i64 %150, %129
  br i1 %57, label %152, label %178

152:                                              ; preds = %148
  %153 = icmp eq i64 %151, 0
  br label %154

154:                                              ; preds = %171, %152
  %155 = phi i64 [ 0, %152 ], [ %172, %171 ]
  %156 = getelementptr inbounds [0 x %"struct.re2::UGroup"], [0 x %"struct.re2::UGroup"]* @_ZN3re212posix_groupsE, i64 0, i64 %155
  %157 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %156, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %154
  %161 = call i64 @strlen(i8* nonnull %158) #21
  br label %162

162:                                              ; preds = %160, %154
  %163 = phi i64 [ %161, %160 ], [ 0, %154 ]
  %164 = icmp eq i64 %163, %151
  br i1 %164, label %165, label %171

165:                                              ; preds = %162
  %166 = icmp eq i8* %158, %72
  %167 = or i1 %153, %166
  br i1 %167, label %174, label %168

168:                                              ; preds = %165
  %169 = call i32 @bcmp(i8* %158, i8* %72, i64 %151) #18
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %174, label %171

171:                                              ; preds = %168, %162
  %172 = add nuw nsw i64 %155, 1
  %173 = icmp eq i64 %172, %58
  br i1 %173, label %178, label %154

174:                                              ; preds = %165, %168
  store i8* %149, i8** %14, align 8
  %175 = sub i64 %70, %151
  store i64 %175, i64* %10, align 8
  %176 = getelementptr inbounds [0 x %"struct.re2::UGroup"], [0 x %"struct.re2::UGroup"]* @_ZN3re212posix_groupsE, i64 0, i64 %155, i32 1
  %177 = load i32, i32* %176, align 8
  call fastcc void @_ZN3re2L9AddUGroupEPNS_16CharClassBuilderEPKNS_6UGroupEiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* %128, %"struct.re2::UGroup"* nonnull %156, i32 %177, i32 %127) #18
  br label %261

178:                                              ; preds = %148, %171
  store i32 4, i32* %65, align 8
  store i8* %72, i8** %67, align 8
  store i64 %151, i64* %68, align 8
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %24) #18
  br label %276

179:                                              ; preds = %145, %131, %126, %122, %118
  %180 = icmp eq i8 %73, 92
  %181 = and i1 %119, %180
  br i1 %181, label %182, label %190

182:                                              ; preds = %179
  %183 = getelementptr inbounds i8, i8* %72, i64 1
  %184 = load i8, i8* %183, align 1
  switch i8 %184, label %190 [
    i8 112, label %185
    i8 80, label %185
  ]

185:                                              ; preds = %182, %182
  %186 = load i32, i32* %25, align 8
  %187 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %31, align 8
  %188 = call i32 @_ZN3re217ParseUnicodeGroupEPNS_11StringPieceENS_6Regexp10ParseFlagsEPNS_16CharClassBuilderEPNS_12RegexpStatusE(%"class.re2::StringPiece"* %1, i32 %186, %"class.re2::CharClassBuilder"* %187, %"class.re2::RegexpStatus"* %3)
  switch i32 %188, label %190 [
    i32 0, label %261
    i32 1, label %189
  ]

189:                                              ; preds = %185
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %24) #18
  br label %276

190:                                              ; preds = %79, %85, %182, %185, %179
  %191 = load i32, i32* %25, align 8
  %192 = trunc i32 %191 to i8
  %193 = icmp sgt i8 %192, -1
  br i1 %193, label %228, label %194

194:                                              ; preds = %190
  %195 = load i64, i64* %10, align 8
  %196 = icmp ult i64 %195, 2
  br i1 %196, label %228, label %197

197:                                              ; preds = %194
  %198 = load i8*, i8** %14, align 8
  %199 = load i8, i8* %198, align 1
  %200 = icmp ne i8 %199, 92
  %201 = or i1 %200, %60
  br i1 %201, label %228, label %202

202:                                              ; preds = %197, %216
  %203 = phi i64 [ %217, %216 ], [ 0, %197 ]
  %204 = getelementptr inbounds [0 x %"struct.re2::UGroup"], [0 x %"struct.re2::UGroup"]* @_ZN3re211perl_groupsE, i64 0, i64 %203
  %205 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %204, i64 0, i32 0
  %206 = load i8*, i8** %205, align 8
  %207 = icmp eq i8* %206, null
  br i1 %207, label %216, label %208

208:                                              ; preds = %202
  %209 = call i64 @strlen(i8* nonnull %206) #21
  %210 = icmp eq i64 %209, 2
  br i1 %210, label %211, label %216

211:                                              ; preds = %208
  %212 = icmp eq i8* %206, %198
  br i1 %212, label %219, label %213

213:                                              ; preds = %211
  %214 = call i32 @bcmp(i8* nonnull %206, i8* %198, i64 2) #18
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %213, %208, %202
  %217 = add nuw nsw i64 %203, 1
  %218 = icmp eq i64 %217, %61
  br i1 %218, label %228, label %202

219:                                              ; preds = %211, %213
  %220 = getelementptr inbounds i8, i8* %198, i64 2
  store i8* %220, i8** %14, align 8
  %221 = add i64 %195, -2
  store i64 %221, i64* %10, align 8
  %222 = icmp eq %"struct.re2::UGroup"* %204, null
  br i1 %222, label %228, label %223

223:                                              ; preds = %219
  %224 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %31, align 8
  %225 = getelementptr inbounds [0 x %"struct.re2::UGroup"], [0 x %"struct.re2::UGroup"]* @_ZN3re211perl_groupsE, i64 0, i64 %203, i32 1
  %226 = load i32, i32* %225, align 8
  %227 = load i32, i32* %25, align 8
  call fastcc void @_ZN3re2L9AddUGroupEPNS_16CharClassBuilderEPKNS_6UGroupEiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* %224, %"struct.re2::UGroup"* nonnull %204, i32 %226, i32 %227)
  br label %261

228:                                              ; preds = %216, %197, %194, %190, %219
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #18
  store i32 0, i32* %63, align 4
  store i32 0, i32* %64, align 4
  %229 = load i8*, i8** %14, align 8
  %230 = call zeroext i1 @_ZN3re26Regexp10ParseState16ParseCCCharacterEPNS_11StringPieceEPiRKS2_PNS_12RegexpStatusE(%"class.re2::Regexp::ParseState"* %0, %"class.re2::StringPiece"* %1, i32* nonnull %63, %"class.re2::StringPiece"* nonnull dereferenceable(16) %5, %"class.re2::RegexpStatus"* %3) #18
  br i1 %230, label %231, label %275

231:                                              ; preds = %228
  %232 = load i64, i64* %10, align 8
  %233 = icmp ugt i64 %232, 1
  br i1 %233, label %234, label %253

234:                                              ; preds = %231
  %235 = load i8*, i8** %14, align 8
  %236 = load i8, i8* %235, align 1
  %237 = icmp eq i8 %236, 45
  br i1 %237, label %238, label %253

238:                                              ; preds = %234
  %239 = getelementptr inbounds i8, i8* %235, i64 1
  %240 = load i8, i8* %239, align 1
  %241 = icmp eq i8 %240, 93
  br i1 %241, label %253, label %242

242:                                              ; preds = %238
  store i8* %239, i8** %14, align 8
  %243 = add i64 %232, -1
  store i64 %243, i64* %10, align 8
  %244 = call zeroext i1 @_ZN3re26Regexp10ParseState16ParseCCCharacterEPNS_11StringPieceEPiRKS2_PNS_12RegexpStatusE(%"class.re2::Regexp::ParseState"* %0, %"class.re2::StringPiece"* %1, i32* %64, %"class.re2::StringPiece"* nonnull dereferenceable(16) %5, %"class.re2::RegexpStatus"* %3) #18
  br i1 %244, label %245, label %275

245:                                              ; preds = %242
  %246 = load i32, i32* %64, align 4
  %247 = load i32, i32* %63, align 4
  %248 = icmp slt i32 %246, %247
  br i1 %248, label %249, label %255

249:                                              ; preds = %245
  store i32 4, i32* %65, align 8
  %250 = load i64, i64* %66, align 8
  %251 = ptrtoint i8* %229 to i64
  %252 = sub i64 %250, %251
  store i8* %229, i8** %67, align 8
  store i64 %252, i64* %68, align 8
  br label %275

253:                                              ; preds = %238, %234, %231
  %254 = load i32, i32* %63, align 4
  store i32 %254, i32* %64, align 4
  br label %255

255:                                              ; preds = %245, %253
  %256 = phi i32 [ %254, %253 ], [ %246, %245 ]
  %257 = phi i32 [ %254, %253 ], [ %247, %245 ]
  %258 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %31, align 8
  %259 = load i32, i32* %25, align 8
  %260 = or i32 %259, 4
  call void @_ZN3re216CharClassBuilder13AddRangeFlagsEiiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* %258, i32 %257, i32 %256, i32 %260)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #18
  br label %261

261:                                              ; preds = %255, %223, %185, %174
  %262 = load i64, i64* %10, align 8
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %69

264:                                              ; preds = %261, %22, %50
  %265 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 0
  store i32 5, i32* %265, align 8
  %266 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1
  %267 = bitcast %"class.re2::StringPiece"* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* nonnull align 8 %8, i64 16, i1 false) #18
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %24) #18
  br label %276

268:                                              ; preds = %69
  %269 = getelementptr inbounds i8, i8* %72, i64 1
  store i8* %269, i8** %14, align 8
  %270 = add i64 %70, -1
  store i64 %270, i64* %10, align 8
  br i1 %54, label %271, label %273

271:                                              ; preds = %268
  %272 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %31, align 8
  call void @_ZN3re216CharClassBuilder6NegateEv(%"class.re2::CharClassBuilder"* %272) #18
  br label %273

273:                                              ; preds = %271, %268
  %274 = bitcast %"class.re2::Regexp"** %2 to i8**
  store i8* %23, i8** %274, align 8
  br label %276

275:                                              ; preds = %242, %228, %249
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #18
  br label %276

276:                                              ; preds = %275, %117, %178, %189, %264, %273, %18
  %277 = phi i1 [ false, %18 ], [ false, %189 ], [ false, %178 ], [ false, %117 ], [ false, %264 ], [ true, %273 ], [ false, %275 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #18
  ret i1 %277
}

declare void @_ZN3re216CharClassBuilder6NegateEv(%"class.re2::CharClassBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp10ParseState14ParsePerlFlagsEPNS_11StringPieceE(%"class.re2::Regexp::ParseState"* nocapture, %"class.re2::StringPiece"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.re2::StringPiece", align 8
  %6 = alloca %class.LogMessage, align 8
  %7 = alloca %"class.re2::StringPiece", align 8
  %8 = alloca i32, align 4
  %9 = bitcast %"class.re2::StringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 0, i32 1
  %12 = bitcast %"class.re2::StringPiece"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %12, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 512
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  %18 = load i64, i64* %11, align 8
  %19 = icmp ult i64 %18, 2
  br i1 %19, label %28, label %20

20:                                               ; preds = %17
  %21 = load i8*, i8** %10, align 8
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 40
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 63
  br i1 %27, label %70, label %28

28:                                               ; preds = %24, %20, %2, %17
  %29 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %29) #18
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1
  %31 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %30, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %31, align 8
  %33 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %33, i64 0, i32 0
  %35 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %36 = bitcast %"class.std::__1::basic_ostringstream"* %30 to i64*
  store i64 %35, i64* %36, align 8
  %37 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %30 to i8**
  %39 = inttoptr i64 %35 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostringstream"* %30 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %37, i64* %45, align 8
  %46 = load i8*, i8** %38, align 8
  %47 = getelementptr i8, i8* %46, i64 -24
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to %"class.std::__1::ios_base"*
  %52 = bitcast %"class.std::__1::basic_stringbuf"* %33 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %51, i8* %52) #18
  %53 = getelementptr inbounds i8, i8* %50, i64 136
  %54 = bitcast i8* %53 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %54, align 8
  %55 = getelementptr inbounds i8, i8* %50, i64 144
  %56 = bitcast i8* %55 to i32*
  store i32 -1, i32* %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %31, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %34) #18
  %57 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %33, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1, i32 1, i32 1
  %59 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %6, i64 0, i32 1, i32 1, i32 3
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %59, align 8
  %61 = bitcast %"class.std::__1::basic_ostringstream"* %30 to %"class.std::__1::basic_ostream"*
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %61, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 38) #18
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %62, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %63, i32 2043) #18
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %61, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i64 38) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %29) #18
  %67 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %68 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %67, align 8
  %69 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %68, i64 0, i32 0
  store i32 1, i32* %69, align 8
  br label %309

70:                                               ; preds = %24
  %71 = getelementptr inbounds i8, i8* %21, i64 2
  store i8* %71, i8** %10, align 8
  %72 = add i64 %18, -2
  store i64 %72, i64* %11, align 8
  %73 = icmp ugt i64 %72, 2
  br i1 %73, label %74, label %206

74:                                               ; preds = %70
  %75 = load i8, i8* %71, align 1
  %76 = icmp eq i8 %75, 80
  br i1 %76, label %77, label %206

77:                                               ; preds = %74
  %78 = getelementptr inbounds i8, i8* %21, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 60
  br i1 %80, label %81, label %206

81:                                               ; preds = %77
  %82 = call i64 @_ZNK3re211StringPiece4findEcm(%"class.re2::StringPiece"* nonnull %5, i8 signext 62, i64 2) #18
  %83 = icmp eq i64 %82, -1
  br i1 %83, label %84, label %127

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %86 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %85, align 8
  %87 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #18
  store i32 -1431655766, i32* %4, align 4
  br label %92

92:                                               ; preds = %115, %84
  %93 = phi i64 [ %90, %84 ], [ %118, %115 ]
  %94 = phi i8* [ %88, %84 ], [ %117, %115 ]
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %121, label %96

96:                                               ; preds = %92
  %97 = icmp ult i64 %93, 4
  %98 = select i1 %97, i64 %93, i64 4
  %99 = trunc i64 %98 to i32
  %100 = call i32 @_ZN3re28fullruneEPKci(i8* %94, i32 %99) #18
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %111, label %102

102:                                              ; preds = %96
  %103 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %4, i8* %94) #18
  %104 = load i32, i32* %4, align 4
  %105 = icmp sgt i32 %104, 1114111
  br i1 %105, label %106, label %107

106:                                              ; preds = %102
  store i32 65533, i32* %4, align 4
  br label %111

107:                                              ; preds = %102
  %108 = icmp eq i32 %103, 1
  %109 = icmp eq i32 %104, 65533
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %115

111:                                              ; preds = %107, %96, %106
  %112 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %86, i64 0, i32 0
  store i32 13, i32* %112, align 8
  %113 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %86, i64 0, i32 1
  %114 = bitcast %"class.re2::StringPiece"* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #18
  br label %120

115:                                              ; preds = %107
  %116 = sext i32 %103 to i64
  %117 = getelementptr inbounds i8, i8* %94, i64 %116
  %118 = sub i64 %93, %116
  %119 = icmp slt i32 %103, 0
  br i1 %119, label %120, label %92

120:                                              ; preds = %115, %111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #18
  br label %309

121:                                              ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #18
  %122 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %85, align 8
  %123 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %122, i64 0, i32 0
  store i32 14, i32* %123, align 8
  %124 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %85, align 8
  %125 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %124, i64 0, i32 1
  %126 = bitcast %"class.re2::StringPiece"* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %12, i64 16, i1 false) #18
  br label %309

127:                                              ; preds = %81
  %128 = load i8*, i8** %10, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 -2
  %130 = add i64 %82, 3
  %131 = bitcast %"class.re2::StringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #18
  %132 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %7, i64 0, i32 0
  %133 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %7, i64 0, i32 1
  %134 = getelementptr inbounds i8, i8* %128, i64 2
  %135 = add i64 %82, -2
  store i8* %134, i8** %132, align 8
  store i64 %135, i64* %133, align 8
  %136 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %137 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %136, align 8
  %138 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #18
  store i32 -1431655766, i32* %3, align 4
  br label %139

139:                                              ; preds = %162, %127
  %140 = phi i64 [ %135, %127 ], [ %165, %162 ]
  %141 = phi i8* [ %134, %127 ], [ %164, %162 ]
  %142 = icmp eq i64 %140, 0
  br i1 %142, label %168, label %143

143:                                              ; preds = %139
  %144 = icmp ult i64 %140, 4
  %145 = select i1 %144, i64 %140, i64 4
  %146 = trunc i64 %145 to i32
  %147 = call i32 @_ZN3re28fullruneEPKci(i8* %141, i32 %146) #18
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %158, label %149

149:                                              ; preds = %143
  %150 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %3, i8* %141) #18
  %151 = load i32, i32* %3, align 4
  %152 = icmp sgt i32 %151, 1114111
  br i1 %152, label %153, label %154

153:                                              ; preds = %149
  store i32 65533, i32* %3, align 4
  br label %158

154:                                              ; preds = %149
  %155 = icmp eq i32 %150, 1
  %156 = icmp eq i32 %151, 65533
  %157 = and i1 %155, %156
  br i1 %157, label %158, label %162

158:                                              ; preds = %154, %143, %153
  %159 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %137, i64 0, i32 0
  store i32 13, i32* %159, align 8
  %160 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %137, i64 0, i32 1
  %161 = bitcast %"class.re2::StringPiece"* %160 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 16, i1 false) #18
  br label %167

162:                                              ; preds = %154
  %163 = sext i32 %150 to i64
  %164 = getelementptr inbounds i8, i8* %141, i64 %163
  %165 = sub i64 %140, %163
  %166 = icmp slt i32 %150, 0
  br i1 %166, label %167, label %139

167:                                              ; preds = %162, %158
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #18
  br label %204

168:                                              ; preds = %139
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #18
  %169 = icmp eq i64 %135, 0
  br i1 %169, label %187, label %170

170:                                              ; preds = %168, %184
  %171 = phi i64 [ %185, %184 ], [ 0, %168 ]
  %172 = getelementptr inbounds i8, i8* %134, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = add i8 %173, -48
  %175 = icmp ult i8 %174, 10
  %176 = add i8 %173, -97
  %177 = icmp ult i8 %176, 26
  %178 = or i1 %175, %177
  br i1 %178, label %184, label %179

179:                                              ; preds = %170
  %180 = add i8 %173, -65
  %181 = icmp ult i8 %180, 26
  %182 = icmp eq i8 %173, 95
  %183 = or i1 %182, %181
  br i1 %183, label %184, label %187

184:                                              ; preds = %179, %170
  %185 = add nuw i64 %171, 1
  %186 = icmp eq i64 %185, %135
  br i1 %186, label %193, label %170

187:                                              ; preds = %179, %168
  %188 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %136, align 8
  %189 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %188, i64 0, i32 0
  store i32 14, i32* %189, align 8
  %190 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %136, align 8
  %191 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %190, i64 0, i32 1, i32 0
  store i8* %129, i8** %191, align 8
  %192 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %190, i64 0, i32 1, i32 1
  store i64 %130, i64* %192, align 8
  br label %204

193:                                              ; preds = %184
  %194 = call zeroext i1 @_ZN3re26Regexp10ParseState11DoLeftParenERKNS_11StringPieceE(%"class.re2::Regexp::ParseState"* %0, %"class.re2::StringPiece"* nonnull dereferenceable(16) %7)
  %195 = getelementptr inbounds i8, i8* %129, i64 %130
  %196 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %197 = bitcast %"class.re2::StringPiece"* %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = ptrtoint i8* %195 to i64
  store i8* %195, i8** %196, align 8
  %200 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = sub i64 %198, %199
  %203 = add i64 %202, %201
  store i64 %203, i64* %200, align 8
  br label %204

204:                                              ; preds = %167, %193, %187
  %205 = phi i1 [ true, %193 ], [ false, %187 ], [ false, %167 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #18
  br label %309

206:                                              ; preds = %77, %74, %70
  %207 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #18
  store i32 -1431655766, i32* %8, align 4
  %208 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %0, i64 0, i32 2
  %209 = icmp eq i64 %72, 0
  br i1 %209, label %295, label %210

210:                                              ; preds = %206, %282
  %211 = phi i8 [ %283, %282 ], [ 0, %206 ]
  %212 = phi i8 [ %284, %282 ], [ 0, %206 ]
  %213 = phi i32 [ %285, %282 ], [ %14, %206 ]
  %214 = phi i64 [ %286, %282 ], [ %72, %206 ]
  %215 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %208, align 8
  %216 = load i8*, i8** %10, align 8
  %217 = icmp ult i64 %214, 4
  %218 = select i1 %217, i64 %214, i64 4
  %219 = trunc i64 %218 to i32
  %220 = call i32 @_ZN3re28fullruneEPKci(i8* %216, i32 %219) #18
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %232, label %222

222:                                              ; preds = %210
  %223 = load i8*, i8** %10, align 8
  %224 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %8, i8* %223) #18
  %225 = load i32, i32* %8, align 4
  %226 = icmp sgt i32 %225, 1114111
  br i1 %226, label %227, label %228

227:                                              ; preds = %222
  store i32 65533, i32* %8, align 4
  br label %232

228:                                              ; preds = %222
  %229 = icmp eq i32 %224, 1
  %230 = icmp eq i32 %225, 65533
  %231 = and i1 %229, %230
  br i1 %231, label %232, label %236

232:                                              ; preds = %210, %228, %227
  %233 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %215, i64 0, i32 0
  store i32 13, i32* %233, align 8
  %234 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %215, i64 0, i32 1
  %235 = bitcast %"class.re2::StringPiece"* %234 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 16, i1 false) #18
  br label %307

236:                                              ; preds = %228
  %237 = sext i32 %224 to i64
  %238 = load i8*, i8** %10, align 8
  %239 = getelementptr inbounds i8, i8* %238, i64 %237
  store i8* %239, i8** %10, align 8
  %240 = load i64, i64* %11, align 8
  %241 = sub i64 %240, %237
  store i64 %241, i64* %11, align 8
  %242 = icmp slt i32 %224, 0
  br i1 %242, label %307, label %243

243:                                              ; preds = %236
  switch i32 %225, label %295 [
    i32 105, label %244
    i32 109, label %251
    i32 115, label %258
    i32 85, label %265
    i32 45, label %272
    i32 58, label %275
    i32 41, label %288
  ]

244:                                              ; preds = %243
  %245 = and i8 %211, 1
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %249, label %247

247:                                              ; preds = %244
  %248 = and i32 %213, 16382
  br label %282

249:                                              ; preds = %244
  %250 = or i32 %213, 1
  br label %282

251:                                              ; preds = %243
  %252 = and i8 %211, 1
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %256, label %254

254:                                              ; preds = %251
  %255 = or i32 %213, 16
  br label %282

256:                                              ; preds = %251
  %257 = and i32 %213, 16367
  br label %282

258:                                              ; preds = %243
  %259 = and i8 %211, 1
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %263, label %261

261:                                              ; preds = %258
  %262 = and i32 %213, 16375
  br label %282

263:                                              ; preds = %258
  %264 = or i32 %213, 8
  br label %282

265:                                              ; preds = %243
  %266 = and i8 %211, 1
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = and i32 %213, 16319
  br label %282

270:                                              ; preds = %265
  %271 = or i32 %213, 64
  br label %282

272:                                              ; preds = %243
  %273 = and i8 %211, 1
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %282, label %295

275:                                              ; preds = %243
  %276 = call i8* @_Znwm(i64 40) #17
  %277 = bitcast i8* %276 to %"class.re2::Regexp"*
  %278 = load i32, i32* %13, align 8
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %277, i32 22, i32 %278) #18
  %279 = getelementptr inbounds i8, i8* %276, i64 24
  %280 = bitcast i8* %279 to i32*
  store i32 -1, i32* %280, align 8
  %281 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* %0, %"class.re2::Regexp"* nonnull %277) #18
  br label %288

282:                                              ; preds = %249, %247, %256, %254, %263, %261, %270, %268, %272
  %283 = phi i8 [ %211, %268 ], [ %211, %270 ], [ %211, %261 ], [ %211, %263 ], [ %211, %254 ], [ %211, %256 ], [ %211, %247 ], [ %211, %249 ], [ 1, %272 ]
  %284 = phi i8 [ 1, %268 ], [ 1, %270 ], [ 1, %261 ], [ 1, %263 ], [ 1, %254 ], [ 1, %256 ], [ 1, %247 ], [ 1, %249 ], [ 0, %272 ]
  %285 = phi i32 [ %269, %268 ], [ %271, %270 ], [ %262, %261 ], [ %264, %263 ], [ %255, %254 ], [ %257, %256 ], [ %248, %247 ], [ %250, %249 ], [ %213, %272 ]
  %286 = load i64, i64* %11, align 8
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %295, label %210

288:                                              ; preds = %243, %275
  %289 = and i8 %211, 1
  %290 = icmp ne i8 %289, 0
  %291 = and i8 %212, 1
  %292 = icmp eq i8 %291, 0
  %293 = and i1 %290, %292
  br i1 %293, label %295, label %294

294:                                              ; preds = %288
  store i32 %213, i32* %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %9, i64 16, i1 false)
  br label %307

295:                                              ; preds = %282, %243, %272, %206, %288
  %296 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %208, align 8
  %297 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %296, i64 0, i32 0
  store i32 12, i32* %297, align 8
  %298 = load %"class.re2::RegexpStatus"*, %"class.re2::RegexpStatus"** %208, align 8
  %299 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = bitcast %"class.re2::StringPiece"* %5 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = ptrtoint i8* %300 to i64
  %304 = sub i64 %302, %303
  %305 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %298, i64 0, i32 1, i32 0
  store i8* %300, i8** %305, align 8
  %306 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %298, i64 0, i32 1, i32 1
  store i64 %304, i64* %306, align 8
  br label %307

307:                                              ; preds = %236, %232, %295, %294
  %308 = phi i1 [ false, %295 ], [ true, %294 ], [ false, %232 ], [ false, %236 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #18
  br label %309

309:                                              ; preds = %120, %121, %204, %307, %28
  %310 = phi i1 [ false, %28 ], [ %308, %307 ], [ false, %121 ], [ %205, %204 ], [ false, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #18
  ret i1 %310
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re219ConvertLatin1ToUTF8ERKNS_11StringPieceEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.re2::StringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #18
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %3, align 4
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %13, align 8
  br label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %15, align 1
  store i8 0, i8* %7, align 1
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = bitcast i32* %4 to i8*
  %22 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 0
  br label %24

23:                                               ; preds = %24, %16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #18
  ret void

24:                                               ; preds = %20, %24
  %25 = phi i64 [ 0, %20 ], [ %33, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #18
  store i32 -1431655766, i32* %4, align 4
  %26 = load i8*, i8** %22, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  store i32 %29, i32* %4, align 4
  %30 = call i32 @_ZN3re210runetocharEPcPKi(i8* nonnull %5, i32* nonnull %4) #18
  %31 = sext i32 %30 to i64
  %32 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* nonnull %5, i64 %31) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #18
  %33 = add nuw i64 %25, 1
  %34 = load i64, i64* %17, align 8
  %35 = icmp ult i64 %33, %34
  br i1 %35, label %24, label %23
}

declare i32 @_ZN3re210runetocharEPcPKi(i8*, i32*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp5ParseERKNS_11StringPieceENS0_10ParseFlagsEPNS_12RegexpStatusE(%"class.re2::StringPiece"* nocapture readonly dereferenceable(16), i32, %"class.re2::RegexpStatus"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.re2::RegexpStatus", align 8
  %7 = alloca %"class.re2::Regexp::ParseState", align 8
  %8 = alloca %"class.re2::StringPiece", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.re2::StringPiece", align 8
  %12 = alloca %"class.re2::Regexp"*, align 8
  %13 = alloca %"class.re2::StringPiece", align 8
  %14 = alloca %"class.re2::StringPiece", align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = bitcast %"class.re2::RegexpStatus"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #18
  %18 = bitcast %"class.re2::RegexpStatus"* %6 to i64*
  store i64 -6148914691236517206, i64* %18, align 8
  %19 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %6, i64 0, i32 0
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %6, i64 0, i32 1
  %21 = bitcast %"class.re2::StringPiece"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #18
  %22 = icmp eq %"class.re2::RegexpStatus"* %2, null
  %23 = select i1 %22, %"class.re2::RegexpStatus"* %6, %"class.re2::RegexpStatus"* %2
  %24 = bitcast %"class.re2::Regexp::ParseState"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #18
  %25 = bitcast %"class.re2::Regexp::ParseState"* %7 to i64*
  store i64 -6148914691236517206, i64* %25, align 8
  %26 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %7, i64 0, i32 0
  store i32 %1, i32* %26, align 8
  %27 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %7, i64 0, i32 1
  %28 = bitcast %"class.re2::StringPiece"* %27 to i8*
  %29 = bitcast %"class.re2::StringPiece"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #18
  %30 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %7, i64 0, i32 2
  store %"class.re2::RegexpStatus"* %23, %"class.re2::RegexpStatus"** %30, align 8
  %31 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %7, i64 0, i32 3
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %31, align 8
  %32 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %7, i64 0, i32 4
  store i32 0, i32* %32, align 8
  %33 = and i32 %1, 32
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.re2::Regexp::ParseState", %"class.re2::Regexp::ParseState"* %7, i64 0, i32 5
  %36 = select i1 %34, i32 1114111, i32 255
  store i32 %36, i32* %35, align 4
  %37 = bitcast %"class.re2::StringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #18
  %38 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %8, i64 0, i32 0
  %39 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %8, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %29, i64 16, i1 false)
  br i1 %34, label %40, label %42

40:                                               ; preds = %3
  %41 = load i64, i64* %39, align 8
  br label %89

42:                                               ; preds = %3
  %43 = call i8* @_Znwm(i64 24) #17
  %44 = bitcast i8* %43 to %"class.std::__1::basic_string"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #18
  %45 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #18
  %46 = getelementptr inbounds i8, i8* %43, i64 23
  store i32 -1431655766, i32* %4, align 4
  store i8 0, i8* %43, align 1
  store i8 0, i8* %46, align 1
  %47 = load i64, i64* %39, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %42
  %50 = bitcast i32* %5 to i8*
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %60, %51 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #18
  store i32 -1431655766, i32* %5, align 4
  %53 = load i8*, i8** %38, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  store i32 %56, i32* %5, align 4
  %57 = call i32 @_ZN3re210runetocharEPcPKi(i8* nonnull %45, i32* nonnull %5) #18
  %58 = sext i32 %57 to i64
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %44, i8* nonnull %45, i64 %58) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #18
  %60 = add nuw i64 %52, 1
  %61 = load i64, i64* %39, align 8
  %62 = icmp ult i64 %60, %61
  br i1 %62, label %51, label %63

63:                                               ; preds = %51, %42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #18
  %64 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 2
  %65 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %64, align 8
  %66 = icmp eq %"class.std::__1::basic_string"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #17
  br label %75

75:                                               ; preds = %72, %67
  %76 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  call void @_ZdlPv(i8* %76) #17
  br label %77

77:                                               ; preds = %63, %75
  %78 = bitcast %"class.std::__1::basic_string"** %64 to i8**
  store i8* %43, i8** %78, align 8
  %79 = load i8, i8* %46, align 1
  %80 = icmp slt i8 %79, 0
  %81 = bitcast i8* %43 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = select i1 %80, i8* %82, i8* %43
  %84 = getelementptr inbounds i8, i8* %43, i64 8
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = zext i8 %79 to i64
  %88 = select i1 %80, i64 %86, i64 %87
  store i8* %83, i8** %38, align 8
  store i64 %88, i64* %39, align 8
  br label %89

89:                                               ; preds = %40, %77
  %90 = phi i64 [ %41, %40 ], [ %88, %77 ]
  %91 = and i32 %1, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp eq i64 %90, 0
  br i1 %92, label %97, label %94

94:                                               ; preds = %89
  br i1 %93, label %147, label %95

95:                                               ; preds = %94
  %96 = bitcast i32* %9 to i8*
  br label %113

97:                                               ; preds = %89
  br i1 %93, label %612, label %98

98:                                               ; preds = %97
  %99 = bitcast i32* %15 to i8*
  %100 = load i32, i32* @_ZN3re215num_perl_groupsE, align 4
  %101 = icmp slt i32 %100, 1
  %102 = zext i32 %100 to i64
  %103 = bitcast i32* %16 to i8*
  %104 = bitcast %"class.re2::StringPiece"* %14 to i8*
  %105 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %14, i64 0, i32 0
  %106 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %14, i64 0, i32 1
  %107 = bitcast %"class.re2::StringPiece"* %13 to i8*
  %108 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %13, i64 0, i32 0
  %109 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %13, i64 0, i32 1
  %110 = bitcast %"class.re2::Regexp"** %12 to i8*
  %111 = bitcast %"class.re2::StringPiece"* %11 to i8*
  %112 = bitcast i32* %10 to i8*
  br label %149

113:                                              ; preds = %95, %142
  %114 = phi i64 [ %90, %95 ], [ %144, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #18
  store i32 -1431655766, i32* %9, align 4
  %115 = load i8*, i8** %38, align 8
  %116 = icmp ult i64 %114, 4
  %117 = select i1 %116, i64 %114, i64 4
  %118 = trunc i64 %117 to i32
  %119 = call i32 @_ZN3re28fullruneEPKci(i8* %115, i32 %118) #18
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %113
  %122 = load i8*, i8** %38, align 8
  %123 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %9, i8* %122) #18
  %124 = load i32, i32* %9, align 4
  %125 = icmp sgt i32 %124, 1114111
  br i1 %125, label %126, label %127

126:                                              ; preds = %121
  store i32 65533, i32* %9, align 4
  br label %131

127:                                              ; preds = %121
  %128 = icmp eq i32 %123, 1
  %129 = icmp eq i32 %124, 65533
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %135

131:                                              ; preds = %113, %127, %126
  %132 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 0
  store i32 13, i32* %132, align 8
  %133 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 1
  %134 = bitcast %"class.re2::StringPiece"* %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #18
  br label %146

135:                                              ; preds = %127
  %136 = sext i32 %123 to i64
  %137 = load i8*, i8** %38, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 %136
  store i8* %138, i8** %38, align 8
  %139 = load i64, i64* %39, align 8
  %140 = sub i64 %139, %136
  store i64 %140, i64* %39, align 8
  %141 = icmp slt i32 %123, 0
  br i1 %141, label %146, label %142

142:                                              ; preds = %135
  %143 = call zeroext i1 @_ZN3re26Regexp10ParseState11PushLiteralEi(%"class.re2::Regexp::ParseState"* nonnull %7, i32 %124)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #18
  %144 = load i64, i64* %39, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %147, label %113

146:                                              ; preds = %135, %131
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #18
  br label %614

147:                                              ; preds = %142, %94
  %148 = call %"class.re2::Regexp"* @_ZN3re26Regexp10ParseState8DoFinishEv(%"class.re2::Regexp::ParseState"* nonnull %7)
  br label %614

149:                                              ; preds = %98, %607
  %150 = phi i64 [ %90, %98 ], [ %608, %607 ]
  %151 = phi i8* [ null, %98 ], [ %610, %607 ]
  %152 = phi i64 [ 0, %98 ], [ %609, %607 ]
  %153 = load i8*, i8** %38, align 8
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  switch i32 %155, label %156 [
    i32 40, label %186
    i32 124, label %214
    i32 41, label %220
    i32 94, label %227
    i32 36, label %239
    i32 46, label %245
    i32 91, label %251
    i32 42, label %259
    i32 43, label %257
    i32 63, label %258
    i32 123, label %295
    i32 92, label %427
  ]

156:                                              ; preds = %149
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #18
  store i32 -1431655766, i32* %10, align 4
  %157 = icmp ult i64 %150, 4
  %158 = select i1 %157, i64 %150, i64 4
  %159 = trunc i64 %158 to i32
  %160 = call i32 @_ZN3re28fullruneEPKci(i8* %153, i32 %159) #18
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %172, label %162

162:                                              ; preds = %156
  %163 = load i8*, i8** %38, align 8
  %164 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %10, i8* %163) #18
  %165 = load i32, i32* %10, align 4
  %166 = icmp sgt i32 %165, 1114111
  br i1 %166, label %167, label %168

167:                                              ; preds = %162
  store i32 65533, i32* %10, align 4
  br label %172

168:                                              ; preds = %162
  %169 = icmp eq i32 %164, 1
  %170 = icmp eq i32 %165, 65533
  %171 = and i1 %169, %170
  br i1 %171, label %172, label %176

172:                                              ; preds = %156, %168, %167
  %173 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 0
  store i32 13, i32* %173, align 8
  %174 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 1
  %175 = bitcast %"class.re2::StringPiece"* %174 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 16, i1 false) #18
  br label %185

176:                                              ; preds = %168
  %177 = sext i32 %164 to i64
  %178 = load i8*, i8** %38, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 %177
  store i8* %179, i8** %38, align 8
  %180 = load i64, i64* %39, align 8
  %181 = sub i64 %180, %177
  store i64 %181, i64* %39, align 8
  %182 = icmp slt i32 %164, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %176
  %184 = call zeroext i1 @_ZN3re26Regexp10ParseState11PushLiteralEi(%"class.re2::Regexp::ParseState"* nonnull %7, i32 %165)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #18
  br label %603

185:                                              ; preds = %176, %172
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #18
  br label %614

186:                                              ; preds = %149
  %187 = load i32, i32* %26, align 8
  %188 = and i32 %187, 512
  %189 = icmp ne i32 %188, 0
  %190 = icmp ugt i64 %150, 1
  %191 = and i1 %190, %189
  br i1 %191, label %192, label %198

192:                                              ; preds = %186
  %193 = getelementptr inbounds i8, i8* %153, i64 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp eq i8 %194, 63
  br i1 %195, label %196, label %198

196:                                              ; preds = %192
  %197 = call zeroext i1 @_ZN3re26Regexp10ParseState14ParsePerlFlagsEPNS_11StringPieceE(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::StringPiece"* nonnull %8)
  br i1 %197, label %603, label %614

198:                                              ; preds = %186, %192
  %199 = and i32 %187, 4096
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %207, label %201

201:                                              ; preds = %198
  %202 = call i8* @_Znwm(i64 40) #17
  %203 = bitcast i8* %202 to %"class.re2::Regexp"*
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %203, i32 22, i32 %187) #18
  %204 = getelementptr inbounds i8, i8* %202, i64 24
  %205 = bitcast i8* %204 to i32*
  store i32 -1, i32* %205, align 8
  %206 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::Regexp"* nonnull %203) #18
  br label %209

207:                                              ; preds = %198
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 16, i1 false) #18
  %208 = call zeroext i1 @_ZN3re26Regexp10ParseState11DoLeftParenERKNS_11StringPieceE(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::StringPiece"* nonnull dereferenceable(16) %11)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #18
  br label %209

209:                                              ; preds = %207, %201
  %210 = load i8*, i8** %38, align 8
  %211 = getelementptr inbounds i8, i8* %210, i64 1
  store i8* %211, i8** %38, align 8
  %212 = load i64, i64* %39, align 8
  %213 = add i64 %212, -1
  store i64 %213, i64* %39, align 8
  br label %607

214:                                              ; preds = %149
  %215 = call zeroext i1 @_ZN3re26Regexp10ParseState13DoVerticalBarEv(%"class.re2::Regexp::ParseState"* nonnull %7)
  %216 = load i8*, i8** %38, align 8
  %217 = getelementptr inbounds i8, i8* %216, i64 1
  store i8* %217, i8** %38, align 8
  %218 = load i64, i64* %39, align 8
  %219 = add i64 %218, -1
  store i64 %219, i64* %39, align 8
  br label %607

220:                                              ; preds = %149
  %221 = call zeroext i1 @_ZN3re26Regexp10ParseState12DoRightParenEv(%"class.re2::Regexp::ParseState"* nonnull %7)
  br i1 %221, label %222, label %614

222:                                              ; preds = %220
  %223 = load i8*, i8** %38, align 8
  %224 = getelementptr inbounds i8, i8* %223, i64 1
  store i8* %224, i8** %38, align 8
  %225 = load i64, i64* %39, align 8
  %226 = add i64 %225, -1
  store i64 %226, i64* %39, align 8
  br label %607

227:                                              ; preds = %149
  %228 = load i32, i32* %26, align 8
  %229 = and i32 %228, 16
  %230 = icmp eq i32 %229, 0
  %231 = call i8* @_Znwm(i64 40) #17
  %232 = bitcast i8* %231 to %"class.re2::Regexp"*
  %233 = select i1 %230, i32 14, i32 18
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %232, i32 %233, i32 %228) #18
  %234 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::Regexp"* nonnull %232) #18
  %235 = load i8*, i8** %38, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 1
  store i8* %236, i8** %38, align 8
  %237 = load i64, i64* %39, align 8
  %238 = add i64 %237, -1
  store i64 %238, i64* %39, align 8
  br label %607

239:                                              ; preds = %149
  %240 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushDollarEv(%"class.re2::Regexp::ParseState"* nonnull %7)
  %241 = load i8*, i8** %38, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 1
  store i8* %242, i8** %38, align 8
  %243 = load i64, i64* %39, align 8
  %244 = add i64 %243, -1
  store i64 %244, i64* %39, align 8
  br label %607

245:                                              ; preds = %149
  %246 = call zeroext i1 @_ZN3re26Regexp10ParseState7PushDotEv(%"class.re2::Regexp::ParseState"* nonnull %7)
  %247 = load i8*, i8** %38, align 8
  %248 = getelementptr inbounds i8, i8* %247, i64 1
  store i8* %248, i8** %38, align 8
  %249 = load i64, i64* %39, align 8
  %250 = add i64 %249, -1
  store i64 %250, i64* %39, align 8
  br label %607

251:                                              ; preds = %149
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #18
  store %"class.re2::Regexp"* inttoptr (i64 -6148914691236517206 to %"class.re2::Regexp"*), %"class.re2::Regexp"** %12, align 8
  %252 = call zeroext i1 @_ZN3re26Regexp10ParseState14ParseCharClassEPNS_11StringPieceEPPS0_PNS_12RegexpStatusE(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::StringPiece"* nonnull %8, %"class.re2::Regexp"** nonnull %12, %"class.re2::RegexpStatus"* %23)
  br i1 %252, label %253, label %256

253:                                              ; preds = %251
  %254 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %12, align 8
  %255 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::Regexp"* %254)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #18
  br label %603

256:                                              ; preds = %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #18
  br label %614

257:                                              ; preds = %149
  br label %259

258:                                              ; preds = %149
  br label %259

259:                                              ; preds = %149, %258, %257
  %260 = phi i32 [ 9, %258 ], [ 8, %257 ], [ 7, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %107, i8* nonnull align 8 %37, i64 16, i1 false)
  %261 = getelementptr inbounds i8, i8* %153, i64 1
  store i8* %261, i8** %38, align 8
  %262 = add i64 %150, -1
  store i64 %262, i64* %39, align 8
  %263 = load i32, i32* %26, align 8
  %264 = and i32 %263, 512
  %265 = icmp eq i32 %264, 0
  %266 = ptrtoint i8* %261 to i64
  br i1 %265, label %286, label %267

267:                                              ; preds = %259
  %268 = icmp eq i64 %262, 0
  br i1 %268, label %276, label %269

269:                                              ; preds = %267
  %270 = load i8, i8* %261, align 1
  %271 = icmp eq i8 %270, 63
  br i1 %271, label %272, label %276

272:                                              ; preds = %269
  %273 = getelementptr inbounds i8, i8* %153, i64 2
  store i8* %273, i8** %38, align 8
  %274 = add i64 %150, -2
  store i64 %274, i64* %39, align 8
  %275 = ptrtoint i8* %273 to i64
  br label %276

276:                                              ; preds = %272, %269, %267
  %277 = phi i64 [ %266, %267 ], [ %275, %272 ], [ %266, %269 ]
  %278 = phi i1 [ false, %267 ], [ true, %272 ], [ false, %269 ]
  %279 = icmp eq i64 %152, 0
  br i1 %279, label %286, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 0
  store i32 11, i32* %281, align 8
  %282 = ptrtoint i8* %151 to i64
  %283 = sub i64 %277, %282
  %284 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 1, i32 0
  store i8* %151, i8** %284, align 8
  %285 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 1, i32 1
  store i64 %283, i64* %285, align 8
  br label %294

286:                                              ; preds = %259, %276
  %287 = phi i64 [ %277, %276 ], [ %266, %259 ]
  %288 = phi i1 [ %278, %276 ], [ false, %259 ]
  %289 = load i8*, i8** %108, align 8
  %290 = ptrtoint i8* %289 to i64
  %291 = sub i64 %287, %290
  store i64 %291, i64* %109, align 8
  %292 = call zeroext i1 @_ZN3re26Regexp10ParseState12PushRepeatOpENS_8RegexpOpERKNS_11StringPieceEb(%"class.re2::Regexp::ParseState"* nonnull %7, i32 %260, %"class.re2::StringPiece"* nonnull dereferenceable(16) %13, i1 zeroext %288)
  br i1 %292, label %293, label %294

293:                                              ; preds = %286
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #18
  br label %603

294:                                              ; preds = %286, %280
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #18
  br label %614

295:                                              ; preds = %149
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %104, i8* nonnull align 8 %37, i64 16, i1 false)
  %296 = icmp eq i8 %154, 123
  br i1 %296, label %297, label %381

297:                                              ; preds = %295
  %298 = getelementptr inbounds i8, i8* %153, i64 1
  %299 = add i64 %150, -1
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %381, label %301

301:                                              ; preds = %297
  %302 = load i8, i8* %298, align 1
  %303 = zext i8 %302 to i32
  %304 = add nsw i32 %303, -48
  %305 = icmp ult i32 %304, 10
  br i1 %305, label %306, label %381

306:                                              ; preds = %301
  %307 = icmp ugt i64 %299, 1
  %308 = icmp eq i8 %302, 48
  %309 = and i1 %307, %308
  br i1 %309, label %310, label %316

310:                                              ; preds = %306
  %311 = getelementptr inbounds i8, i8* %153, i64 2
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i32
  %314 = add nsw i32 %313, -48
  %315 = icmp ult i32 %314, 10
  br i1 %315, label %381, label %316

316:                                              ; preds = %310, %306
  br label %317

317:                                              ; preds = %316, %329
  %318 = phi i32 [ %332, %329 ], [ %304, %316 ]
  %319 = phi i32 [ %325, %329 ], [ 0, %316 ]
  %320 = phi i8* [ %326, %329 ], [ %298, %316 ]
  %321 = phi i64 [ %327, %329 ], [ %299, %316 ]
  %322 = icmp sgt i32 %319, 99999999
  br i1 %322, label %381, label %323

323:                                              ; preds = %317
  %324 = mul nsw i32 %319, 10
  %325 = add i32 %324, %318
  %326 = getelementptr inbounds i8, i8* %320, i64 1
  %327 = add i64 %321, -1
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %381, label %329

329:                                              ; preds = %323
  %330 = load i8, i8* %326, align 1
  %331 = zext i8 %330 to i32
  %332 = add nsw i32 %331, -48
  %333 = icmp ult i32 %332, 10
  br i1 %333, label %317, label %334

334:                                              ; preds = %329
  %335 = icmp eq i8 %330, 44
  br i1 %335, label %336, label %375

336:                                              ; preds = %334
  %337 = getelementptr inbounds i8, i8* %320, i64 2
  %338 = add i64 %321, -2
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %381, label %340

340:                                              ; preds = %336
  %341 = load i8, i8* %337, align 1
  %342 = icmp eq i8 %341, 125
  br i1 %342, label %387, label %343

343:                                              ; preds = %340
  %344 = zext i8 %341 to i32
  %345 = add nsw i32 %344, -48
  %346 = icmp ult i32 %345, 10
  br i1 %346, label %347, label %381

347:                                              ; preds = %343
  %348 = icmp ugt i64 %338, 1
  %349 = icmp eq i8 %341, 48
  %350 = and i1 %348, %349
  br i1 %350, label %351, label %357

351:                                              ; preds = %347
  %352 = getelementptr inbounds i8, i8* %320, i64 3
  %353 = load i8, i8* %352, align 1
  %354 = zext i8 %353 to i32
  %355 = add nsw i32 %354, -48
  %356 = icmp ult i32 %355, 10
  br i1 %356, label %381, label %357

357:                                              ; preds = %351, %347
  br label %358

358:                                              ; preds = %357, %370
  %359 = phi i32 [ %373, %370 ], [ %345, %357 ]
  %360 = phi i32 [ %366, %370 ], [ 0, %357 ]
  %361 = phi i8* [ %367, %370 ], [ %337, %357 ]
  %362 = phi i64 [ %368, %370 ], [ %338, %357 ]
  %363 = icmp sgt i32 %360, 99999999
  br i1 %363, label %381, label %364

364:                                              ; preds = %358
  %365 = mul nsw i32 %360, 10
  %366 = add i32 %365, %359
  %367 = getelementptr inbounds i8, i8* %361, i64 1
  %368 = add i64 %362, -1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %381, label %370

370:                                              ; preds = %364
  %371 = load i8, i8* %367, align 1
  %372 = zext i8 %371 to i32
  %373 = add nsw i32 %372, -48
  %374 = icmp ult i32 %373, 10
  br i1 %374, label %358, label %375

375:                                              ; preds = %370, %334
  %376 = phi i8 [ %330, %334 ], [ %371, %370 ]
  %377 = phi i32 [ %325, %334 ], [ %366, %370 ]
  %378 = phi i8* [ %326, %334 ], [ %367, %370 ]
  %379 = phi i64 [ %327, %334 ], [ %368, %370 ]
  %380 = icmp eq i8 %376, 125
  br i1 %380, label %387, label %381

381:                                              ; preds = %317, %323, %358, %364, %295, %336, %375, %301, %297, %310, %343, %351
  %382 = call zeroext i1 @_ZN3re26Regexp10ParseState11PushLiteralEi(%"class.re2::Regexp::ParseState"* nonnull %7, i32 123)
  %383 = load i8*, i8** %38, align 8
  %384 = getelementptr inbounds i8, i8* %383, i64 1
  store i8* %384, i8** %38, align 8
  %385 = load i64, i64* %39, align 8
  %386 = add i64 %385, -1
  store i64 %386, i64* %39, align 8
  br label %423

387:                                              ; preds = %340, %375
  %388 = phi i64 [ %379, %375 ], [ %338, %340 ]
  %389 = phi i8* [ %378, %375 ], [ %337, %340 ]
  %390 = phi i32 [ %377, %375 ], [ -1, %340 ]
  %391 = getelementptr inbounds i8, i8* %389, i64 1
  %392 = add i64 %388, -1
  store i8* %391, i8** %38, align 8
  store i64 %392, i64* %39, align 8
  %393 = load i32, i32* %26, align 8
  %394 = and i32 %393, 512
  %395 = icmp eq i32 %394, 0
  %396 = ptrtoint i8* %391 to i64
  br i1 %395, label %416, label %397

397:                                              ; preds = %387
  %398 = icmp eq i64 %392, 0
  br i1 %398, label %406, label %399

399:                                              ; preds = %397
  %400 = load i8, i8* %391, align 1
  %401 = icmp eq i8 %400, 63
  br i1 %401, label %402, label %406

402:                                              ; preds = %399
  %403 = getelementptr inbounds i8, i8* %389, i64 2
  store i8* %403, i8** %38, align 8
  %404 = add i64 %388, -2
  store i64 %404, i64* %39, align 8
  %405 = ptrtoint i8* %403 to i64
  br label %406

406:                                              ; preds = %402, %399, %397
  %407 = phi i64 [ %396, %397 ], [ %405, %402 ], [ %396, %399 ]
  %408 = phi i1 [ false, %397 ], [ true, %402 ], [ false, %399 ]
  %409 = icmp eq i64 %152, 0
  br i1 %409, label %416, label %410

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 0
  store i32 11, i32* %411, align 8
  %412 = ptrtoint i8* %151 to i64
  %413 = sub i64 %407, %412
  %414 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 1, i32 0
  store i8* %151, i8** %414, align 8
  %415 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 1, i32 1
  store i64 %413, i64* %415, align 8
  br label %426

416:                                              ; preds = %387, %406
  %417 = phi i64 [ %407, %406 ], [ %396, %387 ]
  %418 = phi i1 [ %408, %406 ], [ false, %387 ]
  %419 = load i8*, i8** %105, align 8
  %420 = ptrtoint i8* %419 to i64
  %421 = sub i64 %417, %420
  store i64 %421, i64* %106, align 8
  %422 = call zeroext i1 @_ZN3re26Regexp10ParseState14PushRepetitionEiiRKNS_11StringPieceEb(%"class.re2::Regexp::ParseState"* nonnull %7, i32 %325, i32 %390, %"class.re2::StringPiece"* nonnull dereferenceable(16) %14, i1 zeroext %418)
  br i1 %422, label %423, label %426

423:                                              ; preds = %381, %416
  %424 = phi i64 [ 0, %381 ], [ %421, %416 ]
  %425 = phi i8* [ null, %381 ], [ %419, %416 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #18
  br label %603

426:                                              ; preds = %416, %410
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #18
  br label %614

427:                                              ; preds = %149
  %428 = load i32, i32* %26, align 8
  %429 = and i32 %428, 256
  %430 = icmp ne i32 %429, 0
  %431 = icmp ugt i64 %150, 1
  %432 = and i1 %431, %430
  br i1 %432, label %433, label %449

433:                                              ; preds = %427
  %434 = getelementptr inbounds i8, i8* %153, i64 1
  %435 = load i8, i8* %434, align 1
  switch i8 %435, label %449 [
    i8 98, label %436
    i8 66, label %439
  ]

436:                                              ; preds = %433
  %437 = call i8* @_Znwm(i64 40) #17
  %438 = bitcast i8* %437 to %"class.re2::Regexp"*
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %438, i32 16, i32 %428) #18
  br label %442

439:                                              ; preds = %433
  %440 = call i8* @_Znwm(i64 40) #17
  %441 = bitcast i8* %440 to %"class.re2::Regexp"*
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %441, i32 17, i32 %428) #18
  br label %442

442:                                              ; preds = %436, %439
  %443 = phi %"class.re2::Regexp"* [ %438, %436 ], [ %441, %439 ]
  %444 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::Regexp"* nonnull %443) #18
  %445 = load i8*, i8** %38, align 8
  %446 = getelementptr inbounds i8, i8* %445, i64 2
  store i8* %446, i8** %38, align 8
  %447 = load i64, i64* %39, align 8
  %448 = add i64 %447, -2
  store i64 %448, i64* %39, align 8
  br label %607

449:                                              ; preds = %433, %427
  %450 = and i32 %428, 512
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %530, label %452

452:                                              ; preds = %449
  br i1 %431, label %453, label %551

453:                                              ; preds = %452
  %454 = getelementptr inbounds i8, i8* %153, i64 1
  %455 = load i8, i8* %454, align 1
  switch i8 %455, label %534 [
    i8 65, label %456
    i8 122, label %464
    i8 67, label %472
    i8 81, label %480
  ]

456:                                              ; preds = %453
  %457 = call i8* @_Znwm(i64 40) #17
  %458 = bitcast i8* %457 to %"class.re2::Regexp"*
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %458, i32 18, i32 %428) #18
  %459 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::Regexp"* nonnull %458) #18
  %460 = load i8*, i8** %38, align 8
  %461 = getelementptr inbounds i8, i8* %460, i64 2
  store i8* %461, i8** %38, align 8
  %462 = load i64, i64* %39, align 8
  %463 = add i64 %462, -2
  store i64 %463, i64* %39, align 8
  br label %607

464:                                              ; preds = %453
  %465 = call i8* @_Znwm(i64 40) #17
  %466 = bitcast i8* %465 to %"class.re2::Regexp"*
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %466, i32 19, i32 %428) #18
  %467 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::Regexp"* nonnull %466) #18
  %468 = load i8*, i8** %38, align 8
  %469 = getelementptr inbounds i8, i8* %468, i64 2
  store i8* %469, i8** %38, align 8
  %470 = load i64, i64* %39, align 8
  %471 = add i64 %470, -2
  store i64 %471, i64* %39, align 8
  br label %607

472:                                              ; preds = %453
  %473 = call i8* @_Znwm(i64 40) #17
  %474 = bitcast i8* %473 to %"class.re2::Regexp"*
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %474, i32 13, i32 %428) #18
  %475 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::Regexp"* nonnull %474) #18
  %476 = load i8*, i8** %38, align 8
  %477 = getelementptr inbounds i8, i8* %476, i64 2
  store i8* %477, i8** %38, align 8
  %478 = load i64, i64* %39, align 8
  %479 = add i64 %478, -2
  store i64 %479, i64* %39, align 8
  br label %607

480:                                              ; preds = %453
  %481 = getelementptr inbounds i8, i8* %153, i64 2
  store i8* %481, i8** %38, align 8
  %482 = add i64 %150, -2
  store i64 %482, i64* %39, align 8
  br label %486

483:                                              ; preds = %522
  %484 = call zeroext i1 @_ZN3re26Regexp10ParseState11PushLiteralEi(%"class.re2::Regexp::ParseState"* nonnull %7, i32 %511)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #18
  %485 = load i64, i64* %39, align 8
  br label %486

486:                                              ; preds = %483, %480
  %487 = phi i64 [ %485, %483 ], [ %482, %480 ]
  switch i64 %487, label %490 [
    i64 0, label %603
    i64 1, label %488
  ]

488:                                              ; preds = %486
  %489 = load i8*, i8** %38, align 8
  br label %501

490:                                              ; preds = %486
  %491 = load i8*, i8** %38, align 8
  %492 = load i8, i8* %491, align 1
  %493 = icmp eq i8 %492, 92
  br i1 %493, label %494, label %501

494:                                              ; preds = %490
  %495 = getelementptr inbounds i8, i8* %491, i64 1
  %496 = load i8, i8* %495, align 1
  %497 = icmp eq i8 %496, 69
  br i1 %497, label %498, label %501

498:                                              ; preds = %494
  %499 = getelementptr inbounds i8, i8* %491, i64 2
  store i8* %499, i8** %38, align 8
  %500 = add i64 %487, -2
  store i64 %500, i64* %39, align 8
  br label %607

501:                                              ; preds = %488, %494, %490
  %502 = phi i8* [ %489, %488 ], [ %491, %494 ], [ %491, %490 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #18
  store i32 -1431655766, i32* %15, align 4
  %503 = icmp ult i64 %487, 4
  %504 = select i1 %503, i64 %487, i64 4
  %505 = trunc i64 %504 to i32
  %506 = call i32 @_ZN3re28fullruneEPKci(i8* %502, i32 %505) #18
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %518, label %508

508:                                              ; preds = %501
  %509 = load i8*, i8** %38, align 8
  %510 = call i32 @_ZN3re210chartoruneEPiPKc(i32* nonnull %15, i8* %509) #18
  %511 = load i32, i32* %15, align 4
  %512 = icmp sgt i32 %511, 1114111
  br i1 %512, label %513, label %514

513:                                              ; preds = %508
  store i32 65533, i32* %15, align 4
  br label %518

514:                                              ; preds = %508
  %515 = icmp eq i32 %510, 1
  %516 = icmp eq i32 %511, 65533
  %517 = and i1 %515, %516
  br i1 %517, label %518, label %522

518:                                              ; preds = %501, %514, %513
  %519 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 0
  store i32 13, i32* %519, align 8
  %520 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %23, i64 0, i32 1
  %521 = bitcast %"class.re2::StringPiece"* %520 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %521, i8 0, i64 16, i1 false) #18
  br label %529

522:                                              ; preds = %514
  %523 = sext i32 %510 to i64
  %524 = load i8*, i8** %38, align 8
  %525 = getelementptr inbounds i8, i8* %524, i64 %523
  store i8* %525, i8** %38, align 8
  %526 = load i64, i64* %39, align 8
  %527 = sub i64 %526, %523
  store i64 %527, i64* %39, align 8
  %528 = icmp slt i32 %510, 0
  br i1 %528, label %529, label %483

529:                                              ; preds = %522, %518
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #18
  br label %614

530:                                              ; preds = %449
  br i1 %431, label %531, label %551

531:                                              ; preds = %530
  %532 = getelementptr inbounds i8, i8* %153, i64 1
  %533 = load i8, i8* %532, align 1
  br label %534

534:                                              ; preds = %531, %453
  %535 = phi i8 [ %533, %531 ], [ %455, %453 ]
  switch i8 %535, label %551 [
    i8 112, label %536
    i8 80, label %536
  ]

536:                                              ; preds = %534, %534
  %537 = call i8* @_Znwm(i64 40) #17
  %538 = bitcast i8* %537 to %"class.re2::Regexp"*
  %539 = and i32 %428, 16382
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %538, i32 20, i32 %539) #18
  %540 = call i8* @_Znwm(i64 40) #17
  %541 = bitcast i8* %540 to %"class.re2::CharClassBuilder"*
  call void @_ZN3re216CharClassBuilderC1Ev(%"class.re2::CharClassBuilder"* nonnull %541) #18
  %542 = getelementptr inbounds i8, i8* %537, i64 32
  %543 = bitcast i8* %542 to i8**
  store i8* %540, i8** %543, align 8
  %544 = load i32, i32* %26, align 8
  %545 = call i32 @_ZN3re217ParseUnicodeGroupEPNS_11StringPieceENS_6Regexp10ParseFlagsEPNS_16CharClassBuilderEPNS_12RegexpStatusE(%"class.re2::StringPiece"* nonnull %8, i32 %544, %"class.re2::CharClassBuilder"* nonnull %541, %"class.re2::RegexpStatus"* %23)
  switch i32 %545, label %551 [
    i32 0, label %549
    i32 1, label %546
    i32 2, label %548
  ]

546:                                              ; preds = %536
  %547 = bitcast i8* %537 to %"class.re2::Regexp"*
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %547) #18
  br label %614

548:                                              ; preds = %536
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %538) #18
  br label %551

549:                                              ; preds = %536
  %550 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::Regexp"* nonnull %538)
  br label %603

551:                                              ; preds = %534, %548, %536, %452, %530
  %552 = load i32, i32* %26, align 8
  %553 = trunc i32 %552 to i8
  %554 = icmp sgt i8 %553, -1
  br i1 %554, label %596, label %555

555:                                              ; preds = %551
  %556 = load i64, i64* %39, align 8
  %557 = icmp ult i64 %556, 2
  br i1 %557, label %596, label %558

558:                                              ; preds = %555
  %559 = load i8*, i8** %38, align 8
  %560 = load i8, i8* %559, align 1
  %561 = icmp ne i8 %560, 92
  %562 = or i1 %561, %101
  br i1 %562, label %596, label %563

563:                                              ; preds = %558, %577
  %564 = phi i64 [ %578, %577 ], [ 0, %558 ]
  %565 = getelementptr inbounds [0 x %"struct.re2::UGroup"], [0 x %"struct.re2::UGroup"]* @_ZN3re211perl_groupsE, i64 0, i64 %564
  %566 = getelementptr inbounds %"struct.re2::UGroup", %"struct.re2::UGroup"* %565, i64 0, i32 0
  %567 = load i8*, i8** %566, align 8
  %568 = icmp eq i8* %567, null
  br i1 %568, label %577, label %569

569:                                              ; preds = %563
  %570 = call i64 @strlen(i8* nonnull %567) #21
  %571 = icmp eq i64 %570, 2
  br i1 %571, label %572, label %577

572:                                              ; preds = %569
  %573 = icmp eq i8* %567, %559
  br i1 %573, label %580, label %574

574:                                              ; preds = %572
  %575 = call i32 @bcmp(i8* nonnull %567, i8* %559, i64 2) #18
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %580, label %577

577:                                              ; preds = %574, %569, %563
  %578 = add nuw nsw i64 %564, 1
  %579 = icmp eq i64 %578, %102
  br i1 %579, label %596, label %563

580:                                              ; preds = %572, %574
  %581 = getelementptr inbounds i8, i8* %559, i64 2
  store i8* %581, i8** %38, align 8
  %582 = add i64 %556, -2
  store i64 %582, i64* %39, align 8
  %583 = icmp eq %"struct.re2::UGroup"* %565, null
  br i1 %583, label %596, label %584

584:                                              ; preds = %580
  %585 = call i8* @_Znwm(i64 40) #17
  %586 = bitcast i8* %585 to %"class.re2::Regexp"*
  %587 = and i32 %552, 16382
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %586, i32 20, i32 %587) #18
  %588 = call i8* @_Znwm(i64 40) #17
  %589 = bitcast i8* %588 to %"class.re2::CharClassBuilder"*
  call void @_ZN3re216CharClassBuilderC1Ev(%"class.re2::CharClassBuilder"* nonnull %589) #18
  %590 = getelementptr inbounds i8, i8* %585, i64 32
  %591 = bitcast i8* %590 to i8**
  store i8* %588, i8** %591, align 8
  %592 = getelementptr inbounds [0 x %"struct.re2::UGroup"], [0 x %"struct.re2::UGroup"]* @_ZN3re211perl_groupsE, i64 0, i64 %564, i32 1
  %593 = load i32, i32* %592, align 8
  %594 = load i32, i32* %26, align 8
  call fastcc void @_ZN3re2L9AddUGroupEPNS_16CharClassBuilderEPKNS_6UGroupEiNS_6Regexp10ParseFlagsE(%"class.re2::CharClassBuilder"* nonnull %589, %"struct.re2::UGroup"* nonnull %565, i32 %593, i32 %594)
  %595 = call zeroext i1 @_ZN3re26Regexp10ParseState10PushRegexpEPS0_(%"class.re2::Regexp::ParseState"* nonnull %7, %"class.re2::Regexp"* nonnull %586)
  br label %603

596:                                              ; preds = %577, %558, %555, %551, %580
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103) #18
  store i32 -1431655766, i32* %16, align 4
  %597 = load i32, i32* %35, align 4
  %598 = call fastcc zeroext i1 @_ZN3re2L11ParseEscapeEPNS_11StringPieceEPiPNS_12RegexpStatusEi(%"class.re2::StringPiece"* nonnull %8, i32* nonnull %16, %"class.re2::RegexpStatus"* %23, i32 %597)
  br i1 %598, label %599, label %602

599:                                              ; preds = %596
  %600 = load i32, i32* %16, align 4
  %601 = call zeroext i1 @_ZN3re26Regexp10ParseState11PushLiteralEi(%"class.re2::Regexp::ParseState"* nonnull %7, i32 %600)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #18
  br label %603

602:                                              ; preds = %596
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #18
  br label %614

603:                                              ; preds = %486, %599, %584, %549, %423, %293, %253, %183, %196
  %604 = phi i64 [ 0, %599 ], [ 0, %584 ], [ %424, %423 ], [ 0, %196 ], [ 0, %253 ], [ %291, %293 ], [ 0, %549 ], [ 0, %183 ], [ %487, %486 ]
  %605 = phi i8* [ null, %599 ], [ null, %584 ], [ %425, %423 ], [ null, %196 ], [ null, %253 ], [ %289, %293 ], [ null, %549 ], [ null, %183 ], [ null, %486 ]
  %606 = load i64, i64* %39, align 8
  br label %607

607:                                              ; preds = %603, %498, %472, %464, %456, %442, %245, %239, %227, %222, %214, %209
  %608 = phi i64 [ %606, %603 ], [ %500, %498 ], [ %479, %472 ], [ %471, %464 ], [ %463, %456 ], [ %448, %442 ], [ %250, %245 ], [ %244, %239 ], [ %238, %227 ], [ %226, %222 ], [ %219, %214 ], [ %213, %209 ]
  %609 = phi i64 [ %604, %603 ], [ 0, %498 ], [ 0, %472 ], [ 0, %464 ], [ 0, %456 ], [ 0, %442 ], [ 0, %245 ], [ 0, %239 ], [ 0, %227 ], [ 0, %222 ], [ 0, %214 ], [ 0, %209 ]
  %610 = phi i8* [ %605, %603 ], [ null, %498 ], [ null, %472 ], [ null, %464 ], [ null, %456 ], [ null, %442 ], [ null, %245 ], [ null, %239 ], [ null, %227 ], [ null, %222 ], [ null, %214 ], [ null, %209 ]
  %611 = icmp eq i64 %608, 0
  br i1 %611, label %612, label %149

612:                                              ; preds = %607, %97
  %613 = call %"class.re2::Regexp"* @_ZN3re26Regexp10ParseState8DoFinishEv(%"class.re2::Regexp::ParseState"* nonnull %7)
  br label %614

614:                                              ; preds = %220, %196, %546, %529, %256, %294, %426, %602, %185, %612, %146, %147
  %615 = phi %"class.re2::Regexp"* [ null, %146 ], [ %148, %147 ], [ %613, %612 ], [ null, %185 ], [ null, %602 ], [ null, %426 ], [ null, %294 ], [ null, %256 ], [ null, %529 ], [ null, %546 ], [ null, %196 ], [ null, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #18
  %616 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %31, align 8
  %617 = icmp eq %"class.re2::Regexp"* %616, null
  br i1 %617, label %641, label %618

618:                                              ; preds = %614, %639
  %619 = phi %"class.re2::Regexp"* [ %621, %639 ], [ %616, %614 ]
  %620 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %619, i64 0, i32 6
  %621 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %620, align 8
  store %"class.re2::Regexp"* null, %"class.re2::Regexp"** %620, align 8
  %622 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %619, i64 0, i32 0
  %623 = load i8, i8* %622, align 8
  %624 = icmp eq i8 %623, 22
  br i1 %624, label %625, label %639

625:                                              ; preds = %618
  %626 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %619, i64 0, i32 7, i32 0, i32 1
  %627 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %626, align 8
  %628 = icmp eq %"class.std::__1::basic_string"* %627, null
  br i1 %628, label %639, label %629

629:                                              ; preds = %625
  %630 = bitcast %"class.std::__1::basic_string"* %627 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  %632 = load i8, i8* %631, align 1
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %637

634:                                              ; preds = %629
  %635 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %627, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load i8*, i8** %635, align 8
  call void @_ZdlPv(i8* %636) #17
  br label %637

637:                                              ; preds = %634, %629
  %638 = bitcast %"class.std::__1::basic_string"* %627 to i8*
  call void @_ZdlPv(i8* %638) #17
  br label %639

639:                                              ; preds = %637, %625, %618
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %619) #18
  %640 = icmp eq %"class.re2::Regexp"* %621, null
  br i1 %640, label %641, label %618

641:                                              ; preds = %639, %614
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #18
  %642 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %6, i64 0, i32 2
  %643 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %642, align 8
  %644 = icmp eq %"class.std::__1::basic_string"* %643, null
  br i1 %644, label %655, label %645

645:                                              ; preds = %641
  %646 = bitcast %"class.std::__1::basic_string"* %643 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %647 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %646, i64 0, i32 1, i32 0
  %648 = load i8, i8* %647, align 1
  %649 = icmp slt i8 %648, 0
  br i1 %649, label %650, label %653

650:                                              ; preds = %645
  %651 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %643, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %652 = load i8*, i8** %651, align 8
  call void @_ZdlPv(i8* %652) #17
  br label %653

653:                                              ; preds = %650, %645
  %654 = bitcast %"class.std::__1::basic_string"* %643 to i8*
  call void @_ZdlPv(i8* %654) #17
  br label %655

655:                                              ; preds = %641, %653
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #18
  ret %"class.re2::Regexp"* %615
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re216RepetitionWalkerD0Ev(%"class.re2::RepetitionWalker"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::RepetitionWalker", %"class.re2::RepetitionWalker"* %0, i64 0, i32 0
  tail call void @_ZN3re26Regexp6WalkerIiED2Ev(%"class.re2::Regexp::Walker"* %2) #18
  %3 = bitcast %"class.re2::RepetitionWalker"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re26Regexp6WalkerIiE4CopyEi(%"class.re2::Regexp::Walker"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #18
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3re29RuneRangeENS1_13RuneRangeLessENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #18
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #9

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIiED0Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re26Regexp6WalkerIiE8PreVisitEPS0_iPb(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*) unnamed_addr #0 comdat align 2 {
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re26Regexp6WalkerIiE9PostVisitEPS0_iiPii(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 %3
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIiE5ResetEv(%"class.re2::Regexp::Walker"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.LogMessage, align 8
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %99, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %7) #18
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast i8* %22 to i64*
  store i64 %15, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #18
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #18
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 1
  %37 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i64 42) #18
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %41, i32 149) #18
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i64 16) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %7) #18
  %45 = load i64, i64* %3, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %99, label %47

47:                                               ; preds = %6
  %48 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %51 = bitcast %"struct.re2::WalkState"*** %50 to i64*
  %52 = bitcast %"struct.re2::WalkState"*** %49 to i64*
  br label %53

53:                                               ; preds = %47, %96
  %54 = phi i64 [ %45, %47 ], [ %97, %96 ]
  %55 = load i64, i64* %48, align 8
  %56 = add i64 %54, -1
  %57 = add i64 %56, %55
  %58 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %59 = lshr i64 %57, 7
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %58, i64 %59
  %61 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, align 8
  %62 = and i64 %57, 127
  %63 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %61, i64 %62, i32 5
  %64 = load i32*, i32** %63, align 8
  %65 = icmp eq i32* %64, null
  %66 = ptrtoint %"struct.re2::WalkState"** %58 to i64
  br i1 %65, label %73, label %67

67:                                               ; preds = %53
  %68 = bitcast i32* %64 to i8*
  call void @_ZdaPv(i8* %68) #17
  %69 = load i64, i64* %3, align 8
  %70 = load i64, i64* %48, align 8
  %71 = load i64, i64* %52, align 8
  %72 = add i64 %69, -1
  br label %73

73:                                               ; preds = %67, %53
  %74 = phi i64 [ %72, %67 ], [ %56, %53 ]
  %75 = phi i64 [ %71, %67 ], [ %66, %53 ]
  %76 = phi i64 [ %70, %67 ], [ %55, %53 ]
  %77 = phi i64 [ %69, %67 ], [ %54, %53 ]
  store i64 %74, i64* %3, align 8
  %78 = load i64, i64* %51, align 8
  %79 = sub i64 %78, %75
  %80 = icmp eq i64 %79, 0
  %81 = shl i64 %79, 4
  %82 = add i64 %81, -1
  %83 = select i1 %80, i64 0, i64 %82
  %84 = sub i64 1, %77
  %85 = sub i64 %84, %76
  %86 = add i64 %85, %83
  %87 = icmp ult i64 %86, 256
  br i1 %87, label %96, label %88

88:                                               ; preds = %73
  %89 = inttoptr i64 %78 to %"struct.re2::WalkState"**
  %90 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 -1
  %91 = bitcast %"struct.re2::WalkState"** %90 to i8**
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #17
  %93 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %50, align 8
  %94 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %93, i64 -1
  store %"struct.re2::WalkState"** %94, %"struct.re2::WalkState"*** %50, align 8
  %95 = load i64, i64* %3, align 8
  br label %96

96:                                               ; preds = %73, %88
  %97 = phi i64 [ %74, %73 ], [ %95, %88 ]
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %53

99:                                               ; preds = %96, %6, %1
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare i32 @_ZN3re28fullruneEPKci(i8*, i32) local_unnamed_addr #3

declare i32 @_ZN3re210chartoruneEPiPKc(i32*, i8*) local_unnamed_addr #3

declare void @_ZN3re216CharClassBuilder12AddCharClassEPS0_(%"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3re2L5UnHexEi(i32) unnamed_addr #0 {
  %2 = alloca %class.LogMessage, align 8
  %3 = add i32 %0, -48
  %4 = icmp ult i32 %3, 10
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = add i32 %0, -65
  %7 = icmp ult i32 %6, 6
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = add nsw i32 %0, -55
  br label %55

10:                                               ; preds = %5
  %11 = add i32 %0, -97
  %12 = icmp ult i32 %11, 6
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = add nsw i32 %0, -87
  br label %55

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %16) #18
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1
  %18 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %17, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  %20 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1
  %21 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %20, i64 0, i32 0
  %22 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %23 = bitcast %"class.std::__1::basic_ostringstream"* %17 to i64*
  store i64 %22, i64* %23, align 8
  %24 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %17 to i8**
  %26 = inttoptr i64 %22 to i8*
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %17 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %29
  %32 = bitcast i8* %31 to i64*
  store i64 %24, i64* %32, align 8
  %33 = load i8*, i8** %25, align 8
  %34 = getelementptr i8, i8* %33, i64 -24
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %30, i64 %36
  %38 = bitcast i8* %37 to %"class.std::__1::ios_base"*
  %39 = bitcast %"class.std::__1::basic_stringbuf"* %20 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %38, i8* %39) #18
  %40 = getelementptr inbounds i8, i8* %37, i64 136
  %41 = bitcast i8* %40 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %41, align 8
  %42 = getelementptr inbounds i8, i8* %37, i64 144
  %43 = bitcast i8* %42 to i32*
  store i32 -1, i32* %43, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %21) #18
  %44 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %20, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 1
  %46 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 3
  %47 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %46, align 8
  %48 = bitcast %"class.std::__1::basic_ostringstream"* %17 to %"class.std::__1::basic_ostream"*
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 38) #18
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %50, i32 1442) #18
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i64 14) #18
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %53, i32 %0) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %16) #18
  br label %55

55:                                               ; preds = %1, %15, %13, %8
  %56 = phi i32 [ %9, %8 ], [ %14, %13 ], [ 0, %15 ], [ %3, %1 ]
  ret i32 %56
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #18
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #18
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #18
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #18
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #18
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #18
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #18
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #17
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #18
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #18
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #18
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #18
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3re26Regexp6WalkerIiE12WalkInternalEPS0_ib(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.LogMessage, align 8
  %6 = alloca i8, align 1
  tail call void @_ZN3re26Regexp6WalkerIiE5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %7 = icmp eq %"class.re2::Regexp"* %1, null
  br i1 %7, label %8, label %47

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %9) #18
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %10 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %10 to i8**
  %19 = inttoptr i64 %15 to i8*
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::basic_ostringstream"* %10 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = bitcast i8* %24 to i64*
  store i64 %17, i64* %25, align 8
  %26 = load i8*, i8** %18, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 %29
  %31 = bitcast i8* %30 to %"class.std::__1::ios_base"*
  %32 = bitcast %"class.std::__1::basic_stringbuf"* %13 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %31, i8* %32) #18
  %33 = getelementptr inbounds i8, i8* %30, i64 136
  %34 = bitcast i8* %33 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %34, align 8
  %35 = getelementptr inbounds i8, i8* %30, i64 144
  %36 = bitcast i8* %35 to i32*
  store i32 -1, i32* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %14) #18
  %37 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 1
  %39 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 3
  %40 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %39, align 8
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %10 to %"class.std::__1::basic_ostream"*
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i64 42) #18
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #18
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %43, i32 162) #18
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #18
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), i64 9) #18
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %9) #18
  br label %323

47:                                               ; preds = %4
  %48 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1
  %49 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %50 = bitcast %"struct.re2::WalkState"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"struct.re2::WalkState"*** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %51, %54
  %56 = icmp eq i64 %55, 0
  %57 = shl i64 %55, 4
  %58 = add i64 %57, -1
  %59 = select i1 %56, i64 0, i64 %58
  %60 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, %61
  %65 = icmp eq i64 %59, %64
  %66 = inttoptr i64 %54 to %"struct.re2::WalkState"**
  %67 = inttoptr i64 %51 to %"struct.re2::WalkState"**
  br i1 %65, label %68, label %75

68:                                               ; preds = %47
  %69 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %48, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIN3re29WalkStateIiEENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %69) #18
  %70 = load i64, i64* %62, align 8
  %71 = load i64, i64* %60, align 8
  %72 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %73 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %74 = add i64 %71, %70
  br label %75

75:                                               ; preds = %68, %47
  %76 = phi i64 [ %74, %68 ], [ %64, %47 ]
  %77 = phi %"struct.re2::WalkState"** [ %73, %68 ], [ %67, %47 ]
  %78 = phi %"struct.re2::WalkState"** [ %72, %68 ], [ %66, %47 ]
  %79 = icmp eq %"struct.re2::WalkState"** %77, %78
  br i1 %79, label %87, label %80

80:                                               ; preds = %75
  %81 = lshr i64 %76, 7
  %82 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %78, i64 %81
  %83 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %82, align 8
  %84 = and i64 %76, 127
  %85 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %83, i64 %84
  %86 = bitcast %"struct.re2::WalkState"* %85 to i8*
  br label %87

87:                                               ; preds = %75, %80
  %88 = phi i8* [ %86, %80 ], [ null, %75 ]
  %89 = bitcast i8* %88 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %1, %"class.re2::Regexp"** %89, align 8
  %90 = getelementptr inbounds i8, i8* %88, i64 8
  %91 = bitcast i8* %90 to i32*
  store i32 -1, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %88, i64 12
  %93 = bitcast i8* %92 to i32*
  store i32 %2, i32* %93, align 4
  %94 = getelementptr inbounds i8, i8* %88, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false)
  %95 = load i64, i64* %62, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %62, align 8
  %97 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 3
  %98 = bitcast %"class.re2::Regexp::Walker"* %0 to i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)***
  %99 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %48, i64 0, i32 0
  %100 = bitcast %"class.re2::Regexp::Walker"* %0 to i32 (%"class.re2::Regexp::Walker"*, i32)***
  %101 = bitcast %"class.re2::Regexp::Walker"* %0 to i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)***
  %102 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 2
  %103 = bitcast %"class.re2::Regexp::Walker"* %0 to i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)***
  br label %104

104:                                              ; preds = %321, %87
  %105 = phi i64 [ %322, %321 ], [ %96, %87 ]
  %106 = load i64, i64* %60, align 8
  %107 = add i64 %105, -1
  %108 = add i64 %107, %106
  %109 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %110 = lshr i64 %108, 7
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %109, i64 %110
  %112 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %111, align 8
  %113 = and i64 %108, 127
  %114 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 0
  %115 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %114, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, -1
  br i1 %118, label %119, label %153

119:                                              ; preds = %104
  %120 = load i32, i32* %97, align 4
  %121 = add nsw i32 %120, -1
  store i32 %121, i32* %97, align 4
  %122 = icmp slt i32 %120, 1
  br i1 %122, label %123, label %130

123:                                              ; preds = %119
  store i8 1, i8* %102, align 8
  %124 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)**, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)*** %103, align 8
  %127 = getelementptr inbounds i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)** %126, i64 5
  %128 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32)** %127, align 8
  %129 = call i32 %128(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %115, i32 %125) #18
  br label %270

130:                                              ; preds = %119
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #18
  store i8 0, i8* %6, align 1
  %131 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)**, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)*** %98, align 8
  %134 = getelementptr inbounds i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)** %133, i64 2
  %135 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i8*)** %134, align 8
  %136 = call i32 %135(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %115, i32 %132, i8* nonnull %6) #18
  %137 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 3
  store i32 %136, i32* %137, align 8
  %138 = load i8, i8* %6, align 1, !range !6
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %130
  store i32 0, i32* %116, align 8
  %141 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 5
  store i32* null, i32** %141, align 8
  %142 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %115, i64 0, i32 4
  %143 = load i16, i16* %142, align 2
  switch i16 %143, label %146 [
    i16 1, label %144
    i16 0, label %151
  ]

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 4
  store i32* %145, i32** %141, align 8
  br label %151

146:                                              ; preds = %140
  %147 = zext i16 %143 to i64
  %148 = shl nuw nsw i64 %147, 2
  %149 = call i8* @_Znam(i64 %148) #17
  %150 = bitcast i32** %141 to i8**
  store i8* %149, i8** %150, align 8
  br label %151

151:                                              ; preds = %140, %146, %144
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #18
  br label %153

152:                                              ; preds = %130
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #18
  br label %270

153:                                              ; preds = %151, %104
  %154 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %115, i64 0, i32 4
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %153
  %158 = load i32, i32* %116, align 8
  br label %251

159:                                              ; preds = %153
  %160 = icmp eq i16 %155, 1
  %161 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %115, i64 0, i32 5
  br i1 %160, label %162, label %164

162:                                              ; preds = %159
  %163 = bitcast %union.anon.1* %161 to %"class.re2::Regexp"**
  br label %167

164:                                              ; preds = %159
  %165 = getelementptr inbounds %union.anon.1, %union.anon.1* %161, i64 0, i32 0
  %166 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %165, align 8
  br label %167

167:                                              ; preds = %162, %164
  %168 = phi %"class.re2::Regexp"** [ %163, %162 ], [ %166, %164 ]
  %169 = load i32, i32* %116, align 8
  %170 = zext i16 %155 to i32
  %171 = icmp slt i32 %169, %170
  br i1 %171, label %172, label %251

172:                                              ; preds = %167
  %173 = icmp sgt i32 %169, 0
  %174 = and i1 %173, %3
  br i1 %174, label %180, label %175

175:                                              ; preds = %172
  %176 = sext i32 %169 to i64
  %177 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %168, i64 %176
  %178 = bitcast %"class.re2::Regexp"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  br label %206

180:                                              ; preds = %172
  %181 = add nsw i32 %169, -1
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %168, i64 %182
  %184 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %183, align 8
  %185 = sext i32 %169 to i64
  %186 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %168, i64 %185
  %187 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %186, align 8
  %188 = icmp eq %"class.re2::Regexp"* %184, %187
  br i1 %188, label %191, label %189

189:                                              ; preds = %180
  %190 = ptrtoint %"class.re2::Regexp"* %187 to i64
  br label %206

191:                                              ; preds = %180
  %192 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 5
  %193 = load i32*, i32** %192, align 8
  %194 = getelementptr inbounds i32, i32* %193, i64 %182
  %195 = load i32, i32* %194, align 4
  %196 = load i32 (%"class.re2::Regexp::Walker"*, i32)**, i32 (%"class.re2::Regexp::Walker"*, i32)*** %100, align 8
  %197 = getelementptr inbounds i32 (%"class.re2::Regexp::Walker"*, i32)*, i32 (%"class.re2::Regexp::Walker"*, i32)** %196, i64 4
  %198 = load i32 (%"class.re2::Regexp::Walker"*, i32)*, i32 (%"class.re2::Regexp::Walker"*, i32)** %197, align 8
  %199 = call i32 %198(%"class.re2::Regexp::Walker"* %0, i32 %195) #18
  %200 = load i32*, i32** %192, align 8
  %201 = load i32, i32* %116, align 8
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i32, i32* %200, i64 %202
  store i32 %199, i32* %203, align 4
  %204 = load i32, i32* %116, align 8
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %116, align 8
  br label %321

206:                                              ; preds = %189, %175
  %207 = phi i64 [ %179, %175 ], [ %190, %189 ]
  %208 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 3
  %209 = load i32, i32* %208, align 8
  %210 = load i64, i64* %50, align 8
  %211 = load i64, i64* %53, align 8
  %212 = sub i64 %210, %211
  %213 = icmp eq i64 %212, 0
  %214 = shl i64 %212, 4
  %215 = add i64 %214, -1
  %216 = select i1 %213, i64 0, i64 %215
  %217 = load i64, i64* %60, align 8
  %218 = load i64, i64* %62, align 8
  %219 = add i64 %218, %217
  %220 = icmp eq i64 %216, %219
  %221 = inttoptr i64 %211 to %"struct.re2::WalkState"**
  %222 = inttoptr i64 %210 to %"struct.re2::WalkState"**
  br i1 %220, label %223, label %229

223:                                              ; preds = %206
  call void @_ZNSt3__15dequeIN3re29WalkStateIiEENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %99) #18
  %224 = load i64, i64* %62, align 8
  %225 = load i64, i64* %60, align 8
  %226 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %227 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %228 = add i64 %225, %224
  br label %229

229:                                              ; preds = %223, %206
  %230 = phi i64 [ %228, %223 ], [ %219, %206 ]
  %231 = phi %"struct.re2::WalkState"** [ %227, %223 ], [ %222, %206 ]
  %232 = phi %"struct.re2::WalkState"** [ %226, %223 ], [ %221, %206 ]
  %233 = icmp eq %"struct.re2::WalkState"** %231, %232
  br i1 %233, label %241, label %234

234:                                              ; preds = %229
  %235 = lshr i64 %230, 7
  %236 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %232, i64 %235
  %237 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %236, align 8
  %238 = and i64 %230, 127
  %239 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %237, i64 %238
  %240 = bitcast %"struct.re2::WalkState"* %239 to i8*
  br label %241

241:                                              ; preds = %229, %234
  %242 = phi i8* [ %240, %234 ], [ null, %229 ]
  %243 = bitcast i8* %242 to i64*
  store i64 %207, i64* %243, align 8
  %244 = getelementptr inbounds i8, i8* %242, i64 8
  %245 = bitcast i8* %244 to i32*
  store i32 -1, i32* %245, align 8
  %246 = getelementptr inbounds i8, i8* %242, i64 12
  %247 = bitcast i8* %246 to i32*
  store i32 %209, i32* %247, align 4
  %248 = getelementptr inbounds i8, i8* %242, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 16, i1 false)
  %249 = load i64, i64* %62, align 8
  %250 = add i64 %249, 1
  store i64 %250, i64* %62, align 8
  br label %321

251:                                              ; preds = %157, %167
  %252 = phi i32 [ %158, %157 ], [ %169, %167 ]
  %253 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 2
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 3
  %256 = load i32, i32* %255, align 8
  %257 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %112, i64 %113, i32 5
  %258 = load i32*, i32** %257, align 8
  %259 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)**, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)*** %101, align 8
  %260 = getelementptr inbounds i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)** %259, i64 3
  %261 = load i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)*, i32 (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i32, i32, i32*, i32)** %260, align 8
  %262 = call i32 %261(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %115, i32 %254, i32 %256, i32* %258, i32 %252) #18
  %263 = load i16, i16* %154, align 2
  %264 = icmp ugt i16 %263, 1
  br i1 %264, label %265, label %270

265:                                              ; preds = %251
  %266 = load i32*, i32** %257, align 8
  %267 = icmp eq i32* %266, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = bitcast i32* %266 to i8*
  call void @_ZdaPv(i8* %269) #17
  br label %270

270:                                              ; preds = %152, %251, %268, %265, %123
  %271 = phi i32 [ %129, %123 ], [ %262, %265 ], [ %262, %268 ], [ %262, %251 ], [ %136, %152 ]
  %272 = load i64, i64* %62, align 8
  %273 = load i64, i64* %60, align 8
  %274 = add i64 %272, -1
  store i64 %274, i64* %62, align 8
  %275 = load i64, i64* %50, align 8
  %276 = load i64, i64* %53, align 8
  %277 = sub i64 %275, %276
  %278 = icmp eq i64 %277, 0
  %279 = shl i64 %277, 4
  %280 = add i64 %279, -1
  %281 = select i1 %278, i64 0, i64 %280
  %282 = sub i64 1, %272
  %283 = sub i64 %282, %273
  %284 = add i64 %283, %281
  %285 = icmp ult i64 %284, 256
  br i1 %285, label %294, label %286

286:                                              ; preds = %270
  %287 = inttoptr i64 %275 to %"struct.re2::WalkState"**
  %288 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %287, i64 -1
  %289 = bitcast %"struct.re2::WalkState"** %288 to i8**
  %290 = load i8*, i8** %289, align 8
  call void @_ZdlPv(i8* %290) #17
  %291 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %292 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %291, i64 -1
  store %"struct.re2::WalkState"** %292, %"struct.re2::WalkState"*** %49, align 8
  %293 = load i64, i64* %62, align 8
  br label %294

294:                                              ; preds = %270, %286
  %295 = phi i64 [ %274, %270 ], [ %293, %286 ]
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %323, label %297

297:                                              ; preds = %294
  %298 = load i64, i64* %60, align 8
  %299 = add i64 %295, -1
  %300 = add i64 %299, %298
  %301 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %302 = lshr i64 %300, 7
  %303 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %301, i64 %302
  %304 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %303, align 8
  %305 = and i64 %300, 127
  %306 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %304, i64 %305, i32 5
  %307 = load i32*, i32** %306, align 8
  %308 = icmp eq i32* %307, null
  br i1 %308, label %314, label %309

309:                                              ; preds = %297
  %310 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %304, i64 %305, i32 1
  %311 = load i32, i32* %310, align 8
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds i32, i32* %307, i64 %312
  br label %316

314:                                              ; preds = %297
  %315 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %304, i64 %305, i32 4
  br label %316

316:                                              ; preds = %314, %309
  %317 = phi i32* [ %315, %314 ], [ %313, %309 ]
  store i32 %271, i32* %317, align 4
  %318 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %304, i64 %305, i32 1
  %319 = load i32, i32* %318, align 8
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %318, align 8
  br label %321

321:                                              ; preds = %191, %241, %316
  %322 = load i64, i64* %62, align 8
  br label %104

323:                                              ; preds = %294, %8
  %324 = phi i32 [ %2, %8 ], [ %271, %294 ]
  ret i32 %324
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3re29WalkStateIiEENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.re2::WalkState"*, align 8
  %3 = alloca %"struct.re2::WalkState"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.43", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 127
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -128
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = bitcast %"struct.re2::WalkState"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 1
  store %"struct.re2::WalkState"** %14, %"struct.re2::WalkState"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %17, align 8
  %19 = icmp eq %"struct.re2::WalkState"** %16, %18
  %20 = ptrtoint %"struct.re2::WalkState"** %18 to i64
  %21 = bitcast %"struct.re2::WalkState"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  %25 = icmp ugt %"struct.re2::WalkState"** %14, %24
  %26 = ptrtoint %"struct.re2::WalkState"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %14, i64 %32
  %34 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.re2::WalkState"** %33 to i8*
  %40 = bitcast %"struct.re2::WalkState"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #18
  %41 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.re2::WalkState"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %36
  store %"struct.re2::WalkState"** %44, %"struct.re2::WalkState"*** %15, align 8
  %45 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %43, i64 %32
  store %"struct.re2::WalkState"** %45, %"struct.re2::WalkState"*** %10, align 8
  %46 = bitcast %"struct.re2::WalkState"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.re2::WalkState"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #20
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #17
  %60 = bitcast i8* %59 to %"struct.re2::WalkState"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %57
  %63 = ptrtoint %"struct.re2::WalkState"** %62 to i64
  %64 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %53
  %65 = ptrtoint %"struct.re2::WalkState"** %64 to i64
  %66 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %67 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.re2::WalkState"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.re2::WalkState"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.re2::WalkState"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %79, i64 1
  %87 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  %88 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !10

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.re2::WalkState"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.re2::WalkState"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.re2::WalkState"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.re2::WalkState"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 1
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 1
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 2
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 2
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 3
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 3
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 4
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 4
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 5
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 5
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 6
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 6
  %132 = bitcast %"struct.re2::WalkState"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.re2::WalkState"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 7
  %136 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 7
  %137 = bitcast %"struct.re2::WalkState"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.re2::WalkState"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 8
  %141 = ptrtoint %"struct.re2::WalkState"** %140 to i64
  %142 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 8
  %143 = icmp eq %"struct.re2::WalkState"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.re2::WalkState"** %70 to i64
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.re2::WalkState"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.re2::WalkState"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.re2::WalkState"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #17
  %156 = bitcast %"struct.re2::WalkState"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %161 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %160, i64 1
  store %"struct.re2::WalkState"** %161, %"struct.re2::WalkState"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.re2::WalkState"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.re2::WalkState"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.re2::WalkState"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.re2::WalkState"**
  %181 = inttoptr i64 %169 to %"struct.re2::WalkState"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.re2::WalkState"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #18
  %186 = tail call i8* @_Znwm(i64 4096) #17
  %187 = bitcast %"struct.re2::WalkState"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #18
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.re2::WalkState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #18
  %190 = tail call i8* @_Znwm(i64 4096) #17
  %191 = bitcast %"struct.re2::WalkState"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #18
  %192 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %193 = bitcast %"struct.re2::WalkState"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %192, i64 1
  store %"struct.re2::WalkState"** %195, %"struct.re2::WalkState"*** %167, align 8
  %196 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %197 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %172, align 8
  %198 = icmp eq %"struct.re2::WalkState"** %196, %197
  %199 = ptrtoint %"struct.re2::WalkState"** %197 to i64
  %200 = bitcast %"struct.re2::WalkState"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  %204 = icmp ugt %"struct.re2::WalkState"** %195, %203
  %205 = ptrtoint %"struct.re2::WalkState"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %195, i64 %211
  %213 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.re2::WalkState"** %212 to i8*
  %219 = bitcast %"struct.re2::WalkState"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #18
  %220 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.re2::WalkState"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %212, i64 %215
  store %"struct.re2::WalkState"** %223, %"struct.re2::WalkState"*** %164, align 8
  %224 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %222, i64 %211
  store %"struct.re2::WalkState"** %224, %"struct.re2::WalkState"*** %167, align 8
  %225 = bitcast %"struct.re2::WalkState"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #20
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #17
  %237 = bitcast i8* %236 to %"struct.re2::WalkState"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %234
  %240 = ptrtoint %"struct.re2::WalkState"** %239 to i64
  %241 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %230
  %242 = ptrtoint %"struct.re2::WalkState"** %241 to i64
  %243 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %244 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.re2::WalkState"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.re2::WalkState"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.re2::WalkState"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %256, i64 1
  %264 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  %265 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !12

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.re2::WalkState"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.re2::WalkState"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.re2::WalkState"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.re2::WalkState"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.re2::WalkState"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 1
  %283 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 1
  %284 = bitcast %"struct.re2::WalkState"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.re2::WalkState"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 2
  %288 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 2
  %289 = bitcast %"struct.re2::WalkState"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.re2::WalkState"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 3
  %293 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 3
  %294 = bitcast %"struct.re2::WalkState"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.re2::WalkState"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 4
  %298 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 4
  %299 = bitcast %"struct.re2::WalkState"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.re2::WalkState"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 5
  %303 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 5
  %304 = bitcast %"struct.re2::WalkState"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.re2::WalkState"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 6
  %308 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 6
  %309 = bitcast %"struct.re2::WalkState"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.re2::WalkState"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 7
  %313 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 7
  %314 = bitcast %"struct.re2::WalkState"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.re2::WalkState"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 8
  %318 = ptrtoint %"struct.re2::WalkState"** %317 to i64
  %319 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 8
  %320 = icmp eq %"struct.re2::WalkState"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.re2::WalkState"** %247 to i64
  %323 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.re2::WalkState"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.re2::WalkState"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.re2::WalkState"** %325 to i8*
  call void @_ZdlPv(i8* %330) #17
  %331 = bitcast %"struct.re2::WalkState"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %336 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %335, i64 1
  store %"struct.re2::WalkState"** %336, %"struct.re2::WalkState"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.43"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #18
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.43"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.re2::WalkState"** null, %"struct.re2::WalkState"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.18"** %342 to %"class.std::__1::__compressed_pair.15"**
  store %"class.std::__1::__compressed_pair.15"* %346, %"class.std::__1::__compressed_pair.15"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #20
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #17
  %354 = bitcast i8* %353 to %"struct.re2::WalkState"**
  %355 = bitcast %"struct.std::__1::__split_buffer.43"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %171
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %339, align 8
  %357 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %345
  store %"struct.re2::WalkState"** %357, %"struct.re2::WalkState"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #17
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.re2::WalkState"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.re2::WalkState"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.re2::WalkState"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %356, i64 %370
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %339, align 8
  %372 = ptrtoint %"struct.re2::WalkState"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #20
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.43"* %4 to i64*
  %382 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #17
  %386 = bitcast i8* %385 to %"struct.re2::WalkState"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %383
  %389 = ptrtoint %"struct.re2::WalkState"** %388 to i64
  %390 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %377
  %391 = ptrtoint %"struct.re2::WalkState"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #17
  %394 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %395 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %396 = ptrtoint %"struct.re2::WalkState"** %395 to i64
  %397 = ptrtoint %"struct.re2::WalkState"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.re2::WalkState"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.re2::WalkState"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.re2::WalkState"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.re2::WalkState"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %406, i64 1
  store %"struct.re2::WalkState"** %408, %"struct.re2::WalkState"*** %340, align 8
  %409 = icmp eq %"struct.re2::WalkState"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.re2::WalkState"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.43"* %4 to i64*
  %413 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %414 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %415 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.re2::WalkState"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.43"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.re2::WalkState"**
  %441 = inttoptr i64 %434 to %"struct.re2::WalkState"**
  %442 = icmp eq %"struct.re2::WalkState"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 -1
  %445 = ptrtoint %"struct.re2::WalkState"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 %448
  store %"struct.re2::WalkState"** %449, %"struct.re2::WalkState"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #17
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #18
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.re2::WalkState"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.43"* nonnull %4, %"struct.re2::WalkState"** dereferenceable(8) %457)
  %458 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %459 = icmp eq %"struct.re2::WalkState"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  %9 = bitcast %"struct.re2::WalkState"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  %15 = icmp ugt %"struct.re2::WalkState"** %12, %14
  %16 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %12, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.re2::WalkState"** %23 to i8*
  %30 = bitcast %"struct.re2::WalkState"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #18
  %31 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.re2::WalkState"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %26
  store %"struct.re2::WalkState"** %34, %"struct.re2::WalkState"*** %3, align 8
  %35 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %22
  store %"struct.re2::WalkState"** %35, %"struct.re2::WalkState"*** %11, align 8
  %36 = bitcast %"struct.re2::WalkState"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.re2::WalkState"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #17
  %50 = bitcast i8* %49 to %"struct.re2::WalkState"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %47
  %53 = ptrtoint %"struct.re2::WalkState"** %52 to i64
  %54 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %43
  %55 = ptrtoint %"struct.re2::WalkState"** %54 to i64
  %56 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.re2::WalkState"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.re2::WalkState"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.re2::WalkState"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %69, i64 1
  %77 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  %78 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !13

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.re2::WalkState"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.re2::WalkState"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.re2::WalkState"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.re2::WalkState"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.re2::WalkState"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 1
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 1
  %97 = bitcast %"struct.re2::WalkState"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.re2::WalkState"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 2
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 2
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.re2::WalkState"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 3
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 3
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 4
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 4
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 5
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 5
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 6
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 6
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 7
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 7
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 8
  %131 = ptrtoint %"struct.re2::WalkState"** %130 to i64
  %132 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 8
  %133 = icmp eq %"struct.re2::WalkState"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.re2::WalkState"** %60 to i64
  %136 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.re2::WalkState"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.re2::WalkState"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.re2::WalkState"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.re2::WalkState"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  %146 = bitcast %"struct.re2::WalkState"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %153 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %152, i64 1
  store %"struct.re2::WalkState"** %153, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #18
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #17
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !14

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIiEERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.43"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #18
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.43"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #17
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !15

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3re25FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRPPNS1_6RegexpERiEEEvDpOT_(%"class.std::__1::vector"*, %"class.re2::Regexp"*** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.re2::Frame"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 48
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 384307168202282325
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #20
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.re2::Frame"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 48
  %21 = icmp ult i64 %20, 192153584101141162
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 384307168202282325, %15 ]
  %29 = mul i64 %28, 48
  %30 = tail call i8* @_Znwm(i64 %29) #17
  %31 = bitcast i8* %30 to %"struct.re2::Frame"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"struct.re2::Frame"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %34, i64 %10
  %36 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %34, i64 %33
  %37 = ptrtoint %"struct.re2::Frame"* %36 to i64
  %38 = bitcast %"class.re2::Regexp"*** %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = load i32, i32* %2, align 4
  %41 = bitcast %"struct.re2::Frame"* %35 to i64*
  store i64 %39, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %34, i64 %10, i32 1
  store i32 %40, i32* %42, align 8
  %43 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %34, i64 %10, i32 2
  %44 = bitcast i32* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 28, i1 false) #18
  %45 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %35, i64 1
  %46 = ptrtoint %"struct.re2::Frame"* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %48 = load %"struct.re2::Frame"*, %"struct.re2::Frame"** %47, align 8
  %49 = load %"struct.re2::Frame"*, %"struct.re2::Frame"** %4, align 8
  %50 = icmp eq %"struct.re2::Frame"* %49, %48
  br i1 %50, label %51, label %53

51:                                               ; preds = %32
  %52 = ptrtoint %"struct.re2::Frame"* %48 to i64
  br label %84

53:                                               ; preds = %32, %53
  %54 = phi %"struct.re2::Frame"* [ %56, %53 ], [ %35, %32 ]
  %55 = phi %"struct.re2::Frame"* [ %57, %53 ], [ %49, %32 ]
  %56 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %54, i64 -1
  %57 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %55, i64 -1
  %58 = bitcast %"struct.re2::Frame"* %56 to i8*
  %59 = bitcast %"struct.re2::Frame"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #18
  %60 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %54, i64 -1, i32 3
  %61 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %55, i64 -1, i32 3
  %62 = bitcast %"class.std::__1::vector.24"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #18
  %63 = bitcast %"class.std::__1::vector.24"* %61 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.std::__1::vector.24"* %60 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %55, i64 -1, i32 3, i32 0, i32 1
  %67 = bitcast %"struct.re2::Splice"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %54, i64 -1, i32 3, i32 0, i32 1
  %70 = bitcast %"struct.re2::Splice"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %55, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast %"struct.re2::Splice"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %54, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast %"struct.re2::Splice"** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast %"class.std::__1::vector.24"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #18
  %77 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %54, i64 -1, i32 4
  %78 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %55, i64 -1, i32 4
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = icmp eq %"struct.re2::Frame"* %57, %48
  br i1 %80, label %81, label %53

81:                                               ; preds = %53
  %82 = load i64, i64* %7, align 8
  %83 = load %"struct.re2::Frame"*, %"struct.re2::Frame"** %4, align 8
  br label %84

84:                                               ; preds = %51, %81
  %85 = phi %"struct.re2::Frame"* [ %48, %51 ], [ %83, %81 ]
  %86 = phi %"struct.re2::Frame"* [ %35, %51 ], [ %56, %81 ]
  %87 = phi i64 [ %52, %51 ], [ %82, %81 ]
  %88 = ptrtoint %"struct.re2::Frame"* %86 to i64
  store i64 %88, i64* %7, align 8
  store i64 %46, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %89 = inttoptr i64 %87 to %"struct.re2::Frame"*
  %90 = icmp eq %"struct.re2::Frame"* %85, %89
  br i1 %90, label %104, label %91

91:                                               ; preds = %84, %102
  %92 = phi %"struct.re2::Frame"* [ %93, %102 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %92, i64 -1
  %94 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %92, i64 -1, i32 3, i32 0, i32 0
  %95 = load %"struct.re2::Splice"*, %"struct.re2::Splice"** %94, align 8
  %96 = icmp eq %"struct.re2::Splice"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = ptrtoint %"struct.re2::Splice"* %95 to i64
  %99 = getelementptr inbounds %"struct.re2::Frame", %"struct.re2::Frame"* %92, i64 -1, i32 3, i32 0, i32 1
  %100 = bitcast %"struct.re2::Splice"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"struct.re2::Splice"* %95 to i8*
  tail call void @_ZdlPv(i8* %101) #17
  br label %102

102:                                              ; preds = %97, %91
  %103 = icmp eq %"struct.re2::Frame"* %93, %89
  br i1 %103, label %104, label %91

104:                                              ; preds = %102, %84
  %105 = icmp eq i64 %87, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %107) #17
  br label %108

108:                                              ; preds = %104, %106
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind }
attributes #19 = { cold nounwind }
attributes #20 = { noreturn nounwind }
attributes #21 = { nounwind readonly }
attributes #22 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK3re211StringPiececvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!9 = distinct !{!9, !"_ZNK3re211StringPiececvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11}
!15 = distinct !{!15, !11}
