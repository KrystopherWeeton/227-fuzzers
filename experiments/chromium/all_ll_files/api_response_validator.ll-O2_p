; ModuleID = '../../extensions/renderer/bindings/api_response_validator.cc'
source_filename = "../../extensions/renderer/bindings/api_response_validator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.extensions::APIResponseValidator::TestHandler" = type { %"class.base::RepeatingCallback" }
%"class.extensions::APIResponseValidator" = type { %"class.extensions::APITypeReferenceMap"* }
%"class.extensions::APITypeReferenceMap" = type { %"class.base::RepeatingCallback.1", %"class.std::__1::map", %"class.std::__1::map.6", %"class.std::__1::map.6", %"class.std::__1::map.6", %"class.std::__1::map.6" }
%"class.base::RepeatingCallback.1" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.std::__1::map.6" = type { %"class.std::__1::__tree.7" }
%"class.std::__1::__tree.7" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.v8::Context" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::Local.20"*, %"class.v8::Local.20"*, %"class.std::__1::__compressed_pair.21" }
%"class.v8::Local.20" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::Local.20"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.extensions::APISignature" = type { %"class.std::__1::vector.26", i32, %"class.extensions::BindingAccessChecker"*, i8, %"class.std::__1::basic_string" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr"* }
%"class.extensions::BindingAccessChecker" = type opaque

@_ZN10extensions12_GLOBAL__N_129g_failure_handler_for_testingE = internal unnamed_addr global %"class.base::RepeatingCallback"* null, align 8

@_ZN10extensions20APIResponseValidator11TestHandlerC1EN4base17RepeatingCallbackIFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_EEE = hidden unnamed_addr alias void (%"class.extensions::APIResponseValidator::TestHandler"*, %"class.base::RepeatingCallback"*), void (%"class.extensions::APIResponseValidator::TestHandler"*, %"class.base::RepeatingCallback"*)* @_ZN10extensions20APIResponseValidator11TestHandlerC2EN4base17RepeatingCallbackIFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_EEE
@_ZN10extensions20APIResponseValidator11TestHandlerD1Ev = hidden unnamed_addr alias void (%"class.extensions::APIResponseValidator::TestHandler"*), void (%"class.extensions::APIResponseValidator::TestHandler"*)* @_ZN10extensions20APIResponseValidator11TestHandlerD2Ev
@_ZN10extensions20APIResponseValidatorC1EPKNS_19APITypeReferenceMapE = hidden unnamed_addr alias void (%"class.extensions::APIResponseValidator"*, %"class.extensions::APITypeReferenceMap"*), void (%"class.extensions::APIResponseValidator"*, %"class.extensions::APITypeReferenceMap"*)* @_ZN10extensions20APIResponseValidatorC2EPKNS_19APITypeReferenceMapE
@_ZN10extensions20APIResponseValidatorD1Ev = hidden unnamed_addr alias void (%"class.extensions::APIResponseValidator"*), void (%"class.extensions::APIResponseValidator"*)* @_ZN10extensions20APIResponseValidatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20APIResponseValidator11TestHandlerC2EN4base17RepeatingCallbackIFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_EEE(%"class.extensions::APIResponseValidator::TestHandler"*, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::APIResponseValidator::TestHandler", %"class.extensions::APIResponseValidator::TestHandler"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.extensions::APIResponseValidator::TestHandler", %"class.extensions::APIResponseValidator::TestHandler"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %4, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %5) #7
  store %"class.base::RepeatingCallback"* %3, %"class.base::RepeatingCallback"** @_ZN10extensions12_GLOBAL__N_129g_failure_handler_for_testingE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20APIResponseValidator11TestHandlerD2Ev(%"class.extensions::APIResponseValidator::TestHandler"*) unnamed_addr #0 align 2 {
  store %"class.base::RepeatingCallback"* null, %"class.base::RepeatingCallback"** @_ZN10extensions12_GLOBAL__N_129g_failure_handler_for_testingE, align 8
  %2 = getelementptr inbounds %"class.extensions::APIResponseValidator::TestHandler", %"class.extensions::APIResponseValidator::TestHandler"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions20APIResponseValidatorC2EPKNS_19APITypeReferenceMapE(%"class.extensions::APIResponseValidator"* nocapture, %"class.extensions::APITypeReferenceMap"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.extensions::APIResponseValidator", %"class.extensions::APIResponseValidator"* %0, i64 0, i32 0
  store %"class.extensions::APITypeReferenceMap"* %1, %"class.extensions::APITypeReferenceMap"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions20APIResponseValidatorD2Ev(%"class.extensions::APIResponseValidator"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20APIResponseValidator16ValidateResponseEN2v85LocalINS1_7ContextEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_6vectorINS2_INS1_5ValueEEENS9_ISG_EEEESD_NS0_12CallbackTypeE(%"class.extensions::APIResponseValidator"* nocapture readonly, %"class.v8::Context"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq i32 %5, 1
  br i1 %8, label %46, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %46

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.extensions::APIResponseValidator", %"class.extensions::APIResponseValidator"* %0, i64 0, i32 0
  %21 = load %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APITypeReferenceMap"** %20, align 8
  %22 = tail call %"class.extensions::APISignature"* @_ZNK10extensions19APITypeReferenceMap20GetCallbackSignatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::APITypeReferenceMap"* %21, %"class.std::__1::basic_string"* dereferenceable(24) %2) #7
  %23 = icmp eq %"class.extensions::APISignature"* %22, null
  br i1 %23, label %46, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #7
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #7
  %27 = load %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APITypeReferenceMap"** %20, align 8
  %28 = call zeroext i1 @_ZNK10extensions12APISignature16ValidateResponseEN2v85LocalINS1_7ContextEEERKNSt3__16vectorINS2_INS1_5ValueEEENS5_9allocatorIS8_EEEERKNS_19APITypeReferenceMapEPNS5_12basic_stringIcNS5_11char_traitsIcEENS9_IcEEEE(%"class.extensions::APISignature"* nonnull %22, %"class.v8::Context"* %1, %"class.std::__1::vector"* dereferenceable(24) %3, %"class.extensions::APITypeReferenceMap"* dereferenceable(128) %27, %"class.std::__1::basic_string"* nonnull %7) #7
  br i1 %28, label %38, label %29

29:                                               ; preds = %24
  %30 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** @_ZN10extensions12_GLOBAL__N_129g_failure_handler_for_testingE, align 8
  %31 = icmp eq %"class.base::RepeatingCallback"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %33, align 8
  %35 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %34, i64 0, i32 1
  %36 = bitcast void ()** %35 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**
  %37 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %36, align 8
  call void %37(%"class.base::internal::BindStateBase"* %34, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #7
  br label %38

38:                                               ; preds = %32, %29, %24
  %39 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #7
  br label %46

46:                                               ; preds = %45, %19, %9, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.extensions::APISignature"* @_ZNK10extensions19APITypeReferenceMap20GetCallbackSignatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::APITypeReferenceMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

declare zeroext i1 @_ZNK10extensions12APISignature16ValidateResponseEN2v85LocalINS1_7ContextEEERKNSt3__16vectorINS2_INS1_5ValueEEENS5_9allocatorIS8_EEEERKNS_19APITypeReferenceMapEPNS5_12basic_stringIcNS5_11char_traitsIcEENS9_IcEEEE(%"class.extensions::APISignature"*, %"class.v8::Context"*, %"class.std::__1::vector"* dereferenceable(24), %"class.extensions::APITypeReferenceMap"* dereferenceable(128), %"class.std::__1::basic_string"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
