; ModuleID = '../../third_party/skia/src/core/SkYUVAInfo.cpp'
source_filename = "../../third_party/skia/src/core/SkYUVAInfo.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.PlaneAndIndex = type { i32, i32 }
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%struct.SkISize = type { i32, i32 }
%"struct.std::__1::array" = type { [4 x %"struct.SkYUVAInfo::YUVALocation"] }
%"struct.SkYUVAInfo::YUVALocation" = type { i32, i32 }

@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 1, i32 0 }, %struct.PlaneAndIndex { i32 2, i32 0 }, %struct.PlaneAndIndex { i32 -1, i32 -1 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_0 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 2, i32 0 }, %struct.PlaneAndIndex { i32 1, i32 0 }, %struct.PlaneAndIndex { i32 -1, i32 -1 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_1 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 1, i32 0 }, %struct.PlaneAndIndex { i32 1, i32 1 }, %struct.PlaneAndIndex { i32 -1, i32 -1 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_2 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 1, i32 1 }, %struct.PlaneAndIndex { i32 1, i32 0 }, %struct.PlaneAndIndex { i32 -1, i32 -1 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_3 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 0, i32 1 }, %struct.PlaneAndIndex { i32 0, i32 2 }, %struct.PlaneAndIndex { i32 -1, i32 -1 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_4 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex { i32 0, i32 1 }, %struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 0, i32 2 }, %struct.PlaneAndIndex { i32 -1, i32 -1 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_5 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 1, i32 0 }, %struct.PlaneAndIndex { i32 2, i32 0 }, %struct.PlaneAndIndex { i32 3, i32 0 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_6 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 2, i32 0 }, %struct.PlaneAndIndex { i32 1, i32 0 }, %struct.PlaneAndIndex { i32 3, i32 0 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_7 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 1, i32 0 }, %struct.PlaneAndIndex { i32 1, i32 1 }, %struct.PlaneAndIndex { i32 2, i32 0 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_8 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 1, i32 1 }, %struct.PlaneAndIndex { i32 1, i32 0 }, %struct.PlaneAndIndex { i32 2, i32 0 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_9 = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 0, i32 1 }, %struct.PlaneAndIndex { i32 0, i32 2 }, %struct.PlaneAndIndex { i32 0, i32 3 }], align 16
@_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices__10_ = internal unnamed_addr constant [4 x %struct.PlaneAndIndex] [%struct.PlaneAndIndex { i32 0, i32 1 }, %struct.PlaneAndIndex zeroinitializer, %struct.PlaneAndIndex { i32 0, i32 2 }, %struct.PlaneAndIndex { i32 0, i32 3 }], align 16
@.ref.tmp = private unnamed_addr constant %class.SkYUVAInfo { %struct.SkISize zeroinitializer, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0 }, align 4
@switch.table._ZN10SkYUVAInfo18SubsamplingFactorsENS_11SubsamplingE = private unnamed_addr constant [7 x i64] [i64 0, i64 1, i64 2, i64 2, i64 1, i64 4, i64 4], align 8
@switch.table._ZN10SkYUVAInfo18SubsamplingFactorsENS_11SubsamplingE.1 = private unnamed_addr constant [7 x i64] [i64 0, i64 4294967296, i64 4294967296, i64 8589934592, i64 8589934592, i64 4294967296, i64 8589934592], align 8
@switch.table._ZN10SkYUVAInfo23PlaneSubsamplingFactorsENS_11PlaneConfigENS_11SubsamplingEi = private unnamed_addr constant [13 x i32] [i32 0, i32 3, i32 3, i32 2, i32 2, i32 1, i32 1, i32 4, i32 4, i32 3, i32 3, i32 1, i32 1], align 4
@switch.table._ZN10SkYUVAInfo23PlaneSubsamplingFactorsENS_11PlaneConfigENS_11SubsamplingEi.2 = private unnamed_addr constant [6 x i64] [i64 1, i64 2, i64 2, i64 1, i64 4, i64 4], align 8
@switch.table._ZN10SkYUVAInfo23PlaneSubsamplingFactorsENS_11PlaneConfigENS_11SubsamplingEi.3 = private unnamed_addr constant [6 x i64] [i64 4294967296, i64 4294967296, i64 8589934592, i64 8589934592, i64 4294967296, i64 8589934592], align 8

@_ZN10SkYUVAInfoC1E7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkYUVColorSpace15SkEncodedOriginNS_6SitingES5_ = hidden unnamed_addr alias void (%class.SkYUVAInfo*, i64, i32, i32, i32, i32, i32, i32), void (%class.SkYUVAInfo*, i64, i32, i32, i32, i32, i32, i32)* @_ZN10SkYUVAInfoC2E7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkYUVColorSpace15SkEncodedOriginNS_6SitingES5_

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10SkYUVAInfo18SubsamplingFactorsENS_11SubsamplingE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i32 %0, 7
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @llvm.trap()
  unreachable

4:                                                ; preds = %1
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [7 x i64], [7 x i64]* @switch.table._ZN10SkYUVAInfo18SubsamplingFactorsENS_11SubsamplingE, i64 0, i64 %5
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %0 to i64
  %9 = getelementptr inbounds [7 x i64], [7 x i64]* @switch.table._ZN10SkYUVAInfo18SubsamplingFactorsENS_11SubsamplingE.1, i64 0, i64 %8
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %10, %7
  ret i64 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10SkYUVAInfo23PlaneSubsamplingFactorsENS_11PlaneConfigENS_11SubsamplingEi(i32, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %0, 0
  %5 = icmp eq i32 %1, 0
  %6 = or i1 %4, %5
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = icmp eq i32 %1, 1
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = add i32 %0, -5
  %11 = icmp ult i32 %10, 8
  br i1 %11, label %45, label %12

12:                                               ; preds = %9, %7
  %13 = icmp slt i32 %2, 0
  br i1 %13, label %52, label %14

14:                                               ; preds = %45, %12
  %15 = icmp ult i32 %0, 13
  br i1 %15, label %17, label %16

16:                                               ; preds = %14
  tail call void @llvm.trap() #4
  unreachable

17:                                               ; preds = %14
  %18 = sext i32 %0 to i64
  %19 = getelementptr inbounds [13 x i32], [13 x i32]* @switch.table._ZN10SkYUVAInfo23PlaneSubsamplingFactorsENS_11PlaneConfigENS_11SubsamplingEi, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %2
  br i1 %21, label %52, label %22

22:                                               ; preds = %17
  switch i32 %0, label %41 [
    i32 0, label %23
    i32 1, label %26
    i32 2, label %26
    i32 7, label %26
    i32 8, label %26
    i32 3, label %24
    i32 4, label %24
    i32 9, label %24
    i32 10, label %24
  ]

23:                                               ; preds = %22
  tail call void @llvm.trap()
  unreachable

24:                                               ; preds = %22, %22, %22, %22
  %25 = icmp eq i32 %2, 1
  br i1 %25, label %29, label %41

26:                                               ; preds = %22, %22, %22, %22
  %27 = add nsw i32 %2, -1
  %28 = icmp ult i32 %27, 2
  br i1 %28, label %29, label %41

29:                                               ; preds = %24, %26
  %30 = add i32 %1, -1
  %31 = icmp ult i32 %30, 6
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @llvm.trap() #4
  unreachable

33:                                               ; preds = %29
  %34 = sext i32 %30 to i64
  %35 = getelementptr inbounds [6 x i64], [6 x i64]* @switch.table._ZN10SkYUVAInfo23PlaneSubsamplingFactorsENS_11PlaneConfigENS_11SubsamplingEi.2, i64 0, i64 %34
  %36 = load i64, i64* %35, align 8
  %37 = sext i32 %30 to i64
  %38 = getelementptr inbounds [6 x i64], [6 x i64]* @switch.table._ZN10SkYUVAInfo23PlaneSubsamplingFactorsENS_11PlaneConfigENS_11SubsamplingEi.3, i64 0, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = or i64 %39, %36
  br label %41

41:                                               ; preds = %22, %26, %24, %33
  %42 = phi i64 [ %40, %33 ], [ 4294967297, %24 ], [ 4294967297, %26 ], [ 4294967297, %22 ]
  %43 = and i64 %42, -4294967296
  %44 = and i64 %42, 4294967295
  br label %52

45:                                               ; preds = %9
  %46 = trunc i32 %10 to i8
  %47 = lshr i8 -61, %46
  %48 = and i8 %47, 1
  %49 = icmp ne i8 %48, 0
  %50 = icmp slt i32 %2, 0
  %51 = or i1 %49, %50
  br i1 %51, label %52, label %14

52:                                               ; preds = %45, %3, %17, %12, %41
  %53 = phi i64 [ %44, %41 ], [ 0, %12 ], [ 0, %17 ], [ 0, %3 ], [ 0, %45 ]
  %54 = phi i64 [ %43, %41 ], [ 0, %12 ], [ 0, %17 ], [ 0, %3 ], [ 0, %45 ]
  %55 = or i64 %54, %53
  ret i64 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkYUVAInfo15PlaneDimensionsE7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkEncodedOriginPS0_(i64, i32, i32, i32, %struct.SkISize*) local_unnamed_addr #0 align 2 {
  %6 = bitcast %struct.SkISize* %4 to i8*
  %7 = lshr i64 %0, 32
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 32, i1 false)
  %8 = trunc i64 %0 to i32
  %9 = trunc i64 %7 to i32
  %10 = icmp eq i32 %1, 0
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11
  br i1 %12, label %94, label %13

13:                                               ; preds = %5
  %14 = icmp eq i32 %2, 1
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = icmp sgt i32 %3, 4
  %17 = select i1 %16, i32 %9, i32 %8
  %18 = select i1 %16, i32 %8, i32 %9
  br label %45

19:                                               ; preds = %13
  %20 = add i32 %1, -5
  %21 = icmp ult i32 %20, 8
  br i1 %21, label %89, label %22

22:                                               ; preds = %89, %19
  %23 = icmp sgt i32 %3, 4
  %24 = select i1 %23, i32 %9, i32 %8
  %25 = select i1 %23, i32 %8, i32 %9
  switch i32 %2, label %45 [
    i32 6, label %40
    i32 5, label %37
    i32 2, label %26
    i32 3, label %29
    i32 4, label %34
  ]

26:                                               ; preds = %22
  %27 = add nsw i32 %24, 1
  %28 = sdiv i32 %27, 2
  br label %45

29:                                               ; preds = %22
  %30 = add nsw i32 %24, 1
  %31 = sdiv i32 %30, 2
  %32 = add nsw i32 %25, 1
  %33 = sdiv i32 %32, 2
  br label %45

34:                                               ; preds = %22
  %35 = add nsw i32 %25, 1
  %36 = sdiv i32 %35, 2
  br label %45

37:                                               ; preds = %22
  %38 = add nsw i32 %24, 3
  %39 = sdiv i32 %38, 4
  br label %45

40:                                               ; preds = %22
  %41 = add nsw i32 %24, 3
  %42 = sdiv i32 %41, 4
  %43 = add nsw i32 %25, 1
  %44 = sdiv i32 %43, 2
  br label %45

45:                                               ; preds = %22, %40, %37, %34, %29, %26, %15
  %46 = phi i32 [ %25, %22 ], [ %25, %40 ], [ %25, %37 ], [ %25, %34 ], [ %25, %29 ], [ %25, %26 ], [ %18, %15 ]
  %47 = phi i32 [ %24, %22 ], [ %24, %40 ], [ %24, %37 ], [ %24, %34 ], [ %24, %29 ], [ %24, %26 ], [ %17, %15 ]
  %48 = phi i32 [ -1431655766, %22 ], [ %42, %40 ], [ %39, %37 ], [ %24, %34 ], [ %31, %29 ], [ %28, %26 ], [ %17, %15 ]
  %49 = phi i32 [ -1431655766, %22 ], [ %44, %40 ], [ %25, %37 ], [ %36, %34 ], [ %33, %29 ], [ %25, %26 ], [ %18, %15 ]
  switch i32 %1, label %88 [
    i32 0, label %50
    i32 1, label %51
    i32 2, label %51
    i32 3, label %61
    i32 4, label %61
    i32 7, label %66
    i32 8, label %66
    i32 9, label %76
    i32 10, label %76
    i32 5, label %85
    i32 6, label %85
    i32 11, label %85
    i32 12, label %85
  ]

50:                                               ; preds = %45
  tail call void @llvm.trap()
  unreachable

51:                                               ; preds = %45, %45
  %52 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 0
  store i32 %47, i32* %52, align 4
  %53 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 1
  store i32 %46, i32* %53, align 4
  %54 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 2
  %55 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 2, i32 0
  store i32 %48, i32* %55, align 4
  %56 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 2, i32 1
  store i32 %49, i32* %56, align 4
  %57 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 1
  %58 = bitcast %struct.SkISize* %54 to i64*
  %59 = bitcast %struct.SkISize* %57 to i64*
  %60 = load i64, i64* %58, align 4
  store i64 %60, i64* %59, align 4
  br label %94

61:                                               ; preds = %45, %45
  %62 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 0
  store i32 %47, i32* %62, align 4
  %63 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 1
  store i32 %46, i32* %63, align 4
  %64 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 1, i32 0
  store i32 %48, i32* %64, align 4
  %65 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 1, i32 1
  store i32 %49, i32* %65, align 4
  br label %94

66:                                               ; preds = %45, %45
  %67 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 3, i32 0
  store i32 %47, i32* %67, align 4
  %68 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 3, i32 1
  store i32 %46, i32* %68, align 4
  %69 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 2
  %70 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 2, i32 0
  store i32 %48, i32* %70, align 4
  %71 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 2, i32 1
  store i32 %49, i32* %71, align 4
  %72 = bitcast %struct.SkISize* %69 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 4
  %74 = shufflevector <2 x i64> %73, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %75 = bitcast %struct.SkISize* %4 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %75, align 4
  br label %94

76:                                               ; preds = %45, %45
  %77 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 2
  %78 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 2, i32 0
  store i32 %47, i32* %78, align 4
  %79 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 2, i32 1
  store i32 %46, i32* %79, align 4
  %80 = bitcast %struct.SkISize* %77 to i64*
  %81 = bitcast %struct.SkISize* %4 to i64*
  %82 = load i64, i64* %80, align 4
  store i64 %82, i64* %81, align 4
  %83 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 1, i32 0
  store i32 %48, i32* %83, align 4
  %84 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 1, i32 1
  store i32 %49, i32* %84, align 4
  br label %94

85:                                               ; preds = %45, %45, %45, %45
  %86 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 0
  store i32 %47, i32* %86, align 4
  %87 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 1
  store i32 %46, i32* %87, align 4
  br label %94

88:                                               ; preds = %45
  tail call void @llvm.trap()
  unreachable

89:                                               ; preds = %19
  %90 = trunc i32 %20 to i8
  %91 = lshr i8 -61, %90
  %92 = and i8 %91, 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %22, label %94

94:                                               ; preds = %5, %85, %76, %66, %61, %51, %89
  %95 = phi i32 [ 0, %89 ], [ 0, %5 ], [ 1, %85 ], [ 3, %76 ], [ 4, %66 ], [ 2, %61 ], [ 3, %51 ]
  ret i32 %95
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKj(%"struct.std::__1::array"* noalias sret, i32, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::array", align 16
  switch i32 %1, label %21 [
    i32 0, label %5
    i32 1, label %9
    i32 2, label %10
    i32 3, label %11
    i32 4, label %12
    i32 5, label %13
    i32 6, label %14
    i32 7, label %15
    i32 8, label %16
    i32 9, label %17
    i32 10, label %18
    i32 11, label %19
    i32 12, label %20
  ]

5:                                                ; preds = %3
  %6 = bitcast %"struct.std::__1::array"* %0 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 3, i32 -1, i32 3>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 3, i32 -1, i32 3>, <4 x i32>* %8, align 4
  br label %68

9:                                                ; preds = %3
  br label %21

10:                                               ; preds = %3
  br label %21

11:                                               ; preds = %3
  br label %21

12:                                               ; preds = %3
  br label %21

13:                                               ; preds = %3
  br label %21

14:                                               ; preds = %3
  br label %21

15:                                               ; preds = %3
  br label %21

16:                                               ; preds = %3
  br label %21

17:                                               ; preds = %3
  br label %21

18:                                               ; preds = %3
  br label %21

19:                                               ; preds = %3
  br label %21

20:                                               ; preds = %3
  br label %21

21:                                               ; preds = %3, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9
  %22 = phi %struct.PlaneAndIndex* [ null, %3 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices__10_, i64 0, i64 0), %20 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_9, i64 0, i64 0), %19 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_8, i64 0, i64 0), %18 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_7, i64 0, i64 0), %17 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_6, i64 0, i64 0), %16 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_5, i64 0, i64 0), %15 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_4, i64 0, i64 0), %14 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_3, i64 0, i64 0), %13 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_2, i64 0, i64 0), %12 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_1, i64 0, i64 0), %11 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices_0, i64 0, i64 0), %10 ], [ getelementptr inbounds ([4 x %struct.PlaneAndIndex], [4 x %struct.PlaneAndIndex]* @_ZZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKjE17kPlanesAndIndices, i64 0, i64 0), %9 ]
  %23 = bitcast %"struct.std::__1::array"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #4
  %24 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 1, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 1, i32 1
  %28 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 2, i32 0
  %29 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 2, i32 1
  %30 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 3, i32 0
  %31 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 3, i32 1
  %32 = bitcast %"struct.std::__1::array"* %4 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 3, i32 -1, i32 3>, <4 x i32>* %32, align 16
  %33 = bitcast i32* %28 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 3, i32 -1, i32 3>, <4 x i32>* %33, align 16
  %34 = getelementptr inbounds %struct.PlaneAndIndex, %struct.PlaneAndIndex* %22, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.PlaneAndIndex, %struct.PlaneAndIndex* %22, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %35, -1
  br i1 %38, label %39, label %59

39:                                               ; preds = %21
  %40 = sext i32 %35 to i64
  %41 = getelementptr inbounds i32, i32* %2, i64 %40
  %42 = load i32, i32* %41, align 4
  switch i32 %42, label %55 [
    i32 16, label %43
    i32 1, label %43
    i32 24, label %45
    i32 8, label %47
    i32 3, label %49
    i32 7, label %51
    i32 15, label %53
  ]

43:                                               ; preds = %39, %39
  %44 = icmp eq i32 %37, 0
  br i1 %44, label %59, label %55

45:                                               ; preds = %39
  switch i32 %37, label %55 [
    i32 0, label %59
    i32 1, label %46
  ]

46:                                               ; preds = %45
  br label %59

47:                                               ; preds = %39
  %48 = icmp eq i32 %37, 0
  br i1 %48, label %59, label %55

49:                                               ; preds = %39
  %50 = icmp ult i32 %37, 2
  br i1 %50, label %59, label %55

51:                                               ; preds = %39
  %52 = icmp ult i32 %37, 3
  br i1 %52, label %59, label %55

53:                                               ; preds = %39
  %54 = icmp ult i32 %37, 4
  br i1 %54, label %59, label %55

55:                                               ; preds = %131, %129, %127, %125, %123, %121, %117, %107, %105, %103, %101, %99, %97, %93, %83, %81, %79, %77, %75, %73, %69, %53, %51, %49, %47, %45, %43, %39
  %56 = bitcast %"struct.std::__1::array"* %0 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 3, i32 -1, i32 3>, <4 x i32>* %56, align 4
  %57 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 3, i32 -1, i32 3>, <4 x i32>* %58, align 4
  br label %67

59:                                               ; preds = %21, %46, %43, %45, %47, %49, %51, %53
  %60 = phi i32 [ %35, %53 ], [ %35, %51 ], [ %35, %49 ], [ %35, %47 ], [ %35, %45 ], [ %35, %43 ], [ %35, %46 ], [ -1, %21 ]
  %61 = phi i32 [ %37, %53 ], [ %37, %51 ], [ %37, %49 ], [ 3, %47 ], [ %37, %45 ], [ 0, %43 ], [ 3, %46 ], [ 0, %21 ]
  store i32 %60, i32* %24, align 16
  store i32 %61, i32* %25, align 4
  %62 = getelementptr inbounds %struct.PlaneAndIndex, %struct.PlaneAndIndex* %22, i64 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct.PlaneAndIndex, %struct.PlaneAndIndex* %22, i64 1, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %63, -1
  br i1 %66, label %69, label %85

67:                                               ; preds = %55, %133
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #4
  br label %68

68:                                               ; preds = %5, %67
  ret void

69:                                               ; preds = %59
  %70 = sext i32 %63 to i64
  %71 = getelementptr inbounds i32, i32* %2, i64 %70
  %72 = load i32, i32* %71, align 4
  switch i32 %72, label %55 [
    i32 16, label %83
    i32 1, label %83
    i32 24, label %81
    i32 8, label %79
    i32 3, label %77
    i32 7, label %75
    i32 15, label %73
  ]

73:                                               ; preds = %69
  %74 = icmp ult i32 %65, 4
  br i1 %74, label %85, label %55

75:                                               ; preds = %69
  %76 = icmp ult i32 %65, 3
  br i1 %76, label %85, label %55

77:                                               ; preds = %69
  %78 = icmp ult i32 %65, 2
  br i1 %78, label %85, label %55

79:                                               ; preds = %69
  %80 = icmp eq i32 %65, 0
  br i1 %80, label %85, label %55

81:                                               ; preds = %69
  switch i32 %65, label %55 [
    i32 0, label %85
    i32 1, label %82
  ]

82:                                               ; preds = %81
  br label %85

83:                                               ; preds = %69, %69
  %84 = icmp eq i32 %65, 0
  br i1 %84, label %85, label %55

85:                                               ; preds = %73, %75, %77, %79, %81, %82, %83, %59
  %86 = phi i32 [ -1, %59 ], [ %63, %83 ], [ %63, %82 ], [ %63, %81 ], [ %63, %79 ], [ %63, %77 ], [ %63, %75 ], [ %63, %73 ]
  %87 = phi i32 [ 0, %59 ], [ 0, %83 ], [ 3, %82 ], [ %65, %81 ], [ 3, %79 ], [ %65, %77 ], [ %65, %75 ], [ %65, %73 ]
  store i32 %86, i32* %26, align 8
  store i32 %87, i32* %27, align 4
  %88 = getelementptr inbounds %struct.PlaneAndIndex, %struct.PlaneAndIndex* %22, i64 2, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.PlaneAndIndex, %struct.PlaneAndIndex* %22, i64 2, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp sgt i32 %89, -1
  br i1 %92, label %93, label %109

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = getelementptr inbounds i32, i32* %2, i64 %94
  %96 = load i32, i32* %95, align 4
  switch i32 %96, label %55 [
    i32 16, label %107
    i32 1, label %107
    i32 24, label %105
    i32 8, label %103
    i32 3, label %101
    i32 7, label %99
    i32 15, label %97
  ]

97:                                               ; preds = %93
  %98 = icmp ult i32 %91, 4
  br i1 %98, label %109, label %55

99:                                               ; preds = %93
  %100 = icmp ult i32 %91, 3
  br i1 %100, label %109, label %55

101:                                              ; preds = %93
  %102 = icmp ult i32 %91, 2
  br i1 %102, label %109, label %55

103:                                              ; preds = %93
  %104 = icmp eq i32 %91, 0
  br i1 %104, label %109, label %55

105:                                              ; preds = %93
  switch i32 %91, label %55 [
    i32 0, label %109
    i32 1, label %106
  ]

106:                                              ; preds = %105
  br label %109

107:                                              ; preds = %93, %93
  %108 = icmp eq i32 %91, 0
  br i1 %108, label %109, label %55

109:                                              ; preds = %97, %99, %101, %103, %105, %106, %107, %85
  %110 = phi i32 [ -1, %85 ], [ %89, %107 ], [ %89, %106 ], [ %89, %105 ], [ %89, %103 ], [ %89, %101 ], [ %89, %99 ], [ %89, %97 ]
  %111 = phi i32 [ 0, %85 ], [ 0, %107 ], [ 3, %106 ], [ %91, %105 ], [ 3, %103 ], [ %91, %101 ], [ %91, %99 ], [ %91, %97 ]
  store i32 %110, i32* %28, align 16
  store i32 %111, i32* %29, align 4
  %112 = getelementptr inbounds %struct.PlaneAndIndex, %struct.PlaneAndIndex* %22, i64 3, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %struct.PlaneAndIndex, %struct.PlaneAndIndex* %22, i64 3, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = icmp sgt i32 %113, -1
  br i1 %116, label %117, label %133

117:                                              ; preds = %109
  %118 = sext i32 %113 to i64
  %119 = getelementptr inbounds i32, i32* %2, i64 %118
  %120 = load i32, i32* %119, align 4
  switch i32 %120, label %55 [
    i32 16, label %131
    i32 1, label %131
    i32 24, label %129
    i32 8, label %127
    i32 3, label %125
    i32 7, label %123
    i32 15, label %121
  ]

121:                                              ; preds = %117
  %122 = icmp ult i32 %115, 4
  br i1 %122, label %133, label %55

123:                                              ; preds = %117
  %124 = icmp ult i32 %115, 3
  br i1 %124, label %133, label %55

125:                                              ; preds = %117
  %126 = icmp ult i32 %115, 2
  br i1 %126, label %133, label %55

127:                                              ; preds = %117
  %128 = icmp eq i32 %115, 0
  br i1 %128, label %133, label %55

129:                                              ; preds = %117
  switch i32 %115, label %55 [
    i32 0, label %133
    i32 1, label %130
  ]

130:                                              ; preds = %129
  br label %133

131:                                              ; preds = %117, %117
  %132 = icmp eq i32 %115, 0
  br i1 %132, label %133, label %55

133:                                              ; preds = %121, %123, %125, %127, %129, %130, %131, %109
  %134 = phi i32 [ -1, %109 ], [ %113, %131 ], [ %113, %130 ], [ %113, %129 ], [ %113, %127 ], [ %113, %125 ], [ %113, %123 ], [ %113, %121 ]
  %135 = phi i32 [ 0, %109 ], [ 0, %131 ], [ 3, %130 ], [ %115, %129 ], [ 3, %127 ], [ %115, %125 ], [ %115, %123 ], [ %115, %121 ]
  store i32 %134, i32* %30, align 8
  store i32 %135, i32* %31, align 4
  %136 = bitcast %"struct.std::__1::array"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* nonnull align 16 %23, i64 32, i1 false)
  br label %67
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkYUVAInfo8HasAlphaENS_11PlaneConfigE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i32 %0, 13
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @llvm.trap()
  unreachable

4:                                                ; preds = %1
  %5 = trunc i32 %0 to i13
  %6 = lshr i13 -128, %5
  %7 = and i13 %6, 1
  %8 = icmp ne i13 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkYUVAInfoC2E7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkYUVColorSpace15SkEncodedOriginNS_6SitingES5_(%class.SkYUVAInfo* nocapture, i64, i32, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %9 = bitcast %class.SkYUVAInfo* %0 to i64*
  store i64 %1, i64* %9, align 4
  %10 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 1
  store i32 %2, i32* %10, align 4
  %11 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 2
  store i32 %3, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 3
  store i32 %4, i32* %12, align 4
  %13 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 4
  store i32 %5, i32* %13, align 4
  %14 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 5
  store i32 %6, i32* %14, align 4
  %15 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 6
  store i32 %7, i32* %15, align 4
  %16 = trunc i64 %1 to i32
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %29, label %18

18:                                               ; preds = %8
  %19 = lshr i64 %1, 32
  %20 = trunc i64 %19 to i32
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = icmp eq i32 %2, 0
  %24 = icmp eq i32 %3, 0
  %25 = or i1 %23, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = icmp eq i32 %3, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  switch i32 %2, label %31 [
    i32 11, label %29
    i32 6, label %29
    i32 5, label %29
    i32 12, label %29
  ]

29:                                               ; preds = %8, %28, %28, %28, %28, %22, %18
  %30 = bitcast %class.SkYUVAInfo* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 bitcast (%class.SkYUVAInfo* @.ref.tmp to i8*), i64 32, i1 false)
  br label %31

31:                                               ; preds = %28, %26, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10SkYUVAInfo17computeTotalBytesEPKmPm(%class.SkYUVAInfo* nocapture readonly, i64* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x %struct.SkISize], align 16
  %5 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %96, label %8

8:                                                ; preds = %3
  %9 = bitcast [4 x %struct.SkISize]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [4 x %struct.SkISize], [4 x %struct.SkISize]* %4, i64 0, i64 0
  %11 = bitcast %class.SkYUVAInfo* %0 to i64*
  %12 = bitcast [4 x %struct.SkISize]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 32, i1 false)
  %13 = load i64, i64* %11, align 4
  %14 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = call i32 @_ZN10SkYUVAInfo15PlaneDimensionsE7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkEncodedOriginPS0_(i64 %13, i32 %6, i32 %15, i32 %17, %struct.SkISize* nonnull %10) #4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %8
  %21 = icmp eq i64* %2, null
  %22 = zext i32 %18 to i64
  br label %27

23:                                               ; preds = %69, %8
  %24 = phi i8 [ 1, %8 ], [ %73, %69 ]
  %25 = phi i64 [ 0, %8 ], [ %70, %69 ]
  %26 = icmp eq i64* %2, null
  br i1 %26, label %93, label %76

27:                                               ; preds = %69, %20
  %28 = phi i64 [ 0, %20 ], [ %74, %69 ]
  %29 = phi i64 [ 0, %20 ], [ %70, %69 ]
  %30 = phi i8 [ 1, %20 ], [ %73, %69 ]
  %31 = getelementptr inbounds i64, i64* %1, i64 %28
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds [4 x %struct.SkISize], [4 x %struct.SkISize]* %4, i64 0, i64 %28, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = or i64 %32, %35
  %37 = icmp ugt i64 %36, 4294967295
  br i1 %37, label %40, label %38

38:                                               ; preds = %27
  %39 = mul i64 %32, %35
  br label %64

40:                                               ; preds = %27
  %41 = and i64 %32, 4294967295
  %42 = and i64 %35, 4294967295
  %43 = mul nuw i64 %42, %41
  %44 = lshr i64 %32, 32
  %45 = mul nuw i64 %42, %44
  %46 = lshr i64 %35, 32
  %47 = mul nuw i64 %46, %41
  %48 = mul nuw i64 %46, %44
  %49 = shl i64 %45, 32
  %50 = add i64 %49, %43
  %51 = icmp uge i64 %50, %43
  %52 = shl i64 %47, 32
  %53 = add i64 %50, %52
  %54 = icmp uge i64 %53, %50
  %55 = lshr i64 %45, 32
  %56 = add nuw i64 %55, %48
  %57 = lshr i64 %47, 32
  %58 = sub nsw i64 0, %57
  %59 = icmp eq i64 %56, %58
  %60 = and i1 %59, %51
  %61 = and i1 %60, %54
  %62 = zext i1 %61 to i8
  %63 = and i8 %30, %62
  br label %64

64:                                               ; preds = %38, %40
  %65 = phi i8 [ %63, %40 ], [ %30, %38 ]
  %66 = phi i64 [ %53, %40 ], [ %39, %38 ]
  br i1 %21, label %69, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds i64, i64* %2, i64 %28
  store i64 %66, i64* %68, align 8
  br label %69

69:                                               ; preds = %64, %67
  %70 = add i64 %66, %29
  %71 = icmp uge i64 %70, %29
  %72 = zext i1 %71 to i8
  %73 = and i8 %65, %72
  %74 = add nuw nsw i64 %28, 1
  %75 = icmp eq i64 %74, %22
  br i1 %75, label %23, label %27

76:                                               ; preds = %23
  %77 = icmp eq i8 %24, 0
  %78 = icmp slt i32 %18, 4
  br i1 %77, label %88, label %79

79:                                               ; preds = %76
  br i1 %78, label %80, label %93

80:                                               ; preds = %79
  %81 = sext i32 %18 to i64
  %82 = getelementptr i64, i64* %2, i64 %81
  %83 = bitcast i64* %82 to i8*
  %84 = sub i32 3, %18
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  %87 = add nuw nsw i64 %86, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 %87, i1 false)
  br label %93

88:                                               ; preds = %76
  br i1 %78, label %89, label %93

89:                                               ; preds = %88, %89
  %90 = phi i64 [ %92, %89 ], [ 0, %88 ]
  %91 = getelementptr inbounds i64, i64* %2, i64 %90
  store i64 -1, i64* %91, align 8
  %92 = add nuw i64 %90, 1
  br label %89

93:                                               ; preds = %80, %79, %88, %23
  %94 = icmp eq i8 %24, 0
  %95 = select i1 %94, i64 -1, i64 %25
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  br label %96

96:                                               ; preds = %3, %93
  %97 = phi i64 [ %95, %93 ], [ 0, %3 ]
  ret i64 %97
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkYUVAInfo15toYUVALocationsEPKj(%"struct.std::__1::array"* noalias sret, %class.SkYUVAInfo* nocapture readonly, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  tail call void @_ZN10SkYUVAInfo16GetYUVALocationsENS_11PlaneConfigEPKj(%"struct.std::__1::array"* sret %0, i32 %5, i32* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkYUVAInfo15makeSubsamplingENS_11SubsamplingE(%class.SkYUVAInfo* noalias nocapture sret, %class.SkYUVAInfo* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkYUVAInfo* %1 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 3
  %9 = bitcast i32* %8 to <4 x i32>*
  %10 = load <4 x i32>, <4 x i32>* %9, align 4
  %11 = bitcast %class.SkYUVAInfo* %0 to i64*
  store i64 %5, i64* %11, align 4
  %12 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 1
  store i32 %7, i32* %12, align 4
  %13 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 2
  store i32 %2, i32* %13, align 4
  %14 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 3
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> %10, <4 x i32>* %15, align 4
  %16 = trunc i64 %5 to i32
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %29, label %18

18:                                               ; preds = %3
  %19 = lshr i64 %5, 32
  %20 = trunc i64 %19 to i32
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = icmp eq i32 %7, 0
  %24 = icmp eq i32 %2, 0
  %25 = or i1 %24, %23
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = icmp eq i32 %2, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  switch i32 %7, label %31 [
    i32 11, label %29
    i32 6, label %29
    i32 5, label %29
    i32 12, label %29
  ]

29:                                               ; preds = %28, %28, %28, %28, %22, %18, %3
  %30 = bitcast %class.SkYUVAInfo* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 bitcast (%class.SkYUVAInfo* @.ref.tmp to i8*), i64 32, i1 false) #4
  br label %31

31:                                               ; preds = %26, %28, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkYUVAInfo14makeDimensionsE7SkISize(%class.SkYUVAInfo* noalias nocapture sret, %class.SkYUVAInfo* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 1
  %5 = bitcast i32* %4 to <4 x i32>*
  %6 = load <4 x i32>, <4 x i32>* %5, align 4
  %7 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %class.SkYUVAInfo* %0 to i64*
  store i64 %2, i64* %11, align 4
  %12 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 1
  %13 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> %6, <4 x i32>* %13, align 4
  %14 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 5
  store i32 %8, i32* %14, align 4
  %15 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 6
  store i32 %10, i32* %15, align 4
  %16 = trunc i64 %2 to i32
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %31, label %18

18:                                               ; preds = %3
  %19 = lshr i64 %2, 32
  %20 = trunc i64 %19 to i32
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = extractelement <4 x i32> %6, i32 0
  %24 = icmp eq i32 %23, 0
  %25 = extractelement <4 x i32> %6, i32 1
  %26 = icmp eq i32 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = icmp eq i32 %25, 1
  br i1 %29, label %33, label %30

30:                                               ; preds = %28
  switch i32 %23, label %33 [
    i32 11, label %31
    i32 6, label %31
    i32 5, label %31
    i32 12, label %31
  ]

31:                                               ; preds = %30, %30, %30, %30, %22, %18, %3
  %32 = bitcast %class.SkYUVAInfo* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 bitcast (%class.SkYUVAInfo* @.ref.tmp to i8*), i64 32, i1 false) #4
  br label %33

33:                                               ; preds = %28, %30, %31
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10SkYUVAInfoeqERKS_(%class.SkYUVAInfo* nocapture readonly, %class.SkYUVAInfo* nocapture readonly dereferenceable(32)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %50

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %50

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %50

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %50

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %50

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %50

38:                                               ; preds = %32
  %39 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %50

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %0, i64 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 4
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br label %50

50:                                               ; preds = %20, %44, %38, %32, %26, %14, %8, %2
  %51 = phi i1 [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %49, %44 ], [ false, %20 ]
  ret i1 %51
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
