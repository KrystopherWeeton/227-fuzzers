; ModuleID = '../../courgette/encoded_program.cc'
source_filename = "../../courgette/encoded_program.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.courgette::EncodedProgram" = type { i64, %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer.4", %"class.courgette::NoThrowBuffer.8", %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer" }
%"class.courgette::NoThrowBuffer.0" = type <{ i32*, i64, i64, %"class.courgette::MemoryAllocator.1", [7 x i8] }>
%"class.courgette::MemoryAllocator.1" = type { i8 }
%"class.courgette::NoThrowBuffer.4" = type <{ i64*, i64, i64, %"class.courgette::MemoryAllocator.5", [7 x i8] }>
%"class.courgette::MemoryAllocator.5" = type { i8 }
%"class.courgette::NoThrowBuffer.8" = type <{ i8*, i64, i64, %"class.courgette::MemoryAllocator.9", [7 x i8] }>
%"class.courgette::MemoryAllocator.9" = type { i8 }
%"class.courgette::NoThrowBuffer" = type <{ i32*, i64, i64, %"class.courgette::MemoryAllocator", [7 x i8] }>
%"class.courgette::MemoryAllocator" = type { i8 }
%"class.courgette::LabelManager" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.courgette::Label"*, %"class.courgette::Label"*, %"class.std::__1::__compressed_pair" }
%"class.courgette::Label" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.courgette::Label"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.courgette::SinkStreamSet" = type { i64, [10 x %"class.courgette::SinkStream"] }
%"class.courgette::SinkStream" = type { %"class.courgette::NoThrowBuffer.18" }
%"class.courgette::NoThrowBuffer.18" = type <{ i8*, i64, i64, %"class.courgette::MemoryAllocator.19", [7 x i8] }>
%"class.courgette::MemoryAllocator.19" = type { i8 }
%"class.base::Environment" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.courgette::SourceStreamSet" = type { i64, [10 x %"class.courgette::SourceStream"] }
%"class.courgette::SourceStream" = type { i8*, i8*, i8* }
%"struct.std::__1::__less" = type { i8 }
%struct.Elf32_Rel = type { i32, i32 }
%"class.courgette::RelocBlock" = type { %"struct.courgette::RelocBlockPOD" }
%"struct.courgette::RelocBlockPOD" = type { i32, i32, [4096 x i16] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.courgette::(anonymous namespace)::InstructionStoreReceptor" = type { %"class.courgette::InstructionReceptor", i32, %"class.courgette::EncodedProgram"* }
%"class.courgette::InstructionReceptor" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.courgette::EncodedProgram"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN9courgette19InstructionReceptorD2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm = comdat any

$_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm = comdat any

$_ZN9courgette13NoThrowBufferImNS_15MemoryAllocatorImEEE7reserveEm = comdat any

$_ZN9courgette13NoThrowBufferIhNS_15MemoryAllocatorIhEEE6appendEPKhm = comdat any

@.str = private unnamed_addr constant [35 x i8] c"../../courgette/encoded_program.cc\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"EncodedProgram Summary\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"\0A  image base  \00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"\0A  abs32 rvas  \00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"\0A  rel32 rvas  \00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"\0A  ops         \00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"\0A  origins     \00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"\0A  copy_counts \00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"\0A  copy_bytes  \00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"\0A  abs32_ix    \00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"\0A  rel32_ix    \00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"A_FIELDS\00", align 1
@_ZTVN9courgette12_GLOBAL__N_124InstructionStoreReceptorE = internal unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.courgette::InstructionReceptor"*)* @_ZN9courgette19InstructionReceptorD2Ev to i8*), i8* bitcast (void (%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*)* @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptorD0Ev to i8*), i8* bitcast (i1 (%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*)* @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor12EmitPeRelocsEv to i8*), i8* bitcast (i1 (%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*)* @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor17EmitElfRelocationEv to i8*), i8* bitcast (i1 (%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*, i32)* @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor10EmitOriginEj to i8*), i8* bitcast (i1 (%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*, i8)* @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor14EmitSingleByteEh to i8*), i8* bitcast (i1 (%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*, i8*, i64)* @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor17EmitMultipleBytesEPKhm to i8*), i8* bitcast (i1 (%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*, %"class.courgette::Label"*)* @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor9EmitRel32EPNS_5LabelE to i8*), i8* bitcast (i1 (%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*, %"class.courgette::Label"*)* @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor9EmitAbs32EPNS_5LabelE to i8*), i8* bitcast (i1 (%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*, %"class.courgette::Label"*)* @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor9EmitAbs64EPNS_5LabelE to i8*)] }, align 8
@.str.14 = private unnamed_addr constant [9 x i8] c"encoded_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN9courgette14EncodedProgramC1Ev = hidden unnamed_addr alias void (%"class.courgette::EncodedProgram"*), void (%"class.courgette::EncodedProgram"*)* @_ZN9courgette14EncodedProgramC2Ev
@_ZN9courgette14EncodedProgramD1Ev = hidden unnamed_addr alias void (%"class.courgette::EncodedProgram"*), void (%"class.courgette::EncodedProgram"*)* @_ZN9courgette14EncodedProgramD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette14EncodedProgramC2Ev(%"class.courgette::EncodedProgram"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2
  %3 = bitcast %"class.courgette::NoThrowBuffer"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %5 = bitcast %"class.courgette::NoThrowBuffer.0"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4
  %7 = bitcast %"class.courgette::NoThrowBuffer"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %8 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5
  %9 = bitcast %"class.courgette::NoThrowBuffer.4"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #10
  %10 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6
  %11 = bitcast %"class.courgette::NoThrowBuffer.8"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #10
  %12 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7
  %13 = bitcast %"class.courgette::NoThrowBuffer"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8
  %15 = bitcast %"class.courgette::NoThrowBuffer"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10
  %16 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9
  %17 = bitcast %"class.courgette::NoThrowBuffer"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = bitcast %"class.courgette::EncodedProgram"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette14EncodedProgramD2Ev(%"class.courgette::EncodedProgram"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %2, i64 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast i32* %4 to i8*
  tail call void @free(i8* %7) #10
  %8 = bitcast %"class.courgette::NoThrowBuffer"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %10, i64 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = bitcast i32* %12 to i8*
  tail call void @free(i8* %15) #10
  %16 = bitcast %"class.courgette::NoThrowBuffer"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  br label %17

17:                                               ; preds = %9, %14
  %18 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7
  %19 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %18, i64 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = icmp eq i32* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = bitcast i32* %20 to i8*
  tail call void @free(i8* %23) #10
  %24 = bitcast %"class.courgette::NoThrowBuffer"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  br label %25

25:                                               ; preds = %17, %22
  %26 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6
  %27 = getelementptr inbounds %"class.courgette::NoThrowBuffer.8", %"class.courgette::NoThrowBuffer.8"* %26, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  tail call void @free(i8* nonnull %28) #10
  %31 = bitcast %"class.courgette::NoThrowBuffer.8"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #10
  br label %32

32:                                               ; preds = %25, %30
  %33 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5
  %34 = getelementptr inbounds %"class.courgette::NoThrowBuffer.4", %"class.courgette::NoThrowBuffer.4"* %33, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = bitcast i64* %35 to i8*
  tail call void @free(i8* %38) #10
  %39 = bitcast %"class.courgette::NoThrowBuffer.4"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #10
  br label %40

40:                                               ; preds = %32, %37
  %41 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4
  %42 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %41, i64 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %40
  %46 = bitcast i32* %43 to i8*
  tail call void @free(i8* %46) #10
  %47 = bitcast %"class.courgette::NoThrowBuffer"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #10
  br label %48

48:                                               ; preds = %40, %45
  %49 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %50 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %49, i64 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = icmp eq i32* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = bitcast i32* %51 to i8*
  tail call void @free(i8* %54) #10
  %55 = bitcast %"class.courgette::NoThrowBuffer.0"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %48, %53
  %57 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2
  %58 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %57, i64 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = icmp eq i32* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %56
  %62 = bitcast i32* %59 to i8*
  tail call void @free(i8* %62) #10
  %63 = bitcast %"class.courgette::NoThrowBuffer"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #10
  br label %64

64:                                               ; preds = %56, %61
  %65 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 1
  %66 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %65, i64 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = icmp eq i32* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = bitcast i32* %67 to i8*
  tail call void @free(i8* %70) #10
  %71 = bitcast %"class.courgette::NoThrowBuffer"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #10
  br label %72

72:                                               ; preds = %64, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram12ImportLabelsERKNS_12LabelManagerES3_(%"class.courgette::EncodedProgram"*, %"class.courgette::LabelManager"* dereferenceable(24), %"class.courgette::LabelManager"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %4, i64 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = bitcast i32* %6 to i8*
  tail call void @free(i8* %9) #10
  %10 = bitcast %"class.courgette::NoThrowBuffer"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  br label %11

11:                                               ; preds = %8, %3
  %12 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %1, i64 0, i32 0
  %13 = tail call i32 @_ZN9courgette12LabelManager18GetLabelIndexBoundERKNSt3__16vectorINS_5LabelENS1_9allocatorIS3_EEEE(%"class.std::__1::vector"* dereferenceable(24) %12) #10
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, %14
  br i1 %17, label %18, label %55

18:                                               ; preds = %11
  %19 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %4, i64 %14) #10
  br i1 %19, label %20, label %223

20:                                               ; preds = %18
  %21 = load i64, i64* %15, align 8
  %22 = icmp ult i64 %21, %14
  br i1 %22, label %23, label %55

23:                                               ; preds = %20
  %24 = sub i64 %14, %21
  %25 = xor i64 %21, -1
  %26 = add i64 %25, %14
  %27 = and i64 %24, 3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %23, %29
  %30 = phi i64 [ %34, %29 ], [ %21, %23 ]
  %31 = phi i64 [ %35, %29 ], [ %27, %23 ]
  %32 = load i32*, i32** %5, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 %30
  store i32 -1, i32* %33, align 4
  %34 = add nuw i64 %30, 1
  %35 = add i64 %31, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %29, !llvm.loop !2

37:                                               ; preds = %29, %23
  %38 = phi i64 [ %21, %23 ], [ %34, %29 ]
  %39 = icmp ult i64 %26, 3
  br i1 %39, label %55, label %40

40:                                               ; preds = %37, %40
  %41 = phi i64 [ %53, %40 ], [ %38, %37 ]
  %42 = load i32*, i32** %5, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 %41
  store i32 -1, i32* %43, align 4
  %44 = add nuw i64 %41, 1
  %45 = load i32*, i32** %5, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 %44
  store i32 -1, i32* %46, align 4
  %47 = add nuw i64 %41, 2
  %48 = load i32*, i32** %5, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 %47
  store i32 -1, i32* %49, align 4
  %50 = add nuw i64 %41, 3
  %51 = load i32*, i32** %5, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %50
  store i32 -1, i32* %52, align 4
  %53 = add nuw i64 %41, 4
  %54 = icmp eq i64 %53, %14
  br i1 %54, label %55, label %40

55:                                               ; preds = %37, %40, %20, %11
  store i64 %14, i64* %15, align 8
  %56 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %1, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.courgette::Label"*, %"class.courgette::Label"** %56, align 8
  %58 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %1, i64 0, i32 0, i32 0, i32 1
  %59 = load %"class.courgette::Label"*, %"class.courgette::Label"** %58, align 8
  %60 = icmp eq %"class.courgette::Label"* %57, %59
  br i1 %60, label %72, label %61

61:                                               ; preds = %55, %61
  %62 = phi %"class.courgette::Label"* [ %70, %61 ], [ %57, %55 ]
  %63 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = load i32*, i32** %5, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 %67
  store i32 %64, i32* %69, align 4
  %70 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %62, i64 1
  %71 = icmp eq %"class.courgette::Label"* %70, %59
  br i1 %71, label %72, label %61

72:                                               ; preds = %61, %55
  %73 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 1
  %74 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %73, i64 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = icmp eq i32* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %72
  %78 = bitcast i32* %75 to i8*
  tail call void @free(i8* %78) #10
  %79 = bitcast %"class.courgette::NoThrowBuffer"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #10
  br label %80

80:                                               ; preds = %77, %72
  %81 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %2, i64 0, i32 0
  %82 = tail call i32 @_ZN9courgette12LabelManager18GetLabelIndexBoundERKNSt3__16vectorINS_5LabelENS1_9allocatorIS3_EEEE(%"class.std::__1::vector"* dereferenceable(24) %81) #10
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 1, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %83
  br i1 %86, label %87, label %124

87:                                               ; preds = %80
  %88 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %73, i64 %83) #10
  br i1 %88, label %89, label %223

89:                                               ; preds = %87
  %90 = load i64, i64* %84, align 8
  %91 = icmp ult i64 %90, %83
  br i1 %91, label %92, label %124

92:                                               ; preds = %89
  %93 = sub i64 %83, %90
  %94 = xor i64 %90, -1
  %95 = add i64 %94, %83
  %96 = and i64 %93, 3
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %92, %98
  %99 = phi i64 [ %103, %98 ], [ %90, %92 ]
  %100 = phi i64 [ %104, %98 ], [ %96, %92 ]
  %101 = load i32*, i32** %74, align 8
  %102 = getelementptr inbounds i32, i32* %101, i64 %99
  store i32 -1, i32* %102, align 4
  %103 = add nuw i64 %99, 1
  %104 = add i64 %100, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %98, !llvm.loop !4

106:                                              ; preds = %98, %92
  %107 = phi i64 [ %90, %92 ], [ %103, %98 ]
  %108 = icmp ult i64 %95, 3
  br i1 %108, label %124, label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %122, %109 ], [ %107, %106 ]
  %111 = load i32*, i32** %74, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 %110
  store i32 -1, i32* %112, align 4
  %113 = add nuw i64 %110, 1
  %114 = load i32*, i32** %74, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 %113
  store i32 -1, i32* %115, align 4
  %116 = add nuw i64 %110, 2
  %117 = load i32*, i32** %74, align 8
  %118 = getelementptr inbounds i32, i32* %117, i64 %116
  store i32 -1, i32* %118, align 4
  %119 = add nuw i64 %110, 3
  %120 = load i32*, i32** %74, align 8
  %121 = getelementptr inbounds i32, i32* %120, i64 %119
  store i32 -1, i32* %121, align 4
  %122 = add nuw i64 %110, 4
  %123 = icmp eq i64 %122, %83
  br i1 %123, label %124, label %109

124:                                              ; preds = %106, %109, %89, %80
  store i64 %83, i64* %84, align 8
  %125 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %2, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.courgette::Label"*, %"class.courgette::Label"** %125, align 8
  %127 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %2, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.courgette::Label"*, %"class.courgette::Label"** %127, align 8
  %129 = icmp eq %"class.courgette::Label"* %126, %128
  br i1 %129, label %141, label %130

130:                                              ; preds = %124, %130
  %131 = phi %"class.courgette::Label"* [ %139, %130 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %131, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %131, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sext i32 %135 to i64
  %137 = load i32*, i32** %74, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 %136
  store i32 %133, i32* %138, align 4
  %139 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %131, i64 1
  %140 = icmp eq %"class.courgette::Label"* %139, %128
  br i1 %140, label %141, label %130

141:                                              ; preds = %130, %124
  %142 = load i64, i64* %15, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %182, label %144

144:                                              ; preds = %141
  %145 = load i32*, i32** %5, align 8
  %146 = shl nsw i64 %142, 2
  %147 = add i64 %146, -4
  %148 = lshr exact i64 %147, 2
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 3
  %151 = icmp ult i64 %147, 12
  br i1 %151, label %166, label %152

152:                                              ; preds = %144
  %153 = sub nsw i64 %149, %150
  br label %154

154:                                              ; preds = %256, %152
  %155 = phi i32* [ %145, %152 ], [ %258, %256 ]
  %156 = phi i32 [ 0, %152 ], [ %257, %256 ]
  %157 = phi i64 [ %153, %152 ], [ %259, %256 ]
  %158 = load i32, i32* %155, align 4
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %160, label %161

160:                                              ; preds = %154
  store i32 %156, i32* %155, align 4
  br label %161

161:                                              ; preds = %160, %154
  %162 = phi i32 [ %156, %160 ], [ %158, %154 ]
  %163 = getelementptr inbounds i32, i32* %155, i64 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, -1
  br i1 %165, label %243, label %244

166:                                              ; preds = %256, %144
  %167 = phi i32* [ %145, %144 ], [ %258, %256 ]
  %168 = phi i32 [ 0, %144 ], [ %257, %256 ]
  %169 = icmp eq i64 %150, 0
  br i1 %169, label %182, label %170

170:                                              ; preds = %166, %177
  %171 = phi i32* [ %179, %177 ], [ %167, %166 ]
  %172 = phi i32 [ %178, %177 ], [ %168, %166 ]
  %173 = phi i64 [ %180, %177 ], [ %150, %166 ]
  %174 = load i32, i32* %171, align 4
  %175 = icmp eq i32 %174, -1
  br i1 %175, label %176, label %177

176:                                              ; preds = %170
  store i32 %172, i32* %171, align 4
  br label %177

177:                                              ; preds = %176, %170
  %178 = phi i32 [ %172, %176 ], [ %174, %170 ]
  %179 = getelementptr inbounds i32, i32* %171, i64 1
  %180 = add i64 %173, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %170, !llvm.loop !5

182:                                              ; preds = %166, %177, %141
  %183 = load i64, i64* %84, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %223, label %185

185:                                              ; preds = %182
  %186 = load i32*, i32** %74, align 8
  %187 = shl nsw i64 %183, 2
  %188 = add i64 %187, -4
  %189 = lshr exact i64 %188, 2
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 3
  %192 = icmp ult i64 %188, 12
  br i1 %192, label %207, label %193

193:                                              ; preds = %185
  %194 = sub nsw i64 %190, %191
  br label %195

195:                                              ; preds = %238, %193
  %196 = phi i32* [ %186, %193 ], [ %240, %238 ]
  %197 = phi i32 [ 0, %193 ], [ %239, %238 ]
  %198 = phi i64 [ %194, %193 ], [ %241, %238 ]
  %199 = load i32, i32* %196, align 4
  %200 = icmp eq i32 %199, -1
  br i1 %200, label %201, label %202

201:                                              ; preds = %195
  store i32 %197, i32* %196, align 4
  br label %202

202:                                              ; preds = %201, %195
  %203 = phi i32 [ %197, %201 ], [ %199, %195 ]
  %204 = getelementptr inbounds i32, i32* %196, i64 1
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %225, label %226

207:                                              ; preds = %238, %185
  %208 = phi i32* [ %186, %185 ], [ %240, %238 ]
  %209 = phi i32 [ 0, %185 ], [ %239, %238 ]
  %210 = icmp eq i64 %191, 0
  br i1 %210, label %223, label %211

211:                                              ; preds = %207, %218
  %212 = phi i32* [ %220, %218 ], [ %208, %207 ]
  %213 = phi i32 [ %219, %218 ], [ %209, %207 ]
  %214 = phi i64 [ %221, %218 ], [ %191, %207 ]
  %215 = load i32, i32* %212, align 4
  %216 = icmp eq i32 %215, -1
  br i1 %216, label %217, label %218

217:                                              ; preds = %211
  store i32 %213, i32* %212, align 4
  br label %218

218:                                              ; preds = %217, %211
  %219 = phi i32 [ %213, %217 ], [ %215, %211 ]
  %220 = getelementptr inbounds i32, i32* %212, i64 1
  %221 = add i64 %214, -1
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %211, !llvm.loop !6

223:                                              ; preds = %207, %218, %182, %87, %18
  %224 = phi i1 [ false, %18 ], [ false, %87 ], [ true, %182 ], [ true, %218 ], [ true, %207 ]
  ret i1 %224

225:                                              ; preds = %202
  store i32 %203, i32* %204, align 4
  br label %226

226:                                              ; preds = %225, %202
  %227 = phi i32 [ %203, %225 ], [ %205, %202 ]
  %228 = getelementptr inbounds i32, i32* %196, i64 2
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, -1
  br i1 %230, label %231, label %232

231:                                              ; preds = %226
  store i32 %227, i32* %228, align 4
  br label %232

232:                                              ; preds = %231, %226
  %233 = phi i32 [ %227, %231 ], [ %229, %226 ]
  %234 = getelementptr inbounds i32, i32* %196, i64 3
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, -1
  br i1 %236, label %237, label %238

237:                                              ; preds = %232
  store i32 %233, i32* %234, align 4
  br label %238

238:                                              ; preds = %237, %232
  %239 = phi i32 [ %233, %237 ], [ %235, %232 ]
  %240 = getelementptr inbounds i32, i32* %196, i64 4
  %241 = add i64 %198, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %207, label %195

243:                                              ; preds = %161
  store i32 %162, i32* %163, align 4
  br label %244

244:                                              ; preds = %243, %161
  %245 = phi i32 [ %162, %243 ], [ %164, %161 ]
  %246 = getelementptr inbounds i32, i32* %155, i64 2
  %247 = load i32, i32* %246, align 4
  %248 = icmp eq i32 %247, -1
  br i1 %248, label %249, label %250

249:                                              ; preds = %244
  store i32 %245, i32* %246, align 4
  br label %250

250:                                              ; preds = %249, %244
  %251 = phi i32 [ %245, %249 ], [ %247, %244 ]
  %252 = getelementptr inbounds i32, i32* %155, i64 3
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, -1
  br i1 %254, label %255, label %256

255:                                              ; preds = %250
  store i32 %251, i32* %252, align 4
  br label %256

256:                                              ; preds = %255, %250
  %257 = phi i32 [ %251, %255 ], [ %253, %250 ]
  %258 = getelementptr inbounds i32, i32* %155, i64 4
  %259 = add i64 %157, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %166, label %154
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram15WriteRvasToListERKNS_12LabelManagerEPNS_13NoThrowBufferIjNS_15MemoryAllocatorIjEEEE(%"class.courgette::LabelManager"* dereferenceable(24), %"class.courgette::NoThrowBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %1, i64 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = bitcast i32* %4 to i8*
  tail call void @free(i8* %7) #10
  %8 = bitcast %"class.courgette::NoThrowBuffer"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0
  %11 = tail call i32 @_ZN9courgette12LabelManager18GetLabelIndexBoundERKNSt3__16vectorINS_5LabelENS1_9allocatorIS3_EEEE(%"class.std::__1::vector"* dereferenceable(24) %10) #10
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  br i1 %15, label %16, label %53

16:                                               ; preds = %9
  %17 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %1, i64 %12) #10
  br i1 %17, label %18, label %70

18:                                               ; preds = %16
  %19 = load i64, i64* %13, align 8
  %20 = icmp ult i64 %19, %12
  br i1 %20, label %21, label %53

21:                                               ; preds = %18
  %22 = sub i64 %12, %19
  %23 = xor i64 %19, -1
  %24 = add i64 %23, %12
  %25 = and i64 %22, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %21, %27
  %28 = phi i64 [ %32, %27 ], [ %19, %21 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %21 ]
  %30 = load i32*, i32** %3, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 %28
  store i32 -1, i32* %31, align 4
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !7

35:                                               ; preds = %27, %21
  %36 = phi i64 [ %19, %21 ], [ %32, %27 ]
  %37 = icmp ult i64 %24, 3
  br i1 %37, label %53, label %38

38:                                               ; preds = %35, %38
  %39 = phi i64 [ %51, %38 ], [ %36, %35 ]
  %40 = load i32*, i32** %3, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 %39
  store i32 -1, i32* %41, align 4
  %42 = add nuw i64 %39, 1
  %43 = load i32*, i32** %3, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 %42
  store i32 -1, i32* %44, align 4
  %45 = add nuw i64 %39, 2
  %46 = load i32*, i32** %3, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 %45
  store i32 -1, i32* %47, align 4
  %48 = add nuw i64 %39, 3
  %49 = load i32*, i32** %3, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 %48
  store i32 -1, i32* %50, align 4
  %51 = add nuw i64 %39, 4
  %52 = icmp eq i64 %51, %12
  br i1 %52, label %53, label %38

53:                                               ; preds = %35, %38, %9, %18
  store i64 %12, i64* %13, align 8
  %54 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.courgette::Label"*, %"class.courgette::Label"** %54, align 8
  %56 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 1
  %57 = load %"class.courgette::Label"*, %"class.courgette::Label"** %56, align 8
  %58 = icmp eq %"class.courgette::Label"* %55, %57
  br i1 %58, label %70, label %59

59:                                               ; preds = %53, %59
  %60 = phi %"class.courgette::Label"* [ %68, %59 ], [ %55, %53 ]
  %61 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = load i32*, i32** %3, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %65
  store i32 %62, i32* %67, align 4
  %68 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %60, i64 1
  %69 = icmp eq %"class.courgette::Label"* %68, %57
  br i1 %69, label %70, label %59

70:                                               ; preds = %59, %53, %16
  %71 = phi i1 [ false, %16 ], [ true, %53 ], [ true, %59 ]
  ret i1 %71
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9courgette14EncodedProgram22FillUnassignedRvaSlotsEPNS_13NoThrowBufferIjNS_15MemoryAllocatorIjEEEE(%"class.courgette::NoThrowBuffer"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = shl nsw i64 %3, 2
  %9 = add i64 %8, -4
  %10 = lshr exact i64 %9, 2
  %11 = add nuw nsw i64 %10, 1
  %12 = and i64 %11, 3
  %13 = icmp ult i64 %9, 12
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = sub nsw i64 %11, %12
  br label %33

16:                                               ; preds = %58, %5
  %17 = phi i32* [ %7, %5 ], [ %60, %58 ]
  %18 = phi i32 [ 0, %5 ], [ %59, %58 ]
  %19 = icmp eq i64 %12, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %16, %27
  %21 = phi i32* [ %29, %27 ], [ %17, %16 ]
  %22 = phi i32 [ %28, %27 ], [ %18, %16 ]
  %23 = phi i64 [ %30, %27 ], [ %12, %16 ]
  %24 = load i32, i32* %21, align 4
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  store i32 %22, i32* %21, align 4
  br label %27

27:                                               ; preds = %26, %20
  %28 = phi i32 [ %22, %26 ], [ %24, %20 ]
  %29 = getelementptr inbounds i32, i32* %21, i64 1
  %30 = add i64 %23, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %20, !llvm.loop !8

32:                                               ; preds = %16, %27, %1
  ret void

33:                                               ; preds = %58, %14
  %34 = phi i32* [ %7, %14 ], [ %60, %58 ]
  %35 = phi i32 [ 0, %14 ], [ %59, %58 ]
  %36 = phi i64 [ %15, %14 ], [ %61, %58 ]
  %37 = load i32, i32* %34, align 4
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  store i32 %35, i32* %34, align 4
  br label %40

40:                                               ; preds = %33, %39
  %41 = phi i32 [ %35, %39 ], [ %37, %33 ]
  %42 = getelementptr inbounds i32, i32* %34, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  store i32 %41, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = phi i32 [ %41, %45 ], [ %43, %40 ]
  %48 = getelementptr inbounds i32, i32* %34, i64 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  store i32 %47, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = phi i32 [ %47, %51 ], [ %49, %46 ]
  %54 = getelementptr inbounds i32, i32* %34, i64 3
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %58

57:                                               ; preds = %52
  store i32 %53, i32* %54, align 4
  br label %58

58:                                               ; preds = %57, %52
  %59 = phi i32 [ %53, %57 ], [ %55, %52 ]
  %60 = getelementptr inbounds i32, i32* %34, i64 4
  %61 = add i64 %36, -4
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %16, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram9AddOriginEj(%"class.courgette::EncodedProgram"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 4294967295
  br i1 %6, label %71, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 4611686018427387903
  br i1 %10, label %71, label %11

11:                                               ; preds = %7
  %12 = icmp eq i64 %5, %9
  br i1 %12, label %13, label %30

13:                                               ; preds = %11
  %14 = icmp eq i64 %5, 0
  %15 = select i1 %14, i64 64, i64 %5
  %16 = add i64 %5, 1
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %25

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %23, %18 ], [ %15, %13 ]
  %20 = sub i64 4611686018427387903, %19
  %21 = icmp ult i64 %19, %20
  %22 = shl i64 %19, 1
  %23 = select i1 %21, i64 %22, i64 4611686018427387903
  %24 = icmp ult i64 %23, %16
  br i1 %24, label %18, label %25

25:                                               ; preds = %18, %13
  %26 = phi i64 [ %15, %13 ], [ %23, %18 ]
  %27 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %3, i64 %26) #10
  br i1 %27, label %28, label %71

28:                                               ; preds = %25
  %29 = load i64, i64* %8, align 8
  br label %30

30:                                               ; preds = %28, %11
  %31 = phi i64 [ %29, %28 ], [ %9, %11 ]
  %32 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %3, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %31
  store i32 0, i32* %34, align 4
  %35 = load i64, i64* %8, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %8, align 8
  %37 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4
  %38 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 4294967295
  br i1 %40, label %71, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 4611686018427387903
  br i1 %44, label %71, label %45

45:                                               ; preds = %41
  %46 = icmp eq i64 %39, %43
  br i1 %46, label %47, label %64

47:                                               ; preds = %45
  %48 = icmp eq i64 %39, 0
  %49 = select i1 %48, i64 64, i64 %39
  %50 = add i64 %39, 1
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %47, %52
  %53 = phi i64 [ %57, %52 ], [ %49, %47 ]
  %54 = sub i64 4611686018427387903, %53
  %55 = icmp ult i64 %53, %54
  %56 = shl i64 %53, 1
  %57 = select i1 %55, i64 %56, i64 4611686018427387903
  %58 = icmp ult i64 %57, %50
  br i1 %58, label %52, label %59

59:                                               ; preds = %52, %47
  %60 = phi i64 [ %49, %47 ], [ %57, %52 ]
  %61 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %37, i64 %60) #10
  br i1 %61, label %62, label %71

62:                                               ; preds = %59
  %63 = load i64, i64* %42, align 8
  br label %64

64:                                               ; preds = %62, %45
  %65 = phi i64 [ %63, %62 ], [ %43, %45 ]
  %66 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %37, i64 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %65
  store i32 %1, i32* %68, align 4
  %69 = load i64, i64* %42, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %42, align 8
  br label %71

71:                                               ; preds = %7, %2, %25, %64, %59, %41, %30
  %72 = phi i1 [ true, %64 ], [ false, %59 ], [ false, %30 ], [ false, %41 ], [ false, %25 ], [ false, %2 ], [ false, %7 ]
  ret i1 %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram7AddCopyEmPKv(%"class.courgette::EncodedProgram"*, i64, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %78, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %4, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = add i64 %6, -1
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %55

15:                                               ; preds = %8
  store i32 1, i32* %12, align 4
  %16 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 4294967295
  br i1 %19, label %186, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 2305843009213693951
  br i1 %23, label %186, label %24

24:                                               ; preds = %20
  %25 = icmp eq i64 %18, %22
  br i1 %25, label %26, label %43

26:                                               ; preds = %24
  %27 = icmp eq i64 %18, 0
  %28 = select i1 %27, i64 32, i64 %18
  %29 = add i64 %18, 1
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %26, %31
  %32 = phi i64 [ %36, %31 ], [ %28, %26 ]
  %33 = sub i64 2305843009213693951, %32
  %34 = icmp ult i64 %32, %33
  %35 = shl i64 %32, 1
  %36 = select i1 %34, i64 %35, i64 2305843009213693951
  %37 = icmp ult i64 %36, %29
  br i1 %37, label %31, label %38

38:                                               ; preds = %31, %26
  %39 = phi i64 [ %28, %26 ], [ %36, %31 ]
  %40 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferImNS_15MemoryAllocatorImEEE7reserveEm(%"class.courgette::NoThrowBuffer.4"* %16, i64 %39) #10
  br i1 %40, label %41, label %186

41:                                               ; preds = %38
  %42 = load i64, i64* %21, align 8
  br label %43

43:                                               ; preds = %24, %41
  %44 = phi i64 [ %42, %41 ], [ %22, %24 ]
  %45 = getelementptr inbounds %"class.courgette::NoThrowBuffer.4", %"class.courgette::NoThrowBuffer.4"* %16, i64 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 %44
  store i64 1, i64* %47, align 8
  %48 = load i64, i64* %21, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %21, align 8
  %50 = load i32*, i32** %9, align 8
  %51 = load i64, i64* %5, align 8
  %52 = add i64 %51, -1
  %53 = getelementptr inbounds i32, i32* %50, i64 %52
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %43, %8
  %56 = phi i32 [ %54, %43 ], [ %13, %8 ]
  %57 = phi i64 [ %51, %43 ], [ %6, %8 ]
  %58 = icmp eq i32 %56, 1
  br i1 %58, label %59, label %78

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, -1
  %65 = getelementptr inbounds i64, i64* %61, i64 %64
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, %1
  store i64 %67, i64* %65, align 8
  %68 = icmp eq i64 %1, 0
  br i1 %68, label %186, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6
  br label %71

71:                                               ; preds = %69, %71
  %72 = phi i64 [ 0, %69 ], [ %75, %71 ]
  %73 = getelementptr inbounds i8, i8* %2, i64 %72
  %74 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIhNS_15MemoryAllocatorIhEEE6appendEPKhm(%"class.courgette::NoThrowBuffer.8"* %70, i8* %73, i64 1) #10
  %75 = add nuw i64 %72, 1
  %76 = icmp ult i64 %75, %1
  %77 = and i1 %74, %76
  br i1 %77, label %71, label %186

78:                                               ; preds = %3, %55
  %79 = phi i64 [ 0, %3 ], [ %57, %55 ]
  %80 = icmp eq i64 %1, 1
  %81 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 4294967295
  %84 = icmp eq i64 %79, 4611686018427387903
  %85 = or i1 %83, %84
  br i1 %80, label %86, label %115

86:                                               ; preds = %78
  br i1 %85, label %186, label %87

87:                                               ; preds = %86
  %88 = icmp eq i64 %82, %79
  br i1 %88, label %89, label %106

89:                                               ; preds = %87
  %90 = icmp eq i64 %79, 0
  %91 = select i1 %90, i64 64, i64 %79
  %92 = add i64 %79, 1
  %93 = icmp ult i64 %91, %92
  br i1 %93, label %94, label %101

94:                                               ; preds = %89, %94
  %95 = phi i64 [ %99, %94 ], [ %91, %89 ]
  %96 = sub i64 4611686018427387903, %95
  %97 = icmp ult i64 %95, %96
  %98 = shl i64 %95, 1
  %99 = select i1 %97, i64 %98, i64 4611686018427387903
  %100 = icmp ult i64 %99, %92
  br i1 %100, label %94, label %101

101:                                              ; preds = %94, %89
  %102 = phi i64 [ %91, %89 ], [ %99, %94 ]
  %103 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %4, i64 %102) #10
  br i1 %103, label %104, label %186

104:                                              ; preds = %101
  %105 = load i64, i64* %5, align 8
  br label %106

106:                                              ; preds = %104, %87
  %107 = phi i64 [ %105, %104 ], [ %79, %87 ]
  %108 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %4, i64 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = getelementptr inbounds i32, i32* %109, i64 %107
  store i32 2, i32* %110, align 4
  %111 = load i64, i64* %5, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %5, align 8
  %113 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6
  %114 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIhNS_15MemoryAllocatorIhEEE6appendEPKhm(%"class.courgette::NoThrowBuffer.8"* %113, i8* %2, i64 1) #10
  br label %186

115:                                              ; preds = %78
  br i1 %85, label %186, label %116

116:                                              ; preds = %115
  %117 = icmp eq i64 %82, %79
  br i1 %117, label %118, label %135

118:                                              ; preds = %116
  %119 = icmp eq i64 %79, 0
  %120 = select i1 %119, i64 64, i64 %79
  %121 = add i64 %79, 1
  %122 = icmp ult i64 %120, %121
  br i1 %122, label %123, label %130

123:                                              ; preds = %118, %123
  %124 = phi i64 [ %128, %123 ], [ %120, %118 ]
  %125 = sub i64 4611686018427387903, %124
  %126 = icmp ult i64 %124, %125
  %127 = shl i64 %124, 1
  %128 = select i1 %126, i64 %127, i64 4611686018427387903
  %129 = icmp ult i64 %128, %121
  br i1 %129, label %123, label %130

130:                                              ; preds = %123, %118
  %131 = phi i64 [ %120, %118 ], [ %128, %123 ]
  %132 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %4, i64 %131) #10
  br i1 %132, label %133, label %186

133:                                              ; preds = %130
  %134 = load i64, i64* %5, align 8
  br label %135

135:                                              ; preds = %133, %116
  %136 = phi i64 [ %134, %133 ], [ %79, %116 ]
  %137 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %4, i64 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = getelementptr inbounds i32, i32* %138, i64 %136
  store i32 1, i32* %139, align 4
  %140 = load i64, i64* %5, align 8
  %141 = add i64 %140, 1
  store i64 %141, i64* %5, align 8
  %142 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5
  %143 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 2
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %144, 4294967295
  br i1 %145, label %186, label %146

146:                                              ; preds = %135
  %147 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = icmp eq i64 %148, 2305843009213693951
  br i1 %149, label %186, label %150

150:                                              ; preds = %146
  %151 = icmp eq i64 %144, %148
  br i1 %151, label %152, label %169

152:                                              ; preds = %150
  %153 = icmp eq i64 %144, 0
  %154 = select i1 %153, i64 32, i64 %144
  %155 = add i64 %144, 1
  %156 = icmp ult i64 %154, %155
  br i1 %156, label %157, label %164

157:                                              ; preds = %152, %157
  %158 = phi i64 [ %162, %157 ], [ %154, %152 ]
  %159 = sub i64 2305843009213693951, %158
  %160 = icmp ult i64 %158, %159
  %161 = shl i64 %158, 1
  %162 = select i1 %160, i64 %161, i64 2305843009213693951
  %163 = icmp ult i64 %162, %155
  br i1 %163, label %157, label %164

164:                                              ; preds = %157, %152
  %165 = phi i64 [ %154, %152 ], [ %162, %157 ]
  %166 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferImNS_15MemoryAllocatorImEEE7reserveEm(%"class.courgette::NoThrowBuffer.4"* %142, i64 %165) #10
  br i1 %166, label %167, label %186

167:                                              ; preds = %164
  %168 = load i64, i64* %147, align 8
  br label %169

169:                                              ; preds = %150, %167
  %170 = phi i64 [ %168, %167 ], [ %148, %150 ]
  %171 = getelementptr inbounds %"class.courgette::NoThrowBuffer.4", %"class.courgette::NoThrowBuffer.4"* %142, i64 0, i32 0
  %172 = load i64*, i64** %171, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 %170
  store i64 %1, i64* %173, align 8
  %174 = load i64, i64* %147, align 8
  %175 = add i64 %174, 1
  store i64 %175, i64* %147, align 8
  %176 = icmp eq i64 %1, 0
  br i1 %176, label %186, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6
  br label %179

179:                                              ; preds = %177, %179
  %180 = phi i64 [ 0, %177 ], [ %183, %179 ]
  %181 = getelementptr inbounds i8, i8* %2, i64 %180
  %182 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIhNS_15MemoryAllocatorIhEEE6appendEPKhm(%"class.courgette::NoThrowBuffer.8"* %178, i8* %181, i64 1) #10
  %183 = add nuw i64 %180, 1
  %184 = icmp ult i64 %183, %1
  %185 = and i1 %182, %184
  br i1 %185, label %179, label %186

186:                                              ; preds = %71, %179, %106, %38, %15, %20, %101, %86, %130, %115, %164, %135, %146, %169, %59
  %187 = phi i1 [ true, %59 ], [ %114, %106 ], [ false, %38 ], [ false, %15 ], [ false, %20 ], [ false, %101 ], [ false, %86 ], [ true, %169 ], [ false, %130 ], [ false, %115 ], [ false, %164 ], [ false, %135 ], [ false, %146 ], [ %182, %179 ], [ %74, %71 ]
  ret i1 %187
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram8AddAbs32Ei(%"class.courgette::EncodedProgram"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 4294967295
  br i1 %6, label %71, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 4611686018427387903
  br i1 %10, label %71, label %11

11:                                               ; preds = %7
  %12 = icmp eq i64 %5, %9
  br i1 %12, label %13, label %30

13:                                               ; preds = %11
  %14 = icmp eq i64 %5, 0
  %15 = select i1 %14, i64 64, i64 %5
  %16 = add i64 %5, 1
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %25

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %23, %18 ], [ %15, %13 ]
  %20 = sub i64 4611686018427387903, %19
  %21 = icmp ult i64 %19, %20
  %22 = shl i64 %19, 1
  %23 = select i1 %21, i64 %22, i64 4611686018427387903
  %24 = icmp ult i64 %23, %16
  br i1 %24, label %18, label %25

25:                                               ; preds = %18, %13
  %26 = phi i64 [ %15, %13 ], [ %23, %18 ]
  %27 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %3, i64 %26) #10
  br i1 %27, label %28, label %71

28:                                               ; preds = %25
  %29 = load i64, i64* %8, align 8
  br label %30

30:                                               ; preds = %28, %11
  %31 = phi i64 [ %29, %28 ], [ %9, %11 ]
  %32 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %3, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %31
  store i32 4, i32* %34, align 4
  %35 = load i64, i64* %8, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %8, align 8
  %37 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8
  %38 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 4294967295
  br i1 %40, label %71, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 4611686018427387903
  br i1 %44, label %71, label %45

45:                                               ; preds = %41
  %46 = icmp eq i64 %39, %43
  br i1 %46, label %47, label %64

47:                                               ; preds = %45
  %48 = icmp eq i64 %39, 0
  %49 = select i1 %48, i64 64, i64 %39
  %50 = add i64 %39, 1
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %47, %52
  %53 = phi i64 [ %57, %52 ], [ %49, %47 ]
  %54 = sub i64 4611686018427387903, %53
  %55 = icmp ult i64 %53, %54
  %56 = shl i64 %53, 1
  %57 = select i1 %55, i64 %56, i64 4611686018427387903
  %58 = icmp ult i64 %57, %50
  br i1 %58, label %52, label %59

59:                                               ; preds = %52, %47
  %60 = phi i64 [ %49, %47 ], [ %57, %52 ]
  %61 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %37, i64 %60) #10
  br i1 %61, label %62, label %71

62:                                               ; preds = %59
  %63 = load i64, i64* %42, align 8
  br label %64

64:                                               ; preds = %62, %45
  %65 = phi i64 [ %63, %62 ], [ %43, %45 ]
  %66 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %37, i64 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %65
  store i32 %1, i32* %68, align 4
  %69 = load i64, i64* %42, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %42, align 8
  br label %71

71:                                               ; preds = %7, %2, %25, %64, %59, %41, %30
  %72 = phi i1 [ true, %64 ], [ false, %59 ], [ false, %30 ], [ false, %41 ], [ false, %25 ], [ false, %2 ], [ false, %7 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram8AddAbs64Ei(%"class.courgette::EncodedProgram"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 4294967295
  br i1 %6, label %71, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 4611686018427387903
  br i1 %10, label %71, label %11

11:                                               ; preds = %7
  %12 = icmp eq i64 %5, %9
  br i1 %12, label %13, label %30

13:                                               ; preds = %11
  %14 = icmp eq i64 %5, 0
  %15 = select i1 %14, i64 64, i64 %5
  %16 = add i64 %5, 1
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %25

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %23, %18 ], [ %15, %13 ]
  %20 = sub i64 4611686018427387903, %19
  %21 = icmp ult i64 %19, %20
  %22 = shl i64 %19, 1
  %23 = select i1 %21, i64 %22, i64 4611686018427387903
  %24 = icmp ult i64 %23, %16
  br i1 %24, label %18, label %25

25:                                               ; preds = %18, %13
  %26 = phi i64 [ %15, %13 ], [ %23, %18 ]
  %27 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %3, i64 %26) #10
  br i1 %27, label %28, label %71

28:                                               ; preds = %25
  %29 = load i64, i64* %8, align 8
  br label %30

30:                                               ; preds = %28, %11
  %31 = phi i64 [ %29, %28 ], [ %9, %11 ]
  %32 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %3, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %31
  store i32 9, i32* %34, align 4
  %35 = load i64, i64* %8, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %8, align 8
  %37 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8
  %38 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 4294967295
  br i1 %40, label %71, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 4611686018427387903
  br i1 %44, label %71, label %45

45:                                               ; preds = %41
  %46 = icmp eq i64 %39, %43
  br i1 %46, label %47, label %64

47:                                               ; preds = %45
  %48 = icmp eq i64 %39, 0
  %49 = select i1 %48, i64 64, i64 %39
  %50 = add i64 %39, 1
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %47, %52
  %53 = phi i64 [ %57, %52 ], [ %49, %47 ]
  %54 = sub i64 4611686018427387903, %53
  %55 = icmp ult i64 %53, %54
  %56 = shl i64 %53, 1
  %57 = select i1 %55, i64 %56, i64 4611686018427387903
  %58 = icmp ult i64 %57, %50
  br i1 %58, label %52, label %59

59:                                               ; preds = %52, %47
  %60 = phi i64 [ %49, %47 ], [ %57, %52 ]
  %61 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %37, i64 %60) #10
  br i1 %61, label %62, label %71

62:                                               ; preds = %59
  %63 = load i64, i64* %42, align 8
  br label %64

64:                                               ; preds = %62, %45
  %65 = phi i64 [ %63, %62 ], [ %43, %45 ]
  %66 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %37, i64 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %65
  store i32 %1, i32* %68, align 4
  %69 = load i64, i64* %42, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %42, align 8
  br label %71

71:                                               ; preds = %7, %2, %25, %64, %59, %41, %30
  %72 = phi i1 [ true, %64 ], [ false, %59 ], [ false, %30 ], [ false, %41 ], [ false, %25 ], [ false, %2 ], [ false, %7 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram8AddRel32Ei(%"class.courgette::EncodedProgram"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 4294967295
  br i1 %6, label %71, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 4611686018427387903
  br i1 %10, label %71, label %11

11:                                               ; preds = %7
  %12 = icmp eq i64 %5, %9
  br i1 %12, label %13, label %30

13:                                               ; preds = %11
  %14 = icmp eq i64 %5, 0
  %15 = select i1 %14, i64 64, i64 %5
  %16 = add i64 %5, 1
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %25

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %23, %18 ], [ %15, %13 ]
  %20 = sub i64 4611686018427387903, %19
  %21 = icmp ult i64 %19, %20
  %22 = shl i64 %19, 1
  %23 = select i1 %21, i64 %22, i64 4611686018427387903
  %24 = icmp ult i64 %23, %16
  br i1 %24, label %18, label %25

25:                                               ; preds = %18, %13
  %26 = phi i64 [ %15, %13 ], [ %23, %18 ]
  %27 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %3, i64 %26) #10
  br i1 %27, label %28, label %71

28:                                               ; preds = %25
  %29 = load i64, i64* %8, align 8
  br label %30

30:                                               ; preds = %28, %11
  %31 = phi i64 [ %29, %28 ], [ %9, %11 ]
  %32 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %3, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %31
  store i32 3, i32* %34, align 4
  %35 = load i64, i64* %8, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %8, align 8
  %37 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7
  %38 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 4294967295
  br i1 %40, label %71, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 4611686018427387903
  br i1 %44, label %71, label %45

45:                                               ; preds = %41
  %46 = icmp eq i64 %39, %43
  br i1 %46, label %47, label %64

47:                                               ; preds = %45
  %48 = icmp eq i64 %39, 0
  %49 = select i1 %48, i64 64, i64 %39
  %50 = add i64 %39, 1
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %47, %52
  %53 = phi i64 [ %57, %52 ], [ %49, %47 ]
  %54 = sub i64 4611686018427387903, %53
  %55 = icmp ult i64 %53, %54
  %56 = shl i64 %53, 1
  %57 = select i1 %55, i64 %56, i64 4611686018427387903
  %58 = icmp ult i64 %57, %50
  br i1 %58, label %52, label %59

59:                                               ; preds = %52, %47
  %60 = phi i64 [ %49, %47 ], [ %57, %52 ]
  %61 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %37, i64 %60) #10
  br i1 %61, label %62, label %71

62:                                               ; preds = %59
  %63 = load i64, i64* %42, align 8
  br label %64

64:                                               ; preds = %62, %45
  %65 = phi i64 [ %63, %62 ], [ %43, %45 ]
  %66 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %37, i64 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %65
  store i32 %1, i32* %68, align 4
  %69 = load i64, i64* %42, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %42, align 8
  br label %71

71:                                               ; preds = %7, %2, %25, %64, %59, %41, %30
  %72 = phi i1 [ true, %64 ], [ false, %59 ], [ false, %30 ], [ false, %41 ], [ false, %25 ], [ false, %2 ], [ false, %7 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram15AddPeMakeRelocsENS_14ExecutableTypeE(%"class.courgette::EncodedProgram"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  %4 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 4294967295
  br i1 %3, label %8, label %39

8:                                                ; preds = %2
  br i1 %7, label %70, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 4611686018427387903
  br i1 %12, label %70, label %13

13:                                               ; preds = %9
  %14 = icmp eq i64 %6, %11
  br i1 %14, label %15, label %32

15:                                               ; preds = %13
  %16 = icmp eq i64 %6, 0
  %17 = select i1 %16, i64 64, i64 %6
  %18 = add i64 %6, 1
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %20, label %27

20:                                               ; preds = %15, %20
  %21 = phi i64 [ %25, %20 ], [ %17, %15 ]
  %22 = sub i64 4611686018427387903, %21
  %23 = icmp ult i64 %21, %22
  %24 = shl i64 %21, 1
  %25 = select i1 %23, i64 %24, i64 4611686018427387903
  %26 = icmp ult i64 %25, %18
  br i1 %26, label %20, label %27

27:                                               ; preds = %20, %15
  %28 = phi i64 [ %17, %15 ], [ %25, %20 ]
  %29 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %4, i64 %28) #10
  br i1 %29, label %30, label %70

30:                                               ; preds = %27
  %31 = load i64, i64* %10, align 8
  br label %32

32:                                               ; preds = %30, %13
  %33 = phi i64 [ %31, %30 ], [ %11, %13 ]
  %34 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %4, i64 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 %33
  store i32 5, i32* %36, align 4
  %37 = load i64, i64* %10, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %10, align 8
  br label %70

39:                                               ; preds = %2
  br i1 %7, label %70, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 4611686018427387903
  br i1 %43, label %70, label %44

44:                                               ; preds = %40
  %45 = icmp eq i64 %6, %42
  br i1 %45, label %46, label %63

46:                                               ; preds = %44
  %47 = icmp eq i64 %6, 0
  %48 = select i1 %47, i64 64, i64 %6
  %49 = add i64 %6, 1
  %50 = icmp ult i64 %48, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %46, %51
  %52 = phi i64 [ %56, %51 ], [ %48, %46 ]
  %53 = sub i64 4611686018427387903, %52
  %54 = icmp ult i64 %52, %53
  %55 = shl i64 %52, 1
  %56 = select i1 %54, i64 %55, i64 4611686018427387903
  %57 = icmp ult i64 %56, %49
  br i1 %57, label %51, label %58

58:                                               ; preds = %51, %46
  %59 = phi i64 [ %48, %46 ], [ %56, %51 ]
  %60 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %4, i64 %59) #10
  br i1 %60, label %61, label %70

61:                                               ; preds = %58
  %62 = load i64, i64* %41, align 8
  br label %63

63:                                               ; preds = %61, %44
  %64 = phi i64 [ %62, %61 ], [ %42, %44 ]
  %65 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %4, i64 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %64
  store i32 8, i32* %67, align 4
  %68 = load i64, i64* %41, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %41, align 8
  br label %70

70:                                               ; preds = %63, %58, %40, %39, %32, %27, %9, %8
  %71 = phi i1 [ true, %32 ], [ false, %27 ], [ false, %8 ], [ false, %9 ], [ true, %63 ], [ false, %58 ], [ false, %39 ], [ false, %40 ]
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram16AddElfMakeRelocsEv(%"class.courgette::EncodedProgram"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 4294967295
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 4611686018427387903
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = icmp eq i64 %4, %8
  br i1 %11, label %12, label %29

12:                                               ; preds = %10
  %13 = icmp eq i64 %4, 0
  %14 = select i1 %13, i64 64, i64 %4
  %15 = add i64 %4, 1
  %16 = icmp ult i64 %14, %15
  br i1 %16, label %17, label %24

17:                                               ; preds = %12, %17
  %18 = phi i64 [ %22, %17 ], [ %14, %12 ]
  %19 = sub i64 4611686018427387903, %18
  %20 = icmp ult i64 %18, %19
  %21 = shl i64 %18, 1
  %22 = select i1 %20, i64 %21, i64 4611686018427387903
  %23 = icmp ult i64 %22, %15
  br i1 %23, label %17, label %24

24:                                               ; preds = %17, %12
  %25 = phi i64 [ %14, %12 ], [ %22, %17 ]
  %26 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %2, i64 %25) #10
  br i1 %26, label %27, label %36

27:                                               ; preds = %24
  %28 = load i64, i64* %7, align 8
  br label %29

29:                                               ; preds = %27, %10
  %30 = phi i64 [ %28, %27 ], [ %8, %10 ]
  %31 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %2, i64 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 %30
  store i32 6, i32* %33, align 4
  %34 = load i64, i64* %7, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %7, align 8
  br label %36

36:                                               ; preds = %1, %6, %24, %29
  %37 = phi i1 [ true, %29 ], [ false, %24 ], [ false, %1 ], [ false, %6 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette14EncodedProgram16DebuggingSummaryEv(%"class.courgette::EncodedProgram"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i64 35) #10
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %46

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %6) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i32 258, i32 -1) #10
  %7 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i64 22) #10
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15) #10
  %11 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %10, i64 %12) #10
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 15) #10
  %15 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %14, i64 %16) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15) #10
  %19 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %18, i64 %20) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15) #10
  %23 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %22, i64 %24) #10
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 15) #10
  %27 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %26, i64 %28) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i64 15) #10
  %31 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %30, i64 %32) #10
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 15) #10
  %35 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %34, i64 %36) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 15) #10
  %39 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %38, i64 %40) #10
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i64 15) #10
  %43 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %42, i64 %44) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %6) #10
  br label %46

46:                                               ; preds = %1, %5
  ret void
}

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram7WriteToEPNS_13SinkStreamSetE(%"class.courgette::EncodedProgram"* nocapture readonly, %"class.courgette::SinkStreamSet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i64, align 8
  %6 = tail call %"class.base::Environment"* @_ZN4base11Environment6CreateEv() #10
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #10
  %10 = bitcast %"class.base::Environment"* %6 to i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)***
  %11 = load i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)**, i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)*, i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)** %11, i64 2
  %13 = load i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)*, i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)** %12, align 8
  %14 = call zeroext i1 %13(%"class.base::Environment"* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i64 8, %"class.std::__1::basic_string"* nonnull %4) #10
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  store i64 -6148914691236517206, i64* %5, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %8, align 8
  %21 = select i1 %19, i8* %20, i8* %7
  %22 = load i64, i64* %9, align 8
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i64 %22, i64 %23
  %25 = call zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8* %21, i64 %24, i64* nonnull %5) #10
  %26 = load i64, i64* %5, align 8
  %27 = trunc i64 %26 to i32
  %28 = select i1 %25, i32 %27, i32 -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %29 = load i8, i8* %17, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %2
  %32 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %31, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  %34 = icmp eq %"class.base::Environment"* %6, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.base::Environment"* %6 to void (%"class.base::Environment"*)***
  %37 = load void (%"class.base::Environment"*)**, void (%"class.base::Environment"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::Environment"*)*, void (%"class.base::Environment"*)** %37, i64 1
  %39 = load void (%"class.base::Environment"*)*, void (%"class.base::Environment"*)** %38, align 8
  call void %39(%"class.base::Environment"* nonnull %6) #10
  br label %40

40:                                               ; preds = %33, %35
  %41 = and i32 %28, 4096
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %60

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = lshr i64 %45, 32
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  %51 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 0
  %52 = select i1 %50, %"class.courgette::SinkStream"* null, %"class.courgette::SinkStream"* %51
  %53 = call zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"* %52, i32 %47) #10
  br i1 %53, label %54, label %344

54:                                               ; preds = %43
  %55 = trunc i64 %45 to i32
  %56 = load i64, i64* %48, align 8
  %57 = icmp eq i64 %56, 0
  %58 = select i1 %57, %"class.courgette::SinkStream"* null, %"class.courgette::SinkStream"* %51
  %59 = call zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"* %58, i32 %55) #10
  br i1 %59, label %60, label %344

60:                                               ; preds = %54, %40
  %61 = and i32 %28, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %90, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp ugt i64 %65, 5
  %67 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 5
  %68 = select i1 %66, %"class.courgette::SinkStream"* %67, %"class.courgette::SinkStream"* null
  %69 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %68, i64 %70) #10
  %72 = icmp ne i64 %70, 0
  %73 = and i1 %71, %72
  br i1 %73, label %74, label %87

74:                                               ; preds = %63
  %75 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2, i32 0
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %84, %76 ]
  %78 = phi i32 [ 0, %74 ], [ %81, %76 ]
  %79 = load i32*, i32** %75, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 %77
  %81 = load i32, i32* %80, align 4
  %82 = sub i32 %81, %78
  %83 = call zeroext i1 @_ZN9courgette10SinkStream19WriteVarint32SignedEi(%"class.courgette::SinkStream"* %68, i32 %82) #10
  %84 = add nuw i64 %77, 1
  %85 = icmp ult i64 %84, %70
  %86 = and i1 %85, %83
  br i1 %86, label %76, label %87

87:                                               ; preds = %76, %63
  %88 = phi i1 [ %71, %63 ], [ %83, %76 ]
  %89 = zext i1 %88 to i8
  br label %90

90:                                               ; preds = %60, %87
  %91 = phi i8 [ %89, %87 ], [ 1, %60 ]
  %92 = and i32 %28, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %122, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = icmp ugt i64 %96, 6
  %98 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 6
  %99 = select i1 %97, %"class.courgette::SinkStream"* %98, %"class.courgette::SinkStream"* null
  %100 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 1, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %99, i64 %101) #10
  %103 = icmp ne i64 %101, 0
  %104 = and i1 %102, %103
  br i1 %104, label %105, label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 1, i32 0
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %115, %107 ]
  %109 = phi i32 [ 0, %105 ], [ %112, %107 ]
  %110 = load i32*, i32** %106, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 %108
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 %112, %109
  %114 = call zeroext i1 @_ZN9courgette10SinkStream19WriteVarint32SignedEi(%"class.courgette::SinkStream"* %99, i32 %113) #10
  %115 = add nuw i64 %108, 1
  %116 = icmp ult i64 %115, %101
  %117 = and i1 %116, %114
  br i1 %117, label %107, label %118

118:                                              ; preds = %107, %94
  %119 = phi i1 [ %102, %94 ], [ %114, %107 ]
  %120 = zext i1 %119 to i8
  %121 = and i8 %91, %120
  br label %122

122:                                              ; preds = %90, %118
  %123 = phi i8 [ %121, %118 ], [ %91, %90 ]
  br i1 %42, label %124, label %151

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  %128 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 0
  %129 = select i1 %127, %"class.courgette::SinkStream"* null, %"class.courgette::SinkStream"* %128
  %130 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %129, i64 %131) #10
  %133 = icmp ne i64 %131, 0
  %134 = and i1 %132, %133
  br i1 %134, label %135, label %147

135:                                              ; preds = %124
  %136 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4, i32 0
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %144, %137 ]
  %139 = load i32*, i32** %136, align 8
  %140 = getelementptr inbounds i32, i32* %139, i64 %138
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %129, i64 %142) #10
  %144 = add nuw i64 %138, 1
  %145 = icmp ult i64 %144, %131
  %146 = and i1 %145, %143
  br i1 %146, label %137, label %147

147:                                              ; preds = %137, %124
  %148 = phi i1 [ %132, %124 ], [ %143, %137 ]
  %149 = zext i1 %148 to i8
  %150 = and i8 %123, %149
  br label %151

151:                                              ; preds = %147, %122
  %152 = phi i8 [ %150, %147 ], [ %123, %122 ]
  %153 = and i32 %28, 256
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %224, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %157 = load i64, i64* %156, align 8
  %158 = icmp ugt i64 %157, 1
  %159 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 1
  %160 = select i1 %158, %"class.courgette::SinkStream"* %159, %"class.courgette::SinkStream"* null
  %161 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, 5
  %164 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %160, i64 0, i32 0, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = add i64 %163, %165
  %167 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %160, i64 0, i32 0, i32 2
  %168 = load i64, i64* %167, align 8
  %169 = icmp eq i64 %168, 4294967295
  br i1 %169, label %198, label %170

170:                                              ; preds = %155
  %171 = icmp ult i64 %168, %166
  br i1 %171, label %172, label %198

172:                                              ; preds = %170
  %173 = icmp ugt i64 %166, 256
  %174 = select i1 %173, i64 %166, i64 256
  %175 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #10
  store i8* null, i8** %3, align 8
  %176 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %174, i8** nonnull %3) #10
  %177 = load i8*, i8** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #10
  %178 = icmp eq i8* %177, null
  %179 = xor i1 %176, true
  %180 = or i1 %178, %179
  %181 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %160, i64 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  %183 = icmp eq i8* %182, null
  br i1 %180, label %184, label %187

184:                                              ; preds = %172
  br i1 %183, label %192, label %185

185:                                              ; preds = %184
  call void @free(i8* nonnull %182) #10
  %186 = bitcast %"class.courgette::SinkStream"* %160 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 24, i1 false) #10
  br label %192

187:                                              ; preds = %172
  br i1 %183, label %191, label %188

188:                                              ; preds = %187
  %189 = load i64, i64* %164, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %177, i8* nonnull align 1 %182, i64 %189, i1 false) #10
  %190 = load i8*, i8** %181, align 8
  call void @free(i8* %190) #10
  br label %191

191:                                              ; preds = %188, %187
  store i8* %177, i8** %181, align 8
  br label %192

192:                                              ; preds = %191, %185, %184
  %193 = phi i64 [ %174, %191 ], [ 4294967295, %184 ], [ 4294967295, %185 ]
  store i64 %193, i64* %167, align 8
  %194 = icmp ne i64 %193, 4294967295
  %195 = zext i1 %194 to i8
  %196 = load i64, i64* %156, align 8
  %197 = load i64, i64* %161, align 8
  br label %198

198:                                              ; preds = %155, %170, %192
  %199 = phi i64 [ %197, %192 ], [ %162, %155 ], [ %162, %170 ]
  %200 = phi i64 [ %196, %192 ], [ %157, %155 ], [ %157, %170 ]
  %201 = phi i8 [ %195, %192 ], [ 0, %155 ], [ 1, %170 ]
  %202 = and i8 %201, %152
  %203 = icmp ugt i64 %200, 1
  %204 = select i1 %203, %"class.courgette::SinkStream"* %159, %"class.courgette::SinkStream"* null
  %205 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %204, i64 %199) #10
  %206 = icmp ne i64 %199, 0
  %207 = and i1 %205, %206
  br i1 %207, label %208, label %220

208:                                              ; preds = %198
  %209 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 0
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %217, %210 ]
  %212 = load i32*, i32** %209, align 8
  %213 = getelementptr inbounds i32, i32* %212, i64 %211
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %204, i64 %215) #10
  %217 = add nuw i64 %211, 1
  %218 = icmp ult i64 %217, %199
  %219 = and i1 %218, %216
  br i1 %219, label %210, label %220

220:                                              ; preds = %210, %198
  %221 = phi i1 [ %205, %198 ], [ %216, %210 ]
  %222 = zext i1 %221 to i8
  %223 = and i8 %202, %222
  br label %224

224:                                              ; preds = %151, %220
  %225 = phi i8 [ %223, %220 ], [ %152, %151 ]
  %226 = and i32 %28, 1024
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %254, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %230 = load i64, i64* %229, align 8
  %231 = icmp ugt i64 %230, 7
  %232 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 7
  %233 = select i1 %231, %"class.courgette::SinkStream"* %232, %"class.courgette::SinkStream"* null
  %234 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 1
  %235 = load i64, i64* %234, align 8
  %236 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %233, i64 %235) #10
  %237 = icmp ne i64 %235, 0
  %238 = and i1 %236, %237
  br i1 %238, label %239, label %250

239:                                              ; preds = %228
  %240 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 0
  br label %241

241:                                              ; preds = %241, %239
  %242 = phi i64 [ 0, %239 ], [ %247, %241 ]
  %243 = load i64*, i64** %240, align 8
  %244 = getelementptr inbounds i64, i64* %243, i64 %242
  %245 = load i64, i64* %244, align 8
  %246 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %233, i64 %245) #10
  %247 = add nuw i64 %242, 1
  %248 = icmp ult i64 %247, %235
  %249 = and i1 %248, %246
  br i1 %249, label %241, label %250

250:                                              ; preds = %241, %228
  %251 = phi i1 [ %236, %228 ], [ %246, %241 ]
  %252 = zext i1 %251 to i8
  %253 = and i8 %225, %252
  br label %254

254:                                              ; preds = %224, %250
  %255 = phi i8 [ %253, %250 ], [ %225, %224 ]
  %256 = and i32 %28, 512
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %278, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %260 = load i64, i64* %259, align 8
  %261 = icmp ugt i64 %260, 2
  %262 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 2
  %263 = select i1 %261, %"class.courgette::SinkStream"* %262, %"class.courgette::SinkStream"* null
  %264 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6, i32 1
  %265 = load i64, i64* %264, align 8
  %266 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %263, i64 %265) #10
  %267 = icmp eq i64 %265, 0
  %268 = xor i1 %266, true
  %269 = or i1 %267, %268
  br i1 %269, label %274, label %270

270:                                              ; preds = %258
  %271 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %263, i8* %272, i64 %265) #10
  br label %274

274:                                              ; preds = %258, %270
  %275 = phi i1 [ %273, %270 ], [ %266, %258 ]
  %276 = zext i1 %275 to i8
  %277 = and i8 %255, %276
  br label %278

278:                                              ; preds = %254, %274
  %279 = phi i8 [ %277, %274 ], [ %255, %254 ]
  %280 = and i32 %28, 16
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %309, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %284 = load i64, i64* %283, align 8
  %285 = icmp ugt i64 %284, 3
  %286 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 3
  %287 = select i1 %285, %"class.courgette::SinkStream"* %286, %"class.courgette::SinkStream"* null
  %288 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 1
  %289 = load i64, i64* %288, align 8
  %290 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %287, i64 %289) #10
  %291 = icmp ne i64 %289, 0
  %292 = and i1 %290, %291
  br i1 %292, label %293, label %305

293:                                              ; preds = %282
  %294 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 0
  br label %295

295:                                              ; preds = %295, %293
  %296 = phi i64 [ 0, %293 ], [ %302, %295 ]
  %297 = load i32*, i32** %294, align 8
  %298 = getelementptr inbounds i32, i32* %297, i64 %296
  %299 = load i32, i32* %298, align 4
  %300 = zext i32 %299 to i64
  %301 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %287, i64 %300) #10
  %302 = add nuw i64 %296, 1
  %303 = icmp ult i64 %302, %289
  %304 = and i1 %303, %301
  br i1 %304, label %295, label %305

305:                                              ; preds = %295, %282
  %306 = phi i1 [ %290, %282 ], [ %301, %295 ]
  %307 = zext i1 %306 to i8
  %308 = and i8 %279, %307
  br label %309

309:                                              ; preds = %278, %305
  %310 = phi i8 [ %308, %305 ], [ %279, %278 ]
  %311 = and i32 %28, 32
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %340, label %313

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %315 = load i64, i64* %314, align 8
  %316 = icmp ugt i64 %315, 4
  %317 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 4
  %318 = select i1 %316, %"class.courgette::SinkStream"* %317, %"class.courgette::SinkStream"* null
  %319 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7, i32 1
  %320 = load i64, i64* %319, align 8
  %321 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %318, i64 %320) #10
  %322 = icmp ne i64 %320, 0
  %323 = and i1 %321, %322
  br i1 %323, label %324, label %336

324:                                              ; preds = %313
  %325 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7, i32 0
  br label %326

326:                                              ; preds = %326, %324
  %327 = phi i64 [ 0, %324 ], [ %333, %326 ]
  %328 = load i32*, i32** %325, align 8
  %329 = getelementptr inbounds i32, i32* %328, i64 %327
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i64
  %332 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %318, i64 %331) #10
  %333 = add nuw i64 %327, 1
  %334 = icmp ult i64 %333, %320
  %335 = and i1 %334, %332
  br i1 %335, label %326, label %336

336:                                              ; preds = %326, %313
  %337 = phi i1 [ %321, %313 ], [ %332, %326 ]
  %338 = zext i1 %337 to i8
  %339 = and i8 %310, %338
  br label %340

340:                                              ; preds = %309, %336
  %341 = phi i8 [ %339, %336 ], [ %310, %309 ]
  %342 = and i8 %341, 1
  %343 = icmp ne i8 %342, 0
  br label %344

344:                                              ; preds = %54, %43, %340
  %345 = phi i1 [ %343, %340 ], [ false, %43 ], [ false, %54 ]
  ret i1 %345
}

declare zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram8ReadFromEPNS_15SourceStreamSetE(%"class.courgette::EncodedProgram"*, %"class.courgette::SourceStreamSet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  store i32 -1431655766, i32* %9, align 4
  %12 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #10
  store i32 -1431655766, i32* %10, align 4
  %13 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 0
  %17 = select i1 %15, %"class.courgette::SourceStream"* null, %"class.courgette::SourceStream"* %16
  %18 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %17, i32* nonnull %9) #10
  br i1 %18, label %19, label %323

19:                                               ; preds = %2
  %20 = load i64, i64* %13, align 8
  %21 = icmp eq i64 %20, 0
  %22 = select i1 %21, %"class.courgette::SourceStream"* null, %"class.courgette::SourceStream"* %16
  %23 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %22, i32* nonnull %10) #10
  br i1 %23, label %24, label %323

24:                                               ; preds = %19
  %25 = load i32, i32* %9, align 4
  %26 = zext i32 %25 to i64
  %27 = shl nuw i64 %26, 32
  %28 = load i32, i32* %10, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %27, %29
  %31 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2
  %33 = load i64, i64* %13, align 8
  %34 = icmp ugt i64 %33, 5
  %35 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 5
  %36 = select i1 %34, %"class.courgette::SourceStream"* %35, %"class.courgette::SourceStream"* null
  %37 = call fastcc zeroext i1 @_ZN9courgette12_GLOBAL__N_117ReadSigned32DeltaINS_13NoThrowBufferIjNS_15MemoryAllocatorIjEEEEEEbPT_PNS_12SourceStreamE(%"class.courgette::NoThrowBuffer"* %32, %"class.courgette::SourceStream"* %36)
  br i1 %37, label %38, label %323

38:                                               ; preds = %24
  %39 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 1
  %40 = load i64, i64* %13, align 8
  %41 = icmp ugt i64 %40, 6
  %42 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 6
  %43 = select i1 %41, %"class.courgette::SourceStream"* %42, %"class.courgette::SourceStream"* null
  %44 = call fastcc zeroext i1 @_ZN9courgette12_GLOBAL__N_117ReadSigned32DeltaINS_13NoThrowBufferIjNS_15MemoryAllocatorIjEEEEEEbPT_PNS_12SourceStreamE(%"class.courgette::NoThrowBuffer"* %39, %"class.courgette::SourceStream"* %43)
  br i1 %44, label %45, label %323

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4
  %47 = load i64, i64* %13, align 8
  %48 = icmp eq i64 %47, 0
  %49 = select i1 %48, %"class.courgette::SourceStream"* null, %"class.courgette::SourceStream"* %16
  %50 = call fastcc zeroext i1 @_ZN9courgette12_GLOBAL__N_110ReadVectorINS_13NoThrowBufferIjNS_15MemoryAllocatorIjEEEEEEbPT_PNS_12SourceStreamE(%"class.courgette::NoThrowBuffer"* %46, %"class.courgette::SourceStream"* %49)
  br i1 %50, label %51, label %323

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3
  %53 = load i64, i64* %13, align 8
  %54 = icmp ugt i64 %53, 1
  %55 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 1
  %56 = select i1 %54, %"class.courgette::SourceStream"* %55, %"class.courgette::SourceStream"* null
  %57 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #10
  store i32 -1431655766, i32* %5, align 4
  %58 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %56, i32* nonnull %5) #10
  br i1 %58, label %59, label %116

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %52, i64 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = icmp eq i32* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = bitcast i32* %61 to i8*
  call void @free(i8* %64) #10
  %65 = bitcast %"class.courgette::NoThrowBuffer.0"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #10
  br label %66

66:                                               ; preds = %63, %59
  %67 = load i32, i32* %5, align 4
  %68 = zext i32 %67 to i64
  %69 = call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %52, i64 %68) #10
  br i1 %69, label %70, label %116

70:                                               ; preds = %66
  %71 = bitcast i32* %6 to i8*
  %72 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 2
  %73 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %74 = load i32, i32* %5, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %117, label %76

76:                                               ; preds = %70, %106
  %77 = phi i64 [ %112, %106 ], [ 0, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #10
  store i32 -1431655766, i32* %6, align 4
  %78 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %56, i32* nonnull %6) #10
  br i1 %78, label %79, label %105

79:                                               ; preds = %76
  %80 = load i32, i32* %6, align 4
  %81 = load i64, i64* %72, align 8
  %82 = icmp eq i64 %81, 4294967295
  br i1 %82, label %105, label %83

83:                                               ; preds = %79
  %84 = load i64, i64* %73, align 8
  %85 = icmp eq i64 %84, 4611686018427387903
  br i1 %85, label %105, label %86

86:                                               ; preds = %83
  %87 = icmp eq i64 %81, %84
  br i1 %87, label %88, label %106

88:                                               ; preds = %86
  %89 = icmp eq i64 %81, 0
  %90 = select i1 %89, i64 64, i64 %81
  %91 = add i64 %81, 1
  %92 = icmp ult i64 %90, %91
  br i1 %92, label %93, label %100

93:                                               ; preds = %88, %93
  %94 = phi i64 [ %98, %93 ], [ %90, %88 ]
  %95 = sub i64 4611686018427387903, %94
  %96 = icmp ult i64 %94, %95
  %97 = shl i64 %94, 1
  %98 = select i1 %96, i64 %97, i64 4611686018427387903
  %99 = icmp ult i64 %98, %91
  br i1 %99, label %93, label %100

100:                                              ; preds = %93, %88
  %101 = phi i64 [ %90, %88 ], [ %98, %93 ]
  %102 = call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %52, i64 %101) #10
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = load i64, i64* %73, align 8
  br label %106

105:                                              ; preds = %100, %83, %79, %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #10
  br label %116

106:                                              ; preds = %103, %86
  %107 = phi i64 [ %104, %103 ], [ %84, %86 ]
  %108 = load i32*, i32** %60, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 %107
  store i32 %80, i32* %109, align 4
  %110 = load i64, i64* %73, align 8
  %111 = add i64 %110, 1
  store i64 %111, i64* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #10
  %112 = add nuw nsw i64 %77, 1
  %113 = load i32, i32* %5, align 4
  %114 = zext i32 %113 to i64
  %115 = icmp ult i64 %112, %114
  br i1 %115, label %76, label %117

116:                                              ; preds = %51, %66, %105
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #10
  br label %323

117:                                              ; preds = %106, %70
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #10
  %118 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5
  %119 = load i64, i64* %13, align 8
  %120 = icmp ugt i64 %119, 7
  %121 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 7
  %122 = select i1 %120, %"class.courgette::SourceStream"* %121, %"class.courgette::SourceStream"* null
  %123 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123) #10
  store i32 -1431655766, i32* %3, align 4
  %124 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %122, i32* nonnull %3) #10
  br i1 %124, label %125, label %183

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.courgette::NoThrowBuffer.4", %"class.courgette::NoThrowBuffer.4"* %118, i64 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = icmp eq i64* %127, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %125
  %130 = bitcast i64* %127 to i8*
  call void @free(i8* %130) #10
  %131 = bitcast %"class.courgette::NoThrowBuffer.4"* %118 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 24, i1 false) #10
  br label %132

132:                                              ; preds = %129, %125
  %133 = load i32, i32* %3, align 4
  %134 = zext i32 %133 to i64
  %135 = call zeroext i1 @_ZN9courgette13NoThrowBufferImNS_15MemoryAllocatorImEEE7reserveEm(%"class.courgette::NoThrowBuffer.4"* %118, i64 %134) #10
  br i1 %135, label %136, label %183

136:                                              ; preds = %132
  %137 = bitcast i32* %4 to i8*
  %138 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 2
  %139 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 1
  %140 = load i32, i32* %3, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %184, label %142

142:                                              ; preds = %136, %173
  %143 = phi i64 [ %179, %173 ], [ 0, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #10
  store i32 -1431655766, i32* %4, align 4
  %144 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %122, i32* nonnull %4) #10
  br i1 %144, label %145, label %172

145:                                              ; preds = %142
  %146 = load i32, i32* %4, align 4
  %147 = zext i32 %146 to i64
  %148 = load i64, i64* %138, align 8
  %149 = icmp eq i64 %148, 4294967295
  br i1 %149, label %172, label %150

150:                                              ; preds = %145
  %151 = load i64, i64* %139, align 8
  %152 = icmp eq i64 %151, 2305843009213693951
  br i1 %152, label %172, label %153

153:                                              ; preds = %150
  %154 = icmp eq i64 %148, %151
  br i1 %154, label %155, label %173

155:                                              ; preds = %153
  %156 = icmp eq i64 %148, 0
  %157 = select i1 %156, i64 32, i64 %148
  %158 = add i64 %148, 1
  %159 = icmp ult i64 %157, %158
  br i1 %159, label %160, label %167

160:                                              ; preds = %155, %160
  %161 = phi i64 [ %165, %160 ], [ %157, %155 ]
  %162 = sub i64 2305843009213693951, %161
  %163 = icmp ult i64 %161, %162
  %164 = shl i64 %161, 1
  %165 = select i1 %163, i64 %164, i64 2305843009213693951
  %166 = icmp ult i64 %165, %158
  br i1 %166, label %160, label %167

167:                                              ; preds = %160, %155
  %168 = phi i64 [ %157, %155 ], [ %165, %160 ]
  %169 = call zeroext i1 @_ZN9courgette13NoThrowBufferImNS_15MemoryAllocatorImEEE7reserveEm(%"class.courgette::NoThrowBuffer.4"* %118, i64 %168) #10
  br i1 %169, label %170, label %172

170:                                              ; preds = %167
  %171 = load i64, i64* %139, align 8
  br label %173

172:                                              ; preds = %167, %150, %145, %142
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #10
  br label %183

173:                                              ; preds = %170, %153
  %174 = phi i64 [ %171, %170 ], [ %151, %153 ]
  %175 = load i64*, i64** %126, align 8
  %176 = getelementptr inbounds i64, i64* %175, i64 %174
  store i64 %147, i64* %176, align 8
  %177 = load i64, i64* %139, align 8
  %178 = add i64 %177, 1
  store i64 %178, i64* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #10
  %179 = add nuw nsw i64 %143, 1
  %180 = load i32, i32* %3, align 4
  %181 = zext i32 %180 to i64
  %182 = icmp ult i64 %179, %181
  br i1 %182, label %142, label %184

183:                                              ; preds = %117, %132, %172
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #10
  br label %323

184:                                              ; preds = %173, %136
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #10
  %185 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6
  %186 = load i64, i64* %13, align 8
  %187 = icmp ugt i64 %186, 2
  %188 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 2
  %189 = select i1 %187, %"class.courgette::SourceStream"* %188, %"class.courgette::SourceStream"* null
  %190 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %190) #10
  store i32 -1431655766, i32* %8, align 4
  %191 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %189, i32* nonnull %8) #10
  br i1 %191, label %192, label %283

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"class.courgette::NoThrowBuffer.8", %"class.courgette::NoThrowBuffer.8"* %185, i64 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = icmp eq i8* %194, null
  br i1 %195, label %196, label %199

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6, i32 1
  %198 = load i64, i64* %197, align 8
  br label %201

199:                                              ; preds = %192
  call void @free(i8* nonnull %194) #10
  %200 = bitcast %"class.courgette::NoThrowBuffer.8"* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 24, i1 false) #10
  br label %201

201:                                              ; preds = %199, %196
  %202 = phi i64 [ %198, %196 ], [ 0, %199 ]
  %203 = load i32, i32* %8, align 4
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6, i32 1
  %206 = icmp ult i64 %202, %204
  br i1 %206, label %207, label %279

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6, i32 2
  %209 = load i64, i64* %208, align 8
  %210 = icmp eq i64 %209, 4294967295
  br i1 %210, label %283, label %211

211:                                              ; preds = %207
  %212 = icmp ult i64 %209, %204
  br i1 %212, label %213, label %236

213:                                              ; preds = %211
  %214 = icmp ugt i64 %204, 256
  %215 = select i1 %214, i64 %204, i64 256
  %216 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #10
  store i8* null, i8** %7, align 8
  %217 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %215, i8** nonnull %7) #10
  %218 = load i8*, i8** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #10
  %219 = icmp eq i8* %218, null
  %220 = xor i1 %217, true
  %221 = or i1 %219, %220
  %222 = load i8*, i8** %193, align 8
  %223 = icmp eq i8* %222, null
  br i1 %221, label %224, label %227

224:                                              ; preds = %213
  br i1 %223, label %231, label %225

225:                                              ; preds = %224
  call void @free(i8* nonnull %222) #10
  %226 = bitcast %"class.courgette::NoThrowBuffer.8"* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 24, i1 false) #10
  br label %231

227:                                              ; preds = %213
  br i1 %223, label %232, label %228

228:                                              ; preds = %227
  %229 = load i64, i64* %205, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %218, i8* nonnull align 1 %222, i64 %229, i1 false) #10
  %230 = load i8*, i8** %193, align 8
  call void @free(i8* %230) #10
  br label %232

231:                                              ; preds = %225, %224
  store i64 4294967295, i64* %208, align 8
  br label %283

232:                                              ; preds = %228, %227
  store i8* %218, i8** %193, align 8
  store i64 %215, i64* %208, align 8
  %233 = icmp eq i64 %215, 4294967295
  br i1 %233, label %283, label %234

234:                                              ; preds = %232
  %235 = load i64, i64* %205, align 8
  br label %236

236:                                              ; preds = %234, %211
  %237 = phi i8* [ %218, %234 ], [ null, %211 ]
  %238 = phi i64 [ %235, %234 ], [ %202, %211 ]
  %239 = icmp ult i64 %238, %204
  br i1 %239, label %240, label %277

240:                                              ; preds = %236
  %241 = getelementptr inbounds i8, i8* %237, i64 %238
  store i8 0, i8* %241, align 1
  %242 = add nuw i64 %238, 1
  %243 = icmp eq i64 %242, %204
  br i1 %243, label %277, label %244

244:                                              ; preds = %240
  %245 = xor i64 %238, 3
  %246 = add i64 %245, %204
  %247 = add nsw i64 %204, -2
  %248 = sub i64 %247, %238
  %249 = and i64 %246, 3
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %259, label %251

251:                                              ; preds = %244, %251
  %252 = phi i64 [ %256, %251 ], [ %242, %244 ]
  %253 = phi i64 [ %257, %251 ], [ %249, %244 ]
  %254 = load i8*, i8** %193, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 %252
  store i8 0, i8* %255, align 1
  %256 = add nuw i64 %252, 1
  %257 = add i64 %253, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %251, !llvm.loop !9

259:                                              ; preds = %251, %244
  %260 = phi i64 [ %242, %244 ], [ %256, %251 ]
  %261 = icmp ult i64 %248, 3
  br i1 %261, label %277, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = load i8*, i8** %193, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  store i8 0, i8* %265, align 1
  %266 = add nuw i64 %263, 1
  %267 = load i8*, i8** %193, align 8
  %268 = getelementptr inbounds i8, i8* %267, i64 %266
  store i8 0, i8* %268, align 1
  %269 = add nuw i64 %263, 2
  %270 = load i8*, i8** %193, align 8
  %271 = getelementptr inbounds i8, i8* %270, i64 %269
  store i8 0, i8* %271, align 1
  %272 = add nuw i64 %263, 3
  %273 = load i8*, i8** %193, align 8
  %274 = getelementptr inbounds i8, i8* %273, i64 %272
  store i8 0, i8* %274, align 1
  %275 = add nuw i64 %263, 4
  %276 = icmp eq i64 %275, %204
  br i1 %276, label %277, label %262

277:                                              ; preds = %259, %262, %240, %236
  %278 = load i32, i32* %8, align 4
  br label %279

279:                                              ; preds = %277, %201
  %280 = phi i32 [ %278, %277 ], [ %203, %201 ]
  store i64 %204, i64* %205, align 8
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %284

282:                                              ; preds = %279
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190) #10
  br label %288

283:                                              ; preds = %184, %232, %231, %207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190) #10
  br label %323

284:                                              ; preds = %279
  %285 = zext i32 %280 to i64
  %286 = load i8*, i8** %193, align 8
  %287 = call zeroext i1 @_ZN9courgette12SourceStream4ReadEPvm(%"class.courgette::SourceStream"* %189, i8* %286, i64 %285) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190) #10
  br i1 %287, label %288, label %323

288:                                              ; preds = %282, %284
  %289 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8
  %290 = load i64, i64* %13, align 8
  %291 = icmp ugt i64 %290, 3
  %292 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 3
  %293 = select i1 %291, %"class.courgette::SourceStream"* %292, %"class.courgette::SourceStream"* null
  %294 = call fastcc zeroext i1 @_ZN9courgette12_GLOBAL__N_110ReadVectorINS_13NoThrowBufferIjNS_15MemoryAllocatorIjEEEEEEbPT_PNS_12SourceStreamE(%"class.courgette::NoThrowBuffer"* %289, %"class.courgette::SourceStream"* %293)
  br i1 %294, label %295, label %323

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7
  %297 = load i64, i64* %13, align 8
  %298 = icmp ugt i64 %297, 4
  %299 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 4
  %300 = select i1 %298, %"class.courgette::SourceStream"* %299, %"class.courgette::SourceStream"* null
  %301 = call fastcc zeroext i1 @_ZN9courgette12_GLOBAL__N_110ReadVectorINS_13NoThrowBufferIjNS_15MemoryAllocatorIjEEEEEEbPT_PNS_12SourceStreamE(%"class.courgette::NoThrowBuffer"* %296, %"class.courgette::SourceStream"* %300)
  br i1 %301, label %302, label %323

302:                                              ; preds = %295
  %303 = load i64, i64* %13, align 8
  %304 = icmp eq i64 %303, 0
  %305 = select i1 %304, %"class.courgette::SourceStream"* null, %"class.courgette::SourceStream"* %16
  %306 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %305, i64 0, i32 1
  %307 = bitcast i8** %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %305, i64 0, i32 2
  %310 = bitcast i8** %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = icmp eq i64 %308, %311
  br i1 %312, label %313, label %323

313:                                              ; preds = %302
  %314 = icmp ugt i64 %303, 1
  %315 = select i1 %314, %"class.courgette::SourceStream"* %55, %"class.courgette::SourceStream"* null
  %316 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %315, i64 0, i32 1
  %317 = bitcast i8** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %315, i64 0, i32 2
  %320 = bitcast i8** %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = icmp eq i64 %318, %321
  br i1 %322, label %325, label %323

323:                                              ; preds = %385, %302, %313, %325, %335, %345, %355, %365, %375, %283, %183, %116, %295, %288, %284, %45, %38, %24, %2, %19
  %324 = phi i1 [ false, %19 ], [ false, %2 ], [ false, %24 ], [ false, %38 ], [ false, %45 ], [ false, %284 ], [ false, %288 ], [ false, %295 ], [ false, %116 ], [ false, %183 ], [ false, %283 ], [ false, %302 ], [ false, %313 ], [ false, %325 ], [ false, %335 ], [ false, %345 ], [ false, %355 ], [ false, %365 ], [ false, %375 ], [ %395, %385 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  ret i1 %324

325:                                              ; preds = %313
  %326 = icmp ugt i64 %303, 2
  %327 = select i1 %326, %"class.courgette::SourceStream"* %188, %"class.courgette::SourceStream"* null
  %328 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %327, i64 0, i32 1
  %329 = bitcast i8** %328 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %327, i64 0, i32 2
  %332 = bitcast i8** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = icmp eq i64 %330, %333
  br i1 %334, label %335, label %323

335:                                              ; preds = %325
  %336 = icmp ugt i64 %303, 3
  %337 = select i1 %336, %"class.courgette::SourceStream"* %292, %"class.courgette::SourceStream"* null
  %338 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %337, i64 0, i32 1
  %339 = bitcast i8** %338 to i64*
  %340 = load i64, i64* %339, align 8
  %341 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %337, i64 0, i32 2
  %342 = bitcast i8** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = icmp eq i64 %340, %343
  br i1 %344, label %345, label %323

345:                                              ; preds = %335
  %346 = icmp ugt i64 %303, 4
  %347 = select i1 %346, %"class.courgette::SourceStream"* %299, %"class.courgette::SourceStream"* null
  %348 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %347, i64 0, i32 1
  %349 = bitcast i8** %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %347, i64 0, i32 2
  %352 = bitcast i8** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = icmp eq i64 %350, %353
  br i1 %354, label %355, label %323

355:                                              ; preds = %345
  %356 = icmp ugt i64 %303, 5
  %357 = select i1 %356, %"class.courgette::SourceStream"* %35, %"class.courgette::SourceStream"* null
  %358 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %357, i64 0, i32 1
  %359 = bitcast i8** %358 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %357, i64 0, i32 2
  %362 = bitcast i8** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = icmp eq i64 %360, %363
  br i1 %364, label %365, label %323

365:                                              ; preds = %355
  %366 = icmp ugt i64 %303, 6
  %367 = select i1 %366, %"class.courgette::SourceStream"* %42, %"class.courgette::SourceStream"* null
  %368 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %367, i64 0, i32 1
  %369 = bitcast i8** %368 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %367, i64 0, i32 2
  %372 = bitcast i8** %371 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = icmp eq i64 %370, %373
  br i1 %374, label %375, label %323

375:                                              ; preds = %365
  %376 = icmp ugt i64 %303, 7
  %377 = select i1 %376, %"class.courgette::SourceStream"* %121, %"class.courgette::SourceStream"* null
  %378 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %377, i64 0, i32 1
  %379 = bitcast i8** %378 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %377, i64 0, i32 2
  %382 = bitcast i8** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = icmp eq i64 %380, %383
  br i1 %384, label %385, label %323

385:                                              ; preds = %375
  %386 = icmp ugt i64 %303, 8
  %387 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 8
  %388 = select i1 %386, %"class.courgette::SourceStream"* %387, %"class.courgette::SourceStream"* null
  %389 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %388, i64 0, i32 1
  %390 = bitcast i8** %389 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %388, i64 0, i32 2
  %393 = bitcast i8** %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = icmp eq i64 %391, %394
  br label %323
}

declare zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN9courgette12_GLOBAL__N_117ReadSigned32DeltaINS_13NoThrowBufferIjNS_15MemoryAllocatorIjEEEEEEbPT_PNS_12SourceStreamE(%"class.courgette::NoThrowBuffer"*, %"class.courgette::SourceStream"*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 -1431655766, i32* %3, align 4
  %6 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %1, i32* nonnull %3) #10
  br i1 %6, label %7, label %66

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast i32* %9 to i8*
  call void @free(i8* %12) #10
  %13 = bitcast %"class.courgette::NoThrowBuffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  br label %14

14:                                               ; preds = %7, %11
  %15 = load i32, i32* %3, align 4
  %16 = zext i32 %15 to i64
  %17 = call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %0, i64 %16)
  br i1 %17, label %18, label %66

18:                                               ; preds = %14
  %19 = bitcast i32* %4 to i8*
  %20 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 1
  %22 = load i32, i32* %3, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %66, label %24

24:                                               ; preds = %18, %56
  %25 = phi i32 [ %30, %56 ], [ 0, %18 ]
  %26 = phi i64 [ %62, %56 ], [ 0, %18 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #10
  store i32 -1431655766, i32* %4, align 4
  %27 = call zeroext i1 @_ZN9courgette12SourceStream18ReadVarint32SignedEPi(%"class.courgette::SourceStream"* %1, i32* nonnull %4) #10
  br i1 %27, label %28, label %55

28:                                               ; preds = %24
  %29 = load i32, i32* %4, align 4
  %30 = add i32 %29, %25
  %31 = load i64, i64* %20, align 8
  %32 = icmp eq i64 %31, 4294967295
  br i1 %32, label %55, label %33

33:                                               ; preds = %28
  %34 = load i64, i64* %21, align 8
  %35 = icmp eq i64 %34, 4611686018427387903
  br i1 %35, label %55, label %36

36:                                               ; preds = %33
  %37 = icmp eq i64 %31, %34
  br i1 %37, label %38, label %56

38:                                               ; preds = %36
  %39 = icmp eq i64 %31, 0
  %40 = select i1 %39, i64 64, i64 %31
  %41 = add i64 %31, 1
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %43, label %50

43:                                               ; preds = %38, %43
  %44 = phi i64 [ %48, %43 ], [ %40, %38 ]
  %45 = sub i64 4611686018427387903, %44
  %46 = icmp ult i64 %44, %45
  %47 = shl i64 %44, 1
  %48 = select i1 %46, i64 %47, i64 4611686018427387903
  %49 = icmp ult i64 %48, %41
  br i1 %49, label %43, label %50

50:                                               ; preds = %43, %38
  %51 = phi i64 [ %40, %38 ], [ %48, %43 ]
  %52 = call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %0, i64 %51) #10
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = load i64, i64* %21, align 8
  br label %56

55:                                               ; preds = %24, %50, %28, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #10
  br label %66

56:                                               ; preds = %36, %53
  %57 = phi i64 [ %54, %53 ], [ %34, %36 ]
  %58 = load i32*, i32** %8, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %57
  store i32 %30, i32* %59, align 4
  %60 = load i64, i64* %21, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #10
  %62 = add nuw nsw i64 %26, 1
  %63 = load i32, i32* %3, align 4
  %64 = zext i32 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %24, label %66

66:                                               ; preds = %56, %18, %55, %14, %2
  %67 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %55 ], [ true, %18 ], [ true, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN9courgette12_GLOBAL__N_110ReadVectorINS_13NoThrowBufferIjNS_15MemoryAllocatorIjEEEEEEbPT_PNS_12SourceStreamE(%"class.courgette::NoThrowBuffer"*, %"class.courgette::SourceStream"*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 -1431655766, i32* %3, align 4
  %6 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %1, i32* nonnull %3) #10
  br i1 %6, label %7, label %64

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast i32* %9 to i8*
  call void @free(i8* %12) #10
  %13 = bitcast %"class.courgette::NoThrowBuffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  br label %14

14:                                               ; preds = %7, %11
  %15 = load i32, i32* %3, align 4
  %16 = zext i32 %15 to i64
  %17 = call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %0, i64 %16)
  br i1 %17, label %18, label %64

18:                                               ; preds = %14
  %19 = bitcast i32* %4 to i8*
  %20 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 1
  %22 = load i32, i32* %3, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %64, label %24

24:                                               ; preds = %18, %54
  %25 = phi i64 [ %60, %54 ], [ 0, %18 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #10
  store i32 -1431655766, i32* %4, align 4
  %26 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %1, i32* nonnull %4) #10
  br i1 %26, label %27, label %53

27:                                               ; preds = %24
  %28 = load i32, i32* %4, align 4
  %29 = load i64, i64* %20, align 8
  %30 = icmp eq i64 %29, 4294967295
  br i1 %30, label %53, label %31

31:                                               ; preds = %27
  %32 = load i64, i64* %21, align 8
  %33 = icmp eq i64 %32, 4611686018427387903
  br i1 %33, label %53, label %34

34:                                               ; preds = %31
  %35 = icmp eq i64 %29, %32
  br i1 %35, label %36, label %54

36:                                               ; preds = %34
  %37 = icmp eq i64 %29, 0
  %38 = select i1 %37, i64 64, i64 %29
  %39 = add i64 %29, 1
  %40 = icmp ult i64 %38, %39
  br i1 %40, label %41, label %48

41:                                               ; preds = %36, %41
  %42 = phi i64 [ %46, %41 ], [ %38, %36 ]
  %43 = sub i64 4611686018427387903, %42
  %44 = icmp ult i64 %42, %43
  %45 = shl i64 %42, 1
  %46 = select i1 %44, i64 %45, i64 4611686018427387903
  %47 = icmp ult i64 %46, %39
  br i1 %47, label %41, label %48

48:                                               ; preds = %41, %36
  %49 = phi i64 [ %38, %36 ], [ %46, %41 ]
  %50 = call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %0, i64 %49) #10
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = load i64, i64* %21, align 8
  br label %54

53:                                               ; preds = %24, %48, %27, %31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #10
  br label %64

54:                                               ; preds = %34, %51
  %55 = phi i64 [ %52, %51 ], [ %32, %34 ]
  %56 = load i32*, i32** %8, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 %55
  store i32 %28, i32* %57, align 4
  %58 = load i64, i64* %21, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #10
  %60 = add nuw nsw i64 %25, 1
  %61 = load i32, i32* %3, align 4
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %60, %62
  br i1 %63, label %24, label %64

64:                                               ; preds = %54, %18, %53, %14, %2
  %65 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %53 ], [ true, %18 ], [ true, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram10AssembleToEPNS_10SinkStreamE(%"class.courgette::EncodedProgram"*, %"class.courgette::SinkStream"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__less", align 1
  %4 = alloca %struct.Elf32_Rel, align 4
  %5 = alloca %"class.courgette::SinkStream", align 8
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = bitcast %"class.courgette::SinkStream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %5, i64 0, i32 0, i32 3, i32 0
  %14 = bitcast i8* %13 to i64*
  store i64 -6148914691236517206, i64* %14, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %15 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %286, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 3, i32 0
  %20 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 1
  %21 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 0
  %22 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2, i32 1
  %23 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 0
  %25 = bitcast i64* %10 to i8*
  %26 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9
  %27 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9, i32 2
  %28 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9, i32 1
  %29 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %26, i64 0, i32 0
  %30 = bitcast i32* %9 to i8*
  %31 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7, i32 1
  %32 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7, i32 0
  %33 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 1, i32 0
  %35 = bitcast i32* %8 to i8*
  %36 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6, i32 1
  %37 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6, i32 0
  %38 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 1
  %39 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 0
  %40 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4, i32 1
  %41 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 4, i32 0
  br label %42

42:                                               ; preds = %18, %233
  %43 = phi i64 [ 0, %18 ], [ %244, %233 ]
  %44 = phi %"class.courgette::SinkStream"* [ %1, %18 ], [ %243, %233 ]
  %45 = phi i32 [ 0, %18 ], [ %242, %233 ]
  %46 = phi i8 [ 3, %18 ], [ %241, %233 ]
  %47 = phi i8 [ 0, %18 ], [ %240, %233 ]
  %48 = phi i64 [ 0, %18 ], [ %239, %233 ]
  %49 = phi i64 [ 0, %18 ], [ %238, %233 ]
  %50 = phi i64 [ 0, %18 ], [ %237, %233 ]
  %51 = phi i64 [ 0, %18 ], [ %236, %233 ]
  %52 = phi i64 [ 0, %18 ], [ %235, %233 ]
  %53 = phi i32 [ 0, %18 ], [ %234, %233 ]
  %54 = load i32*, i32** %19, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %43
  %56 = load i32, i32* %55, align 4
  switch i32 %56, label %306 [
    i32 0, label %57
    i32 1, label %65
    i32 2, label %93
    i32 3, label %105
    i32 4, label %123
    i32 9, label %123
    i32 5, label %225
    i32 8, label %228
    i32 6, label %231
  ]

57:                                               ; preds = %42
  %58 = load i64, i64* %40, align 8
  %59 = icmp ugt i64 %58, %52
  br i1 %59, label %60, label %306

60:                                               ; preds = %57
  %61 = load i32*, i32** %41, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 %52
  %63 = load i32, i32* %62, align 4
  %64 = add nuw i64 %52, 1
  br label %233

65:                                               ; preds = %42
  %66 = load i64, i64* %38, align 8
  %67 = icmp ugt i64 %66, %51
  br i1 %67, label %68, label %306

68:                                               ; preds = %65
  %69 = load i64*, i64** %39, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %51
  %71 = load i64, i64* %70, align 8
  %72 = add nuw i64 %51, 1
  %73 = icmp eq i64 %71, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %68
  %75 = add i64 %50, %71
  br label %76

76:                                               ; preds = %85, %74
  %77 = phi i64 [ %86, %85 ], [ %50, %74 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  store i8 -86, i8* %6, align 1
  %78 = load i64, i64* %36, align 8
  %79 = icmp ugt i64 %78, %77
  br i1 %79, label %80, label %88

80:                                               ; preds = %76
  %81 = load i8*, i8** %37, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %77
  %83 = load i8, i8* %82, align 1
  store i8 %83, i8* %6, align 1
  %84 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %44, i8* nonnull %6, i64 1) #10
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = add nuw i64 %77, 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  %87 = icmp eq i64 %86, %75
  br i1 %87, label %89, label %76

88:                                               ; preds = %80, %76
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  br label %306

89:                                               ; preds = %85, %68
  %90 = phi i64 [ %50, %68 ], [ %75, %85 ]
  %91 = trunc i64 %71 to i32
  %92 = add i32 %53, %91
  br label %233

93:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  store i8 -86, i8* %7, align 1
  %94 = load i64, i64* %36, align 8
  %95 = icmp ugt i64 %94, %50
  br i1 %95, label %96, label %101

96:                                               ; preds = %93
  %97 = load i8*, i8** %37, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 %50
  %99 = load i8, i8* %98, align 1
  store i8 %99, i8* %7, align 1
  %100 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %44, i8* nonnull %7, i64 1) #10
  br i1 %100, label %102, label %101

101:                                              ; preds = %96, %93
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  br label %306

102:                                              ; preds = %96
  %103 = add nuw i64 %50, 1
  %104 = add i32 %53, 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  br label %233

105:                                              ; preds = %42
  %106 = load i64, i64* %31, align 8
  %107 = icmp ugt i64 %106, %48
  br i1 %107, label %108, label %306

108:                                              ; preds = %105
  %109 = load i32*, i32** %32, align 8
  %110 = getelementptr inbounds i32, i32* %109, i64 %48
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = load i64, i64* %33, align 8
  %114 = icmp ugt i64 %113, %112
  br i1 %114, label %115, label %306

115:                                              ; preds = %108
  %116 = add nuw i64 %48, 1
  %117 = load i32*, i32** %34, align 8
  %118 = getelementptr inbounds i32, i32* %117, i64 %112
  %119 = load i32, i32* %118, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #10
  %120 = add i32 %53, 4
  %121 = sub i32 %119, %120
  store i32 %121, i32* %8, align 4
  %122 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %44, i8* nonnull %35, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #10
  br i1 %122, label %233, label %306

123:                                              ; preds = %42, %42
  %124 = load i64, i64* %20, align 8
  %125 = icmp ugt i64 %124, %49
  br i1 %125, label %126, label %306

126:                                              ; preds = %123
  %127 = load i32*, i32** %21, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 %49
  %129 = load i32, i32* %128, align 4
  %130 = add nuw i64 %49, 1
  %131 = zext i32 %129 to i64
  %132 = load i64, i64* %22, align 8
  %133 = icmp ugt i64 %132, %131
  br i1 %133, label %134, label %306

134:                                              ; preds = %126
  %135 = load i32*, i32** %23, align 8
  %136 = getelementptr inbounds i32, i32* %135, i64 %131
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %56, 4
  %139 = load i64, i64* %24, align 8
  br i1 %138, label %140, label %184

140:                                              ; preds = %134
  %141 = icmp ugt i64 %139, 4294967295
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #10
  store i32 -1431655766, i32* %9, align 4
  br label %147

143:                                              ; preds = %140
  %144 = trunc i64 %139 to i32
  %145 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %144, i32 %137) #10
  %146 = extractvalue { i32, i1 } %145, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #10
  store i32 -1431655766, i32* %9, align 4
  br i1 %146, label %147, label %148, !prof !10

147:                                              ; preds = %143, %142
  call void @llvm.trap() #10
  unreachable

148:                                              ; preds = %143
  %149 = extractvalue { i32, i1 } %145, 0
  store i32 %149, i32* %9, align 4
  %150 = load i64, i64* %27, align 8
  %151 = icmp eq i64 %150, 4294967295
  br i1 %151, label %181, label %152

152:                                              ; preds = %148
  %153 = load i64, i64* %28, align 8
  %154 = icmp eq i64 %153, 4611686018427387903
  br i1 %154, label %181, label %155

155:                                              ; preds = %152
  %156 = icmp eq i64 %150, %153
  br i1 %156, label %157, label %174

157:                                              ; preds = %155
  %158 = icmp eq i64 %150, 0
  %159 = select i1 %158, i64 64, i64 %150
  %160 = add i64 %150, 1
  %161 = icmp ult i64 %159, %160
  br i1 %161, label %162, label %169

162:                                              ; preds = %157, %162
  %163 = phi i64 [ %167, %162 ], [ %159, %157 ]
  %164 = sub i64 4611686018427387903, %163
  %165 = icmp ult i64 %163, %164
  %166 = shl i64 %163, 1
  %167 = select i1 %165, i64 %166, i64 4611686018427387903
  %168 = icmp ult i64 %167, %160
  br i1 %168, label %162, label %169

169:                                              ; preds = %162, %157
  %170 = phi i64 [ %159, %157 ], [ %167, %162 ]
  %171 = call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %26, i64 %170) #10
  br i1 %171, label %172, label %181

172:                                              ; preds = %169
  %173 = load i64, i64* %28, align 8
  br label %174

174:                                              ; preds = %172, %155
  %175 = phi i64 [ %173, %172 ], [ %153, %155 ]
  %176 = load i32*, i32** %29, align 8
  %177 = getelementptr inbounds i32, i32* %176, i64 %175
  store i32 %53, i32* %177, align 4
  %178 = load i64, i64* %28, align 8
  %179 = add i64 %178, 1
  store i64 %179, i64* %28, align 8
  %180 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %44, i8* nonnull %30, i64 4) #10
  br i1 %180, label %182, label %181

181:                                              ; preds = %174, %169, %148, %152
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #10
  br label %306

182:                                              ; preds = %174
  %183 = add i32 %53, 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #10
  br label %233

184:                                              ; preds = %134
  %185 = zext i32 %137 to i64
  %186 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %139, i64 %185) #10
  %187 = extractvalue { i64, i1 } %186, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  store i64 -6148914691236517206, i64* %10, align 8
  br i1 %187, label %188, label %189, !prof !10

188:                                              ; preds = %184
  call void @llvm.trap() #10
  unreachable

189:                                              ; preds = %184
  %190 = extractvalue { i64, i1 } %186, 0
  store i64 %190, i64* %10, align 8
  %191 = load i64, i64* %27, align 8
  %192 = icmp eq i64 %191, 4294967295
  br i1 %192, label %222, label %193

193:                                              ; preds = %189
  %194 = load i64, i64* %28, align 8
  %195 = icmp eq i64 %194, 4611686018427387903
  br i1 %195, label %222, label %196

196:                                              ; preds = %193
  %197 = icmp eq i64 %191, %194
  br i1 %197, label %198, label %215

198:                                              ; preds = %196
  %199 = icmp eq i64 %191, 0
  %200 = select i1 %199, i64 64, i64 %191
  %201 = add i64 %191, 1
  %202 = icmp ult i64 %200, %201
  br i1 %202, label %203, label %210

203:                                              ; preds = %198, %203
  %204 = phi i64 [ %208, %203 ], [ %200, %198 ]
  %205 = sub i64 4611686018427387903, %204
  %206 = icmp ult i64 %204, %205
  %207 = shl i64 %204, 1
  %208 = select i1 %206, i64 %207, i64 4611686018427387903
  %209 = icmp ult i64 %208, %201
  br i1 %209, label %203, label %210

210:                                              ; preds = %203, %198
  %211 = phi i64 [ %200, %198 ], [ %208, %203 ]
  %212 = call zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"* %26, i64 %211) #10
  br i1 %212, label %213, label %222

213:                                              ; preds = %210
  %214 = load i64, i64* %28, align 8
  br label %215

215:                                              ; preds = %213, %196
  %216 = phi i64 [ %214, %213 ], [ %194, %196 ]
  %217 = load i32*, i32** %29, align 8
  %218 = getelementptr inbounds i32, i32* %217, i64 %216
  store i32 %53, i32* %218, align 4
  %219 = load i64, i64* %28, align 8
  %220 = add i64 %219, 1
  store i64 %220, i64* %28, align 8
  %221 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %44, i8* nonnull %25, i64 8) #10
  br i1 %221, label %223, label %222

222:                                              ; preds = %215, %210, %189, %193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %306

223:                                              ; preds = %215
  %224 = add i32 %53, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %233

225:                                              ; preds = %42
  %226 = and i8 %47, 1
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %233, label %306

228:                                              ; preds = %42
  %229 = and i8 %47, 1
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %233, label %306

231:                                              ; preds = %42
  %232 = icmp eq i32 %45, 0
  br i1 %232, label %233, label %306

233:                                              ; preds = %115, %182, %223, %102, %89, %60, %231, %228, %225
  %234 = phi i32 [ %53, %231 ], [ %53, %228 ], [ %53, %225 ], [ %104, %102 ], [ %92, %89 ], [ %63, %60 ], [ %183, %182 ], [ %224, %223 ], [ %120, %115 ]
  %235 = phi i64 [ %52, %231 ], [ %52, %228 ], [ %52, %225 ], [ %52, %102 ], [ %52, %89 ], [ %64, %60 ], [ %52, %182 ], [ %52, %223 ], [ %52, %115 ]
  %236 = phi i64 [ %51, %231 ], [ %51, %228 ], [ %51, %225 ], [ %51, %102 ], [ %72, %89 ], [ %51, %60 ], [ %51, %182 ], [ %51, %223 ], [ %51, %115 ]
  %237 = phi i64 [ %50, %231 ], [ %50, %228 ], [ %50, %225 ], [ %103, %102 ], [ %90, %89 ], [ %50, %60 ], [ %50, %182 ], [ %50, %223 ], [ %50, %115 ]
  %238 = phi i64 [ %49, %231 ], [ %49, %228 ], [ %49, %225 ], [ %49, %102 ], [ %49, %89 ], [ %49, %60 ], [ %130, %182 ], [ %130, %223 ], [ %49, %115 ]
  %239 = phi i64 [ %48, %231 ], [ %48, %228 ], [ %48, %225 ], [ %48, %102 ], [ %48, %89 ], [ %48, %60 ], [ %48, %182 ], [ %48, %223 ], [ %116, %115 ]
  %240 = phi i8 [ %47, %231 ], [ 1, %228 ], [ 1, %225 ], [ %47, %102 ], [ %47, %89 ], [ %47, %60 ], [ %47, %182 ], [ %47, %223 ], [ %47, %115 ]
  %241 = phi i8 [ %46, %231 ], [ 10, %228 ], [ %46, %225 ], [ %46, %102 ], [ %46, %89 ], [ %46, %60 ], [ %46, %182 ], [ %46, %223 ], [ %46, %115 ]
  %242 = phi i32 [ 8, %231 ], [ %45, %228 ], [ %45, %225 ], [ %45, %102 ], [ %45, %89 ], [ %45, %60 ], [ %45, %182 ], [ %45, %223 ], [ %45, %115 ]
  %243 = phi %"class.courgette::SinkStream"* [ %5, %231 ], [ %5, %228 ], [ %5, %225 ], [ %44, %102 ], [ %44, %89 ], [ %44, %60 ], [ %44, %182 ], [ %44, %223 ], [ %44, %115 ]
  %244 = add nuw i64 %43, 1
  %245 = load i64, i64* %15, align 8
  %246 = icmp ult i64 %244, %245
  br i1 %246, label %42, label %247

247:                                              ; preds = %233
  %248 = and i8 %240, 1
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %254, label %250

250:                                              ; preds = %247
  %251 = call zeroext i1 @_ZN9courgette14EncodedProgram21GeneratePeRelocationsEPNS_10SinkStreamEh(%"class.courgette::EncodedProgram"* %0, %"class.courgette::SinkStream"* %1, i8 zeroext %241)
  br i1 %251, label %252, label %306

252:                                              ; preds = %250
  %253 = call zeroext i1 @_ZN9courgette10SinkStream6AppendEPS0_(%"class.courgette::SinkStream"* %1, %"class.courgette::SinkStream"* nonnull %5) #10
  br i1 %253, label %254, label %306

254:                                              ; preds = %247, %252
  %255 = icmp eq i32 %242, 0
  br i1 %255, label %286, label %256

256:                                              ; preds = %254
  %257 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9
  %258 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9, i32 1
  %259 = load i64, i64* %258, align 8
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %265, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %257, i64 0, i32 0
  %263 = load i32*, i32** %262, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 %259
  br label %265

265:                                              ; preds = %261, %256
  %266 = phi i32* [ %263, %261 ], [ null, %256 ]
  %267 = phi i32* [ %264, %261 ], [ null, %256 ]
  %268 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %268) #10
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %266, i32* %267, %"struct.std::__1::__less"* nonnull dereferenceable(1) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %268) #10
  %269 = bitcast %struct.Elf32_Rel* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %269) #10
  %270 = getelementptr inbounds %struct.Elf32_Rel, %struct.Elf32_Rel* %4, i64 0, i32 0
  store i32 -1431655766, i32* %270, align 4
  %271 = getelementptr inbounds %struct.Elf32_Rel, %struct.Elf32_Rel* %4, i64 0, i32 1
  store i32 %242, i32* %271, align 4
  %272 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %257, i64 0, i32 0
  br label %273

273:                                              ; preds = %277, %265
  %274 = phi i64 [ 0, %265 ], [ %282, %277 ]
  %275 = load i64, i64* %258, align 8
  %276 = icmp ult i64 %274, %275
  br i1 %276, label %277, label %284

277:                                              ; preds = %273
  %278 = load i32*, i32** %272, align 8
  %279 = getelementptr inbounds i32, i32* %278, i64 %274
  %280 = load i32, i32* %279, align 4
  store i32 %280, i32* %270, align 4
  %281 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %1, i8* nonnull %269, i64 8) #10
  %282 = add nuw i64 %274, 1
  br i1 %281, label %273, label %283

283:                                              ; preds = %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %269) #10
  br label %306

284:                                              ; preds = %273
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %269) #10
  %285 = call zeroext i1 @_ZN9courgette10SinkStream6AppendEPS0_(%"class.courgette::SinkStream"* %1, %"class.courgette::SinkStream"* nonnull %5) #10
  br i1 %285, label %286, label %306

286:                                              ; preds = %2, %254, %284
  %287 = phi i64 [ %236, %254 ], [ %236, %284 ], [ 0, %2 ]
  %288 = phi i64 [ %237, %254 ], [ %237, %284 ], [ 0, %2 ]
  %289 = phi i64 [ %238, %254 ], [ %238, %284 ], [ 0, %2 ]
  %290 = phi i64 [ %239, %254 ], [ %239, %284 ], [ 0, %2 ]
  %291 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 5, i32 1
  %292 = load i64, i64* %291, align 8
  %293 = icmp eq i64 %287, %292
  br i1 %293, label %294, label %306

294:                                              ; preds = %286
  %295 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 6, i32 1
  %296 = load i64, i64* %295, align 8
  %297 = icmp eq i64 %288, %296
  br i1 %297, label %298, label %306

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 8, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = icmp eq i64 %289, %300
  br i1 %301, label %302, label %306

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 7, i32 1
  %304 = load i64, i64* %303, align 8
  %305 = icmp eq i64 %290, %304
  br label %306

306:                                              ; preds = %115, %126, %123, %108, %105, %65, %57, %231, %228, %225, %42, %222, %181, %88, %283, %101, %302, %298, %294, %286, %284, %250, %252
  %307 = phi i1 [ false, %252 ], [ false, %250 ], [ false, %284 ], [ false, %283 ], [ false, %286 ], [ false, %294 ], [ false, %298 ], [ %305, %302 ], [ false, %101 ], [ false, %88 ], [ false, %181 ], [ false, %222 ], [ false, %42 ], [ false, %225 ], [ false, %228 ], [ false, %231 ], [ false, %57 ], [ false, %65 ], [ false, %105 ], [ false, %108 ], [ false, %123 ], [ false, %126 ], [ false, %115 ]
  %308 = load i8*, i8** %12, align 8
  %309 = icmp eq i8* %308, null
  br i1 %309, label %311, label %310

310:                                              ; preds = %306
  call void @free(i8* nonnull %308) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  br label %311

311:                                              ; preds = %306, %310
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  ret i1 %307
}

declare zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram21GeneratePeRelocationsEPNS_10SinkStreamEh(%"class.courgette::EncodedProgram"* nocapture readonly, %"class.courgette::SinkStream"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__less", align 1
  %5 = alloca %"class.courgette::RelocBlock", align 4
  %6 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9
  %7 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %6, i64 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 %8
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i32* [ %12, %10 ], [ null, %3 ]
  %16 = phi i32* [ %13, %10 ], [ null, %3 ]
  %17 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #10
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %15, i32* %16, %"struct.std::__1::__less"* nonnull dereferenceable(1) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #10
  %18 = bitcast %"class.courgette::RelocBlock"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8200, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.courgette::RelocBlock", %"class.courgette::RelocBlock"* %5, i64 0, i32 0, i32 2
  %20 = bitcast [4096 x i16]* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 8192, i1 false)
  %21 = getelementptr inbounds %"class.courgette::RelocBlock", %"class.courgette::RelocBlock"* %5, i64 0, i32 0, i32 0
  store i32 -1, i32* %21, align 4
  %22 = getelementptr inbounds %"class.courgette::RelocBlock", %"class.courgette::RelocBlock"* %5, i64 0, i32 0, i32 1
  store i32 8, i32* %22, align 4
  %23 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %6, i64 0, i32 0
  %24 = zext i8 %2 to i32
  %25 = shl nuw nsw i32 %24, 12
  %26 = load i64, i64* %7, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %51

28:                                               ; preds = %85, %80, %14
  %29 = phi i32 [ 8, %14 ], [ %93, %85 ], [ %81, %80 ]
  %30 = phi i8 [ 1, %14 ], [ %82, %80 ], [ %82, %85 ]
  %31 = icmp eq i32 %29, 8
  br i1 %31, label %46, label %32

32:                                               ; preds = %28
  %33 = and i32 %29, 3
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = add i32 %29, -8
  %37 = lshr i32 %36, 1
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.courgette::RelocBlock", %"class.courgette::RelocBlock"* %5, i64 0, i32 0, i32 2, i64 %38
  store i16 0, i16* %39, align 2
  %40 = add i32 %29, 2
  store i32 %40, i32* %22, align 4
  br label %41

41:                                               ; preds = %35, %32
  %42 = phi i32 [ %29, %32 ], [ %40, %35 ]
  %43 = zext i32 %42 to i64
  %44 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %1, i8* nonnull %18, i64 %43) #10
  store i32 8, i32* %22, align 4
  %45 = zext i1 %44 to i32
  br label %46

46:                                               ; preds = %28, %41
  %47 = phi i32 [ %45, %41 ], [ 1, %28 ]
  %48 = zext i8 %30 to i32
  %49 = and i32 %47, %48
  %50 = icmp ne i32 %49, 0
  call void @llvm.lifetime.end.p0i8(i64 8200, i8* nonnull %18) #10
  ret i1 %50

51:                                               ; preds = %14, %85
  %52 = phi i8 [ %82, %85 ], [ 1, %14 ]
  %53 = phi i64 [ %94, %85 ], [ 0, %14 ]
  %54 = phi i32 [ %59, %85 ], [ -1, %14 ]
  %55 = phi i32 [ %93, %85 ], [ 8, %14 ]
  %56 = load i32*, i32** %23, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 %53
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, -4096
  %60 = icmp eq i32 %59, %54
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = icmp eq i32 %55, 8
  br i1 %62, label %76, label %63

63:                                               ; preds = %61
  %64 = and i32 %55, 3
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = add i32 %55, -8
  %68 = lshr i32 %67, 1
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"class.courgette::RelocBlock", %"class.courgette::RelocBlock"* %5, i64 0, i32 0, i32 2, i64 %69
  store i16 0, i16* %70, align 2
  %71 = add i32 %55, 2
  store i32 %71, i32* %22, align 4
  br label %72

72:                                               ; preds = %66, %63
  %73 = phi i32 [ %55, %63 ], [ %71, %66 ]
  %74 = zext i32 %73 to i64
  %75 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %1, i8* nonnull %18, i64 %74) #10
  store i32 8, i32* %22, align 4
  br label %76

76:                                               ; preds = %61, %72
  %77 = phi i32 [ 8, %72 ], [ %55, %61 ]
  %78 = phi i1 [ %75, %72 ], [ true, %61 ]
  %79 = zext i1 %78 to i8
  store i32 %59, i32* %21, align 4
  br label %80

80:                                               ; preds = %51, %76
  %81 = phi i32 [ %77, %76 ], [ %55, %51 ]
  %82 = phi i8 [ %79, %76 ], [ %52, %51 ]
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %28, label %85

85:                                               ; preds = %80
  %86 = and i32 %58, 4095
  %87 = or i32 %86, %25
  %88 = trunc i32 %87 to i16
  %89 = add i32 %81, -8
  %90 = lshr i32 %89, 1
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.courgette::RelocBlock", %"class.courgette::RelocBlock"* %5, i64 0, i32 0, i32 2, i64 %91
  store i16 %88, i16* %92, align 2
  %93 = add i32 %81, 2
  store i32 %93, i32* %22, align 4
  %94 = add nuw i64 %53, 1
  %95 = load i64, i64* %7, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %51, label %28
}

declare zeroext i1 @_ZN9courgette10SinkStream6AppendEPS0_(%"class.courgette::SinkStream"*, %"class.courgette::SinkStream"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram22GenerateElfRelocationsEjPNS_10SinkStreamE(%"class.courgette::EncodedProgram"* nocapture readonly, i32, %"class.courgette::SinkStream"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__less", align 1
  %5 = alloca %struct.Elf32_Rel, align 4
  %6 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9
  %7 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %0, i64 0, i32 9, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %6, i64 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 %8
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i32* [ %12, %10 ], [ null, %3 ]
  %16 = phi i32* [ %13, %10 ], [ null, %3 ]
  %17 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #10
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %15, i32* %16, %"struct.std::__1::__less"* nonnull dereferenceable(1) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #10
  %18 = bitcast %struct.Elf32_Rel* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %struct.Elf32_Rel, %struct.Elf32_Rel* %5, i64 0, i32 0
  store i32 -1431655766, i32* %19, align 4
  %20 = getelementptr inbounds %struct.Elf32_Rel, %struct.Elf32_Rel* %5, i64 0, i32 1
  store i32 %1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %6, i64 0, i32 0
  br label %22

22:                                               ; preds = %14, %28
  %23 = phi i64 [ 0, %14 ], [ %33, %28 ]
  %24 = load i64, i64* %7, align 8
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %28, %22
  %27 = phi i1 [ false, %28 ], [ true, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  ret i1 %27

28:                                               ; preds = %22
  %29 = load i32*, i32** %21, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 %23
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %19, align 4
  %32 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %2, i8* nonnull %18, i64 8) #10
  %33 = add nuw i64 %23, 1
  br i1 %32, label %22, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette14EncodedProgram20GenerateInstructionsENS_14ExecutableTypeERKN4base17RepeatingCallbackIFbPNS_19InstructionReceptorEEEE(%"class.courgette::EncodedProgram"*, i32, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", align 8
  %6 = bitcast %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN9courgette12_GLOBAL__N_124InstructionStoreReceptorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %5, i64 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %5, i64 0, i32 2
  store %"class.courgette::EncodedProgram"* %0, %"class.courgette::EncodedProgram"** %9, align 8
  %10 = icmp eq %"class.courgette::EncodedProgram"* %0, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i32 137, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0)) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %14

14:                                               ; preds = %3, %11
  %15 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %17, i64 0, i32 1
  %19 = bitcast void ()** %18 to i1 (%"class.base::internal::BindStateBase"*, %"class.courgette::InstructionReceptor"*)**
  %20 = load i1 (%"class.base::internal::BindStateBase"*, %"class.courgette::InstructionReceptor"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.courgette::InstructionReceptor"*)** %19, align 8
  %21 = call zeroext i1 %20(%"class.base::internal::BindStateBase"* %17, %"class.courgette::InstructionReceptor"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret i1 %21
}

declare i32 @_ZN9courgette12LabelManager18GetLabelIndexBoundERKNSt3__16vectorINS_5LabelENS1_9allocatorIS3_EEEE(%"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9courgette19WriteEncodedProgramEPNS_14EncodedProgramEPNS_13SinkStreamSetE(%"class.courgette::EncodedProgram"* nocapture readonly, %"class.courgette::SinkStreamSet"*) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN9courgette14EncodedProgram7WriteToEPNS_13SinkStreamSetE(%"class.courgette::EncodedProgram"* %0, %"class.courgette::SinkStreamSet"* %1)
  %4 = select i1 %3, i32 1, i32 20
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9courgette18ReadEncodedProgramEPNS_15SourceStreamSetEPNSt3__110unique_ptrINS_14EncodedProgramENS2_14default_deleteIS4_EEEE(%"class.courgette::SourceStreamSet"*, %"class.std::__1::unique_ptr"* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %3, align 8
  store %"class.courgette::EncodedProgram"* null, %"class.courgette::EncodedProgram"** %3, align 8
  %5 = icmp eq %"class.courgette::EncodedProgram"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZN9courgette14EncodedProgramD2Ev(%"class.courgette::EncodedProgram"* nonnull %4) #10
  %7 = bitcast %"class.courgette::EncodedProgram"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %2, %6
  %9 = tail call i8* @_Znwm(i64 296) #11
  %10 = bitcast i8* %9 to %"class.courgette::EncodedProgram"*
  %11 = getelementptr inbounds i8, i8* %9, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #10
  %12 = getelementptr inbounds i8, i8* %9, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  %13 = getelementptr inbounds i8, i8* %9, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = getelementptr inbounds i8, i8* %9, i64 136
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  %15 = getelementptr inbounds i8, i8* %9, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10
  %16 = getelementptr inbounds i8, i8* %9, i64 200
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %17 = getelementptr inbounds i8, i8* %9, i64 232
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = getelementptr inbounds i8, i8* %9, i64 264
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #10
  %19 = tail call zeroext i1 @_ZN9courgette14EncodedProgram8ReadFromEPNS_15SourceStreamSetE(%"class.courgette::EncodedProgram"* nonnull %10, %"class.courgette::SourceStreamSet"* %0)
  br i1 %19, label %20, label %27

20:                                               ; preds = %8
  %21 = ptrtoint i8* %9 to i64
  %22 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %3, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %"class.courgette::EncodedProgram"* %22, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  tail call void @_ZN9courgette14EncodedProgramD2Ev(%"class.courgette::EncodedProgram"* nonnull %22) #10
  %26 = bitcast %"class.courgette::EncodedProgram"* %22 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  br label %28

27:                                               ; preds = %8
  tail call void @_ZN9courgette14EncodedProgramD2Ev(%"class.courgette::EncodedProgram"* nonnull %10) #10
  tail call void @_ZdlPv(i8* nonnull %9) #11
  br label %28

28:                                               ; preds = %25, %20, %27
  %29 = phi i32 [ 23, %27 ], [ 1, %20 ], [ 1, %25 ]
  ret i32 %29
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9courgette8AssembleEPNS_14EncodedProgramEPNS_10SinkStreamE(%"class.courgette::EncodedProgram"*, %"class.courgette::SinkStream"*) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN9courgette14EncodedProgram10AssembleToEPNS_10SinkStreamE(%"class.courgette::EncodedProgram"* %0, %"class.courgette::SinkStream"* %1)
  %4 = select i1 %3, i32 1, i32 26
  ret i32 %4
}

declare %"class.base::Environment"* @_ZN4base11Environment6CreateEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8*, i64, i64*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64, i8**) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptorD0Ev(%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"*) unnamed_addr #9 align 2 {
  %2 = bitcast %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor12EmitPeRelocsEv(%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0, i64 0, i32 2
  %3 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %2, align 8
  %4 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = tail call zeroext i1 @_ZN9courgette14EncodedProgram15AddPeMakeRelocsENS_14ExecutableTypeE(%"class.courgette::EncodedProgram"* %3, i32 %5)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor17EmitElfRelocationEv(%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0, i64 0, i32 2
  %3 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %2, align 8
  %4 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %3, i64 0, i32 3
  %5 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %3, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 4294967295
  br i1 %7, label %38, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.courgette::EncodedProgram", %"class.courgette::EncodedProgram"* %3, i64 0, i32 3, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 4611686018427387903
  br i1 %11, label %38, label %12

12:                                               ; preds = %8
  %13 = icmp eq i64 %6, %10
  br i1 %13, label %14, label %31

14:                                               ; preds = %12
  %15 = icmp eq i64 %6, 0
  %16 = select i1 %15, i64 64, i64 %6
  %17 = add i64 %6, 1
  %18 = icmp ult i64 %16, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %14, %19
  %20 = phi i64 [ %24, %19 ], [ %16, %14 ]
  %21 = sub i64 4611686018427387903, %20
  %22 = icmp ult i64 %20, %21
  %23 = shl i64 %20, 1
  %24 = select i1 %22, i64 %23, i64 4611686018427387903
  %25 = icmp ult i64 %24, %17
  br i1 %25, label %19, label %26

26:                                               ; preds = %19, %14
  %27 = phi i64 [ %16, %14 ], [ %24, %19 ]
  %28 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"* %4, i64 %27) #10
  br i1 %28, label %29, label %38

29:                                               ; preds = %26
  %30 = load i64, i64* %9, align 8
  br label %31

31:                                               ; preds = %29, %12
  %32 = phi i64 [ %30, %29 ], [ %10, %12 ]
  %33 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %4, i64 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 %32
  store i32 6, i32* %35, align 4
  %36 = load i64, i64* %9, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %9, align 8
  br label %38

38:                                               ; preds = %1, %8, %26, %31
  %39 = phi i1 [ true, %31 ], [ false, %26 ], [ false, %1 ], [ false, %8 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor10EmitOriginEj(%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0, i64 0, i32 2
  %4 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %3, align 8
  %5 = tail call zeroext i1 @_ZN9courgette14EncodedProgram9AddOriginEj(%"class.courgette::EncodedProgram"* %4, i32 %1)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor14EmitSingleByteEh(%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* nocapture readonly, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  store i8 %1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0, i64 0, i32 2
  %5 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %4, align 8
  %6 = call zeroext i1 @_ZN9courgette14EncodedProgram7AddCopyEmPKv(%"class.courgette::EncodedProgram"* %5, i64 1, i8* nonnull %3)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor17EmitMultipleBytesEPKhm(%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0, i64 0, i32 2
  %5 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %4, align 8
  %6 = tail call zeroext i1 @_ZN9courgette14EncodedProgram7AddCopyEmPKv(%"class.courgette::EncodedProgram"* %5, i64 %2, i8* %1)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor9EmitRel32EPNS_5LabelE(%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* nocapture readonly, %"class.courgette::Label"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0, i64 0, i32 2
  %4 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN9courgette14EncodedProgram8AddRel32Ei(%"class.courgette::EncodedProgram"* %4, i32 %6)
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor9EmitAbs32EPNS_5LabelE(%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* nocapture readonly, %"class.courgette::Label"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0, i64 0, i32 2
  %4 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN9courgette14EncodedProgram8AddAbs32Ei(%"class.courgette::EncodedProgram"* %4, i32 %6)
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN9courgette12_GLOBAL__N_124InstructionStoreReceptor9EmitAbs64EPNS_5LabelE(%"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* nocapture readonly, %"class.courgette::Label"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::(anonymous namespace)::InstructionStoreReceptor", %"class.courgette::(anonymous namespace)::InstructionStoreReceptor"* %0, i64 0, i32 2
  %4 = load %"class.courgette::EncodedProgram"*, %"class.courgette::EncodedProgram"** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN9courgette14EncodedProgram8AddAbs64Ei(%"class.courgette::EncodedProgram"* %4, i32 %6)
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette19InstructionReceptorD2Ev(%"class.courgette::InstructionReceptor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN9courgette13NoThrowBufferINS_14EncodedProgram2OPENS_15MemoryAllocatorIS2_EEE7reserveEm(%"class.courgette::NoThrowBuffer.0"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 4294967295
  br i1 %6, label %45, label %7

7:                                                ; preds = %2
  %8 = icmp ult i64 %5, %1
  br i1 %8, label %9, label %45

9:                                                ; preds = %7
  %10 = icmp ugt i64 %1, 64
  %11 = select i1 %10, i64 %1, i64 64
  %12 = icmp ugt i64 %11, 4611686018427387903
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  store i32* null, i32** %3, align 8
  %15 = shl i64 %11, 2
  %16 = bitcast i32** %3 to i8**
  %17 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %15, i8** nonnull %16) #10
  %18 = load i32*, i32** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %19 = xor i1 %17, true
  %20 = icmp eq i32* %18, null
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %29

22:                                               ; preds = %13, %9
  %23 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %0, i64 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %22
  %27 = bitcast i32* %24 to i8*
  call void @free(i8* %27) #10
  %28 = bitcast %"class.courgette::NoThrowBuffer.0"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  br label %42

29:                                               ; preds = %13
  %30 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %0, i64 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = icmp eq i32* %31, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = bitcast i32* %18 to i8*
  %35 = bitcast i32* %31 to i8*
  %36 = getelementptr inbounds %"class.courgette::NoThrowBuffer.0", %"class.courgette::NoThrowBuffer.0"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = shl i64 %37, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* nonnull align 4 %35, i64 %38, i1 false)
  %39 = bitcast %"class.courgette::NoThrowBuffer.0"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #10
  br label %41

41:                                               ; preds = %29, %33
  store i32* %18, i32** %30, align 8
  br label %42

42:                                               ; preds = %26, %22, %41
  %43 = phi i64 [ %11, %41 ], [ 4294967295, %22 ], [ 4294967295, %26 ]
  store i64 %43, i64* %4, align 8
  %44 = icmp ne i64 %43, 4294967295
  br label %45

45:                                               ; preds = %7, %2, %42
  %46 = phi i1 [ %44, %42 ], [ false, %2 ], [ true, %7 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN9courgette13NoThrowBufferIjNS_15MemoryAllocatorIjEEE7reserveEm(%"class.courgette::NoThrowBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 4294967295
  br i1 %6, label %45, label %7

7:                                                ; preds = %2
  %8 = icmp ult i64 %5, %1
  br i1 %8, label %9, label %45

9:                                                ; preds = %7
  %10 = icmp ugt i64 %1, 64
  %11 = select i1 %10, i64 %1, i64 64
  %12 = icmp ugt i64 %11, 4611686018427387903
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  store i32* null, i32** %3, align 8
  %15 = shl i64 %11, 2
  %16 = bitcast i32** %3 to i8**
  %17 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %15, i8** nonnull %16) #10
  %18 = load i32*, i32** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %19 = xor i1 %17, true
  %20 = icmp eq i32* %18, null
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %29

22:                                               ; preds = %13, %9
  %23 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %22
  %27 = bitcast i32* %24 to i8*
  call void @free(i8* %27) #10
  %28 = bitcast %"class.courgette::NoThrowBuffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  br label %42

29:                                               ; preds = %13
  %30 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = icmp eq i32* %31, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = bitcast i32* %18 to i8*
  %35 = bitcast i32* %31 to i8*
  %36 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = shl i64 %37, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* nonnull align 4 %35, i64 %38, i1 false)
  %39 = bitcast %"class.courgette::NoThrowBuffer"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #10
  br label %41

41:                                               ; preds = %29, %33
  store i32* %18, i32** %30, align 8
  br label %42

42:                                               ; preds = %26, %22, %41
  %43 = phi i64 [ %11, %41 ], [ 4294967295, %22 ], [ 4294967295, %26 ]
  store i64 %43, i64* %4, align 8
  %44 = icmp ne i64 %43, 4294967295
  br label %45

45:                                               ; preds = %7, %2, %42
  %46 = phi i1 [ %44, %42 ], [ false, %2 ], [ true, %7 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN9courgette13NoThrowBufferImNS_15MemoryAllocatorImEEE7reserveEm(%"class.courgette::NoThrowBuffer.4"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = getelementptr inbounds %"class.courgette::NoThrowBuffer.4", %"class.courgette::NoThrowBuffer.4"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 4294967295
  br i1 %6, label %45, label %7

7:                                                ; preds = %2
  %8 = icmp ult i64 %5, %1
  br i1 %8, label %9, label %45

9:                                                ; preds = %7
  %10 = icmp ugt i64 %1, 32
  %11 = select i1 %10, i64 %1, i64 32
  %12 = icmp ugt i64 %11, 2305843009213693951
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = bitcast i64** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  store i64* null, i64** %3, align 8
  %15 = shl i64 %11, 3
  %16 = bitcast i64** %3 to i8**
  %17 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %15, i8** nonnull %16) #10
  %18 = load i64*, i64** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %19 = xor i1 %17, true
  %20 = icmp eq i64* %18, null
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %29

22:                                               ; preds = %13, %9
  %23 = getelementptr inbounds %"class.courgette::NoThrowBuffer.4", %"class.courgette::NoThrowBuffer.4"* %0, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %22
  %27 = bitcast i64* %24 to i8*
  call void @free(i8* %27) #10
  %28 = bitcast %"class.courgette::NoThrowBuffer.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  br label %42

29:                                               ; preds = %13
  %30 = getelementptr inbounds %"class.courgette::NoThrowBuffer.4", %"class.courgette::NoThrowBuffer.4"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %31, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = bitcast i64* %18 to i8*
  %35 = bitcast i64* %31 to i8*
  %36 = getelementptr inbounds %"class.courgette::NoThrowBuffer.4", %"class.courgette::NoThrowBuffer.4"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = shl i64 %37, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %35, i64 %38, i1 false)
  %39 = bitcast %"class.courgette::NoThrowBuffer.4"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #10
  br label %41

41:                                               ; preds = %29, %33
  store i64* %18, i64** %30, align 8
  br label %42

42:                                               ; preds = %26, %22, %41
  %43 = phi i64 [ %11, %41 ], [ 4294967295, %22 ], [ 4294967295, %26 ]
  store i64 %43, i64* %4, align 8
  %44 = icmp ne i64 %43, 4294967295
  br label %45

45:                                               ; preds = %7, %2, %42
  %46 = phi i1 [ %44, %42 ], [ false, %2 ], [ true, %7 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN9courgette13NoThrowBufferIhNS_15MemoryAllocatorIhEEE6appendEPKhm(%"class.courgette::NoThrowBuffer.8"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds %"class.courgette::NoThrowBuffer.8", %"class.courgette::NoThrowBuffer.8"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 4294967295
  br i1 %7, label %64, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.courgette::NoThrowBuffer.8", %"class.courgette::NoThrowBuffer.8"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = xor i64 %10, -1
  %12 = icmp ult i64 %11, %2
  br i1 %12, label %64, label %13

13:                                               ; preds = %8
  %14 = icmp eq i64 %2, 0
  br i1 %14, label %64, label %15

15:                                               ; preds = %13
  %16 = sub i64 %6, %10
  %17 = icmp ult i64 %16, %2
  br i1 %17, label %18, label %57

18:                                               ; preds = %15
  %19 = icmp eq i64 %6, 0
  %20 = select i1 %19, i64 256, i64 %6
  %21 = add i64 %10, %2
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %18, %23
  %24 = phi i64 [ %27, %23 ], [ %20, %18 ]
  %25 = xor i64 %24, -1
  %26 = icmp ult i64 %24, %25
  %27 = shl i64 %24, 1
  %28 = select i1 %26, i64 %27, i64 -1
  %29 = icmp ult i64 %28, %21
  br i1 %29, label %23, label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %20, %18 ], [ %28, %23 ]
  %32 = icmp ult i64 %6, %31
  br i1 %32, label %33, label %57

33:                                               ; preds = %30
  %34 = icmp ugt i64 %31, 256
  %35 = select i1 %34, i64 %31, i64 256
  %36 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  store i8* null, i8** %4, align 8
  %37 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %35, i8** nonnull %4) #10
  %38 = load i8*, i8** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  %39 = icmp eq i8* %38, null
  %40 = xor i1 %37, true
  %41 = or i1 %39, %40
  %42 = getelementptr inbounds %"class.courgette::NoThrowBuffer.8", %"class.courgette::NoThrowBuffer.8"* %0, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %41, label %45, label %48

45:                                               ; preds = %33
  br i1 %44, label %52, label %46

46:                                               ; preds = %45
  call void @free(i8* nonnull %43) #10
  %47 = bitcast %"class.courgette::NoThrowBuffer.8"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #10
  br label %52

48:                                               ; preds = %33
  br i1 %44, label %53, label %49

49:                                               ; preds = %48
  %50 = load i64, i64* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* nonnull align 1 %43, i64 %50, i1 false) #10
  %51 = load i8*, i8** %42, align 8
  call void @free(i8* %51) #10
  br label %53

52:                                               ; preds = %45, %46
  store i64 4294967295, i64* %5, align 8
  br label %64

53:                                               ; preds = %48, %49
  store i8* %38, i8** %42, align 8
  store i64 %35, i64* %5, align 8
  %54 = icmp eq i64 %35, 4294967295
  br i1 %54, label %64, label %55

55:                                               ; preds = %53
  %56 = load i64, i64* %9, align 8
  br label %57

57:                                               ; preds = %55, %30, %15
  %58 = phi i64 [ %56, %55 ], [ %10, %30 ], [ %10, %15 ]
  %59 = getelementptr inbounds %"class.courgette::NoThrowBuffer.8", %"class.courgette::NoThrowBuffer.8"* %0, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %58
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %1, i64 %2, i1 false)
  %62 = load i64, i64* %9, align 8
  %63 = add i64 %62, %2
  store i64 %63, i64* %9, align 8
  br label %64

64:                                               ; preds = %53, %52, %13, %8, %3, %57
  %65 = phi i1 [ true, %57 ], [ false, %3 ], [ false, %8 ], [ true, %13 ], [ false, %53 ], [ false, %52 ]
  ret i1 %65
}

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN9courgette10SinkStream19WriteVarint32SignedEi(%"class.courgette::SinkStream"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN9courgette12SourceStream18ReadVarint32SignedEPi(%"class.courgette::SourceStream"*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN9courgette12SourceStream4ReadEPvm(%"class.courgette::SourceStream"*, i8*, i64) local_unnamed_addr #3

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = !{i8 0, i8 2}
