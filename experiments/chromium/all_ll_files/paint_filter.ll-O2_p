; ModuleID = '../../cc/paint/paint_filter.cc'
source_filename = "../../cc/paint/paint_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkCubicResampler = type { float, float }
%class.sk_sp.17 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.21 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.22" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.11, i32, i32 }
%class.sk_sp.11 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.24" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.29 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%union.anon.81 = type { i64 }
%union.anon.86 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%class.sk_sp.87 = type { %class.SkImage* }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%union.anon.92 = type { i32 }
%class.sk_sp.4 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.94", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.94" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.96, %class.sk_sp.40, %class.sk_sp.98, %class.sk_sp.4, %class.sk_sp.114, %class.sk_sp.3, i32, float, float, i32, %union.anon.115, [4 x i8] }>
%class.sk_sp.96 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.40 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.41", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.17, i32, %"class.absl::optional.46", %"class.std::__1::vector.51", %"class.std::__1::vector.58", %class.sk_sp.62, %class.sk_sp.10, i32, [4 x i8] }>
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.10, %class.sk_sp.17, %"class.gfx::Rect", i32, %class.sk_sp.21, %class.sk_sp.29, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.10, %class.scoped_refptr }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { i32*, i32*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i32* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { float*, float*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { float* }
%class.sk_sp.62 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.63", [7 x i8] }>
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i8 }
%class.sk_sp.98 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.114 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp, i32, %"class.absl::optional", i8, i32 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%union.anon.115 = type { i32 }
%"class.absl::optional.116" = type { %"class.absl::optional_internal::optional_data.117" }
%"class.absl::optional_internal::optional_data.117" = type { %"class.absl::optional_internal::optional_data_base.118" }
%"class.absl::optional_internal::optional_data_base.118" = type { %"class.absl::optional_internal::optional_data_dtor_base.119" }
%"class.absl::optional_internal::optional_data_dtor_base.119" = type { i8, [7 x i8], %union.anon.120 }
%union.anon.120 = type { %"class.cc::PaintFlags" }
%union.anon.125 = type { %"class.cc::DecodeStashingImageProvider" }
%"class.cc::DecodeStashingImageProvider" = type { %"class.cc::ImageProvider", %"class.cc::ImageProvider"*, %"class.base::StackVector.126" }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.base::StackVector.126" = type { %"class.base::StackContainer.127" }
%"class.base::StackContainer.127" = type { %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source", %"class.base::StackAllocator.128", %"class.std::__1::vector.131" }
%"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source" = type { [80 x i8], i8, [7 x i8] }
%"class.base::StackAllocator.128" = type { %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"*, %"class.std::__1::__compressed_pair.133" }
%"class.cc::ImageProvider::ScopedResult" = type { %"class.cc::DecodedDrawImage", %class.sk_sp.17, %"class.base::OnceCallback" }
%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp.87, %"struct.gpu::Mailbox", %"class.absl::optional.88", %class.sk_sp.4, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.88" = type { %"class.absl::optional_internal::optional_data.89" }
%"class.absl::optional_internal::optional_data.89" = type { %"class.absl::optional_internal::optional_data_base.90" }
%"class.absl::optional_internal::optional_data_base.90" = type { %"class.absl::optional_internal::optional_data_dtor_base.91" }
%"class.absl::optional_internal::optional_data_dtor_base.91" = type { i8, %union.anon.92 }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134", %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.cc::ImageProvider::ScopedResult"* }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.base::StackAllocator.128" }
%"class.cc::ColorFilterPaintFilter" = type { %"class.cc::PaintFilter", %class.sk_sp.4, %class.sk_sp.3 }
%"class.cc::BlurPaintFilter" = type { %"class.cc::PaintFilter", float, float, i32, %class.sk_sp.3 }
%"class.cc::DropShadowPaintFilter" = type { %"class.cc::PaintFilter", float, float, float, float, i32, i32, %class.sk_sp.3 }
%"class.cc::MagnifierPaintFilter" = type { %"class.cc::PaintFilter", %struct.SkRect, float, %class.sk_sp.3 }
%"class.cc::ComposePaintFilter" = type { %"class.cc::PaintFilter", %class.sk_sp.3, %class.sk_sp.3 }
%"class.cc::AlphaThresholdPaintFilter" = type { %"class.cc::PaintFilter", %class.SkRegion, float, float, %class.sk_sp.3 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.cc::XfermodePaintFilter" = type { %"class.cc::PaintFilter", i32, %class.sk_sp.3, %class.sk_sp.3 }
%"class.cc::ArithmeticPaintFilter" = type { %"class.cc::PaintFilter", float, float, float, float, i8, %class.sk_sp.3, %class.sk_sp.3 }
%"class.cc::MatrixConvolutionPaintFilter" = type { %"class.cc::PaintFilter", %struct.SkISize, %"class.base::StackVector", float, float, %struct.SkIPoint, i32, i8, %class.sk_sp.3 }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<float, 3>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<float, 3>::Source" = type { [12 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<float, 3>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.base::StackAllocator" }
%struct.SkIPoint = type { i32, i32 }
%"class.cc::DisplacementMapEffectPaintFilter" = type { %"class.cc::PaintFilter", i32, i32, float, %class.sk_sp.3, %class.sk_sp.3 }
%"class.cc::ImagePaintFilter" = type <{ %"class.cc::PaintFilter", %"class.cc::PaintImage", %struct.SkRect, %struct.SkRect, i32, [4 x i8] }>
%"class.cc::RecordPaintFilter" = type <{ %"class.cc::PaintFilter", %class.sk_sp.17, %struct.SkRect, %"class.gfx::SizeF", i8, [7 x i8] }>
%"class.cc::MergePaintFilter" = type { %"class.cc::PaintFilter", %"class.base::StackVector.30" }
%"class.base::StackVector.30" = type { %"class.base::StackContainer.31" }
%"class.base::StackContainer.31" = type { %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source", %"class.base::StackAllocator.32", %"class.std::__1::vector.35" }
%"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source" = type { [16 x i8], i8, [7 x i8] }
%"class.base::StackAllocator.32" = type { %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %class.sk_sp.3*, %class.sk_sp.3*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.sk_sp.3* }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.base::StackAllocator.32" }
%"class.cc::MorphologyPaintFilter" = type { %"class.cc::PaintFilter", i32, float, float, %class.sk_sp.3 }
%"class.cc::OffsetPaintFilter" = type { %"class.cc::PaintFilter", float, float, %class.sk_sp.3 }
%"class.cc::TilePaintFilter" = type { %"class.cc::PaintFilter", %struct.SkRect, %struct.SkRect, %class.sk_sp.3 }
%"class.cc::TurbulencePaintFilter" = type <{ %"class.cc::PaintFilter", i32, float, float, i32, float, %struct.SkISize, [4 x i8] }>
%"class.cc::ShaderPaintFilter" = type <{ %"class.cc::PaintFilter", %class.sk_sp.40, i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.cc::MatrixPaintFilter" = type { %"class.cc::PaintFilter", %class.SkMatrix, i32, %class.sk_sp.3 }
%"class.cc::LightingDistantPaintFilter" = type { %"class.cc::PaintFilter", i32, %struct.SkPoint3, i32, float, float, float, %class.sk_sp.3 }
%struct.SkPoint3 = type { float, float, float }
%"class.cc::LightingPointPaintFilter" = type { %"class.cc::PaintFilter", i32, %struct.SkPoint3, i32, float, float, float, %class.sk_sp.3 }
%"class.cc::LightingSpotPaintFilter" = type { %"class.cc::PaintFilter", i32, %struct.SkPoint3, %struct.SkPoint3, float, float, i32, float, float, float, %class.sk_sp.3 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1 }
%union.anon.1 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.77", %"class.absl::optional.82", float, [4 x i8] }>
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, %union.anon.86 }
%class.SkM44 = type { [16 x float] }
%"class.cc::PaintImageBuilder" = type { %"class.cc::PaintImage" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.SkPaint = type <{ %class.sk_sp.96, %class.sk_sp.97, %class.sk_sp.98, %class.sk_sp.4, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon.99, [4 x i8] }>
%class.sk_sp.97 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.99 = type { %struct.anon.100 }
%struct.anon.100 = type { i32 }
%class.sk_sp.101 = type { %"class.cc::RecordPaintFilter"* }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %class.sk_sp*, %class.sk_sp*, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %class.sk_sp* }
%"class.cc::ScopedRasterFlags" = type <{ %"class.cc::PaintFlags"*, %"class.absl::optional.116", %"class.absl::optional.121", i8, [7 x i8] }>
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIfN4base14StackAllocatorIfLm3EEEE7reserveEm = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorIfN4base14StackAllocatorIfLm3EEEE21__push_back_slow_pathIRKfEEvOT_ = comdat any

$_ZNSt3__16vectorI5sk_spIN2cc11PaintFilterEEN4base14StackAllocatorIS4_Lm2EEEE7reserveEm = comdat any

$_ZNSt3__16vectorI5sk_spIN2cc11PaintFilterEEN4base14StackAllocatorIS4_Lm2EEEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16vectorI5sk_spI13SkImageFilterENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZTVN2cc11PaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::PaintFilter"*)* @_ZN2cc11PaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::PaintFilter"*)* @_ZN2cc11PaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [12 x i8] c"kNullFilter\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"kColorFilter\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"kBlur\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"kDropShadow\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"kMagnifier\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"kAlphaThreshold\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"kXfermode\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"kArithmetic\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"kMatrixConvolution\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"kDisplacementMapEffect\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"kImage\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"kPaintRecord\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"kMerge\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"kMorphology\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"kOffset\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"kTile\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"kTurbulence\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"kShader\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"kMatrix\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"kLightingDistant\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"kLightingPoint\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"kLightingSpot\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@_ZTVN2cc22ColorFilterPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ColorFilterPaintFilter"*)* @_ZN2cc22ColorFilterPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::ColorFilterPaintFilter"*)* @_ZN2cc22ColorFilterPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::ColorFilterPaintFilter"*)* @_ZNK2cc22ColorFilterPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::ColorFilterPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc22ColorFilterPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc15BlurPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::BlurPaintFilter"*)* @_ZN2cc15BlurPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::BlurPaintFilter"*)* @_ZN2cc15BlurPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::BlurPaintFilter"*)* @_ZNK2cc15BlurPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::BlurPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc15BlurPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc21DropShadowPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::DropShadowPaintFilter"*)* @_ZN2cc21DropShadowPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::DropShadowPaintFilter"*)* @_ZN2cc21DropShadowPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::DropShadowPaintFilter"*)* @_ZNK2cc21DropShadowPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::DropShadowPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc21DropShadowPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc20MagnifierPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::MagnifierPaintFilter"*)* @_ZN2cc20MagnifierPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::MagnifierPaintFilter"*)* @_ZN2cc20MagnifierPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::MagnifierPaintFilter"*)* @_ZNK2cc20MagnifierPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::MagnifierPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc20MagnifierPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc18ComposePaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ComposePaintFilter"*)* @_ZN2cc18ComposePaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::ComposePaintFilter"*)* @_ZN2cc18ComposePaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::ComposePaintFilter"*)* @_ZNK2cc18ComposePaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::ComposePaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc18ComposePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc25AlphaThresholdPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::AlphaThresholdPaintFilter"*)* @_ZN2cc25AlphaThresholdPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::AlphaThresholdPaintFilter"*)* @_ZN2cc25AlphaThresholdPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::AlphaThresholdPaintFilter"*)* @_ZNK2cc25AlphaThresholdPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::AlphaThresholdPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc25AlphaThresholdPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc19XfermodePaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::XfermodePaintFilter"*)* @_ZN2cc19XfermodePaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::XfermodePaintFilter"*)* @_ZN2cc19XfermodePaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::XfermodePaintFilter"*)* @_ZNK2cc19XfermodePaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::XfermodePaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc19XfermodePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc21ArithmeticPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ArithmeticPaintFilter"*)* @_ZN2cc21ArithmeticPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::ArithmeticPaintFilter"*)* @_ZN2cc21ArithmeticPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::ArithmeticPaintFilter"*)* @_ZNK2cc21ArithmeticPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::ArithmeticPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc21ArithmeticPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc28MatrixConvolutionPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::MatrixConvolutionPaintFilter"*)* @_ZN2cc28MatrixConvolutionPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::MatrixConvolutionPaintFilter"*)* @_ZN2cc28MatrixConvolutionPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::MatrixConvolutionPaintFilter"*)* @_ZNK2cc28MatrixConvolutionPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::MatrixConvolutionPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc28MatrixConvolutionPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc32DisplacementMapEffectPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::DisplacementMapEffectPaintFilter"*)* @_ZN2cc32DisplacementMapEffectPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::DisplacementMapEffectPaintFilter"*)* @_ZN2cc32DisplacementMapEffectPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::DisplacementMapEffectPaintFilter"*)* @_ZNK2cc32DisplacementMapEffectPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::DisplacementMapEffectPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc32DisplacementMapEffectPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc16ImagePaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ImagePaintFilter"*)* @_ZN2cc16ImagePaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::ImagePaintFilter"*)* @_ZN2cc16ImagePaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::ImagePaintFilter"*)* @_ZNK2cc16ImagePaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::ImagePaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc16ImagePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@__const.ImagePaintFilter.sampling = private unnamed_addr constant { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkCubicResampler { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 }, align 4
@__const._ZNK2cc16ImagePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE.draw_image = private unnamed_addr constant <{ { %class.sk_sp.10, %class.sk_sp.17, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.21, %class.sk_sp.29, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.10, %class.scoped_refptr }, i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.81 } } } }, { { { { i8, [3 x i8], %union.anon.86 } } } }, float, [4 x i8] }> <{ { %class.sk_sp.10, %class.sk_sp.17, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.21, %class.sk_sp.29, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.10, %class.scoped_refptr } { %class.sk_sp.10 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.17 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.21 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.29 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.10 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.81 } } } } { { { { i8, [7 x i8], %union.anon.81 } } } { { { i8, [7 x i8], %union.anon.81 } } { { i8, [7 x i8], %union.anon.81 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.81 { i64 -6148914691236517206 } } } } }, { { { { i8, [3 x i8], %union.anon.86 } } } } { { { { i8, [3 x i8], %union.anon.86 } } } { { { i8, [3 x i8], %union.anon.86 } } { { i8, [3 x i8], %union.anon.86 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.86 { %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } } } } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK2cc16ImagePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE.scoped_result = private unnamed_addr constant { <{ %class.sk_sp.87, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.92 } } } }, %class.sk_sp.4, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.17, %"class.base::OnceCallback" } { <{ %class.sk_sp.87, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.92 } } } }, %class.sk_sp.4, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }> <{ %class.sk_sp.87 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %"struct.gpu::Mailbox" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, { { { { i8, [3 x i8], %union.anon.92 } } } } { { { { i8, [3 x i8], %union.anon.92 } } } { { { i8, [3 x i8], %union.anon.92 } } { { i8, [3 x i8], %union.anon.92 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.92 { i32 -1431655766 } } } } }, %class.sk_sp.4 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %class.sk_sp.17 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.base::OnceCallback" { %"class.base::internal::CallbackBase" { %class.scoped_refptr.93 { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, align 8
@_ZTVN2cc17RecordPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::RecordPaintFilter"*)* @_ZN2cc17RecordPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::RecordPaintFilter"*)* @_ZN2cc17RecordPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::RecordPaintFilter"*)* @_ZNK2cc17RecordPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::RecordPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc17RecordPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc16MergePaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::MergePaintFilter"*)* @_ZN2cc16MergePaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::MergePaintFilter"*)* @_ZN2cc16MergePaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::MergePaintFilter"*)* @_ZNK2cc16MergePaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::MergePaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc16MergePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc21MorphologyPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::MorphologyPaintFilter"*)* @_ZN2cc21MorphologyPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::MorphologyPaintFilter"*)* @_ZN2cc21MorphologyPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::MorphologyPaintFilter"*)* @_ZNK2cc21MorphologyPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::MorphologyPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc21MorphologyPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc17OffsetPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::OffsetPaintFilter"*)* @_ZN2cc17OffsetPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::OffsetPaintFilter"*)* @_ZN2cc17OffsetPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::OffsetPaintFilter"*)* @_ZNK2cc17OffsetPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::OffsetPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc17OffsetPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc15TilePaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::TilePaintFilter"*)* @_ZN2cc15TilePaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::TilePaintFilter"*)* @_ZN2cc15TilePaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::TilePaintFilter"*)* @_ZNK2cc15TilePaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::TilePaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc15TilePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc21TurbulencePaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::PaintFilter"*)* @_ZN2cc11PaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::TurbulencePaintFilter"*)* @_ZN2cc21TurbulencePaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::TurbulencePaintFilter"*)* @_ZNK2cc21TurbulencePaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::TurbulencePaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc21TurbulencePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc17ShaderPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ShaderPaintFilter"*)* @_ZN2cc17ShaderPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::ShaderPaintFilter"*)* @_ZN2cc17ShaderPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::ShaderPaintFilter"*)* @_ZNK2cc17ShaderPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::ShaderPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc17ShaderPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@__const._ZNK2cc17ShaderPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE.orig_flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.96 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.40 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.98 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.4 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.114 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.3 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.115 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK2cc17ShaderPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE.raster_flags = private unnamed_addr constant <{ %"class.cc::PaintFlags"*, %"class.absl::optional.116", { { { { i8, [7 x i8], %union.anon.125 } } } }, i8, [7 x i8] }> <{ %"class.cc::PaintFlags"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFlags"*), %"class.absl::optional.116" { %"class.absl::optional_internal::optional_data.117" { %"class.absl::optional_internal::optional_data_base.118" { %"class.absl::optional_internal::optional_data_dtor_base.119" { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.120 { %"class.cc::PaintFlags" <{ %class.sk_sp.96 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.40 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.98 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.4 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.114 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.3 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.115 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }> } } } } }, { { { { i8, [7 x i8], %union.anon.125 } } } } { { { { i8, [7 x i8], %union.anon.125 } } } { { { i8, [7 x i8], %union.anon.125 } } { { i8, [7 x i8], %union.anon.125 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.125 { %"class.cc::DecodeStashingImageProvider" { %"class.cc::ImageProvider" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.cc::ImageProvider"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider"*), %"class.base::StackVector.126" { %"class.base::StackContainer.127" { %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source" { [80 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }, %"class.base::StackAllocator.128" { %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* inttoptr (i64 -6148914691236517206 to %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"*) }, %"class.std::__1::vector.131" { %"class.std::__1::__vector_base.132" { %"class.cc::ImageProvider::ScopedResult"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider::ScopedResult"*), %"class.cc::ImageProvider::ScopedResult"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider::ScopedResult"*), %"class.std::__1::__compressed_pair.133" { %"struct.std::__1::__compressed_pair_elem.134" { %"class.cc::ImageProvider::ScopedResult"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider::ScopedResult"*) }, %"struct.std::__1::__compressed_pair_elem.135" { %"class.base::StackAllocator.128" { %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* inttoptr (i64 -6148914691236517206 to %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"*) } } } } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZTVN2cc17MatrixPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::MatrixPaintFilter"*)* @_ZN2cc17MatrixPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::MatrixPaintFilter"*)* @_ZN2cc17MatrixPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::MatrixPaintFilter"*)* @_ZNK2cc17MatrixPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::MatrixPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc17MatrixPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc26LightingDistantPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::LightingDistantPaintFilter"*)* @_ZN2cc26LightingDistantPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::LightingDistantPaintFilter"*)* @_ZN2cc26LightingDistantPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::LightingDistantPaintFilter"*)* @_ZNK2cc26LightingDistantPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::LightingDistantPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc26LightingDistantPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc24LightingPointPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::LightingPointPaintFilter"*)* @_ZN2cc24LightingPointPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::LightingPointPaintFilter"*)* @_ZN2cc24LightingPointPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::LightingPointPaintFilter"*)* @_ZNK2cc24LightingPointPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::LightingPointPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc24LightingPointPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZTVN2cc23LightingSpotPaintFilterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::LightingSpotPaintFilter"*)* @_ZN2cc23LightingSpotPaintFilterD2Ev to i8*), i8* bitcast (void (%"class.cc::LightingSpotPaintFilter"*)* @_ZN2cc23LightingSpotPaintFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i64 (%"class.cc::LightingSpotPaintFilter"*)* @_ZNK2cc23LightingSpotPaintFilter14SerializedSizeEv to i8*), i8* bitcast (void (%class.sk_sp.3*, %"class.cc::LightingSpotPaintFilter"*, %"class.cc::ImageProvider"*)* @_ZNK2cc23LightingSpotPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE to i8*)] }, align 8
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4

@_ZN2cc11PaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::PaintFilter"*), void (%"class.cc::PaintFilter"*)* @_ZN2cc11PaintFilterD2Ev
@_ZN2cc22ColorFilterPaintFilterC1E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect = hidden unnamed_addr alias void (%"class.cc::ColorFilterPaintFilter"*, %class.sk_sp.4*, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::ColorFilterPaintFilter"*, %class.sk_sp.4*, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc22ColorFilterPaintFilterC2E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect
@_ZN2cc22ColorFilterPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::ColorFilterPaintFilter"*), void (%"class.cc::ColorFilterPaintFilter"*)* @_ZN2cc22ColorFilterPaintFilterD2Ev
@_ZN2cc15BlurPaintFilterC1Eff10SkTileMode5sk_spINS_11PaintFilterEEPK6SkRect = hidden unnamed_addr alias void (%"class.cc::BlurPaintFilter"*, float, float, i32, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::BlurPaintFilter"*, float, float, i32, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc15BlurPaintFilterC2Eff10SkTileMode5sk_spINS_11PaintFilterEEPK6SkRect
@_ZN2cc15BlurPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::BlurPaintFilter"*), void (%"class.cc::BlurPaintFilter"*)* @_ZN2cc15BlurPaintFilterD2Ev
@_ZN2cc21DropShadowPaintFilterC1EffffjNS0_10ShadowModeE5sk_spINS_11PaintFilterEEPK6SkRect = hidden unnamed_addr alias void (%"class.cc::DropShadowPaintFilter"*, float, float, float, float, i32, i32, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::DropShadowPaintFilter"*, float, float, float, float, i32, i32, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc21DropShadowPaintFilterC2EffffjNS0_10ShadowModeE5sk_spINS_11PaintFilterEEPK6SkRect
@_ZN2cc21DropShadowPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::DropShadowPaintFilter"*), void (%"class.cc::DropShadowPaintFilter"*)* @_ZN2cc21DropShadowPaintFilterD2Ev
@_ZN2cc20MagnifierPaintFilterC1ERK6SkRectf5sk_spINS_11PaintFilterEEPS2_ = hidden unnamed_addr alias void (%"class.cc::MagnifierPaintFilter"*, %struct.SkRect*, float, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::MagnifierPaintFilter"*, %struct.SkRect*, float, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc20MagnifierPaintFilterC2ERK6SkRectf5sk_spINS_11PaintFilterEEPS2_
@_ZN2cc20MagnifierPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::MagnifierPaintFilter"*), void (%"class.cc::MagnifierPaintFilter"*)* @_ZN2cc20MagnifierPaintFilterD2Ev
@_ZN2cc18ComposePaintFilterC1E5sk_spINS_11PaintFilterEES3_ = hidden unnamed_addr alias void (%"class.cc::ComposePaintFilter"*, %class.sk_sp.3*, %class.sk_sp.3*), void (%"class.cc::ComposePaintFilter"*, %class.sk_sp.3*, %class.sk_sp.3*)* @_ZN2cc18ComposePaintFilterC2E5sk_spINS_11PaintFilterEES3_
@_ZN2cc18ComposePaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::ComposePaintFilter"*), void (%"class.cc::ComposePaintFilter"*)* @_ZN2cc18ComposePaintFilterD2Ev
@_ZN2cc25AlphaThresholdPaintFilterC1ERK8SkRegionff5sk_spINS_11PaintFilterEEPK6SkRect = hidden unnamed_addr alias void (%"class.cc::AlphaThresholdPaintFilter"*, %class.SkRegion*, float, float, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::AlphaThresholdPaintFilter"*, %class.SkRegion*, float, float, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc25AlphaThresholdPaintFilterC2ERK8SkRegionff5sk_spINS_11PaintFilterEEPK6SkRect
@_ZN2cc25AlphaThresholdPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::AlphaThresholdPaintFilter"*), void (%"class.cc::AlphaThresholdPaintFilter"*)* @_ZN2cc25AlphaThresholdPaintFilterD2Ev
@_ZN2cc19XfermodePaintFilterC1E11SkBlendMode5sk_spINS_11PaintFilterEES4_PK6SkRect = hidden unnamed_addr alias void (%"class.cc::XfermodePaintFilter"*, i32, %class.sk_sp.3*, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::XfermodePaintFilter"*, i32, %class.sk_sp.3*, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc19XfermodePaintFilterC2E11SkBlendMode5sk_spINS_11PaintFilterEES4_PK6SkRect
@_ZN2cc19XfermodePaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::XfermodePaintFilter"*), void (%"class.cc::XfermodePaintFilter"*)* @_ZN2cc19XfermodePaintFilterD2Ev
@_ZN2cc21ArithmeticPaintFilterC1Effffb5sk_spINS_11PaintFilterEES3_PK6SkRect = hidden unnamed_addr alias void (%"class.cc::ArithmeticPaintFilter"*, float, float, float, float, i1, %class.sk_sp.3*, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::ArithmeticPaintFilter"*, float, float, float, float, i1, %class.sk_sp.3*, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc21ArithmeticPaintFilterC2Effffb5sk_spINS_11PaintFilterEES3_PK6SkRect
@_ZN2cc21ArithmeticPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::ArithmeticPaintFilter"*), void (%"class.cc::ArithmeticPaintFilter"*)* @_ZN2cc21ArithmeticPaintFilterD2Ev
@_ZN2cc28MatrixConvolutionPaintFilterC1ERK7SkISizePKfffRK8SkIPoint10SkTileModeb5sk_spINS_11PaintFilterEEPK6SkRect = hidden unnamed_addr alias void (%"class.cc::MatrixConvolutionPaintFilter"*, %struct.SkISize*, float*, float, float, %struct.SkIPoint*, i32, i1, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::MatrixConvolutionPaintFilter"*, %struct.SkISize*, float*, float, float, %struct.SkIPoint*, i32, i1, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc28MatrixConvolutionPaintFilterC2ERK7SkISizePKfffRK8SkIPoint10SkTileModeb5sk_spINS_11PaintFilterEEPK6SkRect
@_ZN2cc28MatrixConvolutionPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::MatrixConvolutionPaintFilter"*), void (%"class.cc::MatrixConvolutionPaintFilter"*)* @_ZN2cc28MatrixConvolutionPaintFilterD2Ev
@_ZN2cc32DisplacementMapEffectPaintFilterC1E14SkColorChannelS1_f5sk_spINS_11PaintFilterEES4_PK6SkRect = hidden unnamed_addr alias void (%"class.cc::DisplacementMapEffectPaintFilter"*, i32, i32, float, %class.sk_sp.3*, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::DisplacementMapEffectPaintFilter"*, i32, i32, float, %class.sk_sp.3*, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc32DisplacementMapEffectPaintFilterC2E14SkColorChannelS1_f5sk_spINS_11PaintFilterEES4_PK6SkRect
@_ZN2cc32DisplacementMapEffectPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::DisplacementMapEffectPaintFilter"*), void (%"class.cc::DisplacementMapEffectPaintFilter"*)* @_ZN2cc32DisplacementMapEffectPaintFilterD2Ev
@_ZN2cc16ImagePaintFilterC1ENS_10PaintImageERK6SkRectS4_15SkFilterQuality = hidden unnamed_addr alias void (%"class.cc::ImagePaintFilter"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, i32), void (%"class.cc::ImagePaintFilter"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, i32)* @_ZN2cc16ImagePaintFilterC2ENS_10PaintImageERK6SkRectS4_15SkFilterQuality
@_ZN2cc16ImagePaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::ImagePaintFilter"*), void (%"class.cc::ImagePaintFilter"*)* @_ZN2cc16ImagePaintFilterD2Ev
@_ZN2cc17RecordPaintFilterC1E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorE = hidden unnamed_addr alias void (%"class.cc::RecordPaintFilter"*, %class.sk_sp.17*, %struct.SkRect*, %"class.gfx::SizeF"*, i8), void (%"class.cc::RecordPaintFilter"*, %class.sk_sp.17*, %struct.SkRect*, %"class.gfx::SizeF"*, i8)* @_ZN2cc17RecordPaintFilterC2E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorE
@_ZN2cc17RecordPaintFilterC1E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorEPNS_13ImageProviderE = hidden unnamed_addr alias void (%"class.cc::RecordPaintFilter"*, %class.sk_sp.17*, %struct.SkRect*, %"class.gfx::SizeF"*, i8, %"class.cc::ImageProvider"*), void (%"class.cc::RecordPaintFilter"*, %class.sk_sp.17*, %struct.SkRect*, %"class.gfx::SizeF"*, i8, %"class.cc::ImageProvider"*)* @_ZN2cc17RecordPaintFilterC2E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorEPNS_13ImageProviderE
@_ZN2cc17RecordPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::RecordPaintFilter"*), void (%"class.cc::RecordPaintFilter"*)* @_ZN2cc17RecordPaintFilterD2Ev
@_ZN2cc16MergePaintFilterC1EPK5sk_spINS_11PaintFilterEEiPK6SkRect = hidden unnamed_addr alias void (%"class.cc::MergePaintFilter"*, %class.sk_sp.3*, i32, %struct.SkRect*), void (%"class.cc::MergePaintFilter"*, %class.sk_sp.3*, i32, %struct.SkRect*)* @_ZN2cc16MergePaintFilterC2EPK5sk_spINS_11PaintFilterEEiPK6SkRect
@_ZN2cc16MergePaintFilterC1EPK5sk_spINS_11PaintFilterEEiPK6SkRectPNS_13ImageProviderE = hidden unnamed_addr alias void (%"class.cc::MergePaintFilter"*, %class.sk_sp.3*, i32, %struct.SkRect*, %"class.cc::ImageProvider"*), void (%"class.cc::MergePaintFilter"*, %class.sk_sp.3*, i32, %struct.SkRect*, %"class.cc::ImageProvider"*)* @_ZN2cc16MergePaintFilterC2EPK5sk_spINS_11PaintFilterEEiPK6SkRectPNS_13ImageProviderE
@_ZN2cc16MergePaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::MergePaintFilter"*), void (%"class.cc::MergePaintFilter"*)* @_ZN2cc16MergePaintFilterD2Ev
@_ZN2cc21MorphologyPaintFilterC1ENS0_9MorphTypeEff5sk_spINS_11PaintFilterEEPK6SkRect = hidden unnamed_addr alias void (%"class.cc::MorphologyPaintFilter"*, i32, float, float, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::MorphologyPaintFilter"*, i32, float, float, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc21MorphologyPaintFilterC2ENS0_9MorphTypeEff5sk_spINS_11PaintFilterEEPK6SkRect
@_ZN2cc21MorphologyPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::MorphologyPaintFilter"*), void (%"class.cc::MorphologyPaintFilter"*)* @_ZN2cc21MorphologyPaintFilterD2Ev
@_ZN2cc17OffsetPaintFilterC1Eff5sk_spINS_11PaintFilterEEPK6SkRect = hidden unnamed_addr alias void (%"class.cc::OffsetPaintFilter"*, float, float, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::OffsetPaintFilter"*, float, float, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc17OffsetPaintFilterC2Eff5sk_spINS_11PaintFilterEEPK6SkRect
@_ZN2cc17OffsetPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::OffsetPaintFilter"*), void (%"class.cc::OffsetPaintFilter"*)* @_ZN2cc17OffsetPaintFilterD2Ev
@_ZN2cc15TilePaintFilterC1ERK6SkRectS3_5sk_spINS_11PaintFilterEE = hidden unnamed_addr alias void (%"class.cc::TilePaintFilter"*, %struct.SkRect*, %struct.SkRect*, %class.sk_sp.3*), void (%"class.cc::TilePaintFilter"*, %struct.SkRect*, %struct.SkRect*, %class.sk_sp.3*)* @_ZN2cc15TilePaintFilterC2ERK6SkRectS3_5sk_spINS_11PaintFilterEE
@_ZN2cc15TilePaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::TilePaintFilter"*), void (%"class.cc::TilePaintFilter"*)* @_ZN2cc15TilePaintFilterD2Ev
@_ZN2cc21TurbulencePaintFilterC1ENS0_14TurbulenceTypeEffifPK7SkISizePK6SkRect = hidden unnamed_addr alias void (%"class.cc::TurbulencePaintFilter"*, i32, float, float, i32, float, %struct.SkISize*, %struct.SkRect*), void (%"class.cc::TurbulencePaintFilter"*, i32, float, float, i32, float, %struct.SkISize*, %struct.SkRect*)* @_ZN2cc21TurbulencePaintFilterC2ENS0_14TurbulenceTypeEffifPK7SkISizePK6SkRect
@_ZN2cc21TurbulencePaintFilterD2Ev = hidden unnamed_addr alias void (%"class.cc::TurbulencePaintFilter"*), bitcast (void (%"class.cc::PaintFilter"*)* @_ZN2cc11PaintFilterD2Ev to void (%"class.cc::TurbulencePaintFilter"*)*)
@_ZN2cc21TurbulencePaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::TurbulencePaintFilter"*), bitcast (void (%"class.cc::PaintFilter"*)* @_ZN2cc11PaintFilterD2Ev to void (%"class.cc::TurbulencePaintFilter"*)*)
@_ZN2cc17ShaderPaintFilterC1E5sk_spINS_11PaintShaderEEh15SkFilterQualityN14SkImageFilters6DitherEPK6SkRect = hidden unnamed_addr alias void (%"class.cc::ShaderPaintFilter"*, %class.sk_sp.40*, i8, i32, i1, %struct.SkRect*), void (%"class.cc::ShaderPaintFilter"*, %class.sk_sp.40*, i8, i32, i1, %struct.SkRect*)* @_ZN2cc17ShaderPaintFilterC2E5sk_spINS_11PaintShaderEEh15SkFilterQualityN14SkImageFilters6DitherEPK6SkRect
@_ZN2cc17ShaderPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::ShaderPaintFilter"*), void (%"class.cc::ShaderPaintFilter"*)* @_ZN2cc17ShaderPaintFilterD2Ev
@_ZN2cc17MatrixPaintFilterC1ERK8SkMatrix15SkFilterQuality5sk_spINS_11PaintFilterEE = hidden unnamed_addr alias void (%"class.cc::MatrixPaintFilter"*, %class.SkMatrix*, i32, %class.sk_sp.3*), void (%"class.cc::MatrixPaintFilter"*, %class.SkMatrix*, i32, %class.sk_sp.3*)* @_ZN2cc17MatrixPaintFilterC2ERK8SkMatrix15SkFilterQuality5sk_spINS_11PaintFilterEE
@_ZN2cc17MatrixPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::MatrixPaintFilter"*), void (%"class.cc::MatrixPaintFilter"*)* @_ZN2cc17MatrixPaintFilterD2Ev
@_ZN2cc26LightingDistantPaintFilterC1ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect = hidden unnamed_addr alias void (%"class.cc::LightingDistantPaintFilter"*, i32, %struct.SkPoint3*, i32, float, float, float, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::LightingDistantPaintFilter"*, i32, %struct.SkPoint3*, i32, float, float, float, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc26LightingDistantPaintFilterC2ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect
@_ZN2cc26LightingDistantPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::LightingDistantPaintFilter"*), void (%"class.cc::LightingDistantPaintFilter"*)* @_ZN2cc26LightingDistantPaintFilterD2Ev
@_ZN2cc24LightingPointPaintFilterC1ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect = hidden unnamed_addr alias void (%"class.cc::LightingPointPaintFilter"*, i32, %struct.SkPoint3*, i32, float, float, float, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::LightingPointPaintFilter"*, i32, %struct.SkPoint3*, i32, float, float, float, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc24LightingPointPaintFilterC2ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect
@_ZN2cc24LightingPointPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::LightingPointPaintFilter"*), void (%"class.cc::LightingPointPaintFilter"*)* @_ZN2cc24LightingPointPaintFilterD2Ev
@_ZN2cc23LightingSpotPaintFilterC1ENS_11PaintFilter12LightingTypeERK8SkPoint3S5_ffjfff5sk_spIS1_EPK6SkRect = hidden unnamed_addr alias void (%"class.cc::LightingSpotPaintFilter"*, i32, %struct.SkPoint3*, %struct.SkPoint3*, float, float, i32, float, float, float, %class.sk_sp.3*, %struct.SkRect*), void (%"class.cc::LightingSpotPaintFilter"*, i32, %struct.SkPoint3*, %struct.SkPoint3*, float, float, i32, float, float, float, %class.sk_sp.3*, %struct.SkRect*)* @_ZN2cc23LightingSpotPaintFilterC2ENS_11PaintFilter12LightingTypeERK8SkPoint3S5_ffjfff5sk_spIS1_EPK6SkRect
@_ZN2cc23LightingSpotPaintFilterD1Ev = hidden unnamed_addr alias void (%"class.cc::LightingSpotPaintFilter"*), void (%"class.cc::LightingSpotPaintFilter"*)* @_ZN2cc23LightingSpotPaintFilterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintFilterC2ENS0_4TypeEPK6SkRectb(%"class.cc::PaintFilter"* nocapture, i32, %struct.SkRect* readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %8, align 8
  %9 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 2
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 4
  store i8 %5, i8* %11, align 8
  %12 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 5
  store i32 0, i32* %12, align 4
  %13 = icmp eq %struct.SkRect* %2, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %4
  store i8 0, i8* %10, align 4
  %15 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %union.anon* %15 to i8*
  %17 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* nonnull align 4 %17, i64 16, i1 false) #14
  store i8 1, i8* %10, align 4
  br label %18

18:                                               ; preds = %4, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintFilterD2Ev(%"class.cc::PaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkImageFilter*, %class.SkImageFilter** %3, align 8
  %5 = icmp eq %class.SkImageFilter* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImageFilter* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImageFilter* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2cc11PaintFilterD0Ev(%"class.cc::PaintFilter"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintFilter12TypeToStringENS0_4TypeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %120 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %13
    i32 3, label %18
    i32 4, label %23
    i32 5, label %28
    i32 6, label %34
    i32 7, label %39
    i32 8, label %44
    i32 9, label %49
    i32 10, label %54
    i32 11, label %59
    i32 12, label %64
    i32 13, label %69
    i32 14, label %74
    i32 15, label %79
    i32 16, label %84
    i32 17, label %89
    i32 18, label %94
    i32 19, label %99
    i32 20, label %104
    i32 21, label %110
    i32 22, label %115
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 11, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i1 false) #14
  %7 = getelementptr inbounds i8, i8* %6, i64 11
  store i8 0, i8* %7, align 1
  br label %125

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 12, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %11, i64 12
  store i8 0, i8* %12, align 4
  br label %125

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 5, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5, i1 false) #14
  %17 = getelementptr inbounds i8, i8* %16, i64 5
  store i8 0, i8* %17, align 1
  br label %125

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 11, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i64 11, i1 false) #14
  %22 = getelementptr inbounds i8, i8* %21, i64 11
  store i8 0, i8* %22, align 1
  br label %125

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 10, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 10, i1 false) #14
  %27 = getelementptr inbounds i8, i8* %26, i64 10
  store i8 0, i8* %27, align 2
  br label %125

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 8, i8* %30, align 1
  %31 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 7310309148815475563, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast i64* %32 to i8*
  store i8 0, i8* %33, align 8
  br label %125

34:                                               ; preds = %2
  %35 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 15, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 15, i1 false) #14
  %38 = getelementptr inbounds i8, i8* %37, i64 15
  store i8 0, i8* %38, align 1
  br label %125

39:                                               ; preds = %2
  %40 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 9, i8* %41, align 1
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i64 9, i1 false) #14
  %43 = getelementptr inbounds i8, i8* %42, i64 9
  store i8 0, i8* %43, align 1
  br label %125

44:                                               ; preds = %2
  %45 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 11, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i64 11, i1 false) #14
  %48 = getelementptr inbounds i8, i8* %47, i64 11
  store i8 0, i8* %48, align 1
  br label %125

49:                                               ; preds = %2
  %50 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 18, i8* %51, align 1
  %52 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i64 18, i1 false) #14
  %53 = getelementptr inbounds i8, i8* %52, i64 18
  store i8 0, i8* %53, align 2
  br label %125

54:                                               ; preds = %2
  %55 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 22, i8* %56, align 1
  %57 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i64 22, i1 false) #14
  %58 = getelementptr inbounds i8, i8* %57, i64 22
  store i8 0, i8* %58, align 2
  br label %125

59:                                               ; preds = %2
  %60 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 6, i8* %61, align 1
  %62 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i64 6, i1 false) #14
  %63 = getelementptr inbounds i8, i8* %62, i64 6
  store i8 0, i8* %63, align 2
  br label %125

64:                                               ; preds = %2
  %65 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  store i8 12, i8* %66, align 1
  %67 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i64 12, i1 false) #14
  %68 = getelementptr inbounds i8, i8* %67, i64 12
  store i8 0, i8* %68, align 4
  br label %125

69:                                               ; preds = %2
  %70 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 6, i8* %71, align 1
  %72 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i64 6, i1 false) #14
  %73 = getelementptr inbounds i8, i8* %72, i64 6
  store i8 0, i8* %73, align 2
  br label %125

74:                                               ; preds = %2
  %75 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  store i8 11, i8* %76, align 1
  %77 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i64 11, i1 false) #14
  %78 = getelementptr inbounds i8, i8* %77, i64 11
  store i8 0, i8* %78, align 1
  br label %125

79:                                               ; preds = %2
  %80 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 7, i8* %81, align 1
  %82 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i64 7, i1 false) #14
  %83 = getelementptr inbounds i8, i8* %82, i64 7
  store i8 0, i8* %83, align 1
  br label %125

84:                                               ; preds = %2
  %85 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  store i8 5, i8* %86, align 1
  %87 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 5, i1 false) #14
  %88 = getelementptr inbounds i8, i8* %87, i64 5
  store i8 0, i8* %88, align 1
  br label %125

89:                                               ; preds = %2
  %90 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 11, i8* %91, align 1
  %92 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i64 11, i1 false) #14
  %93 = getelementptr inbounds i8, i8* %92, i64 11
  store i8 0, i8* %93, align 1
  br label %125

94:                                               ; preds = %2
  %95 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  store i8 7, i8* %96, align 1
  %97 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7, i1 false) #14
  %98 = getelementptr inbounds i8, i8* %97, i64 7
  store i8 0, i8* %98, align 1
  br label %125

99:                                               ; preds = %2
  %100 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  store i8 7, i8* %101, align 1
  %102 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i64 7, i1 false) #14
  %103 = getelementptr inbounds i8, i8* %102, i64 7
  store i8 0, i8* %103, align 1
  br label %125

104:                                              ; preds = %2
  %105 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  store i8 16, i8* %106, align 1
  %107 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i64 16, i1 false) #14
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %109 = bitcast i64* %108 to i8*
  store i8 0, i8* %109, align 8
  br label %125

110:                                              ; preds = %2
  %111 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  store i8 14, i8* %112, align 1
  %113 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0), i64 14, i1 false) #14
  %114 = getelementptr inbounds i8, i8* %113, i64 14
  store i8 0, i8* %114, align 2
  br label %125

115:                                              ; preds = %2
  %116 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  store i8 13, i8* %117, align 1
  %118 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i64 13, i1 false) #14
  %119 = getelementptr inbounds i8, i8* %118, i64 13
  store i8 0, i8* %119, align 1
  br label %125

120:                                              ; preds = %2
  %121 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  store i8 7, i8* %122, align 1
  %123 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i64 7, i1 false) #14
  %124 = getelementptr inbounds i8, i8* %123, i64 7
  store i8 0, i8* %124, align 1
  br label %125

125:                                              ; preds = %120, %115, %110, %104, %99, %94, %89, %84, %79, %74, %69, %64, %59, %54, %49, %44, %39, %34, %28, %23, %18, %13, %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2cc11PaintFilter13GetFilterSizeEPKS0_(%"class.cc::PaintFilter"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.cc::PaintFilter"* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.cc::PaintFilter"* %0 to i64 (%"class.cc::PaintFilter"*)***
  %5 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %5, i64 3
  %7 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %6, align 8
  %8 = tail call i64 %7(%"class.cc::PaintFilter"* nonnull %0) #14
  %9 = add i64 %8, 4
  br label %10

10:                                               ; preds = %1, %3
  %11 = phi i64 [ %9, %3 ], [ 4, %1 ]
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc11PaintFilter18BaseSerializedSizeEv(%"class.cc::PaintFilter"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 8, i64 24
  ret i64 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE(%class.sk_sp.3* noalias sret, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %1, i64 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = icmp eq %"class.cc::PaintFilter"* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !3
  br label %12

12:                                               ; preds = %7, %9
  %13 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %0, i64 0, i32 0
  store %"class.cc::PaintFilter"* %1, %"class.cc::PaintFilter"** %13, align 8, !alias.scope !3
  br label %19

14:                                               ; preds = %3
  %15 = bitcast %"class.cc::PaintFilter"* %1 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %16 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %16, i64 4
  %18 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %17, align 8
  tail call void %18(%class.sk_sp.3* sret %0, %"class.cc::PaintFilter"* %1, %"class.cc::ImageProvider"* %2) #14
  br label %19

19:                                               ; preds = %14, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"*, %"class.cc::PaintFilter"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %682

8:                                                ; preds = %2, %50
  %9 = phi i32 [ %54, %50 ], [ %4, %2 ]
  %10 = phi i32* [ %53, %50 ], [ %3, %2 ]
  %11 = phi %"class.cc::PaintFilter"* [ %52, %50 ], [ %1, %2 ]
  %12 = phi %"class.cc::PaintFilter"* [ %51, %50 ], [ %0, %2 ]
  %13 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp ne i8 %17, 0
  %19 = xor i1 %15, %18
  br i1 %19, label %682, label %20

20:                                               ; preds = %8
  br i1 %15, label %21, label %30

21:                                               ; preds = %20
  %22 = icmp eq i8 %17, 0
  br i1 %22, label %23, label %24, !prof !6

23:                                               ; preds = %21
  tail call void @llvm.trap() #14
  unreachable

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %25, %struct.SkRect* dereferenceable(16) %26) #14
  br i1 %27, label %28, label %682

28:                                               ; preds = %24
  %29 = load i32, i32* %10, align 8
  br label %30

30:                                               ; preds = %28, %20
  %31 = phi i32 [ %29, %28 ], [ %9, %20 ]
  switch i32 %31, label %682 [
    i32 22, label %678
    i32 1, label %32
    i32 2, label %61
    i32 3, label %104
    i32 4, label %108
    i32 5, label %139
    i32 6, label %166
    i32 7, label %209
    i32 8, label %244
    i32 9, label %248
    i32 10, label %252
    i32 11, label %307
    i32 12, label %358
    i32 13, label %398
    i32 14, label %448
    i32 15, label %485
    i32 16, label %522
    i32 17, label %547
    i32 18, label %609
    i32 19, label %643
    i32 20, label %670
    i32 21, label %674
  ]

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %34 = bitcast %"class.cc::PaintFilter"* %33 to %class.SkFlattenable**
  %35 = load %class.SkFlattenable*, %class.SkFlattenable** %34, align 8
  %36 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %37 = bitcast %"class.cc::PaintFilter"* %36 to %class.SkFlattenable**
  %38 = load %class.SkFlattenable*, %class.SkFlattenable** %37, align 8
  %39 = tail call zeroext i1 @_ZN2cc7PaintOp22AreSkFlattenablesEqualEP13SkFlattenableS2_(%class.SkFlattenable* %35, %class.SkFlattenable* %38) #14
  br i1 %39, label %40, label %682

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1
  %42 = bitcast %"struct.std::__1::atomic"* %41 to %"class.cc::PaintFilter"**
  %43 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %42, align 8
  %44 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::atomic"* %44 to %"class.cc::PaintFilter"**
  %46 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %45, align 8
  %47 = icmp ne %"class.cc::PaintFilter"* %43, null
  %48 = icmp ne %"class.cc::PaintFilter"* %46, null
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %58

50:                                               ; preds = %40, %91, %126, %153, %196, %231, %294, %472, %509, %534, %657
  %51 = phi %"class.cc::PaintFilter"* [ %43, %40 ], [ %94, %91 ], [ %129, %126 ], [ %156, %153 ], [ %199, %196 ], [ %234, %231 ], [ %297, %294 ], [ %475, %472 ], [ %512, %509 ], [ %537, %534 ], [ %660, %657 ]
  %52 = phi %"class.cc::PaintFilter"* [ %46, %40 ], [ %97, %91 ], [ %132, %126 ], [ %159, %153 ], [ %202, %196 ], [ %237, %231 ], [ %300, %294 ], [ %478, %472 ], [ %515, %509 ], [ %540, %534 ], [ %663, %657 ]
  %53 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %51, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %52, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %8, label %682

58:                                               ; preds = %40
  %59 = or i1 %47, %48
  %60 = xor i1 %59, true
  br label %682

61:                                               ; preds = %30
  %62 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %63 = bitcast %"class.cc::PaintFilter"* %62 to float*
  %64 = load float, float* %63, align 8
  %65 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %66 = bitcast %"class.cc::PaintFilter"* %65 to float*
  %67 = load float, float* %66, align 8
  %68 = fcmp uno float %64, 0.000000e+00
  %69 = fcmp uno float %67, 0.000000e+00
  %70 = and i1 %68, %69
  %71 = fcmp oeq float %64, %67
  %72 = or i1 %71, %70
  br i1 %72, label %73, label %682

73:                                               ; preds = %61
  %74 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::BlurPaintFilter"*
  %75 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::BlurPaintFilter"*
  %76 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %75, i64 0, i32 2
  %77 = load float, float* %76, align 4
  %78 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %74, i64 0, i32 2
  %79 = load float, float* %78, align 4
  %80 = fcmp uno float %77, 0.000000e+00
  %81 = fcmp uno float %79, 0.000000e+00
  %82 = and i1 %80, %81
  %83 = fcmp oeq float %77, %79
  %84 = or i1 %83, %82
  br i1 %84, label %85, label %682

85:                                               ; preds = %73
  %86 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %87, %89
  br i1 %90, label %91, label %682

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 1
  %93 = bitcast %class.sk_sp* %92 to %"class.cc::PaintFilter"**
  %94 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %93, align 8
  %95 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 1
  %96 = bitcast %class.sk_sp* %95 to %"class.cc::PaintFilter"**
  %97 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %96, align 8
  %98 = icmp ne %"class.cc::PaintFilter"* %94, null
  %99 = icmp ne %"class.cc::PaintFilter"* %97, null
  %100 = and i1 %98, %99
  br i1 %100, label %50, label %101

101:                                              ; preds = %91
  %102 = or i1 %98, %99
  %103 = xor i1 %102, true
  br label %682

104:                                              ; preds = %30
  %105 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::DropShadowPaintFilter"*
  %106 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::DropShadowPaintFilter"*
  %107 = tail call zeroext i1 @_ZNK2cc21DropShadowPaintFiltereqERKS0_(%"class.cc::DropShadowPaintFilter"* %105, %"class.cc::DropShadowPaintFilter"* dereferenceable(88) %106)
  br label %682

108:                                              ; preds = %30
  %109 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %110 = bitcast %"class.cc::PaintFilter"* %109 to %struct.SkRect*
  %111 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %112 = bitcast %"class.cc::PaintFilter"* %111 to %struct.SkRect*
  %113 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %110, %struct.SkRect* dereferenceable(16) %112) #14
  br i1 %113, label %114, label %682

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 1
  %116 = bitcast %class.sk_sp* %115 to float*
  %117 = load float, float* %116, align 8
  %118 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 1
  %119 = bitcast %class.sk_sp* %118 to float*
  %120 = load float, float* %119, align 8
  %121 = fcmp uno float %117, 0.000000e+00
  %122 = fcmp uno float %120, 0.000000e+00
  %123 = and i1 %121, %122
  %124 = fcmp oeq float %117, %120
  %125 = or i1 %124, %123
  br i1 %125, label %126, label %682

126:                                              ; preds = %114
  %127 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 2
  %128 = bitcast i32* %127 to %"class.cc::PaintFilter"**
  %129 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %128, align 8
  %130 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 2
  %131 = bitcast i32* %130 to %"class.cc::PaintFilter"**
  %132 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %131, align 8
  %133 = icmp ne %"class.cc::PaintFilter"* %129, null
  %134 = icmp ne %"class.cc::PaintFilter"* %132, null
  %135 = and i1 %133, %134
  br i1 %135, label %50, label %136

136:                                              ; preds = %126
  %137 = or i1 %133, %134
  %138 = xor i1 %137, true
  br label %682

139:                                              ; preds = %30
  %140 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %141 = bitcast %"class.cc::PaintFilter"* %140 to %"class.cc::PaintFilter"**
  %142 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %141, align 8
  %143 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %144 = bitcast %"class.cc::PaintFilter"* %143 to %"class.cc::PaintFilter"**
  %145 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %144, align 8
  %146 = icmp ne %"class.cc::PaintFilter"* %142, null
  %147 = icmp ne %"class.cc::PaintFilter"* %145, null
  %148 = and i1 %146, %147
  br i1 %148, label %149, label %151

149:                                              ; preds = %139
  %150 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %142, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %145) #14
  br i1 %150, label %153, label %682

151:                                              ; preds = %139
  %152 = or i1 %146, %147
  br i1 %152, label %682, label %153

153:                                              ; preds = %151, %149
  %154 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1
  %155 = bitcast %"struct.std::__1::atomic"* %154 to %"class.cc::PaintFilter"**
  %156 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %155, align 8
  %157 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1
  %158 = bitcast %"struct.std::__1::atomic"* %157 to %"class.cc::PaintFilter"**
  %159 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %158, align 8
  %160 = icmp ne %"class.cc::PaintFilter"* %156, null
  %161 = icmp ne %"class.cc::PaintFilter"* %159, null
  %162 = and i1 %160, %161
  br i1 %162, label %50, label %163

163:                                              ; preds = %153
  %164 = or i1 %160, %161
  %165 = xor i1 %164, true
  br label %682

166:                                              ; preds = %30
  %167 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %168 = bitcast %"class.cc::PaintFilter"* %167 to %class.SkRegion*
  %169 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %170 = bitcast %"class.cc::PaintFilter"* %169 to %class.SkRegion*
  %171 = tail call zeroext i1 @_ZNK8SkRegioneqERKS_(%class.SkRegion* %168, %class.SkRegion* dereferenceable(24) %170) #14
  br i1 %171, label %172, label %682

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 2
  %174 = bitcast i32* %173 to float*
  %175 = load float, float* %174, align 8
  %176 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 2
  %177 = bitcast i32* %176 to float*
  %178 = load float, float* %177, align 8
  %179 = fcmp uno float %175, 0.000000e+00
  %180 = fcmp uno float %178, 0.000000e+00
  %181 = and i1 %179, %180
  %182 = fcmp oeq float %175, %178
  %183 = or i1 %182, %181
  br i1 %183, label %184, label %682

184:                                              ; preds = %172
  %185 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 3
  %186 = bitcast %"class.absl::optional"* %185 to float*
  %187 = load float, float* %186, align 4
  %188 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 3
  %189 = bitcast %"class.absl::optional"* %188 to float*
  %190 = load float, float* %189, align 4
  %191 = fcmp uno float %187, 0.000000e+00
  %192 = fcmp uno float %190, 0.000000e+00
  %193 = and i1 %191, %192
  %194 = fcmp oeq float %187, %190
  %195 = or i1 %194, %193
  br i1 %195, label %196, label %682

196:                                              ; preds = %184
  %197 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %198 = bitcast %union.anon* %197 to %"class.cc::PaintFilter"**
  %199 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %198, align 8
  %200 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %201 = bitcast %union.anon* %200 to %"class.cc::PaintFilter"**
  %202 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %201, align 8
  %203 = icmp ne %"class.cc::PaintFilter"* %199, null
  %204 = icmp ne %"class.cc::PaintFilter"* %202, null
  %205 = and i1 %203, %204
  br i1 %205, label %50, label %206

206:                                              ; preds = %196
  %207 = or i1 %203, %204
  %208 = xor i1 %207, true
  br label %682

209:                                              ; preds = %30
  %210 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %211 = bitcast %"class.cc::PaintFilter"* %210 to i32*
  %212 = load i32, i32* %211, align 8
  %213 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %214 = bitcast %"class.cc::PaintFilter"* %213 to i32*
  %215 = load i32, i32* %214, align 8
  %216 = icmp eq i32 %212, %215
  br i1 %216, label %217, label %682

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1
  %219 = bitcast %"struct.std::__1::atomic"* %218 to %"class.cc::PaintFilter"**
  %220 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %219, align 8
  %221 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1
  %222 = bitcast %"struct.std::__1::atomic"* %221 to %"class.cc::PaintFilter"**
  %223 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %222, align 8
  %224 = icmp ne %"class.cc::PaintFilter"* %220, null
  %225 = icmp ne %"class.cc::PaintFilter"* %223, null
  %226 = and i1 %224, %225
  br i1 %226, label %227, label %229

227:                                              ; preds = %217
  %228 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %220, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %223) #14
  br i1 %228, label %231, label %682

229:                                              ; preds = %217
  %230 = or i1 %224, %225
  br i1 %230, label %682, label %231

231:                                              ; preds = %229, %227
  %232 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 1
  %233 = bitcast %class.sk_sp* %232 to %"class.cc::PaintFilter"**
  %234 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %233, align 8
  %235 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 1
  %236 = bitcast %class.sk_sp* %235 to %"class.cc::PaintFilter"**
  %237 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %236, align 8
  %238 = icmp ne %"class.cc::PaintFilter"* %234, null
  %239 = icmp ne %"class.cc::PaintFilter"* %237, null
  %240 = and i1 %238, %239
  br i1 %240, label %50, label %241

241:                                              ; preds = %231
  %242 = or i1 %238, %239
  %243 = xor i1 %242, true
  br label %682

244:                                              ; preds = %30
  %245 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::ArithmeticPaintFilter"*
  %246 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::ArithmeticPaintFilter"*
  %247 = tail call zeroext i1 @_ZNK2cc21ArithmeticPaintFiltereqERKS0_(%"class.cc::ArithmeticPaintFilter"* %245, %"class.cc::ArithmeticPaintFilter"* dereferenceable(96) %246)
  br label %682

248:                                              ; preds = %30
  %249 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::MatrixConvolutionPaintFilter"*
  %250 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::MatrixConvolutionPaintFilter"*
  %251 = tail call zeroext i1 @_ZNK2cc28MatrixConvolutionPaintFiltereqERKS0_(%"class.cc::MatrixConvolutionPaintFilter"* %249, %"class.cc::MatrixConvolutionPaintFilter"* dereferenceable(152) %250)
  br label %682

252:                                              ; preds = %30
  %253 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %254 = bitcast %"class.cc::PaintFilter"* %253 to i32*
  %255 = load i32, i32* %254, align 8
  %256 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %257 = bitcast %"class.cc::PaintFilter"* %256 to i32*
  %258 = load i32, i32* %257, align 8
  %259 = icmp eq i32 %255, %258
  br i1 %259, label %260, label %682

260:                                              ; preds = %252
  %261 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::DisplacementMapEffectPaintFilter"*
  %262 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::DisplacementMapEffectPaintFilter"*
  %263 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %262, i64 0, i32 2
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %261, i64 0, i32 2
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %264, %266
  br i1 %267, label %268, label %682

268:                                              ; preds = %260
  %269 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1
  %270 = bitcast %"struct.std::__1::atomic"* %269 to float*
  %271 = load float, float* %270, align 8
  %272 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1
  %273 = bitcast %"struct.std::__1::atomic"* %272 to float*
  %274 = load float, float* %273, align 8
  %275 = fcmp uno float %271, 0.000000e+00
  %276 = fcmp uno float %274, 0.000000e+00
  %277 = and i1 %275, %276
  %278 = fcmp oeq float %271, %274
  %279 = or i1 %278, %277
  br i1 %279, label %280, label %682

280:                                              ; preds = %268
  %281 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 1
  %282 = bitcast %class.sk_sp* %281 to %"class.cc::PaintFilter"**
  %283 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %282, align 8
  %284 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 1
  %285 = bitcast %class.sk_sp* %284 to %"class.cc::PaintFilter"**
  %286 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %285, align 8
  %287 = icmp ne %"class.cc::PaintFilter"* %283, null
  %288 = icmp ne %"class.cc::PaintFilter"* %286, null
  %289 = and i1 %287, %288
  br i1 %289, label %290, label %292

290:                                              ; preds = %280
  %291 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %283, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %286) #14
  br i1 %291, label %294, label %682

292:                                              ; preds = %280
  %293 = or i1 %287, %288
  br i1 %293, label %682, label %294

294:                                              ; preds = %292, %290
  %295 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 2
  %296 = bitcast i32* %295 to %"class.cc::PaintFilter"**
  %297 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %296, align 8
  %298 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 2
  %299 = bitcast i32* %298 to %"class.cc::PaintFilter"**
  %300 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %299, align 8
  %301 = icmp ne %"class.cc::PaintFilter"* %297, null
  %302 = icmp ne %"class.cc::PaintFilter"* %300, null
  %303 = and i1 %301, %302
  br i1 %303, label %50, label %304

304:                                              ; preds = %294
  %305 = or i1 %301, %302
  %306 = xor i1 %305, true
  br label %682

307:                                              ; preds = %30
  %308 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %309 = bitcast float* %308 to %"class.cc::PaintWorkletInput"**
  %310 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %309, align 8
  %311 = icmp eq %"class.cc::PaintWorkletInput"* %310, null
  br i1 %311, label %312, label %322

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 2, i32 3, i32 0, i32 0, i32 0, i32 1
  %314 = bitcast %union.anon* %313 to %class.SkImage**
  %315 = load %class.SkImage*, %class.SkImage** %314, align 8
  %316 = icmp eq %class.SkImage* %315, null
  br i1 %316, label %317, label %322

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 4
  %319 = bitcast i8* %318 to %"class.cc::TextureBacking"**
  %320 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %319, align 8
  %321 = icmp ne %"class.cc::TextureBacking"* %320, null
  br label %322

322:                                              ; preds = %317, %312, %307
  %323 = phi i1 [ true, %312 ], [ true, %307 ], [ %321, %317 ]
  %324 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 2, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %325 = bitcast float* %324 to %"class.cc::PaintWorkletInput"**
  %326 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %325, align 8
  %327 = icmp eq %"class.cc::PaintWorkletInput"* %326, null
  br i1 %327, label %328, label %333

328:                                              ; preds = %322
  %329 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 2, i32 3, i32 0, i32 0, i32 0, i32 1
  %330 = bitcast %union.anon* %329 to %class.SkImage**
  %331 = load %class.SkImage*, %class.SkImage** %330, align 8
  %332 = icmp eq %class.SkImage* %331, null
  br i1 %332, label %334, label %333

333:                                              ; preds = %328, %322
  br i1 %323, label %340, label %682

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 4
  %336 = bitcast i8* %335 to %"class.cc::TextureBacking"**
  %337 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %336, align 8
  %338 = icmp ne %"class.cc::TextureBacking"* %337, null
  %339 = xor i1 %323, %338
  br i1 %339, label %682, label %340

340:                                              ; preds = %334, %333
  %341 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 2, i32 4
  %342 = bitcast i8* %341 to %struct.SkRect*
  %343 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 2, i32 4
  %344 = bitcast i8* %343 to %struct.SkRect*
  %345 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %342, %struct.SkRect* dereferenceable(16) %344) #14
  br i1 %345, label %346, label %682

346:                                              ; preds = %340
  %347 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 3, i32 0, i32 0, i32 1
  %348 = bitcast %"struct.std::__1::atomic"* %347 to %struct.SkRect*
  %349 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 3, i32 0, i32 0, i32 1
  %350 = bitcast %"struct.std::__1::atomic"* %349 to %struct.SkRect*
  %351 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %348, %struct.SkRect* dereferenceable(16) %350) #14
  br i1 %351, label %352, label %682

352:                                              ; preds = %346
  %353 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 3, i32 2
  %354 = load i32, i32* %353, align 8
  %355 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 3, i32 2
  %356 = load i32, i32* %355, align 8
  %357 = icmp eq i32 %354, %356
  br label %682

358:                                              ; preds = %30
  %359 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %360 = bitcast %"class.cc::PaintFilter"* %359 to %"class.cc::PaintOpBuffer"**
  %361 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %360, align 8
  %362 = icmp ne %"class.cc::PaintOpBuffer"* %361, null
  %363 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %364 = bitcast %"class.cc::PaintFilter"* %363 to %"class.cc::PaintOpBuffer"**
  %365 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %364, align 8
  %366 = icmp ne %"class.cc::PaintOpBuffer"* %365, null
  %367 = xor i1 %362, %366
  br i1 %367, label %682, label %368

368:                                              ; preds = %358
  %369 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %370 = bitcast %union.anon* %369 to i8*
  %371 = load i8, i8* %370, align 8
  %372 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %373 = bitcast %union.anon* %372 to i8*
  %374 = load i8, i8* %373, align 8
  %375 = icmp eq i8 %371, %374
  br i1 %375, label %376, label %682

376:                                              ; preds = %368
  %377 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 2
  %378 = bitcast i32* %377 to float*
  %379 = load float, float* %378, align 4
  %380 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 2
  %381 = bitcast i32* %380 to float*
  %382 = load float, float* %381, align 4
  %383 = fcmp oeq float %379, %382
  br i1 %383, label %384, label %682

384:                                              ; preds = %376
  %385 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 3
  %386 = bitcast %"class.absl::optional"* %385 to float*
  %387 = load float, float* %386, align 4
  %388 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 3
  %389 = bitcast %"class.absl::optional"* %388 to float*
  %390 = load float, float* %389, align 4
  %391 = fcmp oeq float %387, %390
  br i1 %391, label %392, label %682

392:                                              ; preds = %384
  %393 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1
  %394 = bitcast %"struct.std::__1::atomic"* %393 to %struct.SkRect*
  %395 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1
  %396 = bitcast %"struct.std::__1::atomic"* %395 to %struct.SkRect*
  %397 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %394, %struct.SkRect* dereferenceable(16) %396) #14
  br label %682

398:                                              ; preds = %30
  %399 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %400 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %401 = bitcast float* %400 to i64*
  %402 = load i64, i64* %401, align 8
  %403 = bitcast %union.anon* %399 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = sub i64 %402, %404
  %406 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %407 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %408 = bitcast float* %407 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = bitcast %union.anon* %406 to i64*
  %411 = load i64, i64* %410, align 8
  %412 = sub i64 %409, %411
  %413 = icmp eq i64 %405, %412
  %414 = inttoptr i64 %411 to %class.sk_sp.3*
  br i1 %413, label %415, label %682

415:                                              ; preds = %398
  %416 = icmp eq i64 %402, %404
  br i1 %416, label %682, label %417

417:                                              ; preds = %415
  %418 = bitcast %union.anon* %406 to %class.sk_sp.3**
  br label %419

419:                                              ; preds = %446, %417
  %420 = phi i64 [ %404, %417 ], [ %440, %446 ]
  %421 = phi i64 [ %402, %417 ], [ %441, %446 ]
  %422 = phi %class.sk_sp.3* [ %414, %417 ], [ %447, %446 ]
  %423 = phi i64 [ 0, %417 ], [ %442, %446 ]
  %424 = inttoptr i64 %420 to %class.sk_sp.3*
  %425 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %424, i64 %423, i32 0
  %426 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %425, align 8
  %427 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %422, i64 %423, i32 0
  %428 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %427, align 8
  %429 = icmp ne %"class.cc::PaintFilter"* %426, null
  %430 = icmp ne %"class.cc::PaintFilter"* %428, null
  %431 = and i1 %429, %430
  br i1 %431, label %432, label %437

432:                                              ; preds = %419
  %433 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %426, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %428) #14
  br i1 %433, label %434, label %682

434:                                              ; preds = %432
  %435 = load i64, i64* %401, align 8
  %436 = load i64, i64* %403, align 8
  br label %439

437:                                              ; preds = %419
  %438 = or i1 %429, %430
  br i1 %438, label %682, label %439

439:                                              ; preds = %434, %437
  %440 = phi i64 [ %436, %434 ], [ %420, %437 ]
  %441 = phi i64 [ %435, %434 ], [ %421, %437 ]
  %442 = add nuw i64 %423, 1
  %443 = sub i64 %441, %440
  %444 = ashr exact i64 %443, 3
  %445 = icmp ult i64 %442, %444
  br i1 %445, label %446, label %682

446:                                              ; preds = %439
  %447 = load %class.sk_sp.3*, %class.sk_sp.3** %418, align 8
  br label %419

448:                                              ; preds = %30
  %449 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %450 = bitcast %"class.cc::PaintFilter"* %449 to i32*
  %451 = load i32, i32* %450, align 8
  %452 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %453 = bitcast %"class.cc::PaintFilter"* %452 to i32*
  %454 = load i32, i32* %453, align 8
  %455 = icmp eq i32 %451, %454
  br i1 %455, label %456, label %682

456:                                              ; preds = %448
  %457 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::MorphologyPaintFilter"*
  %458 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::MorphologyPaintFilter"*
  %459 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %458, i64 0, i32 2
  %460 = load float, float* %459, align 4
  %461 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %457, i64 0, i32 2
  %462 = load float, float* %461, align 4
  %463 = fcmp oeq float %460, %462
  br i1 %463, label %464, label %682

464:                                              ; preds = %456
  %465 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1
  %466 = bitcast %"struct.std::__1::atomic"* %465 to float*
  %467 = load float, float* %466, align 8
  %468 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1
  %469 = bitcast %"struct.std::__1::atomic"* %468 to float*
  %470 = load float, float* %469, align 8
  %471 = fcmp oeq float %467, %470
  br i1 %471, label %472, label %682

472:                                              ; preds = %464
  %473 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 1
  %474 = bitcast %class.sk_sp* %473 to %"class.cc::PaintFilter"**
  %475 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %474, align 8
  %476 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 1
  %477 = bitcast %class.sk_sp* %476 to %"class.cc::PaintFilter"**
  %478 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %477, align 8
  %479 = icmp ne %"class.cc::PaintFilter"* %475, null
  %480 = icmp ne %"class.cc::PaintFilter"* %478, null
  %481 = and i1 %479, %480
  br i1 %481, label %50, label %482

482:                                              ; preds = %472
  %483 = or i1 %479, %480
  %484 = xor i1 %483, true
  br label %682

485:                                              ; preds = %30
  %486 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %487 = bitcast %"class.cc::PaintFilter"* %486 to float*
  %488 = load float, float* %487, align 8
  %489 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %490 = bitcast %"class.cc::PaintFilter"* %489 to float*
  %491 = load float, float* %490, align 8
  %492 = fcmp uno float %488, 0.000000e+00
  %493 = fcmp uno float %491, 0.000000e+00
  %494 = and i1 %492, %493
  %495 = fcmp oeq float %488, %491
  %496 = or i1 %495, %494
  br i1 %496, label %497, label %682

497:                                              ; preds = %485
  %498 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::OffsetPaintFilter"*
  %499 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::OffsetPaintFilter"*
  %500 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %499, i64 0, i32 2
  %501 = load float, float* %500, align 4
  %502 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %498, i64 0, i32 2
  %503 = load float, float* %502, align 4
  %504 = fcmp uno float %501, 0.000000e+00
  %505 = fcmp uno float %503, 0.000000e+00
  %506 = and i1 %504, %505
  %507 = fcmp oeq float %501, %503
  %508 = or i1 %507, %506
  br i1 %508, label %509, label %682

509:                                              ; preds = %497
  %510 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1
  %511 = bitcast %"struct.std::__1::atomic"* %510 to %"class.cc::PaintFilter"**
  %512 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %511, align 8
  %513 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1
  %514 = bitcast %"struct.std::__1::atomic"* %513 to %"class.cc::PaintFilter"**
  %515 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %514, align 8
  %516 = icmp ne %"class.cc::PaintFilter"* %512, null
  %517 = icmp ne %"class.cc::PaintFilter"* %515, null
  %518 = and i1 %516, %517
  br i1 %518, label %50, label %519

519:                                              ; preds = %509
  %520 = or i1 %516, %517
  %521 = xor i1 %520, true
  br label %682

522:                                              ; preds = %30
  %523 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %524 = bitcast %"class.cc::PaintFilter"* %523 to %struct.SkRect*
  %525 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %526 = bitcast %"class.cc::PaintFilter"* %525 to %struct.SkRect*
  %527 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %524, %struct.SkRect* dereferenceable(16) %526) #14
  br i1 %527, label %528, label %682

528:                                              ; preds = %522
  %529 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 1
  %530 = bitcast %class.sk_sp* %529 to %struct.SkRect*
  %531 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 1
  %532 = bitcast %class.sk_sp* %531 to %struct.SkRect*
  %533 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %530, %struct.SkRect* dereferenceable(16) %532) #14
  br i1 %533, label %534, label %682

534:                                              ; preds = %528
  %535 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %536 = bitcast %union.anon* %535 to %"class.cc::PaintFilter"**
  %537 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %536, align 8
  %538 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %539 = bitcast %union.anon* %538 to %"class.cc::PaintFilter"**
  %540 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %539, align 8
  %541 = icmp ne %"class.cc::PaintFilter"* %537, null
  %542 = icmp ne %"class.cc::PaintFilter"* %540, null
  %543 = and i1 %541, %542
  br i1 %543, label %50, label %544

544:                                              ; preds = %534
  %545 = or i1 %541, %542
  %546 = xor i1 %545, true
  br label %682

547:                                              ; preds = %30
  %548 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::TurbulencePaintFilter"*
  %549 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::TurbulencePaintFilter"*
  %550 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %551 = bitcast %"class.cc::PaintFilter"* %550 to i32*
  %552 = load i32, i32* %551, align 8
  %553 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %554 = bitcast %"class.cc::PaintFilter"* %553 to i32*
  %555 = load i32, i32* %554, align 8
  %556 = icmp eq i32 %552, %555
  br i1 %556, label %557, label %682

557:                                              ; preds = %547
  %558 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %548, i64 0, i32 2
  %559 = load float, float* %558, align 4
  %560 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %549, i64 0, i32 2
  %561 = load float, float* %560, align 4
  %562 = fcmp uno float %559, 0.000000e+00
  %563 = fcmp uno float %561, 0.000000e+00
  %564 = and i1 %562, %563
  %565 = fcmp oeq float %559, %561
  %566 = or i1 %565, %564
  br i1 %566, label %567, label %682

567:                                              ; preds = %557
  %568 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1
  %569 = bitcast %"struct.std::__1::atomic"* %568 to float*
  %570 = load float, float* %569, align 8
  %571 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1
  %572 = bitcast %"struct.std::__1::atomic"* %571 to float*
  %573 = load float, float* %572, align 8
  %574 = fcmp uno float %570, 0.000000e+00
  %575 = fcmp uno float %573, 0.000000e+00
  %576 = and i1 %574, %575
  %577 = fcmp oeq float %570, %573
  %578 = or i1 %577, %576
  br i1 %578, label %579, label %682

579:                                              ; preds = %567
  %580 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %548, i64 0, i32 4
  %581 = load i32, i32* %580, align 4
  %582 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %549, i64 0, i32 4
  %583 = load i32, i32* %582, align 4
  %584 = icmp eq i32 %581, %583
  br i1 %584, label %585, label %682

585:                                              ; preds = %579
  %586 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 1
  %587 = bitcast %class.sk_sp* %586 to float*
  %588 = load float, float* %587, align 8
  %589 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 1
  %590 = bitcast %class.sk_sp* %589 to float*
  %591 = load float, float* %590, align 8
  %592 = fcmp uno float %588, 0.000000e+00
  %593 = fcmp uno float %591, 0.000000e+00
  %594 = and i1 %592, %593
  %595 = fcmp oeq float %588, %591
  %596 = or i1 %595, %594
  br i1 %596, label %597, label %682

597:                                              ; preds = %585
  %598 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %548, i64 0, i32 6, i32 0
  %599 = load i32, i32* %598, align 4
  %600 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %549, i64 0, i32 6, i32 0
  %601 = load i32, i32* %600, align 4
  %602 = icmp eq i32 %599, %601
  br i1 %602, label %603, label %682

603:                                              ; preds = %597
  %604 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 2
  %605 = load i32, i32* %604, align 4
  %606 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 2
  %607 = load i32, i32* %606, align 4
  %608 = icmp eq i32 %605, %607
  br label %682

609:                                              ; preds = %30
  %610 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 0, i32 0, i32 1
  %611 = bitcast %"struct.std::__1::atomic"* %610 to i8*
  %612 = load i8, i8* %611, align 8
  %613 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 0, i32 0, i32 1
  %614 = bitcast %"struct.std::__1::atomic"* %613 to i8*
  %615 = load i8, i8* %614, align 8
  %616 = icmp eq i8 %612, %615
  br i1 %616, label %617, label %682

617:                                              ; preds = %609
  %618 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::ShaderPaintFilter"*
  %619 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::ShaderPaintFilter"*
  %620 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %619, i64 0, i32 4
  %621 = load i32, i32* %620, align 4
  %622 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %618, i64 0, i32 4
  %623 = load i32, i32* %622, align 4
  %624 = icmp eq i32 %621, %623
  br i1 %624, label %625, label %682

625:                                              ; preds = %617
  %626 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 1
  %627 = bitcast %class.sk_sp* %626 to i8*
  %628 = load i8, i8* %627, align 8, !range !2
  %629 = icmp eq i8 %628, 0
  %630 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 1
  %631 = bitcast %class.sk_sp* %630 to i8*
  %632 = load i8, i8* %631, align 8, !range !2
  %633 = icmp ne i8 %632, 0
  %634 = xor i1 %629, %633
  br i1 %634, label %635, label %682

635:                                              ; preds = %625
  %636 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %637 = bitcast %"class.cc::PaintFilter"* %636 to %"class.cc::PaintShader"**
  %638 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %637, align 8
  %639 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %640 = bitcast %"class.cc::PaintFilter"* %639 to %"class.cc::PaintShader"**
  %641 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %640, align 8
  %642 = tail call zeroext i1 @_ZNK2cc11PaintShadereqERKS0_(%"class.cc::PaintShader"* %638, %"class.cc::PaintShader"* dereferenceable(336) %641) #14
  br label %682

643:                                              ; preds = %30
  %644 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1
  %645 = bitcast %"class.cc::PaintFilter"* %644 to %class.SkMatrix*
  %646 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1
  %647 = bitcast %"class.cc::PaintFilter"* %646 to %class.SkMatrix*
  %648 = tail call zeroext i1 @_ZN2cc7PaintOp18AreSkMatricesEqualERK8SkMatrixS3_(%class.SkMatrix* dereferenceable(40) %645, %class.SkMatrix* dereferenceable(40) %647) #14
  br i1 %648, label %649, label %682

649:                                              ; preds = %643
  %650 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %651 = bitcast float* %650 to i32*
  %652 = load i32, i32* %651, align 8
  %653 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %654 = bitcast float* %653 to i32*
  %655 = load i32, i32* %654, align 8
  %656 = icmp eq i32 %652, %655
  br i1 %656, label %657, label %682

657:                                              ; preds = %649
  %658 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 1, i32 4
  %659 = bitcast i8* %658 to %"class.cc::PaintFilter"**
  %660 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %659, align 8
  %661 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 1, i32 4
  %662 = bitcast i8* %661 to %"class.cc::PaintFilter"**
  %663 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %662, align 8
  %664 = icmp ne %"class.cc::PaintFilter"* %660, null
  %665 = icmp ne %"class.cc::PaintFilter"* %663, null
  %666 = and i1 %664, %665
  br i1 %666, label %50, label %667

667:                                              ; preds = %657
  %668 = or i1 %664, %665
  %669 = xor i1 %668, true
  br label %682

670:                                              ; preds = %30
  %671 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::LightingDistantPaintFilter"*
  %672 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::LightingDistantPaintFilter"*
  %673 = tail call zeroext i1 @_ZNK2cc26LightingDistantPaintFiltereqERKS0_(%"class.cc::LightingDistantPaintFilter"* %671, %"class.cc::LightingDistantPaintFilter"* dereferenceable(96) %672)
  br label %682

674:                                              ; preds = %30
  %675 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::LightingPointPaintFilter"*
  %676 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::LightingPointPaintFilter"*
  %677 = tail call zeroext i1 @_ZNK2cc24LightingPointPaintFiltereqERKS0_(%"class.cc::LightingPointPaintFilter"* %675, %"class.cc::LightingPointPaintFilter"* dereferenceable(96) %676)
  br label %682

678:                                              ; preds = %30
  %679 = bitcast %"class.cc::PaintFilter"* %12 to %"class.cc::LightingSpotPaintFilter"*
  %680 = bitcast %"class.cc::PaintFilter"* %11 to %"class.cc::LightingSpotPaintFilter"*
  %681 = tail call zeroext i1 @_ZNK2cc23LightingSpotPaintFiltereqERKS0_(%"class.cc::LightingSpotPaintFilter"* %679, %"class.cc::LightingSpotPaintFilter"* dereferenceable(120) %680)
  br label %682

682:                                              ; preds = %50, %8, %24, %30, %32, %61, %73, %85, %108, %114, %149, %166, %172, %184, %227, %209, %290, %252, %260, %268, %448, %456, %464, %485, %497, %522, %528, %643, %649, %292, %229, %151, %439, %432, %437, %415, %2, %667, %635, %625, %617, %609, %603, %597, %585, %579, %567, %557, %547, %544, %519, %482, %398, %392, %384, %376, %368, %358, %352, %346, %340, %334, %333, %304, %241, %206, %163, %136, %101, %58, %678, %674, %670, %248, %244, %104
  %683 = phi i1 [ %681, %678 ], [ %677, %674 ], [ %673, %670 ], [ %251, %248 ], [ %247, %244 ], [ %107, %104 ], [ %60, %58 ], [ %103, %101 ], [ %138, %136 ], [ %165, %163 ], [ %208, %206 ], [ %243, %241 ], [ %306, %304 ], [ false, %346 ], [ false, %340 ], [ false, %334 ], [ %357, %352 ], [ false, %333 ], [ false, %384 ], [ false, %368 ], [ false, %358 ], [ %397, %392 ], [ false, %376 ], [ false, %398 ], [ %484, %482 ], [ %521, %519 ], [ %546, %544 ], [ false, %585 ], [ false, %579 ], [ false, %567 ], [ false, %557 ], [ false, %547 ], [ false, %597 ], [ %608, %603 ], [ false, %625 ], [ false, %617 ], [ false, %609 ], [ %642, %635 ], [ %669, %667 ], [ true, %415 ], [ false, %2 ], [ true, %439 ], [ false, %432 ], [ false, %437 ], [ false, %50 ], [ false, %8 ], [ false, %24 ], [ true, %30 ], [ false, %32 ], [ false, %61 ], [ false, %73 ], [ false, %85 ], [ false, %108 ], [ false, %114 ], [ false, %149 ], [ false, %166 ], [ false, %172 ], [ false, %184 ], [ false, %227 ], [ false, %209 ], [ false, %290 ], [ false, %252 ], [ false, %260 ], [ false, %268 ], [ false, %448 ], [ false, %456 ], [ false, %464 ], [ false, %485 ], [ false, %497 ], [ false, %522 ], [ false, %528 ], [ false, %643 ], [ false, %649 ], [ false, %292 ], [ false, %229 ], [ false, %151 ]
  ret i1 %683
}

declare zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc22ColorFilterPaintFiltereqERKS0_(%"class.cc::ColorFilterPaintFilter"* nocapture readonly, %"class.cc::ColorFilterPaintFilter"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %class.SkColorFilter** %3 to %class.SkFlattenable**
  %5 = load %class.SkFlattenable*, %class.SkFlattenable** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %1, i64 0, i32 1, i32 0
  %7 = bitcast %class.SkColorFilter** %6 to %class.SkFlattenable**
  %8 = load %class.SkFlattenable*, %class.SkFlattenable** %7, align 8
  %9 = tail call zeroext i1 @_ZN2cc7PaintOp22AreSkFlattenablesEqualEP13SkFlattenableS2_(%class.SkFlattenable* %5, %class.SkFlattenable* %8) #14
  br i1 %9, label %10, label %23

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 2, i32 0
  %12 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %1, i64 0, i32 2, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8
  %15 = icmp ne %"class.cc::PaintFilter"* %12, null
  %16 = icmp ne %"class.cc::PaintFilter"* %14, null
  %17 = and i1 %15, %16
  br i1 %17, label %21, label %18

18:                                               ; preds = %10
  %19 = or i1 %15, %16
  %20 = xor i1 %19, true
  br label %23

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %12, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %14) #14
  br label %23

23:                                               ; preds = %21, %18, %2
  %24 = phi i1 [ false, %2 ], [ %22, %21 ], [ %20, %18 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc15BlurPaintFiltereqERKS0_(%"class.cc::BlurPaintFilter"* nocapture readonly, %"class.cc::BlurPaintFilter"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 8
  %7 = fcmp uno float %4, 0.000000e+00
  %8 = fcmp uno float %6, 0.000000e+00
  %9 = and i1 %7, %8
  %10 = fcmp oeq float %4, %6
  %11 = or i1 %10, %9
  br i1 %11, label %12, label %41

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = fcmp uno float %14, 0.000000e+00
  %18 = fcmp uno float %16, 0.000000e+00
  %19 = and i1 %17, %18
  %20 = fcmp oeq float %14, %16
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %41

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %41

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 4, i32 0
  %30 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %29, align 8
  %31 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 4, i32 0
  %32 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %31, align 8
  %33 = icmp ne %"class.cc::PaintFilter"* %30, null
  %34 = icmp ne %"class.cc::PaintFilter"* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %39, label %36

36:                                               ; preds = %28
  %37 = or i1 %33, %34
  %38 = xor i1 %37, true
  br label %41

39:                                               ; preds = %28
  %40 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %30, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %32) #14
  br label %41

41:                                               ; preds = %39, %36, %22, %12, %2
  %42 = phi i1 [ false, %22 ], [ false, %12 ], [ false, %2 ], [ %40, %39 ], [ %38, %36 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc21DropShadowPaintFiltereqERKS0_(%"class.cc::DropShadowPaintFilter"* nocapture readonly, %"class.cc::DropShadowPaintFilter"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 8
  %7 = fcmp uno float %4, 0.000000e+00
  %8 = fcmp uno float %6, 0.000000e+00
  %9 = and i1 %7, %8
  %10 = fcmp oeq float %4, %6
  %11 = or i1 %10, %9
  br i1 %11, label %12, label %67

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = fcmp uno float %14, 0.000000e+00
  %18 = fcmp uno float %16, 0.000000e+00
  %19 = and i1 %17, %18
  %20 = fcmp oeq float %14, %16
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %67

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 3
  %24 = load float, float* %23, align 8
  %25 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 3
  %26 = load float, float* %25, align 8
  %27 = fcmp uno float %24, 0.000000e+00
  %28 = fcmp uno float %26, 0.000000e+00
  %29 = and i1 %27, %28
  %30 = fcmp oeq float %24, %26
  %31 = or i1 %30, %29
  br i1 %31, label %32, label %67

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 4
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 4
  %36 = load float, float* %35, align 4
  %37 = fcmp uno float %34, 0.000000e+00
  %38 = fcmp uno float %36, 0.000000e+00
  %39 = and i1 %37, %38
  %40 = fcmp oeq float %34, %36
  %41 = or i1 %40, %39
  br i1 %41, label %42, label %67

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 5
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 5
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %67

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 6
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 6
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %67

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 7, i32 0
  %56 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %55, align 8
  %57 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 7, i32 0
  %58 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %57, align 8
  %59 = icmp ne %"class.cc::PaintFilter"* %56, null
  %60 = icmp ne %"class.cc::PaintFilter"* %58, null
  %61 = and i1 %59, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %54
  %63 = or i1 %59, %60
  %64 = xor i1 %63, true
  br label %67

65:                                               ; preds = %54
  %66 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %56, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %58) #14
  br label %67

67:                                               ; preds = %65, %62, %48, %42, %32, %22, %12, %2
  %68 = phi i1 [ false, %48 ], [ false, %42 ], [ false, %32 ], [ false, %22 ], [ false, %12 ], [ false, %2 ], [ %66, %65 ], [ %64, %62 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc20MagnifierPaintFiltereqERKS0_(%"class.cc::MagnifierPaintFilter"*, %"class.cc::MagnifierPaintFilter"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %3, %struct.SkRect* dereferenceable(16) %4) #14
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 2
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 2
  %10 = load float, float* %9, align 8
  %11 = fcmp uno float %8, 0.000000e+00
  %12 = fcmp uno float %10, 0.000000e+00
  %13 = and i1 %11, %12
  %14 = fcmp oeq float %8, %10
  %15 = or i1 %14, %13
  br i1 %15, label %16, label %29

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 3, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 3, i32 0
  %20 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %19, align 8
  %21 = icmp ne %"class.cc::PaintFilter"* %18, null
  %22 = icmp ne %"class.cc::PaintFilter"* %20, null
  %23 = and i1 %21, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %16
  %25 = or i1 %21, %22
  %26 = xor i1 %25, true
  br label %29

27:                                               ; preds = %16
  %28 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %18, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %20) #14
  br label %29

29:                                               ; preds = %27, %24, %6, %2
  %30 = phi i1 [ false, %6 ], [ false, %2 ], [ %28, %27 ], [ %26, %24 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc18ComposePaintFiltereqERKS0_(%"class.cc::ComposePaintFilter"* nocapture readonly, %"class.cc::ComposePaintFilter"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %1, i64 0, i32 1, i32 0
  %6 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %5, align 8
  %7 = icmp ne %"class.cc::PaintFilter"* %4, null
  %8 = icmp ne %"class.cc::PaintFilter"* %6, null
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %4, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %6) #14
  br i1 %11, label %14, label %27

12:                                               ; preds = %2
  %13 = or i1 %7, %8
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %10
  %15 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 2, i32 0
  %16 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %15, align 8
  %17 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %1, i64 0, i32 2, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp ne %"class.cc::PaintFilter"* %16, null
  %20 = icmp ne %"class.cc::PaintFilter"* %18, null
  %21 = and i1 %19, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = or i1 %19, %20
  %24 = xor i1 %23, true
  br label %27

25:                                               ; preds = %14
  %26 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %16, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %18) #14
  br label %27

27:                                               ; preds = %12, %25, %22, %10
  %28 = phi i1 [ false, %12 ], [ false, %10 ], [ %26, %25 ], [ %24, %22 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc25AlphaThresholdPaintFiltereqERKS0_(%"class.cc::AlphaThresholdPaintFilter"*, %"class.cc::AlphaThresholdPaintFilter"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZNK8SkRegioneqERKS_(%class.SkRegion* %3, %class.SkRegion* dereferenceable(24) %4) #14
  br i1 %5, label %6, label %39

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 2
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 2
  %10 = load float, float* %9, align 8
  %11 = fcmp uno float %8, 0.000000e+00
  %12 = fcmp uno float %10, 0.000000e+00
  %13 = and i1 %11, %12
  %14 = fcmp oeq float %8, %10
  %15 = or i1 %14, %13
  br i1 %15, label %16, label %39

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 3
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fcmp uno float %18, 0.000000e+00
  %22 = fcmp uno float %20, 0.000000e+00
  %23 = and i1 %21, %22
  %24 = fcmp oeq float %18, %20
  %25 = or i1 %24, %23
  br i1 %25, label %26, label %39

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 4, i32 0
  %28 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %27, align 8
  %29 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 4, i32 0
  %30 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %29, align 8
  %31 = icmp ne %"class.cc::PaintFilter"* %28, null
  %32 = icmp ne %"class.cc::PaintFilter"* %30, null
  %33 = and i1 %31, %32
  br i1 %33, label %37, label %34

34:                                               ; preds = %26
  %35 = or i1 %31, %32
  %36 = xor i1 %35, true
  br label %39

37:                                               ; preds = %26
  %38 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %28, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %30) #14
  br label %39

39:                                               ; preds = %37, %34, %16, %6, %2
  %40 = phi i1 [ false, %16 ], [ false, %6 ], [ false, %2 ], [ %38, %37 ], [ %36, %34 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc19XfermodePaintFiltereqERKS0_(%"class.cc::XfermodePaintFilter"* nocapture readonly, %"class.cc::XfermodePaintFilter"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %33

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8
  %11 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 2, i32 0
  %12 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %11, align 8
  %13 = icmp ne %"class.cc::PaintFilter"* %10, null
  %14 = icmp ne %"class.cc::PaintFilter"* %12, null
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %10, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %12) #14
  br i1 %17, label %20, label %33

18:                                               ; preds = %8
  %19 = or i1 %13, %14
  br i1 %19, label %33, label %20

20:                                               ; preds = %18, %16
  %21 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 3, i32 0
  %22 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %21, align 8
  %23 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 3, i32 0
  %24 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %23, align 8
  %25 = icmp ne %"class.cc::PaintFilter"* %22, null
  %26 = icmp ne %"class.cc::PaintFilter"* %24, null
  %27 = and i1 %25, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = or i1 %25, %26
  %30 = xor i1 %29, true
  br label %33

31:                                               ; preds = %20
  %32 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %22, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %24) #14
  br label %33

33:                                               ; preds = %18, %31, %28, %16, %2
  %34 = phi i1 [ false, %18 ], [ false, %2 ], [ false, %16 ], [ %32, %31 ], [ %30, %28 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc21ArithmeticPaintFiltereqERKS0_(%"class.cc::ArithmeticPaintFilter"* nocapture readonly, %"class.cc::ArithmeticPaintFilter"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 8
  %7 = fcmp uno float %4, 0.000000e+00
  %8 = fcmp uno float %6, 0.000000e+00
  %9 = and i1 %7, %8
  %10 = fcmp oeq float %4, %6
  %11 = or i1 %10, %9
  br i1 %11, label %12, label %73

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = fcmp uno float %14, 0.000000e+00
  %18 = fcmp uno float %16, 0.000000e+00
  %19 = and i1 %17, %18
  %20 = fcmp oeq float %14, %16
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %73

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 3
  %24 = load float, float* %23, align 8
  %25 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 3
  %26 = load float, float* %25, align 8
  %27 = fcmp uno float %24, 0.000000e+00
  %28 = fcmp uno float %26, 0.000000e+00
  %29 = and i1 %27, %28
  %30 = fcmp oeq float %24, %26
  %31 = or i1 %30, %29
  br i1 %31, label %32, label %73

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 4
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 4
  %36 = load float, float* %35, align 4
  %37 = fcmp uno float %34, 0.000000e+00
  %38 = fcmp uno float %36, 0.000000e+00
  %39 = and i1 %37, %38
  %40 = fcmp oeq float %34, %36
  %41 = or i1 %40, %39
  br i1 %41, label %42, label %73

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 5
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 5
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %44, %46
  br i1 %47, label %48, label %73

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 6, i32 0
  %50 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %49, align 8
  %51 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 6, i32 0
  %52 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %51, align 8
  %53 = icmp ne %"class.cc::PaintFilter"* %50, null
  %54 = icmp ne %"class.cc::PaintFilter"* %52, null
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %48
  %57 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %50, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %52) #14
  br i1 %57, label %60, label %73

58:                                               ; preds = %48
  %59 = or i1 %53, %54
  br i1 %59, label %73, label %60

60:                                               ; preds = %58, %56
  %61 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 7, i32 0
  %62 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %61, align 8
  %63 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 7, i32 0
  %64 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %63, align 8
  %65 = icmp ne %"class.cc::PaintFilter"* %62, null
  %66 = icmp ne %"class.cc::PaintFilter"* %64, null
  %67 = and i1 %65, %66
  br i1 %67, label %71, label %68

68:                                               ; preds = %60
  %69 = or i1 %65, %66
  %70 = xor i1 %69, true
  br label %73

71:                                               ; preds = %60
  %72 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %62, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %64) #14
  br label %73

73:                                               ; preds = %58, %71, %68, %56, %42, %32, %22, %12, %2
  %74 = phi i1 [ false, %58 ], [ false, %42 ], [ false, %32 ], [ false, %22 ], [ false, %12 ], [ false, %2 ], [ false, %56 ], [ %72, %71 ], [ %70, %68 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc28MatrixConvolutionPaintFiltereqERKS0_(%"class.cc::MatrixConvolutionPaintFilter"* nocapture readonly, %"class.cc::MatrixConvolutionPaintFilter"* nocapture readonly dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %94

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %94

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %16 = load float*, float** %15, align 8
  %17 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1
  %18 = load float*, float** %17, align 8
  %19 = icmp eq float* %16, %18
  br i1 %19, label %37, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %22 = load float*, float** %21, align 8
  br label %23

23:                                               ; preds = %20, %33
  %24 = phi float* [ %35, %33 ], [ %22, %20 ]
  %25 = phi float* [ %34, %33 ], [ %16, %20 ]
  %26 = load float, float* %25, align 4
  %27 = load float, float* %24, align 4
  %28 = fcmp uno float %26, 0.000000e+00
  %29 = fcmp uno float %27, 0.000000e+00
  %30 = and i1 %28, %29
  %31 = fcmp oeq float %26, %27
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %94

33:                                               ; preds = %23
  %34 = getelementptr inbounds float, float* %25, i64 1
  %35 = getelementptr inbounds float, float* %24, i64 1
  %36 = icmp eq float* %34, %18
  br i1 %36, label %37, label %23

37:                                               ; preds = %33, %14
  %38 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 3
  %39 = load float, float* %38, align 8
  %40 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 3
  %41 = load float, float* %40, align 8
  %42 = fcmp uno float %39, 0.000000e+00
  %43 = fcmp uno float %41, 0.000000e+00
  %44 = and i1 %42, %43
  %45 = fcmp oeq float %39, %41
  %46 = or i1 %45, %44
  br i1 %46, label %47, label %94

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 4
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 4
  %51 = load float, float* %50, align 4
  %52 = fcmp uno float %49, 0.000000e+00
  %53 = fcmp uno float %51, 0.000000e+00
  %54 = and i1 %52, %53
  %55 = fcmp oeq float %49, %51
  %56 = or i1 %55, %54
  br i1 %56, label %57, label %94

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 5, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 5, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %94

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 5, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 5, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %69, label %94

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 6
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 6
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %94

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 7
  %77 = load i8, i8* %76, align 4, !range !2
  %78 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 7
  %79 = load i8, i8* %78, align 4, !range !2
  %80 = icmp eq i8 %77, %79
  br i1 %80, label %81, label %94

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 8, i32 0
  %83 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %82, align 8
  %84 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 8, i32 0
  %85 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %84, align 8
  %86 = icmp ne %"class.cc::PaintFilter"* %83, null
  %87 = icmp ne %"class.cc::PaintFilter"* %85, null
  %88 = and i1 %86, %87
  br i1 %88, label %92, label %89

89:                                               ; preds = %81
  %90 = or i1 %86, %87
  %91 = xor i1 %90, true
  br label %94

92:                                               ; preds = %81
  %93 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %83, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %85) #14
  br label %94

94:                                               ; preds = %23, %57, %2, %92, %89, %75, %69, %63, %47, %37, %8
  %95 = phi i1 [ false, %75 ], [ false, %69 ], [ false, %63 ], [ false, %47 ], [ false, %37 ], [ false, %8 ], [ %93, %92 ], [ %91, %89 ], [ false, %2 ], [ false, %57 ], [ false, %23 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc32DisplacementMapEffectPaintFiltereqERKS0_(%"class.cc::DisplacementMapEffectPaintFilter"* nocapture readonly, %"class.cc::DisplacementMapEffectPaintFilter"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %49

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %49

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 3
  %16 = load float, float* %15, align 8
  %17 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 3
  %18 = load float, float* %17, align 8
  %19 = fcmp uno float %16, 0.000000e+00
  %20 = fcmp uno float %18, 0.000000e+00
  %21 = and i1 %19, %20
  %22 = fcmp oeq float %16, %18
  %23 = or i1 %22, %21
  br i1 %23, label %24, label %49

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %25, align 8
  %27 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 4, i32 0
  %28 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %27, align 8
  %29 = icmp ne %"class.cc::PaintFilter"* %26, null
  %30 = icmp ne %"class.cc::PaintFilter"* %28, null
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %26, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %28) #14
  br i1 %33, label %36, label %49

34:                                               ; preds = %24
  %35 = or i1 %29, %30
  br i1 %35, label %49, label %36

36:                                               ; preds = %34, %32
  %37 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %37, align 8
  %39 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 5, i32 0
  %40 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %39, align 8
  %41 = icmp ne %"class.cc::PaintFilter"* %38, null
  %42 = icmp ne %"class.cc::PaintFilter"* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = or i1 %41, %42
  %46 = xor i1 %45, true
  br label %49

47:                                               ; preds = %36
  %48 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %38, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %40) #14
  br label %49

49:                                               ; preds = %34, %47, %44, %32, %14, %8, %2
  %50 = phi i1 [ false, %34 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ false, %32 ], [ %48, %47 ], [ %46, %44 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc16ImagePaintFiltereqERKS0_(%"class.cc::ImagePaintFilter"*, %"class.cc::ImagePaintFilter"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 1, i32 15, i32 0
  %4 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %3, align 8
  %5 = icmp eq %"class.cc::PaintWorkletInput"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 1, i32 14, i32 0
  %8 = load %class.SkImage*, %class.SkImage** %7, align 8
  %9 = icmp eq %class.SkImage* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 1, i32 5, i32 0
  %12 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %11, align 8
  %13 = icmp ne %"class.cc::TextureBacking"* %12, null
  br label %14

14:                                               ; preds = %2, %6, %10
  %15 = phi i1 [ true, %6 ], [ true, %2 ], [ %13, %10 ]
  %16 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 1, i32 15, i32 0
  %17 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %16, align 8
  %18 = icmp eq %"class.cc::PaintWorkletInput"* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 1, i32 14, i32 0
  %21 = load %class.SkImage*, %class.SkImage** %20, align 8
  %22 = icmp eq %class.SkImage* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %14, %19
  br i1 %15, label %29, label %43

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 1, i32 5, i32 0
  %26 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %25, align 8
  %27 = icmp ne %"class.cc::TextureBacking"* %26, null
  %28 = xor i1 %15, %27
  br i1 %28, label %43, label %29

29:                                               ; preds = %23, %24
  %30 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 2
  %31 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 2
  %32 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %30, %struct.SkRect* dereferenceable(16) %31) #14
  br i1 %32, label %33, label %43

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 3
  %35 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 3
  %36 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %34, %struct.SkRect* dereferenceable(16) %35) #14
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %39, %41
  br label %43

43:                                               ; preds = %23, %24, %37, %33, %29
  %44 = phi i1 [ false, %33 ], [ false, %29 ], [ false, %24 ], [ %42, %37 ], [ false, %23 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17RecordPaintFiltereqERKS0_(%"class.cc::RecordPaintFilter"*, %"class.cc::RecordPaintFilter"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %3, align 8
  %5 = icmp ne %"class.cc::PaintOpBuffer"* %4, null
  %6 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 1, i32 0
  %7 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %6, align 8
  %8 = icmp ne %"class.cc::PaintOpBuffer"* %7, null
  %9 = xor i1 %5, %8
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 8
  %13 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 4
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %16, label %32

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 3, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 3, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %18, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 3, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 3, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %24, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 2
  %31 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %29, %struct.SkRect* dereferenceable(16) %30) #14
  br label %32

32:                                               ; preds = %16, %2, %28, %22, %10
  %33 = phi i1 [ false, %22 ], [ false, %10 ], [ false, %2 ], [ %31, %28 ], [ false, %16 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc16MergePaintFiltereqERKS0_(%"class.cc::MergePaintFilter"* nocapture readonly, %"class.cc::MergePaintFilter"* nocapture readonly dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %5 = bitcast %class.sk_sp.3** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.35"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %1, i64 0, i32 1, i32 0, i32 2
  %11 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %12 = bitcast %class.sk_sp.3** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.35"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp eq i64 %9, %16
  %18 = inttoptr i64 %15 to %class.sk_sp.3*
  br i1 %17, label %19, label %52

19:                                               ; preds = %2
  %20 = icmp eq i64 %6, %8
  br i1 %20, label %52, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %23

23:                                               ; preds = %50, %21
  %24 = phi i64 [ %8, %21 ], [ %44, %50 ]
  %25 = phi i64 [ %6, %21 ], [ %45, %50 ]
  %26 = phi %class.sk_sp.3* [ %18, %21 ], [ %51, %50 ]
  %27 = phi i64 [ 0, %21 ], [ %46, %50 ]
  %28 = inttoptr i64 %24 to %class.sk_sp.3*
  %29 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %28, i64 %27, i32 0
  %30 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %29, align 8
  %31 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %26, i64 %27, i32 0
  %32 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %31, align 8
  %33 = icmp ne %"class.cc::PaintFilter"* %30, null
  %34 = icmp ne %"class.cc::PaintFilter"* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %23
  %37 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %30, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %32) #14
  br i1 %37, label %38, label %52

38:                                               ; preds = %36
  %39 = load i64, i64* %5, align 8
  %40 = load i64, i64* %7, align 8
  br label %43

41:                                               ; preds = %23
  %42 = or i1 %33, %34
  br i1 %42, label %52, label %43

43:                                               ; preds = %38, %41
  %44 = phi i64 [ %40, %38 ], [ %24, %41 ]
  %45 = phi i64 [ %39, %38 ], [ %25, %41 ]
  %46 = add nuw i64 %27, 1
  %47 = sub i64 %45, %44
  %48 = ashr exact i64 %47, 3
  %49 = icmp ult i64 %46, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %43
  %51 = load %class.sk_sp.3*, %class.sk_sp.3** %22, align 8
  br label %23

52:                                               ; preds = %43, %36, %41, %19, %2
  %53 = phi i1 [ false, %2 ], [ true, %19 ], [ true, %43 ], [ false, %36 ], [ false, %41 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc21MorphologyPaintFiltereqERKS0_(%"class.cc::MorphologyPaintFilter"* nocapture readonly, %"class.cc::MorphologyPaintFilter"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %33

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 2
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %10, %12
  br i1 %13, label %14, label %33

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 3
  %16 = load float, float* %15, align 8
  %17 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 3
  %18 = load float, float* %17, align 8
  %19 = fcmp oeq float %16, %18
  br i1 %19, label %20, label %33

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 4, i32 0
  %22 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %21, align 8
  %23 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 4, i32 0
  %24 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %23, align 8
  %25 = icmp ne %"class.cc::PaintFilter"* %22, null
  %26 = icmp ne %"class.cc::PaintFilter"* %24, null
  %27 = and i1 %25, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = or i1 %25, %26
  %30 = xor i1 %29, true
  br label %33

31:                                               ; preds = %20
  %32 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %22, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %24) #14
  br label %33

33:                                               ; preds = %31, %28, %14, %8, %2
  %34 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %32, %31 ], [ %30, %28 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17OffsetPaintFiltereqERKS0_(%"class.cc::OffsetPaintFilter"* nocapture readonly, %"class.cc::OffsetPaintFilter"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 8
  %7 = fcmp uno float %4, 0.000000e+00
  %8 = fcmp uno float %6, 0.000000e+00
  %9 = and i1 %7, %8
  %10 = fcmp oeq float %4, %6
  %11 = or i1 %10, %9
  br i1 %11, label %12, label %35

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = fcmp uno float %14, 0.000000e+00
  %18 = fcmp uno float %16, 0.000000e+00
  %19 = and i1 %17, %18
  %20 = fcmp oeq float %14, %16
  %21 = or i1 %20, %19
  br i1 %21, label %22, label %35

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 3, i32 0
  %24 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %23, align 8
  %25 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 3, i32 0
  %26 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %25, align 8
  %27 = icmp ne %"class.cc::PaintFilter"* %24, null
  %28 = icmp ne %"class.cc::PaintFilter"* %26, null
  %29 = and i1 %27, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %22
  %31 = or i1 %27, %28
  %32 = xor i1 %31, true
  br label %35

33:                                               ; preds = %22
  %34 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %24, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %26) #14
  br label %35

35:                                               ; preds = %33, %30, %12, %2
  %36 = phi i1 [ false, %12 ], [ false, %2 ], [ %34, %33 ], [ %32, %30 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc15TilePaintFiltereqERKS0_(%"class.cc::TilePaintFilter"*, %"class.cc::TilePaintFilter"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %1, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %3, %struct.SkRect* dereferenceable(16) %4) #14
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %1, i64 0, i32 2
  %9 = tail call zeroext i1 @_ZN2cc7PaintOp15AreSkRectsEqualERK6SkRectS3_(%struct.SkRect* dereferenceable(16) %7, %struct.SkRect* dereferenceable(16) %8) #14
  br i1 %9, label %10, label %23

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 3, i32 0
  %12 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %1, i64 0, i32 3, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8
  %15 = icmp ne %"class.cc::PaintFilter"* %12, null
  %16 = icmp ne %"class.cc::PaintFilter"* %14, null
  %17 = and i1 %15, %16
  br i1 %17, label %21, label %18

18:                                               ; preds = %10
  %19 = or i1 %15, %16
  %20 = xor i1 %19, true
  br label %23

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %12, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %14) #14
  br label %23

23:                                               ; preds = %21, %18, %6, %2
  %24 = phi i1 [ false, %6 ], [ false, %2 ], [ %22, %21 ], [ %20, %18 ]
  ret i1 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc21TurbulencePaintFiltereqERKS0_(%"class.cc::TurbulencePaintFilter"* nocapture readonly, %"class.cc::TurbulencePaintFilter"* nocapture readonly dereferenceable(88)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %56

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 2
  %12 = load float, float* %11, align 4
  %13 = fcmp uno float %10, 0.000000e+00
  %14 = fcmp uno float %12, 0.000000e+00
  %15 = and i1 %13, %14
  %16 = fcmp oeq float %10, %12
  %17 = or i1 %16, %15
  br i1 %17, label %18, label %56

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 3
  %20 = load float, float* %19, align 8
  %21 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 3
  %22 = load float, float* %21, align 8
  %23 = fcmp uno float %20, 0.000000e+00
  %24 = fcmp uno float %22, 0.000000e+00
  %25 = and i1 %23, %24
  %26 = fcmp oeq float %20, %22
  %27 = or i1 %26, %25
  br i1 %27, label %28, label %56

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 4
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %56

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 5
  %36 = load float, float* %35, align 8
  %37 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 5
  %38 = load float, float* %37, align 8
  %39 = fcmp uno float %36, 0.000000e+00
  %40 = fcmp uno float %38, 0.000000e+00
  %41 = and i1 %39, %40
  %42 = fcmp oeq float %36, %38
  %43 = or i1 %42, %41
  br i1 %43, label %44, label %56

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 6, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 6, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 6, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 6, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %52, %54
  br label %56

56:                                               ; preds = %50, %44, %34, %28, %18, %8, %2
  %57 = phi i1 [ false, %34 ], [ false, %28 ], [ false, %18 ], [ false, %8 ], [ false, %2 ], [ false, %44 ], [ %55, %50 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17ShaderPaintFiltereqERKS0_(%"class.cc::ShaderPaintFilter"* nocapture readonly, %"class.cc::ShaderPaintFilter"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8
  %5 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %28

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 5
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 5
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 1, i32 0
  %24 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %23, align 8
  %25 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 1, i32 0
  %26 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %25, align 8
  %27 = tail call zeroext i1 @_ZNK2cc11PaintShadereqERKS0_(%"class.cc::PaintShader"* %24, %"class.cc::PaintShader"* dereferenceable(336) %26) #14
  br label %28

28:                                               ; preds = %22, %14, %8, %2
  %29 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %27, %22 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17MatrixPaintFiltereqERKS0_(%"class.cc::MatrixPaintFilter"*, %"class.cc::MatrixPaintFilter"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %1, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN2cc7PaintOp18AreSkMatricesEqualERK8SkMatrixS3_(%class.SkMatrix* dereferenceable(40) %3, %class.SkMatrix* dereferenceable(40) %4) #14
  br i1 %5, label %6, label %25

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %25

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 3, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8
  %15 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %1, i64 0, i32 3, i32 0
  %16 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %15, align 8
  %17 = icmp ne %"class.cc::PaintFilter"* %14, null
  %18 = icmp ne %"class.cc::PaintFilter"* %16, null
  %19 = and i1 %17, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = or i1 %17, %18
  %22 = xor i1 %21, true
  br label %25

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %14, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %16) #14
  br label %25

25:                                               ; preds = %23, %20, %6, %2
  %26 = phi i1 [ false, %6 ], [ false, %2 ], [ %24, %23 ], [ %22, %20 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc26LightingDistantPaintFiltereqERKS0_(%"class.cc::LightingDistantPaintFilter"*, %"class.cc::LightingDistantPaintFilter"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %61

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 2
  %11 = tail call zeroext i1 @_ZN2cc7PaintOp17AreSkPoint3sEqualERK8SkPoint3S3_(%struct.SkPoint3* dereferenceable(12) %9, %struct.SkPoint3* dereferenceable(12) %10) #14
  br i1 %11, label %12, label %61

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %61

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 4
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 4
  %22 = load float, float* %21, align 4
  %23 = fcmp uno float %20, 0.000000e+00
  %24 = fcmp uno float %22, 0.000000e+00
  %25 = and i1 %23, %24
  %26 = fcmp oeq float %20, %22
  %27 = or i1 %26, %25
  br i1 %27, label %28, label %61

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 5
  %30 = load float, float* %29, align 8
  %31 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 5
  %32 = load float, float* %31, align 8
  %33 = fcmp uno float %30, 0.000000e+00
  %34 = fcmp uno float %32, 0.000000e+00
  %35 = and i1 %33, %34
  %36 = fcmp oeq float %30, %32
  %37 = or i1 %36, %35
  br i1 %37, label %38, label %61

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 6
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 6
  %42 = load float, float* %41, align 4
  %43 = fcmp uno float %40, 0.000000e+00
  %44 = fcmp uno float %42, 0.000000e+00
  %45 = and i1 %43, %44
  %46 = fcmp oeq float %40, %42
  %47 = or i1 %46, %45
  br i1 %47, label %48, label %61

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 7, i32 0
  %50 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %49, align 8
  %51 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 7, i32 0
  %52 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %51, align 8
  %53 = icmp ne %"class.cc::PaintFilter"* %50, null
  %54 = icmp ne %"class.cc::PaintFilter"* %52, null
  %55 = and i1 %53, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = or i1 %53, %54
  %58 = xor i1 %57, true
  br label %61

59:                                               ; preds = %48
  %60 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %50, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %52) #14
  br label %61

61:                                               ; preds = %59, %56, %38, %28, %18, %12, %8, %2
  %62 = phi i1 [ false, %38 ], [ false, %28 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ %60, %59 ], [ %58, %56 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc24LightingPointPaintFiltereqERKS0_(%"class.cc::LightingPointPaintFilter"*, %"class.cc::LightingPointPaintFilter"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %61

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 2
  %11 = tail call zeroext i1 @_ZN2cc7PaintOp17AreSkPoint3sEqualERK8SkPoint3S3_(%struct.SkPoint3* dereferenceable(12) %9, %struct.SkPoint3* dereferenceable(12) %10) #14
  br i1 %11, label %12, label %61

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %61

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 4
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 4
  %22 = load float, float* %21, align 4
  %23 = fcmp uno float %20, 0.000000e+00
  %24 = fcmp uno float %22, 0.000000e+00
  %25 = and i1 %23, %24
  %26 = fcmp oeq float %20, %22
  %27 = or i1 %26, %25
  br i1 %27, label %28, label %61

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 5
  %30 = load float, float* %29, align 8
  %31 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 5
  %32 = load float, float* %31, align 8
  %33 = fcmp uno float %30, 0.000000e+00
  %34 = fcmp uno float %32, 0.000000e+00
  %35 = and i1 %33, %34
  %36 = fcmp oeq float %30, %32
  %37 = or i1 %36, %35
  br i1 %37, label %38, label %61

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 6
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 6
  %42 = load float, float* %41, align 4
  %43 = fcmp uno float %40, 0.000000e+00
  %44 = fcmp uno float %42, 0.000000e+00
  %45 = and i1 %43, %44
  %46 = fcmp oeq float %40, %42
  %47 = or i1 %46, %45
  br i1 %47, label %48, label %61

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 7, i32 0
  %50 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %49, align 8
  %51 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 7, i32 0
  %52 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %51, align 8
  %53 = icmp ne %"class.cc::PaintFilter"* %50, null
  %54 = icmp ne %"class.cc::PaintFilter"* %52, null
  %55 = and i1 %53, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = or i1 %53, %54
  %58 = xor i1 %57, true
  br label %61

59:                                               ; preds = %48
  %60 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %50, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %52) #14
  br label %61

61:                                               ; preds = %59, %56, %38, %28, %18, %12, %8, %2
  %62 = phi i1 [ false, %38 ], [ false, %28 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ %60, %59 ], [ %58, %56 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc23LightingSpotPaintFiltereqERKS0_(%"class.cc::LightingSpotPaintFilter"*, %"class.cc::LightingSpotPaintFilter"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %85

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 2
  %11 = tail call zeroext i1 @_ZN2cc7PaintOp17AreSkPoint3sEqualERK8SkPoint3S3_(%struct.SkPoint3* dereferenceable(12) %9, %struct.SkPoint3* dereferenceable(12) %10) #14
  br i1 %11, label %12, label %85

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 3
  %15 = tail call zeroext i1 @_ZN2cc7PaintOp17AreSkPoint3sEqualERK8SkPoint3S3_(%struct.SkPoint3* dereferenceable(12) %13, %struct.SkPoint3* dereferenceable(12) %14) #14
  br i1 %15, label %16, label %85

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 4
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 4
  %20 = load float, float* %19, align 4
  %21 = fcmp uno float %18, 0.000000e+00
  %22 = fcmp uno float %20, 0.000000e+00
  %23 = and i1 %21, %22
  %24 = fcmp oeq float %18, %20
  %25 = or i1 %24, %23
  br i1 %25, label %26, label %85

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 5
  %28 = load float, float* %27, align 8
  %29 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 5
  %30 = load float, float* %29, align 8
  %31 = fcmp uno float %28, 0.000000e+00
  %32 = fcmp uno float %30, 0.000000e+00
  %33 = and i1 %31, %32
  %34 = fcmp oeq float %28, %30
  %35 = or i1 %34, %33
  br i1 %35, label %36, label %85

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 6
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 6
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %85

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 7
  %44 = load float, float* %43, align 8
  %45 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 7
  %46 = load float, float* %45, align 8
  %47 = fcmp uno float %44, 0.000000e+00
  %48 = fcmp uno float %46, 0.000000e+00
  %49 = and i1 %47, %48
  %50 = fcmp oeq float %44, %46
  %51 = or i1 %50, %49
  br i1 %51, label %52, label %85

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 8
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 8
  %56 = load float, float* %55, align 4
  %57 = fcmp uno float %54, 0.000000e+00
  %58 = fcmp uno float %56, 0.000000e+00
  %59 = and i1 %57, %58
  %60 = fcmp oeq float %54, %56
  %61 = or i1 %60, %59
  br i1 %61, label %62, label %85

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 9
  %64 = load float, float* %63, align 8
  %65 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 9
  %66 = load float, float* %65, align 8
  %67 = fcmp uno float %64, 0.000000e+00
  %68 = fcmp uno float %66, 0.000000e+00
  %69 = and i1 %67, %68
  %70 = fcmp oeq float %64, %66
  %71 = or i1 %70, %69
  br i1 %71, label %72, label %85

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 10, i32 0
  %74 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %73, align 8
  %75 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 10, i32 0
  %76 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %75, align 8
  %77 = icmp ne %"class.cc::PaintFilter"* %74, null
  %78 = icmp ne %"class.cc::PaintFilter"* %76, null
  %79 = and i1 %77, %78
  br i1 %79, label %83, label %80

80:                                               ; preds = %72
  %81 = or i1 %77, %78
  %82 = xor i1 %81, true
  br label %85

83:                                               ; preds = %72
  %84 = tail call zeroext i1 @_ZNK2cc11PaintFiltereqERKS0_(%"class.cc::PaintFilter"* nonnull %74, %"class.cc::PaintFilter"* nonnull dereferenceable(56) %76) #14
  br label %85

85:                                               ; preds = %83, %80, %62, %52, %42, %36, %26, %16, %12, %8, %2
  %86 = phi i1 [ false, %62 ], [ false, %52 ], [ false, %42 ], [ false, %36 ], [ false, %26 ], [ false, %16 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ %84, %83 ], [ %82, %80 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22ColorFilterPaintFilterC2E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect(%"class.cc::ColorFilterPaintFilter"* nocapture, %class.sk_sp.4* nocapture, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp.4, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %"struct.SkImageFilters::CropRect", align 4
  %9 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %2, i64 0, i32 0
  %10 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8
  %11 = icmp eq %"class.cc::PaintFilter"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 4
  %14 = load i8, i8* %13, align 8, !range !2
  br label %15

15:                                               ; preds = %4, %12
  %16 = phi i8 [ %14, %12 ], [ 0, %4 ]
  %17 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %19, align 8
  %20 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %16, i8* %22, align 8
  %23 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %23, align 4
  %24 = icmp eq %struct.SkRect* %3, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %15
  store i8 0, i8* %21, align 4
  %26 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %union.anon* %26 to i8*
  %28 = bitcast %struct.SkRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %28, i64 16, i1 false) #14
  store i8 1, i8* %21, align 4
  br label %29

29:                                               ; preds = %15, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc22ColorFilterPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %30 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %1, i64 0, i32 0
  %32 = bitcast %class.sk_sp.4* %1 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %31, align 8
  %34 = bitcast %class.sk_sp.4* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 2
  %36 = bitcast %class.sk_sp.3* %2 to i64*
  %37 = load i64, i64* %36, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %9, align 8
  %38 = bitcast %class.sk_sp.3* %35 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %6, i64 0, i32 0
  %41 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %30, i64 0, i32 0
  %42 = load %class.SkColorFilter*, %class.SkColorFilter** %41, align 8
  %43 = icmp eq %class.SkColorFilter* %42, null
  %44 = inttoptr i64 %37 to %"class.cc::PaintFilter"*
  br i1 %43, label %50, label %45

45:                                               ; preds = %29
  %46 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 1 monotonic
  %48 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %35, i64 0, i32 0
  %49 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %48, align 8
  br label %50

50:                                               ; preds = %29, %45
  %51 = phi %"class.cc::PaintFilter"* [ %44, %29 ], [ %49, %45 ]
  store %class.SkColorFilter* %42, %class.SkColorFilter** %40, align 8
  %52 = icmp eq %"class.cc::PaintFilter"* %51, null
  %53 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  br i1 %52, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %51, i64 0, i32 1, i32 0
  %56 = load %class.SkImageFilter*, %class.SkImageFilter** %55, align 8, !noalias !7
  %57 = icmp eq %class.SkImageFilter* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic, !noalias !7
  br label %61

61:                                               ; preds = %50, %54, %58
  %62 = phi %class.SkImageFilter* [ null, %54 ], [ %56, %58 ], [ null, %50 ]
  store %class.SkImageFilter* %62, %class.SkImageFilter** %53, align 8, !alias.scope !7
  %63 = bitcast %"struct.SkImageFilters::CropRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #14
  %64 = select i1 %24, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %3
  %65 = bitcast %struct.SkRect* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* align 4 %65, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %5, %class.sk_sp.4* nonnull %6, %class.sk_sp* nonnull %7, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %8) #14
  %66 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %68 = bitcast %class.sk_sp* %5 to i64*
  %69 = load i64, i64* %68, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %67, align 8
  %70 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %66, i64 0, i32 0
  %71 = load %class.SkImageFilter*, %class.SkImageFilter** %70, align 8
  %72 = bitcast %class.sk_sp* %66 to i64*
  store i64 %69, i64* %72, align 8
  %73 = icmp eq %class.SkImageFilter* %71, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %61
  %75 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %71, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = bitcast %class.SkImageFilter* %71 to %class.SkRefCntBase*
  %80 = bitcast %class.SkImageFilter* %71 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8
  call void %83(%class.SkRefCntBase* nonnull %79) #14
  br label %84

84:                                               ; preds = %61, %74, %78
  %85 = load %class.SkImageFilter*, %class.SkImageFilter** %67, align 8
  %86 = icmp eq %class.SkImageFilter* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkImageFilter* %85 to %class.SkRefCntBase*
  %93 = bitcast %class.SkImageFilter* %85 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #14
  br label %97

97:                                               ; preds = %84, %87, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  %98 = load %class.SkImageFilter*, %class.SkImageFilter** %53, align 8
  %99 = icmp eq %class.SkImageFilter* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %98, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = bitcast %class.SkImageFilter* %98 to %class.SkRefCntBase*
  %106 = bitcast %class.SkImageFilter* %98 to void (%class.SkRefCntBase*)***
  %107 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, i64 2
  %109 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, align 8
  call void %109(%class.SkRefCntBase* nonnull %105) #14
  br label %110

110:                                              ; preds = %97, %100, %104
  %111 = load %class.SkColorFilter*, %class.SkColorFilter** %40, align 8
  %112 = icmp eq %class.SkColorFilter* %111, null
  br i1 %112, label %123, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %111, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = bitcast %class.SkColorFilter* %111 to %class.SkRefCntBase*
  %119 = bitcast %class.SkColorFilter* %111 to void (%class.SkRefCntBase*)***
  %120 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %119, align 8
  %121 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, i64 2
  %122 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, align 8
  call void %122(%class.SkRefCntBase* nonnull %118) #14
  br label %123

123:                                              ; preds = %110, %113, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  ret void
}

declare void @_ZN14SkImageFilters11ColorFilterE5sk_spI13SkColorFilterES0_I13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %class.sk_sp.4*, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22ColorFilterPaintFilterD2Ev(%"class.cc::ColorFilterPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc22ColorFilterPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 1, i32 0
  %18 = load %class.SkColorFilter*, %class.SkColorFilter** %17, align 8
  %19 = icmp eq %class.SkColorFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkColorFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22ColorFilterPaintFilterD0Ev(%"class.cc::ColorFilterPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc22ColorFilterPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 1, i32 0
  %18 = load %class.SkColorFilter*, %class.SkColorFilter** %17, align 8
  %19 = icmp eq %class.SkColorFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkColorFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %24, %20, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  %45 = bitcast %"class.cc::ColorFilterPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc22ColorFilterPaintFilter14SerializedSizeEv(%"class.cc::ColorFilterPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 1, i32 0
  %5 = bitcast %class.SkColorFilter** %4 to %class.SkFlattenable**
  %6 = load %class.SkFlattenable*, %class.SkFlattenable** %5, align 8
  %7 = tail call i64 @_ZN2cc13PaintOpWriter18GetFlattenableSizeEPK13SkFlattenable(%class.SkFlattenable* %6) #14
  %8 = icmp eq i8 %3, 0
  %9 = select i1 %8, i64 8, i64 24
  %10 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %9, i64 %7) #14
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %0, i64 0, i32 2, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8
  %15 = icmp eq %"class.cc::PaintFilter"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.cc::PaintFilter"* %14 to i64 (%"class.cc::PaintFilter"*)***
  %18 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %18, i64 3
  %20 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %19, align 8
  %21 = tail call i64 %20(%"class.cc::PaintFilter"* nonnull %14) #14
  %22 = add i64 %21, 4
  br label %23

23:                                               ; preds = %1, %16
  %24 = phi i64 [ %22, %16 ], [ 4, %1 ]
  br i1 %11, label %29, label %25

25:                                               ; preds = %23
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %12, i64 %24) #14
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  br i1 %27, label %29, label %30, !prof !6

29:                                               ; preds = %23, %25
  br label %30

30:                                               ; preds = %25, %29
  %31 = phi i64 [ 0, %29 ], [ %28, %25 ]
  ret i64 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i64 @_ZN2cc13PaintOpWriter18GetFlattenableSizeEPK13SkFlattenable(%class.SkFlattenable*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc22ColorFilterPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::ColorFilterPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.4, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = alloca %class.sk_sp.3, align 8
  %7 = bitcast %class.sk_sp.3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %1, i64 0, i32 2, i32 0
  %9 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %8, align 8, !noalias !10
  %10 = icmp eq %"class.cc::PaintFilter"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %12, align 8, !alias.scope !10
  br label %26

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %9, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2, !noalias !13
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic, !noalias !16
  %20 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* %9, %"class.cc::PaintFilter"** %20, align 8, !alias.scope !19
  br label %26

21:                                               ; preds = %13
  %22 = bitcast %"class.cc::PaintFilter"* %9 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %23 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %22, align 8, !noalias !13
  %24 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %23, i64 4
  %25 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %24, align 8, !noalias !13
  call void %25(%class.sk_sp.3* nonnull sret %6, %"class.cc::PaintFilter"* nonnull %9, %"class.cc::ImageProvider"* %2) #14
  br label %26

26:                                               ; preds = %11, %17, %21
  %27 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = select i1 %29, %struct.SkRect* null, %struct.SkRect* %30
  %32 = bitcast %class.sk_sp.4* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = call i8* @_Znwm(i64 72) #16, !noalias !20
  %35 = bitcast i8* %34 to %"class.cc::ColorFilterPaintFilter"*
  %36 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %4, i64 0, i32 0
  %37 = getelementptr inbounds %"class.cc::ColorFilterPaintFilter", %"class.cc::ColorFilterPaintFilter"* %1, i64 0, i32 1, i32 0
  %38 = load %class.SkColorFilter*, %class.SkColorFilter** %37, align 8, !noalias !20
  %39 = icmp eq %class.SkColorFilter* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %26
  %41 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic, !noalias !20
  br label %43

43:                                               ; preds = %40, %26
  store %class.SkColorFilter* %38, %class.SkColorFilter** %36, align 8, !noalias !20
  %44 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  %45 = bitcast %class.sk_sp.3* %6 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !20
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %44, align 8, !noalias !20
  %47 = bitcast %class.sk_sp.3* %5 to i64*
  store i64 %46, i64* %47, align 8, !noalias !20
  call void @_ZN2cc22ColorFilterPaintFilterC2E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect(%"class.cc::ColorFilterPaintFilter"* nonnull %35, %class.sk_sp.4* nonnull %4, %class.sk_sp.3* nonnull %5, %struct.SkRect* %31) #14, !noalias !20
  %48 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  %49 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %48, align 8, !noalias !20
  %50 = icmp eq %"class.cc::PaintFilter"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %49, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel, !noalias !20
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %"class.cc::PaintFilter"* %49 to %class.SkRefCntBase*
  %57 = bitcast %"class.cc::PaintFilter"* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8, !noalias !20
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8, !noalias !20
  call void %60(%class.SkRefCntBase* nonnull %56) #14, !noalias !20
  br label %61

61:                                               ; preds = %55, %51, %43
  %62 = load %class.SkColorFilter*, %class.SkColorFilter** %36, align 8, !noalias !20
  %63 = icmp eq %class.SkColorFilter* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel, !noalias !20
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %class.SkColorFilter* %62 to %class.SkRefCntBase*
  %70 = bitcast %class.SkColorFilter* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8, !noalias !20
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8, !noalias !20
  call void %73(%class.SkRefCntBase* nonnull %69) #14, !noalias !20
  br label %74

74:                                               ; preds = %68, %64, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  %75 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %34, i8** %75, align 8
  %76 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %44, align 8
  %77 = icmp eq %"class.cc::PaintFilter"* %76, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %76, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = bitcast %"class.cc::PaintFilter"* %76 to %class.SkRefCntBase*
  %84 = bitcast %"class.cc::PaintFilter"* %76 to void (%class.SkRefCntBase*)***
  %85 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, i64 2
  %87 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, align 8
  call void %87(%class.SkRefCntBase* nonnull %83) #14
  br label %88

88:                                               ; preds = %74, %78, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret void
}

declare zeroext i1 @_ZN2cc7PaintOp22AreSkFlattenablesEqualEP13SkFlattenableS2_(%class.SkFlattenable*, %class.SkFlattenable*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15BlurPaintFilterC2Eff10SkTileMode5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::BlurPaintFilter"* nocapture, float, float, i32, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %"struct.SkImageFilters::CropRect", align 4
  %10 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %11 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8
  %12 = icmp eq %"class.cc::PaintFilter"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  br label %16

16:                                               ; preds = %6, %13
  %17 = phi i8 [ %15, %13 ], [ 0, %6 ]
  %18 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %18, align 4
  %19 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %20, align 8
  %21 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 2, i32* %21, align 8
  %22 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %17, i8* %23, align 8
  %24 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %24, align 4
  %25 = icmp eq %struct.SkRect* %5, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %16
  store i8 0, i8* %22, align 4
  %27 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast %union.anon* %27 to i8*
  %29 = bitcast %struct.SkRect* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* nonnull align 4 %29, i64 16, i1 false) #14
  store i8 1, i8* %22, align 4
  br label %30

30:                                               ; preds = %16, %26
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc15BlurPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %31 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 1
  store float %1, float* %31, align 8
  %32 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 2
  store float %2, float* %32, align 4
  %33 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 3
  store i32 %3, i32* %33, align 8
  %34 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 4
  %35 = bitcast %class.sk_sp.3* %4 to i64*
  %36 = load i64, i64* %35, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %10, align 8
  %37 = bitcast %class.sk_sp.3* %34 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #14
  %39 = load i32, i32* %33, align 8
  %40 = icmp eq i64 %36, 0
  %41 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  br i1 %40, label %50, label %42

42:                                               ; preds = %30
  %43 = inttoptr i64 %36 to %"class.cc::PaintFilter"*
  %44 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %43, i64 0, i32 1, i32 0
  %45 = load %class.SkImageFilter*, %class.SkImageFilter** %44, align 8, !noalias !23
  %46 = icmp eq %class.SkImageFilter* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic, !noalias !23
  br label %50

50:                                               ; preds = %30, %42, %47
  %51 = phi %class.SkImageFilter* [ null, %42 ], [ %45, %47 ], [ null, %30 ]
  store %class.SkImageFilter* %51, %class.SkImageFilter** %41, align 8, !alias.scope !23
  %52 = bitcast %"struct.SkImageFilters::CropRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #14
  %53 = select i1 %25, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %5
  %54 = bitcast %struct.SkRect* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %54, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters4BlurEff10SkTileMode5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %7, float %1, float %2, i32 %39, %class.sk_sp* nonnull %8, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %9) #14
  %55 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %57 = bitcast %class.sk_sp* %7 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %56, align 8
  %59 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %55, i64 0, i32 0
  %60 = load %class.SkImageFilter*, %class.SkImageFilter** %59, align 8
  %61 = bitcast %class.sk_sp* %55 to i64*
  store i64 %58, i64* %61, align 8
  %62 = icmp eq %class.SkImageFilter* %60, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %50
  %64 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %class.SkImageFilter* %60 to %class.SkRefCntBase*
  %69 = bitcast %class.SkImageFilter* %60 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  call void %72(%class.SkRefCntBase* nonnull %68) #14
  br label %73

73:                                               ; preds = %50, %63, %67
  %74 = load %class.SkImageFilter*, %class.SkImageFilter** %56, align 8
  %75 = icmp eq %class.SkImageFilter* %74, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %74, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkImageFilter* %74 to %class.SkRefCntBase*
  %82 = bitcast %class.SkImageFilter* %74 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  call void %85(%class.SkRefCntBase* nonnull %81) #14
  br label %86

86:                                               ; preds = %73, %76, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #14
  %87 = load %class.SkImageFilter*, %class.SkImageFilter** %41, align 8
  %88 = icmp eq %class.SkImageFilter* %87, null
  br i1 %88, label %99, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = bitcast %class.SkImageFilter* %87 to %class.SkRefCntBase*
  %95 = bitcast %class.SkImageFilter* %87 to void (%class.SkRefCntBase*)***
  %96 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, i64 2
  %98 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, align 8
  call void %98(%class.SkRefCntBase* nonnull %94) #14
  br label %99

99:                                               ; preds = %86, %89, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #14
  ret void
}

declare void @_ZN14SkImageFilters4BlurEff10SkTileMode5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, float, float, i32, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15BlurPaintFilterD2Ev(%"class.cc::BlurPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc15BlurPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15BlurPaintFilterD0Ev(%"class.cc::BlurPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc15BlurPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::BlurPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc15BlurPaintFilter14SerializedSizeEv(%"class.cc::BlurPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 20, i64 36
  %6 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %0, i64 0, i32 4, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc15BlurPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::BlurPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 3
  %9 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 4, i32 0
  %11 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8, !noalias !26
  %12 = icmp eq %"class.cc::PaintFilter"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %14, align 8, !alias.scope !26
  br label %31

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !2, !noalias !29
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !32
  %22 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %11, %"class.cc::PaintFilter"** %22, align 8, !alias.scope !35
  %23 = ptrtoint %"class.cc::PaintFilter"* %11 to i64
  br label %31

24:                                               ; preds = %15
  %25 = bitcast %"class.cc::PaintFilter"* %11 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %26 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %25, align 8, !noalias !29
  %27 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %26, i64 4
  %28 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %27, align 8, !noalias !29
  call void %28(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %11, %"class.cc::ImageProvider"* %2) #14
  %29 = bitcast %class.sk_sp.3* %5 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !36
  br label %31

31:                                               ; preds = %13, %19, %24
  %32 = phi i64 [ 0, %13 ], [ %23, %19 ], [ %30, %24 ]
  %33 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = getelementptr inbounds %"class.cc::BlurPaintFilter", %"class.cc::BlurPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = select i1 %35, %struct.SkRect* null, %struct.SkRect* %36
  %38 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = call i8* @_Znwm(i64 80) #16, !noalias !36
  %40 = bitcast i8* %39 to %"class.cc::BlurPaintFilter"*
  %41 = load float, float* %6, align 4, !noalias !36
  %42 = load float, float* %7, align 4, !noalias !36
  %43 = load i32, i32* %8, align 4, !noalias !36
  %44 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %44, align 8, !noalias !36
  %45 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %32, i64* %45, align 8, !noalias !36
  call void @_ZN2cc15BlurPaintFilterC2Eff10SkTileMode5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::BlurPaintFilter"* nonnull %40, float %41, float %42, i32 %43, %class.sk_sp.3* nonnull %4, %struct.SkRect* %37) #14, !noalias !36
  %46 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %47 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %46, align 8, !noalias !36
  %48 = icmp eq %"class.cc::PaintFilter"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel, !noalias !36
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %"class.cc::PaintFilter"* %47 to %class.SkRefCntBase*
  %55 = bitcast %"class.cc::PaintFilter"* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8, !noalias !36
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8, !noalias !36
  call void %58(%class.SkRefCntBase* nonnull %54) #14, !noalias !36
  br label %59

59:                                               ; preds = %53, %49, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  %60 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %39, i8** %60, align 8
  %61 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %44, align 8
  %62 = icmp eq %"class.cc::PaintFilter"* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %61, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %"class.cc::PaintFilter"* %61 to %class.SkRefCntBase*
  %69 = bitcast %"class.cc::PaintFilter"* %61 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  call void %72(%class.SkRefCntBase* nonnull %68) #14
  br label %73

73:                                               ; preds = %59, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21DropShadowPaintFilterC2EffffjNS0_10ShadowModeE5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::DropShadowPaintFilter"* nocapture, float, float, float, float, i32, i32, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %"struct.SkImageFilters::CropRect", align 4
  %13 = alloca %class.sk_sp, align 8
  %14 = alloca %class.sk_sp, align 8
  %15 = alloca %"struct.SkImageFilters::CropRect", align 4
  %16 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  %17 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %16, align 8
  %18 = icmp eq %"class.cc::PaintFilter"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %17, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  br label %22

22:                                               ; preds = %9, %19
  %23 = phi i8 [ %21, %19 ], [ 0, %9 ]
  %24 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %26, align 8
  %27 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 3, i32* %27, align 8
  %28 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %23, i8* %29, align 8
  %30 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %30, align 4
  %31 = icmp eq %struct.SkRect* %8, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %22
  store i8 0, i8* %28, align 4
  %33 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %union.anon* %33 to i8*
  %35 = bitcast %struct.SkRect* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* nonnull align 4 %35, i64 16, i1 false) #14
  store i8 1, i8* %28, align 4
  br label %36

36:                                               ; preds = %22, %32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21DropShadowPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %37 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 1
  store float %1, float* %37, align 8
  %38 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 2
  store float %2, float* %38, align 4
  %39 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 3
  store float %3, float* %39, align 8
  %40 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 4
  store float %4, float* %40, align 4
  %41 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 5
  store i32 %5, i32* %41, align 8
  %42 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 6
  store i32 %6, i32* %42, align 4
  %43 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 7
  %44 = bitcast %class.sk_sp.3* %7 to i64*
  %45 = load i64, i64* %44, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %16, align 8
  %46 = bitcast %class.sk_sp.3* %43 to i64*
  store i64 %45, i64* %46, align 8
  %47 = icmp eq i32 %6, 1
  %48 = inttoptr i64 %45 to %"class.cc::PaintFilter"*
  br i1 %47, label %49, label %114

49:                                               ; preds = %36
  %50 = bitcast %class.sk_sp* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #14
  %51 = load float, float* %37, align 8
  %52 = load float, float* %38, align 4
  %53 = load float, float* %39, align 8
  %54 = load float, float* %40, align 4
  %55 = load i32, i32* %41, align 8
  %56 = icmp eq i64 %45, 0
  %57 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  br i1 %56, label %65, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %48, i64 0, i32 1, i32 0
  %60 = load %class.SkImageFilter*, %class.SkImageFilter** %59, align 8, !noalias !39
  %61 = icmp eq %class.SkImageFilter* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic, !noalias !39
  br label %65

65:                                               ; preds = %49, %58, %62
  %66 = phi %class.SkImageFilter* [ null, %58 ], [ %60, %62 ], [ null, %49 ]
  store %class.SkImageFilter* %66, %class.SkImageFilter** %57, align 8, !alias.scope !39
  %67 = bitcast %"struct.SkImageFilters::CropRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %68 = select i1 %31, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %8
  %69 = bitcast %struct.SkRect* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* align 4 %69, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters14DropShadowOnlyEffffj5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %10, float %51, float %52, float %53, float %54, i32 %55, %class.sk_sp* nonnull %11, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %12) #14
  %70 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %72 = bitcast %class.sk_sp* %10 to i64*
  %73 = load i64, i64* %72, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %71, align 8
  %74 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %70, i64 0, i32 0
  %75 = load %class.SkImageFilter*, %class.SkImageFilter** %74, align 8
  %76 = bitcast %class.sk_sp* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %class.SkImageFilter* %75, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %65
  %79 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = bitcast %class.SkImageFilter* %75 to %class.SkRefCntBase*
  %84 = bitcast %class.SkImageFilter* %75 to void (%class.SkRefCntBase*)***
  %85 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, i64 2
  %87 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, align 8
  call void %87(%class.SkRefCntBase* nonnull %83) #14
  br label %88

88:                                               ; preds = %65, %78, %82
  %89 = load %class.SkImageFilter*, %class.SkImageFilter** %71, align 8
  %90 = icmp eq %class.SkImageFilter* %89, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %89, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = bitcast %class.SkImageFilter* %89 to %class.SkRefCntBase*
  %97 = bitcast %class.SkImageFilter* %89 to void (%class.SkRefCntBase*)***
  %98 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, i64 2
  %100 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, align 8
  call void %100(%class.SkRefCntBase* nonnull %96) #14
  br label %101

101:                                              ; preds = %88, %91, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  %102 = load %class.SkImageFilter*, %class.SkImageFilter** %57, align 8
  %103 = icmp eq %class.SkImageFilter* %102, null
  br i1 %103, label %179, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %102, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %179

108:                                              ; preds = %104
  %109 = bitcast %class.SkImageFilter* %102 to %class.SkRefCntBase*
  %110 = bitcast %class.SkImageFilter* %102 to void (%class.SkRefCntBase*)***
  %111 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, i64 2
  %113 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, align 8
  call void %113(%class.SkRefCntBase* nonnull %109) #14
  br label %179

114:                                              ; preds = %36
  %115 = bitcast %class.sk_sp* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #14
  %116 = load float, float* %37, align 8
  %117 = load float, float* %38, align 4
  %118 = load float, float* %39, align 8
  %119 = load float, float* %40, align 4
  %120 = load i32, i32* %41, align 8
  %121 = icmp eq i64 %45, 0
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  br i1 %121, label %130, label %123

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %48, i64 0, i32 1, i32 0
  %125 = load %class.SkImageFilter*, %class.SkImageFilter** %124, align 8, !noalias !42
  %126 = icmp eq %class.SkImageFilter* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %125, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = atomicrmw add i32* %128, i32 1 monotonic, !noalias !42
  br label %130

130:                                              ; preds = %114, %123, %127
  %131 = phi %class.SkImageFilter* [ null, %123 ], [ %125, %127 ], [ null, %114 ]
  store %class.SkImageFilter* %131, %class.SkImageFilter** %122, align 8, !alias.scope !42
  %132 = bitcast %"struct.SkImageFilters::CropRect"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #14
  %133 = select i1 %31, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %8
  %134 = bitcast %struct.SkRect* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %132, i8* align 4 %134, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters10DropShadowEffffj5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %13, float %116, float %117, float %118, float %119, i32 %120, %class.sk_sp* nonnull %14, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %15) #14
  %135 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 1
  %136 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %137 = bitcast %class.sk_sp* %13 to i64*
  %138 = load i64, i64* %137, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %136, align 8
  %139 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %135, i64 0, i32 0
  %140 = load %class.SkImageFilter*, %class.SkImageFilter** %139, align 8
  %141 = bitcast %class.sk_sp* %135 to i64*
  store i64 %138, i64* %141, align 8
  %142 = icmp eq %class.SkImageFilter* %140, null
  br i1 %142, label %153, label %143

143:                                              ; preds = %130
  %144 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %140, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = bitcast %class.SkImageFilter* %140 to %class.SkRefCntBase*
  %149 = bitcast %class.SkImageFilter* %140 to void (%class.SkRefCntBase*)***
  %150 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, i64 2
  %152 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, align 8
  call void %152(%class.SkRefCntBase* nonnull %148) #14
  br label %153

153:                                              ; preds = %130, %143, %147
  %154 = load %class.SkImageFilter*, %class.SkImageFilter** %136, align 8
  %155 = icmp eq %class.SkImageFilter* %154, null
  br i1 %155, label %166, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %154, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = atomicrmw add i32* %157, i32 -1 acq_rel
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %166

160:                                              ; preds = %156
  %161 = bitcast %class.SkImageFilter* %154 to %class.SkRefCntBase*
  %162 = bitcast %class.SkImageFilter* %154 to void (%class.SkRefCntBase*)***
  %163 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %162, align 8
  %164 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %163, i64 2
  %165 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %164, align 8
  call void %165(%class.SkRefCntBase* nonnull %161) #14
  br label %166

166:                                              ; preds = %153, %156, %160
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #14
  %167 = load %class.SkImageFilter*, %class.SkImageFilter** %122, align 8
  %168 = icmp eq %class.SkImageFilter* %167, null
  br i1 %168, label %179, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %167, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 -1 acq_rel
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %179

173:                                              ; preds = %169
  %174 = bitcast %class.SkImageFilter* %167 to %class.SkRefCntBase*
  %175 = bitcast %class.SkImageFilter* %167 to void (%class.SkRefCntBase*)***
  %176 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %175, align 8
  %177 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %176, i64 2
  %178 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %177, align 8
  call void %178(%class.SkRefCntBase* nonnull %174) #14
  br label %179

179:                                              ; preds = %173, %169, %166, %108, %104, %101
  %180 = phi i8* [ %50, %101 ], [ %50, %104 ], [ %50, %108 ], [ %115, %166 ], [ %115, %169 ], [ %115, %173 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #14
  ret void
}

declare void @_ZN14SkImageFilters14DropShadowOnlyEffffj5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, float, float, float, float, i32, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN14SkImageFilters10DropShadowEffffj5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, float, float, float, float, i32, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21DropShadowPaintFilterD2Ev(%"class.cc::DropShadowPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21DropShadowPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21DropShadowPaintFilterD0Ev(%"class.cc::DropShadowPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21DropShadowPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::DropShadowPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc21DropShadowPaintFilter14SerializedSizeEv(%"class.cc::DropShadowPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 32, i64 48
  %6 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %0, i64 0, i32 7, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc21DropShadowPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::DropShadowPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 3
  %9 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 4
  %10 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 5
  %11 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 6
  %12 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 7, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8, !noalias !45
  %15 = icmp eq %"class.cc::PaintFilter"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %17, align 8, !alias.scope !45
  br label %34

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2, !noalias !48
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !51
  %25 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %14, %"class.cc::PaintFilter"** %25, align 8, !alias.scope !54
  %26 = ptrtoint %"class.cc::PaintFilter"* %14 to i64
  br label %34

27:                                               ; preds = %18
  %28 = bitcast %"class.cc::PaintFilter"* %14 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %29 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %28, align 8, !noalias !48
  %30 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %29, i64 4
  %31 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %30, align 8, !noalias !48
  call void %31(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %14, %"class.cc::ImageProvider"* %2) #14
  %32 = bitcast %class.sk_sp.3* %5 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !55
  br label %34

34:                                               ; preds = %16, %22, %27
  %35 = phi i64 [ 0, %16 ], [ %26, %22 ], [ %33, %27 ]
  %36 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.cc::DropShadowPaintFilter", %"class.cc::DropShadowPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = select i1 %38, %struct.SkRect* null, %struct.SkRect* %39
  %41 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = call i8* @_Znwm(i64 88) #16, !noalias !55
  %43 = bitcast i8* %42 to %"class.cc::DropShadowPaintFilter"*
  %44 = load float, float* %6, align 4, !noalias !55
  %45 = load float, float* %7, align 4, !noalias !55
  %46 = load float, float* %8, align 4, !noalias !55
  %47 = load float, float* %9, align 4, !noalias !55
  %48 = load i32, i32* %10, align 4, !noalias !55
  %49 = load i32, i32* %11, align 4, !noalias !55
  %50 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %50, align 8, !noalias !55
  %51 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %35, i64* %51, align 8, !noalias !55
  call void @_ZN2cc21DropShadowPaintFilterC2EffffjNS0_10ShadowModeE5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::DropShadowPaintFilter"* nonnull %43, float %44, float %45, float %46, float %47, i32 %48, i32 %49, %class.sk_sp.3* nonnull %4, %struct.SkRect* %40) #14, !noalias !55
  %52 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %53 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %52, align 8, !noalias !55
  %54 = icmp eq %"class.cc::PaintFilter"* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel, !noalias !55
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %"class.cc::PaintFilter"* %53 to %class.SkRefCntBase*
  %61 = bitcast %"class.cc::PaintFilter"* %53 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8, !noalias !55
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8, !noalias !55
  call void %64(%class.SkRefCntBase* nonnull %60) #14, !noalias !55
  br label %65

65:                                               ; preds = %59, %55, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %66 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %42, i8** %66, align 8
  %67 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %50, align 8
  %68 = icmp eq %"class.cc::PaintFilter"* %67, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %67, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = bitcast %"class.cc::PaintFilter"* %67 to %class.SkRefCntBase*
  %75 = bitcast %"class.cc::PaintFilter"* %67 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8
  call void %78(%class.SkRefCntBase* nonnull %74) #14
  br label %79

79:                                               ; preds = %65, %69, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20MagnifierPaintFilterC2ERK6SkRectf5sk_spINS_11PaintFilterEEPS2_(%"class.cc::MagnifierPaintFilter"*, %struct.SkRect* nocapture readonly dereferenceable(16), float, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %"struct.SkImageFilters::CropRect", align 4
  %9 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %10 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8
  %11 = icmp eq %"class.cc::PaintFilter"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 4
  %14 = load i8, i8* %13, align 8, !range !2
  br label %15

15:                                               ; preds = %5, %12
  %16 = phi i8 [ %14, %12 ], [ 0, %5 ]
  %17 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %19, align 8
  %20 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 4, i32* %20, align 8
  %21 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %16, i8* %22, align 8
  %23 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %23, align 4
  %24 = icmp eq %struct.SkRect* %4, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %15
  store i8 0, i8* %21, align 4
  %26 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %union.anon* %26 to i8*
  %28 = bitcast %struct.SkRect* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %28, i64 16, i1 false) #14
  store i8 1, i8* %21, align 4
  br label %29

29:                                               ; preds = %15, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc20MagnifierPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %30 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 1
  %31 = bitcast %struct.SkRect* %30 to i8*
  %32 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 16, i1 false)
  %33 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 2
  store float %2, float* %33, align 8
  %34 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 3
  %35 = bitcast %class.sk_sp.3* %3 to i64*
  %36 = load i64, i64* %35, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %9, align 8
  %37 = bitcast %class.sk_sp.3* %34 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #14
  %39 = load float, float* %33, align 8
  %40 = icmp eq i64 %36, 0
  %41 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  br i1 %40, label %50, label %42

42:                                               ; preds = %29
  %43 = inttoptr i64 %36 to %"class.cc::PaintFilter"*
  %44 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %43, i64 0, i32 1, i32 0
  %45 = load %class.SkImageFilter*, %class.SkImageFilter** %44, align 8, !noalias !58
  %46 = icmp eq %class.SkImageFilter* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic, !noalias !58
  br label %50

50:                                               ; preds = %29, %42, %47
  %51 = phi %class.SkImageFilter* [ null, %42 ], [ %45, %47 ], [ null, %29 ]
  store %class.SkImageFilter* %51, %class.SkImageFilter** %41, align 8, !alias.scope !58
  %52 = bitcast %"struct.SkImageFilters::CropRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #14
  %53 = select i1 %24, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %4
  %54 = bitcast %struct.SkRect* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %54, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters9MagnifierERK6SkRectf5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %6, %struct.SkRect* dereferenceable(16) %30, float %39, %class.sk_sp* nonnull %7, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %8) #14
  %55 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %57 = bitcast %class.sk_sp* %6 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %56, align 8
  %59 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %55, i64 0, i32 0
  %60 = load %class.SkImageFilter*, %class.SkImageFilter** %59, align 8
  %61 = bitcast %class.sk_sp* %55 to i64*
  store i64 %58, i64* %61, align 8
  %62 = icmp eq %class.SkImageFilter* %60, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %50
  %64 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %class.SkImageFilter* %60 to %class.SkRefCntBase*
  %69 = bitcast %class.SkImageFilter* %60 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  call void %72(%class.SkRefCntBase* nonnull %68) #14
  br label %73

73:                                               ; preds = %50, %63, %67
  %74 = load %class.SkImageFilter*, %class.SkImageFilter** %56, align 8
  %75 = icmp eq %class.SkImageFilter* %74, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %74, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkImageFilter* %74 to %class.SkRefCntBase*
  %82 = bitcast %class.SkImageFilter* %74 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  call void %85(%class.SkRefCntBase* nonnull %81) #14
  br label %86

86:                                               ; preds = %73, %76, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #14
  %87 = load %class.SkImageFilter*, %class.SkImageFilter** %41, align 8
  %88 = icmp eq %class.SkImageFilter* %87, null
  br i1 %88, label %99, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = bitcast %class.SkImageFilter* %87 to %class.SkRefCntBase*
  %95 = bitcast %class.SkImageFilter* %87 to void (%class.SkRefCntBase*)***
  %96 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, i64 2
  %98 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, align 8
  call void %98(%class.SkRefCntBase* nonnull %94) #14
  br label %99

99:                                               ; preds = %86, %89, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #14
  ret void
}

declare void @_ZN14SkImageFilters9MagnifierERK6SkRectf5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %struct.SkRect* dereferenceable(16), float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20MagnifierPaintFilterD2Ev(%"class.cc::MagnifierPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc20MagnifierPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20MagnifierPaintFilterD0Ev(%"class.cc::MagnifierPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc20MagnifierPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::MagnifierPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc20MagnifierPaintFilter14SerializedSizeEv(%"class.cc::MagnifierPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 28, i64 44
  %6 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %0, i64 0, i32 3, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc20MagnifierPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::MagnifierPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 2
  %8 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 3, i32 0
  %10 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8, !noalias !61
  %11 = icmp eq %"class.cc::PaintFilter"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %13, align 8, !alias.scope !61
  br label %30

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 4
  %16 = load i8, i8* %15, align 8, !range !2, !noalias !64
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !67
  %21 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %10, %"class.cc::PaintFilter"** %21, align 8, !alias.scope !70
  %22 = ptrtoint %"class.cc::PaintFilter"* %10 to i64
  br label %30

23:                                               ; preds = %14
  %24 = bitcast %"class.cc::PaintFilter"* %10 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %25 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %24, align 8, !noalias !64
  %26 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %25, i64 4
  %27 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %26, align 8, !noalias !64
  call void %27(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %10, %"class.cc::ImageProvider"* %2) #14
  %28 = bitcast %class.sk_sp.3* %5 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !71
  br label %30

30:                                               ; preds = %12, %18, %23
  %31 = phi i64 [ 0, %12 ], [ %22, %18 ], [ %29, %23 ]
  %32 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = getelementptr inbounds %"class.cc::MagnifierPaintFilter", %"class.cc::MagnifierPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = select i1 %34, %struct.SkRect* null, %struct.SkRect* %35
  %37 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = call i8* @_Znwm(i64 88) #16, !noalias !71
  %39 = bitcast i8* %38 to %"class.cc::MagnifierPaintFilter"*
  %40 = load float, float* %7, align 4, !noalias !71
  %41 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %41, align 8, !noalias !71
  %42 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %31, i64* %42, align 8, !noalias !71
  call void @_ZN2cc20MagnifierPaintFilterC2ERK6SkRectf5sk_spINS_11PaintFilterEEPS2_(%"class.cc::MagnifierPaintFilter"* nonnull %39, %struct.SkRect* dereferenceable(16) %6, float %40, %class.sk_sp.3* nonnull %4, %struct.SkRect* %36) #14, !noalias !71
  %43 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %44 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %43, align 8, !noalias !71
  %45 = icmp eq %"class.cc::PaintFilter"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %44, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel, !noalias !71
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %"class.cc::PaintFilter"* %44 to %class.SkRefCntBase*
  %52 = bitcast %"class.cc::PaintFilter"* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8, !noalias !71
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8, !noalias !71
  call void %55(%class.SkRefCntBase* nonnull %51) #14, !noalias !71
  br label %56

56:                                               ; preds = %50, %46, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %57 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %38, i8** %57, align 8
  %58 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %41, align 8
  %59 = icmp eq %"class.cc::PaintFilter"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %"class.cc::PaintFilter"* %58 to %class.SkRefCntBase*
  %66 = bitcast %"class.cc::PaintFilter"* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #14
  br label %70

70:                                               ; preds = %56, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18ComposePaintFilterC2E5sk_spINS_11PaintFilterEES3_(%"class.cc::ComposePaintFilter"* nocapture, %class.sk_sp.3* nocapture, %class.sk_sp.3* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %1, i64 0, i32 0
  %8 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %7, align 8
  %9 = icmp eq %"class.cc::PaintFilter"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %8, i64 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10, %3
  %15 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %2, i64 0, i32 0
  %16 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %15, align 8
  %17 = icmp eq %"class.cc::PaintFilter"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %16, i64 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2
  br label %21

21:                                               ; preds = %10, %18, %14
  %22 = phi i8 [ 1, %10 ], [ %20, %18 ], [ 0, %14 ]
  %23 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %23, align 4
  %24 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %25, align 8
  %26 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 5, i32* %26, align 8
  %27 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %22, i8* %28, align 8
  %29 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %29, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc18ComposePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %30 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 1
  %31 = bitcast %class.sk_sp.3* %1 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %7, align 8
  %33 = bitcast %class.sk_sp.3* %30 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 2
  %35 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %2, i64 0, i32 0
  %36 = bitcast %class.sk_sp.3* %2 to i64*
  %37 = load i64, i64* %36, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %35, align 8
  %38 = bitcast %class.sk_sp.3* %34 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %30, i64 0, i32 0
  %41 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %40, align 8
  %42 = icmp eq %"class.cc::PaintFilter"* %41, null
  %43 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %44 = inttoptr i64 %37 to %"class.cc::PaintFilter"*
  br i1 %42, label %54, label %45

45:                                               ; preds = %21
  %46 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %41, i64 0, i32 1, i32 0
  %47 = load %class.SkImageFilter*, %class.SkImageFilter** %46, align 8, !noalias !74
  %48 = icmp eq %class.SkImageFilter* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic, !noalias !74
  %52 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %34, i64 0, i32 0
  %53 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %52, align 8
  br label %54

54:                                               ; preds = %21, %45, %49
  %55 = phi %"class.cc::PaintFilter"* [ %44, %45 ], [ %53, %49 ], [ %44, %21 ]
  %56 = phi %class.SkImageFilter* [ null, %45 ], [ %47, %49 ], [ null, %21 ]
  store %class.SkImageFilter* %56, %class.SkImageFilter** %43, align 8, !alias.scope !74
  %57 = icmp eq %"class.cc::PaintFilter"* %55, null
  %58 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  br i1 %57, label %66, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %55, i64 0, i32 1, i32 0
  %61 = load %class.SkImageFilter*, %class.SkImageFilter** %60, align 8, !noalias !77
  %62 = icmp eq %class.SkImageFilter* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %61, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 1 monotonic, !noalias !77
  br label %66

66:                                               ; preds = %54, %59, %63
  %67 = phi %class.SkImageFilter* [ null, %59 ], [ %61, %63 ], [ null, %54 ]
  store %class.SkImageFilter* %67, %class.SkImageFilter** %58, align 8, !alias.scope !77
  call void @_ZN14SkImageFilters7ComposeE5sk_spI13SkImageFilterES2_(%class.sk_sp* nonnull sret %4, %class.sk_sp* nonnull %5, %class.sk_sp* nonnull %6) #14
  %68 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %70 = bitcast %class.sk_sp* %4 to i64*
  %71 = load i64, i64* %70, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %69, align 8
  %72 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %68, i64 0, i32 0
  %73 = load %class.SkImageFilter*, %class.SkImageFilter** %72, align 8
  %74 = bitcast %class.sk_sp* %68 to i64*
  store i64 %71, i64* %74, align 8
  %75 = icmp eq %class.SkImageFilter* %73, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %66
  %77 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkImageFilter* %73 to %class.SkRefCntBase*
  %82 = bitcast %class.SkImageFilter* %73 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  call void %85(%class.SkRefCntBase* nonnull %81) #14
  br label %86

86:                                               ; preds = %66, %76, %80
  %87 = load %class.SkImageFilter*, %class.SkImageFilter** %69, align 8
  %88 = icmp eq %class.SkImageFilter* %87, null
  br i1 %88, label %99, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = bitcast %class.SkImageFilter* %87 to %class.SkRefCntBase*
  %95 = bitcast %class.SkImageFilter* %87 to void (%class.SkRefCntBase*)***
  %96 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, i64 2
  %98 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, align 8
  call void %98(%class.SkRefCntBase* nonnull %94) #14
  br label %99

99:                                               ; preds = %86, %89, %93
  %100 = load %class.SkImageFilter*, %class.SkImageFilter** %58, align 8
  %101 = icmp eq %class.SkImageFilter* %100, null
  br i1 %101, label %112, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %100, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = bitcast %class.SkImageFilter* %100 to %class.SkRefCntBase*
  %108 = bitcast %class.SkImageFilter* %100 to void (%class.SkRefCntBase*)***
  %109 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, i64 2
  %111 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, align 8
  call void %111(%class.SkRefCntBase* nonnull %107) #14
  br label %112

112:                                              ; preds = %99, %102, %106
  %113 = load %class.SkImageFilter*, %class.SkImageFilter** %43, align 8
  %114 = icmp eq %class.SkImageFilter* %113, null
  br i1 %114, label %125, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %113, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 -1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %125

119:                                              ; preds = %115
  %120 = bitcast %class.SkImageFilter* %113 to %class.SkRefCntBase*
  %121 = bitcast %class.SkImageFilter* %113 to void (%class.SkRefCntBase*)***
  %122 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, i64 2
  %124 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, align 8
  call void %124(%class.SkRefCntBase* nonnull %120) #14
  br label %125

125:                                              ; preds = %112, %115, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  ret void
}

declare void @_ZN14SkImageFilters7ComposeE5sk_spI13SkImageFilterES2_(%class.sk_sp* sret, %class.sk_sp*, %class.sk_sp*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18ComposePaintFilterD2Ev(%"class.cc::ComposePaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc18ComposePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 1, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18ComposePaintFilterD0Ev(%"class.cc::ComposePaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc18ComposePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 1, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %24, %20, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  %45 = bitcast %"class.cc::ComposePaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc18ComposePaintFilter14SerializedSizeEv(%"class.cc::ComposePaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 8, i64 24
  %6 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %0, i64 0, i32 2, i32 0
  %22 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %21, align 8
  %23 = icmp eq %"class.cc::PaintFilter"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = bitcast %"class.cc::PaintFilter"* %22 to i64 (%"class.cc::PaintFilter"*)***
  %26 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %26, i64 3
  %28 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %27, align 8
  %29 = tail call i64 %28(%"class.cc::PaintFilter"* nonnull %22) #14
  %30 = add i64 %29, 4
  br label %31

31:                                               ; preds = %16, %24
  %32 = phi i64 [ %30, %24 ], [ 4, %16 ]
  br i1 %19, label %37, label %33

33:                                               ; preds = %31
  %34 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 %32) #14
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  br i1 %35, label %37, label %38, !prof !6

37:                                               ; preds = %31, %33
  br label %38

38:                                               ; preds = %33, %37
  %39 = phi i64 [ 0, %37 ], [ %36, %33 ]
  ret i64 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc18ComposePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::ComposePaintFilter"* nocapture readonly, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = alloca %class.sk_sp.3, align 8
  %7 = alloca %class.sk_sp.3, align 8
  %8 = bitcast %class.sk_sp.3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %1, i64 0, i32 1, i32 0
  %10 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8, !noalias !80
  %11 = icmp eq %"class.cc::PaintFilter"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %13, align 8, !alias.scope !80
  br label %27

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 4
  %16 = load i8, i8* %15, align 8, !range !2, !noalias !83
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !86
  %21 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* %10, %"class.cc::PaintFilter"** %21, align 8, !alias.scope !89
  br label %27

22:                                               ; preds = %14
  %23 = bitcast %"class.cc::PaintFilter"* %10 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %24 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %23, align 8, !noalias !83
  %25 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %24, i64 4
  %26 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %25, align 8, !noalias !83
  call void %26(%class.sk_sp.3* nonnull sret %6, %"class.cc::PaintFilter"* nonnull %10, %"class.cc::ImageProvider"* %2) #14
  br label %27

27:                                               ; preds = %12, %18, %22
  %28 = bitcast %class.sk_sp.3* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.cc::ComposePaintFilter", %"class.cc::ComposePaintFilter"* %1, i64 0, i32 2, i32 0
  %30 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %29, align 8, !noalias !90
  %31 = icmp eq %"class.cc::PaintFilter"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %33, align 8, !alias.scope !90
  br label %50

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %30, i64 0, i32 4
  %36 = load i8, i8* %35, align 8, !range !2, !noalias !93
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic, !noalias !96
  %41 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* %30, %"class.cc::PaintFilter"** %41, align 8, !alias.scope !99
  %42 = ptrtoint %"class.cc::PaintFilter"* %30 to i64
  br label %50

43:                                               ; preds = %34
  %44 = bitcast %"class.cc::PaintFilter"* %30 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %45 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %44, align 8, !noalias !93
  %46 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %45, i64 4
  %47 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %46, align 8, !noalias !93
  call void %47(%class.sk_sp.3* nonnull sret %7, %"class.cc::PaintFilter"* nonnull %30, %"class.cc::ImageProvider"* %2) #14
  %48 = bitcast %class.sk_sp.3* %7 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !100
  br label %50

50:                                               ; preds = %32, %38, %43
  %51 = phi i64 [ 0, %32 ], [ %42, %38 ], [ %49, %43 ]
  %52 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  %53 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = call i8* @_Znwm(i64 72) #16, !noalias !100
  %55 = bitcast i8* %54 to %"class.cc::ComposePaintFilter"*
  %56 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  %57 = bitcast %class.sk_sp.3* %6 to i64*
  %58 = load i64, i64* %57, align 8, !noalias !100
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %56, align 8, !noalias !100
  %59 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %58, i64* %59, align 8, !noalias !100
  %60 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %60, align 8, !noalias !100
  %61 = bitcast %class.sk_sp.3* %5 to i64*
  store i64 %51, i64* %61, align 8, !noalias !100
  call void @_ZN2cc18ComposePaintFilterC2E5sk_spINS_11PaintFilterEES3_(%"class.cc::ComposePaintFilter"* nonnull %55, %class.sk_sp.3* nonnull %4, %class.sk_sp.3* nonnull %5) #14, !noalias !100
  %62 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  %63 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %62, align 8, !noalias !100
  %64 = icmp eq %"class.cc::PaintFilter"* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %50
  %66 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel, !noalias !100
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %"class.cc::PaintFilter"* %63 to %class.SkRefCntBase*
  %71 = bitcast %"class.cc::PaintFilter"* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8, !noalias !100
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8, !noalias !100
  call void %74(%class.SkRefCntBase* nonnull %70) #14, !noalias !100
  br label %75

75:                                               ; preds = %69, %65, %50
  %76 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %77 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %76, align 8, !noalias !100
  %78 = icmp eq %"class.cc::PaintFilter"* %77, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %77, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel, !noalias !100
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %89

83:                                               ; preds = %79
  %84 = bitcast %"class.cc::PaintFilter"* %77 to %class.SkRefCntBase*
  %85 = bitcast %"class.cc::PaintFilter"* %77 to void (%class.SkRefCntBase*)***
  %86 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %85, align 8, !noalias !100
  %87 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, i64 2
  %88 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, align 8, !noalias !100
  call void %88(%class.SkRefCntBase* nonnull %84) #14, !noalias !100
  br label %89

89:                                               ; preds = %83, %79, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  %90 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %54, i8** %90, align 8
  %91 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %60, align 8
  %92 = icmp eq %"class.cc::PaintFilter"* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %91, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = bitcast %"class.cc::PaintFilter"* %91 to %class.SkRefCntBase*
  %99 = bitcast %"class.cc::PaintFilter"* %91 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  call void %102(%class.SkRefCntBase* nonnull %98) #14
  br label %103

103:                                              ; preds = %89, %93, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  %104 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %56, align 8
  %105 = icmp eq %"class.cc::PaintFilter"* %104, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %104, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = bitcast %"class.cc::PaintFilter"* %104 to %class.SkRefCntBase*
  %112 = bitcast %"class.cc::PaintFilter"* %104 to void (%class.SkRefCntBase*)***
  %113 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, i64 2
  %115 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, align 8
  call void %115(%class.SkRefCntBase* nonnull %111) #14
  br label %116

116:                                              ; preds = %103, %106, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc25AlphaThresholdPaintFilterC2ERK8SkRegionff5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::AlphaThresholdPaintFilter"*, %class.SkRegion* dereferenceable(24), float, float, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %"struct.SkImageFilters::CropRect", align 4
  %10 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %11 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8
  %12 = icmp eq %"class.cc::PaintFilter"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  br label %16

16:                                               ; preds = %6, %13
  %17 = phi i8 [ %15, %13 ], [ 0, %6 ]
  %18 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %18, align 4
  %19 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %20, align 8
  %21 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 6, i32* %21, align 8
  %22 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %17, i8* %23, align 8
  %24 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %24, align 4
  %25 = icmp eq %struct.SkRect* %5, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %16
  store i8 0, i8* %22, align 4
  %27 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast %union.anon* %27 to i8*
  %29 = bitcast %struct.SkRect* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* nonnull align 4 %29, i64 16, i1 false) #14
  store i8 1, i8* %22, align 4
  br label %30

30:                                               ; preds = %16, %26
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc25AlphaThresholdPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %31 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 1
  tail call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %31, %class.SkRegion* dereferenceable(24) %1) #14
  %32 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 2
  store float %2, float* %32, align 8
  %33 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 3
  store float %3, float* %33, align 4
  %34 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 4
  %35 = bitcast %class.sk_sp.3* %4 to i64*
  %36 = load i64, i64* %35, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %10, align 8
  %37 = bitcast %class.sk_sp.3* %34 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #14
  %39 = load float, float* %32, align 8
  %40 = load float, float* %33, align 4
  %41 = icmp eq i64 %36, 0
  %42 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  br i1 %41, label %51, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %36 to %"class.cc::PaintFilter"*
  %45 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %44, i64 0, i32 1, i32 0
  %46 = load %class.SkImageFilter*, %class.SkImageFilter** %45, align 8, !noalias !103
  %47 = icmp eq %class.SkImageFilter* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic, !noalias !103
  br label %51

51:                                               ; preds = %30, %43, %48
  %52 = phi %class.SkImageFilter* [ null, %43 ], [ %46, %48 ], [ null, %30 ]
  store %class.SkImageFilter* %52, %class.SkImageFilter** %42, align 8, !alias.scope !103
  %53 = bitcast %"struct.SkImageFilters::CropRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #14
  %54 = select i1 %25, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %5
  %55 = bitcast %struct.SkRect* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* align 4 %55, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters14AlphaThresholdERK8SkRegionff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %7, %class.SkRegion* dereferenceable(24) %31, float %39, float %40, %class.sk_sp* nonnull %8, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %9) #14
  %56 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %58 = bitcast %class.sk_sp* %7 to i64*
  %59 = load i64, i64* %58, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %57, align 8
  %60 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %56, i64 0, i32 0
  %61 = load %class.SkImageFilter*, %class.SkImageFilter** %60, align 8
  %62 = bitcast %class.sk_sp* %56 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %class.SkImageFilter* %61, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %51
  %65 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %61, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %class.SkImageFilter* %61 to %class.SkRefCntBase*
  %70 = bitcast %class.SkImageFilter* %61 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  call void %73(%class.SkRefCntBase* nonnull %69) #14
  br label %74

74:                                               ; preds = %51, %64, %68
  %75 = load %class.SkImageFilter*, %class.SkImageFilter** %57, align 8
  %76 = icmp eq %class.SkImageFilter* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = bitcast %class.SkImageFilter* %75 to %class.SkRefCntBase*
  %83 = bitcast %class.SkImageFilter* %75 to void (%class.SkRefCntBase*)***
  %84 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, i64 2
  %86 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, align 8
  call void %86(%class.SkRefCntBase* nonnull %82) #14
  br label %87

87:                                               ; preds = %74, %77, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #14
  %88 = load %class.SkImageFilter*, %class.SkImageFilter** %42, align 8
  %89 = icmp eq %class.SkImageFilter* %88, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %88, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %100

94:                                               ; preds = %90
  %95 = bitcast %class.SkImageFilter* %88 to %class.SkRefCntBase*
  %96 = bitcast %class.SkImageFilter* %88 to void (%class.SkRefCntBase*)***
  %97 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, i64 2
  %99 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, align 8
  call void %99(%class.SkRefCntBase* nonnull %95) #14
  br label %100

100:                                              ; preds = %87, %90, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #14
  ret void
}

declare void @_ZN8SkRegionC1ERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) unnamed_addr #5

declare void @_ZN14SkImageFilters14AlphaThresholdERK8SkRegionff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %class.SkRegion* dereferenceable(24), float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc25AlphaThresholdPaintFilterD2Ev(%"class.cc::AlphaThresholdPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc25AlphaThresholdPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %17) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %19 = load %class.SkImageFilter*, %class.SkImageFilter** %18, align 8
  %20 = icmp eq %class.SkImageFilter* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkImageFilter* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkImageFilter* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #14
  br label %31

31:                                               ; preds = %16, %21, %25
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc25AlphaThresholdPaintFilterD0Ev(%"class.cc::AlphaThresholdPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc25AlphaThresholdPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %17) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %19 = load %class.SkImageFilter*, %class.SkImageFilter** %18, align 8
  %20 = icmp eq %class.SkImageFilter* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkImageFilter* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkImageFilter* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #14
  br label %31

31:                                               ; preds = %16, %21, %25
  %32 = bitcast %"class.cc::AlphaThresholdPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc25AlphaThresholdPaintFilter14SerializedSizeEv(%"class.cc::AlphaThresholdPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 1
  %3 = tail call i64 @_ZNK8SkRegion13writeToMemoryEPv(%class.SkRegion* %2, i8* null) #14
  %4 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %6, i64 16, i64 32
  %8 = add i64 %3, 8
  %9 = add i64 %8, %7
  %10 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %0, i64 0, i32 4, i32 0
  %11 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8
  %12 = icmp eq %"class.cc::PaintFilter"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.cc::PaintFilter"* %11 to i64 (%"class.cc::PaintFilter"*)***
  %15 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %15, i64 3
  %17 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %16, align 8
  %18 = tail call i64 %17(%"class.cc::PaintFilter"* nonnull %11) #14
  %19 = add i64 %18, 4
  br label %20

20:                                               ; preds = %1, %13
  %21 = phi i64 [ %19, %13 ], [ 4, %1 ]
  %22 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %9, i64 %21) #14
  %23 = extractvalue { i64, i1 } %22, 1
  %24 = extractvalue { i64, i1 } %22, 0
  %25 = select i1 %23, i64 0, i64 %24, !prof !6
  ret i64 %25
}

declare i64 @_ZNK8SkRegion13writeToMemoryEPv(%class.SkRegion*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc25AlphaThresholdPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::AlphaThresholdPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 3
  %9 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 4, i32 0
  %11 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8, !noalias !106
  %12 = icmp eq %"class.cc::PaintFilter"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %14, align 8, !alias.scope !106
  br label %31

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !2, !noalias !109
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !112
  %22 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %11, %"class.cc::PaintFilter"** %22, align 8, !alias.scope !115
  %23 = ptrtoint %"class.cc::PaintFilter"* %11 to i64
  br label %31

24:                                               ; preds = %15
  %25 = bitcast %"class.cc::PaintFilter"* %11 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %26 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %25, align 8, !noalias !109
  %27 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %26, i64 4
  %28 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %27, align 8, !noalias !109
  call void %28(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %11, %"class.cc::ImageProvider"* %2) #14
  %29 = bitcast %class.sk_sp.3* %5 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !116
  br label %31

31:                                               ; preds = %13, %19, %24
  %32 = phi i64 [ 0, %13 ], [ %23, %19 ], [ %30, %24 ]
  %33 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = getelementptr inbounds %"class.cc::AlphaThresholdPaintFilter", %"class.cc::AlphaThresholdPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = select i1 %35, %struct.SkRect* null, %struct.SkRect* %36
  %38 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = call i8* @_Znwm(i64 96) #16, !noalias !116
  %40 = bitcast i8* %39 to %"class.cc::AlphaThresholdPaintFilter"*
  %41 = load float, float* %7, align 4, !noalias !116
  %42 = load float, float* %8, align 4, !noalias !116
  %43 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %43, align 8, !noalias !116
  %44 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %32, i64* %44, align 8, !noalias !116
  call void @_ZN2cc25AlphaThresholdPaintFilterC2ERK8SkRegionff5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::AlphaThresholdPaintFilter"* nonnull %40, %class.SkRegion* dereferenceable(24) %6, float %41, float %42, %class.sk_sp.3* nonnull %4, %struct.SkRect* %37) #14, !noalias !116
  %45 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %46 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %45, align 8, !noalias !116
  %47 = icmp eq %"class.cc::PaintFilter"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel, !noalias !116
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %"class.cc::PaintFilter"* %46 to %class.SkRefCntBase*
  %54 = bitcast %"class.cc::PaintFilter"* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8, !noalias !116
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8, !noalias !116
  call void %57(%class.SkRefCntBase* nonnull %53) #14, !noalias !116
  br label %58

58:                                               ; preds = %52, %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  %59 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %39, i8** %59, align 8
  %60 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %43, align 8
  %61 = icmp eq %"class.cc::PaintFilter"* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %"class.cc::PaintFilter"* %60 to %class.SkRefCntBase*
  %68 = bitcast %"class.cc::PaintFilter"* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #14
  br label %72

72:                                               ; preds = %58, %62, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  ret void
}

declare zeroext i1 @_ZNK8SkRegioneqERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19XfermodePaintFilterC2E11SkBlendMode5sk_spINS_11PaintFilterEES4_PK6SkRect(%"class.cc::XfermodePaintFilter"* nocapture, i32, %class.sk_sp.3* nocapture, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %"struct.SkImageFilters::CropRect", align 4
  %10 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %2, i64 0, i32 0
  %11 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8
  %12 = icmp eq %"class.cc::PaintFilter"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %13, %5
  %18 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %19 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %18, align 8
  %20 = icmp eq %"class.cc::PaintFilter"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %19, i64 0, i32 4
  %23 = load i8, i8* %22, align 8, !range !2
  br label %24

24:                                               ; preds = %13, %21, %17
  %25 = phi i8 [ 1, %13 ], [ %23, %21 ], [ 0, %17 ]
  %26 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %26, align 4
  %27 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %28, align 8
  %29 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 7, i32* %29, align 8
  %30 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %25, i8* %31, align 8
  %32 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %32, align 4
  %33 = icmp eq %struct.SkRect* %4, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %24
  store i8 0, i8* %30, align 4
  %35 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %union.anon* %35 to i8*
  %37 = bitcast %struct.SkRect* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* nonnull align 4 %37, i64 16, i1 false) #14
  store i8 1, i8* %30, align 4
  br label %38

38:                                               ; preds = %24, %34
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc19XfermodePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %39 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 1
  store i32 %1, i32* %39, align 8
  %40 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 2
  %41 = bitcast %class.sk_sp.3* %2 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %10, align 8
  %43 = bitcast %class.sk_sp.3* %40 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 3
  %45 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %46 = bitcast %class.sk_sp.3* %3 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %45, align 8
  %48 = bitcast %class.sk_sp.3* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #14
  %50 = load i32, i32* %39, align 8
  %51 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %40, i64 0, i32 0
  %52 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %51, align 8
  %53 = icmp eq %"class.cc::PaintFilter"* %52, null
  %54 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %55 = inttoptr i64 %47 to %"class.cc::PaintFilter"*
  br i1 %53, label %65, label %56

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %52, i64 0, i32 1, i32 0
  %58 = load %class.SkImageFilter*, %class.SkImageFilter** %57, align 8, !noalias !119
  %59 = icmp eq %class.SkImageFilter* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %58, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 1 monotonic, !noalias !119
  %63 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %44, i64 0, i32 0
  %64 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %63, align 8
  br label %65

65:                                               ; preds = %38, %56, %60
  %66 = phi %"class.cc::PaintFilter"* [ %55, %56 ], [ %64, %60 ], [ %55, %38 ]
  %67 = phi %class.SkImageFilter* [ null, %56 ], [ %58, %60 ], [ null, %38 ]
  store %class.SkImageFilter* %67, %class.SkImageFilter** %54, align 8, !alias.scope !119
  %68 = icmp eq %"class.cc::PaintFilter"* %66, null
  %69 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  br i1 %68, label %77, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %66, i64 0, i32 1, i32 0
  %72 = load %class.SkImageFilter*, %class.SkImageFilter** %71, align 8, !noalias !122
  %73 = icmp eq %class.SkImageFilter* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 1 monotonic, !noalias !122
  br label %77

77:                                               ; preds = %65, %70, %74
  %78 = phi %class.SkImageFilter* [ null, %70 ], [ %72, %74 ], [ null, %65 ]
  store %class.SkImageFilter* %78, %class.SkImageFilter** %69, align 8, !alias.scope !122
  %79 = bitcast %"struct.SkImageFilters::CropRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #14
  %80 = select i1 %33, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %4
  %81 = bitcast %struct.SkRect* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* align 4 %81, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters5BlendE11SkBlendMode5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp* nonnull sret %6, i32 %50, %class.sk_sp* nonnull %7, %class.sk_sp* nonnull %8, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %9) #14
  %82 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 1
  %83 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %84 = bitcast %class.sk_sp* %6 to i64*
  %85 = load i64, i64* %84, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %83, align 8
  %86 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %82, i64 0, i32 0
  %87 = load %class.SkImageFilter*, %class.SkImageFilter** %86, align 8
  %88 = bitcast %class.sk_sp* %82 to i64*
  store i64 %85, i64* %88, align 8
  %89 = icmp eq %class.SkImageFilter* %87, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %77
  %91 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %100

94:                                               ; preds = %90
  %95 = bitcast %class.SkImageFilter* %87 to %class.SkRefCntBase*
  %96 = bitcast %class.SkImageFilter* %87 to void (%class.SkRefCntBase*)***
  %97 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, i64 2
  %99 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, align 8
  call void %99(%class.SkRefCntBase* nonnull %95) #14
  br label %100

100:                                              ; preds = %77, %90, %94
  %101 = load %class.SkImageFilter*, %class.SkImageFilter** %83, align 8
  %102 = icmp eq %class.SkImageFilter* %101, null
  br i1 %102, label %113, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %101, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 -1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %113

107:                                              ; preds = %103
  %108 = bitcast %class.SkImageFilter* %101 to %class.SkRefCntBase*
  %109 = bitcast %class.SkImageFilter* %101 to void (%class.SkRefCntBase*)***
  %110 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, i64 2
  %112 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, align 8
  call void %112(%class.SkRefCntBase* nonnull %108) #14
  br label %113

113:                                              ; preds = %100, %103, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #14
  %114 = load %class.SkImageFilter*, %class.SkImageFilter** %69, align 8
  %115 = icmp eq %class.SkImageFilter* %114, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %114, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %126

120:                                              ; preds = %116
  %121 = bitcast %class.SkImageFilter* %114 to %class.SkRefCntBase*
  %122 = bitcast %class.SkImageFilter* %114 to void (%class.SkRefCntBase*)***
  %123 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %122, align 8
  %124 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, i64 2
  %125 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, align 8
  call void %125(%class.SkRefCntBase* nonnull %121) #14
  br label %126

126:                                              ; preds = %113, %116, %120
  %127 = load %class.SkImageFilter*, %class.SkImageFilter** %54, align 8
  %128 = icmp eq %class.SkImageFilter* %127, null
  br i1 %128, label %139, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %127, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 -1 acq_rel
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %139

133:                                              ; preds = %129
  %134 = bitcast %class.SkImageFilter* %127 to %class.SkRefCntBase*
  %135 = bitcast %class.SkImageFilter* %127 to void (%class.SkRefCntBase*)***
  %136 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %135, align 8
  %137 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, i64 2
  %138 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, align 8
  call void %138(%class.SkRefCntBase* nonnull %134) #14
  br label %139

139:                                              ; preds = %126, %129, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #14
  ret void
}

declare void @_ZN14SkImageFilters5BlendE11SkBlendMode5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp* sret, i32, %class.sk_sp*, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19XfermodePaintFilterD2Ev(%"class.cc::XfermodePaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc19XfermodePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 2, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19XfermodePaintFilterD0Ev(%"class.cc::XfermodePaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc19XfermodePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 2, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %24, %20, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  %45 = bitcast %"class.cc::XfermodePaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc19XfermodePaintFilter14SerializedSizeEv(%"class.cc::XfermodePaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 12, i64 28
  %6 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 2, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %0, i64 0, i32 3, i32 0
  %22 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %21, align 8
  %23 = icmp eq %"class.cc::PaintFilter"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = bitcast %"class.cc::PaintFilter"* %22 to i64 (%"class.cc::PaintFilter"*)***
  %26 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %26, i64 3
  %28 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %27, align 8
  %29 = tail call i64 %28(%"class.cc::PaintFilter"* nonnull %22) #14
  %30 = add i64 %29, 4
  br label %31

31:                                               ; preds = %16, %24
  %32 = phi i64 [ %30, %24 ], [ 4, %16 ]
  br i1 %19, label %37, label %33

33:                                               ; preds = %31
  %34 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 %32) #14
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  br i1 %35, label %37, label %38, !prof !6

37:                                               ; preds = %31, %33
  br label %38

38:                                               ; preds = %33, %37
  %39 = phi i64 [ 0, %37 ], [ %36, %33 ]
  ret i64 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc19XfermodePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::XfermodePaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = alloca %class.sk_sp.3, align 8
  %7 = alloca %class.sk_sp.3, align 8
  %8 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 1
  %9 = bitcast %class.sk_sp.3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 2, i32 0
  %11 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8, !noalias !125
  %12 = icmp eq %"class.cc::PaintFilter"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %14, align 8, !alias.scope !125
  br label %28

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !2, !noalias !128
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !131
  %22 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* %11, %"class.cc::PaintFilter"** %22, align 8, !alias.scope !134
  br label %28

23:                                               ; preds = %15
  %24 = bitcast %"class.cc::PaintFilter"* %11 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %25 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %24, align 8, !noalias !128
  %26 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %25, i64 4
  %27 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %26, align 8, !noalias !128
  call void %27(%class.sk_sp.3* nonnull sret %6, %"class.cc::PaintFilter"* nonnull %11, %"class.cc::ImageProvider"* %2) #14
  br label %28

28:                                               ; preds = %13, %19, %23
  %29 = bitcast %class.sk_sp.3* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 3, i32 0
  %31 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %30, align 8, !noalias !135
  %32 = icmp eq %"class.cc::PaintFilter"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %34, align 8, !alias.scope !135
  br label %51

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %31, i64 0, i32 4
  %37 = load i8, i8* %36, align 8, !range !2, !noalias !138
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic, !noalias !141
  %42 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* %31, %"class.cc::PaintFilter"** %42, align 8, !alias.scope !144
  %43 = ptrtoint %"class.cc::PaintFilter"* %31 to i64
  br label %51

44:                                               ; preds = %35
  %45 = bitcast %"class.cc::PaintFilter"* %31 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %46 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %45, align 8, !noalias !138
  %47 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %46, i64 4
  %48 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %47, align 8, !noalias !138
  call void %48(%class.sk_sp.3* nonnull sret %7, %"class.cc::PaintFilter"* nonnull %31, %"class.cc::ImageProvider"* %2) #14
  %49 = bitcast %class.sk_sp.3* %7 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !145
  br label %51

51:                                               ; preds = %33, %39, %44
  %52 = phi i64 [ 0, %33 ], [ %43, %39 ], [ %50, %44 ]
  %53 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds %"class.cc::XfermodePaintFilter", %"class.cc::XfermodePaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = select i1 %55, %struct.SkRect* null, %struct.SkRect* %56
  %58 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58)
  %59 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  %60 = call i8* @_Znwm(i64 80) #16, !noalias !145
  %61 = bitcast i8* %60 to %"class.cc::XfermodePaintFilter"*
  %62 = load i32, i32* %8, align 4, !noalias !145
  %63 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  %64 = bitcast %class.sk_sp.3* %6 to i64*
  %65 = load i64, i64* %64, align 8, !noalias !145
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %63, align 8, !noalias !145
  %66 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %65, i64* %66, align 8, !noalias !145
  %67 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %67, align 8, !noalias !145
  %68 = bitcast %class.sk_sp.3* %5 to i64*
  store i64 %52, i64* %68, align 8, !noalias !145
  call void @_ZN2cc19XfermodePaintFilterC2E11SkBlendMode5sk_spINS_11PaintFilterEES4_PK6SkRect(%"class.cc::XfermodePaintFilter"* nonnull %61, i32 %62, %class.sk_sp.3* nonnull %4, %class.sk_sp.3* nonnull %5, %struct.SkRect* %57) #14, !noalias !145
  %69 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  %70 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %69, align 8, !noalias !145
  %71 = icmp eq %"class.cc::PaintFilter"* %70, null
  br i1 %71, label %82, label %72

72:                                               ; preds = %51
  %73 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %70, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel, !noalias !145
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = bitcast %"class.cc::PaintFilter"* %70 to %class.SkRefCntBase*
  %78 = bitcast %"class.cc::PaintFilter"* %70 to void (%class.SkRefCntBase*)***
  %79 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %78, align 8, !noalias !145
  %80 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, i64 2
  %81 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, align 8, !noalias !145
  call void %81(%class.SkRefCntBase* nonnull %77) #14, !noalias !145
  br label %82

82:                                               ; preds = %76, %72, %51
  %83 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %84 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %83, align 8, !noalias !145
  %85 = icmp eq %"class.cc::PaintFilter"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %84, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel, !noalias !145
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %"class.cc::PaintFilter"* %84 to %class.SkRefCntBase*
  %92 = bitcast %"class.cc::PaintFilter"* %84 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8, !noalias !145
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8, !noalias !145
  call void %95(%class.SkRefCntBase* nonnull %91) #14, !noalias !145
  br label %96

96:                                               ; preds = %90, %86, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  %97 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %60, i8** %97, align 8
  %98 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %67, align 8
  %99 = icmp eq %"class.cc::PaintFilter"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %98, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = bitcast %"class.cc::PaintFilter"* %98 to %class.SkRefCntBase*
  %106 = bitcast %"class.cc::PaintFilter"* %98 to void (%class.SkRefCntBase*)***
  %107 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, i64 2
  %109 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, align 8
  call void %109(%class.SkRefCntBase* nonnull %105) #14
  br label %110

110:                                              ; preds = %96, %100, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  %111 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %63, align 8
  %112 = icmp eq %"class.cc::PaintFilter"* %111, null
  br i1 %112, label %123, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %111, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = bitcast %"class.cc::PaintFilter"* %111 to %class.SkRefCntBase*
  %119 = bitcast %"class.cc::PaintFilter"* %111 to void (%class.SkRefCntBase*)***
  %120 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %119, align 8
  %121 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, i64 2
  %122 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, align 8
  call void %122(%class.SkRefCntBase* nonnull %118) #14
  br label %123

123:                                              ; preds = %110, %113, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21ArithmeticPaintFilterC2Effffb5sk_spINS_11PaintFilterEES3_PK6SkRect(%"class.cc::ArithmeticPaintFilter"* nocapture, float, float, float, float, i1 zeroext, %class.sk_sp.3* nocapture, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %class.sk_sp, align 8
  %13 = alloca %"struct.SkImageFilters::CropRect", align 4
  %14 = zext i1 %5 to i8
  %15 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  %16 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %15, align 8
  %17 = icmp eq %"class.cc::PaintFilter"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %16, i64 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %18, %9
  %23 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  %24 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %23, align 8
  %25 = icmp eq %"class.cc::PaintFilter"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %24, i64 0, i32 4
  %28 = load i8, i8* %27, align 8, !range !2
  br label %29

29:                                               ; preds = %18, %26, %22
  %30 = phi i8 [ 1, %18 ], [ %28, %26 ], [ 0, %22 ]
  %31 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %31, align 4
  %32 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %33, align 8
  %34 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 8, i32* %34, align 8
  %35 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %30, i8* %36, align 8
  %37 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %37, align 4
  %38 = icmp eq %struct.SkRect* %8, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %29
  store i8 0, i8* %35, align 4
  %40 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %union.anon* %40 to i8*
  %42 = bitcast %struct.SkRect* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* nonnull align 4 %42, i64 16, i1 false) #14
  store i8 1, i8* %35, align 4
  br label %43

43:                                               ; preds = %29, %39
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21ArithmeticPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %44 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 1
  store float %1, float* %44, align 8
  %45 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 2
  store float %2, float* %45, align 4
  %46 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 3
  store float %3, float* %46, align 8
  %47 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 4
  store float %4, float* %47, align 4
  %48 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 5
  store i8 %14, i8* %48, align 8
  %49 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 6
  %50 = bitcast %class.sk_sp.3* %6 to i64*
  %51 = load i64, i64* %50, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %15, align 8
  %52 = bitcast %class.sk_sp.3* %49 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 7
  %54 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  %55 = bitcast %class.sk_sp.3* %7 to i64*
  %56 = load i64, i64* %55, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %54, align 8
  %57 = bitcast %class.sk_sp.3* %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %class.sk_sp* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #14
  %59 = load float, float* %44, align 8
  %60 = load float, float* %45, align 4
  %61 = load float, float* %46, align 8
  %62 = load float, float* %47, align 4
  %63 = load i8, i8* %48, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %49, i64 0, i32 0
  %66 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %65, align 8
  %67 = icmp eq %"class.cc::PaintFilter"* %66, null
  %68 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %69 = inttoptr i64 %56 to %"class.cc::PaintFilter"*
  br i1 %67, label %79, label %70

70:                                               ; preds = %43
  %71 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %66, i64 0, i32 1, i32 0
  %72 = load %class.SkImageFilter*, %class.SkImageFilter** %71, align 8, !noalias !148
  %73 = icmp eq %class.SkImageFilter* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 1 monotonic, !noalias !148
  %77 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %53, i64 0, i32 0
  %78 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %77, align 8
  br label %79

79:                                               ; preds = %43, %70, %74
  %80 = phi %"class.cc::PaintFilter"* [ %69, %70 ], [ %78, %74 ], [ %69, %43 ]
  %81 = phi %class.SkImageFilter* [ null, %70 ], [ %72, %74 ], [ null, %43 ]
  store %class.SkImageFilter* %81, %class.SkImageFilter** %68, align 8, !alias.scope !148
  %82 = icmp eq %"class.cc::PaintFilter"* %80, null
  %83 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  br i1 %82, label %91, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %80, i64 0, i32 1, i32 0
  %86 = load %class.SkImageFilter*, %class.SkImageFilter** %85, align 8, !noalias !151
  %87 = icmp eq %class.SkImageFilter* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %86, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 1 monotonic, !noalias !151
  br label %91

91:                                               ; preds = %79, %84, %88
  %92 = phi %class.SkImageFilter* [ null, %84 ], [ %86, %88 ], [ null, %79 ]
  store %class.SkImageFilter* %92, %class.SkImageFilter** %83, align 8, !alias.scope !151
  %93 = bitcast %"struct.SkImageFilters::CropRect"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #14
  %94 = select i1 %38, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %8
  %95 = bitcast %struct.SkRect* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %93, i8* align 4 %95, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters10ArithmeticEffffb5sk_spI13SkImageFilterES2_RKNS_8CropRectE(%class.sk_sp* nonnull sret %10, float %59, float %60, float %61, float %62, i1 zeroext %64, %class.sk_sp* nonnull %11, %class.sk_sp* nonnull %12, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %13) #14
  %96 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 1
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %98 = bitcast %class.sk_sp* %10 to i64*
  %99 = load i64, i64* %98, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %97, align 8
  %100 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %96, i64 0, i32 0
  %101 = load %class.SkImageFilter*, %class.SkImageFilter** %100, align 8
  %102 = bitcast %class.sk_sp* %96 to i64*
  store i64 %99, i64* %102, align 8
  %103 = icmp eq %class.SkImageFilter* %101, null
  br i1 %103, label %114, label %104

104:                                              ; preds = %91
  %105 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %101, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = bitcast %class.SkImageFilter* %101 to %class.SkRefCntBase*
  %110 = bitcast %class.SkImageFilter* %101 to void (%class.SkRefCntBase*)***
  %111 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, i64 2
  %113 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, align 8
  call void %113(%class.SkRefCntBase* nonnull %109) #14
  br label %114

114:                                              ; preds = %91, %104, %108
  %115 = load %class.SkImageFilter*, %class.SkImageFilter** %97, align 8
  %116 = icmp eq %class.SkImageFilter* %115, null
  br i1 %116, label %127, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %115, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %127

121:                                              ; preds = %117
  %122 = bitcast %class.SkImageFilter* %115 to %class.SkRefCntBase*
  %123 = bitcast %class.SkImageFilter* %115 to void (%class.SkRefCntBase*)***
  %124 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %123, align 8
  %125 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, i64 2
  %126 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, align 8
  call void %126(%class.SkRefCntBase* nonnull %122) #14
  br label %127

127:                                              ; preds = %114, %117, %121
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #14
  %128 = load %class.SkImageFilter*, %class.SkImageFilter** %83, align 8
  %129 = icmp eq %class.SkImageFilter* %128, null
  br i1 %129, label %140, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %128, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw add i32* %131, i32 -1 acq_rel
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %140

134:                                              ; preds = %130
  %135 = bitcast %class.SkImageFilter* %128 to %class.SkRefCntBase*
  %136 = bitcast %class.SkImageFilter* %128 to void (%class.SkRefCntBase*)***
  %137 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %136, align 8
  %138 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, i64 2
  %139 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, align 8
  call void %139(%class.SkRefCntBase* nonnull %135) #14
  br label %140

140:                                              ; preds = %127, %130, %134
  %141 = load %class.SkImageFilter*, %class.SkImageFilter** %68, align 8
  %142 = icmp eq %class.SkImageFilter* %141, null
  br i1 %142, label %153, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %141, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = bitcast %class.SkImageFilter* %141 to %class.SkRefCntBase*
  %149 = bitcast %class.SkImageFilter* %141 to void (%class.SkRefCntBase*)***
  %150 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, i64 2
  %152 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, align 8
  call void %152(%class.SkRefCntBase* nonnull %148) #14
  br label %153

153:                                              ; preds = %140, %143, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #14
  ret void
}

declare void @_ZN14SkImageFilters10ArithmeticEffffb5sk_spI13SkImageFilterES2_RKNS_8CropRectE(%class.sk_sp* sret, float, float, float, float, i1 zeroext, %class.sk_sp*, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21ArithmeticPaintFilterD2Ev(%"class.cc::ArithmeticPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21ArithmeticPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 6, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21ArithmeticPaintFilterD0Ev(%"class.cc::ArithmeticPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21ArithmeticPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 6, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %24, %20, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  %45 = bitcast %"class.cc::ArithmeticPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc21ArithmeticPaintFilter14SerializedSizeEv(%"class.cc::ArithmeticPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 25, i64 41
  %6 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 6, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %0, i64 0, i32 7, i32 0
  %22 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %21, align 8
  %23 = icmp eq %"class.cc::PaintFilter"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = bitcast %"class.cc::PaintFilter"* %22 to i64 (%"class.cc::PaintFilter"*)***
  %26 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %26, i64 3
  %28 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %27, align 8
  %29 = tail call i64 %28(%"class.cc::PaintFilter"* nonnull %22) #14
  %30 = add i64 %29, 4
  br label %31

31:                                               ; preds = %16, %24
  %32 = phi i64 [ %30, %24 ], [ 4, %16 ]
  br i1 %19, label %37, label %33

33:                                               ; preds = %31
  %34 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 %32) #14
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  br i1 %35, label %37, label %38, !prof !6

37:                                               ; preds = %31, %33
  br label %38

38:                                               ; preds = %33, %37
  %39 = phi i64 [ 0, %37 ], [ %36, %33 ]
  ret i64 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc21ArithmeticPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::ArithmeticPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = alloca %class.sk_sp.3, align 8
  %7 = alloca %class.sk_sp.3, align 8
  %8 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 4
  %12 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 5
  %13 = bitcast %class.sk_sp.3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 6, i32 0
  %15 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %14, align 8, !noalias !154
  %16 = icmp eq %"class.cc::PaintFilter"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %18, align 8, !alias.scope !154
  br label %32

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %15, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !2, !noalias !157
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !160
  %26 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* %15, %"class.cc::PaintFilter"** %26, align 8, !alias.scope !163
  br label %32

27:                                               ; preds = %19
  %28 = bitcast %"class.cc::PaintFilter"* %15 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %29 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %28, align 8, !noalias !157
  %30 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %29, i64 4
  %31 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %30, align 8, !noalias !157
  call void %31(%class.sk_sp.3* nonnull sret %6, %"class.cc::PaintFilter"* nonnull %15, %"class.cc::ImageProvider"* %2) #14
  br label %32

32:                                               ; preds = %17, %23, %27
  %33 = bitcast %class.sk_sp.3* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 7, i32 0
  %35 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %34, align 8, !noalias !164
  %36 = icmp eq %"class.cc::PaintFilter"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %38, align 8, !alias.scope !164
  br label %55

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %35, i64 0, i32 4
  %41 = load i8, i8* %40, align 8, !range !2, !noalias !167
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 1 monotonic, !noalias !170
  %46 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* %35, %"class.cc::PaintFilter"** %46, align 8, !alias.scope !173
  %47 = ptrtoint %"class.cc::PaintFilter"* %35 to i64
  br label %55

48:                                               ; preds = %39
  %49 = bitcast %"class.cc::PaintFilter"* %35 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %50 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %49, align 8, !noalias !167
  %51 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %50, i64 4
  %52 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %51, align 8, !noalias !167
  call void %52(%class.sk_sp.3* nonnull sret %7, %"class.cc::PaintFilter"* nonnull %35, %"class.cc::ImageProvider"* %2) #14
  %53 = bitcast %class.sk_sp.3* %7 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !174
  br label %55

55:                                               ; preds = %37, %43, %48
  %56 = phi i64 [ 0, %37 ], [ %47, %43 ], [ %54, %48 ]
  %57 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = icmp eq i8 %58, 0
  %60 = getelementptr inbounds %"class.cc::ArithmeticPaintFilter", %"class.cc::ArithmeticPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %61 = select i1 %59, %struct.SkRect* null, %struct.SkRect* %60
  %62 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = call i8* @_Znwm(i64 96) #16, !noalias !174
  %65 = bitcast i8* %64 to %"class.cc::ArithmeticPaintFilter"*
  %66 = load float, float* %8, align 4, !noalias !174
  %67 = load float, float* %9, align 4, !noalias !174
  %68 = load float, float* %10, align 4, !noalias !174
  %69 = load float, float* %11, align 4, !noalias !174
  %70 = load i8, i8* %12, align 1, !range !2, !noalias !174
  %71 = icmp ne i8 %70, 0
  %72 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  %73 = bitcast %class.sk_sp.3* %6 to i64*
  %74 = load i64, i64* %73, align 8, !noalias !174
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %72, align 8, !noalias !174
  %75 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %74, i64* %75, align 8, !noalias !174
  %76 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %76, align 8, !noalias !174
  %77 = bitcast %class.sk_sp.3* %5 to i64*
  store i64 %56, i64* %77, align 8, !noalias !174
  call void @_ZN2cc21ArithmeticPaintFilterC2Effffb5sk_spINS_11PaintFilterEES3_PK6SkRect(%"class.cc::ArithmeticPaintFilter"* nonnull %65, float %66, float %67, float %68, float %69, i1 zeroext %71, %class.sk_sp.3* nonnull %4, %class.sk_sp.3* nonnull %5, %struct.SkRect* %61) #14, !noalias !174
  %78 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  %79 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %78, align 8, !noalias !174
  %80 = icmp eq %"class.cc::PaintFilter"* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %55
  %82 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %79, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel, !noalias !174
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = bitcast %"class.cc::PaintFilter"* %79 to %class.SkRefCntBase*
  %87 = bitcast %"class.cc::PaintFilter"* %79 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8, !noalias !174
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8, !noalias !174
  call void %90(%class.SkRefCntBase* nonnull %86) #14, !noalias !174
  br label %91

91:                                               ; preds = %85, %81, %55
  %92 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %93 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %92, align 8, !noalias !174
  %94 = icmp eq %"class.cc::PaintFilter"* %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %93, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel, !noalias !174
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = bitcast %"class.cc::PaintFilter"* %93 to %class.SkRefCntBase*
  %101 = bitcast %"class.cc::PaintFilter"* %93 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8, !noalias !174
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8, !noalias !174
  call void %104(%class.SkRefCntBase* nonnull %100) #14, !noalias !174
  br label %105

105:                                              ; preds = %99, %95, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  %106 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %64, i8** %106, align 8
  %107 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %76, align 8
  %108 = icmp eq %"class.cc::PaintFilter"* %107, null
  br i1 %108, label %119, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %107, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %109
  %114 = bitcast %"class.cc::PaintFilter"* %107 to %class.SkRefCntBase*
  %115 = bitcast %"class.cc::PaintFilter"* %107 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8
  call void %118(%class.SkRefCntBase* nonnull %114) #14
  br label %119

119:                                              ; preds = %105, %109, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %120 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %72, align 8
  %121 = icmp eq %"class.cc::PaintFilter"* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %120, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = bitcast %"class.cc::PaintFilter"* %120 to %class.SkRefCntBase*
  %128 = bitcast %"class.cc::PaintFilter"* %120 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8
  call void %131(%class.SkRefCntBase* nonnull %127) #14
  br label %132

132:                                              ; preds = %119, %122, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc28MatrixConvolutionPaintFilterC2ERK7SkISizePKfffRK8SkIPoint10SkTileModeb5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::MatrixConvolutionPaintFilter"*, %struct.SkISize* nocapture readonly dereferenceable(8), float*, float, float, %struct.SkIPoint* nocapture readonly dereferenceable(8), i32, i1 zeroext, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %class.sk_sp, align 8
  %13 = alloca %"struct.SkImageFilters::CropRect", align 4
  %14 = zext i1 %7 to i8
  %15 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %8, i64 0, i32 0
  %16 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %15, align 8
  %17 = icmp eq %"class.cc::PaintFilter"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %16, i64 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2
  br label %21

21:                                               ; preds = %10, %18
  %22 = phi i8 [ %20, %18 ], [ 0, %10 ]
  %23 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %23, align 4
  %24 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %25, align 8
  %26 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 9, i32* %26, align 8
  %27 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %22, i8* %28, align 8
  %29 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %29, align 4
  %30 = icmp eq %struct.SkRect* %9, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %21
  store i8 0, i8* %27, align 4
  %32 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %union.anon* %32 to i8*
  %34 = bitcast %struct.SkRect* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* nonnull align 4 %34, i64 16, i1 false) #14
  store i8 1, i8* %27, align 4
  br label %35

35:                                               ; preds = %21, %31
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc28MatrixConvolutionPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %36 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 1
  %37 = bitcast %struct.SkISize* %1 to i64*
  %38 = bitcast %struct.SkISize* %36 to i64*
  %39 = load i64, i64* %37, align 4
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %40, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<float, 3>::Source"* %41, %"struct.base::StackAllocator<float, 3>::Source"** %43, align 8
  %44 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2
  %45 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 1
  %46 = bitcast %"class.std::__1::vector"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #14
  %47 = ptrtoint %"class.base::StackVector"* %40 to i64
  %48 = bitcast %"struct.std::__1::__compressed_pair_elem.9"* %45 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast float** %49 to i64*
  %51 = bitcast %"class.std::__1::vector"* %44 to i64*
  %52 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  %54 = icmp eq %"class.base::StackVector"* %40, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %35
  %56 = tail call i8* @_Znwm(i64 12) #16
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr inbounds i8, i8* %56, i64 12
  br label %60

59:                                               ; preds = %35
  store i8 1, i8* %42, align 4
  br label %60

60:                                               ; preds = %55, %59
  %61 = phi i8* [ %58, %55 ], [ %42, %59 ]
  %62 = phi i64 [ %57, %55 ], [ %47, %59 ]
  %63 = ptrtoint i8* %61 to i64
  store i64 %62, i64* %51, align 8
  store i64 %62, i64* %53, align 8
  store i64 %63, i64* %50, align 8
  %64 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 3
  store float %3, float* %64, align 8
  %65 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 4
  store float %4, float* %65, align 4
  %66 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 5
  %67 = bitcast %struct.SkIPoint* %5 to i64*
  %68 = bitcast %struct.SkIPoint* %66 to i64*
  %69 = load i64, i64* %67, align 4
  store i64 %69, i64* %68, align 8
  %70 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 6
  store i32 %6, i32* %70, align 8
  %71 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 7
  store i8 %14, i8* %71, align 4
  %72 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 8
  %73 = bitcast %class.sk_sp.3* %8 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %15, align 8
  %75 = bitcast %class.sk_sp.3* %72 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %36, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = mul nsw i64 %81, %78
  tail call void @_ZNSt3__16vectorIfN4base14StackAllocatorIfLm3EEEE7reserveEm(%"class.std::__1::vector"* %44, i64 %82)
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %152

84:                                               ; preds = %165, %60
  %85 = bitcast %class.sk_sp* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #14
  %86 = load float, float* %64, align 8
  %87 = load float, float* %65, align 4
  %88 = load i32, i32* %70, align 8
  %89 = load i8, i8* %71, align 4, !range !2
  %90 = icmp ne i8 %89, 0
  %91 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %72, i64 0, i32 0
  %92 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %91, align 8
  %93 = icmp eq %"class.cc::PaintFilter"* %92, null
  %94 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  br i1 %93, label %102, label %95

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %92, i64 0, i32 1, i32 0
  %97 = load %class.SkImageFilter*, %class.SkImageFilter** %96, align 8, !noalias !177
  %98 = icmp eq %class.SkImageFilter* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %97, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 1 monotonic, !noalias !177
  br label %102

102:                                              ; preds = %84, %95, %99
  %103 = phi %class.SkImageFilter* [ null, %95 ], [ %97, %99 ], [ null, %84 ]
  store %class.SkImageFilter* %103, %class.SkImageFilter** %94, align 8, !alias.scope !177
  %104 = bitcast %"struct.SkImageFilters::CropRect"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #14
  %105 = select i1 %30, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %9
  %106 = bitcast %struct.SkRect* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %104, i8* align 4 %106, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters17MatrixConvolutionERK7SkISizePKfffRK8SkIPoint10SkTileModeb5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %11, %struct.SkISize* dereferenceable(8) %36, float* %2, float %86, float %87, %struct.SkIPoint* dereferenceable(8) %66, i32 %88, i1 zeroext %90, %class.sk_sp* nonnull %12, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %13) #14
  %107 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 1
  %108 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %109 = bitcast %class.sk_sp* %11 to i64*
  %110 = load i64, i64* %109, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %108, align 8
  %111 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %107, i64 0, i32 0
  %112 = load %class.SkImageFilter*, %class.SkImageFilter** %111, align 8
  %113 = bitcast %class.sk_sp* %107 to i64*
  store i64 %110, i64* %113, align 8
  %114 = icmp eq %class.SkImageFilter* %112, null
  br i1 %114, label %125, label %115

115:                                              ; preds = %102
  %116 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %112, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 -1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %125

119:                                              ; preds = %115
  %120 = bitcast %class.SkImageFilter* %112 to %class.SkRefCntBase*
  %121 = bitcast %class.SkImageFilter* %112 to void (%class.SkRefCntBase*)***
  %122 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, i64 2
  %124 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, align 8
  call void %124(%class.SkRefCntBase* nonnull %120) #14
  br label %125

125:                                              ; preds = %102, %115, %119
  %126 = load %class.SkImageFilter*, %class.SkImageFilter** %108, align 8
  %127 = icmp eq %class.SkImageFilter* %126, null
  br i1 %127, label %138, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %126, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 -1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %138

132:                                              ; preds = %128
  %133 = bitcast %class.SkImageFilter* %126 to %class.SkRefCntBase*
  %134 = bitcast %class.SkImageFilter* %126 to void (%class.SkRefCntBase*)***
  %135 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %134, align 8
  %136 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %135, i64 2
  %137 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, align 8
  call void %137(%class.SkRefCntBase* nonnull %133) #14
  br label %138

138:                                              ; preds = %125, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #14
  %139 = load %class.SkImageFilter*, %class.SkImageFilter** %94, align 8
  %140 = icmp eq %class.SkImageFilter* %139, null
  br i1 %140, label %151, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %139, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw add i32* %142, i32 -1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %151

145:                                              ; preds = %141
  %146 = bitcast %class.SkImageFilter* %139 to %class.SkRefCntBase*
  %147 = bitcast %class.SkImageFilter* %139 to void (%class.SkRefCntBase*)***
  %148 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %147, align 8
  %149 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %148, i64 2
  %150 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, align 8
  call void %150(%class.SkRefCntBase* nonnull %146) #14
  br label %151

151:                                              ; preds = %138, %141, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #14
  ret void

152:                                              ; preds = %60, %165
  %153 = phi i64 [ %166, %165 ], [ 0, %60 ]
  %154 = getelementptr inbounds float, float* %2, i64 %153
  %155 = load float*, float** %52, align 8
  %156 = load float*, float** %49, align 8
  %157 = icmp eq float* %155, %156
  br i1 %157, label %164, label %158

158:                                              ; preds = %152
  %159 = bitcast float* %154 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = bitcast float* %155 to i32*
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds float, float* %155, i64 1
  %163 = ptrtoint float* %162 to i64
  store i64 %163, i64* %53, align 8
  br label %165

164:                                              ; preds = %152
  tail call void @_ZNSt3__16vectorIfN4base14StackAllocatorIfLm3EEEE21__push_back_slow_pathIRKfEEvOT_(%"class.std::__1::vector"* %44, float* dereferenceable(4) %154) #14
  br label %165

165:                                              ; preds = %158, %164
  %166 = add nuw i64 %153, 1
  %167 = icmp eq i64 %166, %82
  br i1 %167, label %84, label %152
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfN4base14StackAllocatorIfLm3EEEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to float*
  br i1 %10, label %12, label %240

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %15 = bitcast float** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %7
  %18 = ashr exact i64 %17, 2
  %19 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %13, i64 0, i32 0
  %20 = load %"struct.base::StackAllocator<float, 3>::Source"*, %"struct.base::StackAllocator<float, 3>::Source"** %19, align 8
  %21 = icmp eq %"struct.base::StackAllocator<float, 3>::Source"* %20, null
  %22 = inttoptr i64 %16 to float*
  br i1 %21, label %35, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.base::StackAllocator<float, 3>::Source", %"struct.base::StackAllocator<float, 3>::Source"* %20, i64 0, i32 1
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = icmp ult i64 %1, 4
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  store i8 1, i8* %24, align 4
  %30 = bitcast %"class.base::StackAllocator"* %13 to float**
  %31 = load float*, float** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %33 = load float*, float** %32, align 8
  %34 = load float*, float** %14, align 8
  br label %42

35:                                               ; preds = %23, %12
  %36 = icmp ugt i64 %1, 4611686018427387903
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #15
  unreachable

38:                                               ; preds = %35
  %39 = shl i64 %1, 2
  %40 = tail call i8* @_Znwm(i64 %39) #16
  %41 = bitcast i8* %40 to float*
  br label %42

42:                                               ; preds = %29, %38
  %43 = phi float* [ %34, %29 ], [ %22, %38 ]
  %44 = phi float* [ %33, %29 ], [ %11, %38 ]
  %45 = phi float* [ %31, %29 ], [ %41, %38 ]
  %46 = ptrtoint float* %44 to i64
  %47 = getelementptr inbounds float, float* %45, i64 %18
  %48 = ptrtoint float* %47 to i64
  %49 = getelementptr inbounds float, float* %45, i64 %1
  %50 = ptrtoint float* %49 to i64
  %51 = icmp eq float* %43, %44
  br i1 %51, label %225, label %52

52:                                               ; preds = %42
  %53 = getelementptr float, float* %43, i64 -1
  %54 = ptrtoint float* %53 to i64
  %55 = sub i64 %54, %46
  %56 = lshr i64 %55, 2
  %57 = add nuw nsw i64 %56, 1
  %58 = icmp ult i64 %57, 8
  br i1 %58, label %151, label %59

59:                                               ; preds = %52
  %60 = getelementptr float, float* %43, i64 -1
  %61 = ptrtoint float* %60 to i64
  %62 = sub i64 %61, %46
  %63 = lshr i64 %62, 2
  %64 = xor i64 %63, -1
  %65 = add nsw i64 %18, %64
  %66 = getelementptr float, float* %45, i64 %65
  %67 = xor i64 %63, -1
  %68 = getelementptr float, float* %43, i64 %67
  %69 = icmp ult float* %66, %43
  %70 = icmp ult float* %68, %47
  %71 = and i1 %69, %70
  br i1 %71, label %151, label %72

72:                                               ; preds = %59
  %73 = and i64 %57, 9223372036854775800
  %74 = sub nsw i64 0, %73
  %75 = getelementptr float, float* %47, i64 %74
  %76 = sub nsw i64 0, %73
  %77 = getelementptr float, float* %43, i64 %76
  %78 = add nsw i64 %73, -8
  %79 = lshr exact i64 %78, 3
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %78, 0
  br i1 %82, label %129, label %83

83:                                               ; preds = %72
  %84 = sub nuw nsw i64 %80, %81
  %85 = getelementptr float, float* %47, i64 -1
  %86 = getelementptr float, float* %43, i64 -1
  %87 = getelementptr float, float* %47, i64 -1
  %88 = getelementptr float, float* %43, i64 -1
  br label %89

89:                                               ; preds = %89, %83
  %90 = phi i64 [ 0, %83 ], [ %124, %89 ]
  %91 = phi i64 [ %84, %83 ], [ %125, %89 ]
  %92 = sub i64 0, %90
  %93 = sub i64 0, %90
  %94 = getelementptr inbounds float, float* %85, i64 %92
  %95 = getelementptr inbounds float, float* %86, i64 %93
  %96 = getelementptr inbounds float, float* %95, i64 -3
  %97 = bitcast float* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 4, !alias.scope !180
  %99 = getelementptr inbounds float, float* %95, i64 -4
  %100 = getelementptr inbounds float, float* %99, i64 -3
  %101 = bitcast float* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !180
  %103 = getelementptr inbounds float, float* %94, i64 -3
  %104 = bitcast float* %103 to <4 x i32>*
  store <4 x i32> %98, <4 x i32>* %104, align 4, !alias.scope !183, !noalias !180
  %105 = getelementptr inbounds float, float* %94, i64 -4
  %106 = getelementptr inbounds float, float* %105, i64 -3
  %107 = bitcast float* %106 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %107, align 4, !alias.scope !183, !noalias !180
  %108 = sub nuw nsw i64 -8, %90
  %109 = sub nuw nsw i64 -8, %90
  %110 = getelementptr inbounds float, float* %87, i64 %108
  %111 = getelementptr inbounds float, float* %88, i64 %109
  %112 = getelementptr inbounds float, float* %111, i64 -3
  %113 = bitcast float* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4, !alias.scope !180
  %115 = getelementptr inbounds float, float* %111, i64 -4
  %116 = getelementptr inbounds float, float* %115, i64 -3
  %117 = bitcast float* %116 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 4, !alias.scope !180
  %119 = getelementptr inbounds float, float* %110, i64 -3
  %120 = bitcast float* %119 to <4 x i32>*
  store <4 x i32> %114, <4 x i32>* %120, align 4, !alias.scope !183, !noalias !180
  %121 = getelementptr inbounds float, float* %110, i64 -4
  %122 = getelementptr inbounds float, float* %121, i64 -3
  %123 = bitcast float* %122 to <4 x i32>*
  store <4 x i32> %118, <4 x i32>* %123, align 4, !alias.scope !183, !noalias !180
  %124 = add i64 %90, 16
  %125 = add i64 %91, -2
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %89, !llvm.loop !185

127:                                              ; preds = %89
  %128 = sub nuw nsw i64 -16, %90
  br label %129

129:                                              ; preds = %127, %72
  %130 = phi i64 [ 0, %72 ], [ %128, %127 ]
  %131 = icmp eq i64 %81, 0
  br i1 %131, label %149, label %132

132:                                              ; preds = %129
  %133 = getelementptr float, float* %47, i64 -1
  %134 = getelementptr float, float* %43, i64 -1
  %135 = getelementptr inbounds float, float* %133, i64 %130
  %136 = getelementptr inbounds float, float* %134, i64 %130
  %137 = getelementptr inbounds float, float* %136, i64 -3
  %138 = bitcast float* %137 to <4 x i32>*
  %139 = load <4 x i32>, <4 x i32>* %138, align 4, !alias.scope !180
  %140 = getelementptr inbounds float, float* %136, i64 -4
  %141 = getelementptr inbounds float, float* %140, i64 -3
  %142 = bitcast float* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4, !alias.scope !180
  %144 = getelementptr inbounds float, float* %135, i64 -3
  %145 = bitcast float* %144 to <4 x i32>*
  store <4 x i32> %139, <4 x i32>* %145, align 4, !alias.scope !183, !noalias !180
  %146 = getelementptr inbounds float, float* %135, i64 -4
  %147 = getelementptr inbounds float, float* %146, i64 -3
  %148 = bitcast float* %147 to <4 x i32>*
  store <4 x i32> %143, <4 x i32>* %148, align 4, !alias.scope !183, !noalias !180
  br label %149

149:                                              ; preds = %129, %132
  %150 = icmp eq i64 %57, %73
  br i1 %150, label %221, label %151

151:                                              ; preds = %149, %59, %52
  %152 = phi float* [ %47, %59 ], [ %47, %52 ], [ %75, %149 ]
  %153 = phi float* [ %43, %59 ], [ %43, %52 ], [ %77, %149 ]
  %154 = getelementptr float, float* %153, i64 -1
  %155 = ptrtoint float* %154 to i64
  %156 = sub i64 %155, %46
  %157 = lshr i64 %156, 2
  %158 = add nuw nsw i64 %157, 1
  %159 = and i64 %158, 7
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %172, label %161

161:                                              ; preds = %151, %161
  %162 = phi float* [ %165, %161 ], [ %152, %151 ]
  %163 = phi float* [ %166, %161 ], [ %153, %151 ]
  %164 = phi i64 [ %170, %161 ], [ %159, %151 ]
  %165 = getelementptr inbounds float, float* %162, i64 -1
  %166 = getelementptr inbounds float, float* %163, i64 -1
  %167 = bitcast float* %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = bitcast float* %165 to i32*
  store i32 %168, i32* %169, align 4
  %170 = add i64 %164, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %161, !llvm.loop !187

172:                                              ; preds = %161, %151
  %173 = phi float* [ undef, %151 ], [ %165, %161 ]
  %174 = phi float* [ %152, %151 ], [ %165, %161 ]
  %175 = phi float* [ %153, %151 ], [ %166, %161 ]
  %176 = icmp ult i64 %156, 28
  br i1 %176, label %221, label %177

177:                                              ; preds = %172, %177
  %178 = phi float* [ %215, %177 ], [ %174, %172 ]
  %179 = phi float* [ %216, %177 ], [ %175, %172 ]
  %180 = getelementptr inbounds float, float* %178, i64 -1
  %181 = getelementptr inbounds float, float* %179, i64 -1
  %182 = bitcast float* %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = bitcast float* %180 to i32*
  store i32 %183, i32* %184, align 4
  %185 = getelementptr inbounds float, float* %178, i64 -2
  %186 = getelementptr inbounds float, float* %179, i64 -2
  %187 = bitcast float* %186 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = bitcast float* %185 to i32*
  store i32 %188, i32* %189, align 4
  %190 = getelementptr inbounds float, float* %178, i64 -3
  %191 = getelementptr inbounds float, float* %179, i64 -3
  %192 = bitcast float* %191 to i32*
  %193 = load i32, i32* %192, align 4
  %194 = bitcast float* %190 to i32*
  store i32 %193, i32* %194, align 4
  %195 = getelementptr inbounds float, float* %178, i64 -4
  %196 = getelementptr inbounds float, float* %179, i64 -4
  %197 = bitcast float* %196 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = bitcast float* %195 to i32*
  store i32 %198, i32* %199, align 4
  %200 = getelementptr inbounds float, float* %178, i64 -5
  %201 = getelementptr inbounds float, float* %179, i64 -5
  %202 = bitcast float* %201 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = bitcast float* %200 to i32*
  store i32 %203, i32* %204, align 4
  %205 = getelementptr inbounds float, float* %178, i64 -6
  %206 = getelementptr inbounds float, float* %179, i64 -6
  %207 = bitcast float* %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = bitcast float* %205 to i32*
  store i32 %208, i32* %209, align 4
  %210 = getelementptr inbounds float, float* %178, i64 -7
  %211 = getelementptr inbounds float, float* %179, i64 -7
  %212 = bitcast float* %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = bitcast float* %210 to i32*
  store i32 %213, i32* %214, align 4
  %215 = getelementptr inbounds float, float* %178, i64 -8
  %216 = getelementptr inbounds float, float* %179, i64 -8
  %217 = bitcast float* %216 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = bitcast float* %215 to i32*
  store i32 %218, i32* %219, align 4
  %220 = icmp eq float* %216, %44
  br i1 %220, label %221, label %177, !llvm.loop !189

221:                                              ; preds = %172, %177, %149
  %222 = phi float* [ %75, %149 ], [ %173, %172 ], [ %215, %177 ]
  %223 = ptrtoint float* %222 to i64
  %224 = load i64, i64* %6, align 8
  br label %225

225:                                              ; preds = %42, %221
  %226 = phi i64 [ %223, %221 ], [ %48, %42 ]
  %227 = phi i64 [ %224, %221 ], [ %46, %42 ]
  store i64 %226, i64* %6, align 8
  store i64 %48, i64* %15, align 8
  store i64 %50, i64* %4, align 8
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %240, label %229

229:                                              ; preds = %225
  %230 = inttoptr i64 %227 to float*
  %231 = load %"struct.base::StackAllocator<float, 3>::Source"*, %"struct.base::StackAllocator<float, 3>::Source"** %19, align 8
  %232 = icmp ne %"struct.base::StackAllocator<float, 3>::Source"* %231, null
  %233 = bitcast %"struct.base::StackAllocator<float, 3>::Source"* %231 to float*
  %234 = icmp eq float* %230, %233
  %235 = and i1 %232, %234
  br i1 %235, label %236, label %238

236:                                              ; preds = %229
  %237 = getelementptr inbounds %"struct.base::StackAllocator<float, 3>::Source", %"struct.base::StackAllocator<float, 3>::Source"* %231, i64 0, i32 1
  store i8 0, i8* %237, align 4
  br label %240

238:                                              ; preds = %229
  %239 = inttoptr i64 %227 to i8*
  tail call void @_ZdlPv(i8* %239) #16
  br label %240

240:                                              ; preds = %238, %236, %225, %2
  ret void
}

declare void @_ZN14SkImageFilters17MatrixConvolutionERK7SkISizePKfffRK8SkIPoint10SkTileModeb5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %struct.SkISize* dereferenceable(8), float*, float, float, %struct.SkIPoint* dereferenceable(8), i32, i1 zeroext, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc28MatrixConvolutionPaintFilterD2Ev(%"class.cc::MatrixConvolutionPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc28MatrixConvolutionPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %18 = load float*, float** %17, align 8
  %19 = icmp eq float* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = ptrtoint float* %18 to i64
  %22 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1
  %23 = bitcast float** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %25 = load %"struct.base::StackAllocator<float, 3>::Source"*, %"struct.base::StackAllocator<float, 3>::Source"** %24, align 8
  %26 = icmp ne %"struct.base::StackAllocator<float, 3>::Source"* %25, null
  %27 = bitcast %"struct.base::StackAllocator<float, 3>::Source"* %25 to float*
  %28 = icmp eq float* %18, %27
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"struct.base::StackAllocator<float, 3>::Source", %"struct.base::StackAllocator<float, 3>::Source"* %25, i64 0, i32 1
  store i8 0, i8* %31, align 4
  br label %34

32:                                               ; preds = %20
  %33 = bitcast float* %18 to i8*
  tail call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %16, %30, %32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %35 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %36 = load %class.SkImageFilter*, %class.SkImageFilter** %35, align 8
  %37 = icmp eq %class.SkImageFilter* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %class.SkImageFilter* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkImageFilter* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  tail call void %47(%class.SkRefCntBase* nonnull %43) #14
  br label %48

48:                                               ; preds = %34, %38, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc28MatrixConvolutionPaintFilterD0Ev(%"class.cc::MatrixConvolutionPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc28MatrixConvolutionPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %18 = load float*, float** %17, align 8
  %19 = icmp eq float* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = ptrtoint float* %18 to i64
  %22 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1
  %23 = bitcast float** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %25 = load %"struct.base::StackAllocator<float, 3>::Source"*, %"struct.base::StackAllocator<float, 3>::Source"** %24, align 8
  %26 = icmp ne %"struct.base::StackAllocator<float, 3>::Source"* %25, null
  %27 = bitcast %"struct.base::StackAllocator<float, 3>::Source"* %25 to float*
  %28 = icmp eq float* %18, %27
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"struct.base::StackAllocator<float, 3>::Source", %"struct.base::StackAllocator<float, 3>::Source"* %25, i64 0, i32 1
  store i8 0, i8* %31, align 4
  br label %34

32:                                               ; preds = %20
  %33 = bitcast float* %18 to i8*
  tail call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %32, %30, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %35 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %36 = load %class.SkImageFilter*, %class.SkImageFilter** %35, align 8
  %37 = icmp eq %class.SkImageFilter* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %class.SkImageFilter* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkImageFilter* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  tail call void %47(%class.SkRefCntBase* nonnull %43) #14
  br label %48

48:                                               ; preds = %34, %38, %42
  %49 = bitcast %"class.cc::MatrixConvolutionPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %49) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc28MatrixConvolutionPaintFilter14SerializedSizeEv(%"class.cc::MatrixConvolutionPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 24, i64 40
  %6 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2
  %7 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1
  %8 = bitcast float** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %9, 21
  %13 = sub i64 %12, %11
  %14 = add i64 %13, %5
  %15 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %0, i64 0, i32 8, i32 0
  %16 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %15, align 8
  %17 = icmp eq %"class.cc::PaintFilter"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.cc::PaintFilter"* %16 to i64 (%"class.cc::PaintFilter"*)***
  %20 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %20, i64 3
  %22 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %21, align 8
  %23 = tail call i64 %22(%"class.cc::PaintFilter"* nonnull %16) #14
  %24 = add i64 %23, 4
  br label %25

25:                                               ; preds = %1, %18
  %26 = phi i64 [ %24, %18 ], [ 4, %1 ]
  %27 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %14, i64 %26) #14
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  %30 = select i1 %28, i64 0, i64 %29, !prof !6
  ret i64 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc28MatrixConvolutionPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::MatrixConvolutionPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %8 = load float*, float** %7, align 8
  %9 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 3
  %10 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 4
  %11 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 7
  %14 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 8, i32 0
  %16 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %15, align 8, !noalias !190
  %17 = icmp eq %"class.cc::PaintFilter"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %19, align 8, !alias.scope !190
  br label %36

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %16, i64 0, i32 4
  %22 = load i8, i8* %21, align 8, !range !2, !noalias !193
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic, !noalias !196
  %27 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %16, %"class.cc::PaintFilter"** %27, align 8, !alias.scope !199
  %28 = ptrtoint %"class.cc::PaintFilter"* %16 to i64
  br label %36

29:                                               ; preds = %20
  %30 = bitcast %"class.cc::PaintFilter"* %16 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %31 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %30, align 8, !noalias !193
  %32 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %31, i64 4
  %33 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %32, align 8, !noalias !193
  call void %33(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %16, %"class.cc::ImageProvider"* %2) #14
  %34 = bitcast %class.sk_sp.3* %5 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !200
  br label %36

36:                                               ; preds = %18, %24, %29
  %37 = phi i64 [ 0, %18 ], [ %28, %24 ], [ %35, %29 ]
  %38 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.cc::MatrixConvolutionPaintFilter", %"class.cc::MatrixConvolutionPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = select i1 %40, %struct.SkRect* null, %struct.SkRect* %41
  %43 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = call i8* @_Znwm(i64 152) #16, !noalias !200
  %45 = bitcast i8* %44 to %"class.cc::MatrixConvolutionPaintFilter"*
  %46 = load float, float* %9, align 4, !noalias !200
  %47 = load float, float* %10, align 4, !noalias !200
  %48 = load i32, i32* %12, align 4, !noalias !200
  %49 = load i8, i8* %13, align 1, !range !2, !noalias !200
  %50 = icmp ne i8 %49, 0
  %51 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %51, align 8, !noalias !200
  %52 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %37, i64* %52, align 8, !noalias !200
  call void @_ZN2cc28MatrixConvolutionPaintFilterC2ERK7SkISizePKfffRK8SkIPoint10SkTileModeb5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::MatrixConvolutionPaintFilter"* nonnull %45, %struct.SkISize* dereferenceable(8) %6, float* %8, float %46, float %47, %struct.SkIPoint* dereferenceable(8) %11, i32 %48, i1 zeroext %50, %class.sk_sp.3* nonnull %4, %struct.SkRect* %42) #14, !noalias !200
  %53 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %54 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %53, align 8, !noalias !200
  %55 = icmp eq %"class.cc::PaintFilter"* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %36
  %57 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %54, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel, !noalias !200
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %"class.cc::PaintFilter"* %54 to %class.SkRefCntBase*
  %62 = bitcast %"class.cc::PaintFilter"* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8, !noalias !200
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8, !noalias !200
  call void %65(%class.SkRefCntBase* nonnull %61) #14, !noalias !200
  br label %66

66:                                               ; preds = %60, %56, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  %67 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %44, i8** %67, align 8
  %68 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %51, align 8
  %69 = icmp eq %"class.cc::PaintFilter"* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %68, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %"class.cc::PaintFilter"* %68 to %class.SkRefCntBase*
  %76 = bitcast %"class.cc::PaintFilter"* %68 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  call void %79(%class.SkRefCntBase* nonnull %75) #14
  br label %80

80:                                               ; preds = %66, %70, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc32DisplacementMapEffectPaintFilterC2E14SkColorChannelS1_f5sk_spINS_11PaintFilterEES4_PK6SkRect(%"class.cc::DisplacementMapEffectPaintFilter"* nocapture, i32, i32, float, %class.sk_sp.3* nocapture, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = alloca %class.sk_sp, align 8
  %11 = alloca %"struct.SkImageFilters::CropRect", align 4
  %12 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %13 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %12, align 8
  %14 = icmp eq %"class.cc::PaintFilter"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %13, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %15, %7
  %20 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  %21 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %20, align 8
  %22 = icmp eq %"class.cc::PaintFilter"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %21, i64 0, i32 4
  %25 = load i8, i8* %24, align 8, !range !2
  br label %26

26:                                               ; preds = %15, %23, %19
  %27 = phi i8 [ 1, %15 ], [ %25, %23 ], [ 0, %19 ]
  %28 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %30, align 8
  %31 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 10, i32* %31, align 8
  %32 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %27, i8* %33, align 8
  %34 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %34, align 4
  %35 = icmp eq %struct.SkRect* %6, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %26
  store i8 0, i8* %32, align 4
  %37 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %union.anon* %37 to i8*
  %39 = bitcast %struct.SkRect* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* nonnull align 4 %39, i64 16, i1 false) #14
  store i8 1, i8* %32, align 4
  br label %40

40:                                               ; preds = %26, %36
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc32DisplacementMapEffectPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %41 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 1
  store i32 %1, i32* %41, align 8
  %42 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 2
  store i32 %2, i32* %42, align 4
  %43 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 3
  store float %3, float* %43, align 8
  %44 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 4
  %45 = bitcast %class.sk_sp.3* %4 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %12, align 8
  %47 = bitcast %class.sk_sp.3* %44 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 5
  %49 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  %50 = bitcast %class.sk_sp.3* %5 to i64*
  %51 = load i64, i64* %50, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %49, align 8
  %52 = bitcast %class.sk_sp.3* %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14
  %54 = load i32, i32* %41, align 8
  %55 = load i32, i32* %42, align 4
  %56 = load float, float* %43, align 8
  %57 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %44, i64 0, i32 0
  %58 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %57, align 8
  %59 = icmp eq %"class.cc::PaintFilter"* %58, null
  %60 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %61 = inttoptr i64 %51 to %"class.cc::PaintFilter"*
  br i1 %59, label %71, label %62

62:                                               ; preds = %40
  %63 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %58, i64 0, i32 1, i32 0
  %64 = load %class.SkImageFilter*, %class.SkImageFilter** %63, align 8, !noalias !203
  %65 = icmp eq %class.SkImageFilter* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 1 monotonic, !noalias !203
  %69 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %48, i64 0, i32 0
  %70 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %69, align 8
  br label %71

71:                                               ; preds = %40, %62, %66
  %72 = phi %"class.cc::PaintFilter"* [ %61, %62 ], [ %70, %66 ], [ %61, %40 ]
  %73 = phi %class.SkImageFilter* [ null, %62 ], [ %64, %66 ], [ null, %40 ]
  store %class.SkImageFilter* %73, %class.SkImageFilter** %60, align 8, !alias.scope !203
  %74 = icmp eq %"class.cc::PaintFilter"* %72, null
  %75 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  br i1 %74, label %83, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %72, i64 0, i32 1, i32 0
  %78 = load %class.SkImageFilter*, %class.SkImageFilter** %77, align 8, !noalias !206
  %79 = icmp eq %class.SkImageFilter* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %78, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 1 monotonic, !noalias !206
  br label %83

83:                                               ; preds = %71, %76, %80
  %84 = phi %class.SkImageFilter* [ null, %76 ], [ %78, %80 ], [ null, %71 ]
  store %class.SkImageFilter* %84, %class.SkImageFilter** %75, align 8, !alias.scope !206
  %85 = bitcast %"struct.SkImageFilters::CropRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #14
  %86 = select i1 %35, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %6
  %87 = bitcast %struct.SkRect* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %85, i8* align 4 %87, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters15DisplacementMapE14SkColorChannelS0_f5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp* nonnull sret %8, i32 %54, i32 %55, float %56, %class.sk_sp* nonnull %9, %class.sk_sp* nonnull %10, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %11) #14
  %88 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 1
  %89 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %90 = bitcast %class.sk_sp* %8 to i64*
  %91 = load i64, i64* %90, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %89, align 8
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %88, i64 0, i32 0
  %93 = load %class.SkImageFilter*, %class.SkImageFilter** %92, align 8
  %94 = bitcast %class.sk_sp* %88 to i64*
  store i64 %91, i64* %94, align 8
  %95 = icmp eq %class.SkImageFilter* %93, null
  br i1 %95, label %106, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = bitcast %class.SkImageFilter* %93 to %class.SkRefCntBase*
  %102 = bitcast %class.SkImageFilter* %93 to void (%class.SkRefCntBase*)***
  %103 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, i64 2
  %105 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, align 8
  call void %105(%class.SkRefCntBase* nonnull %101) #14
  br label %106

106:                                              ; preds = %83, %96, %100
  %107 = load %class.SkImageFilter*, %class.SkImageFilter** %89, align 8
  %108 = icmp eq %class.SkImageFilter* %107, null
  br i1 %108, label %119, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %107, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %109
  %114 = bitcast %class.SkImageFilter* %107 to %class.SkRefCntBase*
  %115 = bitcast %class.SkImageFilter* %107 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8
  call void %118(%class.SkRefCntBase* nonnull %114) #14
  br label %119

119:                                              ; preds = %106, %109, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #14
  %120 = load %class.SkImageFilter*, %class.SkImageFilter** %75, align 8
  %121 = icmp eq %class.SkImageFilter* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %120, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = bitcast %class.SkImageFilter* %120 to %class.SkRefCntBase*
  %128 = bitcast %class.SkImageFilter* %120 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8
  call void %131(%class.SkRefCntBase* nonnull %127) #14
  br label %132

132:                                              ; preds = %119, %122, %126
  %133 = load %class.SkImageFilter*, %class.SkImageFilter** %60, align 8
  %134 = icmp eq %class.SkImageFilter* %133, null
  br i1 %134, label %145, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %133, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 -1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = bitcast %class.SkImageFilter* %133 to %class.SkRefCntBase*
  %141 = bitcast %class.SkImageFilter* %133 to void (%class.SkRefCntBase*)***
  %142 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %141, align 8
  %143 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %142, i64 2
  %144 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, align 8
  call void %144(%class.SkRefCntBase* nonnull %140) #14
  br label %145

145:                                              ; preds = %132, %135, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  ret void
}

declare void @_ZN14SkImageFilters15DisplacementMapE14SkColorChannelS0_f5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp* sret, i32, i32, float, %class.sk_sp*, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc32DisplacementMapEffectPaintFilterD2Ev(%"class.cc::DisplacementMapEffectPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc32DisplacementMapEffectPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 4, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc32DisplacementMapEffectPaintFilterD0Ev(%"class.cc::DisplacementMapEffectPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc32DisplacementMapEffectPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 4, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %24, %20, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkImageFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkImageFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #14
  br label %44

44:                                               ; preds = %30, %34, %38
  %45 = bitcast %"class.cc::DisplacementMapEffectPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc32DisplacementMapEffectPaintFilter14SerializedSizeEv(%"class.cc::DisplacementMapEffectPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 20, i64 36
  %6 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 4, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %0, i64 0, i32 5, i32 0
  %22 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %21, align 8
  %23 = icmp eq %"class.cc::PaintFilter"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = bitcast %"class.cc::PaintFilter"* %22 to i64 (%"class.cc::PaintFilter"*)***
  %26 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %26, i64 3
  %28 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %27, align 8
  %29 = tail call i64 %28(%"class.cc::PaintFilter"* nonnull %22) #14
  %30 = add i64 %29, 4
  br label %31

31:                                               ; preds = %16, %24
  %32 = phi i64 [ %30, %24 ], [ 4, %16 ]
  br i1 %19, label %37, label %33

33:                                               ; preds = %31
  %34 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 %32) #14
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  br i1 %35, label %37, label %38, !prof !6

37:                                               ; preds = %31, %33
  br label %38

38:                                               ; preds = %33, %37
  %39 = phi i64 [ 0, %37 ], [ %36, %33 ]
  ret i64 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc32DisplacementMapEffectPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::DisplacementMapEffectPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = alloca %class.sk_sp.3, align 8
  %7 = alloca %class.sk_sp.3, align 8
  %8 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 3
  %11 = bitcast %class.sk_sp.3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 4, i32 0
  %13 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %12, align 8, !noalias !209
  %14 = icmp eq %"class.cc::PaintFilter"* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %16, align 8, !alias.scope !209
  br label %30

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %13, i64 0, i32 4
  %19 = load i8, i8* %18, align 8, !range !2, !noalias !212
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic, !noalias !215
  %24 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* %13, %"class.cc::PaintFilter"** %24, align 8, !alias.scope !218
  br label %30

25:                                               ; preds = %17
  %26 = bitcast %"class.cc::PaintFilter"* %13 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %27 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %26, align 8, !noalias !212
  %28 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %27, i64 4
  %29 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %28, align 8, !noalias !212
  call void %29(%class.sk_sp.3* nonnull sret %6, %"class.cc::PaintFilter"* nonnull %13, %"class.cc::ImageProvider"* %2) #14
  br label %30

30:                                               ; preds = %15, %21, %25
  %31 = bitcast %class.sk_sp.3* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 5, i32 0
  %33 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %32, align 8, !noalias !219
  %34 = icmp eq %"class.cc::PaintFilter"* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %36, align 8, !alias.scope !219
  br label %53

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %33, i64 0, i32 4
  %39 = load i8, i8* %38, align 8, !range !2, !noalias !222
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 1 monotonic, !noalias !225
  %44 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* %33, %"class.cc::PaintFilter"** %44, align 8, !alias.scope !228
  %45 = ptrtoint %"class.cc::PaintFilter"* %33 to i64
  br label %53

46:                                               ; preds = %37
  %47 = bitcast %"class.cc::PaintFilter"* %33 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %48 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %47, align 8, !noalias !222
  %49 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %48, i64 4
  %50 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %49, align 8, !noalias !222
  call void %50(%class.sk_sp.3* nonnull sret %7, %"class.cc::PaintFilter"* nonnull %33, %"class.cc::ImageProvider"* %2) #14
  %51 = bitcast %class.sk_sp.3* %7 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !229
  br label %53

53:                                               ; preds = %35, %41, %46
  %54 = phi i64 [ 0, %35 ], [ %45, %41 ], [ %52, %46 ]
  %55 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = icmp eq i8 %56, 0
  %58 = getelementptr inbounds %"class.cc::DisplacementMapEffectPaintFilter", %"class.cc::DisplacementMapEffectPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = select i1 %57, %struct.SkRect* null, %struct.SkRect* %58
  %60 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  %61 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  %62 = call i8* @_Znwm(i64 88) #16, !noalias !229
  %63 = bitcast i8* %62 to %"class.cc::DisplacementMapEffectPaintFilter"*
  %64 = load i32, i32* %8, align 4, !noalias !229
  %65 = load i32, i32* %9, align 4, !noalias !229
  %66 = load float, float* %10, align 4, !noalias !229
  %67 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  %68 = bitcast %class.sk_sp.3* %6 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !229
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %67, align 8, !noalias !229
  %70 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %69, i64* %70, align 8, !noalias !229
  %71 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %71, align 8, !noalias !229
  %72 = bitcast %class.sk_sp.3* %5 to i64*
  store i64 %54, i64* %72, align 8, !noalias !229
  call void @_ZN2cc32DisplacementMapEffectPaintFilterC2E14SkColorChannelS1_f5sk_spINS_11PaintFilterEES4_PK6SkRect(%"class.cc::DisplacementMapEffectPaintFilter"* nonnull %63, i32 %64, i32 %65, float %66, %class.sk_sp.3* nonnull %4, %class.sk_sp.3* nonnull %5, %struct.SkRect* %59) #14, !noalias !229
  %73 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  %74 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %73, align 8, !noalias !229
  %75 = icmp eq %"class.cc::PaintFilter"* %74, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %53
  %77 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %74, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel, !noalias !229
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %"class.cc::PaintFilter"* %74 to %class.SkRefCntBase*
  %82 = bitcast %"class.cc::PaintFilter"* %74 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8, !noalias !229
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8, !noalias !229
  call void %85(%class.SkRefCntBase* nonnull %81) #14, !noalias !229
  br label %86

86:                                               ; preds = %80, %76, %53
  %87 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %88 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %87, align 8, !noalias !229
  %89 = icmp eq %"class.cc::PaintFilter"* %88, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %88, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel, !noalias !229
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %100

94:                                               ; preds = %90
  %95 = bitcast %"class.cc::PaintFilter"* %88 to %class.SkRefCntBase*
  %96 = bitcast %"class.cc::PaintFilter"* %88 to void (%class.SkRefCntBase*)***
  %97 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %96, align 8, !noalias !229
  %98 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, i64 2
  %99 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, align 8, !noalias !229
  call void %99(%class.SkRefCntBase* nonnull %95) #14, !noalias !229
  br label %100

100:                                              ; preds = %94, %90, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %101 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %62, i8** %101, align 8
  %102 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %71, align 8
  %103 = icmp eq %"class.cc::PaintFilter"* %102, null
  br i1 %103, label %114, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %102, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = bitcast %"class.cc::PaintFilter"* %102 to %class.SkRefCntBase*
  %110 = bitcast %"class.cc::PaintFilter"* %102 to void (%class.SkRefCntBase*)***
  %111 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, i64 2
  %113 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, align 8
  call void %113(%class.SkRefCntBase* nonnull %109) #14
  br label %114

114:                                              ; preds = %100, %104, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  %115 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %67, align 8
  %116 = icmp eq %"class.cc::PaintFilter"* %115, null
  br i1 %116, label %127, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %115, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %127

121:                                              ; preds = %117
  %122 = bitcast %"class.cc::PaintFilter"* %115 to %class.SkRefCntBase*
  %123 = bitcast %"class.cc::PaintFilter"* %115 to void (%class.SkRefCntBase*)***
  %124 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %123, align 8
  %125 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, i64 2
  %126 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, align 8
  call void %126(%class.SkRefCntBase* nonnull %122) #14
  br label %127

127:                                              ; preds = %114, %117, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ImagePaintFilterC2ENS_10PaintImageERK6SkRectS4_15SkFilterQuality(%"class.cc::ImagePaintFilter"*, %"class.cc::PaintImage"*, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkSamplingOptions, align 4
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp.10, align 8
  %9 = tail call zeroext i1 @_ZNK2cc10PaintImage15IsTextureBackedEv(%"class.cc::PaintImage"* %1) #14
  %10 = xor i1 %9, true
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %14, align 8
  %15 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 11, i32* %15, align 8
  %16 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %11, i8* %17, align 8
  %18 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc16ImagePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %19 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 1
  tail call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* %19, %"class.cc::PaintImage"* dereferenceable(104) %1) #14
  %20 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 2
  %21 = bitcast %struct.SkRect* %20 to i8*
  %22 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 3
  %24 = bitcast %struct.SkRect* %23 to i8*
  %25 = bitcast %struct.SkRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 4 %25, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 4
  store i32 %4, i32* %26, align 8
  %27 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %27) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const.ImagePaintFilter.sampling, i64 0, i32 0), i64 20, i1 false)
  call void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* nonnull sret %6, i32 %4) #14
  %28 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %29 = call dereferenceable(8) %class.sk_sp.10* @_ZNK2cc10PaintImage10GetSkImageEv(%"class.cc::PaintImage"* %19) #14
  %30 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %8, i64 0, i32 0
  %31 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %29, i64 0, i32 0
  %32 = load %class.SkImage*, %class.SkImage** %31, align 8
  %33 = icmp eq %class.SkImage* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %5
  %35 = getelementptr inbounds %class.SkImage, %class.SkImage* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %5, %34
  store %class.SkImage* %32, %class.SkImage** %30, align 8
  call void @_ZN14SkImageFilters5ImageE5sk_spI7SkImageERK6SkRectS5_RK17SkSamplingOptions(%class.sk_sp* nonnull sret %7, %class.sk_sp.10* nonnull %8, %struct.SkRect* dereferenceable(16) %20, %struct.SkRect* dereferenceable(16) %23, %struct.SkSamplingOptions* nonnull dereferenceable(20) %6) #14
  %38 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %40 = bitcast %class.sk_sp* %7 to i64*
  %41 = load i64, i64* %40, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %39, align 8
  %42 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %38, i64 0, i32 0
  %43 = load %class.SkImageFilter*, %class.SkImageFilter** %42, align 8
  %44 = bitcast %class.sk_sp* %38 to i64*
  store i64 %41, i64* %44, align 8
  %45 = icmp eq %class.SkImageFilter* %43, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkImageFilter* %43 to %class.SkRefCntBase*
  %52 = bitcast %class.SkImageFilter* %43 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #14
  br label %56

56:                                               ; preds = %37, %46, %50
  %57 = load %class.SkImageFilter*, %class.SkImageFilter** %39, align 8
  %58 = icmp eq %class.SkImageFilter* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %class.SkImageFilter* %57 to %class.SkRefCntBase*
  %65 = bitcast %class.SkImageFilter* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8
  call void %68(%class.SkRefCntBase* nonnull %64) #14
  br label %69

69:                                               ; preds = %56, %59, %63
  %70 = load %class.SkImage*, %class.SkImage** %30, align 8
  %71 = icmp eq %class.SkImage* %70, null
  br i1 %71, label %82, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %class.SkImage, %class.SkImage* %70, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = bitcast %class.SkImage* %70 to %class.SkRefCntBase*
  %78 = bitcast %class.SkImage* %70 to void (%class.SkRefCntBase*)***
  %79 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, i64 2
  %81 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, align 8
  call void %81(%class.SkRefCntBase* nonnull %77) #14
  br label %82

82:                                               ; preds = %69, %72, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %27) #14
  ret void
}

declare zeroext i1 @_ZNK2cc10PaintImage15IsTextureBackedEv(%"class.cc::PaintImage"*) local_unnamed_addr #5

declare void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #5

declare void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* sret, i32) local_unnamed_addr #5

declare void @_ZN14SkImageFilters5ImageE5sk_spI7SkImageERK6SkRectS5_RK17SkSamplingOptions(%class.sk_sp* sret, %class.sk_sp.10*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20)) local_unnamed_addr #5

declare dereferenceable(8) %class.sk_sp.10* @_ZNK2cc10PaintImage10GetSkImageEv(%"class.cc::PaintImage"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ImagePaintFilterD2Ev(%"class.cc::ImagePaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc16ImagePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 1
  tail call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* %3) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load %class.SkImageFilter*, %class.SkImageFilter** %4, align 8
  %6 = icmp eq %class.SkImageFilter* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = bitcast %class.SkImageFilter* %5 to %class.SkRefCntBase*
  %13 = bitcast %class.SkImageFilter* %5 to void (%class.SkRefCntBase*)***
  %14 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, i64 2
  %16 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, align 8
  tail call void %16(%class.SkRefCntBase* nonnull %12) #14
  br label %17

17:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ImagePaintFilterD0Ev(%"class.cc::ImagePaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc16ImagePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 1
  tail call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* %3) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load %class.SkImageFilter*, %class.SkImageFilter** %4, align 8
  %6 = icmp eq %class.SkImageFilter* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = bitcast %class.SkImageFilter* %5 to %class.SkRefCntBase*
  %13 = bitcast %class.SkImageFilter* %5 to void (%class.SkRefCntBase*)***
  %14 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, i64 2
  %16 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, align 8
  tail call void %16(%class.SkRefCntBase* nonnull %12) #14
  br label %17

17:                                               ; preds = %1, %7, %11
  %18 = bitcast %"class.cc::ImagePaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc16ImagePaintFilter14SerializedSizeEv(%"class.cc::ImagePaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 44, i64 60
  %6 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %0, i64 0, i32 1
  %7 = tail call i64 @_ZN2cc13PaintOpWriter12GetImageSizeERKNS_10PaintImageE(%"class.cc::PaintImage"* dereferenceable(104) %6) #14
  %8 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %7) #14
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  %11 = select i1 %9, i64 0, i64 %10, !prof !6
  ret i64 %11
}

declare i64 @_ZN2cc13PaintOpWriter12GetImageSizeERKNS_10PaintImageE(%"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16ImagePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::ImagePaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::PaintImage", align 8
  %5 = alloca %"class.cc::DrawImage", align 8
  %6 = alloca %"class.cc::PaintImage", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = alloca %class.SkM44, align 4
  %10 = alloca %"class.absl::optional.77", align 8
  %11 = alloca %"class.absl::optional.82", align 4
  %12 = alloca %"class.cc::ImageProvider::ScopedResult", align 8
  %13 = alloca %"class.cc::PaintImage", align 8
  %14 = alloca %"class.cc::PaintImageBuilder", align 8
  %15 = bitcast %"class.cc::DrawImage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %15) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 bitcast (<{ { %class.sk_sp.10, %class.sk_sp.17, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.21, %class.sk_sp.29, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.10, %class.scoped_refptr }, i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.81 } } } }, { { { { i8, [3 x i8], %union.anon.86 } } } }, float, [4 x i8] }>* @__const._ZNK2cc16ImagePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE.draw_image to i8*), i64 240, i1 false)
  %16 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 1
  call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* nonnull %6, %"class.cc::PaintImage"* dereferenceable(104) %16) #14
  %17 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #14
  %18 = call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %16) #14
  %19 = call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %16) #14
  %20 = zext i32 %19 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %18 to i64
  %23 = or i64 %21, %22
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = bitcast %class.SkM44* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %28) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #14
  %29 = getelementptr inbounds %"class.absl::optional.77", %"class.absl::optional.77"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.absl::optional.82", %"class.absl::optional.82"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #14
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"class.absl::optional.82", %"class.absl::optional.82"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 68, i1 false) #14
  call void @_ZN2cc9DrawImageC1ENS_10PaintImageEbRK7SkIRect15SkFilterQualityRK5SkM44N4absl8optionalImEERKNSA_IN3gfx10ColorSpaceEEEf(%"class.cc::DrawImage"* nonnull %5, %"class.cc::PaintImage"* nonnull %6, i1 zeroext false, %struct.SkIRect* nonnull dereferenceable(16) %8, i32 %27, %class.SkM44* nonnull dereferenceable(64) %9, %"class.absl::optional.77"* nonnull byval(%"class.absl::optional.77") align 8 %10, %"class.absl::optional.82"* nonnull dereferenceable(72) %11, float 1.000000e+02) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #14
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %6) #14
  %32 = bitcast %"class.cc::ImageProvider::ScopedResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %32) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 bitcast ({ <{ %class.sk_sp.87, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.92 } } } }, %class.sk_sp.4, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.17, %"class.base::OnceCallback" }* @__const._ZNK2cc16ImagePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE.scoped_result to i8*), i64 80, i1 false)
  %33 = bitcast %"class.cc::ImageProvider"* %2 to void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)***
  %34 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)**, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %34, i64 2
  %36 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %35, align 8
  call void %36(%"class.cc::ImageProvider::ScopedResult"* nonnull sret %12, %"class.cc::ImageProvider"* %2, %"class.cc::DrawImage"* nonnull dereferenceable(240) %5) #14
  %37 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %12, i64 0, i32 0, i32 0, i32 0
  %38 = load %class.SkImage*, %class.SkImage** %37, align 8
  %39 = icmp eq %class.SkImage* %38, null
  br i1 %39, label %40, label %56

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %12, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %53

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %12, i64 0, i32 0, i32 1
  %46 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %45) #14
  br i1 %46, label %47, label %53

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %12, i64 0, i32 1, i32 0
  %49 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %48, align 8
  %50 = icmp eq %"class.cc::PaintOpBuffer"* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %0, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %52, align 8
  br label %107

53:                                               ; preds = %47, %40, %44
  %54 = load %class.SkImage*, %class.SkImage** %37, align 8
  %55 = icmp eq %class.SkImage* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %3, %53
  %57 = phi %class.SkImage* [ %54, %53 ], [ %38, %3 ]
  %58 = getelementptr inbounds %class.SkImage, %class.SkImage* %57, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic, !noalias !232
  br label %60

60:                                               ; preds = %53, %56
  %61 = phi i1 [ true, %53 ], [ false, %56 ]
  %62 = phi %class.SkImage* [ null, %53 ], [ %57, %56 ]
  %63 = bitcast %"class.cc::PaintImage"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %63) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 104, i1 false)
  %64 = bitcast %"class.cc::PaintImageBuilder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %64) #14
  call void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* nonnull sret %14) #14
  %65 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 1, i32 6
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %14, i64 0, i32 0, i32 6
  store i32 %66, i32* %67, align 8
  br i1 %61, label %71, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %class.SkImage, %class.SkImage* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 1 monotonic
  br label %71

71:                                               ; preds = %60, %68
  %72 = ptrtoint %class.SkImage* %62 to i64
  %73 = call i32 @_ZN2cc10PaintImage16GetNextContentIdEv() #14
  %74 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %14, i64 0, i32 0, i32 0, i32 0
  %75 = load %class.SkImage*, %class.SkImage** %74, align 8
  %76 = bitcast %"class.cc::PaintImageBuilder"* %14 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %class.SkImage* %75, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %class.SkImage, %class.SkImage* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = bitcast %class.SkImage* %75 to %class.SkRefCntBase*
  %84 = bitcast %class.SkImage* %75 to void (%class.SkRefCntBase*)***
  %85 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, i64 2
  %87 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, align 8
  call void %87(%class.SkRefCntBase* nonnull %83) #14
  br label %88

88:                                               ; preds = %71, %78, %82
  %89 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %14, i64 0, i32 0, i32 3
  store i32 %73, i32* %89, align 8
  call void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* nonnull sret %13, %"class.cc::PaintImageBuilder"* nonnull %14) #14
  call void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %64) #14
  %90 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 2
  %91 = getelementptr inbounds %"class.cc::ImagePaintFilter", %"class.cc::ImagePaintFilter"* %1, i64 0, i32 3
  %92 = bitcast %"class.cc::PaintImage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %92)
  %93 = call i8* @_Znwm(i64 200) #16, !noalias !235
  %94 = bitcast i8* %93 to %"class.cc::ImagePaintFilter"*
  call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* nonnull %4, %"class.cc::PaintImage"* nonnull dereferenceable(104) %13) #14, !noalias !235
  %95 = load i32, i32* %26, align 4, !noalias !235
  call void @_ZN2cc16ImagePaintFilterC2ENS_10PaintImageERK6SkRectS4_15SkFilterQuality(%"class.cc::ImagePaintFilter"* nonnull %94, %"class.cc::PaintImage"* nonnull %4, %struct.SkRect* dereferenceable(16) %90, %struct.SkRect* dereferenceable(16) %91, i32 %95) #14, !noalias !235
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %4) #14, !noalias !235
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %92)
  %96 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %93, i8** %96, align 8
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %63) #14
  br i1 %61, label %107, label %97

97:                                               ; preds = %88
  %98 = getelementptr inbounds %class.SkImage, %class.SkImage* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %107

101:                                              ; preds = %97
  %102 = bitcast %class.SkImage* %62 to %class.SkRefCntBase*
  %103 = bitcast %class.SkImage* %62 to void (%class.SkRefCntBase*)***
  %104 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, i64 2
  %106 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, align 8
  call void %106(%class.SkRefCntBase* nonnull %102) #14
  br label %107

107:                                              ; preds = %101, %97, %88, %51
  call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %32) #14
  call void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %15) #14
  ret void
}

declare void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #5

declare i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"*) local_unnamed_addr #5

declare i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"*) local_unnamed_addr #5

declare void @_ZN2cc9DrawImageC1ENS_10PaintImageEbRK7SkIRect15SkFilterQualityRK5SkM44N4absl8optionalImEERKNSA_IN3gfx10ColorSpaceEEEf(%"class.cc::DrawImage"*, %"class.cc::PaintImage"*, i1 zeroext, %struct.SkIRect* dereferenceable(16), i32, %class.SkM44* dereferenceable(64), %"class.absl::optional.77"* byval(%"class.absl::optional.77") align 8, %"class.absl::optional.82"* dereferenceable(72), float) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* sret) local_unnamed_addr #5

declare i32 @_ZN2cc10PaintImage16GetNextContentIdEv() local_unnamed_addr #5

declare void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret, %"class.cc::PaintImageBuilder"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintFilterC2E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorE(%"class.cc::RecordPaintFilter"*, %class.sk_sp.17* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), %"class.gfx::SizeF"* nocapture readonly dereferenceable(8), i8 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.17, align 8
  %7 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %1, i64 0, i32 0
  %8 = bitcast %class.sk_sp.17* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %7, align 8
  %10 = bitcast %class.sk_sp.17* %6 to i64*
  store i64 %9, i64* %10, align 8
  call void @_ZN2cc17RecordPaintFilterC2E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorEPNS_13ImageProviderE(%"class.cc::RecordPaintFilter"* %0, %class.sk_sp.17* nonnull %6, %struct.SkRect* dereferenceable(16) %2, %"class.gfx::SizeF"* dereferenceable(8) %3, i8 zeroext %4, %"class.cc::ImageProvider"* null)
  %11 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %6, i64 0, i32 0
  %12 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %11, align 8
  %13 = icmp eq %"class.cc::PaintOpBuffer"* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = bitcast %"class.cc::PaintOpBuffer"* %12 to %class.SkRefCntBase*
  %20 = bitcast %"class.cc::PaintOpBuffer"* %12 to void (%class.SkRefCntBase*)***
  %21 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, i64 2
  %23 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, align 8
  tail call void %23(%class.SkRefCntBase* nonnull %19) #14
  br label %24

24:                                               ; preds = %5, %14, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintFilterC2E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorEPNS_13ImageProviderE(%"class.cc::RecordPaintFilter"*, %class.sk_sp.17* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), %"class.gfx::SizeF"* nocapture readonly dereferenceable(8), i8 zeroext, %"class.cc::ImageProvider"*) unnamed_addr #8 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %class.sk_sp.62, align 8
  %9 = alloca %class.sk_sp.62, align 8
  %10 = alloca %class.sk_sp.17, align 8
  %11 = alloca %"class.base::RepeatingCallback", align 8
  %12 = alloca %class.sk_sp, align 8
  %13 = alloca %class.sk_sp.10, align 8
  %14 = alloca %class.sk_sp.62, align 8
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %struct.SkISize*
  %17 = alloca %class.sk_sp.11, align 8
  %18 = alloca { <2 x float>, <2 x float> }, align 8
  %19 = bitcast { <2 x float>, <2 x float> }* %18 to %struct.SkRect*
  %20 = alloca <4 x float>, align 16
  %21 = bitcast <4 x float>* %20 to %struct.SkRect*
  %22 = alloca %struct.SkSamplingOptions, align 4
  %23 = alloca %class.sk_sp, align 8
  %24 = alloca %class.sk_sp.10, align 8
  %25 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %1, i64 0, i32 0
  %26 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %25, align 8
  %27 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %26, i64 0, i32 9
  %28 = load i8, i8* %27, align 4
  %29 = lshr i8 %28, 1
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %31, align 4
  %32 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %33, align 8
  %34 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 12, i32* %34, align 8
  %35 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %30, i8* %36, align 8
  %37 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %37, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17RecordPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %38 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 1
  %39 = bitcast %class.sk_sp.17* %1 to i64*
  %40 = load i64, i64* %39, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %25, align 8
  %41 = bitcast %class.sk_sp.17* %38 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 2
  %43 = bitcast %struct.SkRect* %42 to i8*
  %44 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 4 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 3
  %46 = bitcast %"class.gfx::SizeF"* %3 to i64*
  %47 = bitcast %"class.gfx::SizeF"* %45 to i64*
  %48 = load i64, i64* %46, align 4
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 4
  store i8 %4, i8* %49, align 8
  %50 = bitcast %class.sk_sp.62* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #14
  %51 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %9, i64 0, i32 0
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %51, align 8
  %52 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %10, i64 0, i32 0
  %53 = inttoptr i64 %40 to %"class.cc::PaintOpBuffer"*
  %54 = icmp eq i64 %40, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %6
  %56 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  br label %58

58:                                               ; preds = %6, %55
  store %"class.cc::PaintOpBuffer"* %53, %"class.cc::PaintOpBuffer"** %52, align 8
  %59 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %59, align 8
  call void @_ZN2cc11ToSkPictureE5sk_spINS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE(%class.sk_sp.62* nonnull sret %9, %class.sk_sp.17* nonnull %10, %struct.SkRect* dereferenceable(16) %42, %"class.cc::ImageProvider"* %5, %"class.base::RepeatingCallback"* nonnull %11) #14
  %60 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #14
  %61 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %52, align 8
  %62 = icmp eq %"class.cc::PaintOpBuffer"* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %61, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %"class.cc::PaintOpBuffer"* %61 to %class.SkRefCntBase*
  %69 = bitcast %"class.cc::PaintOpBuffer"* %61 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  call void %72(%class.SkRefCntBase* nonnull %68) #14
  br label %73

73:                                               ; preds = %58, %63, %67
  %74 = icmp eq i8 %4, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %42, i64 0, i32 0
  %77 = load float, float* %76, align 4
  %78 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 2, i32 2
  %79 = load float, float* %78, align 4
  %80 = fcmp olt float %77, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 2, i32 1
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 2, i32 3
  %85 = load float, float* %84, align 4
  %86 = fcmp uge float %83, %85
  br i1 %86, label %87, label %155

87:                                               ; preds = %75, %81, %73
  %88 = bitcast %class.sk_sp* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #14
  %89 = bitcast %class.sk_sp.62* %9 to i64*
  %90 = load i64, i64* %89, align 8
  store %class.SkPicture* null, %class.SkPicture** %51, align 8
  %91 = bitcast %class.sk_sp.62* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  %92 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %93 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #14, !noalias !238
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -1, i64 16, i1 false) #14, !noalias !238
  %94 = icmp eq i64 %90, 0
  br i1 %94, label %104, label %95

95:                                               ; preds = %87
  %96 = inttoptr i64 %90 to %class.SkPicture*
  %97 = inttoptr i64 %90 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %98 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %97, align 8
  %99 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %98, i64 4
  %100 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %99, align 8
  %101 = call { <2 x float>, <2 x float> } %100(%class.SkPicture* nonnull %96) #14
  %102 = extractvalue { <2 x float>, <2 x float> } %101, 0
  %103 = extractvalue { <2 x float>, <2 x float> } %101, 1
  br label %104

104:                                              ; preds = %87, %95
  %105 = phi <2 x float> [ %102, %95 ], [ zeroinitializer, %87 ]
  %106 = phi <2 x float> [ %103, %95 ], [ zeroinitializer, %87 ]
  %107 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %105, <2 x float>* %107, align 8, !noalias !238
  %108 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %106, <2 x float>* %108, align 8, !noalias !238
  %109 = bitcast %class.sk_sp.62* %8 to i64*
  store i64 %90, i64* %109, align 8, !noalias !238
  call void @_ZN14SkImageFilters7PictureE5sk_spI9SkPictureERK6SkRect(%class.sk_sp* nonnull sret %12, %class.sk_sp.62* nonnull %8, %struct.SkRect* nonnull dereferenceable(16) %92) #14
  %110 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %8, i64 0, i32 0
  %111 = load %class.SkPicture*, %class.SkPicture** %110, align 8, !noalias !238
  %112 = icmp eq %class.SkPicture* %111, null
  br i1 %112, label %123, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %111, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = bitcast %class.SkPicture* %111 to %class.SkRefCntBase*
  %119 = bitcast %class.SkPicture* %111 to void (%class.SkRefCntBase*)***
  %120 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %119, align 8
  %121 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, i64 2
  %122 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, align 8
  call void %122(%class.SkRefCntBase* nonnull %118) #14
  br label %123

123:                                              ; preds = %104, %113, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #14, !noalias !238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  %124 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 1
  %125 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  %126 = bitcast %class.sk_sp* %12 to i64*
  %127 = load i64, i64* %126, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %125, align 8
  %128 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %124, i64 0, i32 0
  %129 = load %class.SkImageFilter*, %class.SkImageFilter** %128, align 8
  %130 = bitcast %class.sk_sp* %124 to i64*
  store i64 %127, i64* %130, align 8
  %131 = icmp eq %class.SkImageFilter* %129, null
  br i1 %131, label %142, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %129, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %142

136:                                              ; preds = %132
  %137 = bitcast %class.SkImageFilter* %129 to %class.SkRefCntBase*
  %138 = bitcast %class.SkImageFilter* %129 to void (%class.SkRefCntBase*)***
  %139 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %138, align 8
  %140 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, i64 2
  %141 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, align 8
  call void %141(%class.SkRefCntBase* nonnull %137) #14
  br label %142

142:                                              ; preds = %123, %132, %136
  %143 = load %class.SkImageFilter*, %class.SkImageFilter** %125, align 8
  %144 = icmp eq %class.SkImageFilter* %143, null
  br i1 %144, label %296, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %143, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %296

149:                                              ; preds = %145
  %150 = bitcast %class.SkImageFilter* %143 to %class.SkRefCntBase*
  %151 = bitcast %class.SkImageFilter* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  call void %154(%class.SkRefCntBase* nonnull %150) #14
  br label %296

155:                                              ; preds = %81
  %156 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %157 = load float, float* %156, align 4
  %158 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %159 = load float, float* %158, align 4
  %160 = fsub float %157, %159
  %161 = call float @llvm.ceil.f32(float %160)
  %162 = fcmp olt float %161, 0x41DFFFFFE0000000
  %163 = select i1 %162, float %161, float 0x41DFFFFFE0000000
  %164 = fcmp ogt float %163, 0xC1DFFFFFE0000000
  %165 = select i1 %164, float %163, float 0xC1DFFFFFE0000000
  %166 = fptosi float %165 to i32
  %167 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %168 = load float, float* %167, align 4
  %169 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %170 = load float, float* %169, align 4
  %171 = fsub float %168, %170
  %172 = call float @llvm.ceil.f32(float %171)
  %173 = fcmp olt float %172, 0x41DFFFFFE0000000
  %174 = select i1 %173, float %172, float 0x41DFFFFFE0000000
  %175 = fcmp ogt float %174, 0xC1DFFFFFE0000000
  %176 = select i1 %175, float %174, float 0xC1DFFFFFE0000000
  %177 = fptosi float %176 to i32
  %178 = bitcast %class.sk_sp.10* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #14
  %179 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %13, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %179, align 8
  %180 = bitcast %class.sk_sp.62* %9 to i64*
  %181 = load i64, i64* %180, align 8
  store %class.SkPicture* null, %class.SkPicture** %51, align 8
  %182 = bitcast %class.sk_sp.62* %14 to i64*
  store i64 %181, i64* %182, align 8
  %183 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #14
  %184 = zext i32 %177 to i64
  %185 = shl nuw i64 %184, 32
  %186 = zext i32 %166 to i64
  %187 = or i64 %185, %186
  store i64 %187, i64* %15, align 8
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.11* nonnull sret %17) #14
  call void @_ZN7SkImage15MakeFromPictureE5sk_spI9SkPictureERK7SkISizePK8SkMatrixPK7SkPaintNS_8BitDepthES0_I12SkColorSpaceE(%class.sk_sp.10* nonnull sret %13, %class.sk_sp.62* nonnull %14, %struct.SkISize* nonnull dereferenceable(8) %16, %class.SkMatrix* null, %class.SkPaint* null, i32 0, %class.sk_sp.11* nonnull %17) #14
  %188 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %17, i64 0, i32 0
  %189 = load %class.SkColorSpace*, %class.SkColorSpace** %188, align 8
  %190 = icmp eq %class.SkColorSpace* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %155
  %192 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw add i32* %192, i32 -1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  %196 = bitcast %class.SkColorSpace* %189 to i8*
  call void @_ZdlPv(i8* %196) #16
  br label %197

197:                                              ; preds = %155, %191, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #14
  %198 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %14, i64 0, i32 0
  %199 = load %class.SkPicture*, %class.SkPicture** %198, align 8
  %200 = icmp eq %class.SkPicture* %199, null
  br i1 %200, label %211, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %199, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = atomicrmw add i32* %202, i32 -1 acq_rel
  %204 = icmp eq i32 %203, 1
  br i1 %204, label %205, label %211

205:                                              ; preds = %201
  %206 = bitcast %class.SkPicture* %199 to %class.SkRefCntBase*
  %207 = bitcast %class.SkPicture* %199 to void (%class.SkRefCntBase*)***
  %208 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %207, align 8
  %209 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %208, i64 2
  %210 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %209, align 8
  call void %210(%class.SkRefCntBase* nonnull %206) #14
  br label %211

211:                                              ; preds = %197, %201, %205
  %212 = bitcast { <2 x float>, <2 x float> }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %212) #14
  %213 = bitcast float* %156 to <2 x float>*
  %214 = load <2 x float>, <2 x float>* %213, align 4
  %215 = bitcast %struct.SkRect* %2 to <2 x float>*
  %216 = load <2 x float>, <2 x float>* %215, align 4
  %217 = fsub <2 x float> %214, %216
  %218 = shufflevector <2 x float> %217, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %219 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %18, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %219, align 8
  %220 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %18, i64 0, i32 1
  store <2 x float> %217, <2 x float>* %220, align 8
  %221 = bitcast %"class.gfx::SizeF"* %45 to <2 x float>*
  %222 = load <2 x float>, <2 x float>* %221, align 4
  %223 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %222
  %224 = shufflevector <2 x float> %223, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %225 = bitcast <4 x float>* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %225) #14
  %226 = shufflevector <4 x float> <float 0.000000e+00, float 0.000000e+00, float undef, float undef>, <4 x float> %218, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %227 = fmul <4 x float> %224, %226
  store <4 x float> %227, <4 x float>* %20, align 16
  %228 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %22, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %228) #14
  %229 = bitcast %struct.SkSamplingOptions* %22 to i32*
  store i32 -1431655766, i32* %229, align 4
  store i8 1, i8* %228, align 4
  %230 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %22, i64 0, i32 1
  %231 = bitcast %struct.SkCubicResampler* %230 to i64*
  store i64 4515609228859845291, i64* %231, align 4
  %232 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %22, i64 0, i32 2
  store i32 0, i32* %232, align 4
  %233 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %22, i64 0, i32 3
  store i32 0, i32* %233, align 4
  %234 = bitcast %class.sk_sp* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #14
  %235 = bitcast %class.sk_sp.10* %13 to i64*
  %236 = load i64, i64* %235, align 8
  store %class.SkImage* null, %class.SkImage** %179, align 8
  %237 = bitcast %class.sk_sp.10* %24 to i64*
  store i64 %236, i64* %237, align 8
  call void @_ZN14SkImageFilters5ImageE5sk_spI7SkImageERK6SkRectS5_RK17SkSamplingOptions(%class.sk_sp* nonnull sret %23, %class.sk_sp.10* nonnull %24, %struct.SkRect* nonnull dereferenceable(16) %19, %struct.SkRect* nonnull dereferenceable(16) %21, %struct.SkSamplingOptions* nonnull dereferenceable(20) %22) #14
  %238 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 1
  %239 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %23, i64 0, i32 0
  %240 = bitcast %class.sk_sp* %23 to i64*
  %241 = load i64, i64* %240, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %239, align 8
  %242 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %238, i64 0, i32 0
  %243 = load %class.SkImageFilter*, %class.SkImageFilter** %242, align 8
  %244 = bitcast %class.sk_sp* %238 to i64*
  store i64 %241, i64* %244, align 8
  %245 = icmp eq %class.SkImageFilter* %243, null
  br i1 %245, label %256, label %246

246:                                              ; preds = %211
  %247 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %243, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 -1 acq_rel
  %249 = icmp eq i32 %248, 1
  br i1 %249, label %250, label %256

250:                                              ; preds = %246
  %251 = bitcast %class.SkImageFilter* %243 to %class.SkRefCntBase*
  %252 = bitcast %class.SkImageFilter* %243 to void (%class.SkRefCntBase*)***
  %253 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %252, align 8
  %254 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %253, i64 2
  %255 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %254, align 8
  call void %255(%class.SkRefCntBase* nonnull %251) #14
  br label %256

256:                                              ; preds = %211, %246, %250
  %257 = load %class.SkImageFilter*, %class.SkImageFilter** %239, align 8
  %258 = icmp eq %class.SkImageFilter* %257, null
  br i1 %258, label %269, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %257, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = atomicrmw add i32* %260, i32 -1 acq_rel
  %262 = icmp eq i32 %261, 1
  br i1 %262, label %263, label %269

263:                                              ; preds = %259
  %264 = bitcast %class.SkImageFilter* %257 to %class.SkRefCntBase*
  %265 = bitcast %class.SkImageFilter* %257 to void (%class.SkRefCntBase*)***
  %266 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %265, align 8
  %267 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %266, i64 2
  %268 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %267, align 8
  call void %268(%class.SkRefCntBase* nonnull %264) #14
  br label %269

269:                                              ; preds = %256, %259, %263
  %270 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %24, i64 0, i32 0
  %271 = load %class.SkImage*, %class.SkImage** %270, align 8
  %272 = icmp eq %class.SkImage* %271, null
  br i1 %272, label %283, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %class.SkImage, %class.SkImage* %271, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = atomicrmw add i32* %274, i32 -1 acq_rel
  %276 = icmp eq i32 %275, 1
  br i1 %276, label %277, label %283

277:                                              ; preds = %273
  %278 = bitcast %class.SkImage* %271 to %class.SkRefCntBase*
  %279 = bitcast %class.SkImage* %271 to void (%class.SkRefCntBase*)***
  %280 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %279, align 8
  %281 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %280, i64 2
  %282 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %281, align 8
  call void %282(%class.SkRefCntBase* nonnull %278) #14
  br label %283

283:                                              ; preds = %269, %273, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %228) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %225) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %212) #14
  %284 = load %class.SkImage*, %class.SkImage** %179, align 8
  %285 = icmp eq %class.SkImage* %284, null
  br i1 %285, label %296, label %286

286:                                              ; preds = %283
  %287 = getelementptr inbounds %class.SkImage, %class.SkImage* %284, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = atomicrmw add i32* %287, i32 -1 acq_rel
  %289 = icmp eq i32 %288, 1
  br i1 %289, label %290, label %296

290:                                              ; preds = %286
  %291 = bitcast %class.SkImage* %284 to %class.SkRefCntBase*
  %292 = bitcast %class.SkImage* %284 to void (%class.SkRefCntBase*)***
  %293 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %292, align 8
  %294 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %293, i64 2
  %295 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %294, align 8
  call void %295(%class.SkRefCntBase* nonnull %291) #14
  br label %296

296:                                              ; preds = %290, %286, %283, %142, %145, %149
  %297 = phi i8* [ %88, %149 ], [ %88, %145 ], [ %88, %142 ], [ %178, %283 ], [ %178, %286 ], [ %178, %290 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #14
  %298 = load %class.SkPicture*, %class.SkPicture** %51, align 8
  %299 = icmp eq %class.SkPicture* %298, null
  br i1 %299, label %310, label %300

300:                                              ; preds = %296
  %301 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %298, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = atomicrmw add i32* %301, i32 -1 acq_rel
  %303 = icmp eq i32 %302, 1
  br i1 %303, label %304, label %310

304:                                              ; preds = %300
  %305 = bitcast %class.SkPicture* %298 to %class.SkRefCntBase*
  %306 = bitcast %class.SkPicture* %298 to void (%class.SkRefCntBase*)***
  %307 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %306, align 8
  %308 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %307, i64 2
  %309 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %308, align 8
  call void %309(%class.SkRefCntBase* nonnull %305) #14
  br label %310

310:                                              ; preds = %296, %300, %304
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #14
  ret void
}

declare void @_ZN2cc11ToSkPictureE5sk_spINS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE(%class.sk_sp.62* sret, %class.sk_sp.17*, %struct.SkRect* dereferenceable(16), %"class.cc::ImageProvider"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare void @_ZN7SkImage15MakeFromPictureE5sk_spI9SkPictureERK7SkISizePK8SkMatrixPK7SkPaintNS_8BitDepthES0_I12SkColorSpaceE(%class.sk_sp.10* sret, %class.sk_sp.62*, %struct.SkISize* dereferenceable(8), %class.SkMatrix*, %class.SkPaint*, i32, %class.sk_sp.11*) local_unnamed_addr #5

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.11* sret) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintFilterD2Ev(%"class.cc::RecordPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17RecordPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %3, align 8
  %5 = icmp eq %"class.cc::PaintOpBuffer"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintOpBuffer"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintOpBuffer"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintFilterD0Ev(%"class.cc::RecordPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17RecordPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %3, align 8
  %5 = icmp eq %"class.cc::PaintOpBuffer"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintOpBuffer"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintOpBuffer"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::RecordPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc17RecordPaintFilter23CreateScaledPaintRecordERK8SkMatrixi(%class.sk_sp.101* noalias nocapture sret, %"class.cc::RecordPaintFilter"*, %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.17, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = alloca %"class.gfx::SizeF", align 4
  %9 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %25, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 2
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 2, i32 2
  %17 = load float, float* %16, align 4
  %18 = fcmp olt float %15, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 2, i32 1
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 2, i32 3
  %23 = load float, float* %22, align 4
  %24 = fcmp uge float %21, %23
  br i1 %24, label %25, label %32

25:                                               ; preds = %12, %19, %4
  %26 = icmp eq %"class.cc::RecordPaintFilter"* %1, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic, !noalias !241
  br label %30

30:                                               ; preds = %25, %27
  %31 = getelementptr inbounds %class.sk_sp.101, %class.sk_sp.101* %0, i64 0, i32 0
  store %"class.cc::RecordPaintFilter"* %1, %"class.cc::RecordPaintFilter"** %31, align 8, !alias.scope !241
  br label %94

32:                                               ; preds = %19
  %33 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #14
  %34 = tail call { <2 x float>, <2 x float> } @_ZN2cc13PaintOpBuffer19GetFixedScaleBoundsERK8SkMatrixRK6SkRecti(%class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* dereferenceable(16) %13, i32 %3) #14
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %36 = extractvalue { <2 x float>, <2 x float> } %34, 0
  store <2 x float> %36, <2 x float>* %35, align 8
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %38 = extractvalue { <2 x float>, <2 x float> } %34, 1
  store <2 x float> %38, <2 x float>* %37, align 8
  %39 = extractelement <2 x float> %36, i32 0
  %40 = extractelement <2 x float> %38, i32 0
  %41 = fcmp uge float %39, %40
  %42 = extractelement <2 x float> %36, i32 1
  %43 = extractelement <2 x float> %38, i32 1
  %44 = fcmp uge float %42, %43
  %45 = or i1 %41, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %32
  %47 = getelementptr inbounds %class.sk_sp.101, %class.sk_sp.101* %0, i64 0, i32 0
  store %"class.cc::RecordPaintFilter"* null, %"class.cc::RecordPaintFilter"** %47, align 8
  br label %93

48:                                               ; preds = %32
  %49 = bitcast %"class.gfx::SizeF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #14
  %50 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %8, i64 0, i32 0
  %51 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %8, i64 0, i32 1
  %52 = fsub float %40, %39
  %53 = load float, float* %16, align 4
  %54 = load float, float* %14, align 4
  %55 = fsub float %53, %54
  %56 = fdiv float %52, %55
  %57 = fsub float %43, %42
  %58 = load float, float* %22, align 4
  %59 = load float, float* %20, align 4
  %60 = fsub float %58, %59
  %61 = fdiv float %57, %60
  %62 = fcmp ogt float %56, 0x3EB0000000000000
  %63 = select i1 %62, float %56, float 0.000000e+00
  store float %63, float* %50, align 4
  %64 = fcmp ogt float %61, 0x3EB0000000000000
  %65 = select i1 %64, float %61, float 0.000000e+00
  store float %65, float* %51, align 4
  %66 = tail call i8* @_Znwm(i64 96) #16, !noalias !244
  %67 = bitcast i8* %66 to %"class.cc::RecordPaintFilter"*
  %68 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 1, i32 0
  %69 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %68, align 8, !noalias !244
  %70 = icmp eq %"class.cc::PaintOpBuffer"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %48
  %72 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %69, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 1 monotonic, !noalias !244
  br label %74

74:                                               ; preds = %71, %48
  %75 = ptrtoint %"class.cc::PaintOpBuffer"* %69 to i64
  %76 = bitcast %class.sk_sp.17* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #14, !noalias !244
  %77 = bitcast %class.sk_sp.17* %5 to i64*
  store i64 %75, i64* %77, align 8, !noalias !244
  call void @_ZN2cc17RecordPaintFilterC2E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorEPNS_13ImageProviderE(%"class.cc::RecordPaintFilter"* nonnull %67, %class.sk_sp.17* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %7, %"class.gfx::SizeF"* nonnull dereferenceable(8) %8, i8 zeroext 1, %"class.cc::ImageProvider"* null) #14, !noalias !244
  %78 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %5, i64 0, i32 0
  %79 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %78, align 8, !noalias !244
  %80 = icmp eq %"class.cc::PaintOpBuffer"* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %79, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel, !noalias !244
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = bitcast %"class.cc::PaintOpBuffer"* %79 to %class.SkRefCntBase*
  %87 = bitcast %"class.cc::PaintOpBuffer"* %79 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8, !noalias !244
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8, !noalias !244
  tail call void %90(%class.SkRefCntBase* nonnull %86) #14, !noalias !244
  br label %91

91:                                               ; preds = %74, %81, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #14, !noalias !244
  %92 = bitcast %class.sk_sp.101* %0 to i8**
  store i8* %66, i8** %92, align 8, !alias.scope !244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #14
  br label %93

93:                                               ; preds = %91, %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #14
  br label %94

94:                                               ; preds = %93, %30
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN2cc13PaintOpBuffer19GetFixedScaleBoundsERK8SkMatrixRK6SkRecti(%class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc17RecordPaintFilter14SerializedSizeEv(%"class.cc::RecordPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 33, i64 49
  %6 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %6, align 8
  %8 = tail call i64 @_ZN2cc13PaintOpWriter13GetRecordSizeEPKNS_13PaintOpBufferE(%"class.cc::PaintOpBuffer"* %7) #14
  %9 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %8) #14
  %10 = extractvalue { i64, i1 } %9, 1
  %11 = extractvalue { i64, i1 } %9, 0
  %12 = select i1 %10, i64 0, i64 %11, !prof !6
  ret i64 %12
}

declare i64 @_ZN2cc13PaintOpWriter13GetRecordSizeEPKNS_13PaintOpBufferE(%"class.cc::PaintOpBuffer"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc17RecordPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::RecordPaintFilter"* nocapture readonly, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.17, align 8
  %5 = tail call i8* @_Znwm(i64 96) #16
  %6 = bitcast i8* %5 to %"class.cc::RecordPaintFilter"*
  %7 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 1, i32 0
  %9 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %8, align 8
  %10 = icmp eq %"class.cc::PaintOpBuffer"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  br label %14

14:                                               ; preds = %11, %3
  store %"class.cc::PaintOpBuffer"* %9, %"class.cc::PaintOpBuffer"** %7, align 8
  %15 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 2
  %16 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 3
  %17 = getelementptr inbounds %"class.cc::RecordPaintFilter", %"class.cc::RecordPaintFilter"* %1, i64 0, i32 4
  %18 = load i8, i8* %17, align 8
  call void @_ZN2cc17RecordPaintFilterC2E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorEPNS_13ImageProviderE(%"class.cc::RecordPaintFilter"* nonnull %6, %class.sk_sp.17* nonnull %4, %struct.SkRect* dereferenceable(16) %15, %"class.gfx::SizeF"* dereferenceable(8) %16, i8 zeroext %18, %"class.cc::ImageProvider"* %2)
  %19 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %5, i8** %19, align 8
  %20 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %7, align 8
  %21 = icmp eq %"class.cc::PaintOpBuffer"* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast %"class.cc::PaintOpBuffer"* %20 to %class.SkRefCntBase*
  %28 = bitcast %"class.cc::PaintOpBuffer"* %20 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  tail call void %31(%class.SkRefCntBase* nonnull %27) #14
  br label %32

32:                                               ; preds = %14, %22, %26
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16MergePaintFilterC2EPK5sk_spINS_11PaintFilterEEiPK6SkRect(%"class.cc::MergePaintFilter"*, %class.sk_sp.3* nocapture readonly, i32, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc16MergePaintFilterC2EPK5sk_spINS_11PaintFilterEEiPK6SkRectPNS_13ImageProviderE(%"class.cc::MergePaintFilter"* %0, %class.sk_sp.3* %1, i32 %2, %struct.SkRect* %3, %"class.cc::ImageProvider"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16MergePaintFilterC2EPK5sk_spINS_11PaintFilterEEiPK6SkRectPNS_13ImageProviderE(%"class.cc::MergePaintFilter"*, %class.sk_sp.3* nocapture readonly, i32, %struct.SkRect* readonly, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.102", align 8
  %7 = alloca %class.sk_sp.3, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = alloca %"struct.SkImageFilters::CropRect", align 4
  %11 = icmp sgt i32 %2, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %5
  %13 = zext i32 %2 to i64
  br label %14

14:                                               ; preds = %23, %12
  %15 = phi i64 [ 0, %12 ], [ %24, %23 ]
  %16 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %1, i64 %15, i32 0
  %17 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %16, align 8
  %18 = icmp eq %"class.cc::PaintFilter"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %17, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %19, %14
  %24 = add nuw nsw i64 %15, 1
  %25 = icmp eq i64 %24, %13
  br i1 %25, label %26, label %14

26:                                               ; preds = %19, %23, %5
  %27 = phi i8 [ 0, %5 ], [ 0, %23 ], [ 1, %19 ]
  %28 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %30, align 8
  %31 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 13, i32* %31, align 8
  %32 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %27, i8* %33, align 8
  %34 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %34, align 4
  %35 = icmp eq %struct.SkRect* %3, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %26
  store i8 0, i8* %32, align 4
  %37 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %union.anon* %37 to i8*
  %39 = bitcast %struct.SkRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* nonnull align 4 %39, i64 16, i1 false) #14
  store i8 1, i8* %32, align 4
  br label %40

40:                                               ; preds = %26, %36
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc16MergePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %41 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.base::StackVector.30", %"class.base::StackVector.30"* %41, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %42, %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"** %44, align 8
  %45 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2
  %46 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1
  %47 = bitcast %"class.std::__1::vector.35"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #14
  %48 = ptrtoint %"class.base::StackVector.30"* %41 to i64
  %49 = bitcast %"struct.std::__1::__compressed_pair_elem.39"* %46 to i64*
  store i64 %48, i64* %49, align 8
  tail call void @_ZNSt3__16vectorI5sk_spIN2cc11PaintFilterEEN4base14StackAllocatorIS4_Lm2EEEE7reserveEm(%"class.std::__1::vector.35"* %45, i64 2) #14
  %50 = bitcast %"class.std::__1::vector.102"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #14
  %51 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %6, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %6, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #14
  %54 = sext i32 %2 to i64
  %55 = bitcast %class.sk_sp** %53 to i64*
  %56 = bitcast %"class.std::__1::vector.102"* %6 to i64*
  %57 = icmp eq i32 %2, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %40
  %59 = icmp slt i32 %2, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  tail call void @abort() #15
  unreachable

61:                                               ; preds = %58
  %62 = bitcast %class.sk_sp** %52 to i64*
  %63 = shl nsw i64 %54, 3
  %64 = tail call i8* @_Znwm(i64 %63) #16
  %65 = bitcast i8* %64 to %class.sk_sp*
  %66 = ptrtoint i8* %64 to i64
  %67 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %65, i64 %54
  %68 = ptrtoint %class.sk_sp* %67 to i64
  store i64 %66, i64* %56, align 8
  store i64 %66, i64* %62, align 8
  store i64 %68, i64* %55, align 8
  br label %69

69:                                               ; preds = %61, %40
  %70 = phi %class.sk_sp* [ null, %40 ], [ %65, %61 ]
  br i1 %11, label %71, label %85

71:                                               ; preds = %69
  %72 = bitcast %class.sk_sp.3* %7 to i8*
  %73 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  %74 = icmp eq %"class.cc::ImageProvider"* %4, null
  %75 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %76 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %77 = bitcast %class.sk_sp.3* %7 to i64*
  %78 = bitcast %class.sk_sp.3** %75 to i64*
  %79 = bitcast %class.sk_sp* %8 to i8*
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %81 = bitcast %class.sk_sp** %52 to i64*
  %82 = zext i32 %2 to i64
  br label %153

83:                                               ; preds = %237
  %84 = load %class.sk_sp*, %class.sk_sp** %51, align 8
  br label %85

85:                                               ; preds = %83, %69
  %86 = phi %class.sk_sp* [ %84, %83 ], [ %70, %69 ]
  %87 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #14
  %88 = bitcast %"struct.SkImageFilters::CropRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #14
  %89 = select i1 %35, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %3
  %90 = bitcast %struct.SkRect* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %88, i8* align 4 %90, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters5MergeEP5sk_spI13SkImageFilterEiRKNS_8CropRectE(%class.sk_sp* nonnull sret %9, %class.sk_sp* %86, i32 %2, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %10) #14
  %91 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 1
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %93 = bitcast %class.sk_sp* %9 to i64*
  %94 = load i64, i64* %93, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %92, align 8
  %95 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %91, i64 0, i32 0
  %96 = load %class.SkImageFilter*, %class.SkImageFilter** %95, align 8
  %97 = bitcast %class.sk_sp* %91 to i64*
  store i64 %94, i64* %97, align 8
  %98 = icmp eq %class.SkImageFilter* %96, null
  br i1 %98, label %109, label %99

99:                                               ; preds = %85
  %100 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %96, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = bitcast %class.SkImageFilter* %96 to %class.SkRefCntBase*
  %105 = bitcast %class.SkImageFilter* %96 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  call void %108(%class.SkRefCntBase* nonnull %104) #14
  br label %109

109:                                              ; preds = %85, %99, %103
  %110 = load %class.SkImageFilter*, %class.SkImageFilter** %92, align 8
  %111 = icmp eq %class.SkImageFilter* %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %110, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 -1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %122

116:                                              ; preds = %112
  %117 = bitcast %class.SkImageFilter* %110 to %class.SkRefCntBase*
  %118 = bitcast %class.SkImageFilter* %110 to void (%class.SkRefCntBase*)***
  %119 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %118, align 8
  %120 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, i64 2
  %121 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, align 8
  call void %121(%class.SkRefCntBase* nonnull %117) #14
  br label %122

122:                                              ; preds = %109, %112, %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #14
  %123 = load %class.sk_sp*, %class.sk_sp** %51, align 8
  %124 = icmp eq %class.sk_sp* %123, null
  br i1 %124, label %152, label %125

125:                                              ; preds = %122
  %126 = bitcast %class.sk_sp* %123 to i8*
  %127 = load %class.sk_sp*, %class.sk_sp** %52, align 8
  %128 = icmp eq %class.sk_sp* %127, %123
  br i1 %128, label %150, label %129

129:                                              ; preds = %125, %145
  %130 = phi %class.sk_sp* [ %131, %145 ], [ %127, %125 ]
  %131 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %130, i64 -1
  %132 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %131, i64 0, i32 0
  %133 = load %class.SkImageFilter*, %class.SkImageFilter** %132, align 8
  %134 = icmp eq %class.SkImageFilter* %133, null
  br i1 %134, label %145, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %133, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 -1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = bitcast %class.SkImageFilter* %133 to %class.SkRefCntBase*
  %141 = bitcast %class.SkImageFilter* %133 to void (%class.SkRefCntBase*)***
  %142 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %141, align 8
  %143 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %142, i64 2
  %144 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, align 8
  call void %144(%class.SkRefCntBase* nonnull %140) #14
  br label %145

145:                                              ; preds = %139, %135, %129
  %146 = icmp eq %class.sk_sp* %131, %123
  br i1 %146, label %147, label %129

147:                                              ; preds = %145
  %148 = bitcast %"class.std::__1::vector.102"* %6 to i8**
  %149 = load i8*, i8** %148, align 8
  br label %150

150:                                              ; preds = %147, %125
  %151 = phi i8* [ %149, %147 ], [ %126, %125 ]
  store %class.sk_sp* %123, %class.sk_sp** %52, align 8
  call void @_ZdlPv(i8* %151) #16
  br label %152

152:                                              ; preds = %122, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #14
  ret void

153:                                              ; preds = %237, %71
  %154 = phi i64 [ 0, %71 ], [ %238, %237 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #14
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %73, align 8
  %155 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %1, i64 %154, i32 0
  %156 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %155, align 8
  %157 = icmp eq %"class.cc::PaintFilter"* %156, null
  br i1 %74, label %172, label %158

158:                                              ; preds = %153
  br i1 %157, label %159, label %160

159:                                              ; preds = %158
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %73, align 8, !alias.scope !247
  br label %177

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %156, i64 0, i32 4
  %162 = load i8, i8* %161, align 8, !range !2, !noalias !250
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %156, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw add i32* %165, i32 1 monotonic, !noalias !253
  store %"class.cc::PaintFilter"* %156, %"class.cc::PaintFilter"** %73, align 8, !alias.scope !256
  br label %177

167:                                              ; preds = %160
  %168 = bitcast %"class.cc::PaintFilter"* %156 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %169 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %168, align 8, !noalias !250
  %170 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %169, i64 4
  %171 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %170, align 8, !noalias !250
  call void %171(%class.sk_sp.3* nonnull sret %7, %"class.cc::PaintFilter"* nonnull %156, %"class.cc::ImageProvider"* nonnull %4) #14
  br label %177

172:                                              ; preds = %153
  br i1 %157, label %176, label %173

173:                                              ; preds = %172
  %174 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %156, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 1 monotonic
  br label %176

176:                                              ; preds = %172, %173
  store %"class.cc::PaintFilter"* %156, %"class.cc::PaintFilter"** %73, align 8
  br label %177

177:                                              ; preds = %167, %164, %159, %176
  %178 = load %class.sk_sp.3*, %class.sk_sp.3** %75, align 8
  %179 = load %class.sk_sp.3*, %class.sk_sp.3** %76, align 8
  %180 = icmp ult %class.sk_sp.3* %178, %179
  br i1 %180, label %181, label %186

181:                                              ; preds = %177
  %182 = load i64, i64* %77, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %73, align 8
  %183 = bitcast %class.sk_sp.3* %178 to i64*
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %178, i64 1
  %185 = ptrtoint %class.sk_sp.3* %184 to i64
  store i64 %185, i64* %78, align 8
  br label %188

186:                                              ; preds = %177
  call void @_ZNSt3__16vectorI5sk_spIN2cc11PaintFilterEEN4base14StackAllocatorIS4_Lm2EEEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.35"* %45, %class.sk_sp.3* nonnull dereferenceable(8) %7) #14
  %187 = load %class.sk_sp.3*, %class.sk_sp.3** %75, align 8
  br label %188

188:                                              ; preds = %181, %186
  %189 = phi %class.sk_sp.3* [ %184, %181 ], [ %187, %186 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #14
  %190 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %189, i64 -1, i32 0
  %191 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %190, align 8
  %192 = icmp eq %"class.cc::PaintFilter"* %191, null
  br i1 %192, label %200, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %191, i64 0, i32 1, i32 0
  %195 = load %class.SkImageFilter*, %class.SkImageFilter** %194, align 8, !noalias !257
  %196 = icmp eq %class.SkImageFilter* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %195, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 1 monotonic, !noalias !257
  br label %200

200:                                              ; preds = %188, %193, %197
  %201 = phi %class.SkImageFilter* [ null, %193 ], [ %195, %197 ], [ null, %188 ]
  store %class.SkImageFilter* %201, %class.SkImageFilter** %80, align 8, !alias.scope !257
  %202 = load %class.sk_sp*, %class.sk_sp** %52, align 8
  %203 = load %class.sk_sp*, %class.sk_sp** %53, align 8
  %204 = icmp ult %class.sk_sp* %202, %203
  br i1 %204, label %205, label %210

205:                                              ; preds = %200
  %206 = ptrtoint %class.SkImageFilter* %201 to i64
  store %class.SkImageFilter* null, %class.SkImageFilter** %80, align 8
  %207 = bitcast %class.sk_sp* %202 to i64*
  store i64 %206, i64* %207, align 8
  %208 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %202, i64 1
  %209 = ptrtoint %class.sk_sp* %208 to i64
  store i64 %209, i64* %81, align 8
  br label %211

210:                                              ; preds = %200
  call void @_ZNSt3__16vectorI5sk_spI13SkImageFilterENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.102"* nonnull %6, %class.sk_sp* nonnull dereferenceable(8) %8) #14
  br label %211

211:                                              ; preds = %205, %210
  %212 = load %class.SkImageFilter*, %class.SkImageFilter** %80, align 8
  %213 = icmp eq %class.SkImageFilter* %212, null
  br i1 %213, label %224, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %212, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = atomicrmw add i32* %215, i32 -1 acq_rel
  %217 = icmp eq i32 %216, 1
  br i1 %217, label %218, label %224

218:                                              ; preds = %214
  %219 = bitcast %class.SkImageFilter* %212 to %class.SkRefCntBase*
  %220 = bitcast %class.SkImageFilter* %212 to void (%class.SkRefCntBase*)***
  %221 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %220, align 8
  %222 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %221, i64 2
  %223 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %222, align 8
  call void %223(%class.SkRefCntBase* nonnull %219) #14
  br label %224

224:                                              ; preds = %211, %214, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #14
  %225 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %73, align 8
  %226 = icmp eq %"class.cc::PaintFilter"* %225, null
  br i1 %226, label %237, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %225, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw add i32* %228, i32 -1 acq_rel
  %230 = icmp eq i32 %229, 1
  br i1 %230, label %231, label %237

231:                                              ; preds = %227
  %232 = bitcast %"class.cc::PaintFilter"* %225 to %class.SkRefCntBase*
  %233 = bitcast %"class.cc::PaintFilter"* %225 to void (%class.SkRefCntBase*)***
  %234 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %233, align 8
  %235 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %234, i64 2
  %236 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %235, align 8
  call void %236(%class.SkRefCntBase* nonnull %232) #14
  br label %237

237:                                              ; preds = %224, %227, %231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #14
  %238 = add nuw nsw i64 %154, 1
  %239 = icmp eq i64 %238, %82
  br i1 %239, label %83, label %153
}

declare void @_ZN14SkImageFilters5MergeEP5sk_spI13SkImageFilterEiRKNS_8CropRectE(%class.sk_sp* sret, %class.sk_sp*, i32, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16MergePaintFilterD2Ev(%"class.cc::MergePaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc16MergePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %4 = load %class.sk_sp.3*, %class.sk_sp.3** %3, align 8
  %5 = icmp eq %class.sk_sp.3* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %8 = load %class.sk_sp.3*, %class.sk_sp.3** %7, align 8
  %9 = icmp eq %class.sk_sp.3* %8, %4
  br i1 %9, label %30, label %10

10:                                               ; preds = %6, %26
  %11 = phi %class.sk_sp.3* [ %12, %26 ], [ %8, %6 ]
  %12 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %11, i64 -1
  %13 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %12, i64 0, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8
  %15 = icmp eq %"class.cc::PaintFilter"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %"class.cc::PaintFilter"* %14 to %class.SkRefCntBase*
  %22 = bitcast %"class.cc::PaintFilter"* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #14
  br label %26

26:                                               ; preds = %20, %16, %10
  %27 = icmp eq %class.sk_sp.3* %12, %4
  br i1 %27, label %28, label %10

28:                                               ; preds = %26
  %29 = load %class.sk_sp.3*, %class.sk_sp.3** %3, align 8
  br label %30

30:                                               ; preds = %28, %6
  %31 = phi %class.sk_sp.3* [ %29, %28 ], [ %4, %6 ]
  store %class.sk_sp.3* %4, %class.sk_sp.3** %7, align 8
  %32 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %33 = load %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"*, %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"** %32, align 8
  %34 = icmp ne %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %33, null
  %35 = bitcast %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %33 to %class.sk_sp.3*
  %36 = icmp eq %class.sk_sp.3* %31, %35
  %37 = and i1 %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source", %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %33, i64 0, i32 1
  store i8 0, i8* %39, align 8
  br label %42

40:                                               ; preds = %30
  %41 = bitcast %class.sk_sp.3* %31 to i8*
  tail call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %1, %38, %40
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %43 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %44 = load %class.SkImageFilter*, %class.SkImageFilter** %43, align 8
  %45 = icmp eq %class.SkImageFilter* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkImageFilter* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkImageFilter* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #14
  br label %56

56:                                               ; preds = %42, %46, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16MergePaintFilterD0Ev(%"class.cc::MergePaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc16MergePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %4 = load %class.sk_sp.3*, %class.sk_sp.3** %3, align 8
  %5 = icmp eq %class.sk_sp.3* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %8 = load %class.sk_sp.3*, %class.sk_sp.3** %7, align 8
  %9 = icmp eq %class.sk_sp.3* %8, %4
  br i1 %9, label %30, label %10

10:                                               ; preds = %6, %26
  %11 = phi %class.sk_sp.3* [ %12, %26 ], [ %8, %6 ]
  %12 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %11, i64 -1
  %13 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %12, i64 0, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8
  %15 = icmp eq %"class.cc::PaintFilter"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %"class.cc::PaintFilter"* %14 to %class.SkRefCntBase*
  %22 = bitcast %"class.cc::PaintFilter"* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #14
  br label %26

26:                                               ; preds = %20, %16, %10
  %27 = icmp eq %class.sk_sp.3* %12, %4
  br i1 %27, label %28, label %10

28:                                               ; preds = %26
  %29 = load %class.sk_sp.3*, %class.sk_sp.3** %3, align 8
  br label %30

30:                                               ; preds = %28, %6
  %31 = phi %class.sk_sp.3* [ %29, %28 ], [ %4, %6 ]
  store %class.sk_sp.3* %4, %class.sk_sp.3** %7, align 8
  %32 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %33 = load %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"*, %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"** %32, align 8
  %34 = icmp ne %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %33, null
  %35 = bitcast %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %33 to %class.sk_sp.3*
  %36 = icmp eq %class.sk_sp.3* %31, %35
  %37 = and i1 %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source", %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %33, i64 0, i32 1
  store i8 0, i8* %39, align 8
  br label %42

40:                                               ; preds = %30
  %41 = bitcast %class.sk_sp.3* %31 to i8*
  tail call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %40, %38, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %43 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %44 = load %class.SkImageFilter*, %class.SkImageFilter** %43, align 8
  %45 = icmp eq %class.SkImageFilter* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkImageFilter* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkImageFilter* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #14
  br label %56

56:                                               ; preds = %42, %46, %50
  %57 = bitcast %"class.cc::MergePaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %57) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc16MergePaintFilter14SerializedSizeEv(%"class.cc::MergePaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2
  %3 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %4 = bitcast %class.sk_sp.3** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.35"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %11, label %27

9:                                                ; preds = %52
  %10 = icmp eq i8 %54, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %1, %9
  %12 = phi i64 [ %53, %9 ], [ 0, %1 ]
  %13 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i64 8, i64 24
  %17 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %12, i64 %16) #14
  %18 = extractvalue { i64, i1 } %17, 1
  br i1 %18, label %24, label %19

19:                                               ; preds = %11
  %20 = extractvalue { i64, i1 } %17, 0
  %21 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 8) #14
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  br i1 %22, label %24, label %25, !prof !6

24:                                               ; preds = %9, %11, %19
  br label %25

25:                                               ; preds = %19, %24
  %26 = phi i64 [ 0, %24 ], [ %23, %19 ]
  ret i64 %26

27:                                               ; preds = %1, %52
  %28 = phi i64 [ %57, %52 ], [ %7, %1 ]
  %29 = phi i64 [ %55, %52 ], [ 0, %1 ]
  %30 = phi i64 [ %53, %52 ], [ 0, %1 ]
  %31 = phi i8 [ %54, %52 ], [ 1, %1 ]
  %32 = inttoptr i64 %28 to %class.sk_sp.3*
  %33 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %32, i64 %29, i32 0
  %34 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %33, align 8
  %35 = icmp eq %"class.cc::PaintFilter"* %34, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.cc::PaintFilter"* %34 to i64 (%"class.cc::PaintFilter"*)***
  %38 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %37, align 8
  %39 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %38, i64 3
  %40 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %39, align 8
  %41 = tail call i64 %40(%"class.cc::PaintFilter"* nonnull %34) #14
  %42 = add i64 %41, 4
  br label %43

43:                                               ; preds = %27, %36
  %44 = phi i64 [ %42, %36 ], [ 4, %27 ]
  %45 = icmp eq i8 %31, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %30, i64 %44) #14
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = xor i1 %48, true
  %51 = zext i1 %50 to i8
  br label %52

52:                                               ; preds = %43, %46
  %53 = phi i64 [ %49, %46 ], [ 0, %43 ]
  %54 = phi i8 [ %51, %46 ], [ 0, %43 ]
  %55 = add nuw i64 %29, 1
  %56 = load i64, i64* %4, align 8
  %57 = load i64, i64* %6, align 8
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = icmp ult i64 %55, %59
  br i1 %60, label %27, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16MergePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::MergePaintFilter"* readonly, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 120) #16
  %5 = bitcast i8* %4 to %"class.cc::MergePaintFilter"*
  %6 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = load %class.sk_sp.3*, %class.sk_sp.3** %6, align 8
  %8 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %9 = bitcast %class.sk_sp.3** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %class.sk_sp.3* %7 to i64
  %12 = sub i64 %10, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"class.cc::MergePaintFilter", %"class.cc::MergePaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = select i1 %17, %struct.SkRect* null, %struct.SkRect* %18
  tail call void @_ZN2cc16MergePaintFilterC2EPK5sk_spINS_11PaintFilterEEiPK6SkRectPNS_13ImageProviderE(%"class.cc::MergePaintFilter"* nonnull %5, %class.sk_sp.3* %7, i32 %14, %struct.SkRect* %19, %"class.cc::ImageProvider"* %2)
  %20 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %4, i8** %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21MorphologyPaintFilterC2ENS0_9MorphTypeEff5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::MorphologyPaintFilter"* nocapture, i32, float, float, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %"struct.SkImageFilters::CropRect", align 4
  %10 = alloca %class.sk_sp, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %"struct.SkImageFilters::CropRect", align 4
  %13 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8
  %15 = icmp eq %"class.cc::PaintFilter"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 4
  %18 = load i8, i8* %17, align 8, !range !2
  br label %19

19:                                               ; preds = %6, %16
  %20 = phi i8 [ %18, %16 ], [ 0, %6 ]
  %21 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %23, align 8
  %24 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 14, i32* %24, align 8
  %25 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %20, i8* %26, align 8
  %27 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %27, align 4
  %28 = icmp eq %struct.SkRect* %5, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %19
  store i8 0, i8* %25, align 4
  %30 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %union.anon* %30 to i8*
  %32 = bitcast %struct.SkRect* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* nonnull align 4 %32, i64 16, i1 false) #14
  store i8 1, i8* %25, align 4
  br label %33

33:                                               ; preds = %19, %29
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21MorphologyPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %34 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 1
  store i32 %1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 2
  store float %2, float* %35, align 4
  %36 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 3
  store float %3, float* %36, align 8
  %37 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 4
  %38 = bitcast %class.sk_sp.3* %4 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %13, align 8
  %40 = bitcast %class.sk_sp.3* %37 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load i32, i32* %34, align 8
  %42 = inttoptr i64 %39 to %"class.cc::PaintFilter"*
  switch i32 %41, label %169 [
    i32 0, label %43
    i32 1, label %105
  ]

43:                                               ; preds = %33
  %44 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #14
  %45 = load float, float* %35, align 4
  %46 = load float, float* %36, align 8
  %47 = icmp eq i64 %39, 0
  %48 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  br i1 %47, label %56, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %42, i64 0, i32 1, i32 0
  %51 = load %class.SkImageFilter*, %class.SkImageFilter** %50, align 8, !noalias !260
  %52 = icmp eq %class.SkImageFilter* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic, !noalias !260
  br label %56

56:                                               ; preds = %43, %49, %53
  %57 = phi %class.SkImageFilter* [ null, %49 ], [ %51, %53 ], [ null, %43 ]
  store %class.SkImageFilter* %57, %class.SkImageFilter** %48, align 8, !alias.scope !260
  %58 = bitcast %"struct.SkImageFilters::CropRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #14
  %59 = select i1 %28, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %5
  %60 = bitcast %struct.SkRect* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %58, i8* align 4 %60, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters6DilateEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %7, float %45, float %46, %class.sk_sp* nonnull %8, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %9) #14
  %61 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %63 = bitcast %class.sk_sp* %7 to i64*
  %64 = load i64, i64* %63, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %62, align 8
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %61, i64 0, i32 0
  %66 = load %class.SkImageFilter*, %class.SkImageFilter** %65, align 8
  %67 = bitcast %class.sk_sp* %61 to i64*
  store i64 %64, i64* %67, align 8
  %68 = icmp eq %class.SkImageFilter* %66, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %56
  %70 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = bitcast %class.SkImageFilter* %66 to %class.SkRefCntBase*
  %75 = bitcast %class.SkImageFilter* %66 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8
  call void %78(%class.SkRefCntBase* nonnull %74) #14
  br label %79

79:                                               ; preds = %56, %69, %73
  %80 = load %class.SkImageFilter*, %class.SkImageFilter** %62, align 8
  %81 = icmp eq %class.SkImageFilter* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %80, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %class.SkImageFilter* %80 to %class.SkRefCntBase*
  %88 = bitcast %class.SkImageFilter* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #14
  br label %92

92:                                               ; preds = %79, %82, %86
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #14
  %93 = load %class.SkImageFilter*, %class.SkImageFilter** %48, align 8
  %94 = icmp eq %class.SkImageFilter* %93, null
  br i1 %94, label %167, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %167

99:                                               ; preds = %95
  %100 = bitcast %class.SkImageFilter* %93 to %class.SkRefCntBase*
  %101 = bitcast %class.SkImageFilter* %93 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8
  call void %104(%class.SkRefCntBase* nonnull %100) #14
  br label %167

105:                                              ; preds = %33
  %106 = bitcast %class.sk_sp* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #14
  %107 = load float, float* %35, align 4
  %108 = load float, float* %36, align 8
  %109 = icmp eq i64 %39, 0
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  br i1 %109, label %118, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %42, i64 0, i32 1, i32 0
  %113 = load %class.SkImageFilter*, %class.SkImageFilter** %112, align 8, !noalias !263
  %114 = icmp eq %class.SkImageFilter* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %113, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 1 monotonic, !noalias !263
  br label %118

118:                                              ; preds = %105, %111, %115
  %119 = phi %class.SkImageFilter* [ null, %111 ], [ %113, %115 ], [ null, %105 ]
  store %class.SkImageFilter* %119, %class.SkImageFilter** %110, align 8, !alias.scope !263
  %120 = bitcast %"struct.SkImageFilters::CropRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #14
  %121 = select i1 %28, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %5
  %122 = bitcast %struct.SkRect* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %120, i8* align 4 %122, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters5ErodeEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %10, float %107, float %108, %class.sk_sp* nonnull %11, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %12) #14
  %123 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 1
  %124 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %125 = bitcast %class.sk_sp* %10 to i64*
  %126 = load i64, i64* %125, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %124, align 8
  %127 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %123, i64 0, i32 0
  %128 = load %class.SkImageFilter*, %class.SkImageFilter** %127, align 8
  %129 = bitcast %class.sk_sp* %123 to i64*
  store i64 %126, i64* %129, align 8
  %130 = icmp eq %class.SkImageFilter* %128, null
  br i1 %130, label %141, label %131

131:                                              ; preds = %118
  %132 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %128, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = bitcast %class.SkImageFilter* %128 to %class.SkRefCntBase*
  %137 = bitcast %class.SkImageFilter* %128 to void (%class.SkRefCntBase*)***
  %138 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %137, align 8
  %139 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, i64 2
  %140 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, align 8
  call void %140(%class.SkRefCntBase* nonnull %136) #14
  br label %141

141:                                              ; preds = %118, %131, %135
  %142 = load %class.SkImageFilter*, %class.SkImageFilter** %124, align 8
  %143 = icmp eq %class.SkImageFilter* %142, null
  br i1 %143, label %154, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %142, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw add i32* %145, i32 -1 acq_rel
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %154

148:                                              ; preds = %144
  %149 = bitcast %class.SkImageFilter* %142 to %class.SkRefCntBase*
  %150 = bitcast %class.SkImageFilter* %142 to void (%class.SkRefCntBase*)***
  %151 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %150, align 8
  %152 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, i64 2
  %153 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, align 8
  call void %153(%class.SkRefCntBase* nonnull %149) #14
  br label %154

154:                                              ; preds = %141, %144, %148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #14
  %155 = load %class.SkImageFilter*, %class.SkImageFilter** %110, align 8
  %156 = icmp eq %class.SkImageFilter* %155, null
  br i1 %156, label %167, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %155, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = atomicrmw add i32* %158, i32 -1 acq_rel
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %167

161:                                              ; preds = %157
  %162 = bitcast %class.SkImageFilter* %155 to %class.SkRefCntBase*
  %163 = bitcast %class.SkImageFilter* %155 to void (%class.SkRefCntBase*)***
  %164 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %163, align 8
  %165 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %164, i64 2
  %166 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %165, align 8
  call void %166(%class.SkRefCntBase* nonnull %162) #14
  br label %167

167:                                              ; preds = %161, %157, %154, %99, %95, %92
  %168 = phi i8* [ %44, %92 ], [ %44, %95 ], [ %44, %99 ], [ %106, %154 ], [ %106, %157 ], [ %106, %161 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #14
  br label %169

169:                                              ; preds = %167, %33
  ret void
}

declare void @_ZN14SkImageFilters6DilateEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN14SkImageFilters5ErodeEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21MorphologyPaintFilterD2Ev(%"class.cc::MorphologyPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21MorphologyPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21MorphologyPaintFilterD0Ev(%"class.cc::MorphologyPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21MorphologyPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::MorphologyPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc21MorphologyPaintFilter14SerializedSizeEv(%"class.cc::MorphologyPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 20, i64 36
  %6 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %0, i64 0, i32 4, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc21MorphologyPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::MorphologyPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 3
  %9 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 4, i32 0
  %11 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8, !noalias !266
  %12 = icmp eq %"class.cc::PaintFilter"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %14, align 8, !alias.scope !266
  br label %31

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !2, !noalias !269
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !272
  %22 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %11, %"class.cc::PaintFilter"** %22, align 8, !alias.scope !275
  %23 = ptrtoint %"class.cc::PaintFilter"* %11 to i64
  br label %31

24:                                               ; preds = %15
  %25 = bitcast %"class.cc::PaintFilter"* %11 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %26 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %25, align 8, !noalias !269
  %27 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %26, i64 4
  %28 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %27, align 8, !noalias !269
  call void %28(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %11, %"class.cc::ImageProvider"* %2) #14
  %29 = bitcast %class.sk_sp.3* %5 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !276
  br label %31

31:                                               ; preds = %13, %19, %24
  %32 = phi i64 [ 0, %13 ], [ %23, %19 ], [ %30, %24 ]
  %33 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = getelementptr inbounds %"class.cc::MorphologyPaintFilter", %"class.cc::MorphologyPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = select i1 %35, %struct.SkRect* null, %struct.SkRect* %36
  %38 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = call i8* @_Znwm(i64 80) #16, !noalias !276
  %40 = bitcast i8* %39 to %"class.cc::MorphologyPaintFilter"*
  %41 = load i32, i32* %6, align 4, !noalias !276
  %42 = load float, float* %7, align 4, !noalias !276
  %43 = load float, float* %8, align 4, !noalias !276
  %44 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %44, align 8, !noalias !276
  %45 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %32, i64* %45, align 8, !noalias !276
  call void @_ZN2cc21MorphologyPaintFilterC2ENS0_9MorphTypeEff5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::MorphologyPaintFilter"* nonnull %40, i32 %41, float %42, float %43, %class.sk_sp.3* nonnull %4, %struct.SkRect* %37) #14, !noalias !276
  %46 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %47 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %46, align 8, !noalias !276
  %48 = icmp eq %"class.cc::PaintFilter"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel, !noalias !276
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %"class.cc::PaintFilter"* %47 to %class.SkRefCntBase*
  %55 = bitcast %"class.cc::PaintFilter"* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8, !noalias !276
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8, !noalias !276
  call void %58(%class.SkRefCntBase* nonnull %54) #14, !noalias !276
  br label %59

59:                                               ; preds = %53, %49, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  %60 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %39, i8** %60, align 8
  %61 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %44, align 8
  %62 = icmp eq %"class.cc::PaintFilter"* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %61, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %"class.cc::PaintFilter"* %61 to %class.SkRefCntBase*
  %69 = bitcast %"class.cc::PaintFilter"* %61 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  call void %72(%class.SkRefCntBase* nonnull %68) #14
  br label %73

73:                                               ; preds = %59, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17OffsetPaintFilterC2Eff5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::OffsetPaintFilter"* nocapture, float, float, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %"struct.SkImageFilters::CropRect", align 4
  %9 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %10 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8
  %11 = icmp eq %"class.cc::PaintFilter"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 4
  %14 = load i8, i8* %13, align 8, !range !2
  br label %15

15:                                               ; preds = %5, %12
  %16 = phi i8 [ %14, %12 ], [ 0, %5 ]
  %17 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %19, align 8
  %20 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 15, i32* %20, align 8
  %21 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %16, i8* %22, align 8
  %23 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %23, align 4
  %24 = icmp eq %struct.SkRect* %4, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %15
  store i8 0, i8* %21, align 4
  %26 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %union.anon* %26 to i8*
  %28 = bitcast %struct.SkRect* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %28, i64 16, i1 false) #14
  store i8 1, i8* %21, align 4
  br label %29

29:                                               ; preds = %15, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17OffsetPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %30 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 1
  store float %1, float* %30, align 8
  %31 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 2
  store float %2, float* %31, align 4
  %32 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 3
  %33 = bitcast %class.sk_sp.3* %3 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %9, align 8
  %35 = bitcast %class.sk_sp.3* %32 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  %37 = load float, float* %30, align 8
  %38 = load float, float* %31, align 4
  %39 = icmp eq i64 %34, 0
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  br i1 %39, label %49, label %41

41:                                               ; preds = %29
  %42 = inttoptr i64 %34 to %"class.cc::PaintFilter"*
  %43 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %42, i64 0, i32 1, i32 0
  %44 = load %class.SkImageFilter*, %class.SkImageFilter** %43, align 8, !noalias !279
  %45 = icmp eq %class.SkImageFilter* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic, !noalias !279
  br label %49

49:                                               ; preds = %29, %41, %46
  %50 = phi %class.SkImageFilter* [ null, %41 ], [ %44, %46 ], [ null, %29 ]
  store %class.SkImageFilter* %50, %class.SkImageFilter** %40, align 8, !alias.scope !279
  %51 = bitcast %"struct.SkImageFilters::CropRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #14
  %52 = select i1 %24, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %4
  %53 = bitcast %struct.SkRect* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %53, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters6OffsetEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %6, float %37, float %38, %class.sk_sp* nonnull %7, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %8) #14
  %54 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %56 = bitcast %class.sk_sp* %6 to i64*
  %57 = load i64, i64* %56, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %55, align 8
  %58 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %54, i64 0, i32 0
  %59 = load %class.SkImageFilter*, %class.SkImageFilter** %58, align 8
  %60 = bitcast %class.sk_sp* %54 to i64*
  store i64 %57, i64* %60, align 8
  %61 = icmp eq %class.SkImageFilter* %59, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %49
  %63 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %59, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkImageFilter* %59 to %class.SkRefCntBase*
  %68 = bitcast %class.SkImageFilter* %59 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #14
  br label %72

72:                                               ; preds = %49, %62, %66
  %73 = load %class.SkImageFilter*, %class.SkImageFilter** %55, align 8
  %74 = icmp eq %class.SkImageFilter* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %class.SkImageFilter* %73 to %class.SkRefCntBase*
  %81 = bitcast %class.SkImageFilter* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  call void %84(%class.SkRefCntBase* nonnull %80) #14
  br label %85

85:                                               ; preds = %72, %75, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #14
  %86 = load %class.SkImageFilter*, %class.SkImageFilter** %40, align 8
  %87 = icmp eq %class.SkImageFilter* %86, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %86, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %class.SkImageFilter* %86 to %class.SkRefCntBase*
  %94 = bitcast %class.SkImageFilter* %86 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  call void %97(%class.SkRefCntBase* nonnull %93) #14
  br label %98

98:                                               ; preds = %85, %88, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  ret void
}

declare void @_ZN14SkImageFilters6OffsetEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17OffsetPaintFilterD2Ev(%"class.cc::OffsetPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17OffsetPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17OffsetPaintFilterD0Ev(%"class.cc::OffsetPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17OffsetPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::OffsetPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc17OffsetPaintFilter14SerializedSizeEv(%"class.cc::OffsetPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 16, i64 32
  %6 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %0, i64 0, i32 3, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc17OffsetPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::OffsetPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 2
  %8 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 3, i32 0
  %10 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8, !noalias !282
  %11 = icmp eq %"class.cc::PaintFilter"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %13, align 8, !alias.scope !282
  br label %30

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 4
  %16 = load i8, i8* %15, align 8, !range !2, !noalias !285
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !288
  %21 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %10, %"class.cc::PaintFilter"** %21, align 8, !alias.scope !291
  %22 = ptrtoint %"class.cc::PaintFilter"* %10 to i64
  br label %30

23:                                               ; preds = %14
  %24 = bitcast %"class.cc::PaintFilter"* %10 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %25 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %24, align 8, !noalias !285
  %26 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %25, i64 4
  %27 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %26, align 8, !noalias !285
  call void %27(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %10, %"class.cc::ImageProvider"* %2) #14
  %28 = bitcast %class.sk_sp.3* %5 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !292
  br label %30

30:                                               ; preds = %12, %18, %23
  %31 = phi i64 [ 0, %12 ], [ %22, %18 ], [ %29, %23 ]
  %32 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = getelementptr inbounds %"class.cc::OffsetPaintFilter", %"class.cc::OffsetPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = select i1 %34, %struct.SkRect* null, %struct.SkRect* %35
  %37 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = call i8* @_Znwm(i64 72) #16, !noalias !292
  %39 = bitcast i8* %38 to %"class.cc::OffsetPaintFilter"*
  %40 = load float, float* %6, align 4, !noalias !292
  %41 = load float, float* %7, align 4, !noalias !292
  %42 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %42, align 8, !noalias !292
  %43 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %31, i64* %43, align 8, !noalias !292
  call void @_ZN2cc17OffsetPaintFilterC2Eff5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::OffsetPaintFilter"* nonnull %39, float %40, float %41, %class.sk_sp.3* nonnull %4, %struct.SkRect* %36) #14, !noalias !292
  %44 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %45 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %44, align 8, !noalias !292
  %46 = icmp eq %"class.cc::PaintFilter"* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %30
  %48 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel, !noalias !292
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %"class.cc::PaintFilter"* %45 to %class.SkRefCntBase*
  %53 = bitcast %"class.cc::PaintFilter"* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8, !noalias !292
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8, !noalias !292
  call void %56(%class.SkRefCntBase* nonnull %52) #14, !noalias !292
  br label %57

57:                                               ; preds = %51, %47, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %58 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %38, i8** %58, align 8
  %59 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %42, align 8
  %60 = icmp eq %"class.cc::PaintFilter"* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %"class.cc::PaintFilter"* %59 to %class.SkRefCntBase*
  %67 = bitcast %"class.cc::PaintFilter"* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  call void %70(%class.SkRefCntBase* nonnull %66) #14
  br label %71

71:                                               ; preds = %57, %61, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15TilePaintFilterC2ERK6SkRectS3_5sk_spINS_11PaintFilterEE(%"class.cc::TilePaintFilter"*, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16), %class.sk_sp.3* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %8 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %7, align 8
  %9 = icmp eq %"class.cc::PaintFilter"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %8, i64 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !2
  br label %13

13:                                               ; preds = %4, %10
  %14 = phi i8 [ %12, %10 ], [ 0, %4 ]
  %15 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %17, align 8
  %18 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 16, i32* %18, align 8
  %19 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %14, i8* %20, align 8
  %21 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %21, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc15TilePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %22 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 1
  %23 = bitcast %struct.SkRect* %22 to i8*
  %24 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 4 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 2
  %26 = bitcast %struct.SkRect* %25 to i8*
  %27 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 4 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 3
  %29 = bitcast %class.sk_sp.3* %3 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %7, align 8
  %31 = bitcast %class.sk_sp.3* %28 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  %33 = icmp eq i64 %30, 0
  %34 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  br i1 %33, label %43, label %35

35:                                               ; preds = %13
  %36 = inttoptr i64 %30 to %"class.cc::PaintFilter"*
  %37 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %36, i64 0, i32 1, i32 0
  %38 = load %class.SkImageFilter*, %class.SkImageFilter** %37, align 8, !noalias !295
  %39 = icmp eq %class.SkImageFilter* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic, !noalias !295
  br label %43

43:                                               ; preds = %13, %35, %40
  %44 = phi %class.SkImageFilter* [ null, %35 ], [ %38, %40 ], [ null, %13 ]
  store %class.SkImageFilter* %44, %class.SkImageFilter** %34, align 8, !alias.scope !295
  call void @_ZN14SkImageFilters4TileERK6SkRectS2_5sk_spI13SkImageFilterE(%class.sk_sp* nonnull sret %5, %struct.SkRect* dereferenceable(16) %22, %struct.SkRect* dereferenceable(16) %25, %class.sk_sp* nonnull %6) #14
  %45 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %47 = bitcast %class.sk_sp* %5 to i64*
  %48 = load i64, i64* %47, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %46, align 8
  %49 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %45, i64 0, i32 0
  %50 = load %class.SkImageFilter*, %class.SkImageFilter** %49, align 8
  %51 = bitcast %class.sk_sp* %45 to i64*
  store i64 %48, i64* %51, align 8
  %52 = icmp eq %class.SkImageFilter* %50, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %43
  %54 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkImageFilter* %50 to %class.SkRefCntBase*
  %59 = bitcast %class.SkImageFilter* %50 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #14
  br label %63

63:                                               ; preds = %43, %53, %57
  %64 = load %class.SkImageFilter*, %class.SkImageFilter** %46, align 8
  %65 = icmp eq %class.SkImageFilter* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkImageFilter* %64 to %class.SkRefCntBase*
  %72 = bitcast %class.SkImageFilter* %64 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  call void %75(%class.SkRefCntBase* nonnull %71) #14
  br label %76

76:                                               ; preds = %63, %66, %70
  %77 = load %class.SkImageFilter*, %class.SkImageFilter** %34, align 8
  %78 = icmp eq %class.SkImageFilter* %77, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %77, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %89

83:                                               ; preds = %79
  %84 = bitcast %class.SkImageFilter* %77 to %class.SkRefCntBase*
  %85 = bitcast %class.SkImageFilter* %77 to void (%class.SkRefCntBase*)***
  %86 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %85, align 8
  %87 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, i64 2
  %88 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, align 8
  call void %88(%class.SkRefCntBase* nonnull %84) #14
  br label %89

89:                                               ; preds = %76, %79, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  ret void
}

declare void @_ZN14SkImageFilters4TileERK6SkRectS2_5sk_spI13SkImageFilterE(%class.sk_sp* sret, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %class.sk_sp*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15TilePaintFilterD2Ev(%"class.cc::TilePaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc15TilePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15TilePaintFilterD0Ev(%"class.cc::TilePaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc15TilePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::TilePaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc15TilePaintFilter14SerializedSizeEv(%"class.cc::TilePaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 40, i64 56
  %6 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %0, i64 0, i32 3, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc15TilePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::TilePaintFilter"* nocapture readonly, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %1, i64 0, i32 2
  %8 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.cc::TilePaintFilter", %"class.cc::TilePaintFilter"* %1, i64 0, i32 3, i32 0
  %10 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8, !noalias !298
  %11 = icmp eq %"class.cc::PaintFilter"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %13, align 8, !alias.scope !298
  br label %30

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 4
  %16 = load i8, i8* %15, align 8, !range !2, !noalias !301
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !304
  %21 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %10, %"class.cc::PaintFilter"** %21, align 8, !alias.scope !307
  %22 = ptrtoint %"class.cc::PaintFilter"* %10 to i64
  br label %30

23:                                               ; preds = %14
  %24 = bitcast %"class.cc::PaintFilter"* %10 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %25 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %24, align 8, !noalias !301
  %26 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %25, i64 4
  %27 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %26, align 8, !noalias !301
  call void %27(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %10, %"class.cc::ImageProvider"* %2) #14
  %28 = bitcast %class.sk_sp.3* %5 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !308
  br label %30

30:                                               ; preds = %12, %18, %23
  %31 = phi i64 [ 0, %12 ], [ %22, %18 ], [ %29, %23 ]
  %32 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = call i8* @_Znwm(i64 96) #16, !noalias !308
  %34 = bitcast i8* %33 to %"class.cc::TilePaintFilter"*
  %35 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %35, align 8, !noalias !308
  %36 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %31, i64* %36, align 8, !noalias !308
  call void @_ZN2cc15TilePaintFilterC2ERK6SkRectS3_5sk_spINS_11PaintFilterEE(%"class.cc::TilePaintFilter"* nonnull %34, %struct.SkRect* dereferenceable(16) %6, %struct.SkRect* dereferenceable(16) %7, %class.sk_sp.3* nonnull %4) #14, !noalias !308
  %37 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %38 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %37, align 8, !noalias !308
  %39 = icmp eq %"class.cc::PaintFilter"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel, !noalias !308
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %"class.cc::PaintFilter"* %38 to %class.SkRefCntBase*
  %46 = bitcast %"class.cc::PaintFilter"* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8, !noalias !308
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8, !noalias !308
  call void %49(%class.SkRefCntBase* nonnull %45) #14, !noalias !308
  br label %50

50:                                               ; preds = %44, %40, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %51 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %33, i8** %51, align 8
  %52 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %35, align 8
  %53 = icmp eq %"class.cc::PaintFilter"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %"class.cc::PaintFilter"* %52 to %class.SkRefCntBase*
  %60 = bitcast %"class.cc::PaintFilter"* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #14
  br label %64

64:                                               ; preds = %50, %54, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21TurbulencePaintFilterC2ENS0_14TurbulenceTypeEffifPK7SkISizePK6SkRect(%"class.cc::TurbulencePaintFilter"*, i32, float, float, i32, float, %struct.SkISize* readonly, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp.97, align 8
  %10 = alloca %class.sk_sp.97, align 8
  %11 = alloca %class.sk_sp.97, align 8
  %12 = alloca %class.sk_sp, align 8
  %13 = alloca %"struct.SkImageFilters::CropRect", align 4
  %14 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %16, align 8
  %17 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 17, i32* %17, align 8
  %18 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %20, align 4
  %21 = icmp eq %struct.SkRect* %7, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %8
  store i8 0, i8* %18, align 4
  %23 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %union.anon* %23 to i8*
  %25 = bitcast %struct.SkRect* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 4 %25, i64 16, i1 false) #14
  store i8 1, i8* %18, align 4
  br label %26

26:                                               ; preds = %8, %22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc21TurbulencePaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %27 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 1
  store i32 %1, i32* %27, align 8
  %28 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 2
  store float %2, float* %28, align 4
  %29 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 3
  store float %3, float* %29, align 8
  %30 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 4
  store i32 %4, i32* %30, align 4
  %31 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 5
  store float %5, float* %31, align 8
  %32 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 6
  %33 = icmp eq %struct.SkISize* %6, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %26
  %35 = bitcast %struct.SkISize* %6 to i64*
  %36 = bitcast %struct.SkISize* %32 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 4
  br label %40

38:                                               ; preds = %26
  %39 = bitcast %struct.SkISize* %32 to i64*
  store i64 0, i64* %39, align 4
  br label %40

40:                                               ; preds = %38, %34
  switch i32 %1, label %50 [
    i32 0, label %41
    i32 1, label %43
  ]

41:                                               ; preds = %40
  %42 = bitcast %class.sk_sp.97* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #14
  call void @_ZN19SkPerlinNoiseShader14MakeTurbulenceEffifPK7SkISize(%class.sk_sp.97* nonnull sret %10, float %2, float %3, i32 %4, float %5, %struct.SkISize* %32) #14
  br label %45

43:                                               ; preds = %40
  %44 = bitcast %class.sk_sp.97* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #14
  call void @_ZN19SkPerlinNoiseShader16MakeFractalNoiseEffifPK7SkISize(%class.sk_sp.97* nonnull sret %11, float %2, float %3, i32 %4, float %5, %struct.SkISize* %32) #14
  br label %45

45:                                               ; preds = %41, %43
  %46 = phi %class.sk_sp.97* [ %11, %43 ], [ %10, %41 ]
  %47 = phi i8* [ %44, %43 ], [ %42, %41 ]
  %48 = bitcast %class.sk_sp.97* %46 to i64*
  %49 = load i64, i64* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi i64 [ 0, %40 ], [ %49, %45 ]
  %52 = bitcast %class.sk_sp* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14
  %53 = bitcast %"struct.SkImageFilters::CropRect"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #14
  %54 = select i1 %21, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %7
  %55 = bitcast %struct.SkRect* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* align 4 %55, i64 16, i1 false) #14
  %56 = bitcast %class.sk_sp.97* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56)
  %57 = bitcast %class.sk_sp.97* %9 to i64*
  store i64 %51, i64* %57, align 8, !noalias !311
  call void @_ZN14SkImageFilters6ShaderE5sk_spI8SkShaderENS_6DitherERKNS_8CropRectE(%class.sk_sp* nonnull sret %12, %class.sk_sp.97* nonnull %9, i1 zeroext false, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %13) #14
  %58 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %9, i64 0, i32 0
  %59 = load %class.SkShader*, %class.SkShader** %58, align 8, !noalias !311
  %60 = icmp eq %class.SkShader* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %50
  %62 = getelementptr inbounds %class.SkShader, %class.SkShader* %59, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkShader* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.SkShader* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  call void %70(%class.SkRefCntBase* nonnull %66) #14
  br label %71

71:                                               ; preds = %50, %61, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  %72 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 1
  %73 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  %74 = bitcast %class.sk_sp* %12 to i64*
  %75 = load i64, i64* %74, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %73, align 8
  %76 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %72, i64 0, i32 0
  %77 = load %class.SkImageFilter*, %class.SkImageFilter** %76, align 8
  %78 = bitcast %class.sk_sp* %72 to i64*
  store i64 %75, i64* %78, align 8
  %79 = icmp eq %class.SkImageFilter* %77, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %77, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %class.SkImageFilter* %77 to %class.SkRefCntBase*
  %86 = bitcast %class.SkImageFilter* %77 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  call void %89(%class.SkRefCntBase* nonnull %85) #14
  br label %90

90:                                               ; preds = %71, %80, %84
  %91 = load %class.SkImageFilter*, %class.SkImageFilter** %73, align 8
  %92 = icmp eq %class.SkImageFilter* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %91, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = bitcast %class.SkImageFilter* %91 to %class.SkRefCntBase*
  %99 = bitcast %class.SkImageFilter* %91 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  call void %102(%class.SkRefCntBase* nonnull %98) #14
  br label %103

103:                                              ; preds = %90, %93, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #14
  ret void
}

declare void @_ZN19SkPerlinNoiseShader14MakeTurbulenceEffifPK7SkISize(%class.sk_sp.97* sret, float, float, i32, float, %struct.SkISize*) local_unnamed_addr #5

declare void @_ZN19SkPerlinNoiseShader16MakeFractalNoiseEffifPK7SkISize(%class.sk_sp.97* sret, float, float, i32, float, %struct.SkISize*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21TurbulencePaintFilterD0Ev(%"class.cc::TurbulencePaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %class.SkImageFilter*, %class.SkImageFilter** %3, align 8
  %5 = icmp eq %class.SkImageFilter* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImageFilter* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImageFilter* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.cc::TurbulencePaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc21TurbulencePaintFilter14SerializedSizeEv(%"class.cc::TurbulencePaintFilter"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 36, i64 52
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc21TurbulencePaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::TurbulencePaintFilter"*, %"class.cc::ImageProvider"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 2
  %6 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 4
  %8 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 5
  %9 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 6
  %10 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.cc::TurbulencePaintFilter", %"class.cc::TurbulencePaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = select i1 %12, %struct.SkRect* null, %struct.SkRect* %13
  %15 = tail call i8* @_Znwm(i64 88) #16, !noalias !314
  %16 = bitcast i8* %15 to %"class.cc::TurbulencePaintFilter"*
  %17 = load i32, i32* %4, align 4, !noalias !314
  %18 = load float, float* %5, align 4, !noalias !314
  %19 = load float, float* %6, align 4, !noalias !314
  %20 = load i32, i32* %7, align 4, !noalias !314
  %21 = load float, float* %8, align 4, !noalias !314
  tail call void @_ZN2cc21TurbulencePaintFilterC2ENS0_14TurbulenceTypeEffifPK7SkISizePK6SkRect(%"class.cc::TurbulencePaintFilter"* nonnull %16, i32 %17, float %18, float %19, i32 %20, float %21, %struct.SkISize* %9, %struct.SkRect* %14) #14, !noalias !314
  %22 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %15, i8** %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17ShaderPaintFilterC2E5sk_spINS_11PaintShaderEEh15SkFilterQualityN14SkImageFilters6DitherEPK6SkRect(%"class.cc::ShaderPaintFilter"* nocapture, %class.sk_sp.40* nocapture, i8 zeroext, i32, i1 zeroext, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.97, align 8
  %8 = alloca %class.sk_sp.97, align 8
  %9 = alloca %class.sk_sp.97, align 8
  %10 = alloca %class.sk_sp.97, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %class.sk_sp.97, align 8
  %13 = alloca %"struct.SkImageFilters::CropRect", align 4
  %14 = zext i1 %4 to i8
  %15 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %1, i64 0, i32 0
  %16 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK2cc11PaintShader22has_discardable_imagesEv(%"class.cc::PaintShader"* %16) #14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %21, align 8
  %22 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 18, i32* %22, align 8
  %23 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %18, i8* %24, align 8
  %25 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %25, align 4
  %26 = icmp eq %struct.SkRect* %5, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %6
  store i8 0, i8* %23, align 4
  %28 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %union.anon* %28 to i8*
  %30 = bitcast %struct.SkRect* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* nonnull align 4 %30, i64 16, i1 false) #14
  store i8 1, i8* %23, align 4
  br label %31

31:                                               ; preds = %6, %27
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17ShaderPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %32 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 1
  %33 = bitcast %class.sk_sp.40* %1 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %15, align 8
  %35 = bitcast %class.sk_sp.40* %32 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 2
  store i8 %2, i8* %36, align 8
  %37 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 4
  store i32 %3, i32* %37, align 4
  %38 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 5
  store i8 %14, i8* %38, align 8
  %39 = bitcast %class.sk_sp.97* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %7, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %40, align 8
  %41 = inttoptr i64 %34 to %"class.cc::PaintShader"*
  call void @_ZNK2cc11PaintShader11GetSkShaderE15SkFilterQuality(%class.sk_sp.97* nonnull sret %7, %"class.cc::PaintShader"* %41, i32 %3) #14
  %42 = icmp eq i8 %2, -1
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = bitcast %class.sk_sp.97* %7 to i64*
  br label %110

45:                                               ; preds = %31
  %46 = zext i8 %2 to i32
  %47 = shl nuw i32 %46, 24
  %48 = or i32 %47, 16777215
  %49 = bitcast %class.sk_sp.97* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #14
  %50 = bitcast %class.sk_sp.97* %7 to i64*
  %51 = load i64, i64* %50, align 8
  store %class.SkShader* null, %class.SkShader** %40, align 8
  %52 = bitcast %class.sk_sp.97* %9 to i64*
  store i64 %51, i64* %52, align 8
  call void @_ZN9SkShaders5ColorEj(%class.sk_sp.97* nonnull sret %10, i32 %48) #14
  call void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.97* nonnull sret %8, i32 6, %class.sk_sp.97* nonnull %9, %class.sk_sp.97* nonnull %10) #14
  %53 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %8, i64 0, i32 0
  %54 = bitcast %class.sk_sp.97* %8 to i64*
  %55 = load i64, i64* %54, align 8
  store %class.SkShader* null, %class.SkShader** %53, align 8
  %56 = load %class.SkShader*, %class.SkShader** %40, align 8
  store i64 %55, i64* %50, align 8
  %57 = icmp eq %class.SkShader* %56, null
  br i1 %57, label %81, label %58

58:                                               ; preds = %45
  %59 = getelementptr inbounds %class.SkShader, %class.SkShader* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %class.SkShader* %56 to %class.SkRefCntBase*
  %64 = bitcast %class.SkShader* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  call void %67(%class.SkRefCntBase* nonnull %63) #14
  br label %68

68:                                               ; preds = %58, %62
  %69 = load %class.SkShader*, %class.SkShader** %53, align 8
  %70 = icmp eq %class.SkShader* %69, null
  br i1 %70, label %81, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %class.SkShader, %class.SkShader* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = bitcast %class.SkShader* %69 to %class.SkRefCntBase*
  %77 = bitcast %class.SkShader* %69 to void (%class.SkRefCntBase*)***
  %78 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, i64 2
  %80 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, align 8
  call void %80(%class.SkRefCntBase* nonnull %76) #14
  br label %81

81:                                               ; preds = %45, %68, %71, %75
  %82 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %10, i64 0, i32 0
  %83 = load %class.SkShader*, %class.SkShader** %82, align 8
  %84 = icmp eq %class.SkShader* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.SkShader, %class.SkShader* %83, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %class.SkShader* %83 to %class.SkRefCntBase*
  %91 = bitcast %class.SkShader* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8
  call void %94(%class.SkRefCntBase* nonnull %90) #14
  br label %95

95:                                               ; preds = %81, %85, %89
  %96 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %9, i64 0, i32 0
  %97 = load %class.SkShader*, %class.SkShader** %96, align 8
  %98 = icmp eq %class.SkShader* %97, null
  br i1 %98, label %109, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.SkShader, %class.SkShader* %97, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = bitcast %class.SkShader* %97 to %class.SkRefCntBase*
  %105 = bitcast %class.SkShader* %97 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  call void %108(%class.SkRefCntBase* nonnull %104) #14
  br label %109

109:                                              ; preds = %95, %99, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #14
  br label %110

110:                                              ; preds = %43, %109
  %111 = phi i64* [ %44, %43 ], [ %50, %109 ]
  %112 = bitcast %class.sk_sp* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #14
  %113 = load i64, i64* %111, align 8
  store %class.SkShader* null, %class.SkShader** %40, align 8
  %114 = bitcast %class.sk_sp.97* %12 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.SkImageFilters::CropRect"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #14
  %116 = select i1 %26, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %5
  %117 = bitcast %struct.SkRect* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %115, i8* align 4 %117, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters6ShaderE5sk_spI8SkShaderENS_6DitherERKNS_8CropRectE(%class.sk_sp* nonnull sret %11, %class.sk_sp.97* nonnull %12, i1 zeroext %4, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %13) #14
  %118 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 1
  %119 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %120 = bitcast %class.sk_sp* %11 to i64*
  %121 = load i64, i64* %120, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %119, align 8
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %118, i64 0, i32 0
  %123 = load %class.SkImageFilter*, %class.SkImageFilter** %122, align 8
  %124 = bitcast %class.sk_sp* %118 to i64*
  store i64 %121, i64* %124, align 8
  %125 = icmp eq %class.SkImageFilter* %123, null
  br i1 %125, label %136, label %126

126:                                              ; preds = %110
  %127 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %123, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 -1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %136

130:                                              ; preds = %126
  %131 = bitcast %class.SkImageFilter* %123 to %class.SkRefCntBase*
  %132 = bitcast %class.SkImageFilter* %123 to void (%class.SkRefCntBase*)***
  %133 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %132, align 8
  %134 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %133, i64 2
  %135 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %134, align 8
  call void %135(%class.SkRefCntBase* nonnull %131) #14
  br label %136

136:                                              ; preds = %110, %126, %130
  %137 = load %class.SkImageFilter*, %class.SkImageFilter** %119, align 8
  %138 = icmp eq %class.SkImageFilter* %137, null
  br i1 %138, label %149, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %137, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %149

143:                                              ; preds = %139
  %144 = bitcast %class.SkImageFilter* %137 to %class.SkRefCntBase*
  %145 = bitcast %class.SkImageFilter* %137 to void (%class.SkRefCntBase*)***
  %146 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %145, align 8
  %147 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, i64 2
  %148 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %147, align 8
  call void %148(%class.SkRefCntBase* nonnull %144) #14
  br label %149

149:                                              ; preds = %136, %139, %143
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #14
  %150 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %12, i64 0, i32 0
  %151 = load %class.SkShader*, %class.SkShader** %150, align 8
  %152 = icmp eq %class.SkShader* %151, null
  br i1 %152, label %163, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %class.SkShader, %class.SkShader* %151, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = atomicrmw add i32* %154, i32 -1 acq_rel
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %163

157:                                              ; preds = %153
  %158 = bitcast %class.SkShader* %151 to %class.SkRefCntBase*
  %159 = bitcast %class.SkShader* %151 to void (%class.SkRefCntBase*)***
  %160 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %159, align 8
  %161 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %160, i64 2
  %162 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %161, align 8
  call void %162(%class.SkRefCntBase* nonnull %158) #14
  br label %163

163:                                              ; preds = %149, %153, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #14
  %164 = load %class.SkShader*, %class.SkShader** %40, align 8
  %165 = icmp eq %class.SkShader* %164, null
  br i1 %165, label %176, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %class.SkShader, %class.SkShader* %164, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = atomicrmw add i32* %167, i32 -1 acq_rel
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %176

170:                                              ; preds = %166
  %171 = bitcast %class.SkShader* %164 to %class.SkRefCntBase*
  %172 = bitcast %class.SkShader* %164 to void (%class.SkRefCntBase*)***
  %173 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %172, align 8
  %174 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %173, i64 2
  %175 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %174, align 8
  call void %175(%class.SkRefCntBase* nonnull %171) #14
  br label %176

176:                                              ; preds = %163, %166, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  ret void
}

declare zeroext i1 @_ZNK2cc11PaintShader22has_discardable_imagesEv(%"class.cc::PaintShader"*) local_unnamed_addr #5

declare void @_ZNK2cc11PaintShader11GetSkShaderE15SkFilterQuality(%class.sk_sp.97* sret, %"class.cc::PaintShader"*, i32) local_unnamed_addr #5

declare void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.97* sret, i32, %class.sk_sp.97*, %class.sk_sp.97*) local_unnamed_addr #5

declare void @_ZN9SkShaders5ColorEj(%class.sk_sp.97* sret, i32) local_unnamed_addr #5

declare void @_ZN14SkImageFilters6ShaderE5sk_spI8SkShaderENS_6DitherERKNS_8CropRectE(%class.sk_sp* sret, %class.sk_sp.97*, i1 zeroext, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17ShaderPaintFilterD2Ev(%"class.cc::ShaderPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17ShaderPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %3, align 8
  %5 = icmp eq %"class.cc::PaintShader"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintShader"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintShader"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17ShaderPaintFilterD0Ev(%"class.cc::ShaderPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17ShaderPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %3, align 8
  %5 = icmp eq %"class.cc::PaintShader"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintShader"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintShader"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::ShaderPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc17ShaderPaintFilter14SerializedSizeEv(%"class.cc::ShaderPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 8, i64 24
  %6 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %6, align 8
  %8 = tail call i64 @_ZN2cc11PaintShader17GetSerializedSizeEPKS0_(%"class.cc::PaintShader"* %7) #14
  %9 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %8) #14
  %10 = extractvalue { i64, i1 } %9, 1
  br i1 %10, label %24, label %11

11:                                               ; preds = %1
  %12 = extractvalue { i64, i1 } %9, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %12, i64 1) #14
  %14 = extractvalue { i64, i1 } %13, 1
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = extractvalue { i64, i1 } %13, 0
  %17 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %16, i64 4) #14
  %18 = extractvalue { i64, i1 } %17, 1
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = extractvalue { i64, i1 } %17, 0
  %21 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 1) #14
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  br i1 %22, label %24, label %25, !prof !6

24:                                               ; preds = %1, %11, %15, %19
  br label %25

25:                                               ; preds = %19, %24
  %26 = phi i64 [ 0, %24 ], [ %23, %19 ]
  ret i64 %26
}

declare i64 @_ZN2cc11PaintShader17GetSerializedSizeEPKS0_(%"class.cc::PaintShader"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc17ShaderPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::ShaderPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.40, align 8
  %5 = alloca %class.sk_sp.40, align 8
  %6 = alloca %"class.cc::PaintFlags", align 8
  %7 = alloca %"class.cc::ScopedRasterFlags", align 8
  %8 = bitcast %"class.cc::PaintFlags"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK2cc17ShaderPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE.orig_flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %6) #14
  %9 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 1, i32 0
  %10 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %9, align 8
  %11 = icmp eq %"class.cc::PaintShader"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  br label %15

15:                                               ; preds = %3, %12
  %16 = ptrtoint %"class.cc::PaintShader"* %10 to i64
  %17 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %17, i64 0, i32 0
  %19 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %18, align 8
  %20 = bitcast %class.sk_sp.40* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.cc::PaintShader"* %19, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast %"class.cc::PaintShader"* %19 to %class.SkRefCntBase*
  %28 = bitcast %"class.cc::PaintShader"* %19 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  call void %31(%class.SkRefCntBase* nonnull %27) #14
  br label %32

32:                                               ; preds = %26, %22, %15
  %33 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 2
  %34 = load i8, i8* %33, align 8
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 6
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 16711680
  %39 = and i32 %37, 65280
  %40 = and i32 %37, 255
  %41 = shl nuw i32 %35, 24
  %42 = or i32 %38, %41
  %43 = or i32 %42, %39
  %44 = or i32 %43, %40
  store i32 %44, i32* %36, align 8
  %45 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 10
  %48 = bitcast %union.anon.115* %47 to i16*
  %49 = trunc i32 %46 to i16
  %50 = load i16, i16* %48, align 8
  %51 = shl i16 %49, 8
  %52 = and i16 %51, 768
  %53 = and i16 %50, -771
  %54 = or i16 %52, %53
  %55 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 5
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = shl nuw nsw i8 %56, 1
  %58 = zext i8 %57 to i16
  %59 = or i16 %54, %58
  store i16 %59, i16* %48, align 8
  %60 = bitcast %"class.cc::ScopedRasterFlags"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %60) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 8 bitcast (<{ %"class.cc::PaintFlags"*, %"class.absl::optional.116", { { { { i8, [7 x i8], %union.anon.125 } } } }, i8, [7 x i8] }>* @__const._ZNK2cc17ShaderPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE.raster_flags to i8*), i64 248, i1 false)
  %61 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZN2cc17ScopedRasterFlagsC1EPKNS_10PaintFlagsEPNS_13ImageProviderERK8SkMatrixih(%"class.cc::ScopedRasterFlags"* nonnull %7, %"class.cc::PaintFlags"* nonnull %6, %"class.cc::ImageProvider"* %2, %class.SkMatrix* dereferenceable(40) %61, i32 0, i8 zeroext -1) #14
  %62 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %7, i64 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %117

65:                                               ; preds = %32
  %66 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %70 = getelementptr inbounds %"class.cc::ScopedRasterFlags", %"class.cc::ScopedRasterFlags"* %7, i64 0, i32 0
  %71 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %70, align 8
  %72 = select i1 %68, %"class.cc::PaintFlags"* %71, %"class.cc::PaintFlags"* %69
  %73 = icmp eq %"class.cc::PaintFlags"* %72, null
  br i1 %73, label %117, label %74

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %72, i64 0, i32 1, i32 0
  %76 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %75, align 8
  %77 = icmp eq %"class.cc::PaintShader"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %76, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 1 monotonic, !noalias !317
  br label %81

81:                                               ; preds = %74, %78
  %82 = ptrtoint %"class.cc::PaintShader"* %76 to i64
  %83 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %72, i64 0, i32 6
  %84 = load i32, i32* %83, align 8
  %85 = lshr i32 %84, 24
  %86 = trunc i32 %85 to i8
  %87 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %72, i64 0, i32 10
  %88 = bitcast %union.anon.115* %87 to i16*
  %89 = load i16, i16* %88, align 8
  %90 = lshr i16 %89, 8
  %91 = and i16 %90, 3
  %92 = zext i16 %91 to i32
  %93 = and i16 %89, 2
  %94 = icmp ne i16 %93, 0
  %95 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 4, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = select i1 %97, %struct.SkRect* null, %struct.SkRect* %98
  %100 = bitcast %class.sk_sp.40* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100)
  %101 = call i8* @_Znwm(i64 80) #16, !noalias !320
  %102 = bitcast i8* %101 to %"class.cc::ShaderPaintFilter"*
  %103 = bitcast %class.sk_sp.40* %4 to i64*
  store i64 %82, i64* %103, align 8, !noalias !320
  call void @_ZN2cc17ShaderPaintFilterC2E5sk_spINS_11PaintShaderEEh15SkFilterQualityN14SkImageFilters6DitherEPK6SkRect(%"class.cc::ShaderPaintFilter"* nonnull %102, %class.sk_sp.40* nonnull %4, i8 zeroext %86, i32 %92, i1 zeroext %94, %struct.SkRect* %99) #14, !noalias !320
  %104 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %4, i64 0, i32 0
  %105 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %104, align 8, !noalias !320
  %106 = icmp eq %"class.cc::PaintShader"* %105, null
  br i1 %106, label %143, label %107

107:                                              ; preds = %81
  %108 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %105, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 -1 acq_rel, !noalias !320
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %143

111:                                              ; preds = %107
  %112 = bitcast %"class.cc::PaintShader"* %105 to %class.SkRefCntBase*
  %113 = bitcast %"class.cc::PaintShader"* %105 to void (%class.SkRefCntBase*)***
  %114 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %113, align 8, !noalias !320
  %115 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, i64 2
  %116 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %115, align 8, !noalias !320
  call void %116(%class.SkRefCntBase* nonnull %112) #14, !noalias !320
  br label %143

117:                                              ; preds = %32, %65
  %118 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %119 = load i8, i8* %118, align 4, !range !2
  %120 = icmp eq i8 %119, 0
  %121 = getelementptr inbounds %"class.cc::ShaderPaintFilter", %"class.cc::ShaderPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %122 = select i1 %120, %struct.SkRect* null, %struct.SkRect* %121
  %123 = bitcast %class.sk_sp.40* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123)
  %124 = call i8* @_Znwm(i64 80) #16, !noalias !323
  %125 = bitcast i8* %124 to %"class.cc::ShaderPaintFilter"*
  %126 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %5, i64 0, i32 0
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %126, align 8, !noalias !323
  %127 = load i8, i8* %33, align 1, !noalias !323
  %128 = load i32, i32* %45, align 4, !noalias !323
  %129 = load i8, i8* %55, align 1, !range !2, !noalias !323
  %130 = icmp ne i8 %129, 0
  call void @_ZN2cc17ShaderPaintFilterC2E5sk_spINS_11PaintShaderEEh15SkFilterQualityN14SkImageFilters6DitherEPK6SkRect(%"class.cc::ShaderPaintFilter"* nonnull %125, %class.sk_sp.40* nonnull %5, i8 zeroext %127, i32 %128, i1 zeroext %130, %struct.SkRect* %122) #14, !noalias !323
  %131 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %126, align 8, !noalias !323
  %132 = icmp eq %"class.cc::PaintShader"* %131, null
  br i1 %132, label %143, label %133

133:                                              ; preds = %117
  %134 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %131, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i32* %134, i32 -1 acq_rel, !noalias !323
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %143

137:                                              ; preds = %133
  %138 = bitcast %"class.cc::PaintShader"* %131 to %class.SkRefCntBase*
  %139 = bitcast %"class.cc::PaintShader"* %131 to void (%class.SkRefCntBase*)***
  %140 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %139, align 8, !noalias !323
  %141 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, i64 2
  %142 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %141, align 8, !noalias !323
  call void %142(%class.SkRefCntBase* nonnull %138) #14, !noalias !323
  br label %143

143:                                              ; preds = %117, %133, %137, %111, %107, %81
  %144 = phi i8* [ %100, %81 ], [ %100, %107 ], [ %100, %111 ], [ %123, %137 ], [ %123, %133 ], [ %123, %117 ]
  %145 = phi i8* [ %101, %81 ], [ %101, %107 ], [ %101, %111 ], [ %124, %137 ], [ %124, %133 ], [ %124, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144)
  %146 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %145, i8** %146, align 8
  call void @_ZN2cc17ScopedRasterFlagsD1Ev(%"class.cc::ScopedRasterFlags"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %60) #14
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #14
  ret void
}

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #5

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #5

declare void @_ZN2cc17ScopedRasterFlagsC1EPKNS_10PaintFlagsEPNS_13ImageProviderERK8SkMatrixih(%"class.cc::ScopedRasterFlags"*, %"class.cc::PaintFlags"*, %"class.cc::ImageProvider"*, %class.SkMatrix* dereferenceable(40), i32, i8 zeroext) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2cc17ScopedRasterFlagsD1Ev(%"class.cc::ScopedRasterFlags"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #7

declare zeroext i1 @_ZNK2cc11PaintShadereqERKS0_(%"class.cc::PaintShader"*, %"class.cc::PaintShader"* dereferenceable(336)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17MatrixPaintFilterC2ERK8SkMatrix15SkFilterQuality5sk_spINS_11PaintFilterEE(%"class.cc::MatrixPaintFilter"*, %class.SkMatrix* nocapture readonly dereferenceable(40), i32, %class.sk_sp.3* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %struct.SkSamplingOptions, align 4
  %7 = alloca %class.sk_sp, align 8
  %8 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %9 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %8, align 8
  %10 = icmp eq %"class.cc::PaintFilter"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %9, i64 0, i32 4
  %13 = load i8, i8* %12, align 8, !range !2
  br label %14

14:                                               ; preds = %4, %11
  %15 = phi i8 [ %13, %11 ], [ 0, %4 ]
  %16 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %16, align 4
  %17 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %18, align 8
  %19 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 19, i32* %19, align 8
  %20 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %15, i8* %21, align 8
  %22 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %22, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17MatrixPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %23 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 1
  %24 = bitcast %class.SkMatrix* %23 to i8*
  %25 = bitcast %class.SkMatrix* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 4 %25, i64 40, i1 false)
  %26 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 2
  store i32 %2, i32* %26, align 8
  %27 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 3
  %28 = bitcast %class.sk_sp.3* %3 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %8, align 8
  %30 = bitcast %class.sk_sp.3* %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  %32 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %32) #14
  %33 = load i32, i32* %26, align 8
  call void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* nonnull sret %6, i32 %33) #14
  %34 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %27, i64 0, i32 0
  %35 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %34, align 8
  %36 = icmp eq %"class.cc::PaintFilter"* %35, null
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  br i1 %36, label %45, label %38

38:                                               ; preds = %14
  %39 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %35, i64 0, i32 1, i32 0
  %40 = load %class.SkImageFilter*, %class.SkImageFilter** %39, align 8, !noalias !326
  %41 = icmp eq %class.SkImageFilter* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 monotonic, !noalias !326
  br label %45

45:                                               ; preds = %14, %38, %42
  %46 = phi %class.SkImageFilter* [ null, %38 ], [ %40, %42 ], [ null, %14 ]
  store %class.SkImageFilter* %46, %class.SkImageFilter** %37, align 8, !alias.scope !326
  call void @_ZN14SkImageFilters15MatrixTransformERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE(%class.sk_sp* nonnull sret %5, %class.SkMatrix* dereferenceable(40) %23, %struct.SkSamplingOptions* nonnull dereferenceable(20) %6, %class.sk_sp* nonnull %7) #14
  %47 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %49 = bitcast %class.sk_sp* %5 to i64*
  %50 = load i64, i64* %49, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %48, align 8
  %51 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %47, i64 0, i32 0
  %52 = load %class.SkImageFilter*, %class.SkImageFilter** %51, align 8
  %53 = bitcast %class.sk_sp* %47 to i64*
  store i64 %50, i64* %53, align 8
  %54 = icmp eq %class.SkImageFilter* %52, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %class.SkImageFilter* %52 to %class.SkRefCntBase*
  %61 = bitcast %class.SkImageFilter* %52 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8
  call void %64(%class.SkRefCntBase* nonnull %60) #14
  br label %65

65:                                               ; preds = %45, %55, %59
  %66 = load %class.SkImageFilter*, %class.SkImageFilter** %48, align 8
  %67 = icmp eq %class.SkImageFilter* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkImageFilter* %66 to %class.SkRefCntBase*
  %74 = bitcast %class.SkImageFilter* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #14
  br label %78

78:                                               ; preds = %65, %68, %72
  %79 = load %class.SkImageFilter*, %class.SkImageFilter** %37, align 8
  %80 = icmp eq %class.SkImageFilter* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = bitcast %class.SkImageFilter* %79 to %class.SkRefCntBase*
  %87 = bitcast %class.SkImageFilter* %79 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8
  call void %90(%class.SkRefCntBase* nonnull %86) #14
  br label %91

91:                                               ; preds = %78, %81, %85
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  ret void
}

declare void @_ZN14SkImageFilters15MatrixTransformERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE(%class.sk_sp* sret, %class.SkMatrix* dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20), %class.sk_sp*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17MatrixPaintFilterD2Ev(%"class.cc::MatrixPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17MatrixPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17MatrixPaintFilterD0Ev(%"class.cc::MatrixPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc17MatrixPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::MatrixPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc17MatrixPaintFilter14SerializedSizeEv(%"class.cc::MatrixPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 52, i64 68
  %6 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %0, i64 0, i32 3, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc17MatrixPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::MatrixPaintFilter"* nocapture readonly, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %1, i64 0, i32 2
  %8 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.cc::MatrixPaintFilter", %"class.cc::MatrixPaintFilter"* %1, i64 0, i32 3, i32 0
  %10 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %9, align 8, !noalias !329
  %11 = icmp eq %"class.cc::PaintFilter"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %13, align 8, !alias.scope !329
  br label %30

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 4
  %16 = load i8, i8* %15, align 8, !range !2, !noalias !332
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !335
  %21 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %10, %"class.cc::PaintFilter"** %21, align 8, !alias.scope !338
  %22 = ptrtoint %"class.cc::PaintFilter"* %10 to i64
  br label %30

23:                                               ; preds = %14
  %24 = bitcast %"class.cc::PaintFilter"* %10 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %25 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %24, align 8, !noalias !332
  %26 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %25, i64 4
  %27 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %26, align 8, !noalias !332
  call void %27(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %10, %"class.cc::ImageProvider"* %2) #14
  %28 = bitcast %class.sk_sp.3* %5 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !339
  br label %30

30:                                               ; preds = %12, %18, %23
  %31 = phi i64 [ 0, %12 ], [ %22, %18 ], [ %29, %23 ]
  %32 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = call i8* @_Znwm(i64 112) #16, !noalias !339
  %34 = bitcast i8* %33 to %"class.cc::MatrixPaintFilter"*
  %35 = load i32, i32* %7, align 4, !noalias !339
  %36 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %36, align 8, !noalias !339
  %37 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %31, i64* %37, align 8, !noalias !339
  call void @_ZN2cc17MatrixPaintFilterC2ERK8SkMatrix15SkFilterQuality5sk_spINS_11PaintFilterEE(%"class.cc::MatrixPaintFilter"* nonnull %34, %class.SkMatrix* dereferenceable(40) %6, i32 %35, %class.sk_sp.3* nonnull %4) #14, !noalias !339
  %38 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %39 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %38, align 8, !noalias !339
  %40 = icmp eq %"class.cc::PaintFilter"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel, !noalias !339
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.cc::PaintFilter"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.cc::PaintFilter"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8, !noalias !339
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8, !noalias !339
  call void %50(%class.SkRefCntBase* nonnull %46) #14, !noalias !339
  br label %51

51:                                               ; preds = %45, %41, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %52 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %33, i8** %52, align 8
  %53 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %36, align 8
  %54 = icmp eq %"class.cc::PaintFilter"* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %"class.cc::PaintFilter"* %53 to %class.SkRefCntBase*
  %61 = bitcast %"class.cc::PaintFilter"* %53 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8
  call void %64(%class.SkRefCntBase* nonnull %60) #14
  br label %65

65:                                               ; preds = %51, %55, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret void
}

declare zeroext i1 @_ZN2cc7PaintOp18AreSkMatricesEqualERK8SkMatrixS3_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc26LightingDistantPaintFilterC2ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingDistantPaintFilter"*, i32, %struct.SkPoint3* nocapture readonly dereferenceable(12), i32, float, float, float, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %"struct.SkImageFilters::CropRect", align 4
  %13 = alloca %class.sk_sp, align 8
  %14 = alloca %class.sk_sp, align 8
  %15 = alloca %"struct.SkImageFilters::CropRect", align 4
  %16 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  %17 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %16, align 8
  %18 = icmp eq %"class.cc::PaintFilter"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %17, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  br label %22

22:                                               ; preds = %9, %19
  %23 = phi i8 [ %21, %19 ], [ 0, %9 ]
  %24 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %26, align 8
  %27 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 20, i32* %27, align 8
  %28 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %23, i8* %29, align 8
  %30 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %30, align 4
  %31 = icmp eq %struct.SkRect* %8, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %22
  store i8 0, i8* %28, align 4
  %33 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %union.anon* %33 to i8*
  %35 = bitcast %struct.SkRect* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* nonnull align 4 %35, i64 16, i1 false) #14
  store i8 1, i8* %28, align 4
  br label %36

36:                                               ; preds = %22, %32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc26LightingDistantPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %37 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 1
  store i32 %1, i32* %37, align 8
  %38 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 2
  %39 = bitcast %struct.SkPoint3* %38 to i8*
  %40 = bitcast %struct.SkPoint3* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 12, i1 false)
  %41 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 3
  store i32 %3, i32* %41, align 8
  %42 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 4
  store float %4, float* %42, align 4
  %43 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 5
  store float %5, float* %43, align 8
  %44 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 6
  store float %6, float* %44, align 4
  %45 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 7
  %46 = bitcast %class.sk_sp.3* %7 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %16, align 8
  %48 = bitcast %class.sk_sp.3* %45 to i64*
  store i64 %47, i64* %48, align 8
  %49 = load i32, i32* %37, align 8
  %50 = inttoptr i64 %47 to %"class.cc::PaintFilter"*
  switch i32 %49, label %180 [
    i32 0, label %51
    i32 1, label %114
  ]

51:                                               ; preds = %36
  %52 = bitcast %class.sk_sp* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14
  %53 = load i32, i32* %41, align 8
  %54 = load float, float* %42, align 4
  %55 = load float, float* %43, align 8
  %56 = icmp eq i64 %47, 0
  %57 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  br i1 %56, label %65, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %50, i64 0, i32 1, i32 0
  %60 = load %class.SkImageFilter*, %class.SkImageFilter** %59, align 8, !noalias !342
  %61 = icmp eq %class.SkImageFilter* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic, !noalias !342
  br label %65

65:                                               ; preds = %51, %58, %62
  %66 = phi %class.SkImageFilter* [ null, %58 ], [ %60, %62 ], [ null, %51 ]
  store %class.SkImageFilter* %66, %class.SkImageFilter** %57, align 8, !alias.scope !342
  %67 = bitcast %"struct.SkImageFilters::CropRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %68 = select i1 %31, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %8
  %69 = bitcast %struct.SkRect* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* align 4 %69, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters17DistantLitDiffuseERK8SkPoint3jff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %10, %struct.SkPoint3* dereferenceable(12) %38, i32 %53, float %54, float %55, %class.sk_sp* nonnull %11, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %12) #14
  %70 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %72 = bitcast %class.sk_sp* %10 to i64*
  %73 = load i64, i64* %72, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %71, align 8
  %74 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %70, i64 0, i32 0
  %75 = load %class.SkImageFilter*, %class.SkImageFilter** %74, align 8
  %76 = bitcast %class.sk_sp* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %class.SkImageFilter* %75, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %65
  %79 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = bitcast %class.SkImageFilter* %75 to %class.SkRefCntBase*
  %84 = bitcast %class.SkImageFilter* %75 to void (%class.SkRefCntBase*)***
  %85 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, i64 2
  %87 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, align 8
  call void %87(%class.SkRefCntBase* nonnull %83) #14
  br label %88

88:                                               ; preds = %65, %78, %82
  %89 = load %class.SkImageFilter*, %class.SkImageFilter** %71, align 8
  %90 = icmp eq %class.SkImageFilter* %89, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %89, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = bitcast %class.SkImageFilter* %89 to %class.SkRefCntBase*
  %97 = bitcast %class.SkImageFilter* %89 to void (%class.SkRefCntBase*)***
  %98 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, i64 2
  %100 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, align 8
  call void %100(%class.SkRefCntBase* nonnull %96) #14
  br label %101

101:                                              ; preds = %88, %91, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  %102 = load %class.SkImageFilter*, %class.SkImageFilter** %57, align 8
  %103 = icmp eq %class.SkImageFilter* %102, null
  br i1 %103, label %178, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %102, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %178

108:                                              ; preds = %104
  %109 = bitcast %class.SkImageFilter* %102 to %class.SkRefCntBase*
  %110 = bitcast %class.SkImageFilter* %102 to void (%class.SkRefCntBase*)***
  %111 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, i64 2
  %113 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, align 8
  call void %113(%class.SkRefCntBase* nonnull %109) #14
  br label %178

114:                                              ; preds = %36
  %115 = bitcast %class.sk_sp* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #14
  %116 = load i32, i32* %41, align 8
  %117 = load float, float* %42, align 4
  %118 = load float, float* %43, align 8
  %119 = load float, float* %44, align 4
  %120 = icmp eq i64 %47, 0
  %121 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  br i1 %120, label %129, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %50, i64 0, i32 1, i32 0
  %124 = load %class.SkImageFilter*, %class.SkImageFilter** %123, align 8, !noalias !345
  %125 = icmp eq %class.SkImageFilter* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %124, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 1 monotonic, !noalias !345
  br label %129

129:                                              ; preds = %114, %122, %126
  %130 = phi %class.SkImageFilter* [ null, %122 ], [ %124, %126 ], [ null, %114 ]
  store %class.SkImageFilter* %130, %class.SkImageFilter** %121, align 8, !alias.scope !345
  %131 = bitcast %"struct.SkImageFilters::CropRect"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #14
  %132 = select i1 %31, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %8
  %133 = bitcast %struct.SkRect* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %131, i8* align 4 %133, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters18DistantLitSpecularERK8SkPoint3jfff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %13, %struct.SkPoint3* dereferenceable(12) %38, i32 %116, float %117, float %118, float %119, %class.sk_sp* nonnull %14, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %15) #14
  %134 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 1
  %135 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %136 = bitcast %class.sk_sp* %13 to i64*
  %137 = load i64, i64* %136, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %135, align 8
  %138 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %134, i64 0, i32 0
  %139 = load %class.SkImageFilter*, %class.SkImageFilter** %138, align 8
  %140 = bitcast %class.sk_sp* %134 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %class.SkImageFilter* %139, null
  br i1 %141, label %152, label %142

142:                                              ; preds = %129
  %143 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %139, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw add i32* %143, i32 -1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %152

146:                                              ; preds = %142
  %147 = bitcast %class.SkImageFilter* %139 to %class.SkRefCntBase*
  %148 = bitcast %class.SkImageFilter* %139 to void (%class.SkRefCntBase*)***
  %149 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %148, align 8
  %150 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, i64 2
  %151 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, align 8
  call void %151(%class.SkRefCntBase* nonnull %147) #14
  br label %152

152:                                              ; preds = %129, %142, %146
  %153 = load %class.SkImageFilter*, %class.SkImageFilter** %135, align 8
  %154 = icmp eq %class.SkImageFilter* %153, null
  br i1 %154, label %165, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %153, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw add i32* %156, i32 -1 acq_rel
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %165

159:                                              ; preds = %155
  %160 = bitcast %class.SkImageFilter* %153 to %class.SkRefCntBase*
  %161 = bitcast %class.SkImageFilter* %153 to void (%class.SkRefCntBase*)***
  %162 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %161, align 8
  %163 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %162, i64 2
  %164 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %163, align 8
  call void %164(%class.SkRefCntBase* nonnull %160) #14
  br label %165

165:                                              ; preds = %152, %155, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #14
  %166 = load %class.SkImageFilter*, %class.SkImageFilter** %121, align 8
  %167 = icmp eq %class.SkImageFilter* %166, null
  br i1 %167, label %178, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %166, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 -1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %178

172:                                              ; preds = %168
  %173 = bitcast %class.SkImageFilter* %166 to %class.SkRefCntBase*
  %174 = bitcast %class.SkImageFilter* %166 to void (%class.SkRefCntBase*)***
  %175 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %174, align 8
  %176 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %175, i64 2
  %177 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %176, align 8
  call void %177(%class.SkRefCntBase* nonnull %173) #14
  br label %178

178:                                              ; preds = %172, %168, %165, %108, %104, %101
  %179 = phi i8* [ %52, %101 ], [ %52, %104 ], [ %52, %108 ], [ %115, %165 ], [ %115, %168 ], [ %115, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #14
  br label %180

180:                                              ; preds = %178, %36
  ret void
}

declare void @_ZN14SkImageFilters17DistantLitDiffuseERK8SkPoint3jff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %struct.SkPoint3* dereferenceable(12), i32, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN14SkImageFilters18DistantLitSpecularERK8SkPoint3jfff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %struct.SkPoint3* dereferenceable(12), i32, float, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc26LightingDistantPaintFilterD2Ev(%"class.cc::LightingDistantPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc26LightingDistantPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc26LightingDistantPaintFilterD0Ev(%"class.cc::LightingDistantPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc26LightingDistantPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::LightingDistantPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc26LightingDistantPaintFilter14SerializedSizeEv(%"class.cc::LightingDistantPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 40, i64 56
  %6 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %0, i64 0, i32 7, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc26LightingDistantPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::LightingDistantPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 3
  %9 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 4
  %10 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 5
  %11 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 6
  %12 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 7, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8, !noalias !348
  %15 = icmp eq %"class.cc::PaintFilter"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %17, align 8, !alias.scope !348
  br label %34

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2, !noalias !351
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !354
  %25 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %14, %"class.cc::PaintFilter"** %25, align 8, !alias.scope !357
  %26 = ptrtoint %"class.cc::PaintFilter"* %14 to i64
  br label %34

27:                                               ; preds = %18
  %28 = bitcast %"class.cc::PaintFilter"* %14 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %29 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %28, align 8, !noalias !351
  %30 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %29, i64 4
  %31 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %30, align 8, !noalias !351
  call void %31(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %14, %"class.cc::ImageProvider"* %2) #14
  %32 = bitcast %class.sk_sp.3* %5 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !358
  br label %34

34:                                               ; preds = %16, %22, %27
  %35 = phi i64 [ 0, %16 ], [ %26, %22 ], [ %33, %27 ]
  %36 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.cc::LightingDistantPaintFilter", %"class.cc::LightingDistantPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = select i1 %38, %struct.SkRect* null, %struct.SkRect* %39
  %41 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = call i8* @_Znwm(i64 96) #16, !noalias !358
  %43 = bitcast i8* %42 to %"class.cc::LightingDistantPaintFilter"*
  %44 = load i32, i32* %6, align 4, !noalias !358
  %45 = load i32, i32* %8, align 4, !noalias !358
  %46 = load float, float* %9, align 4, !noalias !358
  %47 = load float, float* %10, align 4, !noalias !358
  %48 = load float, float* %11, align 4, !noalias !358
  %49 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %49, align 8, !noalias !358
  %50 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %35, i64* %50, align 8, !noalias !358
  call void @_ZN2cc26LightingDistantPaintFilterC2ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingDistantPaintFilter"* nonnull %43, i32 %44, %struct.SkPoint3* dereferenceable(12) %7, i32 %45, float %46, float %47, float %48, %class.sk_sp.3* nonnull %4, %struct.SkRect* %40) #14, !noalias !358
  %51 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %52 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %51, align 8, !noalias !358
  %53 = icmp eq %"class.cc::PaintFilter"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %34
  %55 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel, !noalias !358
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %"class.cc::PaintFilter"* %52 to %class.SkRefCntBase*
  %60 = bitcast %"class.cc::PaintFilter"* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8, !noalias !358
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8, !noalias !358
  call void %63(%class.SkRefCntBase* nonnull %59) #14, !noalias !358
  br label %64

64:                                               ; preds = %58, %54, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %65 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %42, i8** %65, align 8
  %66 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %49, align 8
  %67 = icmp eq %"class.cc::PaintFilter"* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %"class.cc::PaintFilter"* %66 to %class.SkRefCntBase*
  %74 = bitcast %"class.cc::PaintFilter"* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #14
  br label %78

78:                                               ; preds = %64, %68, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  ret void
}

declare zeroext i1 @_ZN2cc7PaintOp17AreSkPoint3sEqualERK8SkPoint3S3_(%struct.SkPoint3* dereferenceable(12), %struct.SkPoint3* dereferenceable(12)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24LightingPointPaintFilterC2ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingPointPaintFilter"*, i32, %struct.SkPoint3* nocapture readonly dereferenceable(12), i32, float, float, float, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %"struct.SkImageFilters::CropRect", align 4
  %13 = alloca %class.sk_sp, align 8
  %14 = alloca %class.sk_sp, align 8
  %15 = alloca %"struct.SkImageFilters::CropRect", align 4
  %16 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  %17 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %16, align 8
  %18 = icmp eq %"class.cc::PaintFilter"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %17, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  br label %22

22:                                               ; preds = %9, %19
  %23 = phi i8 [ %21, %19 ], [ 0, %9 ]
  %24 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %26, align 8
  %27 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 21, i32* %27, align 8
  %28 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %23, i8* %29, align 8
  %30 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %30, align 4
  %31 = icmp eq %struct.SkRect* %8, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %22
  store i8 0, i8* %28, align 4
  %33 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %union.anon* %33 to i8*
  %35 = bitcast %struct.SkRect* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* nonnull align 4 %35, i64 16, i1 false) #14
  store i8 1, i8* %28, align 4
  br label %36

36:                                               ; preds = %22, %32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc24LightingPointPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %37 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 1
  store i32 %1, i32* %37, align 8
  %38 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 2
  %39 = bitcast %struct.SkPoint3* %38 to i8*
  %40 = bitcast %struct.SkPoint3* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 12, i1 false)
  %41 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 3
  store i32 %3, i32* %41, align 8
  %42 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 4
  store float %4, float* %42, align 4
  %43 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 5
  store float %5, float* %43, align 8
  %44 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 6
  store float %6, float* %44, align 4
  %45 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 7
  %46 = bitcast %class.sk_sp.3* %7 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %16, align 8
  %48 = bitcast %class.sk_sp.3* %45 to i64*
  store i64 %47, i64* %48, align 8
  %49 = load i32, i32* %37, align 8
  %50 = inttoptr i64 %47 to %"class.cc::PaintFilter"*
  switch i32 %49, label %180 [
    i32 0, label %51
    i32 1, label %114
  ]

51:                                               ; preds = %36
  %52 = bitcast %class.sk_sp* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14
  %53 = load i32, i32* %41, align 8
  %54 = load float, float* %42, align 4
  %55 = load float, float* %43, align 8
  %56 = icmp eq i64 %47, 0
  %57 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  br i1 %56, label %65, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %50, i64 0, i32 1, i32 0
  %60 = load %class.SkImageFilter*, %class.SkImageFilter** %59, align 8, !noalias !361
  %61 = icmp eq %class.SkImageFilter* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic, !noalias !361
  br label %65

65:                                               ; preds = %51, %58, %62
  %66 = phi %class.SkImageFilter* [ null, %58 ], [ %60, %62 ], [ null, %51 ]
  store %class.SkImageFilter* %66, %class.SkImageFilter** %57, align 8, !alias.scope !361
  %67 = bitcast %"struct.SkImageFilters::CropRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %68 = select i1 %31, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %8
  %69 = bitcast %struct.SkRect* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* align 4 %69, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters15PointLitDiffuseERK8SkPoint3jff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %10, %struct.SkPoint3* dereferenceable(12) %38, i32 %53, float %54, float %55, %class.sk_sp* nonnull %11, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %12) #14
  %70 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %72 = bitcast %class.sk_sp* %10 to i64*
  %73 = load i64, i64* %72, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %71, align 8
  %74 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %70, i64 0, i32 0
  %75 = load %class.SkImageFilter*, %class.SkImageFilter** %74, align 8
  %76 = bitcast %class.sk_sp* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %class.SkImageFilter* %75, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %65
  %79 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = bitcast %class.SkImageFilter* %75 to %class.SkRefCntBase*
  %84 = bitcast %class.SkImageFilter* %75 to void (%class.SkRefCntBase*)***
  %85 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, i64 2
  %87 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, align 8
  call void %87(%class.SkRefCntBase* nonnull %83) #14
  br label %88

88:                                               ; preds = %65, %78, %82
  %89 = load %class.SkImageFilter*, %class.SkImageFilter** %71, align 8
  %90 = icmp eq %class.SkImageFilter* %89, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %89, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = bitcast %class.SkImageFilter* %89 to %class.SkRefCntBase*
  %97 = bitcast %class.SkImageFilter* %89 to void (%class.SkRefCntBase*)***
  %98 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, i64 2
  %100 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, align 8
  call void %100(%class.SkRefCntBase* nonnull %96) #14
  br label %101

101:                                              ; preds = %88, %91, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  %102 = load %class.SkImageFilter*, %class.SkImageFilter** %57, align 8
  %103 = icmp eq %class.SkImageFilter* %102, null
  br i1 %103, label %178, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %102, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %178

108:                                              ; preds = %104
  %109 = bitcast %class.SkImageFilter* %102 to %class.SkRefCntBase*
  %110 = bitcast %class.SkImageFilter* %102 to void (%class.SkRefCntBase*)***
  %111 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, i64 2
  %113 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, align 8
  call void %113(%class.SkRefCntBase* nonnull %109) #14
  br label %178

114:                                              ; preds = %36
  %115 = bitcast %class.sk_sp* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #14
  %116 = load i32, i32* %41, align 8
  %117 = load float, float* %42, align 4
  %118 = load float, float* %43, align 8
  %119 = load float, float* %44, align 4
  %120 = icmp eq i64 %47, 0
  %121 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  br i1 %120, label %129, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %50, i64 0, i32 1, i32 0
  %124 = load %class.SkImageFilter*, %class.SkImageFilter** %123, align 8, !noalias !364
  %125 = icmp eq %class.SkImageFilter* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %124, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 1 monotonic, !noalias !364
  br label %129

129:                                              ; preds = %114, %122, %126
  %130 = phi %class.SkImageFilter* [ null, %122 ], [ %124, %126 ], [ null, %114 ]
  store %class.SkImageFilter* %130, %class.SkImageFilter** %121, align 8, !alias.scope !364
  %131 = bitcast %"struct.SkImageFilters::CropRect"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #14
  %132 = select i1 %31, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %8
  %133 = bitcast %struct.SkRect* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %131, i8* align 4 %133, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters16PointLitSpecularERK8SkPoint3jfff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %13, %struct.SkPoint3* dereferenceable(12) %38, i32 %116, float %117, float %118, float %119, %class.sk_sp* nonnull %14, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %15) #14
  %134 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 1
  %135 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %136 = bitcast %class.sk_sp* %13 to i64*
  %137 = load i64, i64* %136, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %135, align 8
  %138 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %134, i64 0, i32 0
  %139 = load %class.SkImageFilter*, %class.SkImageFilter** %138, align 8
  %140 = bitcast %class.sk_sp* %134 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %class.SkImageFilter* %139, null
  br i1 %141, label %152, label %142

142:                                              ; preds = %129
  %143 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %139, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw add i32* %143, i32 -1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %152

146:                                              ; preds = %142
  %147 = bitcast %class.SkImageFilter* %139 to %class.SkRefCntBase*
  %148 = bitcast %class.SkImageFilter* %139 to void (%class.SkRefCntBase*)***
  %149 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %148, align 8
  %150 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, i64 2
  %151 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, align 8
  call void %151(%class.SkRefCntBase* nonnull %147) #14
  br label %152

152:                                              ; preds = %129, %142, %146
  %153 = load %class.SkImageFilter*, %class.SkImageFilter** %135, align 8
  %154 = icmp eq %class.SkImageFilter* %153, null
  br i1 %154, label %165, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %153, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw add i32* %156, i32 -1 acq_rel
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %165

159:                                              ; preds = %155
  %160 = bitcast %class.SkImageFilter* %153 to %class.SkRefCntBase*
  %161 = bitcast %class.SkImageFilter* %153 to void (%class.SkRefCntBase*)***
  %162 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %161, align 8
  %163 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %162, i64 2
  %164 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %163, align 8
  call void %164(%class.SkRefCntBase* nonnull %160) #14
  br label %165

165:                                              ; preds = %152, %155, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #14
  %166 = load %class.SkImageFilter*, %class.SkImageFilter** %121, align 8
  %167 = icmp eq %class.SkImageFilter* %166, null
  br i1 %167, label %178, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %166, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 -1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %178

172:                                              ; preds = %168
  %173 = bitcast %class.SkImageFilter* %166 to %class.SkRefCntBase*
  %174 = bitcast %class.SkImageFilter* %166 to void (%class.SkRefCntBase*)***
  %175 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %174, align 8
  %176 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %175, i64 2
  %177 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %176, align 8
  call void %177(%class.SkRefCntBase* nonnull %173) #14
  br label %178

178:                                              ; preds = %172, %168, %165, %108, %104, %101
  %179 = phi i8* [ %52, %101 ], [ %52, %104 ], [ %52, %108 ], [ %115, %165 ], [ %115, %168 ], [ %115, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #14
  br label %180

180:                                              ; preds = %178, %36
  ret void
}

declare void @_ZN14SkImageFilters15PointLitDiffuseERK8SkPoint3jff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %struct.SkPoint3* dereferenceable(12), i32, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN14SkImageFilters16PointLitSpecularERK8SkPoint3jfff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %struct.SkPoint3* dereferenceable(12), i32, float, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24LightingPointPaintFilterD2Ev(%"class.cc::LightingPointPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc24LightingPointPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24LightingPointPaintFilterD0Ev(%"class.cc::LightingPointPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc24LightingPointPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::LightingPointPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc24LightingPointPaintFilter14SerializedSizeEv(%"class.cc::LightingPointPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 40, i64 56
  %6 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %0, i64 0, i32 7, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc24LightingPointPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::LightingPointPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 3
  %9 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 4
  %10 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 5
  %11 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 6
  %12 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 7, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8, !noalias !367
  %15 = icmp eq %"class.cc::PaintFilter"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %17, align 8, !alias.scope !367
  br label %34

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2, !noalias !370
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !373
  %25 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %14, %"class.cc::PaintFilter"** %25, align 8, !alias.scope !376
  %26 = ptrtoint %"class.cc::PaintFilter"* %14 to i64
  br label %34

27:                                               ; preds = %18
  %28 = bitcast %"class.cc::PaintFilter"* %14 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %29 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %28, align 8, !noalias !370
  %30 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %29, i64 4
  %31 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %30, align 8, !noalias !370
  call void %31(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %14, %"class.cc::ImageProvider"* %2) #14
  %32 = bitcast %class.sk_sp.3* %5 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !377
  br label %34

34:                                               ; preds = %16, %22, %27
  %35 = phi i64 [ 0, %16 ], [ %26, %22 ], [ %33, %27 ]
  %36 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.cc::LightingPointPaintFilter", %"class.cc::LightingPointPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = select i1 %38, %struct.SkRect* null, %struct.SkRect* %39
  %41 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = call i8* @_Znwm(i64 96) #16, !noalias !377
  %43 = bitcast i8* %42 to %"class.cc::LightingPointPaintFilter"*
  %44 = load i32, i32* %6, align 4, !noalias !377
  %45 = load i32, i32* %8, align 4, !noalias !377
  %46 = load float, float* %9, align 4, !noalias !377
  %47 = load float, float* %10, align 4, !noalias !377
  %48 = load float, float* %11, align 4, !noalias !377
  %49 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %49, align 8, !noalias !377
  %50 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %35, i64* %50, align 8, !noalias !377
  call void @_ZN2cc24LightingPointPaintFilterC2ENS_11PaintFilter12LightingTypeERK8SkPoint3jfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingPointPaintFilter"* nonnull %43, i32 %44, %struct.SkPoint3* dereferenceable(12) %7, i32 %45, float %46, float %47, float %48, %class.sk_sp.3* nonnull %4, %struct.SkRect* %40) #14, !noalias !377
  %51 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %52 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %51, align 8, !noalias !377
  %53 = icmp eq %"class.cc::PaintFilter"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %34
  %55 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel, !noalias !377
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %"class.cc::PaintFilter"* %52 to %class.SkRefCntBase*
  %60 = bitcast %"class.cc::PaintFilter"* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8, !noalias !377
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8, !noalias !377
  call void %63(%class.SkRefCntBase* nonnull %59) #14, !noalias !377
  br label %64

64:                                               ; preds = %58, %54, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %65 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %42, i8** %65, align 8
  %66 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %49, align 8
  %67 = icmp eq %"class.cc::PaintFilter"* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %"class.cc::PaintFilter"* %66 to %class.SkRefCntBase*
  %74 = bitcast %"class.cc::PaintFilter"* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #14
  br label %78

78:                                               ; preds = %64, %68, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc23LightingSpotPaintFilterC2ENS_11PaintFilter12LightingTypeERK8SkPoint3S5_ffjfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingSpotPaintFilter"*, i32, %struct.SkPoint3* nocapture readonly dereferenceable(12), %struct.SkPoint3* nocapture readonly dereferenceable(12), float, float, i32, float, float, float, %class.sk_sp.3* nocapture, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %13 = alloca %class.sk_sp, align 8
  %14 = alloca %class.sk_sp, align 8
  %15 = alloca %"struct.SkImageFilters::CropRect", align 4
  %16 = alloca %class.sk_sp, align 8
  %17 = alloca %class.sk_sp, align 8
  %18 = alloca %"struct.SkImageFilters::CropRect", align 4
  %19 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %10, i64 0, i32 0
  %20 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %19, align 8
  %21 = icmp eq %"class.cc::PaintFilter"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %20, i64 0, i32 4
  %24 = load i8, i8* %23, align 8, !range !2
  br label %25

25:                                               ; preds = %12, %22
  %26 = phi i8 [ %24, %22 ], [ 0, %12 ]
  %27 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %29, align 8
  %30 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 2
  store i32 22, i32* %30, align 8
  %31 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 4
  store i8 %26, i8* %32, align 8
  %33 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %33, align 4
  %34 = icmp eq %struct.SkRect* %11, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %25
  store i8 0, i8* %31, align 4
  %36 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %union.anon* %36 to i8*
  %38 = bitcast %struct.SkRect* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* nonnull align 4 %38, i64 16, i1 false) #14
  store i8 1, i8* %31, align 4
  br label %39

39:                                               ; preds = %25, %35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc23LightingSpotPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %40 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 1
  store i32 %1, i32* %40, align 8
  %41 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 2
  %42 = bitcast %struct.SkPoint3* %41 to i8*
  %43 = bitcast %struct.SkPoint3* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 12, i1 false)
  %44 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 3
  %45 = bitcast %struct.SkPoint3* %44 to i8*
  %46 = bitcast %struct.SkPoint3* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 4 %46, i64 12, i1 false)
  %47 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 4
  store float %4, float* %47, align 4
  %48 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 5
  store float %5, float* %48, align 8
  %49 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 6
  store i32 %6, i32* %49, align 4
  %50 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 7
  store float %7, float* %50, align 8
  %51 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 8
  store float %8, float* %51, align 4
  %52 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 9
  store float %9, float* %52, align 8
  %53 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 10
  %54 = bitcast %class.sk_sp.3* %10 to i64*
  %55 = load i64, i64* %54, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %19, align 8
  %56 = bitcast %class.sk_sp.3* %53 to i64*
  store i64 %55, i64* %56, align 8
  %57 = load i32, i32* %40, align 8
  %58 = inttoptr i64 %55 to %"class.cc::PaintFilter"*
  switch i32 %57, label %192 [
    i32 0, label %59
    i32 1, label %124
  ]

59:                                               ; preds = %39
  %60 = bitcast %class.sk_sp* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #14
  %61 = load float, float* %47, align 4
  %62 = load float, float* %48, align 8
  %63 = load i32, i32* %49, align 4
  %64 = load float, float* %50, align 8
  %65 = load float, float* %51, align 4
  %66 = icmp eq i64 %55, 0
  %67 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  br i1 %66, label %75, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %58, i64 0, i32 1, i32 0
  %70 = load %class.SkImageFilter*, %class.SkImageFilter** %69, align 8, !noalias !380
  %71 = icmp eq %class.SkImageFilter* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %70, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 1 monotonic, !noalias !380
  br label %75

75:                                               ; preds = %59, %68, %72
  %76 = phi %class.SkImageFilter* [ null, %68 ], [ %70, %72 ], [ null, %59 ]
  store %class.SkImageFilter* %76, %class.SkImageFilter** %67, align 8, !alias.scope !380
  %77 = bitcast %"struct.SkImageFilters::CropRect"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #14
  %78 = select i1 %34, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %11
  %79 = bitcast %struct.SkRect* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %77, i8* align 4 %79, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters14SpotLitDiffuseERK8SkPoint3S2_ffjff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %13, %struct.SkPoint3* dereferenceable(12) %41, %struct.SkPoint3* dereferenceable(12) %44, float %61, float %62, i32 %63, float %64, float %65, %class.sk_sp* nonnull %14, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %15) #14
  %80 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %82 = bitcast %class.sk_sp* %13 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %81, align 8
  %84 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %80, i64 0, i32 0
  %85 = load %class.SkImageFilter*, %class.SkImageFilter** %84, align 8
  %86 = bitcast %class.sk_sp* %80 to i64*
  store i64 %83, i64* %86, align 8
  %87 = icmp eq %class.SkImageFilter* %85, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %75
  %89 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %class.SkImageFilter* %85 to %class.SkRefCntBase*
  %94 = bitcast %class.SkImageFilter* %85 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  call void %97(%class.SkRefCntBase* nonnull %93) #14
  br label %98

98:                                               ; preds = %75, %88, %92
  %99 = load %class.SkImageFilter*, %class.SkImageFilter** %81, align 8
  %100 = icmp eq %class.SkImageFilter* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %99, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = bitcast %class.SkImageFilter* %99 to %class.SkRefCntBase*
  %107 = bitcast %class.SkImageFilter* %99 to void (%class.SkRefCntBase*)***
  %108 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, i64 2
  %110 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, align 8
  call void %110(%class.SkRefCntBase* nonnull %106) #14
  br label %111

111:                                              ; preds = %98, %101, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #14
  %112 = load %class.SkImageFilter*, %class.SkImageFilter** %67, align 8
  %113 = icmp eq %class.SkImageFilter* %112, null
  br i1 %113, label %190, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %112, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 -1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %190

118:                                              ; preds = %114
  %119 = bitcast %class.SkImageFilter* %112 to %class.SkRefCntBase*
  %120 = bitcast %class.SkImageFilter* %112 to void (%class.SkRefCntBase*)***
  %121 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %120, align 8
  %122 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, i64 2
  %123 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, align 8
  call void %123(%class.SkRefCntBase* nonnull %119) #14
  br label %190

124:                                              ; preds = %39
  %125 = bitcast %class.sk_sp* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #14
  %126 = load float, float* %47, align 4
  %127 = load float, float* %48, align 8
  %128 = load i32, i32* %49, align 4
  %129 = load float, float* %50, align 8
  %130 = load float, float* %51, align 4
  %131 = load float, float* %52, align 8
  %132 = icmp eq i64 %55, 0
  %133 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %17, i64 0, i32 0
  br i1 %132, label %141, label %134

134:                                              ; preds = %124
  %135 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %58, i64 0, i32 1, i32 0
  %136 = load %class.SkImageFilter*, %class.SkImageFilter** %135, align 8, !noalias !383
  %137 = icmp eq %class.SkImageFilter* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %136, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw add i32* %139, i32 1 monotonic, !noalias !383
  br label %141

141:                                              ; preds = %124, %134, %138
  %142 = phi %class.SkImageFilter* [ null, %134 ], [ %136, %138 ], [ null, %124 ]
  store %class.SkImageFilter* %142, %class.SkImageFilter** %133, align 8, !alias.scope !383
  %143 = bitcast %"struct.SkImageFilters::CropRect"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #14
  %144 = select i1 %34, %struct.SkRect* @_ZN4skifL11kNoCropRectE, %struct.SkRect* %11
  %145 = bitcast %struct.SkRect* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %143, i8* align 4 %145, i64 16, i1 false) #14
  call void @_ZN14SkImageFilters15SpotLitSpecularERK8SkPoint3S2_ffjfff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %16, %struct.SkPoint3* dereferenceable(12) %41, %struct.SkPoint3* dereferenceable(12) %44, float %126, float %127, i32 %128, float %129, float %130, float %131, %class.sk_sp* nonnull %17, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %18) #14
  %146 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 1
  %147 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %16, i64 0, i32 0
  %148 = bitcast %class.sk_sp* %16 to i64*
  %149 = load i64, i64* %148, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %147, align 8
  %150 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %146, i64 0, i32 0
  %151 = load %class.SkImageFilter*, %class.SkImageFilter** %150, align 8
  %152 = bitcast %class.sk_sp* %146 to i64*
  store i64 %149, i64* %152, align 8
  %153 = icmp eq %class.SkImageFilter* %151, null
  br i1 %153, label %164, label %154

154:                                              ; preds = %141
  %155 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %151, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw add i32* %155, i32 -1 acq_rel
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = bitcast %class.SkImageFilter* %151 to %class.SkRefCntBase*
  %160 = bitcast %class.SkImageFilter* %151 to void (%class.SkRefCntBase*)***
  %161 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %160, align 8
  %162 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %161, i64 2
  %163 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %162, align 8
  call void %163(%class.SkRefCntBase* nonnull %159) #14
  br label %164

164:                                              ; preds = %141, %154, %158
  %165 = load %class.SkImageFilter*, %class.SkImageFilter** %147, align 8
  %166 = icmp eq %class.SkImageFilter* %165, null
  br i1 %166, label %177, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %165, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw add i32* %168, i32 -1 acq_rel
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %177

171:                                              ; preds = %167
  %172 = bitcast %class.SkImageFilter* %165 to %class.SkRefCntBase*
  %173 = bitcast %class.SkImageFilter* %165 to void (%class.SkRefCntBase*)***
  %174 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %173, align 8
  %175 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %174, i64 2
  %176 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %175, align 8
  call void %176(%class.SkRefCntBase* nonnull %172) #14
  br label %177

177:                                              ; preds = %164, %167, %171
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #14
  %178 = load %class.SkImageFilter*, %class.SkImageFilter** %133, align 8
  %179 = icmp eq %class.SkImageFilter* %178, null
  br i1 %179, label %190, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %178, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 -1 acq_rel
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %190

184:                                              ; preds = %180
  %185 = bitcast %class.SkImageFilter* %178 to %class.SkRefCntBase*
  %186 = bitcast %class.SkImageFilter* %178 to void (%class.SkRefCntBase*)***
  %187 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %186, align 8
  %188 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %187, i64 2
  %189 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %188, align 8
  call void %189(%class.SkRefCntBase* nonnull %185) #14
  br label %190

190:                                              ; preds = %184, %180, %177, %118, %114, %111
  %191 = phi i8* [ %60, %111 ], [ %60, %114 ], [ %60, %118 ], [ %125, %177 ], [ %125, %180 ], [ %125, %184 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #14
  br label %192

192:                                              ; preds = %190, %39
  ret void
}

declare void @_ZN14SkImageFilters14SpotLitDiffuseERK8SkPoint3S2_ffjff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %struct.SkPoint3* dereferenceable(12), %struct.SkPoint3* dereferenceable(12), float, float, i32, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN14SkImageFilters15SpotLitSpecularERK8SkPoint3S2_ffjfff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, %struct.SkPoint3* dereferenceable(12), %struct.SkPoint3* dereferenceable(12), float, float, i32, float, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc23LightingSpotPaintFilterD2Ev(%"class.cc::LightingSpotPaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc23LightingSpotPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 10, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc23LightingSpotPaintFilterD0Ev(%"class.cc::LightingSpotPaintFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc23LightingSpotPaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 10, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc11PaintFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkImageFilter*, %class.SkImageFilter** %17, align 8
  %19 = icmp eq %class.SkImageFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImageFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImageFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %"class.cc::LightingSpotPaintFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc23LightingSpotPaintFilter14SerializedSizeEv(%"class.cc::LightingSpotPaintFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i64 60, i64 76
  %6 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %0, i64 0, i32 10, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.cc::PaintFilter"* %7 to i64 (%"class.cc::PaintFilter"*)***
  %11 = load i64 (%"class.cc::PaintFilter"*)**, i64 (%"class.cc::PaintFilter"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %11, i64 3
  %13 = load i64 (%"class.cc::PaintFilter"*)*, i64 (%"class.cc::PaintFilter"*)** %12, align 8
  %14 = tail call i64 %13(%"class.cc::PaintFilter"* nonnull %7) #14
  %15 = add i64 %14, 4
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 4, %1 ]
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %5, i64 %17) #14
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 0, i64 %20, !prof !6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc23LightingSpotPaintFilter26SnapshotWithImagesInternalEPNS_13ImageProviderE(%class.sk_sp.3* noalias nocapture sret, %"class.cc::LightingSpotPaintFilter"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.3, align 8
  %6 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 3
  %9 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 4
  %10 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 5
  %11 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 7
  %13 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 8
  %14 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 9
  %15 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 10, i32 0
  %17 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %16, align 8, !noalias !386
  %18 = icmp eq %"class.cc::PaintFilter"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %20, align 8, !alias.scope !386
  br label %37

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %17, i64 0, i32 4
  %23 = load i8, i8* %22, align 8, !range !2, !noalias !389
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic, !noalias !392
  %28 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* %17, %"class.cc::PaintFilter"** %28, align 8, !alias.scope !395
  %29 = ptrtoint %"class.cc::PaintFilter"* %17 to i64
  br label %37

30:                                               ; preds = %21
  %31 = bitcast %"class.cc::PaintFilter"* %17 to void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)***
  %32 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)**, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*** %31, align 8, !noalias !389
  %33 = getelementptr inbounds void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %32, i64 4
  %34 = load void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)*, void (%class.sk_sp.3*, %"class.cc::PaintFilter"*, %"class.cc::ImageProvider"*)** %33, align 8, !noalias !389
  call void %34(%class.sk_sp.3* nonnull sret %5, %"class.cc::PaintFilter"* nonnull %17, %"class.cc::ImageProvider"* %2) #14
  %35 = bitcast %class.sk_sp.3* %5 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !396
  br label %37

37:                                               ; preds = %19, %25, %30
  %38 = phi i64 [ 0, %19 ], [ %29, %25 ], [ %36, %30 ]
  %39 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  %42 = getelementptr inbounds %"class.cc::LightingSpotPaintFilter", %"class.cc::LightingSpotPaintFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = select i1 %41, %struct.SkRect* null, %struct.SkRect* %42
  %44 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = call i8* @_Znwm(i64 120) #16, !noalias !396
  %46 = bitcast i8* %45 to %"class.cc::LightingSpotPaintFilter"*
  %47 = load i32, i32* %6, align 4, !noalias !396
  %48 = load float, float* %9, align 4, !noalias !396
  %49 = load float, float* %10, align 4, !noalias !396
  %50 = load i32, i32* %11, align 4, !noalias !396
  %51 = load float, float* %12, align 4, !noalias !396
  %52 = load float, float* %13, align 4, !noalias !396
  %53 = load float, float* %14, align 4, !noalias !396
  %54 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %54, align 8, !noalias !396
  %55 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %38, i64* %55, align 8, !noalias !396
  call void @_ZN2cc23LightingSpotPaintFilterC2ENS_11PaintFilter12LightingTypeERK8SkPoint3S5_ffjfff5sk_spIS1_EPK6SkRect(%"class.cc::LightingSpotPaintFilter"* nonnull %46, i32 %47, %struct.SkPoint3* dereferenceable(12) %7, %struct.SkPoint3* dereferenceable(12) %8, float %48, float %49, i32 %50, float %51, float %52, float %53, %class.sk_sp.3* nonnull %4, %struct.SkRect* %43) #14, !noalias !396
  %56 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %57 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %56, align 8, !noalias !396
  %58 = icmp eq %"class.cc::PaintFilter"* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %57, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel, !noalias !396
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %"class.cc::PaintFilter"* %57 to %class.SkRefCntBase*
  %65 = bitcast %"class.cc::PaintFilter"* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8, !noalias !396
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8, !noalias !396
  call void %68(%class.SkRefCntBase* nonnull %64) #14, !noalias !396
  br label %69

69:                                               ; preds = %63, %59, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  %70 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %45, i8** %70, align 8
  %71 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %54, align 8
  %72 = icmp eq %"class.cc::PaintFilter"* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = bitcast %"class.cc::PaintFilter"* %71 to %class.SkRefCntBase*
  %79 = bitcast %"class.cc::PaintFilter"* %71 to void (%class.SkRefCntBase*)***
  %80 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, i64 2
  %82 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, align 8
  call void %82(%class.SkRefCntBase* nonnull %78) #14
  br label %83

83:                                               ; preds = %69, %73, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

declare zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"*) local_unnamed_addr #5

declare void @_ZN14SkImageFilters7PictureE5sk_spI9SkPictureERK6SkRect(%class.sk_sp* sret, %class.sk_sp.62*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfN4base14StackAllocatorIfLm3EEEE21__push_back_slow_pathIRKfEEvOT_(%"class.std::__1::vector"*, float* dereferenceable(4)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast float** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 4611686018427387903
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast float** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 2
  %21 = icmp ult i64 %20, 2305843009213693951
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 4611686018427387903, %15 ]
  %29 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %30 = load %"struct.base::StackAllocator<float, 3>::Source"*, %"struct.base::StackAllocator<float, 3>::Source"** %29, align 8
  %31 = icmp eq %"struct.base::StackAllocator<float, 3>::Source"* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.base::StackAllocator<float, 3>::Source", %"struct.base::StackAllocator<float, 3>::Source"* %30, i64 0, i32 1
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = icmp ult i64 %28, 4
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  store i8 1, i8* %33, align 4
  %39 = bitcast %"class.base::StackAllocator"* %3 to float**
  %40 = load float*, float** %39, align 8
  br label %48

41:                                               ; preds = %32, %27
  %42 = icmp ugt i64 %28, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #15
  unreachable

44:                                               ; preds = %41
  %45 = shl i64 %28, 2
  %46 = tail call i8* @_Znwm(i64 %45) #16
  %47 = bitcast i8* %46 to float*
  br label %48

48:                                               ; preds = %22, %38, %44
  %49 = phi i64 [ 0, %22 ], [ %28, %38 ], [ %28, %44 ]
  %50 = phi float* [ null, %22 ], [ %40, %38 ], [ %47, %44 ]
  %51 = getelementptr inbounds float, float* %50, i64 %10
  %52 = getelementptr inbounds float, float* %50, i64 %49
  %53 = ptrtoint float* %52 to i64
  %54 = bitcast float* %1 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = bitcast float* %51 to i32*
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds float, float* %51, i64 1
  %58 = ptrtoint float* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %60 = load float*, float** %59, align 8
  %61 = ptrtoint float* %60 to i64
  %62 = load float*, float** %4, align 8
  %63 = icmp eq float* %62, %60
  br i1 %63, label %236, label %64

64:                                               ; preds = %48
  %65 = getelementptr float, float* %62, i64 -1
  %66 = ptrtoint float* %65 to i64
  %67 = sub i64 %66, %61
  %68 = lshr i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 8
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr float, float* %62, i64 -1
  %73 = ptrtoint float* %72 to i64
  %74 = sub i64 %73, %61
  %75 = lshr i64 %74, 2
  %76 = xor i64 %75, -1
  %77 = add nsw i64 %10, %76
  %78 = getelementptr float, float* %50, i64 %77
  %79 = xor i64 %75, -1
  %80 = getelementptr float, float* %62, i64 %79
  %81 = icmp ult float* %78, %62
  %82 = icmp ult float* %80, %51
  %83 = and i1 %81, %82
  br i1 %83, label %163, label %84

84:                                               ; preds = %71
  %85 = and i64 %69, 9223372036854775800
  %86 = sub nsw i64 0, %85
  %87 = getelementptr float, float* %51, i64 %86
  %88 = sub nsw i64 0, %85
  %89 = getelementptr float, float* %62, i64 %88
  %90 = add nsw i64 %85, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %90, 0
  br i1 %94, label %141, label %95

95:                                               ; preds = %84
  %96 = sub nuw nsw i64 %92, %93
  %97 = getelementptr float, float* %51, i64 -1
  %98 = getelementptr float, float* %62, i64 -1
  %99 = getelementptr float, float* %51, i64 -1
  %100 = getelementptr float, float* %62, i64 -1
  br label %101

101:                                              ; preds = %101, %95
  %102 = phi i64 [ 0, %95 ], [ %136, %101 ]
  %103 = phi i64 [ %96, %95 ], [ %137, %101 ]
  %104 = sub i64 0, %102
  %105 = sub i64 0, %102
  %106 = getelementptr inbounds float, float* %97, i64 %104
  %107 = getelementptr inbounds float, float* %98, i64 %105
  %108 = getelementptr inbounds float, float* %107, i64 -3
  %109 = bitcast float* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !399
  %111 = getelementptr inbounds float, float* %107, i64 -4
  %112 = getelementptr inbounds float, float* %111, i64 -3
  %113 = bitcast float* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4, !alias.scope !399
  %115 = getelementptr inbounds float, float* %106, i64 -3
  %116 = bitcast float* %115 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %116, align 4, !alias.scope !402, !noalias !399
  %117 = getelementptr inbounds float, float* %106, i64 -4
  %118 = getelementptr inbounds float, float* %117, i64 -3
  %119 = bitcast float* %118 to <4 x i32>*
  store <4 x i32> %114, <4 x i32>* %119, align 4, !alias.scope !402, !noalias !399
  %120 = sub nuw nsw i64 -8, %102
  %121 = sub nuw nsw i64 -8, %102
  %122 = getelementptr inbounds float, float* %99, i64 %120
  %123 = getelementptr inbounds float, float* %100, i64 %121
  %124 = getelementptr inbounds float, float* %123, i64 -3
  %125 = bitcast float* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !399
  %127 = getelementptr inbounds float, float* %123, i64 -4
  %128 = getelementptr inbounds float, float* %127, i64 -3
  %129 = bitcast float* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !399
  %131 = getelementptr inbounds float, float* %122, i64 -3
  %132 = bitcast float* %131 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %132, align 4, !alias.scope !402, !noalias !399
  %133 = getelementptr inbounds float, float* %122, i64 -4
  %134 = getelementptr inbounds float, float* %133, i64 -3
  %135 = bitcast float* %134 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %135, align 4, !alias.scope !402, !noalias !399
  %136 = add i64 %102, 16
  %137 = add i64 %103, -2
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %101, !llvm.loop !404

139:                                              ; preds = %101
  %140 = sub nuw nsw i64 -16, %102
  br label %141

141:                                              ; preds = %139, %84
  %142 = phi i64 [ 0, %84 ], [ %140, %139 ]
  %143 = icmp eq i64 %93, 0
  br i1 %143, label %161, label %144

144:                                              ; preds = %141
  %145 = getelementptr float, float* %51, i64 -1
  %146 = getelementptr float, float* %62, i64 -1
  %147 = getelementptr inbounds float, float* %145, i64 %142
  %148 = getelementptr inbounds float, float* %146, i64 %142
  %149 = getelementptr inbounds float, float* %148, i64 -3
  %150 = bitcast float* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4, !alias.scope !399
  %152 = getelementptr inbounds float, float* %148, i64 -4
  %153 = getelementptr inbounds float, float* %152, i64 -3
  %154 = bitcast float* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4, !alias.scope !399
  %156 = getelementptr inbounds float, float* %147, i64 -3
  %157 = bitcast float* %156 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %157, align 4, !alias.scope !402, !noalias !399
  %158 = getelementptr inbounds float, float* %147, i64 -4
  %159 = getelementptr inbounds float, float* %158, i64 -3
  %160 = bitcast float* %159 to <4 x i32>*
  store <4 x i32> %155, <4 x i32>* %160, align 4, !alias.scope !402, !noalias !399
  br label %161

161:                                              ; preds = %141, %144
  %162 = icmp eq i64 %69, %85
  br i1 %162, label %233, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi float* [ %51, %71 ], [ %51, %64 ], [ %87, %161 ]
  %165 = phi float* [ %62, %71 ], [ %62, %64 ], [ %89, %161 ]
  %166 = getelementptr float, float* %165, i64 -1
  %167 = ptrtoint float* %166 to i64
  %168 = sub i64 %167, %61
  %169 = lshr i64 %168, 2
  %170 = add nuw nsw i64 %169, 1
  %171 = and i64 %170, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %163, %173
  %174 = phi float* [ %177, %173 ], [ %164, %163 ]
  %175 = phi float* [ %178, %173 ], [ %165, %163 ]
  %176 = phi i64 [ %182, %173 ], [ %171, %163 ]
  %177 = getelementptr inbounds float, float* %174, i64 -1
  %178 = getelementptr inbounds float, float* %175, i64 -1
  %179 = bitcast float* %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = bitcast float* %177 to i32*
  store i32 %180, i32* %181, align 4
  %182 = add i64 %176, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !405

184:                                              ; preds = %173, %163
  %185 = phi float* [ undef, %163 ], [ %177, %173 ]
  %186 = phi float* [ %164, %163 ], [ %177, %173 ]
  %187 = phi float* [ %165, %163 ], [ %178, %173 ]
  %188 = icmp ult i64 %168, 28
  br i1 %188, label %233, label %189

189:                                              ; preds = %184, %189
  %190 = phi float* [ %227, %189 ], [ %186, %184 ]
  %191 = phi float* [ %228, %189 ], [ %187, %184 ]
  %192 = getelementptr inbounds float, float* %190, i64 -1
  %193 = getelementptr inbounds float, float* %191, i64 -1
  %194 = bitcast float* %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = bitcast float* %192 to i32*
  store i32 %195, i32* %196, align 4
  %197 = getelementptr inbounds float, float* %190, i64 -2
  %198 = getelementptr inbounds float, float* %191, i64 -2
  %199 = bitcast float* %198 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = bitcast float* %197 to i32*
  store i32 %200, i32* %201, align 4
  %202 = getelementptr inbounds float, float* %190, i64 -3
  %203 = getelementptr inbounds float, float* %191, i64 -3
  %204 = bitcast float* %203 to i32*
  %205 = load i32, i32* %204, align 4
  %206 = bitcast float* %202 to i32*
  store i32 %205, i32* %206, align 4
  %207 = getelementptr inbounds float, float* %190, i64 -4
  %208 = getelementptr inbounds float, float* %191, i64 -4
  %209 = bitcast float* %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = bitcast float* %207 to i32*
  store i32 %210, i32* %211, align 4
  %212 = getelementptr inbounds float, float* %190, i64 -5
  %213 = getelementptr inbounds float, float* %191, i64 -5
  %214 = bitcast float* %213 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = bitcast float* %212 to i32*
  store i32 %215, i32* %216, align 4
  %217 = getelementptr inbounds float, float* %190, i64 -6
  %218 = getelementptr inbounds float, float* %191, i64 -6
  %219 = bitcast float* %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = bitcast float* %217 to i32*
  store i32 %220, i32* %221, align 4
  %222 = getelementptr inbounds float, float* %190, i64 -7
  %223 = getelementptr inbounds float, float* %191, i64 -7
  %224 = bitcast float* %223 to i32*
  %225 = load i32, i32* %224, align 4
  %226 = bitcast float* %222 to i32*
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds float, float* %190, i64 -8
  %228 = getelementptr inbounds float, float* %191, i64 -8
  %229 = bitcast float* %228 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = bitcast float* %227 to i32*
  store i32 %230, i32* %231, align 4
  %232 = icmp eq float* %228, %60
  br i1 %232, label %233, label %189, !llvm.loop !406

233:                                              ; preds = %184, %189, %161
  %234 = phi float* [ %87, %161 ], [ %185, %184 ], [ %227, %189 ]
  %235 = load i64, i64* %7, align 8
  br label %236

236:                                              ; preds = %48, %233
  %237 = phi float* [ %234, %233 ], [ %51, %48 ]
  %238 = phi i64 [ %235, %233 ], [ %61, %48 ]
  %239 = ptrtoint float* %237 to i64
  store i64 %239, i64* %7, align 8
  store i64 %58, i64* %5, align 8
  store i64 %53, i64* %17, align 8
  %240 = icmp eq i64 %238, 0
  br i1 %240, label %253, label %241

241:                                              ; preds = %236
  %242 = inttoptr i64 %238 to float*
  %243 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %244 = load %"struct.base::StackAllocator<float, 3>::Source"*, %"struct.base::StackAllocator<float, 3>::Source"** %243, align 8
  %245 = icmp ne %"struct.base::StackAllocator<float, 3>::Source"* %244, null
  %246 = bitcast %"struct.base::StackAllocator<float, 3>::Source"* %244 to float*
  %247 = icmp eq float* %242, %246
  %248 = and i1 %245, %247
  br i1 %248, label %249, label %251

249:                                              ; preds = %241
  %250 = getelementptr inbounds %"struct.base::StackAllocator<float, 3>::Source", %"struct.base::StackAllocator<float, 3>::Source"* %244, i64 0, i32 1
  store i8 0, i8* %250, align 4
  br label %253

251:                                              ; preds = %241
  %252 = inttoptr i64 %238 to i8*
  tail call void @_ZdlPv(i8* %252) #16
  br label %253

253:                                              ; preds = %236, %249, %251
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN2cc11PaintFilterEEN4base14StackAllocatorIS4_Lm2EEEE7reserveEm(%"class.std::__1::vector.35"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.sk_sp.3** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %class.sk_sp.3*
  br i1 %10, label %12, label %170

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %class.sk_sp.3** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %7
  %18 = ashr exact i64 %17, 3
  %19 = getelementptr inbounds %"class.base::StackAllocator.32", %"class.base::StackAllocator.32"* %13, i64 0, i32 0
  %20 = load %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"*, %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"** %19, align 8
  %21 = icmp eq %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %20, null
  %22 = inttoptr i64 %16 to %class.sk_sp.3*
  br i1 %21, label %35, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source", %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %20, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = icmp ult i64 %1, 3
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  store i8 1, i8* %24, align 8
  %30 = bitcast %"class.base::StackAllocator.32"* %13 to %class.sk_sp.3**
  %31 = load %class.sk_sp.3*, %class.sk_sp.3** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 0
  %33 = load %class.sk_sp.3*, %class.sk_sp.3** %32, align 8
  %34 = load %class.sk_sp.3*, %class.sk_sp.3** %14, align 8
  br label %42

35:                                               ; preds = %23, %12
  %36 = icmp ugt i64 %1, 2305843009213693951
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #15
  unreachable

38:                                               ; preds = %35
  %39 = shl i64 %1, 3
  %40 = tail call i8* @_Znwm(i64 %39) #16
  %41 = bitcast i8* %40 to %class.sk_sp.3*
  br label %42

42:                                               ; preds = %29, %38
  %43 = phi %class.sk_sp.3* [ %34, %29 ], [ %22, %38 ]
  %44 = phi %class.sk_sp.3* [ %33, %29 ], [ %11, %38 ]
  %45 = phi %class.sk_sp.3* [ %31, %29 ], [ %41, %38 ]
  %46 = ptrtoint %class.sk_sp.3* %44 to i64
  %47 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %45, i64 %18
  %48 = ptrtoint %class.sk_sp.3* %47 to i64
  %49 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %45, i64 %1
  %50 = ptrtoint %class.sk_sp.3* %49 to i64
  %51 = icmp eq %class.sk_sp.3* %43, %44
  br i1 %51, label %134, label %52

52:                                               ; preds = %42
  %53 = getelementptr %class.sk_sp.3, %class.sk_sp.3* %43, i64 -1, i32 0
  %54 = ptrtoint %"class.cc::PaintFilter"** %53 to i64
  %55 = sub i64 %54, %46
  %56 = lshr i64 %55, 3
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 7
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %52, %60
  %61 = phi %class.sk_sp.3* [ %64, %60 ], [ %47, %52 ]
  %62 = phi %class.sk_sp.3* [ %65, %60 ], [ %43, %52 ]
  %63 = phi i64 [ %70, %60 ], [ %58, %52 ]
  %64 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %62, i64 -1
  %66 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %65, i64 0, i32 0
  %67 = bitcast %class.sk_sp.3* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %66, align 8
  %69 = bitcast %class.sk_sp.3* %64 to i64*
  store i64 %68, i64* %69, align 8
  %70 = add i64 %63, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %60, !llvm.loop !407

72:                                               ; preds = %60, %52
  %73 = phi %class.sk_sp.3* [ undef, %52 ], [ %64, %60 ]
  %74 = phi %class.sk_sp.3* [ %47, %52 ], [ %64, %60 ]
  %75 = phi %class.sk_sp.3* [ %43, %52 ], [ %65, %60 ]
  %76 = icmp ult i64 %55, 56
  br i1 %76, label %129, label %77

77:                                               ; preds = %72, %77
  %78 = phi %class.sk_sp.3* [ %122, %77 ], [ %74, %72 ]
  %79 = phi %class.sk_sp.3* [ %123, %77 ], [ %75, %72 ]
  %80 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %79, i64 -1
  %82 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %81, i64 0, i32 0
  %83 = bitcast %class.sk_sp.3* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %82, align 8
  %85 = bitcast %class.sk_sp.3* %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %79, i64 -2
  %88 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %87, i64 0, i32 0
  %89 = bitcast %class.sk_sp.3* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %88, align 8
  %91 = bitcast %class.sk_sp.3* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %79, i64 -3
  %94 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %93, i64 0, i32 0
  %95 = bitcast %class.sk_sp.3* %93 to i64*
  %96 = load i64, i64* %95, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %94, align 8
  %97 = bitcast %class.sk_sp.3* %92 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %79, i64 -4
  %100 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %99, i64 0, i32 0
  %101 = bitcast %class.sk_sp.3* %99 to i64*
  %102 = load i64, i64* %101, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %100, align 8
  %103 = bitcast %class.sk_sp.3* %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %79, i64 -5
  %106 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %105, i64 0, i32 0
  %107 = bitcast %class.sk_sp.3* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %106, align 8
  %109 = bitcast %class.sk_sp.3* %104 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %79, i64 -6
  %112 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %111, i64 0, i32 0
  %113 = bitcast %class.sk_sp.3* %111 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %112, align 8
  %115 = bitcast %class.sk_sp.3* %110 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %79, i64 -7
  %118 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %117, i64 0, i32 0
  %119 = bitcast %class.sk_sp.3* %117 to i64*
  %120 = load i64, i64* %119, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %118, align 8
  %121 = bitcast %class.sk_sp.3* %116 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %79, i64 -8
  %124 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %123, i64 0, i32 0
  %125 = bitcast %class.sk_sp.3* %123 to i64*
  %126 = load i64, i64* %125, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %124, align 8
  %127 = bitcast %class.sk_sp.3* %122 to i64*
  store i64 %126, i64* %127, align 8
  %128 = icmp eq %class.sk_sp.3* %123, %44
  br i1 %128, label %129, label %77

129:                                              ; preds = %77, %72
  %130 = phi %class.sk_sp.3* [ %73, %72 ], [ %122, %77 ]
  %131 = ptrtoint %class.sk_sp.3* %130 to i64
  %132 = load i64, i64* %6, align 8
  %133 = load %class.sk_sp.3*, %class.sk_sp.3** %14, align 8
  br label %134

134:                                              ; preds = %42, %129
  %135 = phi %class.sk_sp.3* [ %133, %129 ], [ %43, %42 ]
  %136 = phi i64 [ %131, %129 ], [ %48, %42 ]
  %137 = phi i64 [ %132, %129 ], [ %46, %42 ]
  store i64 %136, i64* %6, align 8
  store i64 %48, i64* %15, align 8
  store i64 %50, i64* %4, align 8
  %138 = inttoptr i64 %137 to %class.sk_sp.3*
  %139 = icmp eq %class.sk_sp.3* %135, %138
  br i1 %139, label %158, label %140

140:                                              ; preds = %134, %156
  %141 = phi %class.sk_sp.3* [ %142, %156 ], [ %135, %134 ]
  %142 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %141, i64 -1
  %143 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %142, i64 0, i32 0
  %144 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %143, align 8
  %145 = icmp eq %"class.cc::PaintFilter"* %144, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %144, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 -1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %156

150:                                              ; preds = %146
  %151 = bitcast %"class.cc::PaintFilter"* %144 to %class.SkRefCntBase*
  %152 = bitcast %"class.cc::PaintFilter"* %144 to void (%class.SkRefCntBase*)***
  %153 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %152, align 8
  %154 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, i64 2
  %155 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, align 8
  tail call void %155(%class.SkRefCntBase* nonnull %151) #14
  br label %156

156:                                              ; preds = %150, %146, %140
  %157 = icmp eq %class.sk_sp.3* %142, %138
  br i1 %157, label %158, label %140

158:                                              ; preds = %156, %134
  %159 = icmp eq i64 %137, 0
  br i1 %159, label %170, label %160

160:                                              ; preds = %158
  %161 = load %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"*, %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"** %19, align 8
  %162 = icmp ne %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %161, null
  %163 = bitcast %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %161 to %class.sk_sp.3*
  %164 = icmp eq %class.sk_sp.3* %138, %163
  %165 = and i1 %162, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source", %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %161, i64 0, i32 1
  store i8 0, i8* %167, align 8
  br label %170

168:                                              ; preds = %160
  %169 = inttoptr i64 %137 to i8*
  tail call void @_ZdlPv(i8* %169) #16
  br label %170

170:                                              ; preds = %168, %166, %158, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN2cc11PaintFilterEEN4base14StackAllocatorIS4_Lm2EEEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.35"*, %class.sk_sp.3* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %class.sk_sp.3** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 2305843009213693951
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %class.sk_sp.3** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, 1152921504606846975
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 2
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 2305843009213693951, %15 ]
  %29 = getelementptr inbounds %"class.base::StackAllocator.32", %"class.base::StackAllocator.32"* %3, i64 0, i32 0
  %30 = load %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"*, %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"** %29, align 8
  %31 = icmp eq %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source", %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %30, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = icmp ult i64 %28, 3
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  store i8 1, i8* %33, align 8
  %39 = bitcast %"class.base::StackAllocator.32"* %3 to %class.sk_sp.3**
  %40 = load %class.sk_sp.3*, %class.sk_sp.3** %39, align 8
  br label %48

41:                                               ; preds = %32, %27
  %42 = icmp ugt i64 %28, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #15
  unreachable

44:                                               ; preds = %41
  %45 = shl i64 %28, 3
  %46 = tail call i8* @_Znwm(i64 %45) #16
  %47 = bitcast i8* %46 to %class.sk_sp.3*
  br label %48

48:                                               ; preds = %22, %38, %44
  %49 = phi i64 [ 0, %22 ], [ %28, %38 ], [ %28, %44 ]
  %50 = phi %class.sk_sp.3* [ null, %22 ], [ %40, %38 ], [ %47, %44 ]
  %51 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %50, i64 %10
  %52 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %50, i64 %49
  %53 = ptrtoint %class.sk_sp.3* %52 to i64
  %54 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %1, i64 0, i32 0
  %55 = bitcast %class.sk_sp.3* %1 to i64*
  %56 = load i64, i64* %55, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %54, align 8
  %57 = bitcast %class.sk_sp.3* %51 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %51, i64 1
  %59 = ptrtoint %class.sk_sp.3* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 0
  %61 = load %class.sk_sp.3*, %class.sk_sp.3** %60, align 8
  %62 = ptrtoint %class.sk_sp.3* %61 to i64
  %63 = load %class.sk_sp.3*, %class.sk_sp.3** %4, align 8
  %64 = icmp eq %class.sk_sp.3* %63, %61
  br i1 %64, label %146, label %65

65:                                               ; preds = %48
  %66 = getelementptr %class.sk_sp.3, %class.sk_sp.3* %63, i64 -1, i32 0
  %67 = ptrtoint %"class.cc::PaintFilter"** %66 to i64
  %68 = sub i64 %67, %62
  %69 = lshr i64 %68, 3
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 7
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %65, %73
  %74 = phi %class.sk_sp.3* [ %77, %73 ], [ %51, %65 ]
  %75 = phi %class.sk_sp.3* [ %78, %73 ], [ %63, %65 ]
  %76 = phi i64 [ %83, %73 ], [ %71, %65 ]
  %77 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %74, i64 -1
  %78 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %75, i64 -1
  %79 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %78, i64 0, i32 0
  %80 = bitcast %class.sk_sp.3* %78 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %79, align 8
  %82 = bitcast %class.sk_sp.3* %77 to i64*
  store i64 %81, i64* %82, align 8
  %83 = add i64 %76, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %73, !llvm.loop !408

85:                                               ; preds = %73, %65
  %86 = phi %class.sk_sp.3* [ undef, %65 ], [ %77, %73 ]
  %87 = phi %class.sk_sp.3* [ %51, %65 ], [ %77, %73 ]
  %88 = phi %class.sk_sp.3* [ %63, %65 ], [ %78, %73 ]
  %89 = icmp ult i64 %68, 56
  br i1 %89, label %142, label %90

90:                                               ; preds = %85, %90
  %91 = phi %class.sk_sp.3* [ %135, %90 ], [ %87, %85 ]
  %92 = phi %class.sk_sp.3* [ %136, %90 ], [ %88, %85 ]
  %93 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %91, i64 -1
  %94 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %92, i64 -1
  %95 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %94, i64 0, i32 0
  %96 = bitcast %class.sk_sp.3* %94 to i64*
  %97 = load i64, i64* %96, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %95, align 8
  %98 = bitcast %class.sk_sp.3* %93 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %91, i64 -2
  %100 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %92, i64 -2
  %101 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %100, i64 0, i32 0
  %102 = bitcast %class.sk_sp.3* %100 to i64*
  %103 = load i64, i64* %102, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %101, align 8
  %104 = bitcast %class.sk_sp.3* %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %91, i64 -3
  %106 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %92, i64 -3
  %107 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %106, i64 0, i32 0
  %108 = bitcast %class.sk_sp.3* %106 to i64*
  %109 = load i64, i64* %108, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %107, align 8
  %110 = bitcast %class.sk_sp.3* %105 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %91, i64 -4
  %112 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %92, i64 -4
  %113 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %112, i64 0, i32 0
  %114 = bitcast %class.sk_sp.3* %112 to i64*
  %115 = load i64, i64* %114, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %113, align 8
  %116 = bitcast %class.sk_sp.3* %111 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %91, i64 -5
  %118 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %92, i64 -5
  %119 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %118, i64 0, i32 0
  %120 = bitcast %class.sk_sp.3* %118 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %119, align 8
  %122 = bitcast %class.sk_sp.3* %117 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %91, i64 -6
  %124 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %92, i64 -6
  %125 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %124, i64 0, i32 0
  %126 = bitcast %class.sk_sp.3* %124 to i64*
  %127 = load i64, i64* %126, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %125, align 8
  %128 = bitcast %class.sk_sp.3* %123 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %91, i64 -7
  %130 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %92, i64 -7
  %131 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %130, i64 0, i32 0
  %132 = bitcast %class.sk_sp.3* %130 to i64*
  %133 = load i64, i64* %132, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %131, align 8
  %134 = bitcast %class.sk_sp.3* %129 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %91, i64 -8
  %136 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %92, i64 -8
  %137 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %136, i64 0, i32 0
  %138 = bitcast %class.sk_sp.3* %136 to i64*
  %139 = load i64, i64* %138, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %137, align 8
  %140 = bitcast %class.sk_sp.3* %135 to i64*
  store i64 %139, i64* %140, align 8
  %141 = icmp eq %class.sk_sp.3* %136, %61
  br i1 %141, label %142, label %90

142:                                              ; preds = %90, %85
  %143 = phi %class.sk_sp.3* [ %86, %85 ], [ %135, %90 ]
  %144 = load i64, i64* %7, align 8
  %145 = load %class.sk_sp.3*, %class.sk_sp.3** %4, align 8
  br label %146

146:                                              ; preds = %48, %142
  %147 = phi %class.sk_sp.3* [ %145, %142 ], [ %61, %48 ]
  %148 = phi %class.sk_sp.3* [ %143, %142 ], [ %51, %48 ]
  %149 = phi i64 [ %144, %142 ], [ %62, %48 ]
  %150 = ptrtoint %class.sk_sp.3* %148 to i64
  store i64 %150, i64* %7, align 8
  store i64 %59, i64* %5, align 8
  store i64 %53, i64* %17, align 8
  %151 = inttoptr i64 %149 to %class.sk_sp.3*
  %152 = icmp eq %class.sk_sp.3* %147, %151
  br i1 %152, label %171, label %153

153:                                              ; preds = %146, %169
  %154 = phi %class.sk_sp.3* [ %155, %169 ], [ %147, %146 ]
  %155 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %154, i64 -1
  %156 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %155, i64 0, i32 0
  %157 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %156, align 8
  %158 = icmp eq %"class.cc::PaintFilter"* %157, null
  br i1 %158, label %169, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %157, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = bitcast %"class.cc::PaintFilter"* %157 to %class.SkRefCntBase*
  %165 = bitcast %"class.cc::PaintFilter"* %157 to void (%class.SkRefCntBase*)***
  %166 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, i64 2
  %168 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, align 8
  tail call void %168(%class.SkRefCntBase* nonnull %164) #14
  br label %169

169:                                              ; preds = %163, %159, %153
  %170 = icmp eq %class.sk_sp.3* %155, %151
  br i1 %170, label %171, label %153

171:                                              ; preds = %169, %146
  %172 = icmp eq i64 %149, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.base::StackAllocator.32", %"class.base::StackAllocator.32"* %3, i64 0, i32 0
  %175 = load %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"*, %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"** %174, align 8
  %176 = icmp ne %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %175, null
  %177 = bitcast %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %175 to %class.sk_sp.3*
  %178 = icmp eq %class.sk_sp.3* %151, %177
  %179 = and i1 %176, %178
  br i1 %179, label %180, label %182

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source", %"struct.base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source"* %175, i64 0, i32 1
  store i8 0, i8* %181, align 8
  br label %184

182:                                              ; preds = %173
  %183 = inttoptr i64 %149 to i8*
  tail call void @_ZdlPv(i8* %183) #16
  br label %184

184:                                              ; preds = %171, %180, %182
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spI13SkImageFilterENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.102"*, %class.sk_sp* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.102"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.102"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %class.sk_sp*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %35
  %39 = ptrtoint %class.sk_sp* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %40, align 8
  %43 = bitcast %class.sk_sp* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %37, i64 1
  %45 = ptrtoint %class.sk_sp* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp*, %class.sk_sp** %46, align 8
  %48 = ptrtoint %class.sk_sp* %47 to i64
  %49 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %50 = icmp eq %class.sk_sp* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp, %class.sk_sp* %49, i64 -1, i32 0
  %53 = ptrtoint %class.SkImageFilter** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %65, align 8
  %68 = bitcast %class.sk_sp* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !409

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %81, align 8
  %84 = bitcast %class.sk_sp* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %87, align 8
  %90 = bitcast %class.sk_sp* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %93, align 8
  %96 = bitcast %class.sk_sp* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %99, align 8
  %102 = bitcast %class.sk_sp* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %105, align 8
  %108 = bitcast %class.sk_sp* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %111, align 8
  %114 = bitcast %class.sk_sp* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %117, align 8
  %120 = bitcast %class.sk_sp* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %123, align 8
  %126 = bitcast %class.sk_sp* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp*
  %138 = icmp eq %class.sk_sp* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %141, i64 0, i32 0
  %143 = load %class.SkImageFilter*, %class.SkImageFilter** %142, align 8
  %144 = icmp eq %class.SkImageFilter* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %143, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %class.SkImageFilter* %143 to %class.SkRefCntBase*
  %151 = bitcast %class.SkImageFilter* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #14
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #16
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!5 = distinct !{!5, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!9 = distinct !{!9, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!12 = distinct !{!12, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!13 = !{!14, !11}
!14 = distinct !{!14, !15, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!15 = distinct !{!15, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!16 = !{!17, !14}
!17 = distinct !{!17, !18, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!18 = distinct !{!18, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!19 = !{!17, !14, !11}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_Z10sk_make_spIN2cc22ColorFilterPaintFilterEJRK5sk_spI13SkColorFilterES2_INS0_11PaintFilterEEPK6SkRectEES2_IT_EDpOT0_: argument 0"}
!22 = distinct !{!22, !"_Z10sk_make_spIN2cc22ColorFilterPaintFilterEJRK5sk_spI13SkColorFilterES2_INS0_11PaintFilterEEPK6SkRectEES2_IT_EDpOT0_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!25 = distinct !{!25, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!28 = distinct !{!28, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!29 = !{!30, !27}
!30 = distinct !{!30, !31, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!31 = distinct !{!31, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!34 = distinct !{!34, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!35 = !{!33, !30, !27}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_Z10sk_make_spIN2cc15BlurPaintFilterEJRKfS3_RK10SkTileMode5sk_spINS0_11PaintFilterEEPK6SkRectEES7_IT_EDpOT0_: argument 0"}
!38 = distinct !{!38, !"_Z10sk_make_spIN2cc15BlurPaintFilterEJRKfS3_RK10SkTileMode5sk_spINS0_11PaintFilterEEPK6SkRectEES7_IT_EDpOT0_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!41 = distinct !{!41, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!44 = distinct !{!44, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!47 = distinct !{!47, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!48 = !{!49, !46}
!49 = distinct !{!49, !50, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!50 = distinct !{!50, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!51 = !{!52, !49}
!52 = distinct !{!52, !53, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!53 = distinct !{!53, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!54 = !{!52, !49, !46}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_Z10sk_make_spIN2cc21DropShadowPaintFilterEJRKfS3_S3_S3_RKjRKNS1_10ShadowModeE5sk_spINS0_11PaintFilterEEPK6SkRectEES9_IT_EDpOT0_: argument 0"}
!57 = distinct !{!57, !"_Z10sk_make_spIN2cc21DropShadowPaintFilterEJRKfS3_S3_S3_RKjRKNS1_10ShadowModeE5sk_spINS0_11PaintFilterEEPK6SkRectEES9_IT_EDpOT0_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!60 = distinct !{!60, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!63 = distinct !{!63, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!64 = !{!65, !62}
!65 = distinct !{!65, !66, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!66 = distinct !{!66, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!67 = !{!68, !65}
!68 = distinct !{!68, !69, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!69 = distinct !{!69, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!70 = !{!68, !65, !62}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_Z10sk_make_spIN2cc20MagnifierPaintFilterEJRK6SkRectRKf5sk_spINS0_11PaintFilterEEPS3_EES7_IT_EDpOT0_: argument 0"}
!73 = distinct !{!73, !"_Z10sk_make_spIN2cc20MagnifierPaintFilterEJRK6SkRectRKf5sk_spINS0_11PaintFilterEEPS3_EES7_IT_EDpOT0_"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!76 = distinct !{!76, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!79 = distinct !{!79, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!82 = distinct !{!82, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!83 = !{!84, !81}
!84 = distinct !{!84, !85, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!85 = distinct !{!85, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!86 = !{!87, !84}
!87 = distinct !{!87, !88, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!88 = distinct !{!88, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!89 = !{!87, !84, !81}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!92 = distinct !{!92, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!93 = !{!94, !91}
!94 = distinct !{!94, !95, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!95 = distinct !{!95, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!96 = !{!97, !94}
!97 = distinct !{!97, !98, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!98 = distinct !{!98, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!99 = !{!97, !94, !91}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_Z10sk_make_spIN2cc18ComposePaintFilterEJ5sk_spINS0_11PaintFilterEES4_EES2_IT_EDpOT0_: argument 0"}
!102 = distinct !{!102, !"_Z10sk_make_spIN2cc18ComposePaintFilterEJ5sk_spINS0_11PaintFilterEES4_EES2_IT_EDpOT0_"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!105 = distinct !{!105, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!108 = distinct !{!108, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!109 = !{!110, !107}
!110 = distinct !{!110, !111, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!111 = distinct !{!111, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!112 = !{!113, !110}
!113 = distinct !{!113, !114, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!114 = distinct !{!114, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!115 = !{!113, !110, !107}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_Z10sk_make_spIN2cc25AlphaThresholdPaintFilterEJRK8SkRegionRKfS6_5sk_spINS0_11PaintFilterEEPK6SkRectEES7_IT_EDpOT0_: argument 0"}
!118 = distinct !{!118, !"_Z10sk_make_spIN2cc25AlphaThresholdPaintFilterEJRK8SkRegionRKfS6_5sk_spINS0_11PaintFilterEEPK6SkRectEES7_IT_EDpOT0_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!121 = distinct !{!121, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!124 = distinct !{!124, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!127 = distinct !{!127, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!128 = !{!129, !126}
!129 = distinct !{!129, !130, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!130 = distinct !{!130, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!131 = !{!132, !129}
!132 = distinct !{!132, !133, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!133 = distinct !{!133, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!134 = !{!132, !129, !126}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!137 = distinct !{!137, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!138 = !{!139, !136}
!139 = distinct !{!139, !140, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!140 = distinct !{!140, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!141 = !{!142, !139}
!142 = distinct !{!142, !143, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!143 = distinct !{!143, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!144 = !{!142, !139, !136}
!145 = !{!146}
!146 = distinct !{!146, !147, !"_Z10sk_make_spIN2cc19XfermodePaintFilterEJRK11SkBlendMode5sk_spINS0_11PaintFilterEES7_PK6SkRectEES5_IT_EDpOT0_: argument 0"}
!147 = distinct !{!147, !"_Z10sk_make_spIN2cc19XfermodePaintFilterEJRK11SkBlendMode5sk_spINS0_11PaintFilterEES7_PK6SkRectEES5_IT_EDpOT0_"}
!148 = !{!149}
!149 = distinct !{!149, !150, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!150 = distinct !{!150, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!151 = !{!152}
!152 = distinct !{!152, !153, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!153 = distinct !{!153, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!154 = !{!155}
!155 = distinct !{!155, !156, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!156 = distinct !{!156, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!157 = !{!158, !155}
!158 = distinct !{!158, !159, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!159 = distinct !{!159, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!160 = !{!161, !158}
!161 = distinct !{!161, !162, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!162 = distinct !{!162, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!163 = !{!161, !158, !155}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!166 = distinct !{!166, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!167 = !{!168, !165}
!168 = distinct !{!168, !169, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!169 = distinct !{!169, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!170 = !{!171, !168}
!171 = distinct !{!171, !172, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!172 = distinct !{!172, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!173 = !{!171, !168, !165}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_Z10sk_make_spIN2cc21ArithmeticPaintFilterEJRKfS3_S3_S3_RKb5sk_spINS0_11PaintFilterEES8_PK6SkRectEES6_IT_EDpOT0_: argument 0"}
!176 = distinct !{!176, !"_Z10sk_make_spIN2cc21ArithmeticPaintFilterEJRKfS3_S3_S3_RKb5sk_spINS0_11PaintFilterEES8_PK6SkRectEES6_IT_EDpOT0_"}
!177 = !{!178}
!178 = distinct !{!178, !179, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!179 = distinct !{!179, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!180 = !{!181}
!181 = distinct !{!181, !182}
!182 = distinct !{!182, !"LVerDomain"}
!183 = !{!184}
!184 = distinct !{!184, !182}
!185 = distinct !{!185, !186}
!186 = !{!"llvm.loop.isvectorized", i32 1}
!187 = distinct !{!187, !188}
!188 = !{!"llvm.loop.unroll.disable"}
!189 = distinct !{!189, !186}
!190 = !{!191}
!191 = distinct !{!191, !192, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!192 = distinct !{!192, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!193 = !{!194, !191}
!194 = distinct !{!194, !195, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!195 = distinct !{!195, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!196 = !{!197, !194}
!197 = distinct !{!197, !198, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!198 = distinct !{!198, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!199 = !{!197, !194, !191}
!200 = !{!201}
!201 = distinct !{!201, !202, !"_Z10sk_make_spIN2cc28MatrixConvolutionPaintFilterEJRK7SkISizePKfRS5_S7_RK8SkIPointRK10SkTileModeRKb5sk_spINS0_11PaintFilterEEPK6SkRectEESG_IT_EDpOT0_: argument 0"}
!202 = distinct !{!202, !"_Z10sk_make_spIN2cc28MatrixConvolutionPaintFilterEJRK7SkISizePKfRS5_S7_RK8SkIPointRK10SkTileModeRKb5sk_spINS0_11PaintFilterEEPK6SkRectEESG_IT_EDpOT0_"}
!203 = !{!204}
!204 = distinct !{!204, !205, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!205 = distinct !{!205, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!206 = !{!207}
!207 = distinct !{!207, !208, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!208 = distinct !{!208, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!209 = !{!210}
!210 = distinct !{!210, !211, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!211 = distinct !{!211, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!212 = !{!213, !210}
!213 = distinct !{!213, !214, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!214 = distinct !{!214, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!215 = !{!216, !213}
!216 = distinct !{!216, !217, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!217 = distinct !{!217, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!218 = !{!216, !213, !210}
!219 = !{!220}
!220 = distinct !{!220, !221, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!221 = distinct !{!221, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!222 = !{!223, !220}
!223 = distinct !{!223, !224, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!224 = distinct !{!224, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!225 = !{!226, !223}
!226 = distinct !{!226, !227, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!227 = distinct !{!227, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!228 = !{!226, !223, !220}
!229 = !{!230}
!230 = distinct !{!230, !231, !"_Z10sk_make_spIN2cc32DisplacementMapEffectPaintFilterEJRK14SkColorChannelS4_RKf5sk_spINS0_11PaintFilterEES9_PK6SkRectEES7_IT_EDpOT0_: argument 0"}
!231 = distinct !{!231, !"_Z10sk_make_spIN2cc32DisplacementMapEffectPaintFilterEJRK14SkColorChannelS4_RKf5sk_spINS0_11PaintFilterEES9_PK6SkRectEES7_IT_EDpOT0_"}
!232 = !{!233}
!233 = distinct !{!233, !234, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!234 = distinct !{!234, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!235 = !{!236}
!236 = distinct !{!236, !237, !"_Z10sk_make_spIN2cc16ImagePaintFilterEJNS0_10PaintImageERK6SkRectS5_RK15SkFilterQualityEE5sk_spIT_EDpOT0_: argument 0"}
!237 = distinct !{!237, !"_Z10sk_make_spIN2cc16ImagePaintFilterEJNS0_10PaintImageERK6SkRectS5_RK15SkFilterQualityEE5sk_spIT_EDpOT0_"}
!238 = !{!239}
!239 = distinct !{!239, !240, !"_ZN14SkImageFilters7PictureE5sk_spI9SkPictureE: argument 0"}
!240 = distinct !{!240, !"_ZN14SkImageFilters7PictureE5sk_spI9SkPictureE"}
!241 = !{!242}
!242 = distinct !{!242, !243, !"_Z9sk_ref_spIN2cc17RecordPaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!243 = distinct !{!243, !"_Z9sk_ref_spIN2cc17RecordPaintFilterEE5sk_spIT_EPKS3_"}
!244 = !{!245}
!245 = distinct !{!245, !246, !"_Z10sk_make_spIN2cc17RecordPaintFilterEJRK5sk_spINS0_13PaintOpBufferEER6SkRectRN3gfx5SizeFENS0_11PaintShader15ScalingBehaviorEEES2_IT_EDpOT0_: argument 0"}
!246 = distinct !{!246, !"_Z10sk_make_spIN2cc17RecordPaintFilterEJRK5sk_spINS0_13PaintOpBufferEER6SkRectRN3gfx5SizeFENS0_11PaintShader15ScalingBehaviorEEES2_IT_EDpOT0_"}
!247 = !{!248}
!248 = distinct !{!248, !249, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!249 = distinct !{!249, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!250 = !{!251, !248}
!251 = distinct !{!251, !252, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!252 = distinct !{!252, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!253 = !{!254, !251}
!254 = distinct !{!254, !255, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!255 = distinct !{!255, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!256 = !{!254, !251, !248}
!257 = !{!258}
!258 = distinct !{!258, !259, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!259 = distinct !{!259, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!260 = !{!261}
!261 = distinct !{!261, !262, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!262 = distinct !{!262, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!263 = !{!264}
!264 = distinct !{!264, !265, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!265 = distinct !{!265, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!266 = !{!267}
!267 = distinct !{!267, !268, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!268 = distinct !{!268, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!269 = !{!270, !267}
!270 = distinct !{!270, !271, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!271 = distinct !{!271, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!272 = !{!273, !270}
!273 = distinct !{!273, !274, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!274 = distinct !{!274, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!275 = !{!273, !270, !267}
!276 = !{!277}
!277 = distinct !{!277, !278, !"_Z10sk_make_spIN2cc21MorphologyPaintFilterEJRKNS1_9MorphTypeERKfS6_5sk_spINS0_11PaintFilterEEPK6SkRectEES7_IT_EDpOT0_: argument 0"}
!278 = distinct !{!278, !"_Z10sk_make_spIN2cc21MorphologyPaintFilterEJRKNS1_9MorphTypeERKfS6_5sk_spINS0_11PaintFilterEEPK6SkRectEES7_IT_EDpOT0_"}
!279 = !{!280}
!280 = distinct !{!280, !281, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!281 = distinct !{!281, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!282 = !{!283}
!283 = distinct !{!283, !284, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!284 = distinct !{!284, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!285 = !{!286, !283}
!286 = distinct !{!286, !287, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!287 = distinct !{!287, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!288 = !{!289, !286}
!289 = distinct !{!289, !290, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!290 = distinct !{!290, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!291 = !{!289, !286, !283}
!292 = !{!293}
!293 = distinct !{!293, !294, !"_Z10sk_make_spIN2cc17OffsetPaintFilterEJRKfS3_5sk_spINS0_11PaintFilterEEPK6SkRectEES4_IT_EDpOT0_: argument 0"}
!294 = distinct !{!294, !"_Z10sk_make_spIN2cc17OffsetPaintFilterEJRKfS3_5sk_spINS0_11PaintFilterEEPK6SkRectEES4_IT_EDpOT0_"}
!295 = !{!296}
!296 = distinct !{!296, !297, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!297 = distinct !{!297, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!298 = !{!299}
!299 = distinct !{!299, !300, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!300 = distinct !{!300, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!301 = !{!302, !299}
!302 = distinct !{!302, !303, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!303 = distinct !{!303, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!304 = !{!305, !302}
!305 = distinct !{!305, !306, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!306 = distinct !{!306, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!307 = !{!305, !302, !299}
!308 = !{!309}
!309 = distinct !{!309, !310, !"_Z10sk_make_spIN2cc15TilePaintFilterEJRK6SkRectS4_5sk_spINS0_11PaintFilterEEEES5_IT_EDpOT0_: argument 0"}
!310 = distinct !{!310, !"_Z10sk_make_spIN2cc15TilePaintFilterEJRK6SkRectS4_5sk_spINS0_11PaintFilterEEEES5_IT_EDpOT0_"}
!311 = !{!312}
!312 = distinct !{!312, !313, !"_ZN14SkImageFilters6ShaderE5sk_spI8SkShaderERKNS_8CropRectE: argument 0"}
!313 = distinct !{!313, !"_ZN14SkImageFilters6ShaderE5sk_spI8SkShaderERKNS_8CropRectE"}
!314 = !{!315}
!315 = distinct !{!315, !316, !"_Z10sk_make_spIN2cc21TurbulencePaintFilterEJRKNS1_14TurbulenceTypeERKfS6_RKiS6_PK7SkISizePK6SkRectEE5sk_spIT_EDpOT0_: argument 0"}
!316 = distinct !{!316, !"_Z10sk_make_spIN2cc21TurbulencePaintFilterEJRKNS1_14TurbulenceTypeERKfS6_RKiS6_PK7SkISizePK6SkRectEE5sk_spIT_EDpOT0_"}
!317 = !{!318}
!318 = distinct !{!318, !319, !"_Z9sk_ref_spIN2cc11PaintShaderEE5sk_spIT_EPKS3_: argument 0"}
!319 = distinct !{!319, !"_Z9sk_ref_spIN2cc11PaintShaderEE5sk_spIT_EPKS3_"}
!320 = !{!321}
!321 = distinct !{!321, !322, !"_Z10sk_make_spIN2cc17ShaderPaintFilterEJ5sk_spINS0_11PaintShaderEEh15SkFilterQualityN14SkImageFilters6DitherEPK6SkRectEES2_IT_EDpOT0_: argument 0"}
!322 = distinct !{!322, !"_Z10sk_make_spIN2cc17ShaderPaintFilterEJ5sk_spINS0_11PaintShaderEEh15SkFilterQualityN14SkImageFilters6DitherEPK6SkRectEES2_IT_EDpOT0_"}
!323 = !{!324}
!324 = distinct !{!324, !325, !"_Z10sk_make_spIN2cc17ShaderPaintFilterEJDnRKhRK15SkFilterQualityRKN14SkImageFilters6DitherEPK6SkRectEE5sk_spIT_EDpOT0_: argument 0"}
!325 = distinct !{!325, !"_Z10sk_make_spIN2cc17ShaderPaintFilterEJDnRKhRK15SkFilterQualityRKN14SkImageFilters6DitherEPK6SkRectEE5sk_spIT_EDpOT0_"}
!326 = !{!327}
!327 = distinct !{!327, !328, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!328 = distinct !{!328, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!329 = !{!330}
!330 = distinct !{!330, !331, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!331 = distinct !{!331, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!332 = !{!333, !330}
!333 = distinct !{!333, !334, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!334 = distinct !{!334, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!335 = !{!336, !333}
!336 = distinct !{!336, !337, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!337 = distinct !{!337, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!338 = !{!336, !333, !330}
!339 = !{!340}
!340 = distinct !{!340, !341, !"_Z10sk_make_spIN2cc17MatrixPaintFilterEJRK8SkMatrixRK15SkFilterQuality5sk_spINS0_11PaintFilterEEEES8_IT_EDpOT0_: argument 0"}
!341 = distinct !{!341, !"_Z10sk_make_spIN2cc17MatrixPaintFilterEJRK8SkMatrixRK15SkFilterQuality5sk_spINS0_11PaintFilterEEEES8_IT_EDpOT0_"}
!342 = !{!343}
!343 = distinct !{!343, !344, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!344 = distinct !{!344, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!345 = !{!346}
!346 = distinct !{!346, !347, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!347 = distinct !{!347, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!348 = !{!349}
!349 = distinct !{!349, !350, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!350 = distinct !{!350, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!351 = !{!352, !349}
!352 = distinct !{!352, !353, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!353 = distinct !{!353, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!354 = !{!355, !352}
!355 = distinct !{!355, !356, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!356 = distinct !{!356, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!357 = !{!355, !352, !349}
!358 = !{!359}
!359 = distinct !{!359, !360, !"_Z10sk_make_spIN2cc26LightingDistantPaintFilterEJRKNS0_11PaintFilter12LightingTypeERK8SkPoint3RKjRKfSC_SC_5sk_spIS2_EPK6SkRectEESD_IT_EDpOT0_: argument 0"}
!360 = distinct !{!360, !"_Z10sk_make_spIN2cc26LightingDistantPaintFilterEJRKNS0_11PaintFilter12LightingTypeERK8SkPoint3RKjRKfSC_SC_5sk_spIS2_EPK6SkRectEESD_IT_EDpOT0_"}
!361 = !{!362}
!362 = distinct !{!362, !363, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!363 = distinct !{!363, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!364 = !{!365}
!365 = distinct !{!365, !366, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!366 = distinct !{!366, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!367 = !{!368}
!368 = distinct !{!368, !369, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!369 = distinct !{!369, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!370 = !{!371, !368}
!371 = distinct !{!371, !372, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!372 = distinct !{!372, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!373 = !{!374, !371}
!374 = distinct !{!374, !375, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!375 = distinct !{!375, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!376 = !{!374, !371, !368}
!377 = !{!378}
!378 = distinct !{!378, !379, !"_Z10sk_make_spIN2cc24LightingPointPaintFilterEJRKNS0_11PaintFilter12LightingTypeERK8SkPoint3RKjRKfSC_SC_5sk_spIS2_EPK6SkRectEESD_IT_EDpOT0_: argument 0"}
!379 = distinct !{!379, !"_Z10sk_make_spIN2cc24LightingPointPaintFilterEJRKNS0_11PaintFilter12LightingTypeERK8SkPoint3RKjRKfSC_SC_5sk_spIS2_EPK6SkRectEESD_IT_EDpOT0_"}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!382 = distinct !{!382, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!383 = !{!384}
!384 = distinct !{!384, !385, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_: argument 0"}
!385 = distinct !{!385, !"_ZN2cc11PaintFilter11GetSkFilterEPKS0_"}
!386 = !{!387}
!387 = distinct !{!387, !388, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE: argument 0"}
!388 = distinct !{!388, !"_ZN2cc12_GLOBAL__N_18SnapshotERK5sk_spINS_11PaintFilterEEPNS_13ImageProviderE"}
!389 = !{!390, !387}
!390 = distinct !{!390, !391, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE: argument 0"}
!391 = distinct !{!391, !"_ZNK2cc11PaintFilter18SnapshotWithImagesEPNS_13ImageProviderE"}
!392 = !{!393, !390}
!393 = distinct !{!393, !394, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_: argument 0"}
!394 = distinct !{!394, !"_Z9sk_ref_spIN2cc11PaintFilterEE5sk_spIT_EPKS3_"}
!395 = !{!393, !390, !387}
!396 = !{!397}
!397 = distinct !{!397, !398, !"_Z10sk_make_spIN2cc23LightingSpotPaintFilterEJRKNS0_11PaintFilter12LightingTypeERK8SkPoint3S8_RKfSA_RKjSA_SA_SA_5sk_spIS2_EPK6SkRectEESD_IT_EDpOT0_: argument 0"}
!398 = distinct !{!398, !"_Z10sk_make_spIN2cc23LightingSpotPaintFilterEJRKNS0_11PaintFilter12LightingTypeERK8SkPoint3S8_RKfSA_RKjSA_SA_SA_5sk_spIS2_EPK6SkRectEESD_IT_EDpOT0_"}
!399 = !{!400}
!400 = distinct !{!400, !401}
!401 = distinct !{!401, !"LVerDomain"}
!402 = !{!403}
!403 = distinct !{!403, !401}
!404 = distinct !{!404, !186}
!405 = distinct !{!405, !188}
!406 = distinct !{!406, !186}
!407 = distinct !{!407, !188}
!408 = distinct !{!408, !188}
!409 = distinct !{!409, !188}
