; ModuleID = '../../third_party/skia/src/gpu/GrProgramDesc.cpp'
source_filename = "../../third_party/skia/src/gpu/GrProgramDesc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrProgramDesc = type <{ %class.SkSTArray, i32, [4 x i8] }>
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [132 x i8] }
%class.SkTArray = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.42, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.2, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.36" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.2 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.6 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.3, [4 x i8] }>
%union.anon.3 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.4, i8* }
%class.sk_sp.4 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.5, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.5 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.6 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.7, void (i8*)*, i8* }
%class.SkNVRefCnt.7 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.2, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.33, %class.sk_sp.35, %class.sk_sp.35 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.9, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.9 = type { %class.SkTHashTable.10 }
%class.SkTHashTable.10 = type { i32, i32, %class.SkAutoTArray.11 }
%class.SkAutoTArray.11 = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.18, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.18 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.24, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.24 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.25 }
%class.SkTHashTable.25 = type { i32, i32, %class.SkAutoTArray.26 }
%class.SkAutoTArray.26 = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.33 = type { %class.GrCaps* }
%class.sk_sp.35 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.41 }
%union.anon.41 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.42 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.43, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.43 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.44"*, [24 x i8] }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.47, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.47 = type { %class.SkAlignedSTStorage.48, %class.SkTArray.49 }
%class.SkAlignedSTStorage.48 = type { [8 x i8] }
%class.SkTArray.49 = type { %"class.std::__1::unique_ptr.50"*, i64 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.59, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.59 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.34, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.34 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray*, i32, i32 }
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%class.SkString = type { %class.sk_sp.60 }
%class.sk_sp.60 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.GrProcessorStringKeyBuilder = type { %class.GrProcessorKeyBuilder, %class.SkString }
%class.GrTextureEffect = type { %class.GrFragmentProcessor.base, [4 x i8], %class.GrSurfaceProxyView, %class.GrSamplerState, [4 x float], %struct.SkRect, %struct.SkRect, [2 x i16] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray.47, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%struct.SkRect = type { float, float, float, float }

$_ZN13GrProgramDesc5resetEv = comdat any

$_ZN21GrProcessorKeyBuilderD2Ev = comdat any

$_ZN27GrProcessorStringKeyBuilderD2Ev = comdat any

$_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN21GrProcessorKeyBuilderD0Ev = comdat any

$_ZN21GrProcessorKeyBuilder7addBitsEjjPKc = comdat any

$_ZN21GrProcessorKeyBuilder13appendCommentEPKc = comdat any

$_ZNK19GrGeometryProcessor15getAttributeKeyEP21GrProcessorKeyBuilder = comdat any

$_ZNK19GrFragmentProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZN27GrProcessorStringKeyBuilderD0Ev = comdat any

$_ZN27GrProcessorStringKeyBuilder7addBitsEjjPKc = comdat any

$_ZN27GrProcessorStringKeyBuilder13appendCommentEPKc = comdat any

$_ZTV21GrProcessorKeyBuilder = comdat any

$_ZTV27GrProcessorStringKeyBuilder = comdat any

@_ZTV21GrProcessorKeyBuilder = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessorKeyBuilder*)* @_ZN21GrProcessorKeyBuilderD2Ev to i8*), i8* bitcast (void (%class.GrProcessorKeyBuilder*)* @_ZN21GrProcessorKeyBuilderD0Ev to i8*), i8* bitcast (void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)* @_ZN21GrProcessorKeyBuilder7addBitsEjjPKc to i8*), i8* bitcast (void (%class.GrProcessorKeyBuilder*, i8*)* @_ZN21GrProcessorKeyBuilder13appendCommentEPKc to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [7 x i8] c"numFPs\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"numColorFPs\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"writeSwizzle\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"requestedFeatures\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"snapVertices\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"isPoints\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"geomProcClassID\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"numVertexAttributes\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"numInstanceAttributes\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"unusedAttr\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"attrType\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"attrGpuType\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"ppNumSamplers\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.15 = private unnamed_addr constant [49 x i8] c"../../third_party/skia/src/gpu/GrProgramDesc.cpp\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"Unexpected texture type\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"fpClassID\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"fpTransforms\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"fpSamplerKey\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"fpNumChildren\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"Null\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"xpClassID\00", align 1
@_ZTV27GrProcessorStringKeyBuilder = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessorStringKeyBuilder*)* @_ZN27GrProcessorStringKeyBuilderD2Ev to i8*), i8* bitcast (void (%class.GrProcessorStringKeyBuilder*)* @_ZN27GrProcessorStringKeyBuilderD0Ev to i8*), i8* bitcast (void (%class.GrProcessorStringKeyBuilder*, i32, i32, i8*)* @_ZN27GrProcessorStringKeyBuilder7addBitsEjjPKc to i8*), i8* bitcast (void (%class.GrProcessorStringKeyBuilder*, i8*)* @_ZN27GrProcessorStringKeyBuilder13appendCommentEPKc to i8*)] }, comdat, align 8
@.str.23 = private unnamed_addr constant [8 x i8] c"%s: %u\0A\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@switch.table._ZL10gen_fp_keyRK19GrFragmentProcessorRK6GrCapsP21GrProcessorKeyBuilder = private unnamed_addr constant [3 x i32] [i32 0, i32 2, i32 1], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrProgramDesc5BuildEPS_RK13GrProgramInfoRK6GrCaps(%class.GrProgramDesc*, %class.GrProgramInfo* nocapture readonly dereferenceable(128), %class.GrCaps* dereferenceable(232)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.GrProcessorKeyBuilder, align 8
  tail call void @_ZN13GrProgramDesc5resetEv(%class.GrProgramDesc* %0)
  %5 = bitcast %class.GrProcessorKeyBuilder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %4, i64 0, i32 0
  %7 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %4, i64 0, i32 1
  %8 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %4, i64 0, i32 2
  %9 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %4, i64 0, i32 3
  %10 = icmp eq %class.GrProgramDesc* %0, null
  %11 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %0, i64 0, i32 0, i32 0, i32 0, i64 136
  %12 = bitcast i8* %11 to %class.SkTArray*
  %13 = select i1 %10, %class.SkTArray* null, %class.SkTArray* %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21GrProcessorKeyBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store %class.SkTArray* %13, %class.SkTArray** %7, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  call fastcc void @_ZL7gen_keyP21GrProcessorKeyBuilderRK13GrProgramInfoRK6GrCaps(%class.GrProcessorKeyBuilder* nonnull %4, %class.GrProgramInfo* dereferenceable(128) %1, %class.GrCaps* dereferenceable(232) %2)
  %14 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %0, i64 0, i32 0, i32 0, i32 0, i64 144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = lshr i64 %16, 1
  %18 = shl i64 %17, 2
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %0, i64 0, i32 1
  store i32 %19, i32* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrProgramDesc5resetEv(%class.GrProgramDesc*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.GrProgramDesc, align 8
  %3 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %2, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %3) #7
  %4 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %2, i64 0, i32 0, i32 0, i32 0, i64 136
  %5 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %2, i64 0, i32 0, i32 0, i32 0, i64 144
  %6 = bitcast i8* %5 to i64*
  %7 = bitcast i8* %4 to i8**
  store i8* %3, i8** %7, align 8
  store i64 283467841536, i64* %6, align 8
  %8 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %2, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %0, i64 0, i32 0, i32 0, i32 0, i64 136
  %10 = icmp eq %class.GrProgramDesc* %2, %0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = load i32, i32* %8, align 8
  %13 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 8
  br label %51

14:                                               ; preds = %1
  %15 = bitcast i8* %9 to %class.SkTArray*
  %16 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %0, i64 0, i32 0, i32 0, i32 0, i64 144
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, -4294967295
  store i64 %19, i64* %17, align 8
  call void @_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %15, i32 0, i32 0) #7
  %20 = load i64, i64* %6, align 8
  %21 = and i64 %20, 4294967294
  %22 = load i64, i64* %17, align 8
  %23 = and i64 %22, -4294967295
  %24 = or i64 %23, %21
  store i64 %24, i64* %17, align 8
  %25 = bitcast i8* %4 to i32**
  %26 = load i32*, i32** %25, align 8
  %27 = icmp eq i64 %21, 0
  br i1 %27, label %43, label %28

28:                                               ; preds = %14
  %29 = bitcast i8* %9 to i32**
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %36, %30 ]
  %32 = load i32*, i32** %29, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 %31
  %34 = getelementptr inbounds i32, i32* %26, i64 %31
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %33, align 4
  %36 = add nuw nsw i64 %31, 1
  %37 = load i64, i64* %17, align 8
  %38 = lshr i64 %37, 1
  %39 = and i64 %38, 2147483647
  %40 = icmp ult i64 %36, %39
  br i1 %40, label %30, label %41

41:                                               ; preds = %30
  %42 = load i64, i64* %6, align 8
  br label %43

43:                                               ; preds = %41, %14
  %44 = phi i64 [ %42, %41 ], [ %20, %14 ]
  %45 = load i32, i32* %8, align 8
  %46 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %0, i64 0, i32 1
  store i32 %45, i32* %46, align 8
  %47 = and i64 %44, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = load i8*, i8** %7, align 8
  call void @_Z7sk_freePv(i8* %50) #7
  br label %51

51:                                               ; preds = %11, %43, %49
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %3) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL7gen_keyP21GrProcessorKeyBuilderRK13GrProgramInfoRK6GrCaps(%class.GrProcessorKeyBuilder*, %class.GrProgramInfo* nocapture readonly dereferenceable(128), %class.GrCaps* dereferenceable(232)) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 7
  %6 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %5, align 8
  %7 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %6, i64 0, i32 0
  %8 = bitcast %class.GrGeometryProcessor* %6 to i8* (%class.GrProcessor*)***
  %9 = load i8* (%class.GrProcessor*)**, i8* (%class.GrProcessor*)*** %8, align 8
  %10 = getelementptr inbounds i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %9, i64 2
  %11 = load i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %10, align 8
  %12 = tail call i8* %11(%class.GrProcessor* %7) #7
  %13 = bitcast %class.GrProcessorKeyBuilder* %0 to void (%class.GrProcessorKeyBuilder*, i8*)***
  %14 = load void (%class.GrProcessorKeyBuilder*, i8*)**, void (%class.GrProcessorKeyBuilder*, i8*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %14, i64 3
  %16 = load void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %15, align 8
  tail call void %16(%class.GrProcessorKeyBuilder* %0, i8* %12) #7
  %17 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %6, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = bitcast %class.GrProcessorKeyBuilder* %0 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %20 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %20, i64 2
  %22 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %21, align 8
  tail call void %22(%class.GrProcessorKeyBuilder* %0, i32 8, i32 %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #7
  %23 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %2, i64 0, i32 2, i32 0
  %24 = load %class.GrShaderCaps*, %class.GrShaderCaps** %23, align 8
  %25 = bitcast %class.GrGeometryProcessor* %6 to void (%class.GrGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)***
  %26 = load void (%class.GrGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)**, void (%class.GrGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)*, void (%class.GrGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)** %26, i64 3
  %28 = load void (%class.GrGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)*, void (%class.GrGeometryProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)** %27, align 8
  tail call void %28(%class.GrGeometryProcessor* %6, %class.GrShaderCaps* dereferenceable(144) %24, %class.GrProcessorKeyBuilder* %0) #7
  tail call void @_ZNK19GrGeometryProcessor15getAttributeKeyEP21GrProcessorKeyBuilder(%class.GrGeometryProcessor* %6, %class.GrProcessorKeyBuilder* %0) #7
  %29 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %6, i64 0, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %32 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %31, i64 2
  %33 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %32, align 8
  tail call void %33(%class.GrProcessorKeyBuilder* %0, i32 32, i32 %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #7
  %34 = icmp sgt i32 %30, 0
  br i1 %34, label %35, label %67

35:                                               ; preds = %3
  %36 = bitcast %class.GrCaps* %2 to void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)***
  br label %37

37:                                               ; preds = %45, %35
  %38 = phi i32 [ 0, %35 ], [ %65, %45 ]
  %39 = tail call dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor* %6, i32 %38) #7
  %40 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %39, i64 0, i32 2, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp ult i32 %42, 3
  br i1 %43, label %45, label %44

44:                                               ; preds = %37
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i64 0, i64 0), i32 39, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #8
  unreachable

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %39, i64 0, i32 2
  %47 = sext i32 %42 to i64
  %48 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZL10gen_fp_keyRK19GrFragmentProcessorRK6GrCapsP21GrProcessorKeyBuilder, i64 0, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %39, i64 0, i32 3, i32 0
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = shl nuw nsw i32 %52, 4
  %54 = or i32 %53, %49
  %55 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %56 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %55, i64 2
  %57 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %56, align 8
  tail call void %57(%class.GrProcessorKeyBuilder* %0, i32 32, i32 %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)) #7
  %58 = bitcast %"class.GrGeometryProcessor::TextureSampler"* %39 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %39, i64 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = load void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)**, void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)*** %36, align 8
  %63 = getelementptr inbounds void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)*, void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)** %62, i64 16
  %64 = load void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)*, void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)** %63, align 8
  tail call void %64(%class.GrCaps* %2, %class.GrProcessorKeyBuilder* %0, i64 %59, i32 %61, %class.GrBackendFormat* dereferenceable(72) %46) #7
  %65 = add nuw nsw i32 %38, 1
  %66 = icmp eq i32 %65, %30
  br i1 %66, label %67, label %37

67:                                               ; preds = %45, %3
  %68 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 5
  %69 = load %class.GrPipeline*, %class.GrPipeline** %68, align 8
  %70 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %69, i64 0, i32 8, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %73 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %72, i64 2
  %74 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %73, align 8
  tail call void %74(%class.GrProcessorKeyBuilder* %0, i32 2, i32 %71, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #7
  %75 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %69, i64 0, i32 9
  %76 = load i32, i32* %75, align 8
  %77 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %78 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %77, i64 2
  %79 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %78, align 8
  tail call void %79(%class.GrProcessorKeyBuilder* %0, i32 1, i32 %76, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)) #7
  %80 = load i32, i32* %70, align 8
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %67
  %83 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %69, i64 0, i32 8, i32 1
  br label %171

84:                                               ; preds = %171, %67
  %85 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %69, i64 0, i32 7, i32 0
  %86 = load %class.GrXferProcessor*, %class.GrXferProcessor** %85, align 8
  %87 = icmp eq %class.GrXferProcessor* %86, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = tail call dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() #7
  br label %90

90:                                               ; preds = %84, %88
  %91 = phi %class.GrXferProcessor* [ %89, %88 ], [ %86, %84 ]
  %92 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %91, i64 0, i32 0
  %93 = bitcast %class.GrXferProcessor* %91 to i8* (%class.GrProcessor*)***
  %94 = load i8* (%class.GrProcessor*)**, i8* (%class.GrProcessor*)*** %93, align 8
  %95 = getelementptr inbounds i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %94, i64 2
  %96 = load i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %95, align 8
  %97 = tail call i8* %96(%class.GrProcessor* %92) #7
  %98 = load void (%class.GrProcessorKeyBuilder*, i8*)**, void (%class.GrProcessorKeyBuilder*, i8*)*** %13, align 8
  %99 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %98, i64 3
  %100 = load void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %99, align 8
  tail call void %100(%class.GrProcessorKeyBuilder* %0, i8* %97) #7
  %101 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %91, i64 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %104 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %103, i64 2
  %105 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %104, align 8
  tail call void %105(%class.GrProcessorKeyBuilder* %0, i32 8, i32 %102, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #7
  %106 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #7
  store i32 -1431655766, i32* %4, align 4
  %107 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %69, i64 0, i32 0, i32 0, i32 0
  %108 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %107, align 8
  %109 = icmp eq %class.GrSurfaceProxy* %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %90
  %111 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %69, i64 0, i32 0, i32 1
  %112 = load i32, i32* %111, align 8
  store i32 %112, i32* %4, align 4
  br label %113

113:                                              ; preds = %90, %110
  %114 = phi i32* [ %4, %110 ], [ null, %90 ]
  %115 = load %class.GrShaderCaps*, %class.GrShaderCaps** %23, align 8
  %116 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %69, i64 0, i32 2
  %117 = load i32, i32* %116, align 8
  call void @_ZNK15GrXferProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilderPK15GrSurfaceOrigin15GrDstSampleType(%class.GrXferProcessor* %91, %class.GrShaderCaps* dereferenceable(144) %115, %class.GrProcessorKeyBuilder* %0, i32* %114, i32 %117) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #7
  %118 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %69, i64 0, i32 10, i32 0
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %122 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %121, i64 2
  %123 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %122, align 8
  call void %123(%class.GrProcessorKeyBuilder* %0, i32 16, i32 %120, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #7
  %124 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = call zeroext i8 @_ZN27GrGLSLFragmentShaderBuilder19KeyForSurfaceOriginE15GrSurfaceOrigin(i32 %125) #7
  %127 = zext i8 %126 to i32
  %128 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %129 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %128, i64 2
  %130 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %129, align 8
  call void %130(%class.GrProcessorKeyBuilder* %0, i32 2, i32 %127, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #7
  %131 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 8
  %132 = load i32, i32* %131, align 8
  %133 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %134 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %133, i64 2
  %135 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %134, align 8
  call void %135(%class.GrProcessorKeyBuilder* %0, i32 1, i32 %132, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #7
  %136 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %69, i64 0, i32 5
  %137 = load i8, i8* %136, align 8
  %138 = lshr i8 %137, 3
  %139 = and i8 %138, 1
  %140 = zext i8 %139 to i32
  %141 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %142 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %141, i64 2
  %143 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %142, align 8
  call void %143(%class.GrProcessorKeyBuilder* %0, i32 1, i32 %140, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #7
  %144 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 9
  %145 = load i8, i8* %144, align 4
  %146 = icmp eq i8 %145, 2
  %147 = zext i1 %146 to i32
  %148 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %149 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %148, i64 2
  %150 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %149, align 8
  call void %150(%class.GrProcessorKeyBuilder* %0, i32 1, i32 %147, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #7
  %151 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %0, i64 0, i32 3
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %170, label %154

154:                                              ; preds = %113
  %155 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %0, i64 0, i32 1
  %156 = load %class.SkTArray*, %class.SkTArray** %155, align 8
  %157 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %0, i64 0, i32 2
  call void @_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %156, i32 1, i32 1) #7
  %158 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %156, i64 0, i32 0
  %159 = load i32*, i32** %158, align 8
  %160 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %156, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = lshr i64 %161, 1
  %163 = and i64 %162, 2147483647
  %164 = getelementptr inbounds i32, i32* %159, i64 %163
  %165 = add i64 %161, 2
  %166 = and i64 %165, 4294967294
  %167 = and i64 %161, -4294967295
  %168 = or i64 %166, %167
  store i64 %168, i64* %160, align 8
  %169 = load i32, i32* %157, align 4
  store i32 %169, i32* %164, align 4
  store i32 0, i32* %157, align 8
  store i32 0, i32* %151, align 4
  br label %170

170:                                              ; preds = %113, %154
  ret void

171:                                              ; preds = %82, %171
  %172 = phi i64 [ 0, %82 ], [ %176, %171 ]
  %173 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %83, align 8
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %173, i64 %172, i32 0, i32 0, i32 0
  %175 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %174, align 8
  tail call fastcc void @_ZL10gen_fp_keyRK19GrFragmentProcessorRK6GrCapsP21GrProcessorKeyBuilder(%class.GrFragmentProcessor* dereferenceable(64) %175, %class.GrCaps* dereferenceable(232) %2, %class.GrProcessorKeyBuilder* %0)
  %176 = add nuw nsw i64 %172, 1
  %177 = load i32, i32* %70, align 8
  %178 = sext i32 %177 to i64
  %179 = icmp slt i64 %176, %178
  br i1 %179, label %171, label %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrProcessorKeyBuilderD2Ev(%class.GrProcessorKeyBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21GrProcessorKeyBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrProgramDesc8DescribeERK13GrProgramInfoRK6GrCaps(%class.SkString* noalias sret, %class.GrProgramInfo* nocapture readonly dereferenceable(128), %class.GrCaps* dereferenceable(232)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.GrProgramDesc, align 8
  %5 = alloca %class.GrProcessorStringKeyBuilder, align 8
  %6 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %4, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 160, i1 false)
  %7 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %4, i64 0, i32 0, i32 0, i32 0, i64 136
  %8 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %4, i64 0, i32 0, i32 0, i32 0, i64 144
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %7 to i8**
  store i8* %6, i8** %10, align 8
  store i64 283467841536, i64* %9, align 8
  %11 = getelementptr inbounds %class.GrProgramDesc, %class.GrProgramDesc* %4, i64 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = bitcast %class.GrProcessorStringKeyBuilder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #7
  %13 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %5, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %5, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %5, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %5, i64 0, i32 0, i32 3
  %17 = bitcast %class.SkTArray** %14 to i8**
  %18 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %5, i64 0, i32 1
  %19 = bitcast %class.SkString* %18 to i64*
  store i64 -6148914691236517206, i64* %19, align 8
  store i8* %7, i8** %17, align 8
  store i32 0, i32* %15, align 8
  store i32 0, i32* %16, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27GrProcessorStringKeyBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %20 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %5, i64 0, i32 1
  call void @_ZN8SkStringC1Ev(%class.SkString* %20) #7
  %21 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %5, i64 0, i32 0
  call fastcc void @_ZL7gen_keyP21GrProcessorKeyBuilderRK13GrProgramInfoRK6GrCaps(%class.GrProcessorKeyBuilder* nonnull %21, %class.GrProgramInfo* dereferenceable(128) %1, %class.GrCaps* dereferenceable(232) %2)
  %22 = load i32, i32* %16, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %3
  %25 = load %class.SkTArray*, %class.SkTArray** %14, align 8
  call void @_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %25, i32 1, i32 1) #7
  %26 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %25, i64 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %25, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 1
  %31 = and i64 %30, 2147483647
  %32 = getelementptr inbounds i32, i32* %27, i64 %31
  %33 = add i64 %29, 2
  %34 = and i64 %33, 4294967294
  %35 = and i64 %29, -4294967295
  %36 = or i64 %34, %35
  store i64 %36, i64* %28, align 8
  %37 = load i32, i32* %15, align 8
  store i32 %37, i32* %32, align 4
  store i32 0, i32* %15, align 8
  store i32 0, i32* %16, align 4
  br label %38

38:                                               ; preds = %3, %24
  call void @_ZN8SkStringC1ERKS_(%class.SkString* %0, %class.SkString* dereferenceable(8) %20) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27GrProcessorStringKeyBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  call void @_ZN8SkStringD1Ev(%class.SkString* %20) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  %39 = load i64, i64* %9, align 8
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = load i8*, i8** %10, align 8
  call void @_Z7sk_freePv(i8* %43) #7
  br label %44

44:                                               ; preds = %38, %42
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrProcessorStringKeyBuilderD2Ev(%class.GrProcessorStringKeyBuilder*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27GrProcessorStringKeyBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21GrProcessorKeyBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 4) #7
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 1
  %47 = and i64 %46, 8589934588
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #7
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #7
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrProcessorKeyBuilderD0Ev(%class.GrProcessorKeyBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrProcessorKeyBuilder* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrProcessorKeyBuilder7addBitsEjjPKc(%class.GrProcessorKeyBuilder*, i32, i32, i8*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %2, %6
  %8 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = or i32 %9, %7
  store i32 %10, i32* %8, align 8
  %11 = add i32 %6, %1
  store i32 %11, i32* %5, align 4
  %12 = icmp ugt i32 %11, 31
  br i1 %12, label %13, label %34

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.GrProcessorKeyBuilder, %class.GrProcessorKeyBuilder* %0, i64 0, i32 1
  %15 = load %class.SkTArray*, %class.SkTArray** %14, align 8
  tail call void @_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %15, i32 1, i32 1) #7
  %16 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = getelementptr inbounds i32, i32* %17, i64 %21
  %23 = add i64 %19, 2
  %24 = and i64 %23, 4294967294
  %25 = and i64 %19, -4294967295
  %26 = or i64 %24, %25
  store i64 %26, i64* %18, align 8
  %27 = load i32, i32* %8, align 4
  store i32 %27, i32* %22, align 4
  %28 = load i32, i32* %5, align 4
  %29 = add i32 %28, -32
  %30 = icmp eq i32 %29, 0
  %31 = sub i32 %1, %29
  %32 = lshr i32 %2, %31
  %33 = select i1 %30, i32 0, i32 %32
  store i32 %33, i32* %8, align 8
  store i32 %29, i32* %5, align 4
  br label %34

34:                                               ; preds = %13, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrProcessorKeyBuilder13appendCommentEPKc(%class.GrProcessorKeyBuilder*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL10gen_fp_keyRK19GrFragmentProcessorRK6GrCapsP21GrProcessorKeyBuilder(%class.GrFragmentProcessor* dereferenceable(64), %class.GrCaps* dereferenceable(232), %class.GrProcessorKeyBuilder*) unnamed_addr #0 {
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0
  %5 = bitcast %class.GrFragmentProcessor* %0 to i8* (%class.GrProcessor*)***
  %6 = load i8* (%class.GrProcessor*)**, i8* (%class.GrProcessor*)*** %5, align 8
  %7 = getelementptr inbounds i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %6, i64 2
  %8 = load i8* (%class.GrProcessor*)*, i8* (%class.GrProcessor*)** %7, align 8
  %9 = tail call i8* %8(%class.GrProcessor* %4) #7
  %10 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i8*)***
  %11 = load void (%class.GrProcessorKeyBuilder*, i8*)**, void (%class.GrProcessorKeyBuilder*, i8*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %11, i64 3
  %13 = load void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %12, align 8
  tail call void %13(%class.GrProcessorKeyBuilder* %2, i8* %9) #7
  %14 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %17 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %17, i64 2
  %19 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %18, align 8
  tail call void %19(%class.GrProcessorKeyBuilder* %2, i32 8, i32 %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)) #7
  %20 = tail call i32 @_ZN19GrGeometryProcessor25ComputeCoordTransformsKeyERK19GrFragmentProcessor(%class.GrFragmentProcessor* dereferenceable(64) %0) #7
  %21 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %16, align 8
  %22 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %21, i64 2
  %23 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %22, align 8
  tail call void %23(%class.GrProcessorKeyBuilder* %2, i32 4, i32 %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #7
  %24 = tail call %class.GrTextureEffect* @_ZNK19GrFragmentProcessor15asTextureEffectEv(%class.GrFragmentProcessor* %0) #7
  %25 = icmp eq %class.GrTextureEffect* %24, null
  br i1 %25, label %56, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %24, i64 0, i32 2, i32 0, i32 0
  %28 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %27, align 8
  %29 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %28, i64 0, i32 5, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, -1
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %34, label %33

33:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i64 0, i64 0), i32 39, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #8
  unreachable

34:                                               ; preds = %26
  %35 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %24, i64 0, i32 2, i32 2, i32 0
  %36 = load i16, i16* %35, align 2, !noalias !2
  %37 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %28, i64 0, i32 5
  %38 = sext i32 %31 to i64
  %39 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZL10gen_fp_keyRK19GrFragmentProcessorRK6GrCapsP21GrProcessorKeyBuilder, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = zext i16 %36 to i32
  %42 = shl nuw nsw i32 %41, 4
  %43 = or i32 %40, %42
  %44 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %16, align 8
  %45 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %44, i64 2
  %46 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %45, align 8
  tail call void %46(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %43, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0)) #7
  %47 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %24, i64 0, i32 3
  %48 = bitcast %class.GrSamplerState* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %24, i64 0, i32 3, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = bitcast %class.GrCaps* %1 to void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)***
  %53 = load void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)**, void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)*, void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)** %53, i64 16
  %55 = load void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)*, void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)** %54, align 8
  tail call void %55(%class.GrCaps* %1, %class.GrProcessorKeyBuilder* %2, i64 %49, i32 %51, %class.GrBackendFormat* dereferenceable(72) %37) #7
  br label %56

56:                                               ; preds = %3, %34
  %57 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %1, i64 0, i32 2, i32 0
  %58 = load %class.GrShaderCaps*, %class.GrShaderCaps** %57, align 8
  tail call void @_ZNK19GrFragmentProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrFragmentProcessor* %0, %class.GrShaderCaps* dereferenceable(144) %58, %class.GrProcessorKeyBuilder* %2)
  %59 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = lshr i64 %61, 1
  %63 = trunc i64 %62 to i32
  %64 = and i32 %63, 2147483647
  %65 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %16, align 8
  %66 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %65, i64 2
  %67 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %66, align 8
  tail call void %67(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)) #7
  %68 = load i64, i64* %60, align 8
  %69 = and i64 %68, 4294967294
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %56
  %72 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %73 = bitcast i8* %72 to %"class.std::__1::unique_ptr.50"**
  br label %75

74:                                               ; preds = %89, %56
  ret void

75:                                               ; preds = %71, %89
  %76 = phi i64 [ 0, %71 ], [ %90, %89 ]
  %77 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %73, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %77, i64 %76, i32 0, i32 0, i32 0
  %79 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %78, align 8
  %80 = icmp eq %class.GrFragmentProcessor* %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %75
  tail call fastcc void @_ZL10gen_fp_keyRK19GrFragmentProcessorRK6GrCapsP21GrProcessorKeyBuilder(%class.GrFragmentProcessor* nonnull dereferenceable(64) %79, %class.GrCaps* dereferenceable(232) %1, %class.GrProcessorKeyBuilder* %2)
  br label %89

82:                                               ; preds = %75
  %83 = load void (%class.GrProcessorKeyBuilder*, i8*)**, void (%class.GrProcessorKeyBuilder*, i8*)*** %10, align 8
  %84 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %83, i64 3
  %85 = load void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %84, align 8
  tail call void %85(%class.GrProcessorKeyBuilder* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)) #7
  %86 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %16, align 8
  %87 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %86, i64 2
  %88 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %87, align 8
  tail call void %88(%class.GrProcessorKeyBuilder* %2, i32 8, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)) #7
  br label %89

89:                                               ; preds = %82, %81
  %90 = add nuw nsw i64 %76, 1
  %91 = load i64, i64* %60, align 8
  %92 = lshr i64 %91, 1
  %93 = and i64 %92, 2147483647
  %94 = icmp ult i64 %90, %93
  br i1 %94, label %75, label %74
}

declare zeroext i8 @_ZN27GrGLSLFragmentShaderBuilder19KeyForSurfaceOriginE15GrSurfaceOrigin(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK19GrGeometryProcessor15getAttributeKeyEP21GrProcessorKeyBuilder(%class.GrGeometryProcessor*, %class.GrProcessorKeyBuilder*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 3, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = bitcast %class.GrProcessorKeyBuilder* %1 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %6 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %6, i64 2
  %8 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %7, align 8
  tail call void %8(%class.GrProcessorKeyBuilder* %1, i32 32, i32 %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #7
  %9 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 3, i32 0
  %10 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %9, align 8
  %11 = load i32, i32* %3, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %47

13:                                               ; preds = %2
  %14 = zext i32 %11 to i64
  %15 = bitcast %class.GrProcessorKeyBuilder* %1 to void (%class.GrProcessorKeyBuilder*, i8*)***
  br label %16

16:                                               ; preds = %34, %13
  %17 = phi i64 [ 0, %13 ], [ %45, %34 ]
  %18 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %10, i64 %17, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %10, i64 %17, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %16
  %25 = phi i8* [ %23, %21 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), %16 ]
  %26 = load void (%class.GrProcessorKeyBuilder*, i8*)**, void (%class.GrProcessorKeyBuilder*, i8*)*** %15, align 8
  %27 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %26, i64 3
  %28 = load void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %27, align 8
  tail call void %28(%class.GrProcessorKeyBuilder* %1, i8* %25) #7
  %29 = load i32, i32* %18, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %10, i64 %17, i32 1
  %33 = load i32, i32* %32, align 8
  br label %34

34:                                               ; preds = %31, %24
  %35 = phi i32 [ %33, %31 ], [ 255, %24 ]
  %36 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %5, align 8
  %37 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %36, i64 2
  %38 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %37, align 8
  tail call void %38(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0)) #7
  %39 = load i32, i32* %18, align 4
  %40 = icmp eq i32 %39, 0
  %41 = select i1 %40, i32 255, i32 %39
  %42 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %5, align 8
  %43 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %42, i64 2
  %44 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %43, align 8
  tail call void %44(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)) #7
  %45 = add nuw nsw i64 %17, 1
  %46 = icmp eq i64 %45, %14
  br i1 %46, label %47, label %16

47:                                               ; preds = %34, %2
  %48 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 4, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %5, align 8
  %51 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %50, i64 2
  %52 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %51, align 8
  tail call void %52(%class.GrProcessorKeyBuilder* %1, i32 32, i32 %49, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0)) #7
  %53 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 4, i32 0
  %54 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %53, align 8
  %55 = load i32, i32* %48, align 8
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %47
  %58 = zext i32 %55 to i64
  %59 = bitcast %class.GrProcessorKeyBuilder* %1 to void (%class.GrProcessorKeyBuilder*, i8*)***
  br label %60

60:                                               ; preds = %78, %57
  %61 = phi i64 [ 0, %57 ], [ %89, %78 ]
  %62 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %54, i64 %61, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %54, i64 %61, i32 0
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %60
  %69 = phi i8* [ %67, %65 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), %60 ]
  %70 = load void (%class.GrProcessorKeyBuilder*, i8*)**, void (%class.GrProcessorKeyBuilder*, i8*)*** %59, align 8
  %71 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %70, i64 3
  %72 = load void (%class.GrProcessorKeyBuilder*, i8*)*, void (%class.GrProcessorKeyBuilder*, i8*)** %71, align 8
  tail call void %72(%class.GrProcessorKeyBuilder* %1, i8* %69) #7
  %73 = load i32, i32* %62, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %54, i64 %61, i32 1
  %77 = load i32, i32* %76, align 8
  br label %78

78:                                               ; preds = %75, %68
  %79 = phi i32 [ %77, %75 ], [ 255, %68 ]
  %80 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %5, align 8
  %81 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %80, i64 2
  %82 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %81, align 8
  tail call void %82(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %79, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0)) #7
  %83 = load i32, i32* %62, align 4
  %84 = icmp eq i32 %83, 0
  %85 = select i1 %84, i32 255, i32 %83
  %86 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %5, align 8
  %87 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %86, i64 2
  %88 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %87, align 8
  tail call void %88(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %85, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)) #7
  %89 = add nuw nsw i64 %61, 1
  %90 = icmp eq i64 %89, %58
  br i1 %90, label %91, label %60

91:                                               ; preds = %78, %47
  ret void
}

declare dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor*, i32) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

declare i32 @_ZN19GrGeometryProcessor25ComputeCoordTransformsKeyERK19GrFragmentProcessor(%class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #3

declare %class.GrTextureEffect* @_ZNK19GrFragmentProcessor15asTextureEffectEv(%class.GrFragmentProcessor*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK19GrFragmentProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrFragmentProcessor*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %class.GrFragmentProcessor* %0 to void (%class.GrFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)***
  %5 = load void (%class.GrFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)**, void (%class.GrFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.GrFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)*, void (%class.GrFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)** %5, i64 6
  %7 = load void (%class.GrFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)*, void (%class.GrFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)** %6, align 8
  tail call void %7(%class.GrFragmentProcessor* %0, %class.GrShaderCaps* dereferenceable(144) %1, %class.GrProcessorKeyBuilder* %2) #7
  %8 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr.50"**
  %10 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.50"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = and i64 %16, 2147483647
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %10, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %27, %3, %12
  ret void

21:                                               ; preds = %12, %27
  %22 = phi %"class.std::__1::unique_ptr.50"* [ %28, %27 ], [ %10, %12 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %23, align 8
  %25 = icmp eq %class.GrFragmentProcessor* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  tail call void @_ZNK19GrFragmentProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrFragmentProcessor* nonnull %24, %class.GrShaderCaps* dereferenceable(144) %1, %class.GrProcessorKeyBuilder* %2)
  br label %27

27:                                               ; preds = %21, %26
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %22, i64 1
  %29 = icmp eq %"class.std::__1::unique_ptr.50"* %28, %18
  br i1 %29, label %20, label %21
}

declare void @_ZNK15GrXferProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilderPK15GrSurfaceOrigin15GrDstSampleType(%class.GrXferProcessor*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*, i32*, i32) local_unnamed_addr #3

declare dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() local_unnamed_addr #3

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrProcessorStringKeyBuilderD0Ev(%class.GrProcessorStringKeyBuilder*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27GrProcessorStringKeyBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #7
  %4 = bitcast %class.GrProcessorStringKeyBuilder* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrProcessorStringKeyBuilder7addBitsEjjPKc(%class.GrProcessorStringKeyBuilder*, i32, i32, i8*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %2, %6
  %8 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %0, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = or i32 %9, %7
  store i32 %10, i32* %8, align 8
  %11 = add i32 %6, %1
  store i32 %11, i32* %5, align 4
  %12 = icmp ugt i32 %11, 31
  br i1 %12, label %13, label %34

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %0, i64 0, i32 0, i32 1
  %15 = load %class.SkTArray*, %class.SkTArray** %14, align 8
  tail call void @_ZN8SkTArrayIjLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %15, i32 1, i32 1) #7
  %16 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = getelementptr inbounds i32, i32* %17, i64 %21
  %23 = add i64 %19, 2
  %24 = and i64 %23, 4294967294
  %25 = and i64 %19, -4294967295
  %26 = or i64 %24, %25
  store i64 %26, i64* %18, align 8
  %27 = load i32, i32* %8, align 4
  store i32 %27, i32* %22, align 4
  %28 = load i32, i32* %5, align 4
  %29 = add i32 %28, -32
  %30 = icmp eq i32 %29, 0
  %31 = sub i32 %1, %29
  %32 = lshr i32 %2, %31
  %33 = select i1 %30, i32 0, i32 %32
  store i32 %33, i32* %8, align 8
  store i32 %29, i32* %5, align 4
  br label %34

34:                                               ; preds = %4, %13
  %35 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %0, i64 0, i32 1
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i8* %3, i32 %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrProcessorStringKeyBuilder13appendCommentEPKc(%class.GrProcessorStringKeyBuilder*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrProcessorStringKeyBuilder, %class.GrProcessorStringKeyBuilder* %0, i64 0, i32 1
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i8* %1) #7
  ret void
}

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #3

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!4 = distinct !{!4, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
