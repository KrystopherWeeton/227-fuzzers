; ModuleID = '../../v8/src/strings/unicode-decoder.cc'
source_filename = "../../v8/src/strings/unicode-decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Utf8Decoder" = type { i8, i32, i32 }
%"class.v8::internal::Vector" = type { i8*, i64 }

$_ZN2v88internal11Utf8Decoder6DecodeIhEEvPT_RKNS0_6VectorIKhEE = comdat any

$_ZN2v88internal11Utf8Decoder6DecodeItEEvPT_RKNS0_6VectorIKhEE = comdat any

$_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m = comdat any

@_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE11transitions = internal unnamed_addr constant [256 x i8] calign 16
@_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE6states = internal unnamed_addr constant <{ [100 x i8], [8 x i8] }> <{ [100 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\0C\00\00\00\18$0<H\00T`\00\0C\0C\0C\00\00\00\00\00\00\00\00\00\18\18\18\00\00\00\00\00\00\00\00\00\18\18\00\00\00\00\00\00\00\00\00\00$$$\00\00\00\00\00\00\00\00\00$\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\00$$", [8 x i8] zeroinitializer }>, align 16

@_ZN2v88internal11Utf8DecoderC1ERKNS0_6VectorIKhEE = hidden unnamed_addr alias void (%"class.v8::internal::Utf8Decoder"*, %"class.v8::internal::Vector"*), void (%"class.v8::internal::Utf8Decoder"*, %"class.v8::internal::Vector"*)* @_ZN2v88internal11Utf8DecoderC2ERKNS0_6VectorIKhEE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11Utf8Decoder6DecodeIhEEvPT_RKNS0_6VectorIKhEE(%"class.v8::internal::Utf8Decoder"*, i8*, %"class.v8::internal::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %2, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Utf8Decoder", %"class.v8::internal::Utf8Decoder"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  switch i64 %9, label %36 [
    i64 1, label %10
    i64 2, label %12
    i64 3, label %16
    i64 4, label %17
    i64 5, label %21
    i64 6, label %22
    i64 7, label %23
    i64 8, label %24
    i64 9, label %28
    i64 10, label %29
    i64 11, label %30
    i64 12, label %31
    i64 13, label %32
    i64 14, label %33
    i64 15, label %34
    i64 16, label %35
    i64 0, label %37
  ]

10:                                               ; preds = %3
  %11 = load i8, i8* %6, align 1
  store i8 %11, i8* %1, align 1
  br label %37

12:                                               ; preds = %3
  %13 = bitcast i8* %6 to i16*
  %14 = bitcast i8* %1 to i16*
  %15 = load i16, i16* %13, align 1
  store i16 %15, i16* %14, align 1
  br label %37

16:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 3, i1 false) #3
  br label %37

17:                                               ; preds = %3
  %18 = bitcast i8* %6 to i32*
  %19 = bitcast i8* %1 to i32*
  %20 = load i32, i32* %18, align 1
  store i32 %20, i32* %19, align 1
  br label %37

21:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 5, i1 false) #3
  br label %37

22:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 6, i1 false) #3
  br label %37

23:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 7, i1 false) #3
  br label %37

24:                                               ; preds = %3
  %25 = bitcast i8* %6 to i64*
  %26 = bitcast i8* %1 to i64*
  %27 = load i64, i64* %25, align 1
  store i64 %27, i64* %26, align 1
  br label %37

28:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 9, i1 false) #3
  br label %37

29:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 10, i1 false) #3
  br label %37

30:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 11, i1 false) #3
  br label %37

31:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 12, i1 false) #3
  br label %37

32:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 13, i1 false) #3
  br label %37

33:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 14, i1 false) #3
  br label %37

34:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 15, i1 false) #3
  br label %37

35:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 16, i1 false) #3
  br label %37

36:                                               ; preds = %3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %6, i64 %9, i1 false) #3
  br label %37

37:                                               ; preds = %3, %10, %12, %16, %17, %21, %22, %23, %24, %28, %29, %30, %31, %32, %33, %34, %35, %36
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #3
  store i8 12, i8* %4, align 1
  %41 = load i8*, i8** %5, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %2, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = shl i64 %43, 32
  %45 = ashr exact i64 %44, 32
  %46 = getelementptr inbounds i8, i8* %41, i64 %45
  %47 = icmp sgt i64 %45, %39
  br i1 %47, label %48, label %94

48:                                               ; preds = %37
  %49 = getelementptr inbounds i8, i8* %41, i64 %39
  br label %50

50:                                               ; preds = %48, %88
  %51 = phi i8 [ %89, %88 ], [ 12, %48 ]
  %52 = phi i8* [ %92, %88 ], [ %40, %48 ]
  %53 = phi i8* [ %90, %88 ], [ %49, %48 ]
  %54 = phi i32 [ %91, %88 ], [ 0, %48 ]
  %55 = load i8, i8* %53, align 1
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  %57 = icmp sgt i8 %55, -1
  %58 = icmp eq i8 %51, 12
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %62, !prof !2

60:                                               ; preds = %50
  %61 = zext i8 %55 to i32
  br label %82

62:                                               ; preds = %50
  %63 = zext i8 %55 to i64
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE11transitions, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %51 to i32
  %67 = zext i8 %65 to i32
  %68 = add nuw nsw i32 %67, %66
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds [108 x i8], [108 x i8]* bitcast (<{ [100 x i8], [8 x i8] }>* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE6states to [108 x i8]*), i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  store i8 %71, i8* %4, align 1
  %72 = shl i32 %54, 6
  %73 = zext i8 %55 to i32
  %74 = lshr i32 %67, 1
  %75 = lshr i32 127, %74
  %76 = and i32 %75, %73
  %77 = or i32 %76, %72
  switch i8 %71, label %88 [
    i8 12, label %80
    i8 0, label %78
  ]

78:                                               ; preds = %62
  store i8 12, i8* %4, align 1
  %79 = select i1 %58, i8* %56, i8* %53
  br label %82

80:                                               ; preds = %62
  %81 = icmp eq i32 %77, -4
  br i1 %81, label %88, label %82

82:                                               ; preds = %78, %60, %80
  %83 = phi i32 [ %77, %80 ], [ %61, %60 ], [ 65533, %78 ]
  %84 = phi i8* [ %56, %80 ], [ %56, %60 ], [ %79, %78 ]
  %85 = phi i32 [ 0, %80 ], [ %54, %60 ], [ 0, %78 ]
  %86 = trunc i32 %83 to i8
  %87 = getelementptr inbounds i8, i8* %52, i64 1
  store i8 %86, i8* %52, align 1
  br label %88

88:                                               ; preds = %62, %80, %82
  %89 = phi i8 [ 12, %82 ], [ 12, %80 ], [ %71, %62 ]
  %90 = phi i8* [ %84, %82 ], [ %56, %80 ], [ %56, %62 ]
  %91 = phi i32 [ %85, %82 ], [ 0, %80 ], [ %77, %62 ]
  %92 = phi i8* [ %87, %82 ], [ %52, %80 ], [ %52, %62 ]
  %93 = icmp ult i8* %90, %46
  br i1 %93, label %50, label %94

94:                                               ; preds = %88, %37
  %95 = phi i8* [ %40, %37 ], [ %92, %88 ]
  %96 = call i32 @_ZN7unibrow4Utf824ValueOfIncrementalFinishEPN14Utf8DfaDecoder5StateE(i8* nonnull %4) #3
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = trunc i32 %96 to i8
  store i8 %99, i8* %95, align 1
  br label %100

100:                                              ; preds = %94, %98
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN7unibrow4Utf824ValueOfIncrementalFinishEPN14Utf8DfaDecoder5StateE(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal11Utf8Decoder6DecodeItEEvPT_RKNS0_6VectorIKhEE(%"class.v8::internal::Utf8Decoder"*, i16*, %"class.v8::internal::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %2, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Utf8Decoder", %"class.v8::internal::Utf8Decoder"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  tail call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %1, i8* %6, i64 %9)
  %10 = load i32, i32* %7, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i16, i16* %1, i64 %11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #3
  store i8 12, i8* %4, align 1
  %13 = load i8*, i8** %5, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %2, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = shl i64 %15, 32
  %17 = ashr exact i64 %16, 32
  %18 = getelementptr inbounds i8, i8* %13, i64 %17
  %19 = icmp sgt i64 %17, %11
  br i1 %19, label %20, label %79

20:                                               ; preds = %3
  %21 = getelementptr inbounds i8, i8* %13, i64 %11
  br label %22

22:                                               ; preds = %20, %73
  %23 = phi i8 [ %74, %73 ], [ 12, %20 ]
  %24 = phi i16* [ %77, %73 ], [ %12, %20 ]
  %25 = phi i8* [ %75, %73 ], [ %21, %20 ]
  %26 = phi i32 [ %76, %73 ], [ 0, %20 ]
  %27 = load i8, i8* %25, align 1
  %28 = getelementptr inbounds i8, i8* %25, i64 1
  %29 = icmp sgt i8 %27, -1
  %30 = icmp eq i8 %23, 12
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %22
  %33 = zext i8 %27 to i32
  br label %56

34:                                               ; preds = %22
  %35 = zext i8 %27 to i64
  %36 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE11transitions, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %23 to i32
  %39 = zext i8 %37 to i32
  %40 = add nuw nsw i32 %39, %38
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds [108 x i8], [108 x i8]* bitcast (<{ [100 x i8], [8 x i8] }>* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE6states to [108 x i8]*), i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  store i8 %43, i8* %4, align 1
  %44 = shl i32 %26, 6
  %45 = zext i8 %27 to i32
  %46 = lshr i32 %39, 1
  %47 = lshr i32 127, %46
  %48 = and i32 %47, %45
  %49 = or i32 %48, %44
  switch i8 %43, label %73 [
    i8 12, label %52
    i8 0, label %50
  ]

50:                                               ; preds = %34
  store i8 12, i8* %4, align 1
  %51 = select i1 %30, i8* %28, i8* %25
  br label %56

52:                                               ; preds = %34
  %53 = icmp eq i32 %49, -4
  br i1 %53, label %73, label %54

54:                                               ; preds = %52
  %55 = icmp ult i32 %49, 65536
  br i1 %55, label %56, label %62

56:                                               ; preds = %50, %32, %54
  %57 = phi i32 [ 0, %54 ], [ %26, %32 ], [ 0, %50 ]
  %58 = phi i8* [ %28, %54 ], [ %28, %32 ], [ %51, %50 ]
  %59 = phi i32 [ %49, %54 ], [ %33, %32 ], [ 65533, %50 ]
  %60 = trunc i32 %59 to i16
  %61 = getelementptr inbounds i16, i16* %24, i64 1
  store i16 %60, i16* %24, align 2
  br label %73

62:                                               ; preds = %54
  %63 = add i32 %49, 983040
  %64 = lshr i32 %63, 10
  %65 = trunc i32 %64 to i16
  %66 = and i16 %65, 1023
  %67 = or i16 %66, -10240
  %68 = getelementptr inbounds i16, i16* %24, i64 1
  store i16 %67, i16* %24, align 2
  %69 = trunc i32 %49 to i16
  %70 = and i16 %69, 1023
  %71 = or i16 %70, -9216
  %72 = getelementptr inbounds i16, i16* %24, i64 2
  store i16 %71, i16* %68, align 2
  br label %73

73:                                               ; preds = %34, %52, %56, %62
  %74 = phi i8 [ 12, %56 ], [ 12, %62 ], [ 12, %52 ], [ %43, %34 ]
  %75 = phi i8* [ %58, %56 ], [ %28, %62 ], [ %28, %52 ], [ %28, %34 ]
  %76 = phi i32 [ %57, %56 ], [ 0, %62 ], [ 0, %52 ], [ %49, %34 ]
  %77 = phi i16* [ %61, %56 ], [ %72, %62 ], [ %24, %52 ], [ %24, %34 ]
  %78 = icmp ult i8* %75, %18
  br i1 %78, label %22, label %79

79:                                               ; preds = %73, %3
  %80 = phi i16* [ %12, %3 ], [ %77, %73 ]
  %81 = call i32 @_ZN7unibrow4Utf824ValueOfIncrementalFinishEPN14Utf8DfaDecoder5StateE(i8* nonnull %4) #3
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = trunc i32 %81 to i16
  store i16 %84, i16* %80, align 2
  br label %85

85:                                               ; preds = %79, %83
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16*, i8*, i64) local_unnamed_addr #0 comdat {
  %4 = bitcast i16* %0 to i8*
  switch i64 %2, label %533 [
    i64 1, label %530
    i64 2, label %523
    i64 3, label %512
    i64 4, label %497
    i64 5, label %478
    i64 6, label %455
    i64 7, label %428
    i64 8, label %397
    i64 9, label %362
    i64 10, label %323
    i64 11, label %280
    i64 12, label %233
    i64 13, label %182
    i64 14, label %127
    i64 15, label %68
    i64 16, label %5
  ]

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1
  %7 = zext i8 %6 to i16
  store i16 %7, i16* %0, align 2
  %8 = getelementptr inbounds i16, i16* %0, i64 1
  %9 = getelementptr inbounds i8, i8* %1, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i16
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i16, i16* %0, i64 2
  %13 = getelementptr inbounds i8, i8* %1, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  store i16 %15, i16* %12, align 2
  %16 = getelementptr inbounds i16, i16* %0, i64 3
  %17 = getelementptr inbounds i8, i8* %1, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  store i16 %19, i16* %16, align 2
  %20 = getelementptr inbounds i16, i16* %0, i64 4
  %21 = getelementptr inbounds i8, i8* %1, i64 4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  store i16 %23, i16* %20, align 2
  %24 = getelementptr inbounds i16, i16* %0, i64 5
  %25 = getelementptr inbounds i8, i8* %1, i64 5
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  store i16 %27, i16* %24, align 2
  %28 = getelementptr inbounds i16, i16* %0, i64 6
  %29 = getelementptr inbounds i8, i8* %1, i64 6
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i16
  store i16 %31, i16* %28, align 2
  %32 = getelementptr inbounds i16, i16* %0, i64 7
  %33 = getelementptr inbounds i8, i8* %1, i64 7
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  store i16 %35, i16* %32, align 2
  %36 = getelementptr inbounds i16, i16* %0, i64 8
  %37 = getelementptr inbounds i8, i8* %1, i64 8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  store i16 %39, i16* %36, align 2
  %40 = getelementptr inbounds i16, i16* %0, i64 9
  %41 = getelementptr inbounds i8, i8* %1, i64 9
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  store i16 %43, i16* %40, align 2
  %44 = getelementptr inbounds i16, i16* %0, i64 10
  %45 = getelementptr inbounds i8, i8* %1, i64 10
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i16
  store i16 %47, i16* %44, align 2
  %48 = getelementptr inbounds i16, i16* %0, i64 11
  %49 = getelementptr inbounds i8, i8* %1, i64 11
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  store i16 %51, i16* %48, align 2
  %52 = getelementptr inbounds i16, i16* %0, i64 12
  %53 = getelementptr inbounds i8, i8* %1, i64 12
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  store i16 %55, i16* %52, align 2
  %56 = getelementptr inbounds i16, i16* %0, i64 13
  %57 = getelementptr inbounds i8, i8* %1, i64 13
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  store i16 %59, i16* %56, align 2
  %60 = getelementptr inbounds i16, i16* %0, i64 14
  %61 = getelementptr inbounds i8, i8* %1, i64 14
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  store i16 %63, i16* %60, align 2
  %64 = getelementptr inbounds i16, i16* %0, i64 15
  %65 = getelementptr inbounds i8, i8* %1, i64 15
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  store i16 %67, i16* %64, align 2
  br label %615

68:                                               ; preds = %3
  %69 = load i8, i8* %1, align 1
  %70 = zext i8 %69 to i16
  store i16 %70, i16* %0, align 2
  %71 = getelementptr inbounds i16, i16* %0, i64 1
  %72 = getelementptr inbounds i8, i8* %1, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  store i16 %74, i16* %71, align 2
  %75 = getelementptr inbounds i16, i16* %0, i64 2
  %76 = getelementptr inbounds i8, i8* %1, i64 2
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  store i16 %78, i16* %75, align 2
  %79 = getelementptr inbounds i16, i16* %0, i64 3
  %80 = getelementptr inbounds i8, i8* %1, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  store i16 %82, i16* %79, align 2
  %83 = getelementptr inbounds i16, i16* %0, i64 4
  %84 = getelementptr inbounds i8, i8* %1, i64 4
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  store i16 %86, i16* %83, align 2
  %87 = getelementptr inbounds i16, i16* %0, i64 5
  %88 = getelementptr inbounds i8, i8* %1, i64 5
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  store i16 %90, i16* %87, align 2
  %91 = getelementptr inbounds i16, i16* %0, i64 6
  %92 = getelementptr inbounds i8, i8* %1, i64 6
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  store i16 %94, i16* %91, align 2
  %95 = getelementptr inbounds i16, i16* %0, i64 7
  %96 = getelementptr inbounds i8, i8* %1, i64 7
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  store i16 %98, i16* %95, align 2
  %99 = getelementptr inbounds i16, i16* %0, i64 8
  %100 = getelementptr inbounds i8, i8* %1, i64 8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  store i16 %102, i16* %99, align 2
  %103 = getelementptr inbounds i16, i16* %0, i64 9
  %104 = getelementptr inbounds i8, i8* %1, i64 9
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  store i16 %106, i16* %103, align 2
  %107 = getelementptr inbounds i16, i16* %0, i64 10
  %108 = getelementptr inbounds i8, i8* %1, i64 10
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  store i16 %110, i16* %107, align 2
  %111 = getelementptr inbounds i16, i16* %0, i64 11
  %112 = getelementptr inbounds i8, i8* %1, i64 11
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  store i16 %114, i16* %111, align 2
  %115 = getelementptr inbounds i16, i16* %0, i64 12
  %116 = getelementptr inbounds i8, i8* %1, i64 12
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  store i16 %118, i16* %115, align 2
  %119 = getelementptr inbounds i16, i16* %0, i64 13
  %120 = getelementptr inbounds i8, i8* %1, i64 13
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  store i16 %122, i16* %119, align 2
  %123 = getelementptr inbounds i16, i16* %0, i64 14
  %124 = getelementptr inbounds i8, i8* %1, i64 14
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  store i16 %126, i16* %123, align 2
  br label %615

127:                                              ; preds = %3
  %128 = load i8, i8* %1, align 1
  %129 = zext i8 %128 to i16
  store i16 %129, i16* %0, align 2
  %130 = getelementptr inbounds i16, i16* %0, i64 1
  %131 = getelementptr inbounds i8, i8* %1, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i16
  store i16 %133, i16* %130, align 2
  %134 = getelementptr inbounds i16, i16* %0, i64 2
  %135 = getelementptr inbounds i8, i8* %1, i64 2
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i16
  store i16 %137, i16* %134, align 2
  %138 = getelementptr inbounds i16, i16* %0, i64 3
  %139 = getelementptr inbounds i8, i8* %1, i64 3
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i16
  store i16 %141, i16* %138, align 2
  %142 = getelementptr inbounds i16, i16* %0, i64 4
  %143 = getelementptr inbounds i8, i8* %1, i64 4
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  store i16 %145, i16* %142, align 2
  %146 = getelementptr inbounds i16, i16* %0, i64 5
  %147 = getelementptr inbounds i8, i8* %1, i64 5
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i16
  store i16 %149, i16* %146, align 2
  %150 = getelementptr inbounds i16, i16* %0, i64 6
  %151 = getelementptr inbounds i8, i8* %1, i64 6
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i16
  store i16 %153, i16* %150, align 2
  %154 = getelementptr inbounds i16, i16* %0, i64 7
  %155 = getelementptr inbounds i8, i8* %1, i64 7
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i16
  store i16 %157, i16* %154, align 2
  %158 = getelementptr inbounds i16, i16* %0, i64 8
  %159 = getelementptr inbounds i8, i8* %1, i64 8
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i16
  store i16 %161, i16* %158, align 2
  %162 = getelementptr inbounds i16, i16* %0, i64 9
  %163 = getelementptr inbounds i8, i8* %1, i64 9
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i16
  store i16 %165, i16* %162, align 2
  %166 = getelementptr inbounds i16, i16* %0, i64 10
  %167 = getelementptr inbounds i8, i8* %1, i64 10
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i16
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %0, i64 11
  %171 = getelementptr inbounds i8, i8* %1, i64 11
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i16
  store i16 %173, i16* %170, align 2
  %174 = getelementptr inbounds i16, i16* %0, i64 12
  %175 = getelementptr inbounds i8, i8* %1, i64 12
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i16
  store i16 %177, i16* %174, align 2
  %178 = getelementptr inbounds i16, i16* %0, i64 13
  %179 = getelementptr inbounds i8, i8* %1, i64 13
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i16
  store i16 %181, i16* %178, align 2
  br label %615

182:                                              ; preds = %3
  %183 = load i8, i8* %1, align 1
  %184 = zext i8 %183 to i16
  store i16 %184, i16* %0, align 2
  %185 = getelementptr inbounds i16, i16* %0, i64 1
  %186 = getelementptr inbounds i8, i8* %1, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i16
  store i16 %188, i16* %185, align 2
  %189 = getelementptr inbounds i16, i16* %0, i64 2
  %190 = getelementptr inbounds i8, i8* %1, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  store i16 %192, i16* %189, align 2
  %193 = getelementptr inbounds i16, i16* %0, i64 3
  %194 = getelementptr inbounds i8, i8* %1, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i16
  store i16 %196, i16* %193, align 2
  %197 = getelementptr inbounds i16, i16* %0, i64 4
  %198 = getelementptr inbounds i8, i8* %1, i64 4
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  store i16 %200, i16* %197, align 2
  %201 = getelementptr inbounds i16, i16* %0, i64 5
  %202 = getelementptr inbounds i8, i8* %1, i64 5
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i16
  store i16 %204, i16* %201, align 2
  %205 = getelementptr inbounds i16, i16* %0, i64 6
  %206 = getelementptr inbounds i8, i8* %1, i64 6
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i16
  store i16 %208, i16* %205, align 2
  %209 = getelementptr inbounds i16, i16* %0, i64 7
  %210 = getelementptr inbounds i8, i8* %1, i64 7
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  store i16 %212, i16* %209, align 2
  %213 = getelementptr inbounds i16, i16* %0, i64 8
  %214 = getelementptr inbounds i8, i8* %1, i64 8
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i16
  store i16 %216, i16* %213, align 2
  %217 = getelementptr inbounds i16, i16* %0, i64 9
  %218 = getelementptr inbounds i8, i8* %1, i64 9
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i16
  store i16 %220, i16* %217, align 2
  %221 = getelementptr inbounds i16, i16* %0, i64 10
  %222 = getelementptr inbounds i8, i8* %1, i64 10
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i16
  store i16 %224, i16* %221, align 2
  %225 = getelementptr inbounds i16, i16* %0, i64 11
  %226 = getelementptr inbounds i8, i8* %1, i64 11
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i16
  store i16 %228, i16* %225, align 2
  %229 = getelementptr inbounds i16, i16* %0, i64 12
  %230 = getelementptr inbounds i8, i8* %1, i64 12
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i16
  store i16 %232, i16* %229, align 2
  br label %615

233:                                              ; preds = %3
  %234 = load i8, i8* %1, align 1
  %235 = zext i8 %234 to i16
  store i16 %235, i16* %0, align 2
  %236 = getelementptr inbounds i16, i16* %0, i64 1
  %237 = getelementptr inbounds i8, i8* %1, i64 1
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i16
  store i16 %239, i16* %236, align 2
  %240 = getelementptr inbounds i16, i16* %0, i64 2
  %241 = getelementptr inbounds i8, i8* %1, i64 2
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i16
  store i16 %243, i16* %240, align 2
  %244 = getelementptr inbounds i16, i16* %0, i64 3
  %245 = getelementptr inbounds i8, i8* %1, i64 3
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i16
  store i16 %247, i16* %244, align 2
  %248 = getelementptr inbounds i16, i16* %0, i64 4
  %249 = getelementptr inbounds i8, i8* %1, i64 4
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i16
  store i16 %251, i16* %248, align 2
  %252 = getelementptr inbounds i16, i16* %0, i64 5
  %253 = getelementptr inbounds i8, i8* %1, i64 5
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i16
  store i16 %255, i16* %252, align 2
  %256 = getelementptr inbounds i16, i16* %0, i64 6
  %257 = getelementptr inbounds i8, i8* %1, i64 6
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i16
  store i16 %259, i16* %256, align 2
  %260 = getelementptr inbounds i16, i16* %0, i64 7
  %261 = getelementptr inbounds i8, i8* %1, i64 7
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i16
  store i16 %263, i16* %260, align 2
  %264 = getelementptr inbounds i16, i16* %0, i64 8
  %265 = getelementptr inbounds i8, i8* %1, i64 8
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i16
  store i16 %267, i16* %264, align 2
  %268 = getelementptr inbounds i16, i16* %0, i64 9
  %269 = getelementptr inbounds i8, i8* %1, i64 9
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i16
  store i16 %271, i16* %268, align 2
  %272 = getelementptr inbounds i16, i16* %0, i64 10
  %273 = getelementptr inbounds i8, i8* %1, i64 10
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i16
  store i16 %275, i16* %272, align 2
  %276 = getelementptr inbounds i16, i16* %0, i64 11
  %277 = getelementptr inbounds i8, i8* %1, i64 11
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i16
  store i16 %279, i16* %276, align 2
  br label %615

280:                                              ; preds = %3
  %281 = load i8, i8* %1, align 1
  %282 = zext i8 %281 to i16
  store i16 %282, i16* %0, align 2
  %283 = getelementptr inbounds i16, i16* %0, i64 1
  %284 = getelementptr inbounds i8, i8* %1, i64 1
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i16
  store i16 %286, i16* %283, align 2
  %287 = getelementptr inbounds i16, i16* %0, i64 2
  %288 = getelementptr inbounds i8, i8* %1, i64 2
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i16
  store i16 %290, i16* %287, align 2
  %291 = getelementptr inbounds i16, i16* %0, i64 3
  %292 = getelementptr inbounds i8, i8* %1, i64 3
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i16
  store i16 %294, i16* %291, align 2
  %295 = getelementptr inbounds i16, i16* %0, i64 4
  %296 = getelementptr inbounds i8, i8* %1, i64 4
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i16
  store i16 %298, i16* %295, align 2
  %299 = getelementptr inbounds i16, i16* %0, i64 5
  %300 = getelementptr inbounds i8, i8* %1, i64 5
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i16
  store i16 %302, i16* %299, align 2
  %303 = getelementptr inbounds i16, i16* %0, i64 6
  %304 = getelementptr inbounds i8, i8* %1, i64 6
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i16
  store i16 %306, i16* %303, align 2
  %307 = getelementptr inbounds i16, i16* %0, i64 7
  %308 = getelementptr inbounds i8, i8* %1, i64 7
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i16
  store i16 %310, i16* %307, align 2
  %311 = getelementptr inbounds i16, i16* %0, i64 8
  %312 = getelementptr inbounds i8, i8* %1, i64 8
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i16
  store i16 %314, i16* %311, align 2
  %315 = getelementptr inbounds i16, i16* %0, i64 9
  %316 = getelementptr inbounds i8, i8* %1, i64 9
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i16
  store i16 %318, i16* %315, align 2
  %319 = getelementptr inbounds i16, i16* %0, i64 10
  %320 = getelementptr inbounds i8, i8* %1, i64 10
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i16
  store i16 %322, i16* %319, align 2
  br label %615

323:                                              ; preds = %3
  %324 = load i8, i8* %1, align 1
  %325 = zext i8 %324 to i16
  store i16 %325, i16* %0, align 2
  %326 = getelementptr inbounds i16, i16* %0, i64 1
  %327 = getelementptr inbounds i8, i8* %1, i64 1
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i16
  store i16 %329, i16* %326, align 2
  %330 = getelementptr inbounds i16, i16* %0, i64 2
  %331 = getelementptr inbounds i8, i8* %1, i64 2
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i16
  store i16 %333, i16* %330, align 2
  %334 = getelementptr inbounds i16, i16* %0, i64 3
  %335 = getelementptr inbounds i8, i8* %1, i64 3
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i16
  store i16 %337, i16* %334, align 2
  %338 = getelementptr inbounds i16, i16* %0, i64 4
  %339 = getelementptr inbounds i8, i8* %1, i64 4
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i16
  store i16 %341, i16* %338, align 2
  %342 = getelementptr inbounds i16, i16* %0, i64 5
  %343 = getelementptr inbounds i8, i8* %1, i64 5
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i16
  store i16 %345, i16* %342, align 2
  %346 = getelementptr inbounds i16, i16* %0, i64 6
  %347 = getelementptr inbounds i8, i8* %1, i64 6
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i16
  store i16 %349, i16* %346, align 2
  %350 = getelementptr inbounds i16, i16* %0, i64 7
  %351 = getelementptr inbounds i8, i8* %1, i64 7
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i16
  store i16 %353, i16* %350, align 2
  %354 = getelementptr inbounds i16, i16* %0, i64 8
  %355 = getelementptr inbounds i8, i8* %1, i64 8
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i16
  store i16 %357, i16* %354, align 2
  %358 = getelementptr inbounds i16, i16* %0, i64 9
  %359 = getelementptr inbounds i8, i8* %1, i64 9
  %360 = load i8, i8* %359, align 1
  %361 = zext i8 %360 to i16
  store i16 %361, i16* %358, align 2
  br label %615

362:                                              ; preds = %3
  %363 = load i8, i8* %1, align 1
  %364 = zext i8 %363 to i16
  store i16 %364, i16* %0, align 2
  %365 = getelementptr inbounds i16, i16* %0, i64 1
  %366 = getelementptr inbounds i8, i8* %1, i64 1
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i16
  store i16 %368, i16* %365, align 2
  %369 = getelementptr inbounds i16, i16* %0, i64 2
  %370 = getelementptr inbounds i8, i8* %1, i64 2
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i16
  store i16 %372, i16* %369, align 2
  %373 = getelementptr inbounds i16, i16* %0, i64 3
  %374 = getelementptr inbounds i8, i8* %1, i64 3
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i16
  store i16 %376, i16* %373, align 2
  %377 = getelementptr inbounds i16, i16* %0, i64 4
  %378 = getelementptr inbounds i8, i8* %1, i64 4
  %379 = load i8, i8* %378, align 1
  %380 = zext i8 %379 to i16
  store i16 %380, i16* %377, align 2
  %381 = getelementptr inbounds i16, i16* %0, i64 5
  %382 = getelementptr inbounds i8, i8* %1, i64 5
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i16
  store i16 %384, i16* %381, align 2
  %385 = getelementptr inbounds i16, i16* %0, i64 6
  %386 = getelementptr inbounds i8, i8* %1, i64 6
  %387 = load i8, i8* %386, align 1
  %388 = zext i8 %387 to i16
  store i16 %388, i16* %385, align 2
  %389 = getelementptr inbounds i16, i16* %0, i64 7
  %390 = getelementptr inbounds i8, i8* %1, i64 7
  %391 = load i8, i8* %390, align 1
  %392 = zext i8 %391 to i16
  store i16 %392, i16* %389, align 2
  %393 = getelementptr inbounds i16, i16* %0, i64 8
  %394 = getelementptr inbounds i8, i8* %1, i64 8
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i16
  store i16 %396, i16* %393, align 2
  br label %615

397:                                              ; preds = %3
  %398 = load i8, i8* %1, align 1
  %399 = zext i8 %398 to i16
  store i16 %399, i16* %0, align 2
  %400 = getelementptr inbounds i16, i16* %0, i64 1
  %401 = getelementptr inbounds i8, i8* %1, i64 1
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i16
  store i16 %403, i16* %400, align 2
  %404 = getelementptr inbounds i16, i16* %0, i64 2
  %405 = getelementptr inbounds i8, i8* %1, i64 2
  %406 = load i8, i8* %405, align 1
  %407 = zext i8 %406 to i16
  store i16 %407, i16* %404, align 2
  %408 = getelementptr inbounds i16, i16* %0, i64 3
  %409 = getelementptr inbounds i8, i8* %1, i64 3
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i16
  store i16 %411, i16* %408, align 2
  %412 = getelementptr inbounds i16, i16* %0, i64 4
  %413 = getelementptr inbounds i8, i8* %1, i64 4
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i16
  store i16 %415, i16* %412, align 2
  %416 = getelementptr inbounds i16, i16* %0, i64 5
  %417 = getelementptr inbounds i8, i8* %1, i64 5
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i16
  store i16 %419, i16* %416, align 2
  %420 = getelementptr inbounds i16, i16* %0, i64 6
  %421 = getelementptr inbounds i8, i8* %1, i64 6
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i16
  store i16 %423, i16* %420, align 2
  %424 = getelementptr inbounds i16, i16* %0, i64 7
  %425 = getelementptr inbounds i8, i8* %1, i64 7
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i16
  store i16 %427, i16* %424, align 2
  br label %615

428:                                              ; preds = %3
  %429 = load i8, i8* %1, align 1
  %430 = zext i8 %429 to i16
  store i16 %430, i16* %0, align 2
  %431 = getelementptr inbounds i16, i16* %0, i64 1
  %432 = getelementptr inbounds i8, i8* %1, i64 1
  %433 = load i8, i8* %432, align 1
  %434 = zext i8 %433 to i16
  store i16 %434, i16* %431, align 2
  %435 = getelementptr inbounds i16, i16* %0, i64 2
  %436 = getelementptr inbounds i8, i8* %1, i64 2
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i16
  store i16 %438, i16* %435, align 2
  %439 = getelementptr inbounds i16, i16* %0, i64 3
  %440 = getelementptr inbounds i8, i8* %1, i64 3
  %441 = load i8, i8* %440, align 1
  %442 = zext i8 %441 to i16
  store i16 %442, i16* %439, align 2
  %443 = getelementptr inbounds i16, i16* %0, i64 4
  %444 = getelementptr inbounds i8, i8* %1, i64 4
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i16
  store i16 %446, i16* %443, align 2
  %447 = getelementptr inbounds i16, i16* %0, i64 5
  %448 = getelementptr inbounds i8, i8* %1, i64 5
  %449 = load i8, i8* %448, align 1
  %450 = zext i8 %449 to i16
  store i16 %450, i16* %447, align 2
  %451 = getelementptr inbounds i16, i16* %0, i64 6
  %452 = getelementptr inbounds i8, i8* %1, i64 6
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i16
  store i16 %454, i16* %451, align 2
  br label %615

455:                                              ; preds = %3
  %456 = load i8, i8* %1, align 1
  %457 = zext i8 %456 to i16
  store i16 %457, i16* %0, align 2
  %458 = getelementptr inbounds i16, i16* %0, i64 1
  %459 = getelementptr inbounds i8, i8* %1, i64 1
  %460 = load i8, i8* %459, align 1
  %461 = zext i8 %460 to i16
  store i16 %461, i16* %458, align 2
  %462 = getelementptr inbounds i16, i16* %0, i64 2
  %463 = getelementptr inbounds i8, i8* %1, i64 2
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i16
  store i16 %465, i16* %462, align 2
  %466 = getelementptr inbounds i16, i16* %0, i64 3
  %467 = getelementptr inbounds i8, i8* %1, i64 3
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i16
  store i16 %469, i16* %466, align 2
  %470 = getelementptr inbounds i16, i16* %0, i64 4
  %471 = getelementptr inbounds i8, i8* %1, i64 4
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i16
  store i16 %473, i16* %470, align 2
  %474 = getelementptr inbounds i16, i16* %0, i64 5
  %475 = getelementptr inbounds i8, i8* %1, i64 5
  %476 = load i8, i8* %475, align 1
  %477 = zext i8 %476 to i16
  store i16 %477, i16* %474, align 2
  br label %615

478:                                              ; preds = %3
  %479 = load i8, i8* %1, align 1
  %480 = zext i8 %479 to i16
  store i16 %480, i16* %0, align 2
  %481 = getelementptr inbounds i16, i16* %0, i64 1
  %482 = getelementptr inbounds i8, i8* %1, i64 1
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i16
  store i16 %484, i16* %481, align 2
  %485 = getelementptr inbounds i16, i16* %0, i64 2
  %486 = getelementptr inbounds i8, i8* %1, i64 2
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i16
  store i16 %488, i16* %485, align 2
  %489 = getelementptr inbounds i16, i16* %0, i64 3
  %490 = getelementptr inbounds i8, i8* %1, i64 3
  %491 = load i8, i8* %490, align 1
  %492 = zext i8 %491 to i16
  store i16 %492, i16* %489, align 2
  %493 = getelementptr inbounds i16, i16* %0, i64 4
  %494 = getelementptr inbounds i8, i8* %1, i64 4
  %495 = load i8, i8* %494, align 1
  %496 = zext i8 %495 to i16
  store i16 %496, i16* %493, align 2
  br label %615

497:                                              ; preds = %3
  %498 = load i8, i8* %1, align 1
  %499 = zext i8 %498 to i16
  store i16 %499, i16* %0, align 2
  %500 = getelementptr inbounds i16, i16* %0, i64 1
  %501 = getelementptr inbounds i8, i8* %1, i64 1
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i16
  store i16 %503, i16* %500, align 2
  %504 = getelementptr inbounds i16, i16* %0, i64 2
  %505 = getelementptr inbounds i8, i8* %1, i64 2
  %506 = load i8, i8* %505, align 1
  %507 = zext i8 %506 to i16
  store i16 %507, i16* %504, align 2
  %508 = getelementptr inbounds i16, i16* %0, i64 3
  %509 = getelementptr inbounds i8, i8* %1, i64 3
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i16
  store i16 %511, i16* %508, align 2
  br label %615

512:                                              ; preds = %3
  %513 = load i8, i8* %1, align 1
  %514 = zext i8 %513 to i16
  store i16 %514, i16* %0, align 2
  %515 = getelementptr inbounds i16, i16* %0, i64 1
  %516 = getelementptr inbounds i8, i8* %1, i64 1
  %517 = load i8, i8* %516, align 1
  %518 = zext i8 %517 to i16
  store i16 %518, i16* %515, align 2
  %519 = getelementptr inbounds i16, i16* %0, i64 2
  %520 = getelementptr inbounds i8, i8* %1, i64 2
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i16
  store i16 %522, i16* %519, align 2
  br label %615

523:                                              ; preds = %3
  %524 = load i8, i8* %1, align 1
  %525 = zext i8 %524 to i16
  store i16 %525, i16* %0, align 2
  %526 = getelementptr inbounds i16, i16* %0, i64 1
  %527 = getelementptr inbounds i8, i8* %1, i64 1
  %528 = load i8, i8* %527, align 1
  %529 = zext i8 %528 to i16
  store i16 %529, i16* %526, align 2
  br label %615

530:                                              ; preds = %3
  %531 = load i8, i8* %1, align 1
  %532 = zext i8 %531 to i16
  store i16 %532, i16* %0, align 2
  br label %615

533:                                              ; preds = %3
  %534 = getelementptr inbounds i8, i8* %1, i64 %2
  %535 = icmp eq i64 %2, 0
  br i1 %535, label %615, label %536

536:                                              ; preds = %533
  %537 = icmp ult i64 %2, 16
  br i1 %537, label %604, label %538

538:                                              ; preds = %536
  %539 = getelementptr i16, i16* %0, i64 %2
  %540 = bitcast i16* %539 to i8*
  %541 = icmp ugt i8* %534, %4
  %542 = icmp ugt i8* %540, %1
  %543 = and i1 %541, %542
  br i1 %543, label %604, label %544

544:                                              ; preds = %538
  %545 = and i64 %2, -16
  %546 = getelementptr i16, i16* %0, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = add i64 %545, -16
  %549 = lshr exact i64 %548, 4
  %550 = add nuw nsw i64 %549, 1
  %551 = and i64 %550, 1
  %552 = icmp eq i64 %548, 0
  br i1 %552, label %586, label %553

553:                                              ; preds = %544
  %554 = sub nuw nsw i64 %550, %551
  br label %555

555:                                              ; preds = %555, %553
  %556 = phi i64 [ 0, %553 ], [ %583, %555 ]
  %557 = phi i64 [ %554, %553 ], [ %584, %555 ]
  %558 = getelementptr i16, i16* %0, i64 %556
  %559 = getelementptr i8, i8* %1, i64 %556
  %560 = bitcast i8* %559 to <8 x i8>*
  %561 = load <8 x i8>, <8 x i8>* %560, align 1, !alias.scope !3
  %562 = getelementptr i8, i8* %559, i64 8
  %563 = bitcast i8* %562 to <8 x i8>*
  %564 = load <8 x i8>, <8 x i8>* %563, align 1, !alias.scope !3
  %565 = zext <8 x i8> %561 to <8 x i16>
  %566 = zext <8 x i8> %564 to <8 x i16>
  %567 = bitcast i16* %558 to <8 x i16>*
  store <8 x i16> %565, <8 x i16>* %567, align 2, !alias.scope !6, !noalias !3
  %568 = getelementptr i16, i16* %558, i64 8
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %569, align 2, !alias.scope !6, !noalias !3
  %570 = or i64 %556, 16
  %571 = getelementptr i16, i16* %0, i64 %570
  %572 = getelementptr i8, i8* %1, i64 %570
  %573 = bitcast i8* %572 to <8 x i8>*
  %574 = load <8 x i8>, <8 x i8>* %573, align 1, !alias.scope !3
  %575 = getelementptr i8, i8* %572, i64 8
  %576 = bitcast i8* %575 to <8 x i8>*
  %577 = load <8 x i8>, <8 x i8>* %576, align 1, !alias.scope !3
  %578 = zext <8 x i8> %574 to <8 x i16>
  %579 = zext <8 x i8> %577 to <8 x i16>
  %580 = bitcast i16* %571 to <8 x i16>*
  store <8 x i16> %578, <8 x i16>* %580, align 2, !alias.scope !6, !noalias !3
  %581 = getelementptr i16, i16* %571, i64 8
  %582 = bitcast i16* %581 to <8 x i16>*
  store <8 x i16> %579, <8 x i16>* %582, align 2, !alias.scope !6, !noalias !3
  %583 = add i64 %556, 32
  %584 = add i64 %557, -2
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %555, !llvm.loop !8

586:                                              ; preds = %555, %544
  %587 = phi i64 [ 0, %544 ], [ %583, %555 ]
  %588 = icmp eq i64 %551, 0
  br i1 %588, label %602, label %589

589:                                              ; preds = %586
  %590 = getelementptr i16, i16* %0, i64 %587
  %591 = getelementptr i8, i8* %1, i64 %587
  %592 = bitcast i8* %591 to <8 x i8>*
  %593 = load <8 x i8>, <8 x i8>* %592, align 1, !alias.scope !3
  %594 = getelementptr i8, i8* %591, i64 8
  %595 = bitcast i8* %594 to <8 x i8>*
  %596 = load <8 x i8>, <8 x i8>* %595, align 1, !alias.scope !3
  %597 = zext <8 x i8> %593 to <8 x i16>
  %598 = zext <8 x i8> %596 to <8 x i16>
  %599 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %597, <8 x i16>* %599, align 2, !alias.scope !6, !noalias !3
  %600 = getelementptr i16, i16* %590, i64 8
  %601 = bitcast i16* %600 to <8 x i16>*
  store <8 x i16> %598, <8 x i16>* %601, align 2, !alias.scope !6, !noalias !3
  br label %602

602:                                              ; preds = %586, %589
  %603 = icmp eq i64 %545, %2
  br i1 %603, label %615, label %604

604:                                              ; preds = %602, %538, %536
  %605 = phi i16* [ %0, %538 ], [ %0, %536 ], [ %546, %602 ]
  %606 = phi i8* [ %1, %538 ], [ %1, %536 ], [ %547, %602 ]
  br label %607

607:                                              ; preds = %604, %607
  %608 = phi i16* [ %613, %607 ], [ %605, %604 ]
  %609 = phi i8* [ %612, %607 ], [ %606, %604 ]
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i16
  store i16 %611, i16* %608, align 2
  %612 = getelementptr inbounds i8, i8* %609, i64 1
  %613 = getelementptr inbounds i16, i16* %608, i64 1
  %614 = icmp eq i8* %612, %534
  br i1 %614, label %615, label %607, !llvm.loop !10

615:                                              ; preds = %607, %602, %5, %68, %127, %182, %233, %280, %323, %362, %397, %428, %455, %478, %497, %512, %523, %530, %533
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11Utf8DecoderC2ERKNS0_6VectorIKhEE(%"class.v8::internal::Utf8Decoder"* nocapture, %"class.v8::internal::Vector"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.v8::internal::Utf8Decoder", %"class.v8::internal::Utf8Decoder"* %0, i64 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.v8::internal::Utf8Decoder", %"class.v8::internal::Utf8Decoder"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = shl i64 %9, 32
  %12 = ashr exact i64 %11, 32
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  %14 = icmp ugt i32 %10, 7
  br i1 %14, label %15, label %50

15:                                               ; preds = %2
  %16 = ptrtoint i8* %7 to i64
  %17 = and i64 %16, 7
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %36, label %19

19:                                               ; preds = %15
  %20 = load i8, i8* %7, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %27, label %30

22:                                               ; preds = %30
  %23 = load i8, i8* %32, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %22
  %26 = ptrtoint i8* %32 to i64
  br label %27

27:                                               ; preds = %25, %19
  %28 = phi i64 [ %16, %19 ], [ %26, %25 ]
  %29 = sub i64 %28, %16
  br label %69

30:                                               ; preds = %19, %22
  %31 = phi i8* [ %32, %22 ], [ %7, %19 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = ptrtoint i8* %32 to i64
  %34 = and i64 %33, 7
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %22

36:                                               ; preds = %30, %15
  %37 = phi i8* [ %7, %15 ], [ %32, %30 ]
  br label %38

38:                                               ; preds = %36, %42
  %39 = phi i8* [ %40, %42 ], [ %37, %36 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = icmp ugt i8* %40, %13
  br i1 %41, label %50, label %42

42:                                               ; preds = %38
  %43 = bitcast i8* %39 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, -9187201950435737472
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %38, label %47

47:                                               ; preds = %42
  %48 = ptrtoint i8* %39 to i64
  %49 = sub i64 %48, %16
  br label %69

50:                                               ; preds = %38, %2
  %51 = phi i8* [ %7, %2 ], [ %39, %38 ]
  %52 = icmp ult i8* %51, %13
  br i1 %52, label %53, label %64

53:                                               ; preds = %50, %61
  %54 = phi i8* [ %62, %61 ], [ %51, %50 ]
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = ptrtoint i8* %54 to i64
  %59 = ptrtoint i8* %7 to i64
  %60 = sub i64 %58, %59
  br label %69

61:                                               ; preds = %53
  %62 = getelementptr inbounds i8, i8* %54, i64 1
  %63 = icmp eq i8* %62, %13
  br i1 %63, label %64, label %53

64:                                               ; preds = %61, %50
  %65 = phi i8* [ %51, %50 ], [ %13, %61 ]
  %66 = ptrtoint i8* %65 to i64
  %67 = ptrtoint i8* %7 to i64
  %68 = sub i64 %66, %67
  br label %69

69:                                               ; preds = %27, %47, %57, %64
  %70 = phi i64 [ %29, %27 ], [ %60, %57 ], [ %68, %64 ], [ %49, %47 ]
  %71 = trunc i64 %70 to i32
  store i32 %71, i32* %5, align 4
  %72 = getelementptr inbounds %"class.v8::internal::Utf8Decoder", %"class.v8::internal::Utf8Decoder"* %0, i64 0, i32 2
  store i32 %71, i32* %72, align 4
  %73 = load i64, i64* %8, align 8
  %74 = trunc i64 %73 to i32
  %75 = icmp eq i32 %71, %74
  br i1 %75, label %151, label %76

76:                                               ; preds = %69
  %77 = load i8*, i8** %6, align 8
  %78 = shl i64 %70, 32
  %79 = ashr exact i64 %78, 32
  %80 = shl i64 %73, 32
  %81 = ashr exact i64 %80, 32
  %82 = getelementptr inbounds i8, i8* %77, i64 %81
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #3
  store i8 12, i8* %3, align 1
  %83 = icmp slt i64 %79, %81
  br i1 %83, label %84, label %139

84:                                               ; preds = %76
  %85 = getelementptr inbounds i8, i8* %77, i64 %79
  br label %86

86:                                               ; preds = %84, %132
  %87 = phi i32 [ %133, %132 ], [ %71, %84 ]
  %88 = phi i8 [ %134, %132 ], [ 12, %84 ]
  %89 = phi i8 [ %137, %132 ], [ 1, %84 ]
  %90 = phi i32 [ %135, %132 ], [ 0, %84 ]
  %91 = phi i8* [ %136, %132 ], [ %85, %84 ]
  %92 = load i8, i8* %91, align 1
  %93 = getelementptr inbounds i8, i8* %91, i64 1
  %94 = icmp sgt i8 %92, -1
  %95 = icmp eq i8 %88, 12
  %96 = and i1 %95, %94
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %86
  %98 = zext i8 %92 to i32
  br label %119

99:                                               ; preds = %86
  %100 = zext i8 %92 to i64
  %101 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE11transitions, i64 0, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %88 to i32
  %104 = zext i8 %102 to i32
  %105 = add nuw nsw i32 %104, %103
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds [108 x i8], [108 x i8]* bitcast (<{ [100 x i8], [8 x i8] }>* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE6states to [108 x i8]*), i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  store i8 %108, i8* %3, align 1
  %109 = shl i32 %90, 6
  %110 = zext i8 %92 to i32
  %111 = lshr i32 %104, 1
  %112 = lshr i32 127, %111
  %113 = and i32 %112, %110
  %114 = or i32 %113, %109
  switch i8 %108, label %132 [
    i8 12, label %117
    i8 0, label %115
  ]

115:                                              ; preds = %99
  store i8 12, i8* %3, align 1
  %116 = select i1 %95, i8* %93, i8* %91
  br label %119

117:                                              ; preds = %99
  %118 = icmp eq i32 %114, -4
  br i1 %118, label %132, label %119

119:                                              ; preds = %115, %97, %117
  %120 = phi i32 [ %114, %117 ], [ %98, %97 ], [ 65533, %115 ]
  %121 = phi i32 [ 0, %117 ], [ %90, %97 ], [ 0, %115 ]
  %122 = phi i8* [ %93, %117 ], [ %93, %97 ], [ %116, %115 ]
  %123 = and i8 %89, 1
  %124 = icmp ne i8 %123, 0
  %125 = icmp ult i32 %120, 256
  %126 = and i1 %124, %125
  %127 = zext i1 %126 to i8
  %128 = add nsw i32 %87, 1
  store i32 %128, i32* %72, align 4
  %129 = icmp ugt i32 %120, 65535
  br i1 %129, label %130, label %132

130:                                              ; preds = %119
  %131 = add nsw i32 %87, 2
  store i32 %131, i32* %72, align 4
  br label %132

132:                                              ; preds = %99, %117, %119, %130
  %133 = phi i32 [ %131, %130 ], [ %128, %119 ], [ %87, %117 ], [ %87, %99 ]
  %134 = phi i8 [ 12, %130 ], [ 12, %119 ], [ 12, %117 ], [ %108, %99 ]
  %135 = phi i32 [ %121, %130 ], [ %121, %119 ], [ 0, %117 ], [ %114, %99 ]
  %136 = phi i8* [ %122, %130 ], [ %122, %119 ], [ %93, %117 ], [ %93, %99 ]
  %137 = phi i8 [ %127, %130 ], [ %127, %119 ], [ %89, %117 ], [ %89, %99 ]
  %138 = icmp ult i8* %136, %82
  br i1 %138, label %86, label %139

139:                                              ; preds = %132, %76
  %140 = phi i8 [ 1, %76 ], [ %137, %132 ]
  %141 = call i32 @_ZN7unibrow4Utf824ValueOfIncrementalFinishEPN14Utf8DfaDecoder5StateE(i8* nonnull %3) #3
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %139
  %144 = load i32, i32* %72, align 4
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %72, align 4
  br label %146

146:                                              ; preds = %139, %143
  %147 = phi i8 [ 0, %143 ], [ %140, %139 ]
  %148 = and i8 %147, 1
  %149 = icmp eq i8 %148, 0
  %150 = select i1 %149, i8 2, i8 1
  store i8 %150, i8* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #3
  br label %151

151:                                              ; preds = %69, %146
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !9}
