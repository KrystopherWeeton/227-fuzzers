; ModuleID = '../../ipc/message_view.cc'
source_filename = "../../ipc/message_view.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.IPC::MessageView" = type { %"class.base::span", %"class.absl::optional" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.1" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::native::SerializedHandle"* }
%"class.mojo::native::SerializedHandle" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.mojo::StructPtr"* }

$_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN4mojo9StructPtrINS4_6native16SerializedHandleEEENS2_9allocatorIS8_EEEELb0EEaSEOSC_ = comdat any

@_ZN3IPC11MessageViewC1Ev = hidden unnamed_addr alias void (%"class.IPC::MessageView"*), void (%"class.IPC::MessageView"*)* @_ZN3IPC11MessageViewC2Ev
@_ZN3IPC11MessageViewC1EN4base4spanIKhLm18446744073709551615EEEN4absl8optionalINSt3__16vectorIN4mojo9StructPtrINS9_6native16SerializedHandleEEENS7_9allocatorISD_EEEEEE = hidden unnamed_addr alias void (%"class.IPC::MessageView"*, i64, i8*, %"class.absl::optional"*), void (%"class.IPC::MessageView"*, i64, i8*, %"class.absl::optional"*)* @_ZN3IPC11MessageViewC2EN4base4spanIKhLm18446744073709551615EEEN4absl8optionalINSt3__16vectorIN4mojo9StructPtrINS9_6native16SerializedHandleEEENS7_9allocatorISD_EEEEEE
@_ZN3IPC11MessageViewC1EOS0_ = hidden unnamed_addr alias void (%"class.IPC::MessageView"*, %"class.IPC::MessageView"*), void (%"class.IPC::MessageView"*, %"class.IPC::MessageView"*)* @_ZN3IPC11MessageViewC2EOS0_
@_ZN3IPC11MessageViewD1Ev = hidden unnamed_addr alias void (%"class.IPC::MessageView"*), void (%"class.IPC::MessageView"*)* @_ZN3IPC11MessageViewD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC11MessageViewC2Ev(%"class.IPC::MessageView"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %union.anon* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #4
  %4 = bitcast %"class.IPC::MessageView"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC11MessageViewC2EN4base4spanIKhLm18446744073709551615EEEN4absl8optionalINSt3__16vectorIN4mojo9StructPtrINS9_6native16SerializedHandleEEENS7_9allocatorISD_EEEEEE(%"class.IPC::MessageView"* nocapture, i64, i8*, %"class.absl::optional"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 0, i32 1
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #4
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::vector"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #4
  %15 = bitcast %"class.std::__1::vector"* %12 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %19 = bitcast %"class.mojo::StructPtr"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = bitcast %"class.mojo::StructPtr"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.mojo::StructPtr"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.mojo::StructPtr"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #4
  store i8 1, i8* %7, align 8
  br label %29

29:                                               ; preds = %4, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC11MessageViewC2EOS0_(%"class.IPC::MessageView"* nocapture, %"class.IPC::MessageView"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.IPC::MessageView"* %0 to i8*
  %4 = bitcast %"class.IPC::MessageView"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #4
  %13 = bitcast %"class.std::__1::vector"* %10 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast %"class.mojo::StructPtr"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %20 = bitcast %"class.mojo::StructPtr"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.mojo::StructPtr"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.mojo::StructPtr"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #4
  store i8 1, i8* %5, align 8
  br label %27

27:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC11MessageViewD2Ev(%"class.IPC::MessageView"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %7, align 8
  %9 = icmp eq %"class.mojo::StructPtr"* %8, null
  br i1 %9, label %30, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.mojo::StructPtr"* %8 to i8*
  %12 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %12, align 8
  %14 = icmp eq %"class.mojo::StructPtr"* %13, %8
  br i1 %14, label %28, label %15

15:                                               ; preds = %10, %23
  %16 = phi %"class.mojo::StructPtr"* [ %17, %23 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %16, i64 -1
  %18 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.mojo::native::SerializedHandle"*, %"class.mojo::native::SerializedHandle"** %18, align 8
  store %"class.mojo::native::SerializedHandle"* null, %"class.mojo::native::SerializedHandle"** %18, align 8
  %20 = icmp eq %"class.mojo::native::SerializedHandle"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  tail call void @_ZN4mojo6native16SerializedHandleD1Ev(%"class.mojo::native::SerializedHandle"* nonnull %19) #4
  %22 = bitcast %"class.mojo::native::SerializedHandle"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #5
  br label %23

23:                                               ; preds = %21, %15
  %24 = icmp eq %"class.mojo::StructPtr"* %17, %8
  br i1 %24, label %25, label %15

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %6 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %10
  %29 = phi i8* [ %27, %25 ], [ %11, %10 ]
  store %"class.mojo::StructPtr"* %8, %"class.mojo::StructPtr"** %12, align 8
  tail call void @_ZdlPv(i8* %29) #5
  br label %30

30:                                               ; preds = %28, %5
  store i8 0, i8* %2, align 8
  br label %31

31:                                               ; preds = %1, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.IPC::MessageView"* @_ZN3IPC11MessageViewaSEOS0_(%"class.IPC::MessageView"* returned, %"class.IPC::MessageView"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.IPC::MessageView"* %0 to i8*
  %4 = bitcast %"class.IPC::MessageView"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %1, i64 0, i32 1, i32 0
  %7 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN4mojo9StructPtrINS4_6native16SerializedHandleEEENS2_9allocatorIS8_EEEELb0EEaSEOSC_(%"class.absl::optional_internal::optional_data"* %5, %"class.absl::optional_internal::optional_data"* dereferenceable(32) %6) #4
  ret %"class.IPC::MessageView"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC11MessageView11TakeHandlesEv(%"class.absl::optional"* noalias nocapture sret, %"class.IPC::MessageView"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #4
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %9 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %12, align 8
  %13 = getelementptr inbounds %"class.IPC::MessageView", %"class.IPC::MessageView"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.mojo::StructPtr"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #4
  store i8 1, i8* %3, align 8
  br label %19

19:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4mojo6native16SerializedHandleD1Ev(%"class.mojo::native::SerializedHandle"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional_internal::optional_data"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN4mojo9StructPtrINS4_6native16SerializedHandleEEENS2_9allocatorIS8_EEEELb0EEaSEOSC_(%"class.absl::optional_internal::optional_data"*, %"class.absl::optional_internal::optional_data"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %52, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %14 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %13, align 8
  %15 = icmp eq %"class.mojo::StructPtr"* %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.mojo::StructPtr"* %14 to i8*
  %18 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %19 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %18, align 8
  %20 = icmp eq %"class.mojo::StructPtr"* %19, %14
  br i1 %20, label %34, label %21

21:                                               ; preds = %16, %29
  %22 = phi %"class.mojo::StructPtr"* [ %23, %29 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %22, i64 -1
  %24 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.mojo::native::SerializedHandle"*, %"class.mojo::native::SerializedHandle"** %24, align 8
  store %"class.mojo::native::SerializedHandle"* null, %"class.mojo::native::SerializedHandle"** %24, align 8
  %26 = icmp eq %"class.mojo::native::SerializedHandle"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  tail call void @_ZN4mojo6native16SerializedHandleD1Ev(%"class.mojo::native::SerializedHandle"* nonnull %25) #4
  %28 = bitcast %"class.mojo::native::SerializedHandle"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #5
  br label %29

29:                                               ; preds = %27, %21
  %30 = icmp eq %"class.mojo::StructPtr"* %23, %14
  br i1 %30, label %31, label %21

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %11 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %16
  %35 = phi i8* [ %33, %31 ], [ %17, %16 ]
  store %"class.mojo::StructPtr"* %14, %"class.mojo::StructPtr"** %18, align 8
  tail call void @_ZdlPv(i8* %35) #5
  %36 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #4
  br label %37

37:                                               ; preds = %12, %34
  %38 = bitcast %"class.std::__1::vector"* %7 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %42 = bitcast %"class.mojo::StructPtr"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %45 = bitcast %"class.mojo::StructPtr"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.mojo::StructPtr"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.mojo::StructPtr"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #4
  br label %98

52:                                               ; preds = %6
  %53 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #4
  %54 = bitcast %"class.std::__1::vector"* %7 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %58 = bitcast %"class.mojo::StructPtr"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %61 = bitcast %"class.mojo::StructPtr"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast %"class.mojo::StructPtr"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.mojo::StructPtr"** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #4
  store i8 1, i8* %8, align 8
  br label %98

68:                                               ; preds = %2
  %69 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %98, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %74, align 8
  %76 = icmp eq %"class.mojo::StructPtr"* %75, null
  br i1 %76, label %97, label %77

77:                                               ; preds = %72
  %78 = bitcast %"class.mojo::StructPtr"* %75 to i8*
  %79 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %80 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %79, align 8
  %81 = icmp eq %"class.mojo::StructPtr"* %80, %75
  br i1 %81, label %95, label %82

82:                                               ; preds = %77, %90
  %83 = phi %"class.mojo::StructPtr"* [ %84, %90 ], [ %80, %77 ]
  %84 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %83, i64 -1
  %85 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.mojo::native::SerializedHandle"*, %"class.mojo::native::SerializedHandle"** %85, align 8
  store %"class.mojo::native::SerializedHandle"* null, %"class.mojo::native::SerializedHandle"** %85, align 8
  %87 = icmp eq %"class.mojo::native::SerializedHandle"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %82
  tail call void @_ZN4mojo6native16SerializedHandleD1Ev(%"class.mojo::native::SerializedHandle"* nonnull %86) #4
  %89 = bitcast %"class.mojo::native::SerializedHandle"* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #5
  br label %90

90:                                               ; preds = %88, %82
  %91 = icmp eq %"class.mojo::StructPtr"* %84, %75
  br i1 %91, label %92, label %82

92:                                               ; preds = %90
  %93 = bitcast %"class.std::__1::vector"* %73 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %92, %77
  %96 = phi i8* [ %94, %92 ], [ %78, %77 ]
  store %"class.mojo::StructPtr"* %75, %"class.mojo::StructPtr"** %79, align 8
  tail call void @_ZdlPv(i8* %96) #5
  br label %97

97:                                               ; preds = %95, %72
  store i8 0, i8* %69, align 8
  br label %98

98:                                               ; preds = %97, %68, %52, %37
  ret %"class.absl::optional_internal::optional_data"* %0
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
