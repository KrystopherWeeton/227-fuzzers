; ModuleID = '../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/CommandLine.cpp'
source_filename = "../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/CommandLine.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.llvm::cl::OptionCategory" = type { %"class.llvm::StringRef", %"class.llvm::StringRef" }
%"class.llvm::StringRef" = type { i8*, i64 }
%"class.llvm::ManagedStaticBase" = type { %"struct.std::__1::atomic", void (i8*)*, %"class.llvm::ManagedStaticBase"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8* }
%"class.(anonymous namespace)::HelpPrinter" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.(anonymous namespace)::CategorizedHelpPrinter" = type { %"class.(anonymous namespace)::HelpPrinter.base", [7 x i8] }
%"class.(anonymous namespace)::HelpPrinter.base" = type <{ i32 (...)**, i8 }>
%"class.(anonymous namespace)::HelpPrinterWrapper" = type { %"class.(anonymous namespace)::HelpPrinter"*, %"class.(anonymous namespace)::CategorizedHelpPrinter"* }
%"class.llvm::cl::opt.106" = type { %"class.llvm::cl::Option.base", %"class.llvm::cl::opt_storage.107", %"class.llvm::cl::parser.38" }
%"class.llvm::cl::Option.base" = type <{ i32 (...)**, i32, i16, [2 x i8], i32, i32, %"class.llvm::StringRef", %"class.llvm::StringRef", %"class.llvm::StringRef", %"class.llvm::cl::OptionCategory"*, %"class.llvm::SmallPtrSet", i8 }>
%"class.llvm::SmallPtrSet" = type { %"class.llvm::SmallPtrSetImpl.base", [4 x i8*] }
%"class.llvm::SmallPtrSetImpl.base" = type { %"class.llvm::SmallPtrSetImplBase.base" }
%"class.llvm::SmallPtrSetImplBase.base" = type <{ i8**, i8**, i32, i32, i32 }>
%"class.llvm::cl::opt_storage.107" = type { %"class.(anonymous namespace)::HelpPrinter"*, %"struct.llvm::cl::OptionValue.108" }
%"struct.llvm::cl::OptionValue.108" = type { %"struct.llvm::cl::OptionValueBase.109" }
%"struct.llvm::cl::OptionValueBase.109" = type { %"struct.llvm::cl::GenericOptionValue" }
%"struct.llvm::cl::GenericOptionValue" = type { i32 (...)** }
%"class.llvm::cl::parser.38" = type { %"class.llvm::cl::basic_parser" }
%"class.llvm::cl::basic_parser" = type { %"class.llvm::cl::basic_parser_impl" }
%"class.llvm::cl::basic_parser_impl" = type { i32 (...)** }
%"class.llvm::cl::opt.110" = type { %"class.llvm::cl::Option.base", %"class.llvm::cl::opt_storage.111", %"class.llvm::cl::parser.38" }
%"class.llvm::cl::opt_storage.111" = type { %"class.(anonymous namespace)::HelpPrinterWrapper"*, %"struct.llvm::cl::OptionValue.112" }
%"struct.llvm::cl::OptionValue.112" = type { %"struct.llvm::cl::OptionValueBase.113" }
%"struct.llvm::cl::OptionValueBase.113" = type { %"struct.llvm::cl::GenericOptionValue" }
%"class.llvm::cl::opt.31" = type { %"class.llvm::cl::Option.base", [7 x i8], %"class.llvm::cl::opt_storage.32", %"class.llvm::cl::parser.38" }
%"class.llvm::cl::opt_storage.32" = type { i8, [7 x i8], %"struct.llvm::cl::OptionValue.33" }
%"struct.llvm::cl::OptionValue.33" = type { %"struct.llvm::cl::OptionValueBase.base.37", [6 x i8] }
%"struct.llvm::cl::OptionValueBase.base.37" = type { %"class.llvm::cl::OptionValueCopy.base.36" }
%"class.llvm::cl::OptionValueCopy.base.36" = type <{ %"struct.llvm::cl::GenericOptionValue", i8, i8 }>
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { void ()**, void ()**, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { void ()** }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.llvm::cl::Option" = type <{ i32 (...)**, i32, i16, [2 x i8], i32, i32, %"class.llvm::StringRef", %"class.llvm::StringRef", %"class.llvm::StringRef", %"class.llvm::cl::OptionCategory"*, %"class.llvm::SmallPtrSet", i8, [7 x i8] }>
%"class.llvm::cl::basic_parser.0" = type { %"class.llvm::cl::basic_parser_impl" }
%"class.llvm::cl::basic_parser.1" = type { %"class.llvm::cl::basic_parser_impl" }
%"class.llvm::cl::basic_parser.2" = type { %"class.llvm::cl::basic_parser_impl" }
%"class.llvm::cl::basic_parser.3" = type { %"class.llvm::cl::basic_parser_impl" }
%"class.llvm::cl::basic_parser.4" = type { %"class.llvm::cl::basic_parser_impl" }
%"class.llvm::cl::basic_parser.5" = type { %"class.llvm::cl::basic_parser_impl" }
%"class.llvm::cl::basic_parser.6" = type { %"class.llvm::cl::basic_parser_impl" }
%"class.llvm::cl::basic_parser.7" = type { %"class.llvm::cl::basic_parser_impl" }
%"struct.llvm::cl::extrahelp" = type { %"class.llvm::StringRef" }
%"class.llvm::cl::opt" = type { %"class.llvm::cl::Option.base", [7 x i8], %"class.llvm::cl::opt_storage", %"class.llvm::cl::parser" }
%"class.llvm::cl::opt_storage" = type { i32, [4 x i8], %"struct.llvm::cl::OptionValue" }
%"struct.llvm::cl::OptionValue" = type { %"struct.llvm::cl::OptionValueBase.base", [3 x i8] }
%"struct.llvm::cl::OptionValueBase.base" = type { %"class.llvm::cl::OptionValueCopy.base" }
%"class.llvm::cl::OptionValueCopy.base" = type <{ %"struct.llvm::cl::GenericOptionValue", i32, i8 }>
%"class.llvm::cl::parser" = type { %"class.llvm::cl::basic_parser.2" }
%"class.llvm::Twine" = type <{ %"union.llvm::Twine::Child", %"union.llvm::Twine::Child", i8, i8, [6 x i8] }>
%"union.llvm::Twine::Child" = type { %"class.llvm::Twine"* }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [16 x i8] }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"class.(anonymous namespace)::CommandLineParser" = type { %"class.std::__1::basic_string", %"class.llvm::StringRef", %"class.std::__1::vector", %"class.llvm::SmallPtrSet.51", %"class.llvm::SmallPtrSet", %"class.llvm::cl::SubCommand"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.llvm::StringRef"*, %"class.llvm::StringRef"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.llvm::StringRef"* }
%"class.llvm::SmallPtrSet.51" = type { %"class.llvm::SmallPtrSetImpl.base.53", [16 x i8*] }
%"class.llvm::SmallPtrSetImpl.base.53" = type { %"class.llvm::SmallPtrSetImplBase.base" }
%"class.llvm::cl::SubCommand" = type { %"class.llvm::StringRef", %"class.llvm::StringRef", %"class.llvm::SmallVector", %"class.llvm::SmallVector", %"class.llvm::StringMap", %"class.llvm::cl::Option"* }
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl.54", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl.54" = type { %"class.llvm::SmallVectorTemplateBase.55" }
%"class.llvm::SmallVectorTemplateBase.55" = type { %"class.llvm::SmallVectorTemplateCommon.56" }
%"class.llvm::SmallVectorTemplateCommon.56" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.57" }
%"struct.llvm::AlignedCharArrayUnion.57" = type { %"struct.llvm::AlignedCharArray.58" }
%"struct.llvm::AlignedCharArray.58" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion.57"] }
%"class.llvm::StringMap" = type <{ %"class.llvm::StringMapImpl", %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::StringMapImpl" = type { %"class.llvm::StringMapEntryBase"**, i32, i32, i32, i32 }
%"class.llvm::StringMapEntryBase" = type { i32 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.llvm::cl::opt.8" = type { %"class.llvm::cl::Option.base", [7 x i8], %"class.llvm::cl::opt_storage.9", %"class.llvm::cl::parser.15" }
%"class.llvm::cl::opt_storage.9" = type { i32, [4 x i8], %"struct.llvm::cl::OptionValue.10" }
%"struct.llvm::cl::OptionValue.10" = type { %"struct.llvm::cl::OptionValueBase.base.14", [3 x i8] }
%"struct.llvm::cl::OptionValueBase.base.14" = type { %"class.llvm::cl::OptionValueCopy.base.13" }
%"class.llvm::cl::OptionValueCopy.base.13" = type <{ %"struct.llvm::cl::GenericOptionValue", i32, i8 }>
%"class.llvm::cl::parser.15" = type { %"class.llvm::cl::basic_parser.1" }
%"class.llvm::cl::opt.16" = type { %"class.llvm::cl::Option.base", %"class.llvm::cl::opt_storage.17", %"class.llvm::cl::parser.22" }
%"class.llvm::cl::opt_storage.17" = type { %"class.std::__1::basic_string", %"struct.llvm::cl::OptionValue.19" }
%"struct.llvm::cl::OptionValue.19" = type { %"class.llvm::cl::OptionValueCopy.base.21", [7 x i8] }
%"class.llvm::cl::OptionValueCopy.base.21" = type <{ %"struct.llvm::cl::GenericOptionValue", %"class.std::__1::basic_string", i8 }>
%"class.llvm::cl::parser.22" = type { %"class.llvm::cl::basic_parser.6" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.llvm::cl::opt.23" = type { %"class.llvm::cl::Option.base", [7 x i8], %"class.llvm::cl::opt_storage.24", %"class.llvm::cl::parser.30" }
%"class.llvm::cl::opt_storage.24" = type { i8, [7 x i8], %"struct.llvm::cl::OptionValue.25" }
%"struct.llvm::cl::OptionValue.25" = type { %"struct.llvm::cl::OptionValueBase.base.29", [6 x i8] }
%"struct.llvm::cl::OptionValueBase.base.29" = type { %"class.llvm::cl::OptionValueCopy.base.28" }
%"class.llvm::cl::OptionValueCopy.base.28" = type <{ %"struct.llvm::cl::GenericOptionValue", i8, i8 }>
%"class.llvm::cl::parser.30" = type { %"class.llvm::cl::basic_parser.7" }
%"struct.llvm::cl::OptionValue.39" = type { %"class.llvm::cl::OptionValueCopy.base.41", [3 x i8] }
%"class.llvm::cl::OptionValueCopy.base.41" = type <{ %"struct.llvm::cl::GenericOptionValue", i32, i8 }>
%"class.llvm::cl::parser.42" = type { %"class.llvm::cl::basic_parser.0" }
%"class.llvm::cl::parser.43" = type { %"class.llvm::cl::basic_parser.3" }
%"class.llvm::cl::parser.44" = type { %"class.llvm::cl::basic_parser.4" }
%"class.llvm::cl::parser.45" = type { %"class.llvm::cl::basic_parser.5" }
%"struct.std::__1::pair.125" = type <{ %"class.llvm::SmallPtrSetIterator.126", i8, [7 x i8] }>
%"class.llvm::SmallPtrSetIterator.126" = type { %"class.llvm::SmallPtrSetIteratorImpl" }
%"class.llvm::SmallPtrSetIteratorImpl" = type { i8**, i8** }
%"class.llvm::SmallPtrSetImpl.52" = type { %"class.llvm::SmallPtrSetImplBase.base", [4 x i8] }
%"struct.std::__1::pair.132" = type <{ %"class.llvm::SmallPtrSetIterator", i8, [7 x i8] }>
%"class.llvm::SmallPtrSetIterator" = type { %"class.llvm::SmallPtrSetIteratorImpl" }
%"class.llvm::SmallPtrSetImpl" = type { %"class.llvm::SmallPtrSetImplBase.base", [4 x i8] }
%"class.llvm::StringMapEntry" = type { %"class.llvm::StringMapEntryBase", %"class.llvm::cl::Option"* }
%"class.llvm::SmallPtrSetImplBase" = type <{ i8**, i8**, i32, i32, i32, [4 x i8] }>
%"class.llvm::StringSaver" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector.61", %"class.llvm::SmallVector.67", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector.61" = type { %"class.llvm::SmallVectorImpl.62", %"struct.llvm::SmallVectorStorage.66" }
%"class.llvm::SmallVectorImpl.62" = type { %"class.llvm::SmallVectorTemplateBase.63" }
%"class.llvm::SmallVectorTemplateBase.63" = type { %"class.llvm::SmallVectorTemplateCommon.64" }
%"class.llvm::SmallVectorTemplateCommon.64" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.65" }
%"struct.llvm::AlignedCharArrayUnion.65" = type { %"struct.llvm::AlignedCharArray.58" }
%"struct.llvm::SmallVectorStorage.66" = type { [3 x %"struct.llvm::AlignedCharArrayUnion.65"] }
%"class.llvm::SmallVector.67" = type <{ %"class.llvm::SmallVectorImpl.68", %"struct.llvm::SmallVectorStorage.72", [7 x i8] }>
%"class.llvm::SmallVectorImpl.68" = type { %"class.llvm::SmallVectorTemplateBase.69" }
%"class.llvm::SmallVectorTemplateBase.69" = type { %"class.llvm::SmallVectorTemplateCommon.70" }
%"class.llvm::SmallVectorTemplateCommon.70" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.71" }
%"struct.llvm::AlignedCharArrayUnion.71" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.72" = type { i8 }
%"class.llvm::SmallVectorImpl.73" = type { %"class.llvm::SmallVectorTemplateBase.74" }
%"class.llvm::SmallVectorTemplateBase.74" = type { %"class.llvm::SmallVectorTemplateCommon.75" }
%"class.llvm::SmallVectorTemplateCommon.75" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.76" }
%"struct.llvm::AlignedCharArrayUnion.76" = type { %"struct.llvm::AlignedCharArray.58" }
%"class.llvm::SmallString" = type { %"class.llvm::SmallVector.77" }
%"class.llvm::SmallVector.77" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage.83" }
%"class.llvm::SmallVectorImpl.base" = type { %"class.llvm::SmallVectorTemplateBase.base" }
%"class.llvm::SmallVectorTemplateBase.base" = type { %"class.llvm::SmallVectorTemplateCommon.base" }
%"class.llvm::SmallVectorTemplateCommon.base" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.81" }>
%"struct.llvm::AlignedCharArrayUnion.81" = type { %"struct.llvm::AlignedCharArray.82" }
%"struct.llvm::AlignedCharArray.82" = type { [1 x i8] }
%"struct.llvm::SmallVectorStorage.83" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.81"] }
%"class.llvm::SmallVectorTemplateBase.79" = type { %"class.llvm::SmallVectorTemplateCommon.base", [7 x i8] }
%"class.llvm::SmallVectorImpl.78" = type { %"class.llvm::SmallVectorTemplateBase.base", [7 x i8] }
%"class.llvm::ErrorOr" = type { %union.anon.134, i8, [7 x i8] }
%union.anon.134 = type { %"struct.llvm::AlignedCharArrayUnion.136" }
%"struct.llvm::AlignedCharArrayUnion.136" = type { %"struct.llvm::AlignedCharArray" }
%"class.llvm::SmallVector.84" = type <{ %"class.llvm::SmallVectorImpl.73", %"struct.llvm::SmallVectorStorage.85", [7 x i8] }>
%"struct.llvm::SmallVectorStorage.85" = type { i8 }
%"class.llvm::MemoryBuffer" = type { i32 (...)**, i8*, i8* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.llvm::Optional" = type { %"struct.llvm::AlignedCharArrayUnion.87", i8, [7 x i8] }
%"struct.llvm::AlignedCharArrayUnion.87" = type { %"struct.llvm::AlignedCharArray.88" }
%"struct.llvm::AlignedCharArray.88" = type { [24 x i8] }
%"class.llvm::SmallVector.89" = type { %"class.llvm::SmallVectorImpl.73", %"struct.llvm::SmallVectorStorage.90" }
%"struct.llvm::SmallVectorStorage.90" = type { [19 x %"struct.llvm::AlignedCharArrayUnion.76"] }
%"struct.std::__1::pair.151" = type { %"class.llvm::StringRef", %"class.llvm::StringRef" }
%"class.llvm::SmallVector.123" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage.124" }
%"struct.llvm::SmallVectorStorage.124" = type { [15 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.141" = type { %"class.llvm::SmallVectorImpl.142", %"struct.llvm::SmallVectorStorage.146" }
%"class.llvm::SmallVectorImpl.142" = type { %"class.llvm::SmallVectorTemplateBase.143" }
%"class.llvm::SmallVectorTemplateBase.143" = type { %"class.llvm::SmallVectorTemplateCommon.144" }
%"class.llvm::SmallVectorTemplateCommon.144" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.145" }
%"struct.llvm::AlignedCharArrayUnion.145" = type { %"struct.llvm::AlignedCharArray.88" }
%"struct.llvm::SmallVectorStorage.146" = type { [3 x %"struct.llvm::AlignedCharArrayUnion.145"] }
%"struct.std::__1::pair.147" = type <{ %"class.llvm::StringRef", i32, [4 x i8] }>
%"struct.std::__1::pair.223" = type { i8*, i64 }
%"class.llvm::cl::alias" = type { %"class.llvm::cl::Option.base", %"class.llvm::cl::Option"* }
%"class.llvm::SmallString.152" = type { %"class.llvm::SmallVector.153" }
%"class.llvm::SmallVector.153" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage.154" }
%"struct.llvm::SmallVectorStorage.154" = type { [31 x %"struct.llvm::AlignedCharArrayUnion.81"] }
%"class.llvm::cl::generic_parser_base" = type { i32 (...)**, %"class.llvm::cl::Option"* }
%"class.llvm::raw_string_ostream" = type { %"class.llvm::raw_ostream.base", %"class.std::__1::basic_string"* }
%"class.llvm::raw_ostream.base" = type <{ i32 (...)**, i8*, i8*, i8*, i32 }>
%"struct.llvm::cl::OptionValue.91" = type { %"struct.llvm::cl::OptionValueBase.base.95", [7 x i8] }
%"struct.llvm::cl::OptionValueBase.base.95" = type { %"class.llvm::cl::OptionValueCopy.base.94" }
%"class.llvm::cl::OptionValueCopy.base.94" = type <{ %"struct.llvm::cl::GenericOptionValue", i64, i8 }>
%"struct.llvm::cl::OptionValue.96" = type { %"struct.llvm::cl::OptionValueBase.base.100", [7 x i8] }
%"struct.llvm::cl::OptionValueBase.base.100" = type { %"class.llvm::cl::OptionValueCopy.base.99" }
%"class.llvm::cl::OptionValueCopy.base.99" = type <{ %"struct.llvm::cl::GenericOptionValue", double, i8 }>
%"struct.llvm::cl::OptionValue.101" = type { %"struct.llvm::cl::OptionValueBase.base.105", [3 x i8] }
%"struct.llvm::cl::OptionValueBase.base.105" = type { %"class.llvm::cl::OptionValueCopy.base.104" }
%"class.llvm::cl::OptionValueCopy.base.104" = type <{ %"struct.llvm::cl::GenericOptionValue", float, i8 }>
%"struct.llvm::cl::desc" = type { %"class.llvm::StringRef" }
%"struct.llvm::cl::initializer" = type { i8* }
%"struct.llvm::cl::cat" = type { %"class.llvm::cl::OptionCategory"* }
%"struct.llvm::cl::sub" = type { %"class.llvm::cl::SubCommand"* }
%"class.llvm::SmallVector.155" = type { %"class.llvm::SmallVectorImpl.156", %"struct.llvm::SmallVectorStorage.160" }
%"class.llvm::SmallVectorImpl.156" = type { %"class.llvm::SmallVectorTemplateBase.157" }
%"class.llvm::SmallVectorTemplateBase.157" = type { %"class.llvm::SmallVectorTemplateCommon.158" }
%"class.llvm::SmallVectorTemplateCommon.158" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.159" }
%"struct.llvm::AlignedCharArrayUnion.159" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.160" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.159"] }
%"struct.std::__1::pair.161" = type { i8*, %"class.llvm::cl::Option"* }
%"struct.std::__1::pair.214" = type { i8*, %"class.llvm::cl::SubCommand"* }
%"class.llvm::SmallVector.208" = type { %"class.llvm::SmallVectorImpl.209", %"struct.llvm::SmallVectorStorage.213" }
%"class.llvm::SmallVectorImpl.209" = type { %"class.llvm::SmallVectorTemplateBase.210" }
%"class.llvm::SmallVectorTemplateBase.210" = type { %"class.llvm::SmallVectorTemplateCommon.211" }
%"class.llvm::SmallVectorTemplateCommon.211" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.212" }
%"struct.llvm::AlignedCharArrayUnion.212" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.213" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.212"] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.llvm::iterator_range" = type { %"class.llvm::SmallPtrSetIterator", %"class.llvm::SmallPtrSetIterator" }
%"class.llvm::cl::OptionValueCopy.40" = type <{ %"struct.llvm::cl::GenericOptionValue", i32, i8, [3 x i8] }>
%"class.llvm::cl::OptionValueCopy.20" = type <{ %"struct.llvm::cl::GenericOptionValue", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"struct.std::__1::pair.122" = type { %"class.llvm::StringRef", %"class.llvm::cl::Option"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.llvm::cl::OptionCategory"** }
%"class.std::__1::tuple.191" = type { i8 }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"**, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.llvm::cl::OptionCategory"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.192" }
%"struct.std::__1::pair.192" = type { %"class.llvm::cl::OptionCategory"*, %"class.std::__1::vector.178" }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"**, %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.llvm::cl::Option"** }
%"class.llvm::SmallPtrSet.202" = type { %"class.llvm::SmallPtrSetImpl.base.204", [32 x i8*] }
%"class.llvm::SmallPtrSetImpl.base.204" = type { %"class.llvm::SmallPtrSetImplBase.base" }
%"struct.std::__1::pair.205" = type <{ %"class.llvm::SmallPtrSetIterator.206", i8, [7 x i8] }>
%"class.llvm::SmallPtrSetIterator.206" = type { %"class.llvm::SmallPtrSetIteratorImpl" }
%"class.llvm::SmallPtrSetImpl.203" = type { %"class.llvm::SmallPtrSetImplBase.base", [4 x i8] }
%"class.llvm::cl::OptionValueCopy" = type <{ %"struct.llvm::cl::GenericOptionValue", i32, i8, [3 x i8] }>
%"class.llvm::cl::OptionValueCopy.12" = type <{ %"struct.llvm::cl::GenericOptionValue", i32, i8, [3 x i8] }>
%"class.llvm::cl::OptionValueCopy.27" = type <{ %"struct.llvm::cl::GenericOptionValue", i8, i8, [6 x i8] }>
%"class.llvm::cl::OptionValueCopy.35" = type <{ %"struct.llvm::cl::GenericOptionValue", i8, i8, [6 x i8] }>
%"struct.std::__1::__split_buffer.220" = type { %"class.llvm::StringRef"*, %"class.llvm::StringRef"*, %"class.llvm::StringRef"*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::allocator.49"* }
%"class.std::__1::allocator.49" = type { i8 }
%"struct.llvm::cl::LocationClass" = type { %"class.(anonymous namespace)::HelpPrinter"* }
%"struct.llvm::cl::LocationClass.114" = type { %"class.(anonymous namespace)::HelpPrinterWrapper"* }

$_ZN4llvm2cl12basic_parserIbEC5ERNS0_6OptionE = comdat any

$_ZN4llvm2cl12basic_parserINS0_13boolOrDefaultEEC5ERNS0_6OptionE = comdat any

$_ZN4llvm2cl12basic_parserIiEC5ERNS0_6OptionE = comdat any

$_ZN4llvm2cl12basic_parserIjEC5ERNS0_6OptionE = comdat any

$_ZN4llvm2cl12basic_parserIyEC5ERNS0_6OptionE = comdat any

$_ZN4llvm2cl12basic_parserIdEC5ERNS0_6OptionE = comdat any

$_ZN4llvm2cl12basic_parserIfEC5ERNS0_6OptionE = comdat any

$_ZN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC5ERNS0_6OptionE = comdat any

$_ZN4llvm2cl12basic_parserIcEC5ERNS0_6OptionE = comdat any

$_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE16handleOccurrenceEjNS_9StringRefES5_ = comdat any

$_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE27getValueExpectedFlagDefaultEv = comdat any

$_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE = comdat any

$_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE14getOptionWidthEv = comdat any

$_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE15printOptionInfoEm = comdat any

$_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE16printOptionValueEmb = comdat any

$_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE4doneEv = comdat any

$_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE15setInitialValueERKj = comdat any

$_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE9getParserEv = comdat any

$_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE16handleOccurrenceEjNS_9StringRefES5_ = comdat any

$_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE27getValueExpectedFlagDefaultEv = comdat any

$_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE = comdat any

$_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE14getOptionWidthEv = comdat any

$_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE15printOptionInfoEm = comdat any

$_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE16printOptionValueEmb = comdat any

$_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE4doneEv = comdat any

$_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE15setInitialValueERKi = comdat any

$_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE9getParserEv = comdat any

$_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE16handleOccurrenceEjNS_9StringRefESC_ = comdat any

$_ZN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5parseERNS0_6OptionENS_9StringRefESC_RS8_ = comdat any

$_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE27getValueExpectedFlagDefaultEv = comdat any

$_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE = comdat any

$_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE14getOptionWidthEv = comdat any

$_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE15printOptionInfoEm = comdat any

$_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE16printOptionValueEmb = comdat any

$_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE4doneEv = comdat any

$_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE15setInitialValueERKS8_ = comdat any

$_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE9getParserEv = comdat any

$_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE16handleOccurrenceEjNS_9StringRefES5_ = comdat any

$_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE27getValueExpectedFlagDefaultEv = comdat any

$_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE = comdat any

$_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE14getOptionWidthEv = comdat any

$_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE15printOptionInfoEm = comdat any

$_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE16printOptionValueEmb = comdat any

$_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE4doneEv = comdat any

$_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE15setInitialValueERKc = comdat any

$_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE9getParserEv = comdat any

$_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE16handleOccurrenceEjNS_9StringRefES5_ = comdat any

$_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE27getValueExpectedFlagDefaultEv = comdat any

$_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE = comdat any

$_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE14getOptionWidthEv = comdat any

$_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE15printOptionInfoEm = comdat any

$_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE16printOptionValueEmb = comdat any

$_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE4doneEv = comdat any

$_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE15setInitialValueERKb = comdat any

$_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE9getParserEv = comdat any

$_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE5clearEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_ = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc = comdat any

$_ZN4llvm15SmallVectorImplIPKcE6insertIPS2_EES5_S5_T_S6_ = comdat any

$_ZN4llvm11StringSaver4saveEPKc = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev = comdat any

$_ZN4llvm11raw_ostreamlsENS_9StringRefE = comdat any

$_ZN4llvm11raw_ostreamlsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = comdat any

$_ZN4llvm11raw_ostreamlsEPKc = comdat any

$_ZN4llvm2cl6OptionD2Ev = comdat any

$_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA14_cNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEDpRKT_ = comdat any

$_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA18_cNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEDpRKT_ = comdat any

$_ZNK4llvm2cl6Option27getValueExpectedFlagDefaultEv = comdat any

$_ZN4llvm2cl6OptionD0Ev = comdat any

$_ZN4llvm2cl6Option19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE = comdat any

$_ZNK4llvm2cl15OptionValueCopyINS0_13boolOrDefaultEE7compareERKNS0_18GenericOptionValueE = comdat any

$_ZNK4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7compareERKNS0_18GenericOptionValueE = comdat any

$_ZN4llvm2cl19generic_parser_baseD2Ev = comdat any

$_ZN4llvm2cl19generic_parser_baseD0Ev = comdat any

$_ZNK4llvm2cl17basic_parser_impl12getValueNameEv = comdat any

$_ZNK4llvm2cl6parserIbE12getValueNameEv = comdat any

$_ZNK4llvm2cl6parserINS0_13boolOrDefaultEE12getValueNameEv = comdat any

$_ZNK4llvm2cl6parserIiE12getValueNameEv = comdat any

$_ZNK4llvm2cl6parserIjE12getValueNameEv = comdat any

$_ZNK4llvm2cl6parserIyE12getValueNameEv = comdat any

$_ZNK4llvm2cl6parserIdE12getValueNameEv = comdat any

$_ZNK4llvm2cl6parserIfE12getValueNameEv = comdat any

$_ZNK4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12getValueNameEv = comdat any

$_ZNK4llvm2cl6parserIcE12getValueNameEv = comdat any

$_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED0Ev = comdat any

$_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEED0Ev = comdat any

$_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEED2Ev = comdat any

$_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEED0Ev = comdat any

$_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEED0Ev = comdat any

$_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev = comdat any

$_ZN4llvm2cl5alias16handleOccurrenceEjNS_9StringRefES2_ = comdat any

$_ZNK4llvm2cl5alias27getValueExpectedFlagDefaultEv = comdat any

$_ZN4llvm2cl5aliasD0Ev = comdat any

$_ZNK4llvm2cl5alias16printOptionValueEmb = comdat any

$_ZN4llvm2cl5alias13addOccurrenceEjNS_9StringRefES2_b = comdat any

$_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE11try_emplaceIJS3_EEENSt3__14pairINS_17StringMapIteratorIS3_EEbEENS_9StringRefEDpOT_ = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl6OptionELb1EE9push_backERKS3_ = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_ = comdat any

$_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE5eraseENS_9StringRefE = comdat any

$_ZN4llvm6any_ofIRKNS_11SmallPtrSetIPNS_2cl10SubCommandELj4EEEZNKS2_6Option18isInAllSubCommandsEvEUlPKS3_E_EEbOT_T0_ = comdat any

$_ZN4llvm15SmallPtrSetImplIPNS_2cl14OptionCategoryEE6insertES3_ = comdat any

$_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv = comdat any

$_ZN4llvm15SmallPtrSetImplIPNS_2cl10SubCommandEE6insertES3_ = comdat any

$_ZN4llvm15SmallVectorImplIcE6appendEmRKc = comdat any

$_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_ = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairINS_9StringRefEjEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm15SmallVectorImplIPKcE6appendIPKS2_EEvT_S7_ = comdat any

$_ZNK4llvm9StringRef5splitEc = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__tree_iteratorISC_PNS_11__tree_nodeISC_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSN_SN_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE = comdat any

$_ZN4llvm15SmallPtrSetImplIPNS_2cl6OptionEE6insertES3_ = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPKcPNS_2cl6OptionEEELb1EE9push_backERKS8_ = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPKcPNS_2cl10SubCommandEEELb1EE9push_backERKS8_ = comdat any

$_ZN4llvm19SmallPtrSetImplBase5clearEv = comdat any

$_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv = comdat any

$_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv = comdat any

$_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEED2Ev = comdat any

$_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE = comdat any

$_ZNK4llvm2cl15OptionValueCopyIiE7compareERKNS0_18GenericOptionValueE = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_ = comdat any

$_ZNK4llvm2cl15OptionValueCopyIcE7compareERKNS0_18GenericOptionValueE = comdat any

$_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE = comdat any

$_ZNSt3__16vectorIN4llvm9StringRefENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__114__split_bufferIN4llvm9StringRefERNS_9allocatorIS2_EEEC2EmmS5_ = comdat any

$_ZN4llvm15SmallVectorImplIPKcE6appendIPS2_EEvT_S6_ = comdat any

$_ZN4llvm15SmallVectorImplIPKcE6appendINSt3__113move_iteratorIPS2_EEEEvT_S9_ = comdat any

$_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEEA14_cJNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_ = comdat any

$_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEENS0_12OptionHiddenEJNS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_ = comdat any

$_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEEA18_cJNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_ = comdat any

$_ZTVN4llvm2cl12basic_parserIbEE = comdat any

$_ZTVN4llvm2cl12basic_parserINS0_13boolOrDefaultEEE = comdat any

$_ZTVN4llvm2cl12basic_parserIiEE = comdat any

$_ZTVN4llvm2cl12basic_parserIjEE = comdat any

$_ZTVN4llvm2cl12basic_parserIyEE = comdat any

$_ZTVN4llvm2cl12basic_parserIdEE = comdat any

$_ZTVN4llvm2cl12basic_parserIfEE = comdat any

$_ZTVN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = comdat any

$_ZTVN4llvm2cl12basic_parserIcEE = comdat any

$_ZTVN4llvm2cl3optIjLb0ENS0_6parserIjEEEE = comdat any

$_ZTVN4llvm2cl3optIiLb0ENS0_6parserIiEEEE = comdat any

$_ZTVN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEEE = comdat any

$_ZTVN4llvm2cl3optIcLb0ENS0_6parserIcEEEE = comdat any

$_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE = comdat any

$_ZTVN4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = comdat any

$_ZTVN4llvm2cl11OptionValueIjEE = comdat any

$_ZTVN4llvm2cl11OptionValueIiEE = comdat any

$_ZTVN4llvm2cl11OptionValueIcEE = comdat any

$_ZTVN4llvm2cl11OptionValueIbEE = comdat any

@_ZTVN4llvm2cl12basic_parserIbEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl12basic_parserINS0_13boolOrDefaultEEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl12basic_parserIiEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl12basic_parserIjEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl12basic_parserIyEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl12basic_parserIdEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl12basic_parserIfEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl12basic_parserIcEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, comdat, align 8
@_ZN4llvm2cl15GeneralCategoryE = hidden global %"class.llvm::cl::OptionCategory" zeroinitializer, align 8
@.str = private unnamed_addr constant [16 x i8] c"General options\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN4llvm2cl18TopLevelSubCommandE = hidden global { { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* } zeroinitializer, align 8
@_ZN4llvm2cl14AllSubCommandsE = hidden global { { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* } zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c": for the -\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c" option: \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"may only occur zero or one times!\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"must occur exactly one time!\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"  -\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"=<\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"TRUE\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"True\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"FALSE\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"False\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.18 = private unnamed_addr constant [52 x i8] c"' is invalid value for boolean argument! Try 0 or 1\00", align 1
@.str.19 = private unnamed_addr constant [38 x i8] c"' value invalid for integer argument!\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"' value invalid for uint argument!\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"    =\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c" -   \00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"    -\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"= \00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c" (default: \00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.28 = private unnamed_addr constant [26 x i8] c"= *unknown option value*\0A\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"*no default*\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"= *cannot print option value*\0A\00", align 1
@_ZL26UncategorizedNormalPrinter = internal global %"class.(anonymous namespace)::HelpPrinter" zeroinitializer, align 8
@__dso_handle = external hidden global i8
@_ZL26UncategorizedHiddenPrinter = internal global %"class.(anonymous namespace)::HelpPrinter" zeroinitializer, align 8
@_ZL24CategorizedNormalPrinter = internal global %"class.(anonymous namespace)::CategorizedHelpPrinter" zeroinitializer, align 8
@_ZL24CategorizedHiddenPrinter = internal global %"class.(anonymous namespace)::CategorizedHelpPrinter" zeroinitializer, align 8
@_ZL20WrappedNormalPrinter = internal global %"class.(anonymous namespace)::HelpPrinterWrapper" zeroinitializer, align 8
@_ZL20WrappedHiddenPrinter = internal global %"class.(anonymous namespace)::HelpPrinterWrapper" zeroinitializer, align 8
@_ZL15GenericCategory = internal global %"class.llvm::cl::OptionCategory" zeroinitializer, align 8
@.str.38 = private unnamed_addr constant [16 x i8] c"Generic Options\00", align 1
@_ZL4HLOp = internal global %"class.llvm::cl::opt.106" zeroinitializer, align 8
@.str.40 = private unnamed_addr constant [10 x i8] c"help-list\00", align 1
@.str.41 = private unnamed_addr constant [63 x i8] c"Display list of available options (-help-list-hidden for more)\00", align 1
@_ZL5HLHOp = internal global %"class.llvm::cl::opt.106" zeroinitializer, align 8
@.str.43 = private unnamed_addr constant [17 x i8] c"help-list-hidden\00", align 1
@.str.44 = private unnamed_addr constant [38 x i8] c"Display list of all available options\00", align 1
@_ZL3HOp = internal global %"class.llvm::cl::opt.110" zeroinitializer, align 8
@.str.46 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.47 = private unnamed_addr constant [50 x i8] c"Display available options (-help-hidden for more)\00", align 1
@_ZL4HHOp = internal global %"class.llvm::cl::opt.110" zeroinitializer, align 8
@.str.49 = private unnamed_addr constant [12 x i8] c"help-hidden\00", align 1
@.str.50 = private unnamed_addr constant [30 x i8] c"Display all available options\00", align 1
@_ZL12PrintOptions = internal global %"class.llvm::cl::opt.31" zeroinitializer, align 8
@.str.52 = private unnamed_addr constant [14 x i8] c"print-options\00", align 1
@.str.53 = private unnamed_addr constant [53 x i8] c"Print non-default options after command line parsing\00", align 1
@_ZL15PrintAllOptions = internal global %"class.llvm::cl::opt.31" zeroinitializer, align 8
@.str.55 = private unnamed_addr constant [18 x i8] c"print-all-options\00", align 1
@.str.56 = private unnamed_addr constant [51 x i8] c"Print all option values after command line parsing\00", align 1
@_ZL20ExtraVersionPrinters = internal unnamed_addr global %"class.std::__1::vector.115"* null, align 8
@_ZTVN4llvm2cl6OptionE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.llvm::cl::Option"*)* @_ZNK4llvm2cl6Option27getValueExpectedFlagDefaultEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6Option6anchorEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)* @_ZN4llvm2cl6Option19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE to i8*), i8* bitcast (i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)* @_ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b to i8*)] }, align 8
@_ZTVN4llvm2cl18GenericOptionValueE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.llvm::cl::GenericOptionValue"*)* @_ZN4llvm2cl18GenericOptionValue6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl11OptionValueINS0_13boolOrDefaultEEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::OptionValueCopy.40"*, %"struct.llvm::cl::GenericOptionValue"*)* @_ZNK4llvm2cl15OptionValueCopyINS0_13boolOrDefaultEE7compareERKNS0_18GenericOptionValueE to i8*), i8* bitcast (void (%"struct.llvm::cl::OptionValue.39"*)* @_ZN4llvm2cl11OptionValueINS0_13boolOrDefaultEE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::OptionValueCopy.20"*, %"struct.llvm::cl::GenericOptionValue"*)* @_ZNK4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7compareERKNS0_18GenericOptionValueE to i8*), i8* bitcast (void (%"struct.llvm::cl::OptionValue.19"*)* @_ZN4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl19generic_parser_baseE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.llvm::cl::generic_parser_base"*)* @_ZN4llvm2cl19generic_parser_baseD2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::generic_parser_base"*)* @_ZN4llvm2cl19generic_parser_baseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.llvm::cl::generic_parser_base"*, %"class.llvm::cl::Option"*)* @_ZNK4llvm2cl19generic_parser_base14getOptionWidthERKNS0_6OptionE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.llvm::cl::generic_parser_base"*, %"class.llvm::cl::Option"*, i64)* @_ZNK4llvm2cl19generic_parser_base15printOptionInfoERKNS0_6OptionEm to i8*)] }, align 8
@_ZTVN4llvm2cl17basic_parser_implE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)* @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::basic_parser_impl"*)* @_ZN4llvm2cl17basic_parser_impl6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl6parserIbEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::parser.38"*)* @_ZNK4llvm2cl6parserIbE12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::parser.38"*)* @_ZN4llvm2cl6parserIbE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl6parserINS0_13boolOrDefaultEEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::parser.42"*)* @_ZNK4llvm2cl6parserINS0_13boolOrDefaultEE12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::parser.42"*)* @_ZN4llvm2cl6parserINS0_13boolOrDefaultEE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl6parserIiEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::parser.15"*)* @_ZNK4llvm2cl6parserIiE12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::parser.15"*)* @_ZN4llvm2cl6parserIiE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl6parserIjEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::parser"*)* @_ZNK4llvm2cl6parserIjE12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::parser"*)* @_ZN4llvm2cl6parserIjE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl6parserIyEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::parser.43"*)* @_ZNK4llvm2cl6parserIyE12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::parser.43"*)* @_ZN4llvm2cl6parserIyE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl6parserIdEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::parser.44"*)* @_ZNK4llvm2cl6parserIdE12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::parser.44"*)* @_ZN4llvm2cl6parserIdE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl6parserIfEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::parser.45"*)* @_ZNK4llvm2cl6parserIfE12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::parser.45"*)* @_ZN4llvm2cl6parserIfE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::parser.22"*)* @_ZNK4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::parser.22"*)* @_ZN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl6parserIcEE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast ({ i8*, i64 } (%"class.llvm::cl::parser.30"*)* @_ZNK4llvm2cl6parserIcE12getValueNameEv to i8*), i8* bitcast (void (%"class.llvm::cl::parser.30"*)* @_ZN4llvm2cl6parserIcE6anchorEv to i8*)] }, align 8
@_ZTVN4llvm2cl3optIjLb0ENS0_6parserIjEEEE = weak_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::opt"*, i32, i8*, i64, i8*, i64)* @_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE16handleOccurrenceEjNS_9StringRefES5_ to i8*), i8* bitcast (i32 (%"class.llvm::cl::opt"*)* @_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE27getValueExpectedFlagDefaultEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6Option6anchorEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::opt"*)* @_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED0Ev to i8*), i8* bitcast (i64 (%"class.llvm::cl::opt"*)* @_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE14getOptionWidthEv to i8*), i8* bitcast (void (%"class.llvm::cl::opt"*, i64)* @_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE15printOptionInfoEm to i8*), i8* bitcast (void (%"class.llvm::cl::opt"*, i64, i1)* @_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE16printOptionValueEmb to i8*), i8* bitcast (void (%"class.llvm::cl::opt"*, %"class.llvm::SmallVectorImpl"*)* @_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE to i8*), i8* bitcast (i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)* @_ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl3optIiLb0ENS0_6parserIiEEEE = weak_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::opt.8"*, i32, i8*, i64, i8*, i64)* @_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE16handleOccurrenceEjNS_9StringRefES5_ to i8*), i8* bitcast (i32 (%"class.llvm::cl::opt.8"*)* @_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE27getValueExpectedFlagDefaultEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6Option6anchorEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::opt.8"*)* @_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEED0Ev to i8*), i8* bitcast (i64 (%"class.llvm::cl::opt.8"*)* @_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE14getOptionWidthEv to i8*), i8* bitcast (void (%"class.llvm::cl::opt.8"*, i64)* @_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE15printOptionInfoEm to i8*), i8* bitcast (void (%"class.llvm::cl::opt.8"*, i64, i1)* @_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE16printOptionValueEmb to i8*), i8* bitcast (void (%"class.llvm::cl::opt.8"*, %"class.llvm::SmallVectorImpl"*)* @_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE to i8*), i8* bitcast (i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)* @_ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEEE = weak_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::opt.16"*, i32, i8*, i64, i8*, i64)* @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE16handleOccurrenceEjNS_9StringRefESC_ to i8*), i8* bitcast (i32 (%"class.llvm::cl::opt.16"*)* @_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE27getValueExpectedFlagDefaultEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6Option6anchorEv to i8*), i8* bitcast (void (%"class.llvm::cl::opt.16"*)* @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEED2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::opt.16"*)* @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEED0Ev to i8*), i8* bitcast (i64 (%"class.llvm::cl::opt.16"*)* @_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE14getOptionWidthEv to i8*), i8* bitcast (void (%"class.llvm::cl::opt.16"*, i64)* @_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE15printOptionInfoEm to i8*), i8* bitcast (void (%"class.llvm::cl::opt.16"*, i64, i1)* @_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE16printOptionValueEmb to i8*), i8* bitcast (void (%"class.llvm::cl::opt.16"*, %"class.llvm::SmallVectorImpl"*)* @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE to i8*), i8* bitcast (i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)* @_ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl3optIcLb0ENS0_6parserIcEEEE = weak_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::opt.23"*, i32, i8*, i64, i8*, i64)* @_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE16handleOccurrenceEjNS_9StringRefES5_ to i8*), i8* bitcast (i32 (%"class.llvm::cl::opt.23"*)* @_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE27getValueExpectedFlagDefaultEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6Option6anchorEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::opt.23"*)* @_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEED0Ev to i8*), i8* bitcast (i64 (%"class.llvm::cl::opt.23"*)* @_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE14getOptionWidthEv to i8*), i8* bitcast (void (%"class.llvm::cl::opt.23"*, i64)* @_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE15printOptionInfoEm to i8*), i8* bitcast (void (%"class.llvm::cl::opt.23"*, i64, i1)* @_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE16printOptionValueEmb to i8*), i8* bitcast (void (%"class.llvm::cl::opt.23"*, %"class.llvm::SmallVectorImpl"*)* @_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE to i8*), i8* bitcast (i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)* @_ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE = weak_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::opt.31"*, i32, i8*, i64, i8*, i64)* @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE16handleOccurrenceEjNS_9StringRefES5_ to i8*), i8* bitcast (i32 (%"class.llvm::cl::opt.31"*)* @_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE27getValueExpectedFlagDefaultEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6Option6anchorEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::opt.31"*)* @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev to i8*), i8* bitcast (i64 (%"class.llvm::cl::opt.31"*)* @_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE14getOptionWidthEv to i8*), i8* bitcast (void (%"class.llvm::cl::opt.31"*, i64)* @_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE15printOptionInfoEm to i8*), i8* bitcast (void (%"class.llvm::cl::opt.31"*, i64, i1)* @_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE16printOptionValueEmb to i8*), i8* bitcast (void (%"class.llvm::cl::opt.31"*, %"class.llvm::SmallVectorImpl"*)* @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE to i8*), i8* bitcast (i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)* @_ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl5aliasE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::alias"*, i32, i8*, i64, i8*, i64)* @_ZN4llvm2cl5alias16handleOccurrenceEjNS_9StringRefES2_ to i8*), i8* bitcast (i32 (%"class.llvm::cl::alias"*)* @_ZNK4llvm2cl5alias27getValueExpectedFlagDefaultEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6Option6anchorEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::alias"*)* @_ZN4llvm2cl5aliasD0Ev to i8*), i8* bitcast (i64 (%"class.llvm::cl::alias"*)* @_ZNK4llvm2cl5alias14getOptionWidthEv to i8*), i8* bitcast (void (%"class.llvm::cl::alias"*, i64)* @_ZNK4llvm2cl5alias15printOptionInfoEm to i8*), i8* bitcast (void (%"class.llvm::cl::alias"*, i64, i1)* @_ZNK4llvm2cl5alias16printOptionValueEmb to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)* @_ZN4llvm2cl6Option19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE to i8*), i8* bitcast (i1 (%"class.llvm::cl::alias"*, i32, i8*, i64, i8*, i64, i1)* @_ZN4llvm2cl5alias13addOccurrenceEjNS_9StringRefES2_b to i8*)] }, align 8
@_ZL12GlobalParser = internal global { { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* } zeroinitializer, align 8
@.str.59 = private unnamed_addr constant [30 x i8] c": CommandLine Error: Option '\00", align 1
@.str.60 = private unnamed_addr constant [30 x i8] c"' registered more than once!\0A\00", align 1
@.str.61 = private unnamed_addr constant [48 x i8] c"inconsistency in registered CommandLine options\00", align 1
@.str.62 = private unnamed_addr constant [59 x i8] c"Cannot specify more than one option with cl::ConsumeAfter!\00", align 1
@.str.64 = private unnamed_addr constant [132 x i8] c"error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!\00", align 1
@.str.65 = private unnamed_addr constant [152 x i8] c"error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!\00", align 1
@.str.66 = private unnamed_addr constant [21 x i8] c"' is all messed up!\0A\00", align 1
@.str.67 = private unnamed_addr constant [34 x i8] c": Unknown command line argument '\00", align 1
@.str.68 = private unnamed_addr constant [11 x i8] c"'.  Try: '\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c" -help'\0A\00", align 1
@.str.70 = private unnamed_addr constant [18 x i8] c": Did you mean '-\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"'?\0A\00", align 1
@.str.72 = private unnamed_addr constant [59 x i8] c": Not enough positional command line arguments specified!\0A\00", align 1
@.str.73 = private unnamed_addr constant [23 x i8] c"Must specify at least \00", align 1
@.str.74 = private unnamed_addr constant [21 x i8] c" positional argument\00", align 1
@.str.75 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c": See: \00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c" - help\0A\00", align 1
@.str.78 = private unnamed_addr constant [44 x i8] c": Too many positional arguments specified!\0A\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"Can specify at most \00", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c" positional arguments: See: \00", align 1
@.str.81 = private unnamed_addr constant [8 x i8] c" -help\0A\00", align 1
@.str.82 = private unnamed_addr constant [33 x i8] c"must be specified at least once!\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.84 = private unnamed_addr constant [18 x i8] c"requires a value!\00", align 1
@.str.85 = private unnamed_addr constant [61 x i8] c"multi-valued option specified with ValueDisallowed modifier!\00", align 1
@.str.86 = private unnamed_addr constant [26 x i8] c"does not allow a value! '\00", align 1
@.str.87 = private unnamed_addr constant [13 x i8] c"' specified.\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"not enough values!\00", align 1
@.str.89 = private unnamed_addr constant [4 x i8] c" - \00", align 1
@.str.90 = private unnamed_addr constant [45 x i8] c"' value invalid for floating point argument!\00", align 1
@_ZTVN4llvm18raw_string_ostreamE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN12_GLOBAL__N_111HelpPrinterE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::HelpPrinter"*, %"class.llvm::SmallVector.155"*, i64)* @_ZN12_GLOBAL__N_111HelpPrinter12printOptionsERN4llvm11SmallVectorINSt3__14pairIPKcPNS1_2cl6OptionEEELj128EEEm to i8*), i8* bitcast (void (%"class.(anonymous namespace)::HelpPrinter"*)* @_ZN12_GLOBAL__N_111HelpPrinterD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::HelpPrinter"*)* @_ZN12_GLOBAL__N_111HelpPrinterD0Ev to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_122CategorizedHelpPrinterE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CategorizedHelpPrinter"*, %"class.llvm::SmallVector.155"*, i64)* @_ZN12_GLOBAL__N_122CategorizedHelpPrinter12printOptionsERN4llvm11SmallVectorINSt3__14pairIPKcPNS1_2cl6OptionEEELj128EEEm to i8*), i8* bitcast (void (%"class.(anonymous namespace)::HelpPrinter"*)* @_ZN12_GLOBAL__N_111HelpPrinterD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CategorizedHelpPrinter"*)* @_ZN12_GLOBAL__N_122CategorizedHelpPrinterD0Ev to i8*)] }, align 8
@.str.91 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.92 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.93 = private unnamed_addr constant [40 x i8] c"  This option category has no options.\0A\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.94 = private unnamed_addr constant [11 x i8] c"OVERVIEW: \00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"USAGE: \00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c" [subcommand]\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c" [options]\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"SUBCOMMAND '\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"': \00", align 1
@.str.100 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c" --\00", align 1
@.str.102 = private unnamed_addr constant [15 x i8] c"SUBCOMMANDS:\0A\0A\00", align 1
@.str.103 = private unnamed_addr constant [9 x i8] c"  Type \22\00", align 1
@.str.104 = private unnamed_addr constant [63 x i8] c" <subcommand> -help\22 to get more help on a specific subcommand\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"OPTIONS:\0A\00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.111 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@_ZTVN4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::OptionValueCopy.20"*, %"struct.llvm::cl::GenericOptionValue"*)* @_ZNK4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7compareERKNS0_18GenericOptionValueE to i8*), i8* bitcast (void (%"struct.llvm::cl::GenericOptionValue"*)* @_ZN4llvm2cl18GenericOptionValue6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl11OptionValueIjEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::OptionValueCopy"*, %"struct.llvm::cl::GenericOptionValue"*)* @_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE to i8*), i8* bitcast (void (%"struct.llvm::cl::GenericOptionValue"*)* @_ZN4llvm2cl18GenericOptionValue6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl11OptionValueIiEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::OptionValueCopy.12"*, %"struct.llvm::cl::GenericOptionValue"*)* @_ZNK4llvm2cl15OptionValueCopyIiE7compareERKNS0_18GenericOptionValueE to i8*), i8* bitcast (void (%"struct.llvm::cl::GenericOptionValue"*)* @_ZN4llvm2cl18GenericOptionValue6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl11OptionValueIcEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::OptionValueCopy.27"*, %"struct.llvm::cl::GenericOptionValue"*)* @_ZNK4llvm2cl15OptionValueCopyIcE7compareERKNS0_18GenericOptionValueE to i8*), i8* bitcast (void (%"struct.llvm::cl::GenericOptionValue"*)* @_ZN4llvm2cl18GenericOptionValue6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl11OptionValueIbEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::OptionValueCopy.35"*, %"struct.llvm::cl::GenericOptionValue"*)* @_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE to i8*), i8* bitcast (void (%"struct.llvm::cl::GenericOptionValue"*)* @_ZN4llvm2cl18GenericOptionValue6anchorEv to i8*)] }, comdat, align 8
@_ZTVN4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEE = internal unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::opt.106"*, i32, i8*, i64, i8*, i64)* @_ZN4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE16handleOccurrenceEjNS_9StringRefES7_ to i8*), i8* bitcast (i32 (%"class.llvm::cl::opt.106"*)* @_ZNK4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE27getValueExpectedFlagDefaultEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6Option6anchorEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::opt.106"*)* @_ZN4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEED0Ev to i8*), i8* bitcast (i64 (%"class.llvm::cl::opt.106"*)* @_ZNK4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE14getOptionWidthEv to i8*), i8* bitcast (void (%"class.llvm::cl::opt.106"*, i64)* @_ZNK4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE15printOptionInfoEm to i8*), i8* bitcast (void (%"class.llvm::cl::opt.106"*, i64, i1)* @_ZNK4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE16printOptionValueEmb to i8*), i8* bitcast (void (%"class.llvm::cl::opt.106"*, %"class.llvm::SmallVectorImpl"*)* @_ZN4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE to i8*), i8* bitcast (i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)* @_ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b to i8*)] }, align 8
@_ZTVN4llvm2cl11OptionValueIN12_GLOBAL__N_111HelpPrinterEEE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.llvm::cl::OptionValueBase.109"*, %"struct.llvm::cl::GenericOptionValue"*)* @_ZNK4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111HelpPrinterELb1EE7compareERKNS0_18GenericOptionValueE to i8*), i8* bitcast (void (%"struct.llvm::cl::GenericOptionValue"*)* @_ZN4llvm2cl18GenericOptionValue6anchorEv to i8*)] }, align 8
@.str.112 = private unnamed_addr constant [42 x i8] c"cl::location(x) specified more than once!\00", align 1
@_ZTVN4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEEE = internal unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.llvm::cl::opt.110"*, i32, i8*, i64, i8*, i64)* @_ZN4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE16handleOccurrenceEjNS_9StringRefES7_ to i8*), i8* bitcast (i32 (%"class.llvm::cl::opt.110"*)* @_ZNK4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE27getValueExpectedFlagDefaultEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6Option6anchorEv to i8*), i8* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to i8*), i8* bitcast (void (%"class.llvm::cl::opt.110"*)* @_ZN4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEED0Ev to i8*), i8* bitcast (i64 (%"class.llvm::cl::opt.110"*)* @_ZNK4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE14getOptionWidthEv to i8*), i8* bitcast (void (%"class.llvm::cl::opt.110"*, i64)* @_ZNK4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE15printOptionInfoEm to i8*), i8* bitcast (void (%"class.llvm::cl::opt.110"*, i64, i1)* @_ZNK4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE16printOptionValueEmb to i8*), i8* bitcast (void (%"class.llvm::cl::opt.110"*, %"class.llvm::SmallVectorImpl"*)* @_ZN4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE to i8*), i8* bitcast (i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)* @_ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b to i8*)] }, align 8
@_ZTVN4llvm2cl11OptionValueIN12_GLOBAL__N_118HelpPrinterWrapperEEE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.llvm::cl::OptionValueBase.113"*, %"struct.llvm::cl::GenericOptionValue"*)* @_ZNK4llvm2cl15OptionValueBaseIN12_GLOBAL__N_118HelpPrinterWrapperELb1EE7compareERKNS0_18GenericOptionValueE to i8*), i8* bitcast (void (%"struct.llvm::cl::GenericOptionValue"*)* @_ZN4llvm2cl18GenericOptionValue6anchorEv to i8*)] }, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_CommandLine.cpp, i8* null }]

@_ZN4llvm2cl12basic_parserIbEC1ERNS0_6OptionE = weak_odr hidden unnamed_addr alias void (%"class.llvm::cl::basic_parser"*, %"class.llvm::cl::Option"*), void (%"class.llvm::cl::basic_parser"*, %"class.llvm::cl::Option"*)* @_ZN4llvm2cl12basic_parserIbEC2ERNS0_6OptionE
@_ZN4llvm2cl12basic_parserINS0_13boolOrDefaultEEC1ERNS0_6OptionE = weak_odr hidden unnamed_addr alias void (%"class.llvm::cl::basic_parser.0"*, %"class.llvm::cl::Option"*), void (%"class.llvm::cl::basic_parser.0"*, %"class.llvm::cl::Option"*)* @_ZN4llvm2cl12basic_parserINS0_13boolOrDefaultEEC2ERNS0_6OptionE
@_ZN4llvm2cl12basic_parserIiEC1ERNS0_6OptionE = weak_odr hidden unnamed_addr alias void (%"class.llvm::cl::basic_parser.1"*, %"class.llvm::cl::Option"*), void (%"class.llvm::cl::basic_parser.1"*, %"class.llvm::cl::Option"*)* @_ZN4llvm2cl12basic_parserIiEC2ERNS0_6OptionE
@_ZN4llvm2cl12basic_parserIjEC1ERNS0_6OptionE = weak_odr hidden unnamed_addr alias void (%"class.llvm::cl::basic_parser.2"*, %"class.llvm::cl::Option"*), void (%"class.llvm::cl::basic_parser.2"*, %"class.llvm::cl::Option"*)* @_ZN4llvm2cl12basic_parserIjEC2ERNS0_6OptionE
@_ZN4llvm2cl12basic_parserIyEC1ERNS0_6OptionE = weak_odr hidden unnamed_addr alias void (%"class.llvm::cl::basic_parser.3"*, %"class.llvm::cl::Option"*), void (%"class.llvm::cl::basic_parser.3"*, %"class.llvm::cl::Option"*)* @_ZN4llvm2cl12basic_parserIyEC2ERNS0_6OptionE
@_ZN4llvm2cl12basic_parserIdEC1ERNS0_6OptionE = weak_odr hidden unnamed_addr alias void (%"class.llvm::cl::basic_parser.4"*, %"class.llvm::cl::Option"*), void (%"class.llvm::cl::basic_parser.4"*, %"class.llvm::cl::Option"*)* @_ZN4llvm2cl12basic_parserIdEC2ERNS0_6OptionE
@_ZN4llvm2cl12basic_parserIfEC1ERNS0_6OptionE = weak_odr hidden unnamed_addr alias void (%"class.llvm::cl::basic_parser.5"*, %"class.llvm::cl::Option"*), void (%"class.llvm::cl::basic_parser.5"*, %"class.llvm::cl::Option"*)* @_ZN4llvm2cl12basic_parserIfEC2ERNS0_6OptionE
@_ZN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC1ERNS0_6OptionE = weak_odr hidden unnamed_addr alias void (%"class.llvm::cl::basic_parser.6"*, %"class.llvm::cl::Option"*), void (%"class.llvm::cl::basic_parser.6"*, %"class.llvm::cl::Option"*)* @_ZN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC2ERNS0_6OptionE
@_ZN4llvm2cl12basic_parserIcEC1ERNS0_6OptionE = weak_odr hidden unnamed_addr alias void (%"class.llvm::cl::basic_parser.7"*, %"class.llvm::cl::Option"*), void (%"class.llvm::cl::basic_parser.7"*, %"class.llvm::cl::Option"*)* @_ZN4llvm2cl12basic_parserIcEC2ERNS0_6OptionE
@_ZN4llvm2cl9extrahelpC1ENS_9StringRefE = hidden unnamed_addr alias void (%"struct.llvm::cl::extrahelp"*, i8*, i64), void (%"struct.llvm::cl::extrahelp"*, i8*, i64)* @_ZN4llvm2cl9extrahelpC2ENS_9StringRefE

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl12basic_parserIbEC2ERNS0_6OptionE(%"class.llvm::cl::basic_parser"*, %"class.llvm::cl::Option"* dereferenceable(152)) unnamed_addr #0 comdat($_ZN4llvm2cl12basic_parserIbEC5ERNS0_6OptionE) align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::basic_parser", %"class.llvm::cl::basic_parser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl12basic_parserIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl12basic_parserINS0_13boolOrDefaultEEC2ERNS0_6OptionE(%"class.llvm::cl::basic_parser.0"*, %"class.llvm::cl::Option"* dereferenceable(152)) unnamed_addr #0 comdat($_ZN4llvm2cl12basic_parserINS0_13boolOrDefaultEEC5ERNS0_6OptionE) align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::basic_parser.0", %"class.llvm::cl::basic_parser.0"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl12basic_parserINS0_13boolOrDefaultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl12basic_parserIiEC2ERNS0_6OptionE(%"class.llvm::cl::basic_parser.1"*, %"class.llvm::cl::Option"* dereferenceable(152)) unnamed_addr #0 comdat($_ZN4llvm2cl12basic_parserIiEC5ERNS0_6OptionE) align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::basic_parser.1", %"class.llvm::cl::basic_parser.1"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl12basic_parserIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl12basic_parserIjEC2ERNS0_6OptionE(%"class.llvm::cl::basic_parser.2"*, %"class.llvm::cl::Option"* dereferenceable(152)) unnamed_addr #0 comdat($_ZN4llvm2cl12basic_parserIjEC5ERNS0_6OptionE) align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::basic_parser.2", %"class.llvm::cl::basic_parser.2"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl12basic_parserIjEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl12basic_parserIyEC2ERNS0_6OptionE(%"class.llvm::cl::basic_parser.3"*, %"class.llvm::cl::Option"* dereferenceable(152)) unnamed_addr #0 comdat($_ZN4llvm2cl12basic_parserIyEC5ERNS0_6OptionE) align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::basic_parser.3", %"class.llvm::cl::basic_parser.3"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl12basic_parserIyEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl12basic_parserIdEC2ERNS0_6OptionE(%"class.llvm::cl::basic_parser.4"*, %"class.llvm::cl::Option"* dereferenceable(152)) unnamed_addr #0 comdat($_ZN4llvm2cl12basic_parserIdEC5ERNS0_6OptionE) align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::basic_parser.4", %"class.llvm::cl::basic_parser.4"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl12basic_parserIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl12basic_parserIfEC2ERNS0_6OptionE(%"class.llvm::cl::basic_parser.5"*, %"class.llvm::cl::Option"* dereferenceable(152)) unnamed_addr #0 comdat($_ZN4llvm2cl12basic_parserIfEC5ERNS0_6OptionE) align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::basic_parser.5", %"class.llvm::cl::basic_parser.5"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl12basic_parserIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC2ERNS0_6OptionE(%"class.llvm::cl::basic_parser.6"*, %"class.llvm::cl::Option"* dereferenceable(152)) unnamed_addr #0 comdat($_ZN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC5ERNS0_6OptionE) align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::basic_parser.6", %"class.llvm::cl::basic_parser.6"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl12basic_parserIcEC2ERNS0_6OptionE(%"class.llvm::cl::basic_parser.7"*, %"class.llvm::cl::Option"* dereferenceable(152)) unnamed_addr #0 comdat($_ZN4llvm2cl12basic_parserIcEC5ERNS0_6OptionE) align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::basic_parser.7", %"class.llvm::cl::basic_parser.7"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl12basic_parserIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE16handleOccurrenceEjNS_9StringRefES5_(%"class.llvm::cl::opt"*, i32, i8*, i64, i8*, i64) unnamed_addr #0 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22
  store i32 0, i32* %7, align 4
  %9 = bitcast %"class.llvm::cl::opt"* %0 to %"class.llvm::cl::Option"*
  %10 = call zeroext i1 @_ZN4llvm2cl6parserIjE5parseERNS0_6OptionENS_9StringRefES5_Rj(%"class.llvm::cl::parser"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %9, i8* undef, i64 undef, i8* %4, i64 %5, i32* nonnull dereferenceable(4) %7) #23
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = load i32, i32* %7, align 4
  %13 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 2, i32 0
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %14, align 8
  br label %15

15:                                               ; preds = %6, %11
  %16 = phi i1 [ false, %11 ], [ true, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22
  ret i1 %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl6parserIjE5parseERNS0_6OptionENS_9StringRefES5_Rj(%"class.llvm::cl::parser"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8* nocapture readnone, i64, i8*, i64, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = alloca %"class.llvm::StringRef", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = alloca %"class.llvm::Twine", align 8
  %12 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 0
  store i8* %4, i8** %12, align 8
  %13 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 1
  store i64 %5, i64* %13, align 8
  %14 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #22
  store i64 -6148914691236517206, i64* %8, align 8
  %15 = call zeroext i1 @_ZN4llvm20getAsUnsignedIntegerENS_9StringRefEjRy(i8* %4, i64 %5, i32 0, i64* nonnull dereferenceable(8) %8) #24
  br i1 %15, label %21, label %16

16:                                               ; preds = %7
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 4294967295
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  %20 = trunc i64 %17 to i32
  store i32 %20, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #22
  br label %35

21:                                               ; preds = %16, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #22
  %22 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #22
  %23 = bitcast %"class.llvm::Twine"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #22
  %24 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  store i8 3, i8* %24, align 8, !alias.scope !2
  %25 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  store i8 5, i8* %25, align 1, !alias.scope !2
  %26 = bitcast %"class.llvm::Twine"* %11 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** %26, align 8, !alias.scope !2
  %27 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 1
  %28 = bitcast %"union.llvm::Twine::Child"* %27 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %9, %"class.llvm::StringRef"** %28, align 8, !alias.scope !2
  %29 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %11, %"class.llvm::Twine"** %29, align 8, !alias.scope !5
  %30 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 1, i32 0
  %31 = bitcast %"class.llvm::Twine"** %30 to i64*
  store i64 ptrtoint ([35 x i8]* @.str.20 to i64), i64* %31, align 8, !alias.scope !5
  %32 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 2, i8* %32, align 8, !alias.scope !5
  %33 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 3, i8* %33, align 1, !alias.scope !5
  %34 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %1, %"class.llvm::Twine"* nonnull dereferenceable(24) %10, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #22
  br label %35

35:                                               ; preds = %19, %21
  %36 = phi i1 [ true, %21 ], [ false, %19 ]
  ret i1 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i32 @_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE27getValueExpectedFlagDefaultEv(%"class.llvm::cl::opt"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE(%"class.llvm::cl::opt"*, %"class.llvm::SmallVectorImpl"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i64 @_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE14getOptionWidthEv(%"class.llvm::cl::opt"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 0, i32 6, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.llvm::cl::basic_parser_impl"* %2 to { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)***
  %6 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %5, align 8
  %7 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %6, align 8
  %8 = tail call { i8*, i64 } %7(%"class.llvm::cl::basic_parser_impl"* %2) #24
  %9 = extractvalue { i8*, i64 } %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 0, i32 8, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i64 %9, i64 %13
  %16 = add i64 %4, 3
  %17 = add i64 %16, %15
  br label %18

18:                                               ; preds = %1, %11
  %19 = phi i64 [ %4, %1 ], [ %17, %11 ]
  %20 = add i64 %19, 6
  ret i64 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK4llvm2cl17basic_parser_impl14getOptionWidthERKNS0_6OptionE(%"class.llvm::cl::basic_parser_impl"*, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.llvm::cl::basic_parser_impl"* %0 to { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)***
  %6 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %5, align 8
  %7 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %6, align 8
  %8 = tail call { i8*, i64 } %7(%"class.llvm::cl::basic_parser_impl"* %0) #24
  %9 = extractvalue { i8*, i64 } %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 8, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i64 %9, i64 %13
  %16 = add i64 %4, 3
  %17 = add i64 %16, %15
  br label %18

18:                                               ; preds = %11, %2
  %19 = phi i64 [ %4, %2 ], [ %17, %11 ]
  %20 = add i64 %19, 6
  ret i64 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE15printOptionInfoEm(%"class.llvm::cl::opt"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = bitcast %"class.llvm::cl::opt"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* %3, %"class.llvm::cl::Option"* dereferenceable(152) %4, i64 %1) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"*, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i64) local_unnamed_addr #0 align 2 {
  %4 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %5 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #24
  %6 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %5, i8* %7, i64 %9) #23
  %11 = bitcast %"class.llvm::cl::basic_parser_impl"* %0 to { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)***
  %12 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %11, align 8
  %13 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %12, align 8
  %14 = tail call { i8*, i64 } %13(%"class.llvm::cl::basic_parser_impl"* %0) #24
  %15 = extractvalue { i8*, i64 } %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %3
  %18 = extractvalue { i8*, i64 } %14, 0
  %19 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %20 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #24
  %21 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 8, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 8, i32 0
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %17, %24
  %28 = phi i8* [ %26, %24 ], [ %18, %17 ]
  %29 = phi i64 [ %22, %24 ], [ %15, %17 ]
  %30 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %20, i8* %28, i64 %29) #23
  %31 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %30, i64 0, i32 3
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %30, i64 0, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = icmp ult i8* %32, %34
  br i1 %35, label %38, label %36

36:                                               ; preds = %27
  %37 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %30, i8 zeroext 62) #24
  br label %40

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %32, i64 1
  store i8* %39, i8** %31, align 8
  store i8 62, i8* %32, align 1
  br label %40

40:                                               ; preds = %38, %36, %3
  %41 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 7, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 7, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = load i64, i64* %8, align 8
  %46 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %11, align 8
  %47 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %46, align 8
  %48 = tail call { i8*, i64 } %47(%"class.llvm::cl::basic_parser_impl"* %0) #24
  %49 = extractvalue { i8*, i64 } %48, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 8, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  %55 = select i1 %54, i64 %49, i64 %53
  %56 = add i64 %45, 3
  %57 = add i64 %56, %55
  br label %58

58:                                               ; preds = %40, %51
  %59 = phi i64 [ %45, %40 ], [ %57, %51 ]
  %60 = add i64 %59, 6
  tail call fastcc void @_ZL12printHelpStrN4llvm9StringRefEmm(i8* %42, i64 %44, i64 %2, i64 %60) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE16printOptionValueEmb(%"class.llvm::cl::opt"*, i64, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.llvm::cl::OptionValue", align 8
  br i1 %2, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 8
  br label %18

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 2
  %10 = load i8, i8* %9, align 4, !range !10
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 2, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %14
  br i1 %17, label %29, label %18

18:                                               ; preds = %5, %12
  %19 = phi i32 [ %7, %5 ], [ %14, %12 ]
  %20 = bitcast %"class.llvm::cl::opt"* %0 to %"class.llvm::cl::Option"*
  %21 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 3, i32 0
  %22 = bitcast %"class.llvm::cl::basic_parser.2"* %21 to %"class.llvm::cl::parser"*
  %23 = bitcast %"struct.llvm::cl::OptionValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #22
  %24 = getelementptr inbounds %"struct.llvm::cl::OptionValue", %"struct.llvm::cl::OptionValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.llvm::cl::OptionValue", %"struct.llvm::cl::OptionValue"* %4, i64 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %27 = bitcast i32* %25 to i8*
  %28 = bitcast i32* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 5, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIjEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  call void @_ZNK4llvm2cl6parserIjE15printOptionDiffERKNS0_6OptionEjNS0_11OptionValueIjEEm(%"class.llvm::cl::parser"* %22, %"class.llvm::cl::Option"* dereferenceable(152) %20, i32 %19, %"struct.llvm::cl::OptionValue"* nonnull %4, i64 %1) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #22
  br label %29

29:                                               ; preds = %12, %8, %18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE4doneEv(%"class.llvm::cl::opt"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.llvm::cl::opt"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* %2) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %5

5:                                                ; preds = %1, %4
  %6 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %7 = inttoptr i64 %6 to %"class.(anonymous namespace)::CommandLineParser"*
  %8 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %20

13:                                               ; preds = %5
  %14 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %17

17:                                               ; preds = %16, %13
  %18 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %19 = inttoptr i64 %18 to %"class.llvm::cl::SubCommand"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser9addOptionEPN4llvm2cl6OptionEPNS2_10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* %7, %"class.llvm::cl::Option"* %0, %"class.llvm::cl::SubCommand"* %19) #24
  br label %59

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %22 = load i8**, i8*** %21, align 8
  %23 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %24 = load i8**, i8*** %23, align 8
  %25 = icmp eq i8** %22, %24
  %26 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %27 = select i1 %25, i32* %8, i32* %26
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8*, i8** %22, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %20, %37
  %33 = phi i8** [ %38, %37 ], [ %22, %20 ]
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %35, -3
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds i8*, i8** %33, i64 1
  %39 = icmp eq i8** %38, %30
  br i1 %39, label %59, label %32

40:                                               ; preds = %32, %20
  %41 = phi i8** [ %22, %20 ], [ %33, %32 ]
  %42 = icmp eq i8** %41, %30
  br i1 %42, label %59, label %43

43:                                               ; preds = %40, %57
  %44 = phi i8** [ %50, %57 ], [ %41, %40 ]
  %45 = bitcast i8** %44 to %"class.llvm::cl::SubCommand"**
  %46 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %45, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser9addOptionEPN4llvm2cl6OptionEPNS2_10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* %7, %"class.llvm::cl::Option"* %0, %"class.llvm::cl::SubCommand"* %46) #24
  %47 = getelementptr inbounds i8*, i8** %44, i64 1
  %48 = icmp eq i8** %47, %30
  br i1 %48, label %59, label %49

49:                                               ; preds = %43, %54
  %50 = phi i8** [ %55, %54 ], [ %47, %43 ]
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp ugt i64 %52, -3
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = getelementptr inbounds i8*, i8** %50, i64 1
  %56 = icmp eq i8** %55, %30
  br i1 %56, label %59, label %49

57:                                               ; preds = %49
  %58 = icmp eq i8** %50, %30
  br i1 %58, label %59, label %43

59:                                               ; preds = %37, %43, %57, %54, %17, %40
  %60 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 11
  store i8 1, i8* %60, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE15setInitialValueERKj(%"class.llvm::cl::opt"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 2, i32 0
  store i32 %3, i32* %4, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 2
  store i8 1, i8* %5, align 4
  %6 = load i32, i32* %1, align 4
  %7 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  store i32 %6, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden dereferenceable(8) %"class.llvm::cl::parser"* @_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE9getParserEv(%"class.llvm::cl::opt"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 3
  ret %"class.llvm::cl::parser"* %2
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE16handleOccurrenceEjNS_9StringRefES5_(%"class.llvm::cl::opt.8"*, i32, i8*, i64, i8*, i64) unnamed_addr #0 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22
  store i32 0, i32* %7, align 4
  %9 = bitcast %"class.llvm::cl::opt.8"* %0 to %"class.llvm::cl::Option"*
  %10 = call zeroext i1 @_ZN4llvm2cl6parserIiE5parseERNS0_6OptionENS_9StringRefES5_Ri(%"class.llvm::cl::parser.15"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %9, i8* undef, i64 undef, i8* %4, i64 %5, i32* nonnull dereferenceable(4) %7) #23
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = load i32, i32* %7, align 4
  %13 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 2, i32 0
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %14, align 8
  br label %15

15:                                               ; preds = %6, %11
  %16 = phi i1 [ false, %11 ], [ true, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22
  ret i1 %16
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl6parserIiE5parseERNS0_6OptionENS_9StringRefES5_Ri(%"class.llvm::cl::parser.15"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8* nocapture readnone, i64, i8*, i64, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = alloca %"class.llvm::StringRef", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = alloca %"class.llvm::Twine", align 8
  %12 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 0
  store i8* %4, i8** %12, align 8
  %13 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 1
  store i64 %5, i64* %13, align 8
  %14 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #22
  store i64 -6148914691236517206, i64* %8, align 8
  %15 = call zeroext i1 @_ZN4llvm18getAsSignedIntegerENS_9StringRefEjRx(i8* %4, i64 %5, i32 0, i64* nonnull dereferenceable(8) %8) #24
  br i1 %15, label %22, label %16

16:                                               ; preds = %7
  %17 = load i64, i64* %8, align 8
  %18 = add i64 %17, 2147483648
  %19 = icmp ugt i64 %18, 4294967295
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = trunc i64 %17 to i32
  store i32 %21, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #22
  br label %36

22:                                               ; preds = %16, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #22
  %23 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #22
  %24 = bitcast %"class.llvm::Twine"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #22
  %25 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  store i8 3, i8* %25, align 8, !alias.scope !11
  %26 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  store i8 5, i8* %26, align 1, !alias.scope !11
  %27 = bitcast %"class.llvm::Twine"* %11 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** %27, align 8, !alias.scope !11
  %28 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 1
  %29 = bitcast %"union.llvm::Twine::Child"* %28 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %9, %"class.llvm::StringRef"** %29, align 8, !alias.scope !11
  %30 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %11, %"class.llvm::Twine"** %30, align 8, !alias.scope !14
  %31 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 1, i32 0
  %32 = bitcast %"class.llvm::Twine"** %31 to i64*
  store i64 ptrtoint ([38 x i8]* @.str.19 to i64), i64* %32, align 8, !alias.scope !14
  %33 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 2, i8* %33, align 8, !alias.scope !14
  %34 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 3, i8* %34, align 1, !alias.scope !14
  %35 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %1, %"class.llvm::Twine"* nonnull dereferenceable(24) %10, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #22
  br label %36

36:                                               ; preds = %20, %22
  %37 = phi i1 [ true, %22 ], [ false, %20 ]
  ret i1 %37
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i32 @_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE27getValueExpectedFlagDefaultEv(%"class.llvm::cl::opt.8"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE(%"class.llvm::cl::opt.8"*, %"class.llvm::SmallVectorImpl"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i64 @_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE14getOptionWidthEv(%"class.llvm::cl::opt.8"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 0, i32 6, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.llvm::cl::basic_parser_impl"* %2 to { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)***
  %6 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %5, align 8
  %7 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %6, align 8
  %8 = tail call { i8*, i64 } %7(%"class.llvm::cl::basic_parser_impl"* %2) #24
  %9 = extractvalue { i8*, i64 } %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 0, i32 8, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i64 %9, i64 %13
  %16 = add i64 %4, 3
  %17 = add i64 %16, %15
  br label %18

18:                                               ; preds = %1, %11
  %19 = phi i64 [ %4, %1 ], [ %17, %11 ]
  %20 = add i64 %19, 6
  ret i64 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE15printOptionInfoEm(%"class.llvm::cl::opt.8"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = bitcast %"class.llvm::cl::opt.8"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* %3, %"class.llvm::cl::Option"* dereferenceable(152) %4, i64 %1) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE16printOptionValueEmb(%"class.llvm::cl::opt.8"*, i64, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.llvm::cl::OptionValue.10", align 8
  br i1 %2, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 8
  br label %18

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 2
  %10 = load i8, i8* %9, align 4, !range !10
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 2, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %14
  br i1 %17, label %29, label %18

18:                                               ; preds = %5, %12
  %19 = phi i32 [ %7, %5 ], [ %14, %12 ]
  %20 = bitcast %"class.llvm::cl::opt.8"* %0 to %"class.llvm::cl::Option"*
  %21 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 3, i32 0
  %22 = bitcast %"class.llvm::cl::basic_parser.1"* %21 to %"class.llvm::cl::parser.15"*
  %23 = bitcast %"struct.llvm::cl::OptionValue.10"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #22
  %24 = getelementptr inbounds %"struct.llvm::cl::OptionValue.10", %"struct.llvm::cl::OptionValue.10"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.llvm::cl::OptionValue.10", %"struct.llvm::cl::OptionValue.10"* %4, i64 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %27 = bitcast i32* %25 to i8*
  %28 = bitcast i32* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 5, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  call void @_ZNK4llvm2cl6parserIiE15printOptionDiffERKNS0_6OptionEiNS0_11OptionValueIiEEm(%"class.llvm::cl::parser.15"* %22, %"class.llvm::cl::Option"* dereferenceable(152) %20, i32 %19, %"struct.llvm::cl::OptionValue.10"* nonnull %4, i64 %1) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #22
  br label %29

29:                                               ; preds = %12, %8, %18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE4doneEv(%"class.llvm::cl::opt.8"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.llvm::cl::opt.8"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* %2) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE15setInitialValueERKi(%"class.llvm::cl::opt.8"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 2, i32 0
  store i32 %3, i32* %4, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 2
  store i8 1, i8* %5, align 4
  %6 = load i32, i32* %1, align 4
  %7 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  store i32 %6, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden dereferenceable(8) %"class.llvm::cl::parser.15"* @_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE9getParserEv(%"class.llvm::cl::opt.8"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 3
  ret %"class.llvm::cl::parser.15"* %2
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE16handleOccurrenceEjNS_9StringRefESC_(%"class.llvm::cl::opt.16"*, i32, i8*, i64, i8*, i64) unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #22
  %10 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 2
  %11 = bitcast %"class.llvm::cl::opt.16"* %0 to %"class.llvm::cl::Option"*
  %12 = call zeroext i1 @_ZN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5parseERNS0_6OptionENS_9StringRefESC_RS8_(%"class.llvm::cl::parser.22"* %10, %"class.llvm::cl::Option"* dereferenceable(152) %11, i8* %2, i64 %3, i8* %4, i64 %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #23
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 0
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(%"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #24
  %16 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %16, align 8
  br label %17

17:                                               ; preds = %6, %13
  %18 = phi i1 [ false, %13 ], [ true, %6 ]
  %19 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %24) #25
  br label %25

25:                                               ; preds = %17, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  ret i1 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5parseERNS0_6OptionENS_9StringRefESC_RS8_(%"class.llvm::cl::parser.22"*, %"class.llvm::cl::Option"* dereferenceable(152), i8*, i64, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #22
  %10 = icmp eq i8* %4, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #22, !alias.scope !19
  br label %36

12:                                               ; preds = %7
  %13 = icmp ugt i64 %5, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #26
  unreachable

16:                                               ; preds = %12
  %17 = icmp ult i64 %5, 23
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %5, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #25
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = or i64 %20, -9223372036854775808
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %25, align 8
  br label %31

26:                                               ; preds = %16
  %27 = trunc i64 %5 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %5, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %26, %18
  %32 = phi i8* [ %21, %18 ], [ %9, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* nonnull align 1 %4, i64 %5, i1 false) #22
  br label %33

33:                                               ; preds = %26, %31
  %34 = phi i8* [ %9, %26 ], [ %32, %31 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %5
  store i8 0, i8* %35, align 1
  br label %36

36:                                               ; preds = %11, %33
  %37 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #25
  br label %44

44:                                               ; preds = %41, %36
  %45 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %9, i64 24, i1 false) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #22
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i32 @_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE27getValueExpectedFlagDefaultEv(%"class.llvm::cl::opt.16"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE(%"class.llvm::cl::opt.16"*, %"class.llvm::SmallVectorImpl"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i64 @_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE14getOptionWidthEv(%"class.llvm::cl::opt.16"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 0, i32 6, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.llvm::cl::basic_parser_impl"* %2 to { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)***
  %6 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %5, align 8
  %7 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %6, align 8
  %8 = tail call { i8*, i64 } %7(%"class.llvm::cl::basic_parser_impl"* %2) #24
  %9 = extractvalue { i8*, i64 } %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 0, i32 8, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i64 %9, i64 %13
  %16 = add i64 %4, 3
  %17 = add i64 %16, %15
  br label %18

18:                                               ; preds = %1, %11
  %19 = phi i64 [ %4, %1 ], [ %17, %11 ]
  %20 = add i64 %19, 6
  ret i64 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE15printOptionInfoEm(%"class.llvm::cl::opt.16"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.llvm::cl::opt.16"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* %3, %"class.llvm::cl::Option"* dereferenceable(152) %4, i64 %1) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE16printOptionValueEmb(%"class.llvm::cl::opt.16"*, i64, i1 zeroext) unnamed_addr #0 comdat align 2 {
  br i1 %2, label %4, label %12

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1
  %6 = bitcast %"class.llvm::cl::opt_storage.17"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %8 to i64
  br label %68

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 8, !range !10
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %83, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = icmp eq i64 %26, %34
  br i1 %35, label %36, label %68

36:                                               ; preds = %17
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %40 = select i1 %22, i8* %38, i8* %39
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %44 = select i1 %30, i8* %42, i8* %43
  %45 = icmp eq i64 %26, 0
  br i1 %22, label %52, label %46

46:                                               ; preds = %36
  br i1 %45, label %83, label %47

47:                                               ; preds = %46
  %48 = ptrtoint i8* %38 to i64
  %49 = trunc i64 %48 to i8
  %50 = load i8, i8* %44, align 1
  %51 = icmp eq i8 %50, %49
  br i1 %51, label %53, label %68

52:                                               ; preds = %36
  br i1 %45, label %83, label %65

53:                                               ; preds = %47, %60
  %54 = phi i64 [ %57, %60 ], [ %25, %47 ]
  %55 = phi i8* [ %58, %60 ], [ %39, %47 ]
  %56 = phi i8* [ %61, %60 ], [ %44, %47 ]
  %57 = add i64 %54, -1
  %58 = getelementptr inbounds i8, i8* %55, i64 1
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %83, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, i8* %56, i64 1
  %62 = load i8, i8* %58, align 1
  %63 = load i8, i8* %61, align 1
  %64 = icmp eq i8 %62, %63
  br i1 %64, label %53, label %68

65:                                               ; preds = %52
  %66 = tail call i32 @bcmp(i8* %40, i8* %44, i64 %26) #22
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %60, %4, %47, %65, %17
  %69 = phi i64 [ %11, %4 ], [ %33, %47 ], [ %33, %65 ], [ %33, %17 ], [ %33, %60 ]
  %70 = phi i64 [ %10, %4 ], [ %32, %47 ], [ %32, %65 ], [ %32, %17 ], [ %32, %60 ]
  %71 = phi i8 [ %8, %4 ], [ %29, %47 ], [ %29, %65 ], [ %29, %17 ], [ %29, %60 ]
  %72 = bitcast %"class.llvm::cl::opt.16"* %0 to %"class.llvm::cl::Option"*
  %73 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 2, i32 0
  %74 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1
  %75 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1
  %76 = bitcast %"class.llvm::cl::basic_parser.6"* %73 to %"class.llvm::cl::parser.22"*
  %77 = icmp slt i8 %71, 0
  %78 = getelementptr inbounds %"class.llvm::cl::opt_storage.17", %"class.llvm::cl::opt_storage.17"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = bitcast %"class.llvm::cl::opt_storage.17"* %74 to i8*
  %81 = select i1 %77, i8* %79, i8* %80
  %82 = select i1 %77, i64 %70, i64 %69
  tail call void @_ZNK4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15printOptionDiffERKNS0_6OptionENS_9StringRefERKNS0_11OptionValueIS8_EEm(%"class.llvm::cl::parser.22"* %76, %"class.llvm::cl::Option"* dereferenceable(152) %72, i8* %81, i64 %82, %"struct.llvm::cl::OptionValue.19"* dereferenceable(40) %75, i64 %1) #24
  br label %83

83:                                               ; preds = %53, %65, %46, %52, %12, %68
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE4doneEv(%"class.llvm::cl::opt.16"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.llvm::cl::opt.16"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* %2) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE15setInitialValueERKS8_(%"class.llvm::cl::opt.16"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 0
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #24
  %5 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1, i32 0, i32 2
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %7 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(%"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden dereferenceable(8) %"class.llvm::cl::parser.22"* @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE9getParserEv(%"class.llvm::cl::opt.16"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 2
  ret %"class.llvm::cl::parser.22"* %2
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE16handleOccurrenceEjNS_9StringRefES5_(%"class.llvm::cl::opt.23"*, i32, i8*, i64, i8*, i64) unnamed_addr #0 comdat align 2 {
  %7 = load i8, i8* %4, align 1
  %8 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 2, i32 0
  store i8 %7, i8* %8, align 8
  %9 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %9, align 8
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i32 @_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE27getValueExpectedFlagDefaultEv(%"class.llvm::cl::opt.23"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE(%"class.llvm::cl::opt.23"*, %"class.llvm::SmallVectorImpl"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i64 @_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE14getOptionWidthEv(%"class.llvm::cl::opt.23"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 0, i32 6, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.llvm::cl::basic_parser_impl"* %2 to { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)***
  %6 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %5, align 8
  %7 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %6, align 8
  %8 = tail call { i8*, i64 } %7(%"class.llvm::cl::basic_parser_impl"* %2) #24
  %9 = extractvalue { i8*, i64 } %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 0, i32 8, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i64 %9, i64 %13
  %16 = add i64 %4, 3
  %17 = add i64 %16, %15
  br label %18

18:                                               ; preds = %1, %11
  %19 = phi i64 [ %4, %1 ], [ %17, %11 ]
  %20 = add i64 %19, 6
  ret i64 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE15printOptionInfoEm(%"class.llvm::cl::opt.23"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = bitcast %"class.llvm::cl::opt.23"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* %3, %"class.llvm::cl::Option"* dereferenceable(152) %4, i64 %1) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE16printOptionValueEmb(%"class.llvm::cl::opt.23"*, i64, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.llvm::cl::OptionValue.25", align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 2, i32 0
  br i1 %2, label %6, label %8

6:                                                ; preds = %3
  %7 = load i8, i8* %5, align 8
  br label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %5, i64 17
  %10 = load i8, i8* %9, align 1, !range !10
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %30, label %12

12:                                               ; preds = %8
  %13 = load i8, i8* %5, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 16
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, %13
  br i1 %16, label %30, label %17

17:                                               ; preds = %6, %12
  %18 = phi i8 [ %7, %6 ], [ %13, %12 ]
  %19 = bitcast %"class.llvm::cl::opt.23"* %0 to %"class.llvm::cl::Option"*
  %20 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 3, i32 0
  %21 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.llvm::cl::basic_parser.7"* %20 to %"class.llvm::cl::parser.30"*
  %23 = bitcast %"struct.llvm::cl::OptionValue.25"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #22
  %24 = getelementptr inbounds %"struct.llvm::cl::OptionValue.25", %"struct.llvm::cl::OptionValue.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.llvm::cl::OptionValue.25", %"struct.llvm::cl::OptionValue.25"* %4, i64 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds i8, i8* %21, i64 16
  %27 = bitcast i8* %26 to i16*
  %28 = bitcast i8* %25 to i16*
  %29 = load i16, i16* %27, align 8
  store i16 %29, i16* %28, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  call void @_ZNK4llvm2cl6parserIcE15printOptionDiffERKNS0_6OptionEcNS0_11OptionValueIcEEm(%"class.llvm::cl::parser.30"* %22, %"class.llvm::cl::Option"* dereferenceable(152) %19, i8 signext %18, %"struct.llvm::cl::OptionValue.25"* nonnull %4, i64 %1) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #22
  br label %30

30:                                               ; preds = %12, %8, %17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE4doneEv(%"class.llvm::cl::opt.23"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.llvm::cl::opt.23"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* %2) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE15setInitialValueERKc(%"class.llvm::cl::opt.23"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 2, i32 0
  %4 = load i8, i8* %1, align 1
  store i8 %4, i8* %3, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 17
  store i8 1, i8* %5, align 1
  %6 = load i8, i8* %1, align 1
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  store i8 %6, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden dereferenceable(8) %"class.llvm::cl::parser.30"* @_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE9getParserEv(%"class.llvm::cl::opt.23"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 3
  ret %"class.llvm::cl::parser.30"* %2
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE16handleOccurrenceEjNS_9StringRefES5_(%"class.llvm::cl::opt.31"*, i32, i8*, i64, i8*, i64) unnamed_addr #0 comdat align 2 {
  %7 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #22
  store i8 0, i8* %7, align 1
  %8 = bitcast %"class.llvm::cl::opt.31"* %0 to %"class.llvm::cl::Option"*
  %9 = call zeroext i1 @_ZN4llvm2cl6parserIbE5parseERNS0_6OptionENS_9StringRefES5_Rb(%"class.llvm::cl::parser.38"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %8, i8* undef, i64 undef, i8* %4, i64 %5, i8* nonnull dereferenceable(1) %7) #23
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 2, i32 0
  %12 = load i8, i8* %7, align 1, !range !10
  store i8 %12, i8* %11, align 8
  %13 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %13, align 8
  br label %14

14:                                               ; preds = %6, %10
  %15 = phi i1 [ false, %10 ], [ true, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #22
  ret i1 %15
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl6parserIbE5parseERNS0_6OptionENS_9StringRefES5_Rb(%"class.llvm::cl::parser.38"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8* nocapture readnone, i64, i8*, i64, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.llvm::StringRef", align 8
  %9 = alloca %"class.llvm::Twine", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %8, i64 0, i32 0
  store i8* %4, i8** %11, align 8
  %12 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %8, i64 0, i32 1
  store i64 %5, i64* %12, align 8
  switch i64 %5, label %39 [
    i64 0, label %25
    i64 4, label %13
    i64 1, label %22
    i64 5, label %26
  ]

13:                                               ; preds = %7
  %14 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #22
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %13
  %17 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #22
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4) #22
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %39

22:                                               ; preds = %7
  %23 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i64 %5) #22
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %35

25:                                               ; preds = %7, %22, %19, %16, %13
  store i8 1, i8* %6, align 1
  br label %53

26:                                               ; preds = %7
  %27 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 %5) #22
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %26
  %30 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i64 5) #22
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i64 5) #22
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %39

35:                                               ; preds = %22
  %36 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 %5) #22
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35, %32, %29, %26
  store i8 0, i8* %6, align 1
  br label %53

39:                                               ; preds = %32, %19, %7, %35
  %40 = bitcast %"class.llvm::Twine"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #22
  %41 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #22
  %42 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 3, i8* %42, align 8, !alias.scope !22
  %43 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 5, i8* %43, align 1, !alias.scope !22
  %44 = bitcast %"class.llvm::Twine"* %10 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** %44, align 8, !alias.scope !22
  %45 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 1
  %46 = bitcast %"union.llvm::Twine::Child"* %45 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %8, %"class.llvm::StringRef"** %46, align 8, !alias.scope !22
  %47 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %10, %"class.llvm::Twine"** %47, align 8, !alias.scope !25
  %48 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 1, i32 0
  %49 = bitcast %"class.llvm::Twine"** %48 to i64*
  store i64 ptrtoint ([52 x i8]* @.str.18 to i64), i64* %49, align 8, !alias.scope !25
  %50 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 2
  store i8 2, i8* %50, align 8, !alias.scope !25
  %51 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 3
  store i8 3, i8* %51, align 1, !alias.scope !25
  %52 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %1, %"class.llvm::Twine"* nonnull dereferenceable(24) %9, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #22
  br label %53

53:                                               ; preds = %39, %38, %25
  %54 = phi i1 [ false, %25 ], [ false, %38 ], [ true, %39 ]
  ret i1 %54
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i32 @_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE27getValueExpectedFlagDefaultEv(%"class.llvm::cl::opt.31"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE(%"class.llvm::cl::opt.31"*, %"class.llvm::SmallVectorImpl"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i64 @_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE14getOptionWidthEv(%"class.llvm::cl::opt.31"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 6, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.llvm::cl::basic_parser_impl"* %2 to { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)***
  %6 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %5, align 8
  %7 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %6, align 8
  %8 = tail call { i8*, i64 } %7(%"class.llvm::cl::basic_parser_impl"* %2) #24
  %9 = extractvalue { i8*, i64 } %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 8, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i64 %9, i64 %13
  %16 = add i64 %4, 3
  %17 = add i64 %16, %15
  br label %18

18:                                               ; preds = %1, %11
  %19 = phi i64 [ %4, %1 ], [ %17, %11 ]
  %20 = add i64 %19, 6
  ret i64 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE15printOptionInfoEm(%"class.llvm::cl::opt.31"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = bitcast %"class.llvm::cl::opt.31"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* %3, %"class.llvm::cl::Option"* dereferenceable(152) %4, i64 %1) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE16printOptionValueEmb(%"class.llvm::cl::opt.31"*, i64, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.llvm::cl::OptionValue.33", align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 2, i32 0
  br i1 %2, label %6, label %8

6:                                                ; preds = %3
  %7 = load i8, i8* %5, align 8, !range !10
  br label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %5, i64 17
  %10 = load i8, i8* %9, align 1, !range !10
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %8
  %13 = load i8, i8* %5, align 8, !range !10
  %14 = getelementptr inbounds i8, i8* %5, i64 16
  %15 = load i8, i8* %14, align 8, !range !10
  %16 = icmp eq i8 %15, %13
  br i1 %16, label %31, label %17

17:                                               ; preds = %6, %12
  %18 = phi i8 [ %7, %6 ], [ %13, %12 ]
  %19 = bitcast %"class.llvm::cl::opt.31"* %0 to %"class.llvm::cl::Option"*
  %20 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 3, i32 0
  %21 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 2, i32 0
  %22 = icmp ne i8 %18, 0
  %23 = bitcast %"class.llvm::cl::basic_parser"* %20 to %"class.llvm::cl::parser.38"*
  %24 = bitcast %"struct.llvm::cl::OptionValue.33"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #22
  %25 = getelementptr inbounds %"struct.llvm::cl::OptionValue.33", %"struct.llvm::cl::OptionValue.33"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.llvm::cl::OptionValue.33", %"struct.llvm::cl::OptionValue.33"* %4, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds i8, i8* %21, i64 16
  %28 = bitcast i8* %27 to i16*
  %29 = bitcast i8* %26 to i16*
  %30 = load i16, i16* %28, align 8
  store i16 %30, i16* %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  call void @_ZNK4llvm2cl6parserIbE15printOptionDiffERKNS0_6OptionEbNS0_11OptionValueIbEEm(%"class.llvm::cl::parser.38"* %23, %"class.llvm::cl::Option"* dereferenceable(152) %19, i1 zeroext %22, %"struct.llvm::cl::OptionValue.33"* nonnull %4, i64 %1) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #22
  br label %31

31:                                               ; preds = %12, %8, %17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE4doneEv(%"class.llvm::cl::opt.31"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.llvm::cl::opt.31"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* %2) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE15setInitialValueERKb(%"class.llvm::cl::opt.31"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 2, i32 0
  %4 = load i8, i8* %1, align 1, !range !10
  store i8 %4, i8* %3, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 17
  store i8 1, i8* %5, align 1
  %6 = load i8, i8* %1, align 1, !range !10
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  store i8 %6, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden dereferenceable(8) %"class.llvm::cl::parser.38"* @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE9getParserEv(%"class.llvm::cl::opt.31"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 3
  ret %"class.llvm::cl::parser.38"* %2
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl18GenericOptionValue6anchorEv(%"struct.llvm::cl::GenericOptionValue"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl11OptionValueINS0_13boolOrDefaultEE6anchorEv(%"struct.llvm::cl::OptionValue.39"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE6anchorEv(%"struct.llvm::cl::OptionValue.19"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6Option6anchorEv(%"class.llvm::cl::Option"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl17basic_parser_impl6anchorEv(%"class.llvm::cl::basic_parser_impl"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6parserIbE6anchorEv(%"class.llvm::cl::parser.38"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6parserINS0_13boolOrDefaultEE6anchorEv(%"class.llvm::cl::parser.42"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6parserIiE6anchorEv(%"class.llvm::cl::parser.15"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6parserIjE6anchorEv(%"class.llvm::cl::parser"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6parserIyE6anchorEv(%"class.llvm::cl::parser.43"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6parserIdE6anchorEv(%"class.llvm::cl::parser.44"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6parserIfE6anchorEv(%"class.llvm::cl::parser.45"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE6anchorEv(%"class.llvm::cl::parser.22"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN4llvm2cl6parserIcE6anchorEv(%"class.llvm::cl::parser.30"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl16AddLiteralOptionERNS0_6OptionENS_9StringRefE(%"class.llvm::cl::Option"* dereferenceable(152), i8*, i64) local_unnamed_addr #0 {
  %4 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %7

7:                                                ; preds = %3, %6
  %8 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %9 = inttoptr i64 %8 to %"class.(anonymous namespace)::CommandLineParser"*
  %10 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %7
  %16 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %19

19:                                               ; preds = %18, %15
  %20 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %21 = inttoptr i64 %20 to %"class.llvm::cl::SubCommand"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser16addLiteralOptionERN4llvm2cl6OptionEPNS2_10SubCommandENS1_9StringRefE(%"class.(anonymous namespace)::CommandLineParser"* %9, %"class.llvm::cl::Option"* dereferenceable(152) %0, %"class.llvm::cl::SubCommand"* %21, i8* %1, i64 %2) #24
  br label %61

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %24 = load i8**, i8*** %23, align 8
  %25 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %26 = load i8**, i8*** %25, align 8
  %27 = icmp eq i8** %24, %26
  %28 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %29 = select i1 %27, i32* %10, i32* %28
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %24, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %22, %39
  %35 = phi i8** [ %40, %39 ], [ %24, %22 ]
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %37, -3
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = getelementptr inbounds i8*, i8** %35, i64 1
  %41 = icmp eq i8** %40, %32
  br i1 %41, label %61, label %34

42:                                               ; preds = %34, %22
  %43 = phi i8** [ %24, %22 ], [ %35, %34 ]
  %44 = icmp eq i8** %43, %32
  br i1 %44, label %61, label %45

45:                                               ; preds = %42, %59
  %46 = phi i8** [ %52, %59 ], [ %43, %42 ]
  %47 = bitcast i8** %46 to %"class.llvm::cl::SubCommand"**
  %48 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %47, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser16addLiteralOptionERN4llvm2cl6OptionEPNS2_10SubCommandENS1_9StringRefE(%"class.(anonymous namespace)::CommandLineParser"* %9, %"class.llvm::cl::Option"* dereferenceable(152) %0, %"class.llvm::cl::SubCommand"* %48, i8* %1, i64 %2) #24
  %49 = getelementptr inbounds i8*, i8** %46, i64 1
  %50 = icmp eq i8** %49, %32
  br i1 %50, label %61, label %51

51:                                               ; preds = %45, %56
  %52 = phi i8** [ %57, %56 ], [ %49, %45 ]
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp ugt i64 %54, -3
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds i8*, i8** %52, i64 1
  %58 = icmp eq i8** %57, %32
  br i1 %58, label %61, label %51

59:                                               ; preds = %51
  %60 = icmp eq i8** %52, %32
  br i1 %60, label %61, label %45

61:                                               ; preds = %39, %45, %59, %56, %19, %42
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc %"class.(anonymous namespace)::CommandLineParser"* @_ZN4llvm13ManagedStaticIN12_GLOBAL__N_117CommandLineParserEEptEv() unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %4

4:                                                ; preds = %0, %3
  %5 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %6 = inttoptr i64 %5 to %"class.(anonymous namespace)::CommandLineParser"*
  ret %"class.(anonymous namespace)::CommandLineParser"* %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl9extrahelpC2ENS_9StringRefE(%"struct.llvm::cl::extrahelp"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.llvm::StringRef", align 8
  %5 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %4, i64 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %4, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = bitcast %"struct.llvm::cl::extrahelp"* %0 to i8*
  %8 = bitcast %"class.llvm::StringRef"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %8, i64 16, i1 false)
  %9 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %12

12:                                               ; preds = %3, %11
  %13 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %14 = inttoptr i64 %13 to %"class.(anonymous namespace)::CommandLineParser"*
  %15 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %14, i64 0, i32 2, i32 0, i32 1
  %16 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %15, align 8
  %17 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %14, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %17, align 8
  %19 = icmp eq %"class.llvm::StringRef"* %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.llvm::StringRef"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %8, i64 16, i1 false) #22
  %22 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %16, i64 1
  %23 = ptrtoint %"class.llvm::StringRef"* %22 to i64
  %24 = bitcast %"class.llvm::StringRef"** %15 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %14, i64 0, i32 2
  call void @_ZNSt3__16vectorIN4llvm9StringRefENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %26, %"class.llvm::StringRef"* nonnull dereferenceable(16) %4) #24
  br label %27

27:                                               ; preds = %20, %25
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl6Option14removeArgumentEv(%"class.llvm::cl::Option"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %5

5:                                                ; preds = %1, %4
  %6 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %7 = inttoptr i64 %6 to %"class.(anonymous namespace)::CommandLineParser"*
  %8 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10
  %9 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %5
  %15 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %18

18:                                               ; preds = %17, %14
  %19 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %20 = inttoptr i64 %19 to %"class.llvm::cl::SubCommand"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser12removeOptionEPN4llvm2cl6OptionEPNS2_10SubCommandE(%"class.llvm::cl::Option"* %0, %"class.llvm::cl::SubCommand"* %20) #24
  br label %102

21:                                               ; preds = %5
  %22 = tail call zeroext i1 @_ZN4llvm6any_ofIRKNS_11SmallPtrSetIPNS_2cl10SubCommandELj4EEEZNKS2_6Option18isInAllSubCommandsEvEUlPKS3_E_EEbOT_T0_(%"class.llvm::SmallPtrSet"* dereferenceable(64) %8) #24
  br i1 %22, label %23, label %63

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %25 = load i8**, i8*** %24, align 8
  %26 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load i8**, i8*** %26, align 8
  %28 = icmp eq i8** %25, %27
  %29 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 4, i32 0, i32 0, i32 3
  %30 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 4, i32 0, i32 0, i32 2
  %31 = select i1 %28, i32* %29, i32* %30
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8*, i8** %25, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %23, %41
  %37 = phi i8** [ %42, %41 ], [ %25, %23 ]
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, -3
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds i8*, i8** %37, i64 1
  %43 = icmp eq i8** %42, %34
  br i1 %43, label %102, label %36

44:                                               ; preds = %36, %23
  %45 = phi i8** [ %25, %23 ], [ %37, %36 ]
  %46 = icmp eq i8** %45, %34
  br i1 %46, label %102, label %47

47:                                               ; preds = %44, %61
  %48 = phi i8** [ %54, %61 ], [ %45, %44 ]
  %49 = bitcast i8** %48 to %"class.llvm::cl::SubCommand"**
  %50 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %49, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser12removeOptionEPN4llvm2cl6OptionEPNS2_10SubCommandE(%"class.llvm::cl::Option"* %0, %"class.llvm::cl::SubCommand"* %50) #24
  %51 = getelementptr inbounds i8*, i8** %48, i64 1
  %52 = icmp eq i8** %51, %34
  br i1 %52, label %102, label %53

53:                                               ; preds = %47, %58
  %54 = phi i8** [ %59, %58 ], [ %51, %47 ]
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp ugt i64 %56, -3
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8*, i8** %54, i64 1
  %60 = icmp eq i8** %59, %34
  br i1 %60, label %102, label %53

61:                                               ; preds = %53
  %62 = icmp eq i8** %54, %34
  br i1 %62, label %102, label %47

63:                                               ; preds = %21
  %64 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %65 = load i8**, i8*** %64, align 8
  %66 = getelementptr inbounds %"class.llvm::SmallPtrSet", %"class.llvm::SmallPtrSet"* %8, i64 0, i32 0, i32 0, i32 0
  %67 = load i8**, i8*** %66, align 8
  %68 = icmp eq i8** %65, %67
  %69 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %70 = select i1 %68, i32* %9, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8*, i8** %65, i64 %72
  %74 = icmp eq i32 %71, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %63, %80
  %76 = phi i8** [ %81, %80 ], [ %65, %63 ]
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp ugt i64 %78, -3
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = getelementptr inbounds i8*, i8** %76, i64 1
  %82 = icmp eq i8** %81, %73
  br i1 %82, label %102, label %75

83:                                               ; preds = %75, %63
  %84 = phi i8** [ %65, %63 ], [ %76, %75 ]
  %85 = icmp eq i8** %84, %73
  br i1 %85, label %102, label %86

86:                                               ; preds = %83, %100
  %87 = phi i8** [ %93, %100 ], [ %84, %83 ]
  %88 = bitcast i8** %87 to %"class.llvm::cl::SubCommand"**
  %89 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %88, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser12removeOptionEPN4llvm2cl6OptionEPNS2_10SubCommandE(%"class.llvm::cl::Option"* %0, %"class.llvm::cl::SubCommand"* %89) #24
  %90 = getelementptr inbounds i8*, i8** %87, i64 1
  %91 = icmp eq i8** %90, %73
  br i1 %91, label %102, label %92

92:                                               ; preds = %86, %97
  %93 = phi i8** [ %98, %97 ], [ %90, %86 ]
  %94 = bitcast i8** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = icmp ugt i64 %95, -3
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  %98 = getelementptr inbounds i8*, i8** %93, i64 1
  %99 = icmp eq i8** %98, %73
  br i1 %99, label %102, label %92

100:                                              ; preds = %92
  %101 = icmp eq i8** %93, %73
  br i1 %101, label %102, label %86

102:                                              ; preds = %80, %86, %100, %97, %41, %47, %61, %58, %18, %44, %83
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl6Option9setArgStrENS_9StringRefE(%"class.llvm::cl::Option"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 11
  %5 = load i8, i8* %4, align 8, !range !10
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %65, label %7

7:                                                ; preds = %3
  %8 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %11

11:                                               ; preds = %7, %10
  %12 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.(anonymous namespace)::CommandLineParser"*
  %14 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %11
  %20 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %23

23:                                               ; preds = %22, %19
  %24 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %25 = inttoptr i64 %24 to %"class.llvm::cl::SubCommand"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser12updateArgStrEPN4llvm2cl6OptionENS1_9StringRefEPNS2_10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* %13, %"class.llvm::cl::Option"* %0, i8* %1, i64 %2, %"class.llvm::cl::SubCommand"* %25) #24
  br label %65

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %28 = load i8**, i8*** %27, align 8
  %29 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %30 = load i8**, i8*** %29, align 8
  %31 = icmp eq i8** %28, %30
  %32 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %33 = select i1 %31, i32* %14, i32* %32
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8*, i8** %28, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %26, %43
  %39 = phi i8** [ %44, %43 ], [ %28, %26 ]
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %41, -3
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8*, i8** %39, i64 1
  %45 = icmp eq i8** %44, %36
  br i1 %45, label %65, label %38

46:                                               ; preds = %38, %26
  %47 = phi i8** [ %28, %26 ], [ %39, %38 ]
  %48 = icmp eq i8** %47, %36
  br i1 %48, label %65, label %49

49:                                               ; preds = %46, %63
  %50 = phi i8** [ %56, %63 ], [ %47, %46 ]
  %51 = bitcast i8** %50 to %"class.llvm::cl::SubCommand"**
  %52 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %51, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser12updateArgStrEPN4llvm2cl6OptionENS1_9StringRefEPNS2_10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* %13, %"class.llvm::cl::Option"* %0, i8* %1, i64 %2, %"class.llvm::cl::SubCommand"* %52) #24
  %53 = getelementptr inbounds i8*, i8** %50, i64 1
  %54 = icmp eq i8** %53, %36
  br i1 %54, label %65, label %55

55:                                               ; preds = %49, %60
  %56 = phi i8** [ %61, %60 ], [ %53, %49 ]
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp ugt i64 %58, -3
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds i8*, i8** %56, i64 1
  %62 = icmp eq i8** %61, %36
  br i1 %62, label %65, label %55

63:                                               ; preds = %55
  %64 = icmp eq i8** %56, %36
  br i1 %64, label %65, label %49

65:                                               ; preds = %43, %63, %49, %60, %46, %23, %3
  %66 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 6, i32 0
  store i8* %1, i8** %66, align 8
  %67 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 6, i32 1
  store i64 %2, i64* %67, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl14OptionCategory16registerCategoryEv(%"class.llvm::cl::OptionCategory"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.std::__1::pair.125", align 8
  %3 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %6

6:                                                ; preds = %1, %5
  %7 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %8 = inttoptr i64 %7 to %"class.(anonymous namespace)::CommandLineParser"*
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %8, i64 0, i32 3
  %10 = bitcast %"class.llvm::SmallPtrSet.51"* %9 to %"class.llvm::SmallPtrSetImpl.52"*
  %11 = bitcast %"struct.std::__1::pair.125"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #22
  call void @_ZN4llvm15SmallPtrSetImplIPNS_2cl14OptionCategoryEE6insertES3_(%"struct.std::__1::pair.125"* nonnull sret %2, %"class.llvm::SmallPtrSetImpl.52"* %10, %"class.llvm::cl::OptionCategory"* %0) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl10SubCommand18registerSubCommandEv(%"class.llvm::cl::SubCommand"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %5

5:                                                ; preds = %1, %4
  %6 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %7 = inttoptr i64 %6 to %"class.(anonymous namespace)::CommandLineParser"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser18registerSubCommandEPN4llvm2cl10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* %7, %"class.llvm::cl::SubCommand"* %0) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117CommandLineParser18registerSubCommandEPN4llvm2cl10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"*, %"class.llvm::cl::SubCommand"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::pair.132", align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4
  %5 = bitcast %"class.llvm::SmallPtrSet"* %4 to %"class.llvm::SmallPtrSetImpl"*
  %6 = bitcast %"struct.std::__1::pair.132"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #22
  call void @_ZN4llvm15SmallPtrSetImplIPNS_2cl10SubCommandEE6insertES3_(%"struct.std::__1::pair.132"* nonnull sret %3, %"class.llvm::SmallPtrSetImpl"* %5, %"class.llvm::cl::SubCommand"* %1) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #22
  %7 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %10

10:                                               ; preds = %2, %9
  %11 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %12 = inttoptr i64 %11 to %"class.llvm::cl::SubCommand"*
  %13 = icmp eq %"class.llvm::cl::SubCommand"* %12, %1
  br i1 %13, label %73, label %14

14:                                               ; preds = %10
  %15 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %18

18:                                               ; preds = %14, %17
  %19 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %20 = inttoptr i64 %19 to %"class.llvm::cl::SubCommand"*
  %21 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %20, i64 0, i32 4, i32 0, i32 0
  %22 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %21, align 8
  %23 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %20, i64 0, i32 4, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %18, %30
  %27 = phi %"class.llvm::StringMapEntryBase"** [ %31, %30 ], [ %22, %18 ]
  %28 = bitcast %"class.llvm::StringMapEntryBase"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %32 [
    i64 0, label %30
    i64 -4, label %30
  ]

30:                                               ; preds = %26, %26
  %31 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %27, i64 1
  br label %26

32:                                               ; preds = %26, %18
  %33 = phi %"class.llvm::StringMapEntryBase"** [ %22, %18 ], [ %27, %26 ]
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %22, i64 %34
  %36 = icmp eq %"class.llvm::StringMapEntryBase"** %33, %35
  br i1 %36, label %73, label %39

37:                                               ; preds = %67
  %38 = icmp eq %"class.llvm::StringMapEntryBase"** %69, %35
  br i1 %38, label %73, label %39

39:                                               ; preds = %32, %37
  %40 = phi %"class.llvm::StringMapEntryBase"** [ %69, %37 ], [ %33, %32 ]
  %41 = bitcast %"class.llvm::StringMapEntryBase"** %40 to %"class.llvm::StringMapEntry"**
  %42 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %41, align 8
  %43 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %42, i64 0, i32 1
  %44 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %43, align 8
  %45 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %44, i64 0, i32 2
  %46 = load i16, i16* %45, align 4
  %47 = and i16 %46, 384
  %48 = icmp eq i16 %47, 128
  %49 = and i16 %46, 2048
  %50 = icmp ne i16 %49, 0
  %51 = or i1 %48, %50
  %52 = and i16 %46, 7
  %53 = icmp eq i16 %52, 4
  %54 = or i1 %53, %51
  br i1 %54, label %59, label %55

55:                                               ; preds = %39
  %56 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %44, i64 0, i32 6, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %55, %39
  call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser9addOptionEPN4llvm2cl6OptionEPNS2_10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* %0, %"class.llvm::cl::Option"* %44, %"class.llvm::cl::SubCommand"* %1) #23
  br label %66

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %42, i64 1
  %62 = bitcast %"class.llvm::StringMapEntry"* %61 to i8*
  %63 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %42, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser16addLiteralOptionERN4llvm2cl6OptionEPNS2_10SubCommandENS1_9StringRefE(%"class.(anonymous namespace)::CommandLineParser"* %0, %"class.llvm::cl::Option"* dereferenceable(152) %44, %"class.llvm::cl::SubCommand"* %1, i8* %62, i64 %65) #23
  br label %66

66:                                               ; preds = %60, %59
  br label %67

67:                                               ; preds = %72, %66
  %68 = phi %"class.llvm::StringMapEntryBase"** [ %40, %66 ], [ %69, %72 ]
  %69 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %68, i64 1
  %70 = bitcast %"class.llvm::StringMapEntryBase"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  switch i64 %71, label %37 [
    i64 0, label %72
    i64 -4, label %72
  ]

72:                                               ; preds = %67, %67
  br label %67

73:                                               ; preds = %37, %32, %10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl10SubCommand20unregisterSubCommandEv(%"class.llvm::cl::SubCommand"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %5

5:                                                ; preds = %1, %4
  %6 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %7 = inttoptr i64 %6 to %"class.(anonymous namespace)::CommandLineParser"*
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 4
  %9 = bitcast %"class.llvm::SmallPtrSet"* %8 to %"class.llvm::SmallPtrSetImplBase"*
  %10 = bitcast %"class.llvm::cl::SubCommand"* %0 to i8*
  %11 = tail call zeroext i1 @_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv(%"class.llvm::SmallPtrSetImplBase"* %9, i8* %10) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl10SubCommand5resetEv(%"class.llvm::cl::SubCommand"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 2, i32 0
  %3 = bitcast %"class.llvm::SmallVectorImpl.54"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 3, i32 0
  %8 = bitcast %"class.llvm::SmallVectorImpl.54"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 4
  tail call void @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE5clearEv(%"class.llvm::StringMap"* %12) #23
  %13 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 5
  store %"class.llvm::cl::Option"* null, %"class.llvm::cl::Option"** %13, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE5clearEv(%"class.llvm::StringMap"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 0
  %11 = zext i32 %7 to i64
  br label %14

12:                                               ; preds = %22, %5
  store i32 0, i32* %2, align 4
  %13 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %13, align 8
  br label %25

14:                                               ; preds = %9, %22
  %15 = phi i64 [ 0, %9 ], [ %23, %22 ]
  %16 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %10, align 8
  %17 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %16, i64 %15
  %18 = bitcast %"class.llvm::StringMapEntryBase"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %20 [
    i64 0, label %22
    i64 -4, label %22
  ]

20:                                               ; preds = %14
  %21 = inttoptr i64 %19 to i8*
  tail call void @free(i8* %21) #24
  br label %22

22:                                               ; preds = %14, %14, %20
  store %"class.llvm::StringMapEntryBase"* null, %"class.llvm::StringMapEntryBase"** %17, align 8
  %23 = add nuw nsw i64 %15, 1
  %24 = icmp eq i64 %23, %11
  br i1 %24, label %12, label %14

25:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK4llvm2cl10SubCommandcvbEv(%"class.llvm::cl::SubCommand"* readnone) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %5

5:                                                ; preds = %1, %4
  %6 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %7 = inttoptr i64 %6 to %"class.(anonymous namespace)::CommandLineParser"*
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 5
  %9 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %8, align 8
  %10 = icmp eq %"class.llvm::cl::SubCommand"* %9, %0
  ret i1 %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl22TokenizeGNUCommandLineENS_9StringRefERNS_11StringSaverERNS_15SmallVectorImplIPKcEEb(i8*, i64, %"class.llvm::StringSaver"* dereferenceable(8), %"class.llvm::SmallVectorImpl.73"* dereferenceable(32), i1 zeroext) #0 {
  %6 = alloca %"class.llvm::SmallString", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = bitcast %"class.llvm::SmallString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %14) #22
  %15 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 128, i1 false)
  %16 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %17 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 1, i32 0
  %21 = bitcast i8** %19 to %"class.llvm::SmallVector.77"**
  store %"class.llvm::SmallVector.77"* %20, %"class.llvm::SmallVector.77"** %21, align 8
  %22 = icmp eq i64 %1, 0
  br i1 %22, label %114, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %3, i64 0, i32 0
  %25 = bitcast i8** %7 to i8*
  %26 = bitcast %"class.llvm::SmallString"* %6 to %"class.llvm::SmallVectorTemplateBase.79"*
  %27 = bitcast i8** %10 to i8*
  %28 = bitcast i8** %18 to i64*
  %29 = bitcast %"class.llvm::SmallString"* %6 to i64*
  br label %30

30:                                               ; preds = %111, %23
  %31 = phi i8* [ %16, %23 ], [ %113, %111 ]
  %32 = phi i8* [ %16, %23 ], [ %112, %111 ]
  %33 = phi i64 [ 0, %23 ], [ %109, %111 ]
  %34 = icmp eq i8* %32, %31
  br i1 %34, label %35, label %54

35:                                               ; preds = %30
  %36 = icmp eq i64 %33, %1
  br i1 %36, label %114, label %37

37:                                               ; preds = %35, %51
  %38 = phi i64 [ %52, %51 ], [ %33, %35 ]
  %39 = getelementptr inbounds i8, i8* %0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = icmp ult i8 %40, 64
  %43 = shl i64 1, %41
  %44 = and i64 %43, 4294983169
  %45 = icmp ne i64 %44, 0
  %46 = and i1 %42, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %37
  %48 = icmp eq i8 %40, 10
  %49 = and i1 %48, %4
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #22
  store i8* null, i8** %7, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* %24, i8** nonnull dereferenceable(8) %7) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #22
  br label %51

51:                                               ; preds = %50, %47
  %52 = add i64 %38, 1
  %53 = icmp eq i64 %52, %1
  br i1 %53, label %114, label %37

54:                                               ; preds = %37, %30
  %55 = phi i64 [ %33, %30 ], [ %38, %37 ]
  %56 = add i64 %55, 1
  %57 = icmp ult i64 %56, %1
  %58 = getelementptr inbounds i8, i8* %0, i64 %55
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 92
  %61 = and i1 %57, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %54
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #22
  %63 = getelementptr inbounds i8, i8* %0, i64 %56
  %64 = load i8, i8* %63, align 1
  store i8 %64, i8* %8, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"* nonnull %26, i8* nonnull dereferenceable(1) %8) #23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #22
  br label %107

65:                                               ; preds = %54
  switch i8 %59, label %86 [
    i8 39, label %66
    i8 34, label %66
  ]

66:                                               ; preds = %65, %65
  %67 = icmp eq i64 %56, %1
  br i1 %67, label %114, label %68

68:                                               ; preds = %66, %81
  %69 = phi i64 [ %84, %81 ], [ %56, %66 ]
  %70 = getelementptr inbounds i8, i8* %0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, %59
  br i1 %72, label %107, label %73

73:                                               ; preds = %68
  %74 = icmp eq i8 %71, 92
  br i1 %74, label %75, label %81

75:                                               ; preds = %73
  %76 = add i64 %69, 1
  %77 = icmp eq i64 %76, %1
  %78 = select i1 %77, i64 %69, i64 %76
  %79 = getelementptr inbounds i8, i8* %0, i64 %78
  %80 = load i8, i8* %79, align 1
  br label %81

81:                                               ; preds = %75, %73
  %82 = phi i8 [ %71, %73 ], [ %80, %75 ]
  %83 = phi i64 [ %69, %73 ], [ %78, %75 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #22
  store i8 %82, i8* %9, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"* nonnull %26, i8* nonnull dereferenceable(1) %9) #23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #22
  %84 = add i64 %83, 1
  %85 = icmp eq i64 %84, %1
  br i1 %85, label %114, label %68

86:                                               ; preds = %65
  %87 = zext i8 %59 to i64
  %88 = icmp ult i8 %59, 64
  %89 = shl i64 1, %87
  %90 = and i64 %89, 4294983169
  %91 = icmp ne i64 %90, 0
  %92 = and i1 %88, %91
  br i1 %92, label %93, label %106

93:                                               ; preds = %86
  %94 = load i8*, i8** %17, align 8
  %95 = load i8*, i8** %18, align 8
  %96 = icmp eq i8* %94, %95
  %97 = ptrtoint i8* %94 to i64
  br i1 %96, label %104, label %98

98:                                               ; preds = %93
  %99 = ptrtoint i8* %95 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #22
  %100 = sub i64 %99, %97
  %101 = call { i8*, i64 } @_ZN4llvm11StringSaver4saveENS_9StringRefE(%"class.llvm::StringSaver"* %2, i8* %94, i64 %100) #24
  %102 = extractvalue { i8*, i64 } %101, 0
  store i8* %102, i8** %10, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* %24, i8** nonnull dereferenceable(8) %10) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #22
  %103 = load i64, i64* %29, align 8
  br label %104

104:                                              ; preds = %98, %93
  %105 = phi i64 [ %103, %98 ], [ %97, %93 ]
  store i64 %105, i64* %28, align 8
  br label %107

106:                                              ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #22
  store i8 %59, i8* %11, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"* nonnull %26, i8* nonnull dereferenceable(1) %11) #23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #22
  br label %107

107:                                              ; preds = %68, %106, %104, %62
  %108 = phi i64 [ %56, %62 ], [ %55, %104 ], [ %55, %106 ], [ %69, %68 ]
  %109 = add i64 %108, 1
  %110 = icmp eq i64 %109, %1
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = load i8*, i8** %17, align 8
  %113 = load i8*, i8** %18, align 8
  br label %30

114:                                              ; preds = %107, %35, %66, %51, %81, %5
  %115 = load i8*, i8** %17, align 8
  %116 = load i8*, i8** %18, align 8
  %117 = icmp eq i8* %115, %116
  br i1 %117, label %126, label %118

118:                                              ; preds = %114
  %119 = ptrtoint i8* %116 to i64
  %120 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %3, i64 0, i32 0
  %121 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #22
  %122 = ptrtoint i8* %115 to i64
  %123 = sub i64 %119, %122
  %124 = call { i8*, i64 } @_ZN4llvm11StringSaver4saveENS_9StringRefE(%"class.llvm::StringSaver"* %2, i8* %115, i64 %123) #24
  %125 = extractvalue { i8*, i64 } %124, 0
  store i8* %125, i8** %12, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* %120, i8** nonnull dereferenceable(8) %12) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #22
  br label %126

126:                                              ; preds = %118, %114
  br i1 %4, label %127, label %130

127:                                              ; preds = %126
  %128 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %3, i64 0, i32 0
  %129 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #22
  store i8* null, i8** %13, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* %128, i8** nonnull dereferenceable(8) %13) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #22
  br label %130

130:                                              ; preds = %127, %126
  %131 = load i8*, i8** %17, align 8
  %132 = icmp eq i8* %131, %16
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  call void @free(i8* %131) #24
  br label %134

134:                                              ; preds = %130, %133
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %14) #22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.74", %"class.llvm::SmallVectorTemplateBase.74"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.74", %"class.llvm::SmallVectorTemplateBase.74"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !30

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.74", %"class.llvm::SmallVectorTemplateBase.74"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.74", %"class.llvm::SmallVectorTemplateBase.74"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #24
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.79", %"class.llvm::SmallVectorTemplateBase.79"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.79", %"class.llvm::SmallVectorTemplateBase.79"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !30

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.79", %"class.llvm::SmallVectorTemplateBase.79"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.79", %"class.llvm::SmallVectorTemplateBase.79"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 1) #24
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = load i8, i8* %1, align 1
  store i8 %14, i8* %13, align 1
  %15 = load i8*, i8** %3, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %16, i8** %3, align 8
  ret void
}

; Function Attrs: optsize
declare { i8*, i64 } @_ZN4llvm11StringSaver4saveENS_9StringRefE(%"class.llvm::StringSaver"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl26TokenizeWindowsCommandLineENS_9StringRefERNS_11StringSaverERNS_15SmallVectorImplIPKcEEb(i8*, i64, %"class.llvm::StringSaver"* dereferenceable(8), %"class.llvm::SmallVectorImpl.73"* dereferenceable(32), i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"class.llvm::SmallString", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = bitcast %"class.llvm::SmallString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %15) #22
  %16 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 128, i1 false)
  %17 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %18 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %6, i64 1, i32 0
  %22 = bitcast i8** %20 to %"class.llvm::SmallVector.77"**
  store %"class.llvm::SmallVector.77"* %21, %"class.llvm::SmallVector.77"** %22, align 8
  %23 = icmp eq i64 %1, 0
  br i1 %23, label %100, label %24

24:                                               ; preds = %5
  %25 = bitcast %"class.llvm::SmallString"* %6 to %"class.llvm::SmallVectorTemplateBase.79"*
  %26 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %3, i64 0, i32 0
  %27 = bitcast i8** %9 to i8*
  %28 = bitcast i8** %19 to i64*
  %29 = bitcast %"class.llvm::SmallString"* %6 to i64*
  %30 = bitcast i8** %10 to i8*
  %31 = bitcast i8** %7 to i8*
  br label %36

32:                                               ; preds = %87
  %33 = load i8*, i8** %18, align 8
  %34 = load i8*, i8** %19, align 8
  %35 = icmp eq i8* %33, %34
  br i1 %35, label %100, label %92

36:                                               ; preds = %24, %87
  %37 = phi i32 [ 0, %24 ], [ %89, %87 ]
  %38 = phi i64 [ 0, %24 ], [ %90, %87 ]
  switch i32 %37, label %87 [
    i32 0, label %39
    i32 1, label %56
    i32 2, label %81
  ]

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %0, i64 %38
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = icmp ult i8 %41, 64
  %44 = shl i64 1, %42
  %45 = and i64 %44, 4294983169
  %46 = icmp ne i64 %45, 0
  %47 = and i1 %43, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = icmp eq i8 %41, 10
  %50 = and i1 %49, %4
  br i1 %50, label %51, label %87

51:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #22
  store i8* null, i8** %7, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* %26, i8** nonnull dereferenceable(8) %7) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #22
  br label %87

52:                                               ; preds = %39
  switch i8 %41, label %55 [
    i8 34, label %87
    i8 92, label %53
  ]

53:                                               ; preds = %52
  %54 = call fastcc i64 @_ZL14parseBackslashN4llvm9StringRefEmRNS_11SmallStringILj128EEE(i8* %0, i64 %1, i64 %38, %"class.llvm::SmallString"* nonnull dereferenceable(152) %6) #23
  br label %87

55:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #22
  store i8 %41, i8* %8, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"* nonnull %25, i8* nonnull dereferenceable(1) %8) #23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #22
  br label %87

56:                                               ; preds = %36
  %57 = getelementptr inbounds i8, i8* %0, i64 %38
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = icmp ult i8 %58, 64
  %61 = shl i64 1, %59
  %62 = and i64 %61, 4294983169
  %63 = icmp ne i64 %62, 0
  %64 = and i1 %60, %63
  br i1 %64, label %65, label %77

65:                                               ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #22
  %66 = load i8*, i8** %18, align 8
  %67 = load i64, i64* %28, align 8
  %68 = ptrtoint i8* %66 to i64
  %69 = sub i64 %67, %68
  %70 = call { i8*, i64 } @_ZN4llvm11StringSaver4saveENS_9StringRefE(%"class.llvm::StringSaver"* %2, i8* %66, i64 %69) #24
  %71 = extractvalue { i8*, i64 } %70, 0
  store i8* %71, i8** %9, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* %26, i8** nonnull dereferenceable(8) %9) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #22
  %72 = load i64, i64* %29, align 8
  store i64 %72, i64* %28, align 8
  br i1 %4, label %73, label %87

73:                                               ; preds = %65
  %74 = load i8, i8* %57, align 1
  %75 = icmp eq i8 %74, 10
  br i1 %75, label %76, label %87

76:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #22
  store i8* null, i8** %10, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* %26, i8** nonnull dereferenceable(8) %10) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #22
  br label %87

77:                                               ; preds = %56
  switch i8 %58, label %80 [
    i8 34, label %87
    i8 92, label %78
  ]

78:                                               ; preds = %77
  %79 = call fastcc i64 @_ZL14parseBackslashN4llvm9StringRefEmRNS_11SmallStringILj128EEE(i8* %0, i64 %1, i64 %38, %"class.llvm::SmallString"* nonnull dereferenceable(152) %6) #23
  br label %87

80:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #22
  store i8 %58, i8* %11, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"* nonnull %25, i8* nonnull dereferenceable(1) %11) #23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #22
  br label %87

81:                                               ; preds = %36
  %82 = getelementptr inbounds i8, i8* %0, i64 %38
  %83 = load i8, i8* %82, align 1
  switch i8 %83, label %86 [
    i8 34, label %87
    i8 92, label %84
  ]

84:                                               ; preds = %81
  %85 = call fastcc i64 @_ZL14parseBackslashN4llvm9StringRefEmRNS_11SmallStringILj128EEE(i8* %0, i64 %1, i64 %38, %"class.llvm::SmallString"* nonnull dereferenceable(152) %6) #23
  br label %87

86:                                               ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #22
  store i8 %83, i8* %12, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"* nonnull %25, i8* nonnull dereferenceable(1) %12) #23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #22
  br label %87

87:                                               ; preds = %81, %77, %52, %36, %86, %65, %73, %76, %48, %51, %84, %80, %78, %55, %53
  %88 = phi i64 [ %38, %51 ], [ %38, %48 ], [ %54, %53 ], [ %38, %55 ], [ %38, %76 ], [ %38, %73 ], [ %38, %65 ], [ %79, %78 ], [ %38, %80 ], [ %85, %84 ], [ %38, %86 ], [ %38, %52 ], [ %38, %77 ], [ %38, %36 ], [ %38, %81 ]
  %89 = phi i32 [ 0, %51 ], [ 0, %48 ], [ 1, %53 ], [ 1, %55 ], [ 0, %76 ], [ 0, %73 ], [ 0, %65 ], [ 1, %78 ], [ 1, %80 ], [ 2, %84 ], [ 2, %86 ], [ 2, %52 ], [ 2, %77 ], [ %37, %36 ], [ 1, %81 ]
  %90 = add i64 %88, 1
  %91 = icmp eq i64 %90, %1
  br i1 %91, label %32, label %36

92:                                               ; preds = %32
  %93 = ptrtoint i8* %34 to i64
  %94 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %3, i64 0, i32 0
  %95 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #22
  %96 = ptrtoint i8* %33 to i64
  %97 = sub i64 %93, %96
  %98 = call { i8*, i64 } @_ZN4llvm11StringSaver4saveENS_9StringRefE(%"class.llvm::StringSaver"* %2, i8* %33, i64 %97) #24
  %99 = extractvalue { i8*, i64 } %98, 0
  store i8* %99, i8** %13, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* %94, i8** nonnull dereferenceable(8) %13) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #22
  br label %100

100:                                              ; preds = %5, %92, %32
  br i1 %4, label %101, label %104

101:                                              ; preds = %100
  %102 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %3, i64 0, i32 0
  %103 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #22
  store i8* null, i8** %14, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* %102, i8** nonnull dereferenceable(8) %14) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #22
  br label %104

104:                                              ; preds = %101, %100
  %105 = load i8*, i8** %18, align 8
  %106 = icmp eq i8* %105, %17
  br i1 %106, label %108, label %107

107:                                              ; preds = %104
  call void @free(i8* %105) #24
  br label %108

108:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %15) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i64 @_ZL14parseBackslashN4llvm9StringRefEmRNS_11SmallStringILj128EEE(i8*, i64, i64, %"class.llvm::SmallString"* dereferenceable(152)) unnamed_addr #0 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  br label %8

8:                                                ; preds = %14, %4
  %9 = phi i64 [ %2, %4 ], [ %11, %14 ]
  %10 = phi i32 [ 0, %4 ], [ %12, %14 ]
  %11 = add i64 %9, 1
  %12 = add nuw nsw i32 %10, 1
  %13 = icmp eq i64 %11, %1
  br i1 %13, label %25, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %0, i64 %11
  %16 = load i8, i8* %15, align 1
  switch i8 %16, label %25 [
    i8 92, label %8
    i8 34, label %17
  ]

17:                                               ; preds = %14
  %18 = lshr i32 %12, 1
  %19 = zext i32 %18 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  store i8 92, i8* %5, align 1
  %20 = bitcast %"class.llvm::SmallString"* %3 to %"class.llvm::SmallVectorImpl.78"*
  call void @_ZN4llvm15SmallVectorImplIcE6appendEmRKc(%"class.llvm::SmallVectorImpl.78"* %20, i64 %19, i8* nonnull dereferenceable(1) %5) #24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  %21 = and i32 %12, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.llvm::SmallString"* %3 to %"class.llvm::SmallVectorTemplateBase.79"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #22
  store i8 34, i8* %7, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"* %24, i8* nonnull dereferenceable(1) %7) #23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #22
  br label %28

25:                                               ; preds = %8, %14
  %26 = zext i32 %12 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  store i8 92, i8* %6, align 1
  %27 = bitcast %"class.llvm::SmallString"* %3 to %"class.llvm::SmallVectorImpl.78"*
  call void @_ZN4llvm15SmallVectorImplIcE6appendEmRKc(%"class.llvm::SmallVectorImpl.78"* %27, i64 %26, i8* nonnull dereferenceable(1) %6) #24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  br label %28

28:                                               ; preds = %17, %25, %23
  %29 = phi i64 [ %11, %23 ], [ %9, %25 ], [ %9, %17 ]
  ret i64 %29
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl19ExpandResponseFilesERNS_11StringSaverEPFvNS_9StringRefES2_RNS_15SmallVectorImplIPKcEEbES8_bb(%"class.llvm::StringSaver"* dereferenceable(8), void (i8*, i64, %"class.llvm::StringSaver"*, %"class.llvm::SmallVectorImpl.73"*, i1)* nocapture, %"class.llvm::SmallVectorImpl.73"* dereferenceable(32), i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca %"class.llvm::StringRef", align 8
  %9 = alloca %"class.llvm::ErrorOr", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.llvm::StringRef", align 8
  %13 = alloca %"class.llvm::Twine", align 8
  %14 = alloca %"class.llvm::SmallString", align 8
  %15 = alloca %"class.llvm::Twine", align 8
  %16 = alloca %"class.llvm::SmallString", align 8
  %17 = alloca %"class.llvm::Twine", align 8
  %18 = alloca %"class.llvm::StringRef", align 8
  %19 = alloca %"class.llvm::Twine", align 8
  %20 = alloca %"class.llvm::Twine", align 8
  %21 = alloca %"class.llvm::Twine", align 8
  %22 = alloca %"class.llvm::SmallVector.84", align 8
  %23 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.llvm::SmallVectorImpl.73"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %302, label %29

29:                                               ; preds = %5
  %30 = bitcast %"class.llvm::SmallVectorImpl.73"* %2 to i8***
  %31 = bitcast %"class.llvm::SmallVector.84"* %22 to i8*
  %32 = getelementptr inbounds %"class.llvm::SmallVector.84", %"class.llvm::SmallVector.84"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %33 = getelementptr inbounds %"class.llvm::SmallVector.84", %"class.llvm::SmallVector.84"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.llvm::SmallVector.84", %"class.llvm::SmallVector.84"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.llvm::SmallVector.84", %"class.llvm::SmallVector.84"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %36 = getelementptr inbounds %"class.llvm::SmallVector.84", %"class.llvm::SmallVector.84"* %22, i64 0, i32 0
  %37 = bitcast %"class.llvm::StringRef"* %8 to i8*
  %38 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %8, i64 0, i32 0
  %39 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %8, i64 0, i32 1
  %40 = getelementptr inbounds %"class.llvm::ErrorOr", %"class.llvm::ErrorOr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %41 = getelementptr inbounds %"class.llvm::ErrorOr", %"class.llvm::ErrorOr"* %9, i64 0, i32 1
  %42 = bitcast %"class.llvm::Twine"* %10 to i8*
  %43 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  %44 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  %45 = bitcast %"class.llvm::Twine"* %10 to %"class.llvm::StringRef"**
  %46 = bitcast %"class.llvm::ErrorOr"* %9 to %"class.llvm::MemoryBuffer"**
  %47 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = bitcast i8** %34 to i64*
  %53 = bitcast %"class.llvm::SmallVector.84"* %22 to i64*
  %54 = bitcast %"class.llvm::SmallVector.84"* %22 to i8***
  %55 = bitcast %"class.llvm::StringRef"* %12 to i8*
  %56 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %12, i64 0, i32 0
  %57 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %12, i64 0, i32 1
  %58 = bitcast %"class.llvm::Twine"* %13 to i8*
  %59 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 2
  %60 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 3
  %61 = bitcast %"class.llvm::Twine"* %13 to %"class.llvm::StringRef"**
  %62 = bitcast %"class.llvm::SmallString"* %14 to i8*
  %63 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %64 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %14, i64 1, i32 0
  %68 = bitcast i8** %66 to %"class.llvm::SmallVector.77"**
  %69 = bitcast %"class.llvm::SmallString"* %14 to %"class.llvm::SmallVectorImpl.78"*
  %70 = bitcast %"class.llvm::Twine"* %15 to i8*
  %71 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %15, i64 0, i32 2
  %72 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %15, i64 0, i32 3
  %73 = bitcast %"class.llvm::Twine"* %15 to %"class.llvm::StringRef"**
  %74 = bitcast %"class.llvm::SmallString"* %16 to i8*
  %75 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %76 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %79 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %16, i64 1, i32 0
  %80 = bitcast i8** %78 to %"class.llvm::SmallVector.77"**
  %81 = bitcast %"class.llvm::SmallString"* %16 to %"class.llvm::SmallVectorImpl.78"*
  %82 = bitcast i8** %77 to i64*
  %83 = bitcast %"class.llvm::Twine"* %17 to i8*
  %84 = bitcast %"class.llvm::StringRef"* %18 to i8*
  %85 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %18, i64 0, i32 0
  %86 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %18, i64 0, i32 1
  %87 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %17, i64 0, i32 2
  %88 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %17, i64 0, i32 3
  %89 = bitcast %"class.llvm::Twine"* %17 to %"class.llvm::StringRef"**
  %90 = bitcast %"class.llvm::Twine"* %19 to i8*
  %91 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %19, i64 0, i32 2
  %92 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %19, i64 0, i32 3
  %93 = bitcast %"class.llvm::Twine"* %19 to %"class.llvm::StringRef"**
  %94 = bitcast %"class.llvm::Twine"* %20 to i8*
  %95 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %20, i64 0, i32 3
  %96 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %20, i64 0, i32 2
  %97 = bitcast %"class.llvm::Twine"* %21 to i8*
  %98 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %21, i64 0, i32 3
  %99 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %21, i64 0, i32 2
  %100 = bitcast %"class.llvm::SmallString"* %14 to %"class.llvm::SmallVectorTemplateBase.79"*
  %101 = bitcast i8** %23 to i8***
  %102 = bitcast i8** %34 to i8***
  %103 = getelementptr inbounds %"class.llvm::SmallVector.84", %"class.llvm::SmallVector.84"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  br label %104

104:                                              ; preds = %29, %292
  %105 = phi i64 [ %27, %29 ], [ %298, %292 ]
  %106 = phi i64 [ 0, %29 ], [ %296, %292 ]
  %107 = phi i32 [ 0, %29 ], [ %293, %292 ]
  %108 = phi i8 [ 1, %29 ], [ %294, %292 ]
  %109 = phi i32 [ 0, %29 ], [ %295, %292 ]
  %110 = inttoptr i64 %105 to i8**
  %111 = getelementptr inbounds i8*, i8** %110, i64 %106
  %112 = load i8*, i8** %111, align 8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %114, label %116

114:                                              ; preds = %104
  %115 = add i32 %107, 1
  br label %292

116:                                              ; preds = %104
  %117 = load i8, i8* %112, align 1
  %118 = icmp eq i8 %117, 64
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = add i32 %107, 1
  br label %292

121:                                              ; preds = %116
  %122 = add i32 %109, 1
  %123 = icmp ugt i32 %109, 20
  br i1 %123, label %306, label %124

124:                                              ; preds = %121
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 16, i1 false)
  store i8* %32, i8** %33, align 8
  store i8* %32, i8** %34, align 8
  store i8* %32, i8** %35, align 8
  %125 = getelementptr inbounds i8, i8* %112, i64 1
  %126 = icmp eq i8* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = call i64 @strlen(i8* nonnull %125) #27
  br label %129

129:                                              ; preds = %124, %127
  %130 = phi i64 [ %128, %127 ], [ 0, %124 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37)
  store i8* %125, i8** %38, align 8
  store i64 %130, i64* %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false) #22
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #22
  store i8 5, i8* %43, align 8
  store i8 1, i8* %44, align 1
  store %"class.llvm::StringRef"* %8, %"class.llvm::StringRef"** %45, align 8
  call void @_ZN4llvm12MemoryBuffer7getFileERKNS_5TwineElbb(%"class.llvm::ErrorOr"* nonnull sret %9, %"class.llvm::Twine"* nonnull dereferenceable(24) %10, i64 -1, i1 zeroext true, i1 zeroext false) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #22
  %131 = load i8, i8* %41, align 8
  %132 = and i8 %131, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %245

134:                                              ; preds = %129
  %135 = load %"class.llvm::MemoryBuffer"*, %"class.llvm::MemoryBuffer"** %46, align 8
  %136 = getelementptr inbounds %"class.llvm::MemoryBuffer", %"class.llvm::MemoryBuffer"* %135, i64 0, i32 1
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds %"class.llvm::MemoryBuffer", %"class.llvm::MemoryBuffer"* %135, i64 0, i32 2
  %139 = bitcast i8** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = ptrtoint i8* %137 to i64
  %142 = sub i64 %140, %141
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #22
  %143 = call zeroext i1 @_ZN4llvm21hasUTF16ByteOrderMarkENS_8ArrayRefIcEE(i8* %137, i64 %142) #24
  br i1 %143, label %144, label %154

144:                                              ; preds = %134
  %145 = call zeroext i1 @_ZN4llvm24convertUTF16ToUTF8StringENS_8ArrayRefIcEERNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8* %137, i64 %142, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #24
  br i1 %145, label %146, label %237

146:                                              ; preds = %144
  %147 = load i8, i8* %51, align 1
  %148 = icmp slt i8 %147, 0
  %149 = load i8*, i8** %48, align 8
  %150 = select i1 %148, i8* %149, i8* %47
  %151 = load i64, i64* %49, align 8
  %152 = zext i8 %147 to i64
  %153 = select i1 %148, i64 %151, i64 %152
  br label %170

154:                                              ; preds = %134
  %155 = icmp ugt i64 %142, 2
  br i1 %155, label %156, label %170

156:                                              ; preds = %154
  %157 = load i8, i8* %137, align 1
  %158 = icmp eq i8 %157, -17
  br i1 %158, label %159, label %170

159:                                              ; preds = %156
  %160 = getelementptr inbounds i8, i8* %137, i64 1
  %161 = load i8, i8* %160, align 1
  %162 = icmp eq i8 %161, -69
  br i1 %162, label %163, label %170

163:                                              ; preds = %159
  %164 = getelementptr inbounds i8, i8* %137, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, -65
  br i1 %166, label %167, label %170

167:                                              ; preds = %163
  %168 = getelementptr inbounds i8, i8* %137, i64 3
  %169 = add i64 %142, -3
  br label %170

170:                                              ; preds = %167, %163, %159, %156, %154, %146
  %171 = phi i8* [ %150, %146 ], [ %168, %167 ], [ %137, %163 ], [ %137, %159 ], [ %137, %156 ], [ %137, %154 ]
  %172 = phi i64 [ %153, %146 ], [ %169, %167 ], [ %142, %163 ], [ %142, %159 ], [ %142, %156 ], [ %142, %154 ]
  call void %1(i8* %171, i64 %172, %"class.llvm::StringSaver"* dereferenceable(8) %0, %"class.llvm::SmallVectorImpl.73"* nonnull dereferenceable(32) %36, i1 zeroext %3) #24
  br i1 %4, label %173, label %237

173:                                              ; preds = %170
  %174 = load i64, i64* %52, align 8
  %175 = load i64, i64* %53, align 8
  %176 = icmp eq i64 %174, %175
  br i1 %176, label %237, label %177

177:                                              ; preds = %173, %229
  %178 = phi i64 [ %230, %229 ], [ %175, %173 ]
  %179 = phi i64 [ %231, %229 ], [ %174, %173 ]
  %180 = phi i64 [ %233, %229 ], [ 0, %173 ]
  %181 = phi i32 [ %232, %229 ], [ 0, %173 ]
  %182 = inttoptr i64 %178 to i8**
  %183 = getelementptr inbounds i8*, i8** %182, i64 %180
  %184 = load i8*, i8** %183, align 8
  %185 = icmp eq i8* %184, null
  br i1 %185, label %229, label %186

186:                                              ; preds = %177
  %187 = call i64 @strlen(i8* nonnull %184) #27
  %188 = load i8, i8* %184, align 1
  %189 = icmp eq i8 %188, 64
  br i1 %189, label %190, label %229

190:                                              ; preds = %186
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #22
  %191 = icmp ne i64 %187, 0
  %192 = zext i1 %191 to i64
  %193 = getelementptr inbounds i8, i8* %184, i64 %192
  %194 = sub i64 %187, %192
  store i8* %193, i8** %56, align 8
  store i64 %194, i64* %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #22
  store i8 5, i8* %59, align 8
  store i8 1, i8* %60, align 1
  store %"class.llvm::StringRef"* %12, %"class.llvm::StringRef"** %61, align 8
  %195 = call zeroext i1 @_ZN4llvm3sys4path11is_relativeERKNS_5TwineE(%"class.llvm::Twine"* nonnull dereferenceable(24) %13) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #22
  br i1 %195, label %196, label %226

196:                                              ; preds = %190
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %62) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 128, i1 false) #22
  store i8* %63, i8** %64, align 8
  store i8* %63, i8** %65, align 8
  store %"class.llvm::SmallVector.77"* %67, %"class.llvm::SmallVector.77"** %68, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #22
  store i8 64, i8* %6, align 1
  call void @_ZN4llvm15SmallVectorImplIcE6appendEmRKc(%"class.llvm::SmallVectorImpl.78"* nonnull %69, i64 1, i8* nonnull dereferenceable(1) %6) #24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #22
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #22
  store i8 5, i8* %71, align 8
  store i8 1, i8* %72, align 1
  store %"class.llvm::StringRef"* %8, %"class.llvm::StringRef"** %73, align 8
  %197 = call zeroext i1 @_ZN4llvm3sys4path11is_relativeERKNS_5TwineE(%"class.llvm::Twine"* nonnull dereferenceable(24) %15) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #22
  br i1 %197, label %198, label %209

198:                                              ; preds = %196
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %74) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 128, i1 false) #22
  store i8* %75, i8** %76, align 8
  store i8* %75, i8** %77, align 8
  store %"class.llvm::SmallVector.77"* %79, %"class.llvm::SmallVector.77"** %80, align 8
  %199 = call { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs12current_pathERNS_15SmallVectorImplIcEE(%"class.llvm::SmallVectorImpl.78"* nonnull dereferenceable(32) %81) #24
  %200 = load i8*, i8** %76, align 8
  %201 = load i64, i64* %82, align 8
  %202 = ptrtoint i8* %200 to i64
  %203 = sub i64 %201, %202
  %204 = getelementptr inbounds i8, i8* %200, i64 %203
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl.78"* nonnull %69, i8* %200, i8* %204) #24
  %205 = load i8*, i8** %76, align 8
  %206 = icmp eq i8* %205, %75
  br i1 %206, label %208, label %207

207:                                              ; preds = %198
  call void @free(i8* %205) #24
  br label %208

208:                                              ; preds = %207, %198
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %74) #22
  br label %209

209:                                              ; preds = %208, %196
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #22
  %210 = load i8*, i8** %38, align 8
  %211 = load i64, i64* %39, align 8
  %212 = call { i8*, i64 } @_ZN4llvm3sys4path11parent_pathENS_9StringRefE(i8* %210, i64 %211) #24
  %213 = extractvalue { i8*, i64 } %212, 0
  store i8* %213, i8** %85, align 8
  %214 = extractvalue { i8*, i64 } %212, 1
  store i64 %214, i64* %86, align 8
  store i8 5, i8* %87, align 8
  store i8 1, i8* %88, align 1
  store %"class.llvm::StringRef"* %18, %"class.llvm::StringRef"** %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #22
  store i8 5, i8* %91, align 8
  store i8 1, i8* %92, align 1
  store %"class.llvm::StringRef"* %12, %"class.llvm::StringRef"** %93, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #22
  store i8 1, i8* %95, align 1
  store i8 1, i8* %96, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #22
  store i8 1, i8* %98, align 1
  store i8 1, i8* %99, align 8
  call void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl.78"* nonnull dereferenceable(32) %69, %"class.llvm::Twine"* nonnull dereferenceable(24) %17, %"class.llvm::Twine"* nonnull dereferenceable(24) %19, %"class.llvm::Twine"* nonnull dereferenceable(24) %20, %"class.llvm::Twine"* nonnull dereferenceable(24) %21) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #22
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #22
  store i8 0, i8* %7, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"* nonnull %100, i8* nonnull dereferenceable(1) %7) #24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #22
  %215 = load i8*, i8** %65, align 8
  %216 = getelementptr inbounds i8, i8* %215, i64 -1
  store i8* %216, i8** %65, align 8
  %217 = load i8*, i8** %64, align 8
  %218 = call { i8*, i64 } @_ZN4llvm11StringSaver4saveEPKc(%"class.llvm::StringSaver"* %0, i8* %217) #24
  %219 = extractvalue { i8*, i64 } %218, 0
  %220 = load i8**, i8*** %54, align 8
  %221 = getelementptr inbounds i8*, i8** %220, i64 %180
  store i8* %219, i8** %221, align 8
  %222 = load i8*, i8** %64, align 8
  %223 = icmp eq i8* %222, %63
  br i1 %223, label %225, label %224

224:                                              ; preds = %209
  call void @free(i8* %222) #24
  br label %225

225:                                              ; preds = %224, %209
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %62) #22
  br label %226

226:                                              ; preds = %225, %190
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #22
  %227 = load i64, i64* %52, align 8
  %228 = load i64, i64* %53, align 8
  br label %229

229:                                              ; preds = %226, %186, %177
  %230 = phi i64 [ %178, %186 ], [ %228, %226 ], [ %178, %177 ]
  %231 = phi i64 [ %179, %186 ], [ %227, %226 ], [ %179, %177 ]
  %232 = add i32 %181, 1
  %233 = zext i32 %232 to i64
  %234 = sub i64 %231, %230
  %235 = ashr exact i64 %234, 3
  %236 = icmp ugt i64 %235, %233
  br i1 %236, label %177, label %237

237:                                              ; preds = %229, %173, %170, %144
  %238 = phi i1 [ false, %144 ], [ true, %170 ], [ true, %173 ], [ true, %229 ]
  %239 = load i8, i8* %51, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %243

241:                                              ; preds = %237
  %242 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %242) #25
  br label %243

243:                                              ; preds = %241, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #22
  %244 = load i8, i8* %41, align 8
  br label %245

245:                                              ; preds = %243, %129
  %246 = phi i8 [ %244, %243 ], [ %131, %129 ]
  %247 = phi i1 [ %238, %243 ], [ false, %129 ]
  %248 = and i8 %246, 1
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %250, label %258

250:                                              ; preds = %245
  %251 = load %"class.llvm::MemoryBuffer"*, %"class.llvm::MemoryBuffer"** %46, align 8
  store %"class.llvm::MemoryBuffer"* null, %"class.llvm::MemoryBuffer"** %46, align 8
  %252 = icmp eq %"class.llvm::MemoryBuffer"* %251, null
  br i1 %252, label %258, label %253

253:                                              ; preds = %250
  %254 = bitcast %"class.llvm::MemoryBuffer"* %251 to void (%"class.llvm::MemoryBuffer"*)***
  %255 = load void (%"class.llvm::MemoryBuffer"*)**, void (%"class.llvm::MemoryBuffer"*)*** %254, align 8
  %256 = getelementptr inbounds void (%"class.llvm::MemoryBuffer"*)*, void (%"class.llvm::MemoryBuffer"*)** %255, i64 1
  %257 = load void (%"class.llvm::MemoryBuffer"*)*, void (%"class.llvm::MemoryBuffer"*)** %256, align 8
  call void %257(%"class.llvm::MemoryBuffer"* nonnull %251) #24
  br label %258

258:                                              ; preds = %245, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37)
  br i1 %247, label %261, label %259

259:                                              ; preds = %258
  %260 = add i32 %107, 1
  br label %284

261:                                              ; preds = %258
  %262 = load i8**, i8*** %30, align 8
  %263 = getelementptr inbounds i8*, i8** %262, i64 %106
  %264 = getelementptr inbounds i8*, i8** %263, i64 1
  %265 = load i64, i64* %24, align 8
  %266 = ptrtoint i8** %264 to i64
  %267 = sub i64 %265, %266
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %271

269:                                              ; preds = %261
  %270 = inttoptr i64 %265 to i8**
  br label %276

271:                                              ; preds = %261
  %272 = bitcast i8** %263 to i8*
  %273 = bitcast i8** %264 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %267, i1 false) #22
  %274 = load i8**, i8*** %101, align 8
  %275 = load i8**, i8*** %30, align 8
  br label %276

276:                                              ; preds = %269, %271
  %277 = phi i8** [ %262, %269 ], [ %275, %271 ]
  %278 = phi i8** [ %270, %269 ], [ %274, %271 ]
  %279 = getelementptr inbounds i8*, i8** %278, i64 -1
  store i8** %279, i8*** %101, align 8
  %280 = getelementptr inbounds i8*, i8** %277, i64 %106
  %281 = load i8**, i8*** %54, align 8
  %282 = load i8**, i8*** %102, align 8
  %283 = call i8** @_ZN4llvm15SmallVectorImplIPKcE6insertIPS2_EES5_S5_T_S6_(%"class.llvm::SmallVectorImpl.73"* %2, i8** %280, i8** %281, i8** %282) #23
  br label %284

284:                                              ; preds = %276, %259
  %285 = phi i8 [ %108, %276 ], [ 0, %259 ]
  %286 = phi i32 [ %107, %276 ], [ %260, %259 ]
  %287 = phi i32 [ 0, %276 ], [ 3, %259 ]
  %288 = load i8*, i8** %33, align 8
  %289 = icmp eq i8* %288, %32
  br i1 %289, label %291, label %290

290:                                              ; preds = %284
  call void @free(i8* %288) #24
  br label %291

291:                                              ; preds = %290, %284
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #22
  switch i32 %287, label %306 [
    i32 0, label %292
    i32 3, label %292
  ]

292:                                              ; preds = %119, %114, %291, %291
  %293 = phi i32 [ %286, %291 ], [ %286, %291 ], [ %120, %119 ], [ %115, %114 ]
  %294 = phi i8 [ %285, %291 ], [ %285, %291 ], [ %108, %119 ], [ %108, %114 ]
  %295 = phi i32 [ %122, %291 ], [ %122, %291 ], [ %109, %119 ], [ %109, %114 ]
  %296 = zext i32 %293 to i64
  %297 = load i64, i64* %24, align 8
  %298 = load i64, i64* %26, align 8
  %299 = sub i64 %297, %298
  %300 = ashr exact i64 %299, 3
  %301 = icmp eq i64 %300, %296
  br i1 %301, label %302, label %104

302:                                              ; preds = %292, %5
  %303 = phi i8 [ 1, %5 ], [ %294, %292 ]
  %304 = and i8 %303, 1
  %305 = icmp ne i8 %304, 0
  br label %306

306:                                              ; preds = %121, %291, %302
  %307 = phi i1 [ %305, %302 ], [ false, %291 ], [ false, %121 ]
  ret i1 %307
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i8** @_ZN4llvm15SmallVectorImplIPKcE6insertIPS2_EES5_S5_T_S6_(%"class.llvm::SmallVectorImpl.73"*, i8**, i8**, i8**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.llvm::SmallVectorImpl.73"* %0 to i8***
  %6 = bitcast %"class.llvm::SmallVectorImpl.73"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint i8** %1 to i64
  %9 = sub i64 %8, %7
  %10 = ashr exact i64 %9, 3
  %11 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i8***
  %13 = load i8**, i8*** %12, align 8
  %14 = icmp eq i8** %13, %1
  %15 = ptrtoint i8** %13 to i64
  br i1 %14, label %16, label %19

16:                                               ; preds = %4
  tail call void @_ZN4llvm15SmallVectorImplIPKcE6appendIPS2_EEvT_S6_(%"class.llvm::SmallVectorImpl.73"* %0, i8** %2, i8** %3) #23
  %17 = load i8**, i8*** %5, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 %10
  br label %94

19:                                               ; preds = %4
  %20 = inttoptr i64 %7 to i8**
  %21 = ptrtoint i8** %3 to i64
  %22 = ptrtoint i8** %2 to i64
  %23 = sub i64 %21, %22
  %24 = ashr exact i64 %23, 3
  %25 = sub i64 %15, %7
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %26, %24
  %28 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %30, %7
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, %27
  br i1 %33, label %34, label %41

34:                                               ; preds = %19
  %35 = shl i64 %27, 3
  %36 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %36, i8* %37, i64 %35, i64 8) #24
  %38 = load i8**, i8*** %5, align 8
  %39 = load i8**, i8*** %12, align 8
  %40 = ptrtoint i8** %39 to i64
  br label %41

41:                                               ; preds = %19, %34
  %42 = phi i64 [ %15, %19 ], [ %40, %34 ]
  %43 = phi i8** [ %13, %19 ], [ %39, %34 ]
  %44 = phi i8** [ %20, %19 ], [ %38, %34 ]
  %45 = getelementptr inbounds i8*, i8** %44, i64 %10
  %46 = bitcast i8** %45 to i8*
  %47 = ptrtoint i8** %45 to i64
  %48 = sub i64 %42, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp ult i64 %49, %24
  br i1 %50, label %66, label %51

51:                                               ; preds = %41
  %52 = sub nsw i64 0, %24
  %53 = getelementptr inbounds i8*, i8** %43, i64 %52
  tail call void @_ZN4llvm15SmallVectorImplIPKcE6appendINSt3__113move_iteratorIPS2_EEEEvT_S9_(%"class.llvm::SmallVectorImpl.73"* %0, i8** %53, i8** %43) #23
  %54 = ptrtoint i8** %53 to i64
  %55 = sub i64 %54, %47
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %51
  %58 = ashr exact i64 %55, 3
  %59 = sub nsw i64 0, %58
  %60 = getelementptr inbounds i8*, i8** %43, i64 %59
  %61 = bitcast i8** %60 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %46, i64 %55, i1 false) #22
  br label %62

62:                                               ; preds = %51, %57
  %63 = icmp eq i64 %23, 0
  br i1 %63, label %94, label %64

64:                                               ; preds = %62
  %65 = bitcast i8** %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %65, i64 %23, i1 false) #22
  br label %94

66:                                               ; preds = %41
  %67 = getelementptr inbounds i8*, i8** %43, i64 %24
  store i8** %67, i8*** %12, align 8
  %68 = icmp eq i8** %45, %43
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = sub nsw i64 0, %49
  %71 = getelementptr inbounds i8*, i8** %67, i64 %70
  %72 = bitcast i8** %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %46, i64 %48, i1 false) #22
  br label %73

73:                                               ; preds = %66, %69
  %74 = icmp eq i64 %48, 0
  br i1 %74, label %75, label %83

75:                                               ; preds = %83, %73
  %76 = phi i8** [ %2, %73 ], [ %91, %83 ]
  %77 = icmp eq i8** %76, %3
  br i1 %77, label %94, label %78

78:                                               ; preds = %75
  %79 = bitcast i8** %43 to i8*
  %80 = bitcast i8** %76 to i8*
  %81 = ptrtoint i8** %76 to i64
  %82 = sub i64 %21, %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %82, i1 false) #22
  br label %94

83:                                               ; preds = %73, %83
  %84 = phi i8** [ %90, %83 ], [ %45, %73 ]
  %85 = phi i64 [ %92, %83 ], [ %49, %73 ]
  %86 = phi i8** [ %91, %83 ], [ %2, %73 ]
  %87 = bitcast i8** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast i8** %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds i8*, i8** %84, i64 1
  %91 = getelementptr inbounds i8*, i8** %86, i64 1
  %92 = add i64 %85, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %75, label %83

94:                                               ; preds = %78, %75, %64, %62, %16
  %95 = phi i8** [ %18, %16 ], [ %45, %62 ], [ %45, %64 ], [ %45, %75 ], [ %45, %78 ]
  ret i8** %95
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl23ParseEnvironmentOptionsEPKcS2_S2_(i8*, i8*, i8*) local_unnamed_addr #0 {
  %4 = alloca %"class.llvm::Optional", align 8
  %5 = alloca %"class.llvm::SmallVector.89", align 8
  %6 = alloca %"class.llvm::BumpPtrAllocatorImpl", align 8
  %7 = alloca %"class.llvm::StringSaver", align 8
  %8 = alloca i8*, align 8
  %9 = getelementptr inbounds %"class.llvm::Optional", %"class.llvm::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #22
  %10 = getelementptr inbounds %"class.llvm::Optional", %"class.llvm::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i64 8
  %11 = getelementptr inbounds %"class.llvm::Optional", %"class.llvm::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i64 23
  %12 = getelementptr inbounds %"class.llvm::Optional", %"class.llvm::Optional"* %4, i64 0, i32 1
  %13 = icmp eq i8* %1, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = tail call i64 @strlen(i8* nonnull %1) #27
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i64 [ %15, %14 ], [ 0, %3 ]
  call void @_ZN4llvm3sys7Process6GetEnvENS_9StringRefE(%"class.llvm::Optional"* nonnull sret %4, i8* %1, i64 %17) #24
  %18 = load i8, i8* %12, align 8, !range !10
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %82, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.llvm::SmallVector.89"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %21) #22
  %22 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 160, i1 false)
  %23 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %24 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 160
  store i8* %27, i8** %26, align 8
  %28 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %28) #22
  %29 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 96, i1 false)
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %31 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #22
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 32
  store i8* %34, i8** %33, align 8
  %35 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %36 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  store i8* %35, i8** %38, align 8
  %39 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %6, i64 0, i32 4
  store i64 0, i64* %39, align 8
  %40 = bitcast %"class.llvm::StringSaver"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #22
  %41 = getelementptr inbounds %"class.llvm::StringSaver", %"class.llvm::StringSaver"* %7, i64 0, i32 0
  store %"class.llvm::BumpPtrAllocatorImpl"* %6, %"class.llvm::BumpPtrAllocatorImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %5, i64 0, i32 0, i32 0
  %43 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #22
  %44 = call { i8*, i64 } @_ZN4llvm11StringSaver4saveEPKc(%"class.llvm::StringSaver"* nonnull %7, i8* %0) #23
  %45 = extractvalue { i8*, i64 } %44, 0
  store i8* %45, i8** %8, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseIPKcLb1EE9push_backERKS2_(%"class.llvm::SmallVectorTemplateBase.74"* nonnull %42, i8** nonnull dereferenceable(8) %8) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #22
  %46 = load i8, i8* %11, align 1
  %47 = icmp slt i8 %46, 0
  %48 = bitcast %"class.llvm::Optional"* %4 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = select i1 %47, i8* %49, i8* %9
  %51 = bitcast i8* %10 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %46 to i64
  %54 = select i1 %47, i64 %52, i64 %53
  %55 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %5, i64 0, i32 0
  call void @_ZN4llvm2cl22TokenizeGNUCommandLineENS_9StringRefERNS_11StringSaverERNS_15SmallVectorImplIPKcEEb(i8* %50, i64 %54, %"class.llvm::StringSaver"* nonnull dereferenceable(8) %7, %"class.llvm::SmallVectorImpl.73"* nonnull dereferenceable(32) %55, i1 zeroext false) #23
  %56 = bitcast i8** %25 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.llvm::SmallVector.89"* %5 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = lshr exact i64 %60, 3
  %62 = trunc i64 %61 to i32
  %63 = inttoptr i64 %59 to i8**
  %64 = icmp eq i8* %2, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %20
  %66 = call i64 @strlen(i8* nonnull %2) #27
  br label %67

67:                                               ; preds = %20, %65
  %68 = phi i64 [ %66, %65 ], [ 0, %20 ]
  %69 = call zeroext i1 @_ZN4llvm2cl23ParseCommandLineOptionsEiPKPKcNS_9StringRefEb(i32 %62, i8** %63, i8* %2, i64 %68, i1 zeroext false) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #22
  call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev(%"class.llvm::BumpPtrAllocatorImpl"* nonnull %6) #24
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %28) #22
  %70 = load i8*, i8** %24, align 8
  %71 = icmp eq i8* %70, %23
  br i1 %71, label %73, label %72

72:                                               ; preds = %67
  call void @free(i8* %70) #24
  br label %73

73:                                               ; preds = %72, %67
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %21) #22
  %74 = load i8, i8* %12, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %73
  %77 = load i8, i8* %11, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %80) #25
  br label %81

81:                                               ; preds = %79, %76
  store i8 0, i8* %12, align 8
  br label %82

82:                                               ; preds = %16, %73, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #22
  ret void
}

; Function Attrs: optsize
declare void @_ZN4llvm3sys7Process6GetEnvENS_9StringRefE(%"class.llvm::Optional"* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZN4llvm11StringSaver4saveEPKc(%"class.llvm::StringSaver"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #27
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %5, %4 ], [ 0, %2 ]
  %8 = tail call { i8*, i64 } @_ZN4llvm11StringSaver4saveENS_9StringRefE(%"class.llvm::StringSaver"* %0, i8* %1, i64 %7) #24
  ret { i8*, i64 } %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl23ParseCommandLineOptionsEiPKPKcNS_9StringRefEb(i32, i8**, i8*, i64, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"class.llvm::StringRef", align 8
  %7 = alloca %"struct.std::__1::pair.151", align 8
  %8 = alloca %"class.llvm::SmallVector.123", align 8
  %9 = alloca %"class.llvm::StringRef", align 8
  %10 = alloca %"class.llvm::StringRef", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.llvm::Twine", align 8
  %14 = alloca %"class.llvm::Twine", align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %"class.llvm::SmallVector.89", align 8
  %25 = alloca %"class.llvm::BumpPtrAllocatorImpl", align 8
  %26 = alloca %"class.llvm::StringSaver", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.llvm::Twine", align 8
  %29 = alloca %"class.llvm::Twine", align 8
  %30 = alloca %"class.llvm::SmallVector.141", align 8
  %31 = alloca i32, align 4
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.llvm::StringRef", align 8
  %34 = alloca %"class.llvm::StringRef", align 8
  %35 = alloca %"struct.std::__1::pair.147", align 8
  %36 = alloca %"struct.std::__1::pair.147", align 8
  %37 = alloca %"class.llvm::Twine", align 8
  %38 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %5
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %41

41:                                               ; preds = %5, %40
  %42 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %43 = inttoptr i64 %42 to %"class.(anonymous namespace)::CommandLineParser"*
  %44 = bitcast %"class.llvm::SmallVector.89"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %44) #22
  %45 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 160, i1 false) #22
  %46 = sext i32 %0 to i64
  %47 = getelementptr inbounds i8*, i8** %1, i64 %46
  %48 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %24, i64 0, i32 0
  %49 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %49, align 8
  %50 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %45, i8** %50, align 8
  %51 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.llvm::SmallVector.89", %"class.llvm::SmallVector.89"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 160
  store i8* %52, i8** %51, align 8
  call void @_ZN4llvm15SmallVectorImplIPKcE6appendIPKS2_EEvT_S7_(%"class.llvm::SmallVectorImpl.73"* nonnull %48, i8** %1, i8** %47) #24
  %53 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %53) #22
  %54 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 96, i1 false) #22
  %55 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 16, i1 false) #22
  store i8* %54, i8** %55, align 8
  %56 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %58 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 32
  store i8* %58, i8** %57, align 8
  %59 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %60 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %60, align 8
  %61 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %59, i8** %61, align 8
  %62 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  store i8* %59, i8** %62, align 8
  %63 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %25, i64 0, i32 4
  store i64 0, i64* %63, align 8
  %64 = bitcast %"class.llvm::StringSaver"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #22
  %65 = getelementptr inbounds %"class.llvm::StringSaver", %"class.llvm::StringSaver"* %26, i64 0, i32 0
  store %"class.llvm::BumpPtrAllocatorImpl"* %25, %"class.llvm::BumpPtrAllocatorImpl"** %65, align 8
  %66 = call zeroext i1 @_ZN4llvm2cl19ExpandResponseFilesERNS_11StringSaverEPFvNS_9StringRefES2_RNS_15SmallVectorImplIPKcEEbES8_bb(%"class.llvm::StringSaver"* nonnull dereferenceable(8) %26, void (i8*, i64, %"class.llvm::StringSaver"*, %"class.llvm::SmallVectorImpl.73"*, i1)* nonnull @_ZN4llvm2cl22TokenizeGNUCommandLineENS_9StringRefERNS_11StringSaverERNS_15SmallVectorImplIPKcEEb, %"class.llvm::SmallVectorImpl.73"* nonnull dereferenceable(32) %48, i1 zeroext false, i1 zeroext false) #24
  %67 = bitcast %"class.llvm::SmallVector.89"* %24 to i8***
  %68 = load i8**, i8*** %67, align 8
  %69 = bitcast i8** %50 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = ptrtoint i8** %68 to i64
  %72 = sub i64 %70, %71
  %73 = lshr exact i64 %72, 3
  %74 = trunc i64 %73 to i32
  %75 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #22
  %76 = load i8*, i8** %68, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %41
  %79 = call i64 @strlen(i8* nonnull %76) #27
  br label %80

80:                                               ; preds = %78, %41
  %81 = phi i64 [ %79, %78 ], [ 0, %41 ]
  %82 = call { i8*, i64 } @_ZN4llvm3sys4path8filenameENS_9StringRefE(i8* %76, i64 %81) #24
  %83 = extractvalue { i8*, i64 } %82, 0
  %84 = extractvalue { i8*, i64 } %82, 1
  %85 = icmp eq i8* %83, null
  br i1 %85, label %86, label %87

86:                                               ; preds = %80
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #22, !alias.scope !31
  br label %111

87:                                               ; preds = %80
  %88 = icmp ugt i64 %84, -17
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = bitcast %"class.std::__1::basic_string"* %27 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %90) #26
  unreachable

91:                                               ; preds = %87
  %92 = icmp ult i64 %84, 23
  br i1 %92, label %101, label %93

93:                                               ; preds = %91
  %94 = add nuw i64 %84, 16
  %95 = and i64 %94, -16
  %96 = call i8* @_Znwm(i64 %95) #25
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %96, i8** %97, align 8
  %98 = or i64 %95, -9223372036854775808
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %84, i64* %100, align 8
  br label %106

101:                                              ; preds = %91
  %102 = trunc i64 %84 to i8
  %103 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  store i8 %102, i8* %104, align 1
  %105 = icmp eq i64 %84, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %101, %93
  %107 = phi i8* [ %96, %93 ], [ %75, %101 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %107, i8* nonnull align 1 %83, i64 %84, i1 false) #22
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %75, %101 ], [ %107, %106 ]
  %110 = getelementptr inbounds i8, i8* %109, i64 %84
  store i8 0, i8* %110, align 1
  br label %111

111:                                              ; preds = %108, %86
  %112 = inttoptr i64 %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  call void @_ZdlPv(i8* %118) #25
  br label %119

119:                                              ; preds = %116, %111
  %120 = inttoptr i64 %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %75, i64 24, i1 false) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #22
  %121 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 1, i32 0
  store i8* %2, i8** %121, align 8
  %122 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 1, i32 1
  store i64 %3, i64* %122, align 8
  %123 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %119
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %126

126:                                              ; preds = %125, %119
  %127 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %128 = inttoptr i64 %127 to %"class.llvm::cl::SubCommand"*
  %129 = icmp sgt i32 %74, 1
  br i1 %129, label %130, label %220

130:                                              ; preds = %126
  %131 = getelementptr inbounds i8*, i8** %68, i64 1
  %132 = load i8*, i8** %131, align 8
  %133 = load i8, i8* %132, align 1
  %134 = icmp eq i8 %133, 45
  br i1 %134, label %220, label %135

135:                                              ; preds = %130
  %136 = icmp eq i8* %132, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %135
  %138 = call i64 @strlen(i8* nonnull %132) #27
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %137, %135
  %141 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %207

143:                                              ; preds = %140
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %207

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 4, i32 0, i32 0, i32 1
  %146 = load i8**, i8*** %145, align 8
  %147 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %148 = load i8**, i8*** %147, align 8
  %149 = icmp eq i8** %146, %148
  %150 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 4, i32 0, i32 0, i32 3
  %151 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 4, i32 0, i32 0, i32 2
  %152 = select i1 %149, i32* %150, i32* %151
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i8*, i8** %146, i64 %154
  %156 = icmp eq i32 %153, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %144, %162
  %158 = phi i8** [ %163, %162 ], [ %146, %144 ]
  %159 = bitcast i8** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = icmp ugt i64 %160, -3
  br i1 %161, label %162, label %165

162:                                              ; preds = %157
  %163 = getelementptr inbounds i8*, i8** %158, i64 1
  %164 = icmp eq i8** %163, %155
  br i1 %164, label %203, label %157

165:                                              ; preds = %157, %144
  %166 = phi i8** [ %146, %144 ], [ %158, %157 ]
  %167 = icmp eq i8** %166, %155
  br i1 %167, label %203, label %168

168:                                              ; preds = %165, %201
  %169 = phi i8** [ %194, %201 ], [ %166, %165 ]
  %170 = bitcast i8** %169 to %"class.llvm::cl::SubCommand"**
  %171 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %170, align 8
  %172 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %168
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %175

175:                                              ; preds = %174, %168
  %176 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %177 = inttoptr i64 %176 to %"class.llvm::cl::SubCommand"*
  %178 = icmp eq %"class.llvm::cl::SubCommand"* %171, %177
  br i1 %178, label %190, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %171, i64 0, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = icmp ne i64 %181, 0
  %183 = icmp eq i64 %181, %138
  %184 = and i1 %182, %183
  br i1 %184, label %185, label %190

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %171, i64 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = call i32 @bcmp(i8* %187, i8* nonnull %132, i64 %138) #22
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %210, label %190

190:                                              ; preds = %185, %179, %175
  %191 = getelementptr inbounds i8*, i8** %169, i64 1
  %192 = icmp eq i8** %191, %155
  br i1 %192, label %203, label %193

193:                                              ; preds = %190, %198
  %194 = phi i8** [ %199, %198 ], [ %191, %190 ]
  %195 = bitcast i8** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = icmp ugt i64 %196, -3
  br i1 %197, label %198, label %201

198:                                              ; preds = %193
  %199 = getelementptr inbounds i8*, i8** %194, i64 1
  %200 = icmp eq i8** %199, %155
  br i1 %200, label %203, label %193

201:                                              ; preds = %193
  %202 = icmp eq i8** %194, %155
  br i1 %202, label %203, label %168

203:                                              ; preds = %162, %201, %190, %198, %165
  %204 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %207

207:                                              ; preds = %203, %206, %140, %143
  %208 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %209 = inttoptr i64 %208 to %"class.llvm::cl::SubCommand"*
  br label %210

210:                                              ; preds = %185, %207
  %211 = phi %"class.llvm::cl::SubCommand"* [ %209, %207 ], [ %171, %185 ]
  %212 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %215

215:                                              ; preds = %214, %210
  %216 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %217 = inttoptr i64 %216 to %"class.llvm::cl::SubCommand"*
  %218 = icmp eq %"class.llvm::cl::SubCommand"* %211, %217
  %219 = select i1 %218, i32 1, i32 2
  br label %220

220:                                              ; preds = %215, %130, %126
  %221 = phi %"class.llvm::cl::SubCommand"* [ %128, %130 ], [ %128, %126 ], [ %211, %215 ]
  %222 = phi i32 [ 1, %130 ], [ 1, %126 ], [ %219, %215 ]
  %223 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %220
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %226

226:                                              ; preds = %225, %220
  %227 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %228 = inttoptr i64 %227 to %"class.(anonymous namespace)::CommandLineParser"*
  %229 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %228, i64 0, i32 5
  store %"class.llvm::cl::SubCommand"* %221, %"class.llvm::cl::SubCommand"** %229, align 8
  %230 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %221, i64 0, i32 5
  %231 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %221, i64 0, i32 2
  %232 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %221, i64 0, i32 4
  %233 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %236 = load i8*, i8** %235, align 8
  %237 = icmp eq i8* %234, %236
  %238 = ptrtoint i8* %234 to i64
  %239 = bitcast i8* %234 to %"class.llvm::cl::Option"**
  br i1 %237, label %366, label %240

240:                                              ; preds = %226
  %241 = ptrtoint i8* %236 to i64
  %242 = bitcast i8** %235 to i64*
  %243 = bitcast %"class.llvm::SmallVector"* %231 to i64*
  %244 = sub i64 %241, %238
  %245 = ashr exact i64 %244, 3
  %246 = icmp eq i64 %244, 0
  br i1 %246, label %361, label %247

247:                                              ; preds = %240
  %248 = bitcast %"class.llvm::SmallVector"* %231 to %"class.llvm::cl::Option"***
  %249 = bitcast %"class.llvm::Twine"* %28 to i8*
  %250 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %28, i64 0, i32 3
  %251 = bitcast %"class.llvm::Twine"* %28 to i8**
  %252 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %28, i64 0, i32 2
  %253 = bitcast %"class.llvm::Twine"* %29 to i8*
  %254 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %29, i64 0, i32 3
  %255 = bitcast %"class.llvm::Twine"* %29 to i8**
  %256 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %29, i64 0, i32 2
  %257 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %261

259:                                              ; preds = %347
  %260 = icmp eq i8 %355, 0
  br i1 %260, label %361, label %366

261:                                              ; preds = %358, %247
  %262 = phi i64 [ %238, %247 ], [ %360, %358 ]
  %263 = phi %"class.llvm::cl::Option"** [ %239, %247 ], [ %359, %358 ]
  %264 = phi i32 [ 0, %247 ], [ %349, %358 ]
  %265 = phi i8 [ 0, %247 ], [ %355, %358 ]
  %266 = phi i64 [ 0, %247 ], [ %356, %358 ]
  %267 = phi i8 [ 0, %247 ], [ %348, %358 ]
  %268 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %263, i64 %266
  %269 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %268, align 8
  %270 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %269, i64 0, i32 2
  %271 = load i16, i16* %270, align 4
  %272 = and i16 %271, 6
  %273 = or i16 %272, 1
  %274 = icmp eq i16 %273, 3
  br i1 %274, label %275, label %277

275:                                              ; preds = %261
  %276 = add i32 %264, 1
  br label %347

277:                                              ; preds = %261
  %278 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %230, align 8
  %279 = icmp eq %"class.llvm::cl::Option"* %278, null
  br i1 %279, label %289, label %280

280:                                              ; preds = %277
  %281 = load i64, i64* %242, align 8
  %282 = sub i64 %281, %262
  %283 = ashr exact i64 %282, 3
  %284 = icmp ult i64 %283, 2
  %285 = or i1 %284, %4
  %286 = select i1 %284, i8 %267, i8 1
  br i1 %285, label %347, label %287

287:                                              ; preds = %280
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %249) #22
  store i8 1, i8* %250, align 1
  store i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.64, i64 0, i64 0), i8** %251, align 8
  store i8 3, i8* %252, align 8
  %288 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %269, %"class.llvm::Twine"* nonnull dereferenceable(24) %28, i8* null, i64 0) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %249) #22
  br label %347

289:                                              ; preds = %277
  %290 = icmp eq i8 %265, 0
  br i1 %290, label %347, label %291

291:                                              ; preds = %289
  %292 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %269, i64 0, i32 6, i32 1
  %293 = load i64, i64* %292, align 8
  %294 = icmp ne i64 %293, 0
  %295 = or i1 %294, %4
  %296 = select i1 %294, i8 %267, i8 1
  br i1 %295, label %347, label %297

297:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %253) #22
  store i8 1, i8* %254, align 1
  store i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.65, i64 0, i64 0), i8** %255, align 8
  store i8 3, i8* %256, align 8
  %298 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %269, %"class.llvm::Twine"* nonnull dereferenceable(24) %29, i8* null, i64 0) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %253) #22
  %299 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %300 = load i8, i8* %113, align 1
  %301 = icmp slt i8 %300, 0
  %302 = load i8*, i8** %257, align 8
  %303 = load i64, i64* %258, align 8
  %304 = zext i8 %300 to i64
  %305 = select i1 %301, i8* %302, i8* %120
  %306 = select i1 %301, i64 %303, i64 %304
  %307 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %299, i8* %305, i64 %306) #24
  %308 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %307, i64 0, i32 2
  %309 = bitcast i8** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %307, i64 0, i32 3
  %312 = load i8*, i8** %311, align 8
  %313 = ptrtoint i8* %312 to i64
  %314 = sub i64 %310, %313
  %315 = icmp ult i64 %314, 29
  br i1 %315, label %316, label %318

316:                                              ; preds = %297
  %317 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %307, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.59, i64 0, i64 0), i64 29) #24
  br label %321

318:                                              ; preds = %297
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %312, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.59, i64 0, i64 0), i64 29, i1 false) #22
  %319 = load i8*, i8** %311, align 8
  %320 = getelementptr inbounds i8, i8* %319, i64 29
  store i8* %320, i8** %311, align 8
  br label %321

321:                                              ; preds = %316, %318
  %322 = phi %"class.llvm::raw_ostream"* [ %317, %316 ], [ %307, %318 ]
  %323 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %269, i64 0, i32 6, i32 0
  %324 = load i8*, i8** %323, align 8
  %325 = load i64, i64* %292, align 8
  %326 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %322, i8* %324, i64 %325) #24
  %327 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %326, i64 0, i32 2
  %328 = bitcast i8** %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %326, i64 0, i32 3
  %331 = load i8*, i8** %330, align 8
  %332 = ptrtoint i8* %331 to i64
  %333 = sub i64 %329, %332
  %334 = icmp ult i64 %333, 20
  br i1 %334, label %335, label %337

335:                                              ; preds = %321
  %336 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %326, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.66, i64 0, i64 0), i64 20) #24
  br label %340

337:                                              ; preds = %321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %331, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.66, i64 0, i64 0), i64 20, i1 false) #22
  %338 = load i8*, i8** %330, align 8
  %339 = getelementptr inbounds i8, i8* %338, i64 20
  store i8* %339, i8** %330, align 8
  br label %340

340:                                              ; preds = %335, %337
  %341 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %342 = load i64, i64* %242, align 8
  %343 = load i64, i64* %243, align 8
  %344 = sub i64 %342, %343
  %345 = ashr exact i64 %344, 3
  %346 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %341, i64 %345) #24
  br label %347

347:                                              ; preds = %340, %291, %289, %287, %280, %275
  %348 = phi i8 [ %267, %275 ], [ %267, %289 ], [ %296, %291 ], [ %286, %280 ], [ 1, %287 ], [ 1, %340 ]
  %349 = phi i32 [ %276, %275 ], [ %264, %289 ], [ %264, %291 ], [ %264, %280 ], [ %264, %287 ], [ %264, %340 ]
  %350 = load i16, i16* %270, align 4
  %351 = and i16 %350, 5
  %352 = or i16 %351, 2
  %353 = icmp eq i16 %352, 3
  %354 = zext i1 %353 to i8
  %355 = or i8 %265, %354
  %356 = add i64 %266, 1
  %357 = icmp eq i64 %356, %245
  br i1 %357, label %259, label %358

358:                                              ; preds = %347
  %359 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %248, align 8
  %360 = ptrtoint %"class.llvm::cl::Option"** %359 to i64
  br label %261

361:                                              ; preds = %259, %240
  %362 = phi i32 [ %349, %259 ], [ 0, %240 ]
  %363 = phi i8 [ %348, %259 ], [ 0, %240 ]
  %364 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %230, align 8
  %365 = icmp ne %"class.llvm::cl::Option"* %364, null
  br label %366

366:                                              ; preds = %361, %259, %226
  %367 = phi i8 [ 0, %226 ], [ %363, %361 ], [ %348, %259 ]
  %368 = phi i1 [ false, %226 ], [ %365, %361 ], [ true, %259 ]
  %369 = phi i32 [ 0, %226 ], [ %362, %361 ], [ %349, %259 ]
  %370 = bitcast %"class.llvm::SmallVector.141"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %370) #22
  %371 = getelementptr inbounds %"class.llvm::SmallVector.141", %"class.llvm::SmallVector.141"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %371, i8 -86, i64 96, i1 false) #22
  %372 = getelementptr inbounds %"class.llvm::SmallVector.141", %"class.llvm::SmallVector.141"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %371, i8** %372, align 8
  %373 = getelementptr inbounds %"class.llvm::SmallVector.141", %"class.llvm::SmallVector.141"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %371, i8** %373, align 8
  %374 = getelementptr inbounds %"class.llvm::SmallVector.141", %"class.llvm::SmallVector.141"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %375 = getelementptr inbounds %"class.llvm::SmallVector.141", %"class.llvm::SmallVector.141"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 96
  store i8* %375, i8** %374, align 8
  %376 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %376) #22
  store i32 %222, i32* %31, align 4
  %377 = icmp slt i32 %222, %74
  %378 = ptrtoint i8* %371 to i64
  br i1 %377, label %383, label %379

379:                                              ; preds = %366
  %380 = zext i32 %369 to i64
  %381 = bitcast i8** %373 to i64*
  %382 = bitcast %"class.llvm::SmallVector.141"* %30 to i64*
  br label %950

383:                                              ; preds = %366
  %384 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %385 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %387 = bitcast %"class.llvm::StringRef"* %33 to i8*
  %388 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %33, i64 0, i32 0
  %389 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %33, i64 0, i32 1
  %390 = bitcast %"class.llvm::StringRef"* %34 to i8*
  %391 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %34, i64 0, i32 0
  %392 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %34, i64 0, i32 1
  %393 = bitcast i32* %18 to i8*
  %394 = getelementptr inbounds %"class.llvm::SmallVector.141", %"class.llvm::SmallVector.141"* %30, i64 0, i32 0, i32 0
  %395 = bitcast %"struct.std::__1::pair.147"* %35 to i8*
  %396 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %35, i64 0, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %35, i64 0, i32 0, i32 1
  %398 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %35, i64 0, i32 1
  %399 = bitcast i8** %373 to i64*
  %400 = bitcast %"class.llvm::SmallVector.141"* %30 to i64*
  %401 = zext i32 %369 to i64
  %402 = bitcast %"struct.std::__1::pair.147"* %36 to i8*
  %403 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %36, i64 0, i32 0, i32 0
  %404 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %36, i64 0, i32 0, i32 1
  %405 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %36, i64 0, i32 1
  %406 = bitcast i32* %17 to i8*
  %407 = bitcast i64* %15 to i8*
  %408 = bitcast i32* %16 to i8*
  %409 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %221, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %221, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %411 = bitcast %"class.llvm::StringRef"* %34 to i64*
  %412 = bitcast %"class.llvm::StringRef"* %6 to i8*
  %413 = bitcast %"class.llvm::StringRef"* %6 to i64*
  %414 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %6, i64 0, i32 1
  %415 = bitcast %"struct.std::__1::pair.151"* %7 to i8*
  %416 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %7, i64 0, i32 0
  %417 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %7, i64 0, i32 1
  %418 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %7, i64 0, i32 1, i32 1
  %419 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %232, i64 0, i32 0, i32 0
  %420 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %221, i64 0, i32 4, i32 0, i32 1
  %421 = bitcast %"class.llvm::SmallVector.123"* %8 to i8*
  %422 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %423 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %425 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %426 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 256
  %427 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %8, i64 0, i32 0
  %428 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %8, i64 0, i32 0, i32 0
  %429 = bitcast %"class.llvm::SmallVector.123"* %8 to %"class.llvm::StringRef"**
  %430 = bitcast i8** %424 to %"class.llvm::StringRef"**
  %431 = bitcast %"class.llvm::StringRef"* %9 to i8*
  %432 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 0
  %433 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 1
  %434 = bitcast %"class.llvm::StringRef"* %10 to i8*
  %435 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %436 = bitcast %"class.llvm::Twine"* %13 to i8*
  %437 = bitcast %"class.llvm::Twine"* %14 to i8*
  %438 = ptrtoint %"class.llvm::StringRef"* %9 to i64
  %439 = bitcast %"class.llvm::Twine"* %14 to i64*
  %440 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %14, i64 0, i32 1, i32 0
  %441 = bitcast %"class.llvm::Twine"** %440 to i64*
  %442 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %14, i64 0, i32 2
  %443 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %14, i64 0, i32 3
  %444 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 0, i32 0
  %445 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 1, i32 0
  %446 = bitcast %"class.llvm::Twine"** %445 to i64*
  %447 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 2
  %448 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 3
  %449 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %450 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %449, i64 0, i32 1, i32 0
  %451 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %452 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %455 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %456 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %455, i64 0, i32 1, i32 0
  %457 = ptrtoint %"class.llvm::StringRef"* %417 to i64
  %458 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %459 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %460

460:                                              ; preds = %943, %383
  %461 = phi %"class.llvm::cl::Option"* [ null, %383 ], [ %937, %943 ]
  %462 = phi i8 [ 0, %383 ], [ %936, %943 ]
  %463 = phi i32 [ %222, %383 ], [ %945, %943 ]
  %464 = phi i8 [ %367, %383 ], [ %934, %943 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %384) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %384, i8 0, i64 24, i1 false) #22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %387) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %387, i8 0, i64 16, i1 false) #22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %390) #22
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %391, align 8
  store i64 0, i64* %392, align 8
  %465 = sext i32 %463 to i64
  %466 = getelementptr inbounds i8*, i8** %68, i64 %465
  %467 = load i8*, i8** %466, align 8
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 45
  br i1 %469, label %470, label %477

470:                                              ; preds = %460
  %471 = getelementptr inbounds i8, i8* %467, i64 1
  %472 = load i8, i8* %471, align 1
  %473 = icmp ne i8 %472, 0
  %474 = and i8 %462, 1
  %475 = icmp eq i8 %474, 0
  %476 = and i1 %475, %473
  br i1 %476, label %526, label %477

477:                                              ; preds = %470, %460
  %478 = icmp eq %"class.llvm::cl::Option"* %461, null
  br i1 %478, label %490, label %479

479:                                              ; preds = %477
  %480 = icmp eq i8* %467, null
  br i1 %480, label %483, label %481

481:                                              ; preds = %479
  %482 = call i64 @strlen(i8* nonnull %467) #27
  br label %483

483:                                              ; preds = %481, %479
  %484 = phi i64 [ %482, %481 ], [ 0, %479 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %393) #22
  store i32 %463, i32* %18, align 4
  %485 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %461, i64 0, i32 6, i32 0
  %486 = load i8*, i8** %485, align 8
  %487 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %461, i64 0, i32 6, i32 1
  %488 = load i64, i64* %487, align 8
  %489 = call fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"* nonnull %461, i8* %486, i64 %488, i8* %467, i64 %484, i32 0, i8** null, i32* nonnull dereferenceable(4) %18) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %393) #22
  br label %933

490:                                              ; preds = %477
  %491 = load i8*, i8** %233, align 8
  %492 = load i8*, i8** %235, align 8
  %493 = icmp eq i8* %491, %492
  br i1 %493, label %785, label %494

494:                                              ; preds = %490
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %395) #22
  %495 = icmp eq i8* %467, null
  br i1 %495, label %498, label %496

496:                                              ; preds = %494
  %497 = call i64 @strlen(i8* nonnull %467) #27
  br label %498

498:                                              ; preds = %496, %494
  %499 = phi i64 [ %497, %496 ], [ 0, %494 ]
  store i8* %467, i8** %396, align 8
  store i64 %499, i64* %397, align 8
  store i32 %463, i32* %398, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairINS_9StringRefEjEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.143"* nonnull %394, %"struct.std::__1::pair.147"* nonnull dereferenceable(24) %35) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #22
  %500 = load i64, i64* %399, align 8
  %501 = load i64, i64* %400, align 8
  %502 = sub i64 %500, %501
  %503 = sdiv exact i64 %502, 24
  %504 = icmp ult i64 %503, %401
  br i1 %504, label %933, label %505

505:                                              ; preds = %498
  %506 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %230, align 8
  %507 = icmp eq %"class.llvm::cl::Option"* %506, null
  br i1 %507, label %933, label %508

508:                                              ; preds = %505
  %509 = add nsw i32 %463, 1
  store i32 %509, i32* %31, align 4
  %510 = icmp slt i32 %509, %74
  br i1 %510, label %511, label %933

511:                                              ; preds = %508
  %512 = sext i32 %509 to i64
  br label %513

513:                                              ; preds = %520, %511
  %514 = phi i64 [ %512, %511 ], [ %523, %520 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %402) #22
  %515 = getelementptr inbounds i8*, i8** %68, i64 %514
  %516 = load i8*, i8** %515, align 8
  %517 = icmp eq i8* %516, null
  br i1 %517, label %520, label %518

518:                                              ; preds = %513
  %519 = call i64 @strlen(i8* nonnull %516) #27
  br label %520

520:                                              ; preds = %518, %513
  %521 = phi i64 [ %519, %518 ], [ 0, %513 ]
  store i8* %516, i8** %403, align 8
  store i64 %521, i64* %404, align 8
  %522 = trunc i64 %514 to i32
  store i32 %522, i32* %405, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairINS_9StringRefEjEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.143"* nonnull %394, %"struct.std::__1::pair.147"* nonnull dereferenceable(24) %36) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %402) #22
  %523 = add nsw i64 %514, 1
  %524 = trunc i64 %523 to i32
  %525 = icmp eq i32 %524, %74
  br i1 %525, label %932, label %513

526:                                              ; preds = %470
  %527 = icmp eq i8 %472, 45
  br i1 %527, label %528, label %532

528:                                              ; preds = %526
  %529 = getelementptr inbounds i8, i8* %467, i64 2
  %530 = load i8, i8* %529, align 1
  %531 = icmp eq i8 %530, 0
  br i1 %531, label %933, label %532

532:                                              ; preds = %528, %526
  %533 = icmp eq %"class.llvm::cl::Option"* %461, null
  br i1 %533, label %575, label %534

534:                                              ; preds = %532
  %535 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %461, i64 0, i32 2
  %536 = load i16, i16* %535, align 4
  %537 = and i16 %536, 1024
  %538 = icmp eq i16 %537, 0
  br i1 %538, label %575, label %539

539:                                              ; preds = %534
  %540 = call i64 @strlen(i8* nonnull %471) #27
  store i8* %471, i8** %391, align 8
  store i64 %540, i64* %392, align 8
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %555, label %542

542:                                              ; preds = %539
  br i1 %527, label %543, label %552

543:                                              ; preds = %542, %549
  %544 = phi i8* [ %546, %549 ], [ %471, %542 ]
  %545 = phi i64 [ %547, %549 ], [ %540, %542 ]
  %546 = getelementptr inbounds i8, i8* %544, i64 1
  %547 = add i64 %545, -1
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %552, label %549

549:                                              ; preds = %543
  %550 = load i8, i8* %546, align 1
  %551 = icmp eq i8 %550, 45
  br i1 %551, label %543, label %552

552:                                              ; preds = %549, %543, %542
  %553 = phi i8* [ %471, %542 ], [ %546, %543 ], [ %546, %549 ]
  %554 = phi i64 [ %540, %542 ], [ %547, %549 ], [ 0, %543 ]
  store i8* %553, i8** %391, align 8
  store i64 %554, i64* %392, align 8
  br label %555

555:                                              ; preds = %552, %539
  %556 = call fastcc %"class.llvm::cl::Option"* @_ZN12_GLOBAL__N_117CommandLineParser12LookupOptionERN4llvm2cl10SubCommandERNS1_9StringRefES6_(%"class.llvm::cl::SubCommand"* dereferenceable(184) %221, %"class.llvm::StringRef"* nonnull dereferenceable(16) %34, %"class.llvm::StringRef"* nonnull dereferenceable(16) %33) #24
  %557 = icmp eq %"class.llvm::cl::Option"* %556, null
  br i1 %557, label %563, label %558

558:                                              ; preds = %555
  %559 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %556, i64 0, i32 2
  %560 = load i16, i16* %559, align 4
  %561 = and i16 %560, 384
  %562 = icmp eq i16 %561, 128
  br i1 %562, label %917, label %563

563:                                              ; preds = %558, %555
  %564 = load i8*, i8** %466, align 8
  %565 = icmp eq i8* %564, null
  br i1 %565, label %568, label %566

566:                                              ; preds = %563
  %567 = call i64 @strlen(i8* nonnull %564) #27
  br label %568

568:                                              ; preds = %566, %563
  %569 = phi i64 [ %567, %566 ], [ 0, %563 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %406) #22
  store i32 %463, i32* %17, align 4
  %570 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %461, i64 0, i32 6, i32 0
  %571 = load i8*, i8** %570, align 8
  %572 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %461, i64 0, i32 6, i32 1
  %573 = load i64, i64* %572, align 8
  %574 = call fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"* nonnull %461, i8* %571, i64 %573, i8* %564, i64 %569, i32 0, i8** null, i32* nonnull dereferenceable(4) %17) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %406) #22
  br label %933

575:                                              ; preds = %534, %532
  %576 = call i64 @strlen(i8* nonnull %471) #27
  store i8* %471, i8** %391, align 8
  store i64 %576, i64* %392, align 8
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %591, label %578

578:                                              ; preds = %575
  br i1 %527, label %579, label %588

579:                                              ; preds = %578, %585
  %580 = phi i8* [ %582, %585 ], [ %471, %578 ]
  %581 = phi i64 [ %583, %585 ], [ %576, %578 ]
  %582 = getelementptr inbounds i8, i8* %580, i64 1
  %583 = add i64 %581, -1
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %588, label %585

585:                                              ; preds = %579
  %586 = load i8, i8* %582, align 1
  %587 = icmp eq i8 %586, 45
  br i1 %587, label %579, label %588

588:                                              ; preds = %585, %579, %578
  %589 = phi i8* [ %471, %578 ], [ %582, %579 ], [ %582, %585 ]
  %590 = phi i64 [ %576, %578 ], [ %583, %585 ], [ 0, %579 ]
  store i8* %589, i8** %391, align 8
  store i64 %590, i64* %392, align 8
  br label %591

591:                                              ; preds = %588, %575
  %592 = call fastcc %"class.llvm::cl::Option"* @_ZN12_GLOBAL__N_117CommandLineParser12LookupOptionERN4llvm2cl10SubCommandERNS1_9StringRefES6_(%"class.llvm::cl::SubCommand"* dereferenceable(184) %221, %"class.llvm::StringRef"* nonnull dereferenceable(16) %34, %"class.llvm::StringRef"* nonnull dereferenceable(16) %33) #24
  %593 = icmp eq %"class.llvm::cl::Option"* %592, null
  br i1 %593, label %594, label %917

594:                                              ; preds = %591
  %595 = load i64, i64* %392, align 8
  %596 = icmp eq i64 %595, 1
  br i1 %596, label %639, label %597

597:                                              ; preds = %594
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %407) #22
  store i64 0, i64* %15, align 8
  %598 = load i8*, i8** %391, align 8
  %599 = call fastcc %"class.llvm::cl::Option"* @_ZL13getOptionPredN4llvm9StringRefERmPFbPKNS_2cl6OptionEERKNS_9StringMapIPS3_NS_15MallocAllocatorEEE(i8* %598, i64 %595, i64* nonnull dereferenceable(8) %15, i1 (%"class.llvm::cl::Option"*)* nonnull @_ZL20isPrefixedOrGroupingPKN4llvm2cl6OptionE, %"class.llvm::StringMap"* dereferenceable(32) %232) #24
  %600 = icmp eq %"class.llvm::cl::Option"* %599, null
  br i1 %600, label %631, label %601

601:                                              ; preds = %597
  %602 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %599, i64 0, i32 2
  %603 = load i16, i16* %602, align 4
  %604 = and i16 %603, 384
  %605 = icmp eq i16 %604, 256
  %606 = load i64, i64* %15, align 8
  br i1 %605, label %607, label %612

607:                                              ; preds = %601
  %608 = icmp ult i64 %595, %606
  %609 = select i1 %608, i64 %595, i64 %606
  %610 = getelementptr inbounds i8, i8* %598, i64 %609
  %611 = sub i64 %595, %609
  store i8* %610, i8** %388, align 8
  store i64 %611, i64* %389, align 8
  br label %635

612:                                              ; preds = %601, %627
  %613 = phi i8* [ %620, %627 ], [ %598, %601 ]
  %614 = phi i8 [ %624, %627 ], [ %464, %601 ]
  %615 = phi i64 [ %621, %627 ], [ %595, %601 ]
  %616 = phi i64 [ %628, %627 ], [ %606, %601 ]
  %617 = phi %"class.llvm::cl::Option"* [ %625, %627 ], [ %599, %601 ]
  %618 = icmp ult i64 %615, %616
  %619 = select i1 %618, i64 %615, i64 %616
  %620 = getelementptr inbounds i8, i8* %613, i64 %619
  %621 = sub i64 %615, %619
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %408) #22
  store i32 0, i32* %16, align 4
  %622 = call fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"* nonnull %617, i8* %613, i64 %619, i8* null, i64 0, i32 0, i8** null, i32* nonnull dereferenceable(4) %16) #24
  %623 = zext i1 %622 to i8
  %624 = or i8 %614, %623
  %625 = call fastcc %"class.llvm::cl::Option"* @_ZL13getOptionPredN4llvm9StringRefERmPFbPKNS_2cl6OptionEERKNS_9StringMapIPS3_NS_15MallocAllocatorEEE(i8* %620, i64 %621, i64* nonnull dereferenceable(8) %15, i1 (%"class.llvm::cl::Option"*)* nonnull @_ZL10isGroupingPKN4llvm2cl6OptionE, %"class.llvm::StringMap"* dereferenceable(32) %232) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %408) #22
  %626 = icmp eq %"class.llvm::cl::Option"* %625, null
  br i1 %626, label %630, label %627

627:                                              ; preds = %612
  %628 = load i64, i64* %15, align 8
  %629 = icmp eq i64 %628, %621
  br i1 %629, label %634, label %612

630:                                              ; preds = %612
  store i8* %620, i8** %391, align 8
  store i64 %621, i64* %392, align 8
  br label %631

631:                                              ; preds = %630, %597
  %632 = phi i64 [ %595, %597 ], [ %621, %630 ]
  %633 = phi i8 [ %464, %597 ], [ %624, %630 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %407) #22
  br label %639

634:                                              ; preds = %627
  store i8* %620, i8** %391, align 8
  br label %635

635:                                              ; preds = %634, %607
  %636 = phi i64 [ %621, %634 ], [ %609, %607 ]
  %637 = phi i8 [ %624, %634 ], [ %464, %607 ]
  %638 = phi %"class.llvm::cl::Option"* [ %625, %634 ], [ %599, %607 ]
  store i64 %636, i64* %392, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %407) #22
  br label %917

639:                                              ; preds = %631, %594
  %640 = phi i64 [ %632, %631 ], [ 1, %594 ]
  %641 = phi i8 [ %633, %631 ], [ %464, %594 ]
  %642 = load i8*, i8** %409, align 8
  %643 = load i8*, i8** %410, align 8
  %644 = icmp eq i8* %642, %643
  br i1 %644, label %645, label %785

645:                                              ; preds = %639
  %646 = load i64, i64* %411, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %412) #22
  store i64 %646, i64* %413, align 8
  store i64 %640, i64* %414, align 8
  %647 = icmp eq i64 %640, 0
  br i1 %647, label %783, label %648

648:                                              ; preds = %645
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %415) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %415, i8 -86, i64 32, i1 false) #22
  call void @_ZNK4llvm9StringRef5splitEc(%"struct.std::__1::pair.151"* nonnull sret %7, %"class.llvm::StringRef"* nonnull %6, i8 signext 61) #24
  %649 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %419, align 8
  %650 = load i32, i32* %420, align 8
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %658, label %652

652:                                              ; preds = %648, %656
  %653 = phi %"class.llvm::StringMapEntryBase"** [ %657, %656 ], [ %649, %648 ]
  %654 = bitcast %"class.llvm::StringMapEntryBase"** %653 to i64*
  %655 = load i64, i64* %654, align 8
  switch i64 %655, label %658 [
    i64 0, label %656
    i64 -4, label %656
  ]

656:                                              ; preds = %652, %652
  %657 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %653, i64 1
  br label %652

658:                                              ; preds = %652, %648
  %659 = phi %"class.llvm::StringMapEntryBase"** [ %649, %648 ], [ %653, %652 ]
  %660 = zext i32 %650 to i64
  %661 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %649, i64 %660
  %662 = icmp eq %"class.llvm::StringMapEntryBase"** %659, %661
  br i1 %662, label %665, label %667

663:                                              ; preds = %721
  %664 = icmp eq %"class.llvm::StringMapEntryBase"** %723, %661
  br i1 %664, label %665, label %667

665:                                              ; preds = %663, %658
  %666 = phi %"class.llvm::cl::Option"* [ null, %658 ], [ %716, %663 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %415) #22
  br label %783

667:                                              ; preds = %658, %663
  %668 = phi i32 [ %717, %663 ], [ 0, %658 ]
  %669 = phi %"class.llvm::cl::Option"* [ %716, %663 ], [ null, %658 ]
  %670 = phi %"class.llvm::StringMapEntryBase"** [ %723, %663 ], [ %659, %658 ]
  %671 = bitcast %"class.llvm::StringMapEntryBase"** %670 to %"class.llvm::StringMapEntry"**
  %672 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %671, align 8
  %673 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %672, i64 0, i32 1
  %674 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %673, align 8
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %421) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %422, i8 -86, i64 256, i1 false) #22
  store i8* %422, i8** %423, align 8
  store i8* %422, i8** %424, align 8
  store i8* %426, i8** %425, align 8
  %675 = bitcast %"class.llvm::cl::Option"* %674 to void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)***
  %676 = load void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)**, void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)*** %675, align 8
  %677 = getelementptr inbounds void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)*, void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)** %676, i64 8
  %678 = load void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)*, void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)** %677, align 8
  call void %678(%"class.llvm::cl::Option"* %674, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(40) %427) #24
  %679 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %674, i64 0, i32 6, i32 1
  %680 = load i64, i64* %679, align 8
  %681 = icmp eq i64 %680, 0
  br i1 %681, label %684, label %682

682:                                              ; preds = %667
  %683 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %674, i64 0, i32 6
  call void @_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* nonnull %428, %"class.llvm::StringRef"* dereferenceable(16) %683) #24
  br label %684

684:                                              ; preds = %682, %667
  %685 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %674, i64 0, i32 2
  %686 = load i16, i16* %685, align 4
  %687 = lshr i16 %686, 3
  %688 = and i16 %687, 3
  %689 = icmp eq i16 %688, 0
  br i1 %689, label %692, label %690

690:                                              ; preds = %684
  %691 = zext i16 %688 to i32
  br label %698

692:                                              ; preds = %684
  %693 = bitcast %"class.llvm::cl::Option"* %674 to i32 (%"class.llvm::cl::Option"*)***
  %694 = load i32 (%"class.llvm::cl::Option"*)**, i32 (%"class.llvm::cl::Option"*)*** %693, align 8
  %695 = getelementptr inbounds i32 (%"class.llvm::cl::Option"*)*, i32 (%"class.llvm::cl::Option"*)** %694, i64 1
  %696 = load i32 (%"class.llvm::cl::Option"*)*, i32 (%"class.llvm::cl::Option"*)** %695, align 8
  %697 = call i32 %696(%"class.llvm::cl::Option"* %674) #24
  br label %698

698:                                              ; preds = %692, %690
  %699 = phi i32 [ %691, %690 ], [ %697, %692 ]
  %700 = icmp ne i32 %699, 3
  %701 = select i1 %700, %"class.llvm::StringRef"* %416, %"class.llvm::StringRef"* %6
  %702 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %701, i64 0, i32 0
  %703 = load i8*, i8** %702, align 8
  %704 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %701, i64 0, i32 1
  %705 = load i64, i64* %704, align 8
  %706 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %429, align 8
  %707 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %430, align 8
  %708 = icmp eq %"class.llvm::StringRef"* %706, %707
  %709 = bitcast %"class.llvm::StringRef"* %706 to i8*
  br i1 %708, label %714, label %710

710:                                              ; preds = %698
  %711 = xor i1 %700, true
  br label %727

712:                                              ; preds = %778
  %713 = load i8*, i8** %423, align 8
  br label %714

714:                                              ; preds = %712, %698
  %715 = phi i8* [ %709, %698 ], [ %713, %712 ]
  %716 = phi %"class.llvm::cl::Option"* [ %669, %698 ], [ %779, %712 ]
  %717 = phi i32 [ %668, %698 ], [ %780, %712 ]
  %718 = icmp eq i8* %715, %422
  br i1 %718, label %720, label %719

719:                                              ; preds = %714
  call void @free(i8* %715) #24
  br label %720

720:                                              ; preds = %719, %714
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %421) #22
  br label %721

721:                                              ; preds = %726, %720
  %722 = phi %"class.llvm::StringMapEntryBase"** [ %670, %720 ], [ %723, %726 ]
  %723 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %722, i64 1
  %724 = bitcast %"class.llvm::StringMapEntryBase"** %723 to i64*
  %725 = load i64, i64* %724, align 8
  switch i64 %725, label %663 [
    i64 0, label %726
    i64 -4, label %726
  ]

726:                                              ; preds = %721, %721
  br label %721

727:                                              ; preds = %778, %710
  %728 = phi %"class.llvm::StringRef"* [ %706, %710 ], [ %781, %778 ]
  %729 = phi i32 [ %668, %710 ], [ %780, %778 ]
  %730 = phi %"class.llvm::cl::Option"* [ %669, %710 ], [ %779, %778 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %431) #22
  %731 = bitcast %"class.llvm::StringRef"* %728 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %431, i8* align 8 %731, i64 16, i1 false) #22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %434) #22
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %434, i8* align 8 %731, i64 16, i1 false) #22
  %732 = call i32 @_ZNK4llvm9StringRef13edit_distanceES0_bj(%"class.llvm::StringRef"* nonnull %10, i8* %703, i64 %705, i1 zeroext true, i32 %729) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %434) #22
  %733 = icmp eq %"class.llvm::cl::Option"* %730, null
  %734 = icmp ult i32 %732, %729
  %735 = or i1 %733, %734
  br i1 %735, label %736, label %778

736:                                              ; preds = %727
  %737 = load i64, i64* %418, align 8
  %738 = icmp eq i64 %737, 0
  %739 = or i1 %738, %711
  br i1 %739, label %740, label %770

740:                                              ; preds = %736
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #22
  %741 = load i8*, i8** %432, align 8, !noalias !36
  %742 = icmp eq i8* %741, null
  br i1 %742, label %743, label %744

743:                                              ; preds = %740
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %451, i8 0, i64 24, i1 false) #22, !alias.scope !36
  br label %764

744:                                              ; preds = %740
  %745 = load i64, i64* %433, align 8, !noalias !36
  %746 = icmp ugt i64 %745, -17
  br i1 %746, label %747, label %749

747:                                              ; preds = %744
  %748 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %748) #26
  unreachable

749:                                              ; preds = %744
  %750 = icmp ult i64 %745, 23
  br i1 %750, label %756, label %751

751:                                              ; preds = %749
  %752 = add nuw i64 %745, 16
  %753 = and i64 %752, -16
  %754 = call i8* @_Znwm(i64 %753) #25
  store i8* %754, i8** %452, align 8
  %755 = or i64 %753, -9223372036854775808
  store i64 %755, i64* %453, align 8
  store i64 %745, i64* %454, align 8
  br label %759

756:                                              ; preds = %749
  %757 = trunc i64 %745 to i8
  store i8 %757, i8* %456, align 1
  %758 = icmp eq i64 %745, 0
  br i1 %758, label %761, label %759

759:                                              ; preds = %756, %751
  %760 = phi i8* [ %754, %751 ], [ %451, %756 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %760, i8* nonnull align 1 %741, i64 %745, i1 false) #22
  br label %761

761:                                              ; preds = %759, %756
  %762 = phi i8* [ %451, %756 ], [ %760, %759 ]
  %763 = getelementptr inbounds i8, i8* %762, i64 %745
  store i8 0, i8* %763, align 1
  br label %764

764:                                              ; preds = %761, %743
  %765 = load i8, i8* %450, align 1
  %766 = icmp slt i8 %765, 0
  br i1 %766, label %767, label %769

767:                                              ; preds = %764
  %768 = load i8*, i8** %385, align 8
  call void @_ZdlPv(i8* %768) #25
  br label %769

769:                                              ; preds = %767, %764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %384, i8* nonnull align 8 %451, i64 24, i1 false) #22
  br label %776

770:                                              ; preds = %736
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %435) #22
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %436) #22
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %437) #22
  store i64 %438, i64* %439, align 8, !alias.scope !41
  store i64 ptrtoint ([2 x i8]* @.str.83 to i64), i64* %441, align 8, !alias.scope !41
  store i8 5, i8* %442, align 8, !alias.scope !41
  store i8 3, i8* %443, align 1, !alias.scope !41
  store %"class.llvm::Twine"* %14, %"class.llvm::Twine"** %444, align 8, !alias.scope !46
  store i64 %457, i64* %446, align 8, !alias.scope !46
  store i8 2, i8* %447, align 8, !alias.scope !46
  store i8 5, i8* %448, align 1, !alias.scope !46
  call void @_ZNK4llvm5Twine3strEv(%"class.std::__1::basic_string"* nonnull sret %12, %"class.llvm::Twine"* nonnull %13) #24
  %771 = load i8, i8* %450, align 1
  %772 = icmp slt i8 %771, 0
  br i1 %772, label %773, label %775

773:                                              ; preds = %770
  %774 = load i8*, i8** %385, align 8
  call void @_ZdlPv(i8* %774) #25
  br label %775

775:                                              ; preds = %773, %770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %384, i8* nonnull align 8 %435, i64 24, i1 false) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %437) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %436) #22
  br label %776

776:                                              ; preds = %769, %775
  %777 = phi i8* [ %435, %775 ], [ %451, %769 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #22
  br label %778

778:                                              ; preds = %776, %727
  %779 = phi %"class.llvm::cl::Option"* [ %730, %727 ], [ %674, %776 ]
  %780 = phi i32 [ %729, %727 ], [ %732, %776 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %431) #22
  %781 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %728, i64 1
  %782 = icmp eq %"class.llvm::StringRef"* %781, %707
  br i1 %782, label %712, label %727

783:                                              ; preds = %665, %645
  %784 = phi %"class.llvm::cl::Option"* [ %666, %665 ], [ null, %645 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %412) #22
  br label %785

785:                                              ; preds = %783, %639, %490
  %786 = phi i8 [ %464, %490 ], [ %641, %639 ], [ %641, %783 ]
  %787 = phi %"class.llvm::cl::Option"* [ null, %490 ], [ null, %639 ], [ %784, %783 ]
  %788 = load i8*, i8** %409, align 8
  %789 = load i8*, i8** %410, align 8
  %790 = icmp eq i8* %788, %789
  %791 = bitcast i8* %789 to %"class.llvm::cl::Option"**
  br i1 %790, label %794, label %792

792:                                              ; preds = %785
  %793 = bitcast i8* %788 to %"class.llvm::cl::Option"**
  br label %901

794:                                              ; preds = %785
  br i1 %4, label %933, label %795

795:                                              ; preds = %794
  %796 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %797 = load i8, i8* %113, align 1
  %798 = icmp slt i8 %797, 0
  %799 = load i8*, i8** %458, align 8
  %800 = load i64, i64* %459, align 8
  %801 = zext i8 %797 to i64
  %802 = select i1 %798, i8* %799, i8* %120
  %803 = select i1 %798, i64 %800, i64 %801
  %804 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %796, i8* %802, i64 %803) #24
  %805 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %804, i64 0, i32 2
  %806 = bitcast i8** %805 to i64*
  %807 = load i64, i64* %806, align 8
  %808 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %804, i64 0, i32 3
  %809 = load i8*, i8** %808, align 8
  %810 = ptrtoint i8* %809 to i64
  %811 = sub i64 %807, %810
  %812 = icmp ult i64 %811, 33
  br i1 %812, label %813, label %815

813:                                              ; preds = %795
  %814 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %804, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.67, i64 0, i64 0), i64 33) #24
  br label %818

815:                                              ; preds = %795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %809, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.67, i64 0, i64 0), i64 33, i1 false) #22
  %816 = load i8*, i8** %808, align 8
  %817 = getelementptr inbounds i8, i8* %816, i64 33
  store i8* %817, i8** %808, align 8
  br label %818

818:                                              ; preds = %813, %815
  %819 = phi %"class.llvm::raw_ostream"* [ %814, %813 ], [ %804, %815 ]
  %820 = load i8*, i8** %466, align 8
  %821 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %819, i8* %820) #24
  %822 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %821, i64 0, i32 2
  %823 = bitcast i8** %822 to i64*
  %824 = load i64, i64* %823, align 8
  %825 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %821, i64 0, i32 3
  %826 = load i8*, i8** %825, align 8
  %827 = ptrtoint i8* %826 to i64
  %828 = sub i64 %824, %827
  %829 = icmp ult i64 %828, 10
  br i1 %829, label %830, label %832

830:                                              ; preds = %818
  %831 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %821, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), i64 10) #24
  br label %835

832:                                              ; preds = %818
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %826, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), i64 10, i1 false) #22
  %833 = load i8*, i8** %825, align 8
  %834 = getelementptr inbounds i8, i8* %833, i64 10
  store i8* %834, i8** %825, align 8
  br label %835

835:                                              ; preds = %830, %832
  %836 = phi %"class.llvm::raw_ostream"* [ %831, %830 ], [ %821, %832 ]
  %837 = load i8*, i8** %68, align 8
  %838 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %836, i8* %837) #24
  %839 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %838, i64 0, i32 2
  %840 = bitcast i8** %839 to i64*
  %841 = load i64, i64* %840, align 8
  %842 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %838, i64 0, i32 3
  %843 = load i8*, i8** %842, align 8
  %844 = ptrtoint i8* %843 to i64
  %845 = sub i64 %841, %844
  %846 = icmp ult i64 %845, 8
  br i1 %846, label %847, label %849

847:                                              ; preds = %835
  %848 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %838, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0), i64 8) #24
  br label %853

849:                                              ; preds = %835
  %850 = bitcast i8* %843 to i64*
  store i64 731677075331099936, i64* %850, align 1
  %851 = load i8*, i8** %842, align 8
  %852 = getelementptr inbounds i8, i8* %851, i64 8
  store i8* %852, i8** %842, align 8
  br label %853

853:                                              ; preds = %847, %849
  %854 = icmp eq %"class.llvm::cl::Option"* %787, null
  br i1 %854, label %933, label %855

855:                                              ; preds = %853
  %856 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %857 = load i8, i8* %113, align 1
  %858 = icmp slt i8 %857, 0
  %859 = load i8*, i8** %458, align 8
  %860 = load i64, i64* %459, align 8
  %861 = zext i8 %857 to i64
  %862 = select i1 %858, i8* %859, i8* %120
  %863 = select i1 %858, i64 %860, i64 %861
  %864 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %856, i8* %862, i64 %863) #24
  %865 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %864, i64 0, i32 2
  %866 = bitcast i8** %865 to i64*
  %867 = load i64, i64* %866, align 8
  %868 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %864, i64 0, i32 3
  %869 = load i8*, i8** %868, align 8
  %870 = ptrtoint i8* %869 to i64
  %871 = sub i64 %867, %870
  %872 = icmp ult i64 %871, 17
  br i1 %872, label %873, label %875

873:                                              ; preds = %855
  %874 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %864, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.70, i64 0, i64 0), i64 17) #24
  br label %878

875:                                              ; preds = %855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %869, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.70, i64 0, i64 0), i64 17, i1 false) #22
  %876 = load i8*, i8** %868, align 8
  %877 = getelementptr inbounds i8, i8* %876, i64 17
  store i8* %877, i8** %868, align 8
  br label %878

878:                                              ; preds = %873, %875
  %879 = phi %"class.llvm::raw_ostream"* [ %874, %873 ], [ %864, %875 ]
  %880 = load i8, i8* %450, align 1
  %881 = icmp slt i8 %880, 0
  %882 = load i8*, i8** %385, align 8
  %883 = load i64, i64* %386, align 8
  %884 = zext i8 %880 to i64
  %885 = select i1 %881, i8* %882, i8* %384
  %886 = select i1 %881, i64 %883, i64 %884
  %887 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %879, i8* %885, i64 %886) #24
  %888 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %887, i64 0, i32 2
  %889 = bitcast i8** %888 to i64*
  %890 = load i64, i64* %889, align 8
  %891 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %887, i64 0, i32 3
  %892 = load i8*, i8** %891, align 8
  %893 = ptrtoint i8* %892 to i64
  %894 = sub i64 %890, %893
  %895 = icmp ult i64 %894, 3
  br i1 %895, label %896, label %898

896:                                              ; preds = %878
  %897 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %887, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0), i64 3) #24
  br label %933

898:                                              ; preds = %878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %892, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0), i64 3, i1 false) #22
  %899 = load i8*, i8** %891, align 8
  %900 = getelementptr inbounds i8, i8* %899, i64 3
  store i8* %900, i8** %891, align 8
  br label %933

901:                                              ; preds = %792, %908
  %902 = phi %"class.llvm::cl::Option"** [ %915, %908 ], [ %793, %792 ]
  %903 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %902, align 8
  %904 = load i8*, i8** %466, align 8
  %905 = icmp eq i8* %904, null
  br i1 %905, label %908, label %906

906:                                              ; preds = %901
  %907 = call i64 @strlen(i8* nonnull %904) #27
  br label %908

908:                                              ; preds = %906, %901
  %909 = phi i64 [ %907, %906 ], [ 0, %901 ]
  %910 = bitcast %"class.llvm::cl::Option"* %903 to i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)***
  %911 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)**, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*** %910, align 8
  %912 = getelementptr inbounds i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)** %911, i64 9
  %913 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)** %912, align 8
  %914 = call zeroext i1 %913(%"class.llvm::cl::Option"* %903, i32 %463, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0, i8* %904, i64 %909, i1 zeroext false) #24
  %915 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %902, i64 1
  %916 = icmp eq %"class.llvm::cl::Option"** %915, %791
  br i1 %916, label %933, label %901

917:                                              ; preds = %635, %591, %558
  %918 = phi i8 [ %637, %635 ], [ %464, %558 ], [ %464, %591 ]
  %919 = phi %"class.llvm::cl::Option"* [ %638, %635 ], [ %556, %558 ], [ %592, %591 ]
  %920 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %919, i64 0, i32 2
  %921 = load i16, i16* %920, align 4
  %922 = and i16 %921, 384
  %923 = icmp eq i16 %922, 128
  br i1 %923, label %933, label %924

924:                                              ; preds = %917
  %925 = load i8*, i8** %391, align 8
  %926 = load i64, i64* %392, align 8
  %927 = load i8*, i8** %388, align 8
  %928 = load i64, i64* %389, align 8
  %929 = call fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"* nonnull %919, i8* %925, i64 %926, i8* %927, i64 %928, i32 %74, i8** %68, i32* nonnull dereferenceable(4) %31) #24
  %930 = zext i1 %929 to i8
  %931 = or i8 %918, %930
  br label %933

932:                                              ; preds = %520
  store i32 %74, i32* %31, align 4
  br label %933

933:                                              ; preds = %908, %898, %896, %932, %924, %917, %853, %794, %568, %528, %508, %505, %498, %483
  %934 = phi i8 [ %464, %528 ], [ %918, %917 ], [ %931, %924 ], [ %464, %568 ], [ %464, %498 ], [ %464, %505 ], [ %464, %483 ], [ 1, %853 ], [ 1, %794 ], [ %464, %932 ], [ %464, %508 ], [ 1, %896 ], [ 1, %898 ], [ %786, %908 ]
  %935 = phi i32 [ 7, %528 ], [ 0, %917 ], [ 0, %924 ], [ 7, %568 ], [ 7, %498 ], [ 7, %505 ], [ 7, %483 ], [ 7, %853 ], [ 7, %794 ], [ 5, %932 ], [ 5, %508 ], [ 7, %896 ], [ 7, %898 ], [ 7, %908 ]
  %936 = phi i8 [ 1, %528 ], [ %462, %917 ], [ %462, %924 ], [ %462, %568 ], [ %462, %498 ], [ %462, %505 ], [ %462, %483 ], [ %462, %853 ], [ %462, %794 ], [ %462, %932 ], [ %462, %508 ], [ %462, %896 ], [ %462, %898 ], [ %462, %908 ]
  %937 = phi %"class.llvm::cl::Option"* [ %461, %528 ], [ %919, %917 ], [ %461, %924 ], [ %461, %568 ], [ null, %498 ], [ null, %505 ], [ %461, %483 ], [ %461, %853 ], [ %461, %794 ], [ null, %932 ], [ null, %508 ], [ %461, %896 ], [ %461, %898 ], [ %461, %908 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %390) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %387) #22
  %938 = load i8, i8* %450, align 1
  %939 = icmp slt i8 %938, 0
  br i1 %939, label %940, label %942

940:                                              ; preds = %933
  %941 = load i8*, i8** %385, align 8
  call void @_ZdlPv(i8* %941) #25
  br label %942

942:                                              ; preds = %940, %933
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %384) #22
  switch i32 %935, label %947 [
    i32 0, label %943
    i32 7, label %943
  ]

943:                                              ; preds = %942, %942
  %944 = load i32, i32* %31, align 4
  %945 = add nsw i32 %944, 1
  store i32 %945, i32* %31, align 4
  %946 = icmp slt i32 %945, %74
  br i1 %946, label %460, label %947

947:                                              ; preds = %943, %942
  %948 = load i64, i64* %399, align 8
  %949 = load i64, i64* %400, align 8
  br label %950

950:                                              ; preds = %947, %379
  %951 = phi i64* [ %382, %379 ], [ %400, %947 ]
  %952 = phi i64* [ %381, %379 ], [ %399, %947 ]
  %953 = phi i64 [ %380, %379 ], [ %401, %947 ]
  %954 = phi i64 [ %378, %379 ], [ %949, %947 ]
  %955 = phi i64 [ %378, %379 ], [ %948, %947 ]
  %956 = phi i8 [ %367, %379 ], [ %934, %947 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %376) #22
  %957 = sub i64 %955, %954
  %958 = sdiv exact i64 %957, 24
  %959 = icmp ult i64 %958, %953
  br i1 %959, label %960, label %1055

960:                                              ; preds = %950
  br i1 %4, label %1370, label %961

961:                                              ; preds = %960
  %962 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %963 = load i8, i8* %113, align 1
  %964 = icmp slt i8 %963, 0
  %965 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %966 = load i8*, i8** %965, align 8
  %967 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %968 = load i64, i64* %967, align 8
  %969 = zext i8 %963 to i64
  %970 = select i1 %964, i8* %966, i8* %120
  %971 = select i1 %964, i64 %968, i64 %969
  %972 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %962, i8* %970, i64 %971) #24
  %973 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %972, i64 0, i32 2
  %974 = bitcast i8** %973 to i64*
  %975 = load i64, i64* %974, align 8
  %976 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %972, i64 0, i32 3
  %977 = load i8*, i8** %976, align 8
  %978 = ptrtoint i8* %977 to i64
  %979 = sub i64 %975, %978
  %980 = icmp ult i64 %979, 58
  br i1 %980, label %981, label %985

981:                                              ; preds = %961
  %982 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %972, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.72, i64 0, i64 0), i64 58) #24
  %983 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %982, i64 0, i32 3
  %984 = load i8*, i8** %983, align 8
  br label %988

985:                                              ; preds = %961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %977, i8* align 1 getelementptr inbounds ([59 x i8], [59 x i8]* @.str.72, i64 0, i64 0), i64 58, i1 false) #22
  %986 = load i8*, i8** %976, align 8
  %987 = getelementptr inbounds i8, i8* %986, i64 58
  store i8* %987, i8** %976, align 8
  br label %988

988:                                              ; preds = %981, %985
  %989 = phi i8* [ %984, %981 ], [ %987, %985 ]
  %990 = phi %"class.llvm::raw_ostream"* [ %982, %981 ], [ %972, %985 ]
  %991 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %990, i64 0, i32 2
  %992 = bitcast i8** %991 to i64*
  %993 = load i64, i64* %992, align 8
  %994 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %990, i64 0, i32 3
  %995 = ptrtoint i8* %989 to i64
  %996 = sub i64 %993, %995
  %997 = icmp ult i64 %996, 22
  br i1 %997, label %998, label %1000

998:                                              ; preds = %988
  %999 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %990, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73, i64 0, i64 0), i64 22) #24
  br label %1003

1000:                                             ; preds = %988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %989, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73, i64 0, i64 0), i64 22, i1 false) #22
  %1001 = load i8*, i8** %994, align 8
  %1002 = getelementptr inbounds i8, i8* %1001, i64 22
  store i8* %1002, i8** %994, align 8
  br label %1003

1003:                                             ; preds = %998, %1000
  %1004 = phi %"class.llvm::raw_ostream"* [ %999, %998 ], [ %990, %1000 ]
  %1005 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %1004, i64 %953) #24
  %1006 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1005, i64 0, i32 2
  %1007 = bitcast i8** %1006 to i64*
  %1008 = load i64, i64* %1007, align 8
  %1009 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1005, i64 0, i32 3
  %1010 = load i8*, i8** %1009, align 8
  %1011 = ptrtoint i8* %1010 to i64
  %1012 = sub i64 %1008, %1011
  %1013 = icmp ult i64 %1012, 20
  br i1 %1013, label %1014, label %1016

1014:                                             ; preds = %1003
  %1015 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1005, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.74, i64 0, i64 0), i64 20) #24
  br label %1019

1016:                                             ; preds = %1003
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1010, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.74, i64 0, i64 0), i64 20, i1 false) #22
  %1017 = load i8*, i8** %1009, align 8
  %1018 = getelementptr inbounds i8, i8* %1017, i64 20
  store i8* %1018, i8** %1009, align 8
  br label %1019

1019:                                             ; preds = %1014, %1016
  %1020 = phi %"class.llvm::raw_ostream"* [ %1015, %1014 ], [ %1005, %1016 ]
  %1021 = icmp ugt i32 %369, 1
  %1022 = select i1 %1021, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)
  %1023 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %1020, i8* %1022) #24
  %1024 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1023, i64 0, i32 2
  %1025 = bitcast i8** %1024 to i64*
  %1026 = load i64, i64* %1025, align 8
  %1027 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1023, i64 0, i32 3
  %1028 = load i8*, i8** %1027, align 8
  %1029 = ptrtoint i8* %1028 to i64
  %1030 = sub i64 %1026, %1029
  %1031 = icmp ult i64 %1030, 7
  br i1 %1031, label %1032, label %1034

1032:                                             ; preds = %1019
  %1033 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1023, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i64 0, i64 0), i64 7) #24
  br label %1037

1034:                                             ; preds = %1019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1028, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i64 0, i64 0), i64 7, i1 false) #22
  %1035 = load i8*, i8** %1027, align 8
  %1036 = getelementptr inbounds i8, i8* %1035, i64 7
  store i8* %1036, i8** %1027, align 8
  br label %1037

1037:                                             ; preds = %1032, %1034
  %1038 = phi %"class.llvm::raw_ostream"* [ %1033, %1032 ], [ %1023, %1034 ]
  %1039 = load i8*, i8** %68, align 8
  %1040 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %1038, i8* %1039) #24
  %1041 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1040, i64 0, i32 2
  %1042 = bitcast i8** %1041 to i64*
  %1043 = load i64, i64* %1042, align 8
  %1044 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1040, i64 0, i32 3
  %1045 = load i8*, i8** %1044, align 8
  %1046 = ptrtoint i8* %1045 to i64
  %1047 = sub i64 %1043, %1046
  %1048 = icmp ult i64 %1047, 8
  br i1 %1048, label %1049, label %1051

1049:                                             ; preds = %1037
  %1050 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1040, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i64 0, i64 0), i64 8) #24
  br label %1370

1051:                                             ; preds = %1037
  %1052 = bitcast i8* %1045 to i64*
  store i64 752220320565308704, i64* %1052, align 1
  %1053 = load i8*, i8** %1044, align 8
  %1054 = getelementptr inbounds i8, i8* %1053, i64 8
  store i8* %1054, i8** %1044, align 8
  br label %1370

1055:                                             ; preds = %950
  br i1 %368, label %1144, label %1056

1056:                                             ; preds = %1055
  %1057 = bitcast i8** %235 to i64*
  %1058 = load i64, i64* %1057, align 8
  %1059 = bitcast %"class.llvm::SmallVector"* %231 to i64*
  %1060 = load i64, i64* %1059, align 8
  %1061 = sub i64 %1058, %1060
  %1062 = ashr exact i64 %1061, 3
  %1063 = icmp ugt i64 %958, %1062
  br i1 %1063, label %1064, label %1144

1064:                                             ; preds = %1056
  br i1 %4, label %1370, label %1065

1065:                                             ; preds = %1064
  %1066 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %1067 = load i8, i8* %113, align 1
  %1068 = icmp slt i8 %1067, 0
  %1069 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1070 = load i8*, i8** %1069, align 8
  %1071 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1072 = load i64, i64* %1071, align 8
  %1073 = zext i8 %1067 to i64
  %1074 = select i1 %1068, i8* %1070, i8* %120
  %1075 = select i1 %1068, i64 %1072, i64 %1073
  %1076 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1066, i8* %1074, i64 %1075) #24
  %1077 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1076, i64 0, i32 2
  %1078 = bitcast i8** %1077 to i64*
  %1079 = load i64, i64* %1078, align 8
  %1080 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1076, i64 0, i32 3
  %1081 = load i8*, i8** %1080, align 8
  %1082 = ptrtoint i8* %1081 to i64
  %1083 = sub i64 %1079, %1082
  %1084 = icmp ult i64 %1083, 43
  br i1 %1084, label %1085, label %1089

1085:                                             ; preds = %1065
  %1086 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1076, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.78, i64 0, i64 0), i64 43) #24
  %1087 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1086, i64 0, i32 3
  %1088 = load i8*, i8** %1087, align 8
  br label %1092

1089:                                             ; preds = %1065
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1081, i8* align 1 getelementptr inbounds ([44 x i8], [44 x i8]* @.str.78, i64 0, i64 0), i64 43, i1 false) #22
  %1090 = load i8*, i8** %1080, align 8
  %1091 = getelementptr inbounds i8, i8* %1090, i64 43
  store i8* %1091, i8** %1080, align 8
  br label %1092

1092:                                             ; preds = %1085, %1089
  %1093 = phi i8* [ %1088, %1085 ], [ %1091, %1089 ]
  %1094 = phi %"class.llvm::raw_ostream"* [ %1086, %1085 ], [ %1076, %1089 ]
  %1095 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1094, i64 0, i32 2
  %1096 = bitcast i8** %1095 to i64*
  %1097 = load i64, i64* %1096, align 8
  %1098 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1094, i64 0, i32 3
  %1099 = ptrtoint i8* %1093 to i64
  %1100 = sub i64 %1097, %1099
  %1101 = icmp ult i64 %1100, 20
  br i1 %1101, label %1102, label %1104

1102:                                             ; preds = %1092
  %1103 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1094, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i64 0, i64 0), i64 20) #24
  br label %1107

1104:                                             ; preds = %1092
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1093, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i64 0, i64 0), i64 20, i1 false) #22
  %1105 = load i8*, i8** %1098, align 8
  %1106 = getelementptr inbounds i8, i8* %1105, i64 20
  store i8* %1106, i8** %1098, align 8
  br label %1107

1107:                                             ; preds = %1102, %1104
  %1108 = phi %"class.llvm::raw_ostream"* [ %1103, %1102 ], [ %1094, %1104 ]
  %1109 = load i64, i64* %1057, align 8
  %1110 = load i64, i64* %1059, align 8
  %1111 = sub i64 %1109, %1110
  %1112 = ashr exact i64 %1111, 3
  %1113 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %1108, i64 %1112) #24
  %1114 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1113, i64 0, i32 2
  %1115 = bitcast i8** %1114 to i64*
  %1116 = load i64, i64* %1115, align 8
  %1117 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1113, i64 0, i32 3
  %1118 = load i8*, i8** %1117, align 8
  %1119 = ptrtoint i8* %1118 to i64
  %1120 = sub i64 %1116, %1119
  %1121 = icmp ult i64 %1120, 28
  br i1 %1121, label %1122, label %1124

1122:                                             ; preds = %1107
  %1123 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1113, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i64 0, i64 0), i64 28) #24
  br label %1127

1124:                                             ; preds = %1107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1118, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i64 0, i64 0), i64 28, i1 false) #22
  %1125 = load i8*, i8** %1117, align 8
  %1126 = getelementptr inbounds i8, i8* %1125, i64 28
  store i8* %1126, i8** %1117, align 8
  br label %1127

1127:                                             ; preds = %1122, %1124
  %1128 = phi %"class.llvm::raw_ostream"* [ %1123, %1122 ], [ %1113, %1124 ]
  %1129 = load i8*, i8** %68, align 8
  %1130 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %1128, i8* %1129) #24
  %1131 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1130, i64 0, i32 2
  %1132 = bitcast i8** %1131 to i64*
  %1133 = load i64, i64* %1132, align 8
  %1134 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1130, i64 0, i32 3
  %1135 = load i8*, i8** %1134, align 8
  %1136 = ptrtoint i8* %1135 to i64
  %1137 = sub i64 %1133, %1136
  %1138 = icmp ult i64 %1137, 7
  br i1 %1138, label %1139, label %1141

1139:                                             ; preds = %1127
  %1140 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1130, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i64 0, i64 0), i64 7) #24
  br label %1370

1141:                                             ; preds = %1127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1135, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i64 0, i64 0), i64 7, i1 false) #22
  %1142 = load i8*, i8** %1134, align 8
  %1143 = getelementptr inbounds i8, i8* %1142, i64 7
  store i8* %1143, i8** %1134, align 8
  br label %1370

1144:                                             ; preds = %1056, %1055
  %1145 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %230, align 8
  %1146 = icmp eq %"class.llvm::cl::Option"* %1145, null
  br i1 %1146, label %1147, label %1247

1147:                                             ; preds = %1144
  %1148 = trunc i64 %958 to i32
  %1149 = bitcast i8** %235 to i64*
  %1150 = load i64, i64* %1149, align 8
  %1151 = bitcast %"class.llvm::SmallVector"* %231 to i64*
  %1152 = load i64, i64* %1151, align 8
  %1153 = sub i64 %1150, %1152
  %1154 = ashr exact i64 %1153, 3
  %1155 = icmp eq i64 %1153, 0
  br i1 %1155, label %1370, label %1156

1156:                                             ; preds = %1147
  %1157 = inttoptr i64 %1152 to %"class.llvm::cl::Option"**
  %1158 = bitcast %"class.llvm::SmallVector"* %231 to %"class.llvm::cl::Option"***
  %1159 = bitcast %"class.llvm::SmallVector.141"* %30 to %"struct.std::__1::pair.147"**
  %1160 = bitcast i32* %19 to i8*
  %1161 = bitcast i32* %20 to i8*
  br label %1162

1162:                                             ; preds = %1245, %1156
  %1163 = phi %"class.llvm::cl::Option"** [ %1157, %1156 ], [ %1246, %1245 ]
  %1164 = phi i32 [ %369, %1156 ], [ %1199, %1245 ]
  %1165 = phi i64 [ 0, %1156 ], [ %1243, %1245 ]
  %1166 = phi i32 [ 0, %1156 ], [ %1242, %1245 ]
  %1167 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1163, i64 %1165
  %1168 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1167, align 8
  %1169 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1168, i64 0, i32 2
  %1170 = load i16, i16* %1169, align 4
  %1171 = and i16 %1170, 6
  %1172 = or i16 %1171, 1
  %1173 = icmp eq i16 %1172, 3
  br i1 %1173, label %1174, label %1195

1174:                                             ; preds = %1162
  %1175 = zext i32 %1166 to i64
  %1176 = load %"struct.std::__1::pair.147"*, %"struct.std::__1::pair.147"** %1159, align 8
  %1177 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1176, i64 %1175, i32 0, i32 0
  %1178 = load i8*, i8** %1177, align 8
  %1179 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1176, i64 %1175, i32 0, i32 1
  %1180 = load i64, i64* %1179, align 8
  %1181 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1176, i64 %1175, i32 1
  %1182 = load i32, i32* %1181, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1160) #22
  store i32 %1182, i32* %19, align 4
  %1183 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1168, i64 0, i32 6, i32 0
  %1184 = load i8*, i8** %1183, align 8
  %1185 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1168, i64 0, i32 6, i32 1
  %1186 = load i64, i64* %1185, align 8
  %1187 = call fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"* %1168, i8* %1184, i64 %1186, i8* %1178, i64 %1180, i32 0, i8** null, i32* nonnull dereferenceable(4) %19) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1160) #22
  %1188 = add i32 %1166, 1
  %1189 = add i32 %1164, -1
  %1190 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %1158, align 8
  %1191 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1190, i64 %1165
  %1192 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1191, align 8
  %1193 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1192, i64 0, i32 2
  %1194 = load i16, i16* %1193, align 4
  br label %1195

1195:                                             ; preds = %1174, %1162
  %1196 = phi i16 [ %1194, %1174 ], [ %1170, %1162 ]
  %1197 = phi %"class.llvm::cl::Option"* [ %1192, %1174 ], [ %1168, %1162 ]
  %1198 = phi i32 [ %1188, %1174 ], [ %1166, %1162 ]
  %1199 = phi i32 [ %1189, %1174 ], [ %1164, %1162 ]
  %1200 = and i16 %1196, 7
  %1201 = icmp eq i16 %1200, 2
  %1202 = sub i32 %1148, %1198
  %1203 = icmp ugt i32 %1202, %1199
  %1204 = xor i1 %1201, true
  %1205 = and i1 %1203, %1204
  br i1 %1205, label %1206, label %1241

1206:                                             ; preds = %1195
  %1207 = zext i1 %1201 to i8
  br label %1208

1208:                                             ; preds = %1235, %1206
  %1209 = phi i16 [ %1240, %1235 ], [ %1196, %1206 ]
  %1210 = phi %"class.llvm::cl::Option"* [ %1238, %1235 ], [ %1197, %1206 ]
  %1211 = phi i8 [ %1215, %1235 ], [ %1207, %1206 ]
  %1212 = phi i32 [ %1229, %1235 ], [ %1198, %1206 ]
  %1213 = and i16 %1209, 7
  %1214 = icmp eq i16 %1213, 0
  %1215 = select i1 %1214, i8 1, i8 %1211
  %1216 = zext i32 %1212 to i64
  %1217 = load %"struct.std::__1::pair.147"*, %"struct.std::__1::pair.147"** %1159, align 8
  %1218 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1217, i64 %1216, i32 0, i32 0
  %1219 = load i8*, i8** %1218, align 8
  %1220 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1217, i64 %1216, i32 0, i32 1
  %1221 = load i64, i64* %1220, align 8
  %1222 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1217, i64 %1216, i32 1
  %1223 = load i32, i32* %1222, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1161) #22
  store i32 %1223, i32* %20, align 4
  %1224 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1210, i64 0, i32 6, i32 0
  %1225 = load i8*, i8** %1224, align 8
  %1226 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1210, i64 0, i32 6, i32 1
  %1227 = load i64, i64* %1226, align 8
  %1228 = call fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"* %1210, i8* %1225, i64 %1227, i8* %1219, i64 %1221, i32 0, i8** null, i32* nonnull dereferenceable(4) %20) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1161) #22
  %1229 = add i32 %1212, 1
  %1230 = sub i32 %1148, %1229
  %1231 = icmp ugt i32 %1230, %1199
  %1232 = and i8 %1215, 1
  %1233 = icmp eq i8 %1232, 0
  %1234 = and i1 %1231, %1233
  br i1 %1234, label %1235, label %1241

1235:                                             ; preds = %1208
  %1236 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %1158, align 8
  %1237 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1236, i64 %1165
  %1238 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1237, align 8
  %1239 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1238, i64 0, i32 2
  %1240 = load i16, i16* %1239, align 4
  br label %1208

1241:                                             ; preds = %1208, %1195
  %1242 = phi i32 [ %1198, %1195 ], [ %1229, %1208 ]
  %1243 = add i64 %1165, 1
  %1244 = icmp eq i64 %1243, %1154
  br i1 %1244, label %1370, label %1245

1245:                                             ; preds = %1241
  %1246 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %1158, align 8
  br label %1162

1247:                                             ; preds = %1144
  %1248 = bitcast i8** %235 to i64*
  %1249 = load i64, i64* %1248, align 8
  %1250 = bitcast %"class.llvm::SmallVector"* %231 to i64*
  %1251 = load i64, i64* %1250, align 8
  %1252 = sub i64 %1249, %1251
  %1253 = ashr exact i64 %1252, 3
  %1254 = icmp eq i64 %1252, 8
  %1255 = inttoptr i64 %1251 to %"class.llvm::cl::Option"**
  br i1 %1254, label %1264, label %1256

1256:                                             ; preds = %1247
  %1257 = bitcast %"class.llvm::SmallVector"* %231 to %"class.llvm::cl::Option"***
  %1258 = bitcast %"class.llvm::SmallVector.141"* %30 to %"struct.std::__1::pair.147"**
  %1259 = bitcast i32* %21 to i8*
  br label %1274

1260:                                             ; preds = %1303
  %1261 = load i64, i64* %1248, align 8
  %1262 = load i64, i64* %1250, align 8
  %1263 = inttoptr i64 %1262 to %"class.llvm::cl::Option"**
  br label %1264

1264:                                             ; preds = %1260, %1247
  %1265 = phi %"class.llvm::cl::Option"** [ %1255, %1247 ], [ %1263, %1260 ]
  %1266 = phi i64 [ %1251, %1247 ], [ %1262, %1260 ]
  %1267 = phi i64 [ %1249, %1247 ], [ %1261, %1260 ]
  %1268 = phi i8 [ %956, %1247 ], [ %1304, %1260 ]
  %1269 = phi i32 [ 0, %1247 ], [ %1305, %1260 ]
  %1270 = sub i64 %1267, %1266
  %1271 = icmp eq i64 %1270, 8
  %1272 = icmp eq i32 %1269, 0
  %1273 = and i1 %1271, %1272
  br i1 %1273, label %1310, label %1332

1274:                                             ; preds = %1308, %1256
  %1275 = phi %"class.llvm::cl::Option"** [ %1255, %1256 ], [ %1309, %1308 ]
  %1276 = phi i64 [ 1, %1256 ], [ %1306, %1308 ]
  %1277 = phi i32 [ 0, %1256 ], [ %1305, %1308 ]
  %1278 = phi i8 [ %956, %1256 ], [ %1304, %1308 ]
  %1279 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1275, i64 %1276
  %1280 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1279, align 8
  %1281 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1280, i64 0, i32 2
  %1282 = load i16, i16* %1281, align 4
  %1283 = and i16 %1282, 6
  %1284 = or i16 %1283, 1
  %1285 = icmp eq i16 %1284, 3
  br i1 %1285, label %1286, label %1303

1286:                                             ; preds = %1274
  %1287 = zext i32 %1277 to i64
  %1288 = load %"struct.std::__1::pair.147"*, %"struct.std::__1::pair.147"** %1258, align 8
  %1289 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1288, i64 %1287, i32 0, i32 0
  %1290 = load i8*, i8** %1289, align 8
  %1291 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1288, i64 %1287, i32 0, i32 1
  %1292 = load i64, i64* %1291, align 8
  %1293 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1288, i64 %1287, i32 1
  %1294 = load i32, i32* %1293, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1259) #22
  store i32 %1294, i32* %21, align 4
  %1295 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1280, i64 0, i32 6, i32 0
  %1296 = load i8*, i8** %1295, align 8
  %1297 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1280, i64 0, i32 6, i32 1
  %1298 = load i64, i64* %1297, align 8
  %1299 = call fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"* %1280, i8* %1296, i64 %1298, i8* %1290, i64 %1292, i32 0, i8** null, i32* nonnull dereferenceable(4) %21) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1259) #22
  %1300 = zext i1 %1299 to i8
  %1301 = or i8 %1278, %1300
  %1302 = add i32 %1277, 1
  br label %1303

1303:                                             ; preds = %1286, %1274
  %1304 = phi i8 [ %1301, %1286 ], [ %1278, %1274 ]
  %1305 = phi i32 [ %1302, %1286 ], [ %1277, %1274 ]
  %1306 = add i64 %1276, 1
  %1307 = icmp eq i64 %1306, %1253
  br i1 %1307, label %1260, label %1308

1308:                                             ; preds = %1303
  %1309 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %1257, align 8
  br label %1274

1310:                                             ; preds = %1264
  %1311 = load i8*, i8** %372, align 8
  %1312 = load i8*, i8** %373, align 8
  %1313 = icmp eq i8* %1311, %1312
  br i1 %1313, label %1332, label %1314

1314:                                             ; preds = %1310
  %1315 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1265, align 8
  %1316 = bitcast i8* %1311 to i8**
  %1317 = load i8*, i8** %1316, align 8
  %1318 = getelementptr inbounds i8, i8* %1311, i64 8
  %1319 = bitcast i8* %1318 to i64*
  %1320 = load i64, i64* %1319, align 8
  %1321 = getelementptr inbounds i8, i8* %1311, i64 16
  %1322 = bitcast i8* %1321 to i32*
  %1323 = load i32, i32* %1322, align 8
  %1324 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1324) #22
  store i32 %1323, i32* %22, align 4
  %1325 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1315, i64 0, i32 6, i32 0
  %1326 = load i8*, i8** %1325, align 8
  %1327 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1315, i64 0, i32 6, i32 1
  %1328 = load i64, i64* %1327, align 8
  %1329 = call fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"* %1315, i8* %1326, i64 %1328, i8* %1317, i64 %1320, i32 0, i8** null, i32* nonnull dereferenceable(4) %22) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1324) #22
  %1330 = zext i1 %1329 to i8
  %1331 = or i8 %1268, %1330
  br label %1332

1332:                                             ; preds = %1314, %1310, %1264
  %1333 = phi i8 [ %1268, %1310 ], [ %1331, %1314 ], [ %1268, %1264 ]
  %1334 = phi i32 [ 0, %1310 ], [ 1, %1314 ], [ %1269, %1264 ]
  %1335 = zext i32 %1334 to i64
  %1336 = load i64, i64* %952, align 8
  %1337 = load i64, i64* %951, align 8
  %1338 = sub i64 %1336, %1337
  %1339 = sdiv exact i64 %1338, 24
  %1340 = icmp eq i64 %1339, %1335
  br i1 %1340, label %1370, label %1341

1341:                                             ; preds = %1332
  %1342 = bitcast i32* %23 to i8*
  br label %1343

1343:                                             ; preds = %1343, %1341
  %1344 = phi i64 [ %1337, %1341 ], [ %1366, %1343 ]
  %1345 = phi i64 [ %1335, %1341 ], [ %1364, %1343 ]
  %1346 = phi i32 [ %1334, %1341 ], [ %1363, %1343 ]
  %1347 = phi i8 [ %1333, %1341 ], [ %1362, %1343 ]
  %1348 = inttoptr i64 %1344 to %"struct.std::__1::pair.147"*
  %1349 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %230, align 8
  %1350 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1348, i64 %1345, i32 0, i32 0
  %1351 = load i8*, i8** %1350, align 8
  %1352 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1348, i64 %1345, i32 0, i32 1
  %1353 = load i64, i64* %1352, align 8
  %1354 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %1348, i64 %1345, i32 1
  %1355 = load i32, i32* %1354, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1342) #22
  store i32 %1355, i32* %23, align 4
  %1356 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1349, i64 0, i32 6, i32 0
  %1357 = load i8*, i8** %1356, align 8
  %1358 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1349, i64 0, i32 6, i32 1
  %1359 = load i64, i64* %1358, align 8
  %1360 = call fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"* %1349, i8* %1357, i64 %1359, i8* %1351, i64 %1353, i32 0, i8** null, i32* nonnull dereferenceable(4) %23) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1342) #22
  %1361 = zext i1 %1360 to i8
  %1362 = or i8 %1347, %1361
  %1363 = add i32 %1346, 1
  %1364 = zext i32 %1363 to i64
  %1365 = load i64, i64* %952, align 8
  %1366 = load i64, i64* %951, align 8
  %1367 = sub i64 %1365, %1366
  %1368 = sdiv exact i64 %1367, 24
  %1369 = icmp eq i64 %1368, %1364
  br i1 %1369, label %1370, label %1343

1370:                                             ; preds = %1343, %1241, %1141, %1139, %1051, %1049, %1332, %1147, %1064, %960
  %1371 = phi i8 [ 1, %960 ], [ 1, %1064 ], [ %956, %1147 ], [ %1333, %1332 ], [ 1, %1049 ], [ 1, %1051 ], [ 1, %1139 ], [ 1, %1141 ], [ %956, %1241 ], [ %1362, %1343 ]
  %1372 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %232, i64 0, i32 0, i32 0
  %1373 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %1372, align 8
  %1374 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %221, i64 0, i32 4, i32 0, i32 1
  %1375 = load i32, i32* %1374, align 8
  %1376 = icmp eq i32 %1375, 0
  br i1 %1376, label %1383, label %1377

1377:                                             ; preds = %1370, %1381
  %1378 = phi %"class.llvm::StringMapEntryBase"** [ %1382, %1381 ], [ %1373, %1370 ]
  %1379 = bitcast %"class.llvm::StringMapEntryBase"** %1378 to i64*
  %1380 = load i64, i64* %1379, align 8
  switch i64 %1380, label %1383 [
    i64 0, label %1381
    i64 -4, label %1381
  ]

1381:                                             ; preds = %1377, %1377
  %1382 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %1378, i64 1
  br label %1377

1383:                                             ; preds = %1377, %1370
  %1384 = phi %"class.llvm::StringMapEntryBase"** [ %1373, %1370 ], [ %1378, %1377 ]
  %1385 = zext i32 %1375 to i64
  %1386 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %1373, i64 %1385
  %1387 = icmp eq %"class.llvm::StringMapEntryBase"** %1384, %1386
  br i1 %1387, label %1395, label %1388

1388:                                             ; preds = %1383
  %1389 = bitcast %"class.llvm::Twine"* %37 to i8*
  %1390 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %37, i64 0, i32 3
  %1391 = bitcast %"class.llvm::Twine"* %37 to i8**
  %1392 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %37, i64 0, i32 2
  br label %1404

1393:                                             ; preds = %1423
  %1394 = icmp eq %"class.llvm::StringMapEntryBase"** %1425, %1386
  br i1 %1394, label %1395, label %1404

1395:                                             ; preds = %1393, %1383
  %1396 = phi i8 [ %1371, %1383 ], [ %1422, %1393 ]
  %1397 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 2
  %1398 = bitcast %"class.std::__1::vector"* %1397 to i64*
  %1399 = load i64, i64* %1398, align 8
  %1400 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %43, i64 0, i32 2, i32 0, i32 1
  %1401 = bitcast %"class.llvm::StringRef"** %1400 to i64*
  store i64 %1399, i64* %1401, align 8
  %1402 = icmp eq i8 %1396, 0
  %1403 = or i1 %1402, %4
  br i1 %1403, label %1430, label %1429

1404:                                             ; preds = %1393, %1388
  %1405 = phi %"class.llvm::StringMapEntryBase"** [ %1384, %1388 ], [ %1425, %1393 ]
  %1406 = phi i8 [ %1371, %1388 ], [ %1422, %1393 ]
  %1407 = bitcast %"class.llvm::StringMapEntryBase"** %1405 to %"class.llvm::StringMapEntry"**
  %1408 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %1407, align 8
  %1409 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %1408, i64 0, i32 1
  %1410 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %1409, align 8
  %1411 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1410, i64 0, i32 2
  %1412 = load i16, i16* %1411, align 4
  %1413 = and i16 %1412, 6
  %1414 = icmp eq i16 %1413, 2
  br i1 %1414, label %1415, label %1421

1415:                                             ; preds = %1404
  %1416 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1410, i64 0, i32 1
  %1417 = load i32, i32* %1416, align 8
  %1418 = icmp eq i32 %1417, 0
  br i1 %1418, label %1419, label %1421

1419:                                             ; preds = %1415
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1389) #22
  store i8 1, i8* %1390, align 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.82, i64 0, i64 0), i8** %1391, align 8
  store i8 3, i8* %1392, align 8
  %1420 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %1410, %"class.llvm::Twine"* nonnull dereferenceable(24) %37, i8* null, i64 0) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1389) #22
  br label %1421

1421:                                             ; preds = %1419, %1415, %1404
  %1422 = phi i8 [ 1, %1419 ], [ %1406, %1415 ], [ %1406, %1404 ]
  br label %1423

1423:                                             ; preds = %1428, %1421
  %1424 = phi %"class.llvm::StringMapEntryBase"** [ %1405, %1421 ], [ %1425, %1428 ]
  %1425 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %1424, i64 1
  %1426 = bitcast %"class.llvm::StringMapEntryBase"** %1425 to i64*
  %1427 = load i64, i64* %1426, align 8
  switch i64 %1427, label %1393 [
    i64 0, label %1428
    i64 -4, label %1428
  ]

1428:                                             ; preds = %1423, %1423
  br label %1423

1429:                                             ; preds = %1395
  call void @exit(i32 1) #26
  unreachable

1430:                                             ; preds = %1395
  %1431 = load i8*, i8** %372, align 8
  %1432 = icmp eq i8* %1431, %371
  br i1 %1432, label %1434, label %1433

1433:                                             ; preds = %1430
  call void @free(i8* %1431) #24
  br label %1434

1434:                                             ; preds = %1433, %1430
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %370) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #22
  call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev(%"class.llvm::BumpPtrAllocatorImpl"* nonnull %25) #24
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %53) #22
  %1435 = load i8*, i8** %49, align 8
  %1436 = icmp eq i8* %1435, %45
  br i1 %1436, label %1438, label %1437

1437:                                             ; preds = %1434
  call void @free(i8* %1435) #24
  br label %1438

1438:                                             ; preds = %1434, %1437
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %44) #22
  ret i1 %1402
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev(%"class.llvm::BumpPtrAllocatorImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %3 = bitcast %"class.llvm::SmallVector.61"* %2 to i8***
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i8***
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp eq i8** %4, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %1, %9
  %10 = phi i8** [ %12, %9 ], [ %4, %1 ]
  %11 = load i8*, i8** %10, align 8
  tail call void @free(i8* %11) #24
  %12 = getelementptr inbounds i8*, i8** %10, i64 1
  %13 = icmp eq i8** %12, %7
  br i1 %13, label %14, label %9

14:                                               ; preds = %9, %1
  %15 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = bitcast %"class.llvm::SmallVectorTemplateCommon.70"* %15 to %"struct.std::__1::pair.223"**
  %17 = load %"struct.std::__1::pair.223"*, %"struct.std::__1::pair.223"** %16, align 8
  %18 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i8** %18 to %"struct.std::__1::pair.223"**
  %20 = load %"struct.std::__1::pair.223"*, %"struct.std::__1::pair.223"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair.223"* %17, %20
  %22 = bitcast %"struct.std::__1::pair.223"* %17 to i8*
  br i1 %21, label %32, label %23

23:                                               ; preds = %14, %23
  %24 = phi %"struct.std::__1::pair.223"* [ %27, %23 ], [ %17, %14 ]
  %25 = getelementptr inbounds %"struct.std::__1::pair.223", %"struct.std::__1::pair.223"* %24, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @free(i8* %26) #24
  %27 = getelementptr inbounds %"struct.std::__1::pair.223", %"struct.std::__1::pair.223"* %24, i64 1
  %28 = icmp eq %"struct.std::__1::pair.223"* %27, %20
  br i1 %28, label %29, label %23

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %14
  %33 = phi i8* [ %31, %29 ], [ %22, %14 ]
  %34 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %35 = icmp eq i8* %33, %34
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  tail call void @free(i8* %33) #24
  br label %37

37:                                               ; preds = %32, %36
  %38 = getelementptr inbounds %"class.llvm::SmallVector.61", %"class.llvm::SmallVector.61"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %41 = icmp eq i8* %39, %40
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  tail call void @free(i8* %39) #24
  br label %43

43:                                               ; preds = %37, %42
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* nocapture readonly, %"class.llvm::Twine"* dereferenceable(24), i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i8* %2, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 6, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 6, i32 1
  %10 = load i64, i64* %9, align 8
  br label %11

11:                                               ; preds = %4, %6
  %12 = phi i64 [ %10, %6 ], [ %3, %4 ]
  %13 = phi i8* [ %8, %6 ], [ %2, %4 ]
  %14 = icmp eq i64 %12, 0
  %15 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  br i1 %14, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 7, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 7, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %15, i8* %18, i64 %20) #23
  br label %44

22:                                               ; preds = %11
  %23 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %26

26:                                               ; preds = %22, %25
  %27 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %28 = inttoptr i64 %27 to %"class.(anonymous namespace)::CommandLineParser"*
  %29 = inttoptr i64 %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %27 to i8*
  %38 = zext i8 %31 to i64
  %39 = select i1 %32, i8* %34, i8* %37
  %40 = select i1 %32, i64 %36, i64 %38
  %41 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %15, i8* %39, i64 %40) #24
  %42 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #24
  %43 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %42, i8* %13, i64 %12) #23
  br label %44

44:                                               ; preds = %26, %16
  %45 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %46 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %45, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9) #24
  tail call void @_ZNK4llvm5Twine5printERNS_11raw_ostreamE(%"class.llvm::Twine"* %1, %"class.llvm::raw_ostream"* dereferenceable(40) %46) #24
  %47 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %46, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #24
  ret i1 true
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %2) #24
  br label %19

14:                                               ; preds = %3
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %1, i64 %2, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %2
  store i8* %18, i8** %7, align 8
  br label %19

19:                                               ; preds = %16, %14, %12
  %20 = phi %"class.llvm::raw_ostream"* [ %13, %12 ], [ %0, %14 ], [ %0, %16 ]
  ret %"class.llvm::raw_ostream"* %20
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.llvm::raw_ostream"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i8* %8, i8* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %13, i64 %14) #24
  ret %"class.llvm::raw_ostream"* %15
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #27
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %5, %4 ], [ 0, %2 ]
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %7) #23
  ret %"class.llvm::raw_ostream"* %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b(%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca %"class.llvm::Twine", align 8
  %9 = alloca %"class.llvm::Twine", align 8
  br i1 %6, label %14, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  br label %14

14:                                               ; preds = %10, %7
  %15 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 2
  %16 = load i16, i16* %15, align 4
  %17 = and i16 %16, 7
  %18 = zext i16 %17 to i32
  switch i32 %18, label %39 [
    i32 0, label %19
    i32 2, label %29
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 1
  br i1 %22, label %23, label %39

23:                                               ; preds = %19
  %24 = bitcast %"class.llvm::Twine"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #22
  %25 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 3
  store i8 1, i8* %25, align 1
  %26 = bitcast %"class.llvm::Twine"* %8 to i8**
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %8, i64 0, i32 2
  store i8 3, i8* %27, align 8
  %28 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %0, %"class.llvm::Twine"* nonnull dereferenceable(24) %8, i8* %2, i64 %3) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #22
  br label %44

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %"class.llvm::Twine"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #22
  %35 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 3
  store i8 1, i8* %35, align 1
  %36 = bitcast %"class.llvm::Twine"* %9 to i8**
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 2
  store i8 3, i8* %37, align 8
  %38 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %0, %"class.llvm::Twine"* nonnull dereferenceable(24) %9, i8* %2, i64 %3) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #22
  br label %44

39:                                               ; preds = %29, %19, %14
  %40 = bitcast %"class.llvm::cl::Option"* %0 to i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)***
  %41 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)**, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)*** %40, align 8
  %42 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.llvm::cl::Option"* %0, i32 %1, i8* %2, i64 %3, i8* %4, i64 %5) #24
  br label %44

44:                                               ; preds = %39, %33, %23
  %45 = phi i1 [ %43, %39 ], [ true, %33 ], [ true, %23 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZNK4llvm2cl5alias14getOptionWidthEv(%"class.llvm::cl::alias"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 0, i32 6, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 6
  ret i64 %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl5alias15printOptionInfoEm(%"class.llvm::cl::alias"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %4 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #24
  %5 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 0, i32 6, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 0, i32 6, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %4, i8* %6, i64 %8) #23
  %10 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 0, i32 7, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 0, i32 7, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = load i64, i64* %7, align 8
  %15 = add i64 %14, 6
  tail call fastcc void @_ZL12printHelpStrN4llvm9StringRefEmm(i8* %11, i64 %13, i64 %1, i64 %15) #23
  ret void
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZL12printHelpStrN4llvm9StringRefEmm(i8*, i64, i64, i64) unnamed_addr #0 {
  %5 = alloca %"class.llvm::StringRef", align 8
  %6 = alloca %"struct.std::__1::pair.151", align 8
  %7 = alloca %"struct.std::__1::pair.151", align 8
  %8 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %5, i64 0, i32 0
  store i8* %0, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %5, i64 0, i32 1
  store i64 %1, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair.151"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #22
  %11 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %6, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %6, i64 0, i32 1, i32 1
  %15 = bitcast %"struct.std::__1::pair.151"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  call void @_ZNK4llvm9StringRef5splitEc(%"struct.std::__1::pair.151"* nonnull sret %6, %"class.llvm::StringRef"* nonnull %5, i8 signext 10) #23
  %16 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %17 = sub i64 %2, %3
  %18 = trunc i64 %17 to i32
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %16, i32 %18) #24
  %20 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i64 0, i64 0), i64 3) #24
  %21 = load i8*, i8** %11, align 8
  %22 = load i64, i64* %12, align 8
  %23 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %20, i8* %21, i64 %22) #23
  %24 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #24
  %25 = load i64, i64* %14, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %4
  %28 = bitcast %"struct.std::__1::pair.151"* %7 to i8*
  %29 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %7, i64 0, i32 1
  %30 = bitcast %"class.llvm::StringRef"* %13 to i8*
  %31 = bitcast %"class.llvm::StringRef"* %29 to i8*
  %32 = trunc i64 %2 to i32
  br label %33

33:                                               ; preds = %27, %33
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #22
  call void @_ZNK4llvm9StringRef5splitEc(%"struct.std::__1::pair.151"* nonnull sret %7, %"class.llvm::StringRef"* %13, i8 signext 10) #23
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %28, i64 16, i1 false) #22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 16, i1 false) #22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #22
  %34 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %35 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %34, i32 %32) #24
  %36 = load i8*, i8** %11, align 8
  %37 = load i64, i64* %12, align 8
  %38 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %35, i8* %36, i64 %37) #23
  %39 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #24
  %40 = load i64, i64* %14, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %33

42:                                               ; preds = %33, %4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i64) local_unnamed_addr #0 align 2 {
  %4 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %5 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #24
  %6 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %5, i8* %7, i64 %9) #23
  %11 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %12 = load i64, i64* %8, align 8
  %13 = sub i64 %2, %12
  %14 = trunc i64 %13 to i32
  %15 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %11, i32 %14) #24
  ret void
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl6parserINS0_13boolOrDefaultEE5parseERNS0_6OptionENS_9StringRefES6_RS2_(%"class.llvm::cl::parser.42"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8* nocapture readnone, i64, i8*, i64, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.llvm::StringRef", align 8
  %9 = alloca %"class.llvm::Twine", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %8, i64 0, i32 0
  store i8* %4, i8** %11, align 8
  %12 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %8, i64 0, i32 1
  store i64 %5, i64* %12, align 8
  switch i64 %5, label %39 [
    i64 0, label %25
    i64 4, label %13
    i64 1, label %22
    i64 5, label %26
  ]

13:                                               ; preds = %7
  %14 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #22
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %13
  %17 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #22
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4) #22
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %39

22:                                               ; preds = %7
  %23 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i64 %5) #22
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %35

25:                                               ; preds = %7, %22, %19, %16, %13
  store i32 1, i32* %6, align 4
  br label %53

26:                                               ; preds = %7
  %27 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 %5) #22
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %26
  %30 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i64 5) #22
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i64 5) #22
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %39

35:                                               ; preds = %22
  %36 = tail call i32 @bcmp(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 %5) #22
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35, %32, %29, %26
  store i32 2, i32* %6, align 4
  br label %53

39:                                               ; preds = %32, %19, %7, %35
  %40 = bitcast %"class.llvm::Twine"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #22
  %41 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #22
  %42 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 3, i8* %42, align 8, !alias.scope !51
  %43 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 5, i8* %43, align 1, !alias.scope !51
  %44 = bitcast %"class.llvm::Twine"* %10 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** %44, align 8, !alias.scope !51
  %45 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 1
  %46 = bitcast %"union.llvm::Twine::Child"* %45 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %8, %"class.llvm::StringRef"** %46, align 8, !alias.scope !51
  %47 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %10, %"class.llvm::Twine"** %47, align 8, !alias.scope !54
  %48 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 1, i32 0
  %49 = bitcast %"class.llvm::Twine"** %48 to i64*
  store i64 ptrtoint ([52 x i8]* @.str.18 to i64), i64* %49, align 8, !alias.scope !54
  %50 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 2
  store i8 2, i8* %50, align 8, !alias.scope !54
  %51 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 3
  store i8 3, i8* %51, align 1, !alias.scope !54
  %52 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %1, %"class.llvm::Twine"* nonnull dereferenceable(24) %9, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #22
  br label %53

53:                                               ; preds = %39, %38, %25
  %54 = phi i1 [ false, %25 ], [ false, %38 ], [ true, %39 ]
  ret i1 %54
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl6parserIyE5parseERNS0_6OptionENS_9StringRefES5_Ry(%"class.llvm::cl::parser.43"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8* nocapture readnone, i64, i8*, i64, i64* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = alloca %"class.llvm::StringRef", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = alloca %"class.llvm::Twine", align 8
  %12 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 0
  store i8* %4, i8** %12, align 8
  %13 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 1
  store i64 %5, i64* %13, align 8
  %14 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #22
  store i64 -6148914691236517206, i64* %8, align 8
  %15 = call zeroext i1 @_ZN4llvm20getAsUnsignedIntegerENS_9StringRefEjRy(i8* %4, i64 %5, i32 0, i64* nonnull dereferenceable(8) %8) #24
  br i1 %15, label %18, label %16

16:                                               ; preds = %7
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #22
  br label %32

18:                                               ; preds = %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #22
  %19 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #22
  %20 = bitcast %"class.llvm::Twine"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #22
  %21 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  store i8 3, i8* %21, align 8, !alias.scope !59
  %22 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  store i8 5, i8* %22, align 1, !alias.scope !59
  %23 = bitcast %"class.llvm::Twine"* %11 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** %23, align 8, !alias.scope !59
  %24 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 1
  %25 = bitcast %"union.llvm::Twine::Child"* %24 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %9, %"class.llvm::StringRef"** %25, align 8, !alias.scope !59
  %26 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %11, %"class.llvm::Twine"** %26, align 8, !alias.scope !62
  %27 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 1, i32 0
  %28 = bitcast %"class.llvm::Twine"** %27 to i64*
  store i64 ptrtoint ([35 x i8]* @.str.20 to i64), i64* %28, align 8, !alias.scope !62
  %29 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 2, i8* %29, align 8, !alias.scope !62
  %30 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 3, i8* %30, align 1, !alias.scope !62
  %31 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %1, %"class.llvm::Twine"* nonnull dereferenceable(24) %10, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #22
  br label %32

32:                                               ; preds = %16, %18
  %33 = phi i1 [ true, %18 ], [ false, %16 ]
  ret i1 %33
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl6parserIdE5parseERNS0_6OptionENS_9StringRefES5_Rd(%"class.llvm::cl::parser.44"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8* nocapture readnone, i64, i8*, i64, double* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %8 = tail call fastcc zeroext i1 @_ZL11parseDoubleRN4llvm2cl6OptionENS_9StringRefERd(%"class.llvm::cl::Option"* dereferenceable(152) %1, i8* %4, i64 %5, double* dereferenceable(8) %6) #23
  ret i1 %8
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @_ZL11parseDoubleRN4llvm2cl6OptionENS_9StringRefERd(%"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8*, i64, double* nocapture dereferenceable(8)) unnamed_addr #0 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.llvm::StringRef", align 8
  %7 = alloca %"class.llvm::SmallString.152", align 8
  %8 = alloca i8*, align 8
  %9 = alloca %"class.llvm::Twine", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %6, i64 0, i32 0
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %6, i64 0, i32 1
  store i64 %2, i64* %12, align 8
  %13 = bitcast %"class.llvm::SmallString.152"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #22
  %14 = getelementptr inbounds %"class.llvm::SmallString.152", %"class.llvm::SmallString.152"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = getelementptr inbounds i8, i8* %1, i64 %2
  %16 = bitcast %"class.llvm::SmallString.152"* %7 to %"class.llvm::SmallVectorImpl.78"*
  %17 = getelementptr inbounds %"class.llvm::SmallString.152", %"class.llvm::SmallString.152"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %18 = getelementptr inbounds %"class.llvm::SmallString.152", %"class.llvm::SmallString.152"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"class.llvm::SmallString.152", %"class.llvm::SmallString.152"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds %"class.llvm::SmallString.152", %"class.llvm::SmallString.152"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.llvm::SmallString.152", %"class.llvm::SmallString.152"* %7, i64 1, i32 0
  %22 = bitcast i8** %20 to %"class.llvm::SmallVector.153"**
  store %"class.llvm::SmallVector.153"* %21, %"class.llvm::SmallVector.153"** %22, align 8
  call void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl.78"* nonnull %16, i8* %1, i8* %15) #24
  %23 = bitcast %"class.llvm::SmallString.152"* %7 to %"class.llvm::SmallVectorTemplateBase.79"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #22
  store i8 0, i8* %5, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase.79"* nonnull %23, i8* nonnull dereferenceable(1) %5) #24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #22
  %24 = load i8*, i8** %19, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 -1
  store i8* %25, i8** %19, align 8
  %26 = load i8*, i8** %18, align 8
  %27 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %28 = call double @strtod(i8* %26, i8** nonnull %8) #24
  store double %28, double* %3, align 8
  %29 = load i8*, i8** %8, align 8
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %4
  %33 = bitcast %"class.llvm::Twine"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #22
  %34 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #22
  %35 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 3, i8* %35, align 8, !alias.scope !67
  %36 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 5, i8* %36, align 1, !alias.scope !67
  %37 = bitcast %"class.llvm::Twine"* %10 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** %37, align 8, !alias.scope !67
  %38 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 1
  %39 = bitcast %"union.llvm::Twine::Child"* %38 to %"class.llvm::StringRef"**
  store %"class.llvm::StringRef"* %6, %"class.llvm::StringRef"** %39, align 8, !alias.scope !67
  %40 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %10, %"class.llvm::Twine"** %40, align 8, !alias.scope !70
  %41 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 1, i32 0
  %42 = bitcast %"class.llvm::Twine"** %41 to i64*
  store i64 ptrtoint ([45 x i8]* @.str.90 to i64), i64* %42, align 8, !alias.scope !70
  %43 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 2
  store i8 2, i8* %43, align 8, !alias.scope !70
  %44 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 3
  store i8 3, i8* %44, align 1, !alias.scope !70
  %45 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %0, %"class.llvm::Twine"* nonnull dereferenceable(24) %9, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #22
  br label %46

46:                                               ; preds = %4, %32
  %47 = phi i1 [ true, %32 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #22
  %48 = load i8*, i8** %18, align 8
  %49 = icmp eq i8* %48, %17
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  call void @free(i8* %48) #24
  br label %51

51:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #22
  ret i1 %47
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4llvm2cl6parserIfE5parseERNS0_6OptionENS_9StringRefES5_Rf(%"class.llvm::cl::parser.45"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8* nocapture readnone, i64, i8*, i64, float* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca double, align 8
  %9 = bitcast double* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #22
  store double 0xFFFFFFFFFFFFFFFF, double* %8, align 8
  %10 = call fastcc zeroext i1 @_ZL11parseDoubleRN4llvm2cl6OptionENS_9StringRefERd(%"class.llvm::cl::Option"* dereferenceable(152) %1, i8* %4, i64 %5, double* nonnull dereferenceable(8) %8) #23
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = load double, double* %8, align 8
  %13 = fptrunc double %12 to float
  store float %13, float* %6, align 4
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi i1 [ false, %11 ], [ true, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #22
  ret i1 %15
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4llvm2cl19generic_parser_base10findOptionENS_9StringRefE(%"class.llvm::cl::generic_parser_base"*, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to i32 (%"class.llvm::cl::generic_parser_base"*)***
  %5 = load i32 (%"class.llvm::cl::generic_parser_base"*)**, i32 (%"class.llvm::cl::generic_parser_base"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %5, i64 2
  %7 = load i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %6, align 8
  %8 = tail call i32 %7(%"class.llvm::cl::generic_parser_base"* %0) #24
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)***
  %12 = icmp eq i64 %2, 0
  br label %13

13:                                               ; preds = %10, %26
  %14 = phi i32 [ 0, %10 ], [ %27, %26 ]
  %15 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %11, align 8
  %16 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %15, i64 3
  %17 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %16, align 8
  %18 = tail call { i8*, i64 } %17(%"class.llvm::cl::generic_parser_base"* %0, i32 %14) #24
  %19 = extractvalue { i8*, i64 } %18, 0
  %20 = extractvalue { i8*, i64 } %18, 1
  %21 = icmp eq i64 %20, %2
  br i1 %21, label %22, label %26

22:                                               ; preds = %13
  br i1 %12, label %29, label %23

23:                                               ; preds = %22
  %24 = tail call i32 @bcmp(i8* %19, i8* %1, i64 %2) #22
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %13, %23
  %27 = add nuw i32 %14, 1
  %28 = icmp eq i32 %27, %8
  br i1 %28, label %29, label %13

29:                                               ; preds = %26, %23, %22, %3
  %30 = phi i32 [ 0, %3 ], [ %14, %22 ], [ %14, %23 ], [ %8, %26 ]
  ret i32 %30
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK4llvm2cl19generic_parser_base14getOptionWidthERKNS0_6OptionE(%"class.llvm::cl::generic_parser_base"*, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = add i64 %4, 6
  %8 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to i32 (%"class.llvm::cl::generic_parser_base"*)***
  %9 = load i32 (%"class.llvm::cl::generic_parser_base"*)**, i32 (%"class.llvm::cl::generic_parser_base"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %9, i64 2
  %11 = load i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %10, align 8
  %12 = tail call i32 %11(%"class.llvm::cl::generic_parser_base"* %0) #24
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %51, label %14

14:                                               ; preds = %6
  %15 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)***
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i32 [ 0, %14 ], [ %27, %16 ]
  %18 = phi i64 [ %7, %14 ], [ %26, %16 ]
  %19 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %15, align 8
  %20 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %19, i64 3
  %21 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %20, align 8
  %22 = tail call { i8*, i64 } %21(%"class.llvm::cl::generic_parser_base"* %0, i32 %17) #24
  %23 = extractvalue { i8*, i64 } %22, 1
  %24 = add i64 %23, 8
  %25 = icmp ult i64 %18, %24
  %26 = select i1 %25, i64 %24, i64 %18
  %27 = add nuw i32 %17, 1
  %28 = icmp eq i32 %27, %12
  br i1 %28, label %51, label %16

29:                                               ; preds = %2
  %30 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to i32 (%"class.llvm::cl::generic_parser_base"*)***
  %31 = load i32 (%"class.llvm::cl::generic_parser_base"*)**, i32 (%"class.llvm::cl::generic_parser_base"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %31, i64 2
  %33 = load i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %32, align 8
  %34 = tail call i32 %33(%"class.llvm::cl::generic_parser_base"* %0) #24
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %51, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)***
  br label %38

38:                                               ; preds = %36, %38
  %39 = phi i32 [ 0, %36 ], [ %49, %38 ]
  %40 = phi i64 [ 0, %36 ], [ %48, %38 ]
  %41 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %37, align 8
  %42 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %41, i64 3
  %43 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %42, align 8
  %44 = tail call { i8*, i64 } %43(%"class.llvm::cl::generic_parser_base"* %0, i32 %39) #24
  %45 = extractvalue { i8*, i64 } %44, 1
  %46 = add i64 %45, 8
  %47 = icmp ult i64 %40, %46
  %48 = select i1 %47, i64 %46, i64 %40
  %49 = add nuw i32 %39, 1
  %50 = icmp eq i32 %49, %34
  br i1 %50, label %51, label %38

51:                                               ; preds = %16, %38, %6, %29
  %52 = phi i64 [ 0, %29 ], [ %7, %6 ], [ %48, %38 ], [ %26, %16 ]
  ret i64 %52
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl19generic_parser_base15printOptionInfoERKNS0_6OptionEm(%"class.llvm::cl::generic_parser_base"*, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %69, label %7

7:                                                ; preds = %3
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %9 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #24
  %10 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = load i64, i64* %4, align 8
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %9, i8* %11, i64 %12) #23
  %14 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 7, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 7, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, 6
  tail call fastcc void @_ZL12printHelpStrN4llvm9StringRefEmm(i8* %15, i64 %17, i64 %2, i64 %19) #23
  %20 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to i32 (%"class.llvm::cl::generic_parser_base"*)***
  %21 = load i32 (%"class.llvm::cl::generic_parser_base"*)**, i32 (%"class.llvm::cl::generic_parser_base"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %21, i64 2
  %23 = load i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %22, align 8
  %24 = tail call i32 %23(%"class.llvm::cl::generic_parser_base"* %0) #24
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %118, label %26

26:                                               ; preds = %7
  %27 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)***
  br label %28

28:                                               ; preds = %26, %66
  %29 = phi i32 [ 0, %26 ], [ %67, %66 ]
  %30 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %27, align 8
  %31 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %30, i64 3
  %32 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %31, align 8
  %33 = tail call { i8*, i64 } %32(%"class.llvm::cl::generic_parser_base"* %0, i32 %29) #24
  %34 = extractvalue { i8*, i64 } %33, 1
  %35 = sub i64 %2, %34
  %36 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %37 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i64 5) #24
  %38 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %27, align 8
  %39 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %38, i64 3
  %40 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %39, align 8
  %41 = tail call { i8*, i64 } %40(%"class.llvm::cl::generic_parser_base"* %0, i32 %29) #24
  %42 = extractvalue { i8*, i64 } %41, 0
  %43 = extractvalue { i8*, i64 } %41, 1
  %44 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %37, i8* %42, i64 %43) #23
  %45 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %46 = trunc i64 %35 to i32
  %47 = add i32 %46, -8
  %48 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %45, i32 %47) #24
  %49 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i64 5) #24
  %50 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %27, align 8
  %51 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %50, i64 4
  %52 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %51, align 8
  %53 = tail call { i8*, i64 } %52(%"class.llvm::cl::generic_parser_base"* %0, i32 %29) #24
  %54 = extractvalue { i8*, i64 } %53, 0
  %55 = extractvalue { i8*, i64 } %53, 1
  %56 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %49, i8* %54, i64 %55) #23
  %57 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %56, i64 0, i32 3
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %56, i64 0, i32 2
  %60 = load i8*, i8** %59, align 8
  %61 = icmp ult i8* %58, %60
  br i1 %61, label %64, label %62

62:                                               ; preds = %28
  %63 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %56, i8 zeroext 10) #24
  br label %66

64:                                               ; preds = %28
  %65 = getelementptr inbounds i8, i8* %58, i64 1
  store i8* %65, i8** %57, align 8
  store i8 10, i8* %58, align 1
  br label %66

66:                                               ; preds = %62, %64
  %67 = add nuw i32 %29, 1
  %68 = icmp eq i32 %67, %24
  br i1 %68, label %118, label %28

69:                                               ; preds = %3
  %70 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 7, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %89, label %73

73:                                               ; preds = %69
  %74 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %75 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i64 2) #24
  %76 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 7, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = load i64, i64* %70, align 8
  %79 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %75, i8* %77, i64 %78) #23
  %80 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %79, i64 0, i32 3
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %79, i64 0, i32 2
  %83 = load i8*, i8** %82, align 8
  %84 = icmp ult i8* %81, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %73
  %86 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %79, i8 zeroext 10) #24
  br label %89

87:                                               ; preds = %73
  %88 = getelementptr inbounds i8, i8* %81, i64 1
  store i8* %88, i8** %80, align 8
  store i8 10, i8* %81, align 1
  br label %89

89:                                               ; preds = %87, %85, %69
  %90 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to i32 (%"class.llvm::cl::generic_parser_base"*)***
  %91 = load i32 (%"class.llvm::cl::generic_parser_base"*)**, i32 (%"class.llvm::cl::generic_parser_base"*)*** %90, align 8
  %92 = getelementptr inbounds i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %91, i64 2
  %93 = load i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %92, align 8
  %94 = tail call i32 %93(%"class.llvm::cl::generic_parser_base"* %0) #24
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %118, label %96

96:                                               ; preds = %89
  %97 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)***
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i32 [ 0, %96 ], [ %116, %98 ]
  %100 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %97, align 8
  %101 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %100, i64 3
  %102 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %101, align 8
  %103 = tail call { i8*, i64 } %102(%"class.llvm::cl::generic_parser_base"* %0, i32 %99) #24
  %104 = extractvalue { i8*, i64 } %103, 0
  %105 = extractvalue { i8*, i64 } %103, 1
  %106 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %107 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %106, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i64 5) #24
  %108 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %107, i8* %104, i64 %105) #23
  %109 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %97, align 8
  %110 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %109, i64 4
  %111 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %110, align 8
  %112 = tail call { i8*, i64 } %111(%"class.llvm::cl::generic_parser_base"* %0, i32 %99) #24
  %113 = extractvalue { i8*, i64 } %112, 0
  %114 = extractvalue { i8*, i64 } %112, 1
  %115 = add i64 %105, 8
  tail call fastcc void @_ZL12printHelpStrN4llvm9StringRefEmm(i8* %113, i64 %114, i64 %2, i64 %115) #23
  %116 = add nuw i32 %99, 1
  %117 = icmp eq i32 %116, %94
  br i1 %117, label %118, label %98

118:                                              ; preds = %66, %98, %7, %89
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl19generic_parser_base22printGenericOptionDiffERKNS0_6OptionERKNS0_18GenericOptionValueES7_m(%"class.llvm::cl::generic_parser_base"*, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8), %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %6 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %7 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #24
  %8 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %7, i8* %9, i64 %11) #23
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %14 = load i64, i64* %10, align 8
  %15 = sub i64 %4, %14
  %16 = trunc i64 %15 to i32
  %17 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %13, i32 %16) #24
  %18 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to i32 (%"class.llvm::cl::generic_parser_base"*)***
  %19 = load i32 (%"class.llvm::cl::generic_parser_base"*)**, i32 (%"class.llvm::cl::generic_parser_base"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %19, i64 2
  %21 = load i32 (%"class.llvm::cl::generic_parser_base"*)*, i32 (%"class.llvm::cl::generic_parser_base"*)** %20, align 8
  %22 = tail call i32 %21(%"class.llvm::cl::generic_parser_base"* %0) #24
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %85, label %24

24:                                               ; preds = %5
  %25 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)***
  %26 = bitcast %"struct.llvm::cl::GenericOptionValue"* %2 to i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)***
  br label %27

27:                                               ; preds = %24, %82
  %28 = phi i32 [ 0, %24 ], [ %83, %82 ]
  %29 = load %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)**, %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)*** %25, align 8
  %30 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)*, %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)** %29, i64 6
  %31 = load %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)*, %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)** %30, align 8
  %32 = tail call dereferenceable(8) %"struct.llvm::cl::GenericOptionValue"* %31(%"class.llvm::cl::generic_parser_base"* %0, i32 %28) #24
  %33 = load i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)**, i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)*** %26, align 8
  %34 = load i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)*, i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"struct.llvm::cl::GenericOptionValue"* %2, %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8) %32) #24
  br i1 %35, label %82, label %36

36:                                               ; preds = %27
  %37 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %38 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %39 = bitcast %"class.llvm::cl::generic_parser_base"* %0 to { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)***
  %40 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %39, align 8
  %41 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %40, i64 3
  %42 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %41, align 8
  %43 = tail call { i8*, i64 } %42(%"class.llvm::cl::generic_parser_base"* %0, i32 %28) #24
  %44 = extractvalue { i8*, i64 } %43, 0
  %45 = extractvalue { i8*, i64 } %43, 1
  %46 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %38, i8* %44, i64 %45) #23
  %47 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %39, align 8
  %48 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %47, i64 3
  %49 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %48, align 8
  %50 = tail call { i8*, i64 } %49(%"class.llvm::cl::generic_parser_base"* %0, i32 %28) #24
  %51 = extractvalue { i8*, i64 } %50, 1
  %52 = tail call i64 @llvm.usub.sat.i64(i64 8, i64 %51)
  %53 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %54 = trunc i64 %52 to i32
  %55 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %53, i32 %54) #24
  %56 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %57 = bitcast %"struct.llvm::cl::GenericOptionValue"* %3 to i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)***
  br label %58

58:                                               ; preds = %36, %76
  %59 = phi i32 [ 0, %36 ], [ %77, %76 ]
  %60 = load %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)**, %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)*** %25, align 8
  %61 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)*, %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)** %60, i64 6
  %62 = load %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)*, %"struct.llvm::cl::GenericOptionValue"* (%"class.llvm::cl::generic_parser_base"*, i32)** %61, align 8
  %63 = tail call dereferenceable(8) %"struct.llvm::cl::GenericOptionValue"* %62(%"class.llvm::cl::generic_parser_base"* %0, i32 %59) #24
  %64 = load i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)**, i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)*** %57, align 8
  %65 = load i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)*, i1 (%"struct.llvm::cl::GenericOptionValue"*, %"struct.llvm::cl::GenericOptionValue"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"struct.llvm::cl::GenericOptionValue"* %3, %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8) %63) #24
  br i1 %66, label %76, label %67

67:                                               ; preds = %58
  %68 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %69 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)**, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*** %39, align 8
  %70 = getelementptr inbounds { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %69, i64 3
  %71 = load { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)*, { i8*, i64 } (%"class.llvm::cl::generic_parser_base"*, i32)** %70, align 8
  %72 = tail call { i8*, i64 } %71(%"class.llvm::cl::generic_parser_base"* %0, i32 %59) #24
  %73 = extractvalue { i8*, i64 } %72, 0
  %74 = extractvalue { i8*, i64 } %72, 1
  %75 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %68, i8* %73, i64 %74) #23
  br label %79

76:                                               ; preds = %58
  %77 = add nuw i32 %59, 1
  %78 = icmp eq i32 %77, %22
  br i1 %78, label %79, label %58

79:                                               ; preds = %76, %67
  %80 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %81 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %80, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  br label %88

82:                                               ; preds = %27
  %83 = add nuw i32 %28, 1
  %84 = icmp eq i32 %83, %22
  br i1 %84, label %85, label %27

85:                                               ; preds = %82, %5
  %86 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %87 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %86, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.28, i64 0, i64 0), i64 25) #24
  br label %88

88:                                               ; preds = %79, %85
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl6parserIbE15printOptionDiffERKNS0_6OptionEbNS0_11OptionValueIbEEm(%"class.llvm::cl::parser.38"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i1 zeroext, %"struct.llvm::cl::OptionValue.33"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.llvm::raw_string_ostream", align 8
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %4) #23
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #22
  %11 = bitcast %"class.llvm::raw_string_ostream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 4
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %16, align 8
  %17 = bitcast %"class.llvm::raw_string_ostream"* %7 to %"class.llvm::raw_ostream"*
  %18 = zext i1 %2 to i64
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* nonnull %17, i64 %18) #24
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %7) #24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #22
  %20 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %21 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %9, align 8
  %27 = load i64, i64* %10, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i8* %26, i8* %8
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %21, i8* %29, i64 %30) #24
  %32 = load i8, i8* %23, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %10, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp ult i64 %36, 8
  %38 = trunc i64 %36 to i32
  %39 = sub nuw nsw i32 8, %38
  %40 = select i1 %37, i32 %39, i32 0
  %41 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %42 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %41, i32 %40) #24
  %43 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %42, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %44 = getelementptr inbounds %"struct.llvm::cl::OptionValue.33", %"struct.llvm::cl::OptionValue.33"* %3, i64 0, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1, !range !10
  %46 = icmp eq i8 %45, 0
  %47 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %46, label %53, label %48

48:                                               ; preds = %5
  %49 = getelementptr inbounds %"struct.llvm::cl::OptionValue.33", %"struct.llvm::cl::OptionValue.33"* %3, i64 0, i32 0, i32 0, i32 1
  %50 = load i8, i8* %49, align 1, !range !10
  %51 = zext i8 %50 to i64
  %52 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* %47, i64 %51) #24
  br label %55

53:                                               ; preds = %5
  %54 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %47, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #24
  br label %55

55:                                               ; preds = %53, %48
  %56 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %57 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  %58 = load i8, i8* %23, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %61) #25
  br label %62

62:                                               ; preds = %55, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"*) unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl6parserINS0_13boolOrDefaultEE15printOptionDiffERKNS0_6OptionES2_NS0_11OptionValueIS2_EEm(%"class.llvm::cl::parser.42"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i32, %"struct.llvm::cl::OptionValue.39"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.llvm::raw_string_ostream", align 8
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %4) #23
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #22
  %11 = bitcast %"class.llvm::raw_string_ostream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 4
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %16, align 8
  %17 = bitcast %"class.llvm::raw_string_ostream"* %7 to %"class.llvm::raw_ostream"*
  %18 = sext i32 %2 to i64
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* nonnull %17, i64 %18) #24
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %7) #24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #22
  %20 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %21 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %9, align 8
  %27 = load i64, i64* %10, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i8* %26, i8* %8
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %21, i8* %29, i64 %30) #24
  %32 = load i8, i8* %23, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %10, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp ult i64 %36, 8
  %38 = trunc i64 %36 to i32
  %39 = sub nuw nsw i32 8, %38
  %40 = select i1 %37, i32 %39, i32 0
  %41 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %42 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %41, i32 %40) #24
  %43 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %42, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %44 = getelementptr inbounds %"struct.llvm::cl::OptionValue.39", %"struct.llvm::cl::OptionValue.39"* %3, i64 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 4, !range !10
  %46 = icmp eq i8 %45, 0
  %47 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %46, label %53, label %48

48:                                               ; preds = %5
  %49 = getelementptr inbounds %"struct.llvm::cl::OptionValue.39", %"struct.llvm::cl::OptionValue.39"* %3, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* %47, i64 %51) #24
  br label %55

53:                                               ; preds = %5
  %54 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %47, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #24
  br label %55

55:                                               ; preds = %53, %48
  %56 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %57 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  %58 = load i8, i8* %23, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %61) #25
  br label %62

62:                                               ; preds = %55, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl6parserIiE15printOptionDiffERKNS0_6OptionEiNS0_11OptionValueIiEEm(%"class.llvm::cl::parser.15"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i32, %"struct.llvm::cl::OptionValue.10"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.llvm::raw_string_ostream", align 8
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %4) #23
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #22
  %11 = bitcast %"class.llvm::raw_string_ostream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 4
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %16, align 8
  %17 = bitcast %"class.llvm::raw_string_ostream"* %7 to %"class.llvm::raw_ostream"*
  %18 = sext i32 %2 to i64
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* nonnull %17, i64 %18) #24
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %7) #24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #22
  %20 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %21 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %9, align 8
  %27 = load i64, i64* %10, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i8* %26, i8* %8
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %21, i8* %29, i64 %30) #24
  %32 = load i8, i8* %23, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %10, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp ult i64 %36, 8
  %38 = trunc i64 %36 to i32
  %39 = sub nuw nsw i32 8, %38
  %40 = select i1 %37, i32 %39, i32 0
  %41 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %42 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %41, i32 %40) #24
  %43 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %42, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %44 = getelementptr inbounds %"struct.llvm::cl::OptionValue.10", %"struct.llvm::cl::OptionValue.10"* %3, i64 0, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 4, !range !10
  %46 = icmp eq i8 %45, 0
  %47 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %46, label %53, label %48

48:                                               ; preds = %5
  %49 = getelementptr inbounds %"struct.llvm::cl::OptionValue.10", %"struct.llvm::cl::OptionValue.10"* %3, i64 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* %47, i64 %51) #24
  br label %55

53:                                               ; preds = %5
  %54 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %47, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #24
  br label %55

55:                                               ; preds = %53, %48
  %56 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %57 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  %58 = load i8, i8* %23, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %61) #25
  br label %62

62:                                               ; preds = %55, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl6parserIjE15printOptionDiffERKNS0_6OptionEjNS0_11OptionValueIjEEm(%"class.llvm::cl::parser"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i32, %"struct.llvm::cl::OptionValue"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.llvm::raw_string_ostream", align 8
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %4) #23
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #22
  %11 = bitcast %"class.llvm::raw_string_ostream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 4
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %16, align 8
  %17 = bitcast %"class.llvm::raw_string_ostream"* %7 to %"class.llvm::raw_ostream"*
  %18 = zext i32 %2 to i64
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* nonnull %17, i64 %18) #24
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %7) #24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #22
  %20 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %21 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %9, align 8
  %27 = load i64, i64* %10, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i8* %26, i8* %8
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %21, i8* %29, i64 %30) #24
  %32 = load i8, i8* %23, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %10, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp ult i64 %36, 8
  %38 = trunc i64 %36 to i32
  %39 = sub nuw nsw i32 8, %38
  %40 = select i1 %37, i32 %39, i32 0
  %41 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %42 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %41, i32 %40) #24
  %43 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %42, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %44 = getelementptr inbounds %"struct.llvm::cl::OptionValue", %"struct.llvm::cl::OptionValue"* %3, i64 0, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 4, !range !10
  %46 = icmp eq i8 %45, 0
  %47 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %46, label %53, label %48

48:                                               ; preds = %5
  %49 = getelementptr inbounds %"struct.llvm::cl::OptionValue", %"struct.llvm::cl::OptionValue"* %3, i64 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %47, i64 %51) #24
  br label %55

53:                                               ; preds = %5
  %54 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %47, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #24
  br label %55

55:                                               ; preds = %53, %48
  %56 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %57 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  %58 = load i8, i8* %23, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %61) #25
  br label %62

62:                                               ; preds = %55, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl6parserIyE15printOptionDiffERKNS0_6OptionEyNS0_11OptionValueIyEEm(%"class.llvm::cl::parser.43"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i64, %"struct.llvm::cl::OptionValue.91"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.llvm::raw_string_ostream", align 8
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %4) #23
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #22
  %11 = bitcast %"class.llvm::raw_string_ostream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 4
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %16, align 8
  %17 = bitcast %"class.llvm::raw_string_ostream"* %7 to %"class.llvm::raw_ostream"*
  %18 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEy(%"class.llvm::raw_ostream"* nonnull %17, i64 %2) #24
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %7) #24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #22
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %20 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %21 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %9, align 8
  %26 = load i64, i64* %10, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i8* %25, i8* %8
  %29 = select i1 %24, i64 %26, i64 %27
  %30 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %20, i8* %28, i64 %29) #24
  %31 = load i8, i8* %22, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i64, i64* %10, align 8
  %34 = zext i8 %31 to i64
  %35 = select i1 %32, i64 %33, i64 %34
  %36 = icmp ult i64 %35, 8
  %37 = trunc i64 %35 to i32
  %38 = sub nuw nsw i32 8, %37
  %39 = select i1 %36, i32 %38, i32 0
  %40 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %41 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %40, i32 %39) #24
  %42 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %43 = getelementptr inbounds %"struct.llvm::cl::OptionValue.91", %"struct.llvm::cl::OptionValue.91"* %3, i64 0, i32 0, i32 0, i32 2
  %44 = load i8, i8* %43, align 8, !range !10
  %45 = icmp eq i8 %44, 0
  %46 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %45, label %51, label %47

47:                                               ; preds = %5
  %48 = getelementptr inbounds %"struct.llvm::cl::OptionValue.91", %"struct.llvm::cl::OptionValue.91"* %3, i64 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEy(%"class.llvm::raw_ostream"* %46, i64 %49) #24
  br label %53

51:                                               ; preds = %5
  %52 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %46, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #24
  br label %53

53:                                               ; preds = %51, %47
  %54 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %55 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  %56 = load i8, i8* %22, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %59) #25
  br label %60

60:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  ret void
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEy(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl6parserIdE15printOptionDiffERKNS0_6OptionEdNS0_11OptionValueIdEEm(%"class.llvm::cl::parser.44"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), double, %"struct.llvm::cl::OptionValue.96"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.llvm::raw_string_ostream", align 8
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %4) #23
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #22
  %11 = bitcast %"class.llvm::raw_string_ostream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 4
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %16, align 8
  %17 = bitcast %"class.llvm::raw_string_ostream"* %7 to %"class.llvm::raw_ostream"*
  %18 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEd(%"class.llvm::raw_ostream"* nonnull %17, double %2) #24
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %7) #24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #22
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %20 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %21 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %9, align 8
  %26 = load i64, i64* %10, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i8* %25, i8* %8
  %29 = select i1 %24, i64 %26, i64 %27
  %30 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %20, i8* %28, i64 %29) #24
  %31 = load i8, i8* %22, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i64, i64* %10, align 8
  %34 = zext i8 %31 to i64
  %35 = select i1 %32, i64 %33, i64 %34
  %36 = icmp ult i64 %35, 8
  %37 = trunc i64 %35 to i32
  %38 = sub nuw nsw i32 8, %37
  %39 = select i1 %36, i32 %38, i32 0
  %40 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %41 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %40, i32 %39) #24
  %42 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %43 = getelementptr inbounds %"struct.llvm::cl::OptionValue.96", %"struct.llvm::cl::OptionValue.96"* %3, i64 0, i32 0, i32 0, i32 2
  %44 = load i8, i8* %43, align 8, !range !10
  %45 = icmp eq i8 %44, 0
  %46 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %45, label %51, label %47

47:                                               ; preds = %5
  %48 = getelementptr inbounds %"struct.llvm::cl::OptionValue.96", %"struct.llvm::cl::OptionValue.96"* %3, i64 0, i32 0, i32 0, i32 1
  %49 = load double, double* %48, align 8
  %50 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEd(%"class.llvm::raw_ostream"* %46, double %49) #24
  br label %53

51:                                               ; preds = %5
  %52 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %46, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #24
  br label %53

53:                                               ; preds = %51, %47
  %54 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %55 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  %56 = load i8, i8* %22, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %59) #25
  br label %60

60:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  ret void
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEd(%"class.llvm::raw_ostream"*, double) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl6parserIfE15printOptionDiffERKNS0_6OptionEfNS0_11OptionValueIfEEm(%"class.llvm::cl::parser.45"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), float, %"struct.llvm::cl::OptionValue.101"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.llvm::raw_string_ostream", align 8
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %4) #23
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #22
  %11 = bitcast %"class.llvm::raw_string_ostream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 4
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %16, align 8
  %17 = bitcast %"class.llvm::raw_string_ostream"* %7 to %"class.llvm::raw_ostream"*
  %18 = fpext float %2 to double
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEd(%"class.llvm::raw_ostream"* nonnull %17, double %18) #24
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %7) #24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #22
  %20 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %21 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %9, align 8
  %27 = load i64, i64* %10, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i8* %26, i8* %8
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %21, i8* %29, i64 %30) #24
  %32 = load i8, i8* %23, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %10, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp ult i64 %36, 8
  %38 = trunc i64 %36 to i32
  %39 = sub nuw nsw i32 8, %38
  %40 = select i1 %37, i32 %39, i32 0
  %41 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %42 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %41, i32 %40) #24
  %43 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %42, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %44 = getelementptr inbounds %"struct.llvm::cl::OptionValue.101", %"struct.llvm::cl::OptionValue.101"* %3, i64 0, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 4, !range !10
  %46 = icmp eq i8 %45, 0
  %47 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %46, label %53, label %48

48:                                               ; preds = %5
  %49 = getelementptr inbounds %"struct.llvm::cl::OptionValue.101", %"struct.llvm::cl::OptionValue.101"* %3, i64 0, i32 0, i32 0, i32 1
  %50 = load float, float* %49, align 4
  %51 = fpext float %50 to double
  %52 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEd(%"class.llvm::raw_ostream"* %47, double %51) #24
  br label %55

53:                                               ; preds = %5
  %54 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %47, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #24
  br label %55

55:                                               ; preds = %53, %48
  %56 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %57 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  %58 = load i8, i8* %23, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %61) #25
  br label %62

62:                                               ; preds = %55, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl6parserIcE15printOptionDiffERKNS0_6OptionEcNS0_11OptionValueIcEEm(%"class.llvm::cl::parser.30"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8 signext, %"struct.llvm::cl::OptionValue.25"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.llvm::raw_string_ostream", align 8
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %4) #23
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #22
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #22
  %11 = bitcast %"class.llvm::raw_string_ostream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 4
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %7, i64 0, i32 1
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %16, align 8
  %17 = bitcast %"class.llvm::raw_string_ostream"* %7 to %"class.llvm::raw_ostream"*
  %18 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* nonnull %17, i8 zeroext %2) #24
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %7) #24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #22
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %20 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %21 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %9, align 8
  %26 = load i64, i64* %10, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i8* %25, i8* %8
  %29 = select i1 %24, i64 %26, i64 %27
  %30 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %20, i8* %28, i64 %29) #24
  %31 = load i8, i8* %22, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i64, i64* %10, align 8
  %34 = zext i8 %31 to i64
  %35 = select i1 %32, i64 %33, i64 %34
  %36 = icmp ult i64 %35, 8
  %37 = trunc i64 %35 to i32
  %38 = sub nuw nsw i32 8, %37
  %39 = select i1 %36, i32 %38, i32 0
  %40 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %41 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %40, i32 %39) #24
  %42 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %43 = getelementptr inbounds %"struct.llvm::cl::OptionValue.25", %"struct.llvm::cl::OptionValue.25"* %3, i64 0, i32 0, i32 0, i32 2
  %44 = load i8, i8* %43, align 1, !range !10
  %45 = icmp eq i8 %44, 0
  %46 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %45, label %59, label %47

47:                                               ; preds = %5
  %48 = getelementptr inbounds %"struct.llvm::cl::OptionValue.25", %"struct.llvm::cl::OptionValue.25"* %3, i64 0, i32 0, i32 0, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %46, i64 0, i32 3
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %46, i64 0, i32 2
  %53 = load i8*, i8** %52, align 8
  %54 = icmp ult i8* %51, %53
  br i1 %54, label %57, label %55

55:                                               ; preds = %47
  %56 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %46, i8 zeroext %49) #24
  br label %61

57:                                               ; preds = %47
  %58 = getelementptr inbounds i8, i8* %51, i64 1
  store i8* %58, i8** %50, align 8
  store i8 %49, i8* %51, align 1
  br label %61

59:                                               ; preds = %5
  %60 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %46, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #24
  br label %61

61:                                               ; preds = %57, %55, %59
  %62 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %63 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  %64 = load i8, i8* %22, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %67) #25
  br label %68

68:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15printOptionDiffERKNS0_6OptionENS_9StringRefERKNS0_11OptionValueIS8_EEm(%"class.llvm::cl::parser.22"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i8*, i64, %"struct.llvm::cl::OptionValue.19"* dereferenceable(40), i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %5) #23
  %7 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #24
  %9 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %8, i8* %2, i64 %3) #23
  %10 = icmp ult i64 %3, 8
  %11 = trunc i64 %3 to i32
  %12 = sub nuw nsw i32 8, %11
  %13 = select i1 %10, i32 %12, i32 0
  %14 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %15 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %14, i32 %13) #24
  %16 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i64 11) #24
  %17 = getelementptr inbounds %"struct.llvm::cl::OptionValue.19", %"struct.llvm::cl::OptionValue.19"* %4, i64 0, i32 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !10
  %19 = icmp eq i8 %18, 0
  %20 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %19, label %36, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"struct.llvm::cl::OptionValue.19", %"struct.llvm::cl::OptionValue.19"* %4, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.llvm::cl::OptionValue.19", %"struct.llvm::cl::OptionValue.19"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %32 = zext i8 %25 to i64
  %33 = select i1 %26, i8* %28, i8* %31
  %34 = select i1 %26, i64 %30, i64 %32
  %35 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %20, i8* %33, i64 %34) #24
  br label %38

36:                                               ; preds = %6
  %37 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #24
  br label %38

38:                                               ; preds = %36, %21
  %39 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %40 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm2cl17basic_parser_impl18printOptionNoValueERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* nocapture readnone, %"class.llvm::cl::Option"* nocapture readonly dereferenceable(152), i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %1, i64 %2) #23
  %4 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %5 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i64 0, i64 0), i64 30) #24
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define internal void @_ZN12_GLOBAL__N_111HelpPrinterD2Ev(%"class.(anonymous namespace)::HelpPrinter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl6OptionD2Ev(%"class.llvm::cl::Option"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8** %4 to i8*
  tail call void @free(i8* %9) #24
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA14_cNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEDpRKT_(%"class.llvm::cl::opt.31"*, [14 x i8]* dereferenceable(14), %"struct.llvm::cl::desc"* dereferenceable(16), i32* dereferenceable(4), %"struct.llvm::cl::initializer"* dereferenceable(8), %"struct.llvm::cl::cat"* dereferenceable(8), %"struct.llvm::cl::sub"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %8 = bitcast %"class.llvm::cl::opt.31"* %0 to %"class.llvm::cl::Option"*
  %9 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 2
  %12 = load i16, i16* %11, align 4
  %13 = and i16 %12, -4096
  store i16 %13, i16* %11, align 4
  %14 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 9
  %16 = bitcast i32* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 56, i1 false) #22
  store %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, %"class.llvm::cl::OptionCategory"** %15, align 8
  %17 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 1, i64 0
  %18 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  store i8** %17, i8*** %18, align 8
  %19 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  store i8** %17, i8*** %19, align 8
  %20 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 2
  store i32 4, i32* %20, align 8
  %21 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 3
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 11
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 2, i32 0
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 17
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  store i8 1, i8* %25, align 1
  %28 = getelementptr inbounds i8, i8* %24, i64 16
  store i8 0, i8* %28, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %29 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl6parserIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  tail call void @_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEEA14_cJNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.31"* %0, [14 x i8]* dereferenceable(14) %1, %"struct.llvm::cl::desc"* dereferenceable(16) %2, i32* dereferenceable(4) %3, %"struct.llvm::cl::initializer"* dereferenceable(8) %4, %"struct.llvm::cl::cat"* dereferenceable(8) %5, %"struct.llvm::cl::sub"* dereferenceable(8) %6) #23
  tail call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* %8) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA18_cNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEDpRKT_(%"class.llvm::cl::opt.31"*, [18 x i8]* dereferenceable(18), %"struct.llvm::cl::desc"* dereferenceable(16), i32* dereferenceable(4), %"struct.llvm::cl::initializer"* dereferenceable(8), %"struct.llvm::cl::cat"* dereferenceable(8), %"struct.llvm::cl::sub"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %8 = bitcast %"class.llvm::cl::opt.31"* %0 to %"class.llvm::cl::Option"*
  %9 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 2
  %12 = load i16, i16* %11, align 4
  %13 = and i16 %12, -4096
  store i16 %13, i16* %11, align 4
  %14 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 9
  %16 = bitcast i32* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 56, i1 false) #22
  store %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, %"class.llvm::cl::OptionCategory"** %15, align 8
  %17 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 1, i64 0
  %18 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  store i8** %17, i8*** %18, align 8
  %19 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  store i8** %17, i8*** %19, align 8
  %20 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 2
  store i32 4, i32* %20, align 8
  %21 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 3
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 11
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 2, i32 0
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 17
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  store i8 1, i8* %25, align 1
  %28 = getelementptr inbounds i8, i8* %24, i64 16
  store i8 0, i8* %28, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %29 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl6parserIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  tail call void @_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEEA18_cJNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.31"* %0, [18 x i8]* dereferenceable(18) %1, %"struct.llvm::cl::desc"* dereferenceable(16) %2, i32* dereferenceable(4) %3, %"struct.llvm::cl::initializer"* dereferenceable(8) %4, %"struct.llvm::cl::cat"* dereferenceable(8) %5, %"struct.llvm::cl::sub"* dereferenceable(8) %6) #23
  tail call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* %8) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl17PrintOptionValuesEv() local_unnamed_addr #0 {
  %1 = alloca %"class.llvm::SmallVector.155", align 8
  %2 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %5

5:                                                ; preds = %0, %4
  %6 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %7 = load i8, i8* getelementptr inbounds (%"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* @_ZL12PrintOptions, i64 0, i32 2, i32 0), align 8, !range !10
  %8 = load i8, i8* getelementptr inbounds (%"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* @_ZL15PrintAllOptions, i64 0, i32 2, i32 0), align 8
  %9 = or i8 %8, %7
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %97, label %11

11:                                               ; preds = %5
  %12 = inttoptr i64 %6 to %"class.(anonymous namespace)::CommandLineParser"*
  %13 = bitcast %"class.llvm::SmallVector.155"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2072, i8* nonnull %13) #22
  %14 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 2048, i1 false) #22
  %15 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 2048
  store i8* %18, i8** %17, align 8
  %19 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %12, i64 0, i32 5
  %20 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %19, align 8
  %21 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %20, i64 0, i32 4
  %22 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %1, i64 0, i32 0
  call fastcc void @_ZL8sortOptsRN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEEERNS_15SmallVectorImplINSt3__14pairIPKcS3_EEEEb(%"class.llvm::StringMap"* dereferenceable(32) %21, %"class.llvm::SmallVectorImpl.156"* nonnull dereferenceable(40) %22, i1 zeroext true) #24
  %23 = bitcast i8** %16 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.llvm::SmallVector.155"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %11
  %31 = inttoptr i64 %26 to i8*
  br label %79

32:                                               ; preds = %11
  %33 = inttoptr i64 %26 to %"struct.std::__1::pair.161"*
  %34 = bitcast %"class.llvm::SmallVector.155"* %1 to %"struct.std::__1::pair.161"**
  %35 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %33, i64 0, i32 1
  %36 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %35, align 8
  %37 = bitcast %"class.llvm::cl::Option"* %36 to i64 (%"class.llvm::cl::Option"*)***
  %38 = load i64 (%"class.llvm::cl::Option"*)**, i64 (%"class.llvm::cl::Option"*)*** %37, align 8
  %39 = getelementptr inbounds i64 (%"class.llvm::cl::Option"*)*, i64 (%"class.llvm::cl::Option"*)** %38, i64 5
  %40 = load i64 (%"class.llvm::cl::Option"*)*, i64 (%"class.llvm::cl::Option"*)** %39, align 8
  %41 = call i64 %40(%"class.llvm::cl::Option"* %36) #24
  %42 = icmp eq i64 %27, 16
  br i1 %42, label %43, label %62

43:                                               ; preds = %62, %32
  %44 = phi i64 [ %41, %32 ], [ %74, %62 ]
  %45 = load i64, i64* %23, align 8
  %46 = load i64, i64* %25, align 8
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 4
  %49 = inttoptr i64 %46 to i8*
  %50 = icmp eq i64 %47, 0
  br i1 %50, label %79, label %51

51:                                               ; preds = %43
  %52 = inttoptr i64 %46 to %"struct.std::__1::pair.161"*
  %53 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %52, i64 0, i32 1
  %54 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %53, align 8
  %55 = load i8, i8* getelementptr inbounds (%"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* @_ZL15PrintAllOptions, i64 0, i32 2, i32 0), align 8, !range !10
  %56 = icmp ne i8 %55, 0
  %57 = bitcast %"class.llvm::cl::Option"* %54 to void (%"class.llvm::cl::Option"*, i64, i1)***
  %58 = load void (%"class.llvm::cl::Option"*, i64, i1)**, void (%"class.llvm::cl::Option"*, i64, i1)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.llvm::cl::Option"*, i64, i1)*, void (%"class.llvm::cl::Option"*, i64, i1)** %58, i64 7
  %60 = load void (%"class.llvm::cl::Option"*, i64, i1)*, void (%"class.llvm::cl::Option"*, i64, i1)** %59, align 8
  call void %60(%"class.llvm::cl::Option"* %54, i64 %44, i1 zeroext %56) #24
  %61 = icmp eq i64 %47, 16
  br i1 %61, label %77, label %84

62:                                               ; preds = %32, %62
  %63 = phi i64 [ %75, %62 ], [ 1, %32 ]
  %64 = phi i64 [ %74, %62 ], [ %41, %32 ]
  %65 = load %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"** %34, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %65, i64 %63, i32 1
  %67 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %66, align 8
  %68 = bitcast %"class.llvm::cl::Option"* %67 to i64 (%"class.llvm::cl::Option"*)***
  %69 = load i64 (%"class.llvm::cl::Option"*)**, i64 (%"class.llvm::cl::Option"*)*** %68, align 8
  %70 = getelementptr inbounds i64 (%"class.llvm::cl::Option"*)*, i64 (%"class.llvm::cl::Option"*)** %69, i64 5
  %71 = load i64 (%"class.llvm::cl::Option"*)*, i64 (%"class.llvm::cl::Option"*)** %70, align 8
  %72 = call i64 %71(%"class.llvm::cl::Option"* %67) #24
  %73 = icmp ult i64 %64, %72
  %74 = select i1 %73, i64 %72, i64 %64
  %75 = add i64 %63, 1
  %76 = icmp eq i64 %75, %28
  br i1 %76, label %43, label %62

77:                                               ; preds = %84, %51
  %78 = load i8*, i8** %15, align 8
  br label %79

79:                                               ; preds = %77, %43, %30
  %80 = phi i8* [ %78, %77 ], [ %49, %43 ], [ %31, %30 ]
  %81 = icmp eq i8* %80, %14
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  call void @free(i8* %80) #24
  br label %83

83:                                               ; preds = %82, %79
  call void @llvm.lifetime.end.p0i8(i64 2072, i8* nonnull %13) #22
  br label %97

84:                                               ; preds = %51, %84
  %85 = phi i64 [ %95, %84 ], [ 1, %51 ]
  %86 = load %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"** %34, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %86, i64 %85, i32 1
  %88 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %87, align 8
  %89 = load i8, i8* getelementptr inbounds (%"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* @_ZL15PrintAllOptions, i64 0, i32 2, i32 0), align 8, !range !10
  %90 = icmp ne i8 %89, 0
  %91 = bitcast %"class.llvm::cl::Option"* %88 to void (%"class.llvm::cl::Option"*, i64, i1)***
  %92 = load void (%"class.llvm::cl::Option"*, i64, i1)**, void (%"class.llvm::cl::Option"*, i64, i1)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.llvm::cl::Option"*, i64, i1)*, void (%"class.llvm::cl::Option"*, i64, i1)** %92, i64 7
  %94 = load void (%"class.llvm::cl::Option"*, i64, i1)*, void (%"class.llvm::cl::Option"*, i64, i1)** %93, align 8
  call void %94(%"class.llvm::cl::Option"* %88, i64 %44, i1 zeroext %90) #24
  %95 = add i64 %85, 1
  %96 = icmp eq i64 %95, %48
  br i1 %96, label %77, label %84

97:                                               ; preds = %5, %83
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl16PrintHelpMessageEbb(i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %3 = or i1 %0, %1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call fastcc void @_ZN12_GLOBAL__N_111HelpPrinteraSEb(%"class.(anonymous namespace)::HelpPrinter"* nonnull @_ZL26UncategorizedNormalPrinter, i1 zeroext true) #23
  br label %14

5:                                                ; preds = %2
  %6 = xor i1 %1, true
  %7 = or i1 %6, %0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call fastcc void @_ZN12_GLOBAL__N_111HelpPrinteraSEb(%"class.(anonymous namespace)::HelpPrinter"* bitcast (%"class.(anonymous namespace)::CategorizedHelpPrinter"* @_ZL24CategorizedNormalPrinter to %"class.(anonymous namespace)::HelpPrinter"*), i1 zeroext true) #23
  br label %14

9:                                                ; preds = %5
  %10 = xor i1 %0, true
  %11 = or i1 %10, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  tail call fastcc void @_ZN12_GLOBAL__N_111HelpPrinteraSEb(%"class.(anonymous namespace)::HelpPrinter"* nonnull @_ZL26UncategorizedHiddenPrinter, i1 zeroext true) #23
  br label %14

13:                                               ; preds = %9
  tail call fastcc void @_ZN12_GLOBAL__N_111HelpPrinteraSEb(%"class.(anonymous namespace)::HelpPrinter"* bitcast (%"class.(anonymous namespace)::CategorizedHelpPrinter"* @_ZL24CategorizedHiddenPrinter to %"class.(anonymous namespace)::HelpPrinter"*), i1 zeroext true) #23
  br label %14

14:                                               ; preds = %8, %13, %12, %4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111HelpPrinteraSEb(%"class.(anonymous namespace)::HelpPrinter"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::pair.214", align 8
  %4 = alloca %"class.llvm::SmallVector.155", align 8
  %5 = alloca %"class.llvm::SmallVector.208", align 8
  br i1 %1, label %7, label %6

6:                                                ; preds = %2
  ret void

7:                                                ; preds = %2
  %8 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %11

11:                                               ; preds = %7, %10
  %12 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.(anonymous namespace)::CommandLineParser"*
  %14 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %13, i64 0, i32 5
  %15 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %14, align 8
  %16 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 4
  %17 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 5
  %18 = bitcast %"class.llvm::SmallVector.155"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2072, i8* nonnull %18) #22
  %19 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 2048, i1 false)
  %20 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %21 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 2048
  store i8* %24, i8** %23, align 8
  %25 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"class.(anonymous namespace)::HelpPrinter", %"class.(anonymous namespace)::HelpPrinter"* %0, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !10
  %28 = icmp ne i8 %27, 0
  call fastcc void @_ZL8sortOptsRN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEEERNS_15SmallVectorImplINSt3__14pairIPKcS3_EEEEb(%"class.llvm::StringMap"* dereferenceable(32) %16, %"class.llvm::SmallVectorImpl.156"* nonnull dereferenceable(40) %25, i1 zeroext %28) #23
  %29 = bitcast %"class.llvm::SmallVector.208"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2072, i8* nonnull %29) #22
  %30 = getelementptr inbounds %"class.llvm::SmallVector.208", %"class.llvm::SmallVector.208"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 2048, i1 false)
  %31 = getelementptr inbounds %"class.llvm::SmallVector.208", %"class.llvm::SmallVector.208"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %"class.llvm::SmallVector.208", %"class.llvm::SmallVector.208"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"class.llvm::SmallVector.208", %"class.llvm::SmallVector.208"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds %"class.llvm::SmallVector.208", %"class.llvm::SmallVector.208"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"class.llvm::SmallVector.208", %"class.llvm::SmallVector.208"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 2048
  store i8* %35, i8** %34, align 8
  %36 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %11
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %39

39:                                               ; preds = %11, %38
  %40 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %41 = inttoptr i64 %40 to %"class.(anonymous namespace)::CommandLineParser"*
  %42 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %43 = load i8**, i8*** %42, align 8
  %44 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load i8**, i8*** %44, align 8
  %46 = icmp eq i8** %43, %45
  %47 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %41, i64 0, i32 4, i32 0, i32 0, i32 3
  %48 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %41, i64 0, i32 4, i32 0, i32 0, i32 2
  %49 = select i1 %46, i32* %47, i32* %48
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8*, i8** %43, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %39, %59
  %55 = phi i8** [ %60, %59 ], [ %43, %39 ]
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp ugt i64 %57, -3
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds i8*, i8** %55, i64 1
  %61 = icmp eq i8** %60, %52
  br i1 %61, label %70, label %54

62:                                               ; preds = %54, %39
  %63 = phi i8** [ %43, %39 ], [ %55, %54 ]
  %64 = icmp eq i8** %63, %52
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.llvm::SmallVector.208", %"class.llvm::SmallVector.208"* %5, i64 0, i32 0, i32 0
  %67 = bitcast %"struct.std::__1::pair.214"* %3 to i8*
  %68 = bitcast %"struct.std::__1::pair.214"* %3 to i64*
  %69 = getelementptr inbounds %"struct.std::__1::pair.214", %"struct.std::__1::pair.214"* %3, i64 0, i32 1
  br label %81

70:                                               ; preds = %59, %102, %91, %99, %62
  %71 = bitcast %"class.llvm::SmallVector.208"* %5 to %"struct.std::__1::pair.214"**
  %72 = load %"struct.std::__1::pair.214"*, %"struct.std::__1::pair.214"** %71, align 8
  %73 = bitcast i8** %33 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = ptrtoint %"struct.std::__1::pair.214"* %72 to i64
  %76 = sub i64 %74, %75
  %77 = icmp slt i64 %76, 32
  br i1 %77, label %104, label %78

78:                                               ; preds = %70
  %79 = lshr exact i64 %76, 4
  %80 = bitcast %"struct.std::__1::pair.214"* %72 to i8*
  call void @qsort(i8* %80, i64 %79, i64 16, i32 (i8*, i8*)* bitcast (i32 (%"struct.std::__1::pair.214"*, %"struct.std::__1::pair.214"*)* @_ZL14SubNameComparePKNSt3__14pairIPKcPN4llvm2cl10SubCommandEEES9_ to i32 (i8*, i8*)*)) #24
  br label %104

81:                                               ; preds = %102, %65
  %82 = phi i8** [ %63, %65 ], [ %95, %102 ]
  %83 = bitcast i8** %82 to %"class.llvm::cl::SubCommand"**
  %84 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %83, align 8
  %85 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %84, i64 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #22
  %89 = bitcast %"class.llvm::cl::SubCommand"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %68, align 8
  store %"class.llvm::cl::SubCommand"* %84, %"class.llvm::cl::SubCommand"** %69, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPKcPNS_2cl10SubCommandEEELb1EE9push_backERKS8_(%"class.llvm::SmallVectorTemplateBase.210"* nonnull %66, %"struct.std::__1::pair.214"* nonnull dereferenceable(16) %3) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #22
  br label %91

91:                                               ; preds = %88, %81
  %92 = getelementptr inbounds i8*, i8** %82, i64 1
  %93 = icmp eq i8** %92, %52
  br i1 %93, label %70, label %94

94:                                               ; preds = %91, %99
  %95 = phi i8** [ %100, %99 ], [ %92, %91 ]
  %96 = bitcast i8** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = icmp ugt i64 %97, -3
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = getelementptr inbounds i8*, i8** %95, i64 1
  %101 = icmp eq i8** %100, %52
  br i1 %101, label %70, label %94

102:                                              ; preds = %94
  %103 = icmp eq i8** %95, %52
  br i1 %103, label %70, label %81

104:                                              ; preds = %70, %78
  %105 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %108

108:                                              ; preds = %104, %107
  %109 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %110 = inttoptr i64 %109 to %"class.(anonymous namespace)::CommandLineParser"*
  %111 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %110, i64 0, i32 1, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %129, label %114

114:                                              ; preds = %108
  %115 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %116 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %115, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i64 0, i64 0), i64 10) #24
  %117 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %114
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %120

120:                                              ; preds = %114, %119
  %121 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %122 = inttoptr i64 %121 to %"class.(anonymous namespace)::CommandLineParser"*
  %123 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %122, i64 0, i32 1, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %122, i64 0, i32 1, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %116, i8* %124, i64 %126) #23
  %128 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #24
  br label %129

129:                                              ; preds = %120, %108
  %130 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %133

133:                                              ; preds = %129, %132
  %134 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %135 = inttoptr i64 %134 to %"class.llvm::cl::SubCommand"*
  %136 = icmp eq %"class.llvm::cl::SubCommand"* %15, %135
  br i1 %136, label %137, label %170

137:                                              ; preds = %133
  %138 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %139 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %138, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i64 7) #24
  %140 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %137
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %143

143:                                              ; preds = %137, %142
  %144 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %145 = inttoptr i64 %144 to %"class.(anonymous namespace)::CommandLineParser"*
  %146 = inttoptr i64 %144 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  %150 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = inttoptr i64 %144 to i8*
  %155 = zext i8 %148 to i64
  %156 = select i1 %149, i8* %151, i8* %154
  %157 = select i1 %149, i64 %153, i64 %155
  %158 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %139, i8* %156, i64 %157) #24
  %159 = load i64, i64* %73, align 8
  %160 = bitcast %"class.llvm::SmallVector.208"* %5 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %159, %161
  %163 = ashr exact i64 %162, 4
  %164 = icmp ugt i64 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %143
  %166 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %167 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %166, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0), i64 13) #24
  br label %168

168:                                              ; preds = %165, %143
  %169 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br label %216

170:                                              ; preds = %133
  %171 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 1, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %188, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 1, i32 0
  %176 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %177 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %176, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i64 0, i64 0), i64 12) #24
  %178 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %177, i8* %179, i64 %181) #23
  %183 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %182, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i64 0, i64 0), i64 3) #24
  %184 = load i8*, i8** %175, align 8
  %185 = load i64, i64* %171, align 8
  %186 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %183, i8* %184, i64 %185) #23
  %187 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %186, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i64 2) #24
  br label %188

188:                                              ; preds = %170, %174
  %189 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %190 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %189, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i64 7) #24
  %191 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %188
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %194

194:                                              ; preds = %188, %193
  %195 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %196 = inttoptr i64 %195 to %"class.(anonymous namespace)::CommandLineParser"*
  %197 = inttoptr i64 %195 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  %201 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = inttoptr i64 %195 to i8*
  %206 = zext i8 %199 to i64
  %207 = select i1 %200, i8* %202, i8* %205
  %208 = select i1 %200, i64 %204, i64 %206
  %209 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %190, i8* %207, i64 %208) #24
  %210 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %209, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.100, i64 0, i64 0), i64 1) #24
  %211 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %210, i8* %212, i64 %214) #23
  br label %216

216:                                              ; preds = %194, %168
  %217 = phi %"class.llvm::raw_ostream"* [ %215, %194 ], [ %169, %168 ]
  %218 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %217, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.97, i64 0, i64 0), i64 10) #24
  %219 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %220 = bitcast %"class.llvm::SmallVectorTemplateCommon.56"* %219 to %"class.llvm::cl::Option"***
  %221 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %220, align 8
  %222 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %223 = bitcast i8** %222 to %"class.llvm::cl::Option"***
  %224 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %223, align 8
  %225 = icmp eq %"class.llvm::cl::Option"** %221, %224
  br i1 %225, label %226, label %229

226:                                              ; preds = %242, %216
  %227 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %17, align 8
  %228 = icmp eq %"class.llvm::cl::Option"* %227, null
  br i1 %228, label %261, label %252

229:                                              ; preds = %216, %242
  %230 = phi %"class.llvm::cl::Option"** [ %250, %242 ], [ %221, %216 ]
  %231 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %230, align 8
  %232 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %231, i64 0, i32 6, i32 1
  %233 = load i64, i64* %232, align 8
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %242, label %235

235:                                              ; preds = %229
  %236 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %237 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %236, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i64 3) #24
  %238 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %231, i64 0, i32 6, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = load i64, i64* %232, align 8
  %241 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %237, i8* %239, i64 %240) #23
  br label %242

242:                                              ; preds = %229, %235
  %243 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %244 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.100, i64 0, i64 0), i64 1) #24
  %245 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %231, i64 0, i32 7, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %231, i64 0, i32 7, i32 1
  %248 = load i64, i64* %247, align 8
  %249 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %244, i8* %246, i64 %248) #23
  %250 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %230, i64 1
  %251 = icmp eq %"class.llvm::cl::Option"** %250, %224
  br i1 %251, label %226, label %229

252:                                              ; preds = %226
  %253 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %254 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %253, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.100, i64 0, i64 0), i64 1) #24
  %255 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %17, align 8
  %256 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %255, i64 0, i32 7, i32 0
  %257 = load i8*, i8** %256, align 8
  %258 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %255, i64 0, i32 7, i32 1
  %259 = load i64, i64* %258, align 8
  %260 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %254, i8* %257, i64 %259) #23
  br label %261

261:                                              ; preds = %226, %252
  %262 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %265

265:                                              ; preds = %261, %264
  %266 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %267 = inttoptr i64 %266 to %"class.llvm::cl::SubCommand"*
  %268 = icmp eq %"class.llvm::cl::SubCommand"* %15, %267
  br i1 %268, label %269, label %398

269:                                              ; preds = %265
  %270 = load i8*, i8** %32, align 8
  %271 = load i8*, i8** %33, align 8
  %272 = icmp eq i8* %270, %271
  %273 = bitcast i8* %270 to %"struct.std::__1::pair.214"*
  br i1 %272, label %398, label %274

274:                                              ; preds = %269
  %275 = ptrtoint i8* %270 to i64
  %276 = ptrtoint i8* %271 to i64
  %277 = sub i64 %276, %275
  %278 = ashr exact i64 %277, 4
  %279 = icmp eq i64 %277, 0
  br i1 %279, label %280, label %388

280:                                              ; preds = %388, %274
  %281 = phi i64 [ 0, %274 ], [ %395, %388 ]
  %282 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %283 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %282, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i64 2) #24
  %284 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %285 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %284, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.102, i64 0, i64 0), i64 14) #24
  %286 = load %"struct.std::__1::pair.214"*, %"struct.std::__1::pair.214"** %71, align 8
  %287 = bitcast i8** %33 to %"struct.std::__1::pair.214"**
  %288 = load %"struct.std::__1::pair.214"*, %"struct.std::__1::pair.214"** %287, align 8
  %289 = icmp eq %"struct.std::__1::pair.214"* %286, %288
  br i1 %289, label %363, label %290

290:                                              ; preds = %280, %360
  %291 = phi %"struct.std::__1::pair.214"* [ %361, %360 ], [ %286, %280 ]
  %292 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %293 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %292, i64 0, i32 2
  %294 = bitcast i8** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %292, i64 0, i32 3
  %297 = load i8*, i8** %296, align 8
  %298 = ptrtoint i8* %297 to i64
  %299 = sub i64 %295, %298
  %300 = icmp ult i64 %299, 2
  br i1 %300, label %301, label %303

301:                                              ; preds = %290
  %302 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %292, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i64 2) #24
  br label %307

303:                                              ; preds = %290
  %304 = bitcast i8* %297 to i16*
  store i16 8224, i16* %304, align 1
  %305 = load i8*, i8** %296, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 2
  store i8* %306, i8** %296, align 8
  br label %307

307:                                              ; preds = %301, %303
  %308 = phi %"class.llvm::raw_ostream"* [ %302, %301 ], [ %292, %303 ]
  %309 = getelementptr inbounds %"struct.std::__1::pair.214", %"struct.std::__1::pair.214"* %291, i64 0, i32 0
  %310 = load i8*, i8** %309, align 8
  %311 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %308, i8* %310) #24
  %312 = getelementptr inbounds %"struct.std::__1::pair.214", %"struct.std::__1::pair.214"* %291, i64 0, i32 1
  %313 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %312, align 8
  %314 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %313, i64 0, i32 1, i32 1
  %315 = load i64, i64* %314, align 8
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %346, label %317

317:                                              ; preds = %307
  %318 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %319 = load i8*, i8** %309, align 8
  %320 = call i64 @strlen(i8* %319) #27
  %321 = sub i64 %281, %320
  %322 = trunc i64 %321 to i32
  %323 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream6indentEj(%"class.llvm::raw_ostream"* %318, i32 %322) #24
  %324 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %325 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %324, i64 0, i32 2
  %326 = bitcast i8** %325 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %324, i64 0, i32 3
  %329 = load i8*, i8** %328, align 8
  %330 = ptrtoint i8* %329 to i64
  %331 = sub i64 %327, %330
  %332 = icmp ult i64 %331, 3
  br i1 %332, label %333, label %335

333:                                              ; preds = %317
  %334 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i64 0, i64 0), i64 3) #24
  br label %338

335:                                              ; preds = %317
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %329, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i64 0, i64 0), i64 3, i1 false) #22
  %336 = load i8*, i8** %328, align 8
  %337 = getelementptr inbounds i8, i8* %336, i64 3
  store i8* %337, i8** %328, align 8
  br label %338

338:                                              ; preds = %333, %335
  %339 = phi %"class.llvm::raw_ostream"* [ %334, %333 ], [ %324, %335 ]
  %340 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %312, align 8
  %341 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %340, i64 0, i32 1, i32 0
  %342 = load i8*, i8** %341, align 8
  %343 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %340, i64 0, i32 1, i32 1
  %344 = load i64, i64* %343, align 8
  %345 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %339, i8* %342, i64 %344) #24
  br label %346

346:                                              ; preds = %338, %307
  %347 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %348 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %347, i64 0, i32 2
  %349 = bitcast i8** %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %347, i64 0, i32 3
  %352 = load i8*, i8** %351, align 8
  %353 = ptrtoint i8* %352 to i64
  %354 = icmp eq i64 %350, %353
  br i1 %354, label %355, label %357

355:                                              ; preds = %346
  %356 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %347, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #24
  br label %360

357:                                              ; preds = %346
  store i8 10, i8* %352, align 1
  %358 = load i8*, i8** %351, align 8
  %359 = getelementptr inbounds i8, i8* %358, i64 1
  store i8* %359, i8** %351, align 8
  br label %360

360:                                              ; preds = %355, %357
  %361 = getelementptr inbounds %"struct.std::__1::pair.214", %"struct.std::__1::pair.214"* %291, i64 1
  %362 = icmp eq %"struct.std::__1::pair.214"* %361, %288
  br i1 %362, label %363, label %290

363:                                              ; preds = %360, %280
  %364 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %365 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %364, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #24
  %366 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %367 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %366, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.103, i64 0, i64 0), i64 8) #24
  %368 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %370, label %371

370:                                              ; preds = %363
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %371

371:                                              ; preds = %363, %370
  %372 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %373 = inttoptr i64 %372 to %"class.(anonymous namespace)::CommandLineParser"*
  %374 = inttoptr i64 %372 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %375 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %374, i64 0, i32 1, i32 0
  %376 = load i8, i8* %375, align 1
  %377 = icmp slt i8 %376, 0
  %378 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %373, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %373, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %381 = load i64, i64* %380, align 8
  %382 = inttoptr i64 %372 to i8*
  %383 = zext i8 %376 to i64
  %384 = select i1 %377, i8* %379, i8* %382
  %385 = select i1 %377, i64 %381, i64 %383
  %386 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %367, i8* %384, i64 %385) #24
  %387 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %386, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.104, i64 0, i64 0), i64 62) #24
  br label %398

388:                                              ; preds = %274, %388
  %389 = phi i64 [ %396, %388 ], [ 0, %274 ]
  %390 = phi i64 [ %395, %388 ], [ 0, %274 ]
  %391 = getelementptr inbounds %"struct.std::__1::pair.214", %"struct.std::__1::pair.214"* %273, i64 %389, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = call i64 @strlen(i8* %392) #27
  %394 = icmp ult i64 %390, %393
  %395 = select i1 %394, i64 %393, i64 %390
  %396 = add i64 %389, 1
  %397 = icmp eq i64 %396, %278
  br i1 %397, label %280, label %388

398:                                              ; preds = %371, %269, %265
  %399 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %400 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %399, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i64 2) #24
  %401 = bitcast i8** %22 to i64*
  %402 = load i64, i64* %401, align 8
  %403 = bitcast %"class.llvm::SmallVector.155"* %4 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = sub i64 %402, %404
  %406 = ashr exact i64 %405, 4
  %407 = icmp eq i64 %405, 0
  br i1 %407, label %419, label %408

408:                                              ; preds = %398
  %409 = inttoptr i64 %404 to %"struct.std::__1::pair.161"*
  %410 = bitcast %"class.llvm::SmallVector.155"* %4 to %"struct.std::__1::pair.161"**
  %411 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %409, i64 0, i32 1
  %412 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %411, align 8
  %413 = bitcast %"class.llvm::cl::Option"* %412 to i64 (%"class.llvm::cl::Option"*)***
  %414 = load i64 (%"class.llvm::cl::Option"*)**, i64 (%"class.llvm::cl::Option"*)*** %413, align 8
  %415 = getelementptr inbounds i64 (%"class.llvm::cl::Option"*)*, i64 (%"class.llvm::cl::Option"*)** %414, i64 5
  %416 = load i64 (%"class.llvm::cl::Option"*)*, i64 (%"class.llvm::cl::Option"*)** %415, align 8
  %417 = call i64 %416(%"class.llvm::cl::Option"* %412) #24
  %418 = icmp eq i64 %405, 16
  br i1 %418, label %419, label %437

419:                                              ; preds = %437, %408, %398
  %420 = phi i64 [ 0, %398 ], [ %417, %408 ], [ %449, %437 ]
  %421 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %422 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %421, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i64 9) #24
  %423 = bitcast %"class.(anonymous namespace)::HelpPrinter"* %0 to void (%"class.(anonymous namespace)::HelpPrinter"*, %"class.llvm::SmallVector.155"*, i64)***
  %424 = load void (%"class.(anonymous namespace)::HelpPrinter"*, %"class.llvm::SmallVector.155"*, i64)**, void (%"class.(anonymous namespace)::HelpPrinter"*, %"class.llvm::SmallVector.155"*, i64)*** %423, align 8
  %425 = load void (%"class.(anonymous namespace)::HelpPrinter"*, %"class.llvm::SmallVector.155"*, i64)*, void (%"class.(anonymous namespace)::HelpPrinter"*, %"class.llvm::SmallVector.155"*, i64)** %424, align 8
  call void %425(%"class.(anonymous namespace)::HelpPrinter"* %0, %"class.llvm::SmallVector.155"* nonnull dereferenceable(2072) %4, i64 %420) #24
  %426 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %429

428:                                              ; preds = %419
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %429

429:                                              ; preds = %419, %428
  %430 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %431 = inttoptr i64 %430 to %"class.(anonymous namespace)::CommandLineParser"*
  %432 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %431, i64 0, i32 2, i32 0, i32 0
  %433 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %432, align 8
  %434 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %431, i64 0, i32 2, i32 0, i32 1
  %435 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %434, align 8
  %436 = icmp eq %"class.llvm::StringRef"* %433, %435
  br i1 %436, label %452, label %459

437:                                              ; preds = %408, %437
  %438 = phi i64 [ %450, %437 ], [ 1, %408 ]
  %439 = phi i64 [ %449, %437 ], [ %417, %408 ]
  %440 = load %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"** %410, align 8
  %441 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %440, i64 %438, i32 1
  %442 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %441, align 8
  %443 = bitcast %"class.llvm::cl::Option"* %442 to i64 (%"class.llvm::cl::Option"*)***
  %444 = load i64 (%"class.llvm::cl::Option"*)**, i64 (%"class.llvm::cl::Option"*)*** %443, align 8
  %445 = getelementptr inbounds i64 (%"class.llvm::cl::Option"*)*, i64 (%"class.llvm::cl::Option"*)** %444, i64 5
  %446 = load i64 (%"class.llvm::cl::Option"*)*, i64 (%"class.llvm::cl::Option"*)** %445, align 8
  %447 = call i64 %446(%"class.llvm::cl::Option"* %442) #24
  %448 = icmp ult i64 %439, %447
  %449 = select i1 %448, i64 %447, i64 %439
  %450 = add i64 %438, 1
  %451 = icmp eq i64 %450, %406
  br i1 %451, label %419, label %437

452:                                              ; preds = %459, %429
  %453 = call fastcc %"class.(anonymous namespace)::CommandLineParser"* @_ZN4llvm13ManagedStaticIN12_GLOBAL__N_117CommandLineParserEEptEv() #23
  %454 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %453, i64 0, i32 2
  %455 = bitcast %"class.std::__1::vector"* %454 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %453, i64 0, i32 2, i32 0, i32 1
  %458 = bitcast %"class.llvm::StringRef"** %457 to i64*
  store i64 %456, i64* %458, align 8
  call void @exit(i32 0) #26
  unreachable

459:                                              ; preds = %429, %459
  %460 = phi %"class.llvm::StringRef"* [ %467, %459 ], [ %433, %429 ]
  %461 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %460, i64 0, i32 0
  %462 = load i8*, i8** %461, align 8
  %463 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %460, i64 0, i32 1
  %464 = load i64, i64* %463, align 8
  %465 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %466 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %465, i8* %462, i64 %464) #23
  %467 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %460, i64 1
  %468 = icmp eq %"class.llvm::StringRef"* %467, %435
  br i1 %468, label %452, label %459
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN4llvm2cl17SetVersionPrinterEPFvvE(void ()*) local_unnamed_addr #7 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl22AddExtraVersionPrinterEPFvvE(void ()*) local_unnamed_addr #0 {
  %2 = ptrtoint void ()* %0 to i64
  %3 = load %"class.std::__1::vector.115"*, %"class.std::__1::vector.115"** @_ZL20ExtraVersionPrinters, align 8
  %4 = icmp eq %"class.std::__1::vector.115"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 24) #25
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #22
  store i8* %6, i8** bitcast (%"class.std::__1::vector.115"** @_ZL20ExtraVersionPrinters to i8**), align 8
  %7 = bitcast i8* %6 to %"class.std::__1::vector.115"*
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.std::__1::vector.115"* [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %9, i64 0, i32 0, i32 1
  %11 = load void ()**, void ()*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = load void ()**, void ()*** %12, align 8
  %14 = icmp eq void ()** %11, %13
  %15 = ptrtoint void ()** %13 to i64
  br i1 %14, label %21, label %16

16:                                               ; preds = %8
  %17 = bitcast void ()** %11 to i64*
  store i64 %2, i64* %17, align 8
  %18 = getelementptr inbounds void ()*, void ()** %11, i64 1
  %19 = ptrtoint void ()** %18 to i64
  %20 = bitcast void ()*** %10 to i64*
  store i64 %19, i64* %20, align 8
  br label %78

21:                                               ; preds = %8
  %22 = ptrtoint void ()** %11 to i64
  %23 = bitcast void ()*** %10 to i64*
  %24 = bitcast %"class.std::__1::vector.115"* %9 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = ashr exact i64 %26, 3
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 2305843009213693951
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector.115"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #26
  unreachable

32:                                               ; preds = %21
  %33 = bitcast void ()*** %12 to i64*
  %34 = sub i64 %15, %25
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, 1152921504606846975
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = ashr exact i64 %34, 2
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 2305843009213693951
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #26
  unreachable

45:                                               ; preds = %42, %32
  %46 = phi i64 [ %40, %42 ], [ 2305843009213693951, %32 ]
  %47 = shl i64 %46, 3
  %48 = tail call i8* @_Znwm(i64 %47) #25
  %49 = bitcast i8* %48 to void ()**
  br label %50

50:                                               ; preds = %45, %37
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi void ()** [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds void ()*, void ()** %52, i64 %27
  %54 = getelementptr inbounds void ()*, void ()** %52, i64 %51
  %55 = ptrtoint void ()** %54 to i64
  %56 = bitcast void ()** %53 to i64*
  store i64 %2, i64* %56, align 8
  %57 = getelementptr inbounds void ()*, void ()** %53, i64 1
  %58 = ptrtoint void ()** %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %9, i64 0, i32 0, i32 0
  %60 = load void ()**, void ()*** %59, align 8
  %61 = load i64, i64* %23, align 8
  %62 = ptrtoint void ()** %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds void ()*, void ()** %53, i64 %65
  %67 = ptrtoint void ()** %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %50
  %70 = bitcast void ()** %66 to i8*
  %71 = bitcast void ()** %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #22
  %72 = load void ()**, void ()*** %59, align 8
  br label %73

73:                                               ; preds = %69, %50
  %74 = phi void ()** [ %60, %50 ], [ %72, %69 ]
  store i64 %67, i64* %24, align 8
  store i64 %58, i64* %23, align 8
  store i64 %55, i64* %33, align 8
  %75 = icmp eq void ()** %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast void ()** %74 to i8*
  tail call void @_ZdlPv(i8* %77) #25
  br label %78

78:                                               ; preds = %16, %73, %76
  ret void
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define hidden dereferenceable(32) %"class.llvm::StringMap"* @_ZN4llvm2cl20getRegisteredOptionsERNS0_10SubCommandE(%"class.llvm::cl::SubCommand"* readnone dereferenceable(184)) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %5

5:                                                ; preds = %1, %4
  %6 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %7 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 4
  ret %"class.llvm::StringMap"* %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl24getRegisteredSubcommandsEv(%"class.llvm::iterator_range"* noalias nocapture sret) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %5

5:                                                ; preds = %1, %4
  %6 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %7 = inttoptr i64 %6 to %"class.(anonymous namespace)::CommandLineParser"*
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load i8**, i8*** %8, align 8, !noalias !75
  %10 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load i8**, i8*** %10, align 8, !noalias !75
  %12 = icmp eq i8** %9, %11
  %13 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 4, i32 0, i32 0, i32 3
  %14 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %7, i64 0, i32 4, i32 0, i32 0, i32 2
  %15 = select i1 %12, i32* %13, i32* %14
  %16 = load i32, i32* %15, align 4, !noalias !75
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8*, i8** %9, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %5, %25
  %21 = phi i8** [ %26, %25 ], [ %9, %5 ]
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !75
  %24 = icmp ugt i64 %23, -3
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8*, i8** %21, i64 1
  %27 = icmp eq i8** %26, %18
  br i1 %27, label %28, label %20

28:                                               ; preds = %20, %25, %5
  %29 = phi i8** [ %9, %5 ], [ %21, %20 ], [ %18, %25 ]
  %30 = getelementptr inbounds %"class.llvm::iterator_range", %"class.llvm::iterator_range"* %0, i64 0, i32 0, i32 0, i32 0
  store i8** %29, i8*** %30, align 8, !alias.scope !78
  %31 = getelementptr inbounds %"class.llvm::iterator_range", %"class.llvm::iterator_range"* %0, i64 0, i32 0, i32 0, i32 1
  store i8** %18, i8*** %31, align 8, !alias.scope !78
  %32 = getelementptr inbounds %"class.llvm::iterator_range", %"class.llvm::iterator_range"* %0, i64 0, i32 1, i32 0, i32 0
  store i8** %18, i8*** %32, align 8, !alias.scope !78
  %33 = getelementptr inbounds %"class.llvm::iterator_range", %"class.llvm::iterator_range"* %0, i64 0, i32 1, i32 0, i32 1
  store i8** %18, i8*** %33, align 8, !alias.scope !78
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl20HideUnrelatedOptionsERNS0_14OptionCategoryERNS0_10SubCommandE(%"class.llvm::cl::OptionCategory"* readnone dereferenceable(32), %"class.llvm::cl::SubCommand"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %1, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %1, i64 0, i32 4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"class.llvm::StringMapEntryBase"** [ %13, %12 ], [ %4, %2 ]
  %10 = bitcast %"class.llvm::StringMapEntryBase"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  switch i64 %11, label %14 [
    i64 0, label %12
    i64 -4, label %12
  ]

12:                                               ; preds = %8, %8
  %13 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %9, i64 1
  br label %8

14:                                               ; preds = %8, %2
  %15 = phi %"class.llvm::StringMapEntryBase"** [ %4, %2 ], [ %9, %8 ]
  %16 = zext i32 %6 to i64
  %17 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %4, i64 %16
  %18 = icmp eq %"class.llvm::StringMapEntryBase"** %15, %17
  br i1 %18, label %21, label %22

19:                                               ; preds = %39
  %20 = icmp eq %"class.llvm::StringMapEntryBase"** %41, %17
  br i1 %20, label %21, label %22

21:                                               ; preds = %19, %14
  ret void

22:                                               ; preds = %14, %19
  %23 = phi %"class.llvm::StringMapEntryBase"** [ %41, %19 ], [ %15, %14 ]
  %24 = bitcast %"class.llvm::StringMapEntryBase"** %23 to %"class.llvm::StringMapEntry"**
  %25 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %24, align 8
  %26 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %25, i64 0, i32 1
  %27 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %26, align 8
  %28 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %27, i64 0, i32 9
  %29 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %28, align 8
  %30 = icmp eq %"class.llvm::cl::OptionCategory"* %29, %0
  %31 = icmp eq %"class.llvm::cl::OptionCategory"* %29, @_ZL15GenericCategory
  %32 = or i1 %30, %31
  br i1 %32, label %38, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %27, i64 0, i32 2
  %35 = load i16, i16* %34, align 4
  %36 = and i16 %35, -97
  %37 = or i16 %36, 64
  store i16 %37, i16* %34, align 4
  br label %38

38:                                               ; preds = %22, %33
  br label %39

39:                                               ; preds = %44, %38
  %40 = phi %"class.llvm::StringMapEntryBase"** [ %23, %38 ], [ %41, %44 ]
  %41 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %40, i64 1
  %42 = bitcast %"class.llvm::StringMapEntryBase"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  switch i64 %43, label %19 [
    i64 0, label %44
    i64 -4, label %44
  ]

44:                                               ; preds = %39, %39
  br label %39
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl20HideUnrelatedOptionsENS_8ArrayRefIPKNS0_14OptionCategoryEEERNS0_10SubCommandE(%"class.llvm::cl::OptionCategory"**, i64, %"class.llvm::cl::SubCommand"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %0, i64 %1
  %5 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %2, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %5, align 8
  %7 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %2, i64 0, i32 4, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %3, %14
  %11 = phi %"class.llvm::StringMapEntryBase"** [ %15, %14 ], [ %6, %3 ]
  %12 = bitcast %"class.llvm::StringMapEntryBase"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  switch i64 %13, label %16 [
    i64 0, label %14
    i64 -4, label %14
  ]

14:                                               ; preds = %10, %10
  %15 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %11, i64 1
  br label %10

16:                                               ; preds = %10, %3
  %17 = phi %"class.llvm::StringMapEntryBase"** [ %6, %3 ], [ %11, %10 ]
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %6, i64 %18
  %20 = icmp eq %"class.llvm::StringMapEntryBase"** %17, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = icmp eq i64 %1, 0
  br label %26

23:                                               ; preds = %56
  %24 = icmp eq %"class.llvm::StringMapEntryBase"** %58, %19
  br i1 %24, label %25, label %26

25:                                               ; preds = %23, %16
  ret void

26:                                               ; preds = %21, %23
  %27 = phi %"class.llvm::StringMapEntryBase"** [ %17, %21 ], [ %58, %23 ]
  %28 = bitcast %"class.llvm::StringMapEntryBase"** %27 to %"class.llvm::StringMapEntry"**
  %29 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %28, align 8
  %30 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %29, i64 0, i32 1
  %31 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %30, align 8
  %32 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %31, i64 0, i32 9
  br i1 %22, label %42, label %33

33:                                               ; preds = %26
  %34 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %32, align 8
  br label %35

35:                                               ; preds = %39, %33
  %36 = phi %"class.llvm::cl::OptionCategory"** [ %0, %33 ], [ %40, %39 ]
  %37 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %36, align 8
  %38 = icmp eq %"class.llvm::cl::OptionCategory"* %37, %34
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %36, i64 1
  %41 = icmp eq %"class.llvm::cl::OptionCategory"** %40, %4
  br i1 %41, label %47, label %35

42:                                               ; preds = %35, %26
  %43 = phi %"class.llvm::cl::OptionCategory"** [ %0, %26 ], [ %36, %35 ]
  %44 = icmp eq %"class.llvm::cl::OptionCategory"** %43, %4
  br i1 %44, label %45, label %55

45:                                               ; preds = %42
  %46 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %32, align 8
  br label %47

47:                                               ; preds = %39, %45
  %48 = phi %"class.llvm::cl::OptionCategory"* [ %46, %45 ], [ %34, %39 ]
  %49 = icmp eq %"class.llvm::cl::OptionCategory"* %48, @_ZL15GenericCategory
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %31, i64 0, i32 2
  %52 = load i16, i16* %51, align 4
  %53 = and i16 %52, -97
  %54 = or i16 %53, 64
  store i16 %54, i16* %51, align 4
  br label %55

55:                                               ; preds = %47, %50, %42
  br label %56

56:                                               ; preds = %61, %55
  %57 = phi %"class.llvm::StringMapEntryBase"** [ %27, %55 ], [ %58, %61 ]
  %58 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %57, i64 1
  %59 = bitcast %"class.llvm::StringMapEntryBase"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %23 [
    i64 0, label %61
    i64 -4, label %61
  ]

61:                                               ; preds = %56, %56
  br label %56
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl22ResetCommandLineParserEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %4

4:                                                ; preds = %0, %3
  %5 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %6 = inttoptr i64 %5 to %"class.(anonymous namespace)::CommandLineParser"*
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %6, i64 0, i32 5
  store %"class.llvm::cl::SubCommand"* null, %"class.llvm::cl::SubCommand"** %7, align 8
  %8 = inttoptr i64 %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %15, align 8
  br label %18

16:                                               ; preds = %4
  %17 = inttoptr i64 %5 to i8*
  store i8 0, i8* %17, align 1
  store i8 0, i8* %9, align 1
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %6, i64 0, i32 1
  %20 = bitcast %"class.llvm::StringRef"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #22
  %21 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %6, i64 0, i32 2
  %22 = bitcast %"class.std::__1::vector"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %6, i64 0, i32 2, i32 0, i32 1
  %25 = bitcast %"class.llvm::StringRef"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %6, i64 0, i32 3
  %27 = bitcast %"class.llvm::SmallPtrSet.51"* %26 to %"class.llvm::SmallPtrSetImplBase"*
  tail call void @_ZN4llvm19SmallPtrSetImplBase5clearEv(%"class.llvm::SmallPtrSetImplBase"* %27) #24
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser25ResetAllOptionOccurrencesEv(%"class.(anonymous namespace)::CommandLineParser"* %6) #24
  %28 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %6, i64 0, i32 4
  %29 = bitcast %"class.llvm::SmallPtrSet"* %28 to %"class.llvm::SmallPtrSetImplBase"*
  tail call void @_ZN4llvm19SmallPtrSetImplBase5clearEv(%"class.llvm::SmallPtrSetImplBase"* %29) #24
  %30 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %18
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %33

33:                                               ; preds = %32, %18
  %34 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %35 = inttoptr i64 %34 to %"class.llvm::cl::SubCommand"*
  %36 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %35, i64 0, i32 2, i32 0
  %37 = bitcast %"class.llvm::SmallVectorImpl.54"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %35, i64 0, i32 3, i32 0
  %42 = bitcast %"class.llvm::SmallVectorImpl.54"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %35, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %35, i64 0, i32 4
  tail call void @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE5clearEv(%"class.llvm::StringMap"* %46) #24
  %47 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %35, i64 0, i32 5
  store %"class.llvm::cl::Option"* null, %"class.llvm::cl::Option"** %47, align 8
  %48 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %33
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %51

51:                                               ; preds = %50, %33
  %52 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %53 = inttoptr i64 %52 to %"class.llvm::cl::SubCommand"*
  %54 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %53, i64 0, i32 2, i32 0
  %55 = bitcast %"class.llvm::SmallVectorImpl.54"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast i8** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %53, i64 0, i32 3, i32 0
  %60 = bitcast %"class.llvm::SmallVectorImpl.54"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %53, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast i8** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %53, i64 0, i32 4
  tail call void @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE5clearEv(%"class.llvm::StringMap"* %64) #24
  %65 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %53, i64 0, i32 5
  store %"class.llvm::cl::Option"* null, %"class.llvm::cl::Option"** %65, align 8
  %66 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %51
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %69

69:                                               ; preds = %68, %51
  %70 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %71 = inttoptr i64 %70 to %"class.llvm::cl::SubCommand"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser18registerSubCommandEPN4llvm2cl10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* %6, %"class.llvm::cl::SubCommand"* %71) #24
  %72 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %75

75:                                               ; preds = %69, %74
  %76 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %77 = inttoptr i64 %76 to %"class.llvm::cl::SubCommand"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser18registerSubCommandEPN4llvm2cl10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* %6, %"class.llvm::cl::SubCommand"* %77) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm2cl25ResetAllOptionOccurrencesEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %4

4:                                                ; preds = %0, %3
  %5 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %6 = inttoptr i64 %5 to %"class.(anonymous namespace)::CommandLineParser"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser25ResetAllOptionOccurrencesEv(%"class.(anonymous namespace)::CommandLineParser"* %6) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117CommandLineParser25ResetAllOptionOccurrencesEv(%"class.(anonymous namespace)::CommandLineParser"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %3 = load i8**, i8*** %2, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load i8**, i8*** %4, align 8
  %6 = icmp eq i8** %3, %5
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %9 = select i1 %6, i32* %7, i32* %8
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8*, i8** %3, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %1, %19
  %15 = phi i8** [ %20, %19 ], [ %3, %1 ]
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, -3
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8*, i8** %15, i64 1
  %21 = icmp eq i8** %20, %12
  br i1 %21, label %25, label %14

22:                                               ; preds = %14, %1
  %23 = phi i8** [ %3, %1 ], [ %15, %14 ]
  %24 = icmp eq i8** %23, %12
  br i1 %24, label %25, label %26

25:                                               ; preds = %19, %48, %59, %56, %22
  ret void

26:                                               ; preds = %22, %59
  %27 = phi i8** [ %52, %59 ], [ %23, %22 ]
  %28 = bitcast i8** %27 to %"class.llvm::cl::SubCommand"**
  %29 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %28, align 8
  %30 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %29, i64 0, i32 4, i32 0, i32 0
  %31 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %30, align 8
  %32 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %29, i64 0, i32 4, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %26, %39
  %36 = phi %"class.llvm::StringMapEntryBase"** [ %40, %39 ], [ %31, %26 ]
  %37 = bitcast %"class.llvm::StringMapEntryBase"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %41 [
    i64 0, label %39
    i64 -4, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %36, i64 1
  br label %35

41:                                               ; preds = %35, %26
  %42 = phi %"class.llvm::StringMapEntryBase"** [ %31, %26 ], [ %36, %35 ]
  %43 = zext i32 %33 to i64
  %44 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %31, i64 %43
  %45 = icmp eq %"class.llvm::StringMapEntryBase"** %42, %44
  br i1 %45, label %48, label %61

46:                                               ; preds = %68
  %47 = icmp eq %"class.llvm::StringMapEntryBase"** %70, %44
  br i1 %47, label %48, label %61

48:                                               ; preds = %46, %41
  %49 = getelementptr inbounds i8*, i8** %27, i64 1
  %50 = icmp eq i8** %49, %12
  br i1 %50, label %25, label %51

51:                                               ; preds = %48, %56
  %52 = phi i8** [ %57, %56 ], [ %49, %48 ]
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp ugt i64 %54, -3
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds i8*, i8** %52, i64 1
  %58 = icmp eq i8** %57, %12
  br i1 %58, label %25, label %51

59:                                               ; preds = %51
  %60 = icmp eq i8** %52, %12
  br i1 %60, label %25, label %26

61:                                               ; preds = %41, %46
  %62 = phi %"class.llvm::StringMapEntryBase"** [ %70, %46 ], [ %42, %41 ]
  %63 = bitcast %"class.llvm::StringMapEntryBase"** %62 to %"class.llvm::StringMapEntry"**
  %64 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %63, align 8
  %65 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %64, i64 0, i32 1
  %66 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %65, align 8
  %67 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %66, i64 0, i32 1
  store i32 0, i32* %67, align 8
  br label %68

68:                                               ; preds = %73, %61
  %69 = phi %"class.llvm::StringMapEntryBase"** [ %62, %61 ], [ %70, %73 ]
  %70 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %69, i64 1
  %71 = bitcast %"class.llvm::StringMapEntryBase"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  switch i64 %72, label %46 [
    i64 0, label %73
    i64 -4, label %73
  ]

73:                                               ; preds = %68, %68
  br label %68
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @LLVMParseCommandLineOptions(i32, i8**, i8*) local_unnamed_addr #0 {
  %4 = icmp eq i8* %2, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call i64 @strlen(i8* nonnull %2) #27
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi i64 [ %6, %5 ], [ 0, %3 ]
  %9 = tail call zeroext i1 @_ZN4llvm2cl23ParseCommandLineOptionsEiPKPKcNS_9StringRefEb(i32 %0, i8** %1, i8* %2, i64 %8, i1 zeroext true) #23
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK4llvm2cl6Option27getValueExpectedFlagDefaultEv(%"class.llvm::cl::Option"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl6OptionD0Ev(%"class.llvm::cl::Option"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #28
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl6Option19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE(%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4llvm2cl15OptionValueCopyINS0_13boolOrDefaultEE7compareERKNS0_18GenericOptionValueE(%"class.llvm::cl::OptionValueCopy.40"*, %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.llvm::cl::GenericOptionValue"* %1 to %"class.llvm::cl::OptionValueCopy.40"*
  %4 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.40", %"class.llvm::cl::OptionValueCopy.40"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !10
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.40", %"class.llvm::cl::OptionValueCopy.40"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4, !range !10
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue", %"struct.llvm::cl::GenericOptionValue"* %1, i64 1
  %13 = bitcast %"struct.llvm::cl::GenericOptionValue"* %12 to i32*
  %14 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.40", %"class.llvm::cl::OptionValueCopy.40"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %13, align 4
  %17 = icmp ne i32 %15, %16
  br label %18

18:                                               ; preds = %2, %11, %7
  %19 = phi i1 [ false, %2 ], [ false, %7 ], [ %17, %11 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7compareERKNS0_18GenericOptionValueE(%"class.llvm::cl::OptionValueCopy.20"*, %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue", %"struct.llvm::cl::GenericOptionValue"* %1, i64 4
  %4 = bitcast %"struct.llvm::cl::GenericOptionValue"* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !10
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue", %"struct.llvm::cl::GenericOptionValue"* %1, i64 1
  %9 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.20", %"class.llvm::cl::OptionValueCopy.20"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !10
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %64, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.20", %"class.llvm::cl::OptionValueCopy.20"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.20", %"class.llvm::cl::OptionValueCopy.20"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = bitcast %"struct.llvm::cl::GenericOptionValue"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue", %"struct.llvm::cl::GenericOptionValue"* %1, i64 2
  %27 = bitcast %"struct.llvm::cl::GenericOptionValue"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %24 to i64
  %30 = select i1 %25, i64 %28, i64 %29
  %31 = icmp eq i64 %21, %30
  br i1 %31, label %32, label %64

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %36 = select i1 %17, i8* %34, i8* %35
  %37 = bitcast %"struct.llvm::cl::GenericOptionValue"* %8 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"struct.llvm::cl::GenericOptionValue"* %8 to i8*
  %40 = select i1 %25, i8* %38, i8* %39
  %41 = icmp eq i64 %21, 0
  br i1 %17, label %48, label %42

42:                                               ; preds = %32
  br i1 %41, label %64, label %43

43:                                               ; preds = %42
  %44 = ptrtoint i8* %34 to i64
  %45 = trunc i64 %44 to i8
  %46 = load i8, i8* %40, align 1
  %47 = icmp eq i8 %46, %45
  br i1 %47, label %52, label %64

48:                                               ; preds = %32
  br i1 %41, label %64, label %49

49:                                               ; preds = %48
  %50 = tail call i32 @bcmp(i8* %36, i8* %40, i64 %21) #22
  %51 = icmp ne i32 %50, 0
  br label %64

52:                                               ; preds = %43, %59
  %53 = phi i64 [ %56, %59 ], [ %20, %43 ]
  %54 = phi i8* [ %57, %59 ], [ %35, %43 ]
  %55 = phi i8* [ %60, %59 ], [ %40, %43 ]
  %56 = add i64 %53, -1
  %57 = getelementptr inbounds i8, i8* %54, i64 1
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds i8, i8* %55, i64 1
  %61 = load i8, i8* %57, align 1
  %62 = load i8, i8* %60, align 1
  %63 = icmp eq i8 %61, %62
  br i1 %63, label %52, label %64

64:                                               ; preds = %52, %59, %43, %2, %7, %12, %42, %48, %49
  %65 = phi i1 [ false, %2 ], [ false, %7 ], [ true, %12 ], [ %51, %49 ], [ false, %48 ], [ false, %42 ], [ true, %43 ], [ false, %52 ], [ true, %59 ]
  ret i1 %65
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl19generic_parser_baseD2Ev(%"class.llvm::cl::generic_parser_base"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl19generic_parser_baseD0Ev(%"class.llvm::cl::generic_parser_base"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #28
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl17basic_parser_impl12getValueNameEv(%"class.llvm::cl::basic_parser_impl"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i64 0, i64 0), i64 5 }
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl6parserIbE12getValueNameEv(%"class.llvm::cl::parser.38"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } zeroinitializer
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl6parserINS0_13boolOrDefaultEE12getValueNameEv(%"class.llvm::cl::parser.42"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } zeroinitializer
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl6parserIiE12getValueNameEv(%"class.llvm::cl::parser.15"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0), i64 3 }
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl6parserIjE12getValueNameEv(%"class.llvm::cl::parser"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i64 0, i64 0), i64 4 }
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl6parserIyE12getValueNameEv(%"class.llvm::cl::parser.43"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i64 0, i64 0), i64 4 }
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl6parserIdE12getValueNameEv(%"class.llvm::cl::parser.44"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i64 0, i64 0), i64 6 }
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl6parserIfE12getValueNameEv(%"class.llvm::cl::parser.45"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i64 0, i64 0), i64 6 }
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12getValueNameEv(%"class.llvm::cl::parser.22"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i64 0, i64 0), i64 6 }
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm2cl6parserIcE12getValueNameEv(%"class.llvm::cl::parser.30"*) unnamed_addr #0 comdat align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i64 0, i64 0), i64 4 }
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED0Ev(%"class.llvm::cl::opt"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt", %"class.llvm::cl::opt"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8** %4 to i8*
  tail call void @free(i8* %9) #24
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.llvm::cl::opt"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #25
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl3optIiLb0ENS0_6parserIiEEED0Ev(%"class.llvm::cl::opt.8"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt.8", %"class.llvm::cl::opt.8"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8** %4 to i8*
  tail call void @free(i8* %9) #24
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.llvm::cl::opt.8"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #25
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEED2Ev(%"class.llvm::cl::opt.16"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #25
  br label %12

12:                                               ; preds = %9, %1
  %13 = bitcast %"class.llvm::cl::opt_storage.17"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.llvm::cl::opt_storage.17", %"class.llvm::cl::opt_storage.17"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #25
  br label %20

20:                                               ; preds = %12, %17
  %21 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  %23 = load i8**, i8*** %22, align 8
  %24 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %25 = load i8**, i8*** %24, align 8
  %26 = icmp eq i8** %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = bitcast i8** %23 to i8*
  tail call void @free(i8* %28) #24
  br label %29

29:                                               ; preds = %20, %27
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEED0Ev(%"class.llvm::cl::opt.16"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #25
  br label %12

12:                                               ; preds = %9, %1
  %13 = bitcast %"class.llvm::cl::opt_storage.17"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.llvm::cl::opt_storage.17", %"class.llvm::cl::opt_storage.17"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #25
  br label %20

20:                                               ; preds = %17, %12
  %21 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  %23 = load i8**, i8*** %22, align 8
  %24 = getelementptr inbounds %"class.llvm::cl::opt.16", %"class.llvm::cl::opt.16"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %25 = load i8**, i8*** %24, align 8
  %26 = icmp eq i8** %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = bitcast i8** %23 to i8*
  tail call void @free(i8* %28) #24
  br label %29

29:                                               ; preds = %20, %27
  %30 = bitcast %"class.llvm::cl::opt.16"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #25
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl3optIcLb0ENS0_6parserIcEEED0Ev(%"class.llvm::cl::opt.23"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt.23", %"class.llvm::cl::opt.23"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8** %4 to i8*
  tail call void @free(i8* %9) #24
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.llvm::cl::opt.23"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #25
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev(%"class.llvm::cl::opt.31"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8** %4 to i8*
  tail call void @free(i8* %9) #24
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.llvm::cl::opt.31"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #25
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4llvm2cl5alias16handleOccurrenceEjNS_9StringRefES2_(%"class.llvm::cl::alias"*, i32, i8*, i64, i8*, i64) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 1
  %8 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %7, align 8
  %9 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %8, i64 0, i32 6, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %8, i64 0, i32 6, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.llvm::cl::Option"* %8 to i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)***
  %14 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)**, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)*** %13, align 8
  %15 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.llvm::cl::Option"* %8, i32 %1, i8* %10, i64 %12, i8* %4, i64 %5) #24
  ret i1 %16
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK4llvm2cl5alias27getValueExpectedFlagDefaultEv(%"class.llvm::cl::alias"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 1
  %3 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %3, i64 0, i32 2
  %5 = load i16, i16* %4, align 4
  %6 = lshr i16 %5, 3
  %7 = and i16 %6, 3
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = zext i16 %7 to i32
  br label %17

11:                                               ; preds = %1
  %12 = bitcast %"class.llvm::cl::Option"* %3 to i32 (%"class.llvm::cl::Option"*)***
  %13 = load i32 (%"class.llvm::cl::Option"*)**, i32 (%"class.llvm::cl::Option"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.llvm::cl::Option"*)*, i32 (%"class.llvm::cl::Option"*)** %13, i64 1
  %15 = load i32 (%"class.llvm::cl::Option"*)*, i32 (%"class.llvm::cl::Option"*)** %14, align 8
  %16 = tail call i32 %15(%"class.llvm::cl::Option"* %3) #24
  br label %17

17:                                               ; preds = %9, %11
  %18 = phi i32 [ %10, %9 ], [ %16, %11 ]
  ret i32 %18
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl5aliasD0Ev(%"class.llvm::cl::alias"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8** %4 to i8*
  tail call void @free(i8* %9) #24
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.llvm::cl::alias"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #25
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK4llvm2cl5alias16printOptionValueEmb(%"class.llvm::cl::alias"*, i64, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4llvm2cl5alias13addOccurrenceEjNS_9StringRefES2_b(%"class.llvm::cl::alias"*, i32, i8*, i64, i8*, i64, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %8 = getelementptr inbounds %"class.llvm::cl::alias", %"class.llvm::cl::alias"* %0, i64 0, i32 1
  %9 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %8, align 8
  %10 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %9, i64 0, i32 6, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %9, i64 0, i32 6, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.llvm::cl::Option"* %9 to i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)***
  %15 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)**, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)** %15, i64 9
  %17 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.llvm::cl::Option"* %9, i32 %1, i8* %11, i64 %13, i8* %4, i64 %5, i1 zeroext %6) #24
  ret i1 %18
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117CommandLineParser16addLiteralOptionERN4llvm2cl6OptionEPNS2_10SubCommandENS1_9StringRefE(%"class.(anonymous namespace)::CommandLineParser"*, %"class.llvm::cl::Option"* dereferenceable(152), %"class.llvm::cl::SubCommand"*, i8*, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.std::__1::pair.122", align 8
  %7 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %80

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %2, i64 0, i32 4
  %12 = ptrtoint %"class.llvm::cl::Option"* %1 to i64
  %13 = bitcast %"struct.std::__1::pair.122"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  %14 = getelementptr inbounds %"struct.std::__1::pair.122", %"struct.std::__1::pair.122"* %6, i64 0, i32 0, i32 0
  store i8* %3, i8** %14, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.122", %"struct.std::__1::pair.122"* %6, i64 0, i32 0, i32 1
  store i64 %4, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair.122", %"struct.std::__1::pair.122"* %6, i64 0, i32 1
  %17 = bitcast %"class.llvm::cl::Option"** %16 to i64*
  store i64 %12, i64* %17, align 8
  %18 = call { %"class.llvm::StringMapEntryBase"**, i8 } @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE11try_emplaceIJS3_EEENSt3__14pairINS_17StringMapIteratorIS3_EEbEENS_9StringRefEDpOT_(%"class.llvm::StringMap"* %11, i8* %3, i64 %4, %"class.llvm::cl::Option"** dereferenceable(8) %16) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  %19 = extractvalue { %"class.llvm::StringMapEntryBase"**, i8 } %18, 1
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %10
  %23 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %24 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 0
  %25 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.llvm::raw_ostream"* %23, %"class.std::__1::basic_string"* dereferenceable(24) %24) #23
  %26 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.59, i64 0, i64 0)) #23
  %27 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %26, i8* %3, i64 %4) #23
  %28 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60, i64 0, i64 0)) #23
  call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.61, i64 0, i64 0), i1 zeroext true) #26
  unreachable

29:                                               ; preds = %10
  %30 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %33

33:                                               ; preds = %29, %32
  %34 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %35 = inttoptr i64 %34 to %"class.llvm::cl::SubCommand"*
  %36 = icmp eq %"class.llvm::cl::SubCommand"* %35, %2
  br i1 %36, label %37, label %80

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %39 = load i8**, i8*** %38, align 8
  %40 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %41 = load i8**, i8*** %40, align 8
  %42 = icmp eq i8** %39, %41
  %43 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 3
  %44 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = select i1 %42, i32* %43, i32* %44
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8*, i8** %39, i64 %47
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %37, %55
  %51 = phi i8** [ %56, %55 ], [ %39, %37 ]
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp ugt i64 %53, -3
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds i8*, i8** %51, i64 1
  %57 = icmp eq i8** %56, %48
  br i1 %57, label %80, label %50

58:                                               ; preds = %50, %37
  %59 = phi i8** [ %39, %37 ], [ %51, %50 ]
  %60 = icmp eq i8** %59, %48
  br i1 %60, label %80, label %61

61:                                               ; preds = %58, %78
  %62 = phi i8** [ %71, %78 ], [ %59, %58 ]
  %63 = bitcast i8** %62 to %"class.llvm::cl::SubCommand"**
  %64 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %63, align 8
  %65 = icmp eq %"class.llvm::cl::SubCommand"* %64, %2
  br i1 %65, label %67, label %66

66:                                               ; preds = %61
  call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser16addLiteralOptionERN4llvm2cl6OptionEPNS2_10SubCommandENS1_9StringRefE(%"class.(anonymous namespace)::CommandLineParser"* %0, %"class.llvm::cl::Option"* dereferenceable(152) %1, %"class.llvm::cl::SubCommand"* %64, i8* %3, i64 %4) #23
  br label %67

67:                                               ; preds = %61, %66
  %68 = getelementptr inbounds i8*, i8** %62, i64 1
  %69 = icmp eq i8** %68, %48
  br i1 %69, label %80, label %70

70:                                               ; preds = %67, %75
  %71 = phi i8** [ %76, %75 ], [ %68, %67 ]
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp ugt i64 %73, -3
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds i8*, i8** %71, i64 1
  %77 = icmp eq i8** %76, %48
  br i1 %77, label %80, label %70

78:                                               ; preds = %70
  %79 = icmp eq i8** %71, %48
  br i1 %79, label %80, label %61

80:                                               ; preds = %55, %67, %78, %75, %58, %5, %33
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorEPKcb(i8*, i1 zeroext) local_unnamed_addr #10

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.llvm::StringMapEntryBase"**, i8 } @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE11try_emplaceIJS3_EEENSt3__14pairINS_17StringMapIteratorIS3_EEbEENS_9StringRefEDpOT_(%"class.llvm::StringMap"*, i8*, i64, %"class.llvm::cl::Option"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0
  %6 = tail call i32 @_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE(%"class.llvm::StringMapImpl"* %5, i8* %1, i64 %2) #24
  %7 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %7, align 8
  %9 = zext i32 %6 to i64
  %10 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %8, i64 %9
  %11 = bitcast %"class.llvm::StringMapEntryBase"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %24
    i64 -4, label %20
  ]

13:                                               ; preds = %4, %16
  %14 = phi i64 [ %19, %16 ], [ %12, %4 ]
  %15 = phi %"class.llvm::StringMapEntryBase"** [ %17, %16 ], [ %10, %4 ]
  switch i64 %14, label %54 [
    i64 0, label %16
    i64 -4, label %16
  ]

16:                                               ; preds = %13, %13
  %17 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %15, i64 1
  %18 = bitcast %"class.llvm::StringMapEntryBase"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  br label %13

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 8
  br label %24

24:                                               ; preds = %4, %20
  %25 = trunc i64 %2 to i32
  %26 = add i64 %2, 17
  %27 = and i64 %26, 4294967295
  %28 = tail call noalias i8* @malloc(i64 %27) #24
  %29 = bitcast i8* %28 to i32*
  store i32 %25, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %28, i64 8
  %31 = bitcast %"class.llvm::cl::Option"** %3 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8* %30 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %28, i64 16
  %35 = icmp eq i32 %25, 0
  %36 = and i64 %2, 4294967295
  br i1 %35, label %38, label %37

37:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %1, i64 %36, i1 false) #22
  br label %38

38:                                               ; preds = %24, %37
  %39 = getelementptr inbounds i8, i8* %34, i64 %36
  store i8 0, i8* %39, align 1
  %40 = bitcast %"class.llvm::StringMapEntryBase"** %10 to i8**
  store i8* %28, i8** %40, align 8
  %41 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %41, align 4
  %44 = tail call i32 @_ZN4llvm13StringMapImpl11RehashTableEj(%"class.llvm::StringMapImpl"* %5, i32 %6) #24
  %45 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %7, align 8
  %46 = zext i32 %44 to i64
  %47 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %45, i64 %46
  br label %48

48:                                               ; preds = %52, %38
  %49 = phi %"class.llvm::StringMapEntryBase"** [ %47, %38 ], [ %53, %52 ]
  %50 = bitcast %"class.llvm::StringMapEntryBase"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %54 [
    i64 0, label %52
    i64 -4, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %49, i64 1
  br label %48

54:                                               ; preds = %48, %13
  %55 = phi %"class.llvm::StringMapEntryBase"** [ %15, %13 ], [ %49, %48 ]
  %56 = phi i8 [ 0, %13 ], [ 1, %48 ]
  %57 = insertvalue { %"class.llvm::StringMapEntryBase"**, i8 } undef, %"class.llvm::StringMapEntryBase"** %55, 0
  %58 = insertvalue { %"class.llvm::StringMapEntryBase"**, i8 } %57, i8 %56, 1
  ret { %"class.llvm::StringMapEntryBase"**, i8 } %58
}

; Function Attrs: optsize
declare i32 @_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE(%"class.llvm::StringMapImpl"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: optsize
declare i32 @_ZN4llvm13StringMapImpl11RehashTableEj(%"class.llvm::StringMapImpl"*, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117CommandLineParser9addOptionEPN4llvm2cl6OptionEPNS2_10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"*, %"class.llvm::cl::Option"*, %"class.llvm::cl::SubCommand"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.122", align 8
  %5 = alloca %"class.llvm::cl::Option"*, align 8
  %6 = alloca %"class.llvm::Twine", align 8
  store %"class.llvm::cl::Option"* %1, %"class.llvm::cl::Option"** %5, align 8
  %7 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %49, label %10

10:                                               ; preds = %3
  %11 = ptrtoint %"class.llvm::cl::Option"* %1 to i64
  %12 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %2, i64 0, i32 4
  %13 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6
  %14 = bitcast %"class.llvm::StringRef"* %13 to i8*
  %15 = bitcast %"struct.std::__1::pair.122"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %14, i64 16, i1 false)
  %16 = getelementptr inbounds %"struct.std::__1::pair.122", %"struct.std::__1::pair.122"* %4, i64 0, i32 1
  %17 = bitcast %"class.llvm::cl::Option"** %16 to i64*
  store i64 %11, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.122", %"struct.std::__1::pair.122"* %4, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.122", %"struct.std::__1::pair.122"* %4, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = call { %"class.llvm::StringMapEntryBase"**, i8 } @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE11try_emplaceIJS3_EEENSt3__14pairINS_17StringMapIteratorIS3_EEbEENS_9StringRefEDpOT_(%"class.llvm::StringMap"* %12, i8* %19, i64 %21, %"class.llvm::cl::Option"** dereferenceable(8) %16) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15)
  %23 = extractvalue { %"class.llvm::StringMapEntryBase"**, i8 } %22, 1
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %49

26:                                               ; preds = %10
  %27 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %28 = bitcast %"class.(anonymous namespace)::CommandLineParser"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.(anonymous namespace)::CommandLineParser"* %0 to i8*
  %37 = zext i8 %30 to i64
  %38 = select i1 %31, i8* %33, i8* %36
  %39 = select i1 %31, i64 %35, i64 %37
  %40 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %27, i8* %38, i64 %39) #24
  %41 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %40, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.59, i64 0, i64 0), i64 29) #24
  %42 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %5, align 8
  %43 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %42, i64 0, i32 6, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %42, i64 0, i32 6, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %41, i8* %44, i64 %46) #23
  %48 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %47, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60, i64 0, i64 0), i64 29) #24
  br label %49

49:                                               ; preds = %3, %10, %26
  %50 = phi i8 [ 1, %26 ], [ 0, %10 ], [ 0, %3 ]
  %51 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %5, align 8
  %52 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %51, i64 0, i32 2
  %53 = load i16, i16* %52, align 4
  %54 = and i16 %53, 384
  %55 = icmp eq i16 %54, 128
  %56 = ptrtoint %"class.llvm::cl::Option"* %51 to i64
  br i1 %55, label %57, label %59

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %2, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl6OptionELb1EE9push_backERKS3_(%"class.llvm::SmallVectorTemplateBase.55"* %58, %"class.llvm::cl::Option"** nonnull dereferenceable(8) %5) #23
  br label %83

59:                                               ; preds = %49
  %60 = and i16 %53, 2048
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %2, i64 0, i32 3, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl6OptionELb1EE9push_backERKS3_(%"class.llvm::SmallVectorTemplateBase.55"* %63, %"class.llvm::cl::Option"** nonnull dereferenceable(8) %5) #23
  br label %83

64:                                               ; preds = %59
  %65 = and i16 %53, 7
  %66 = icmp eq i16 %65, 4
  br i1 %66, label %67, label %83

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %2, i64 0, i32 5
  %69 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %68, align 8
  %70 = icmp eq %"class.llvm::cl::Option"* %69, null
  br i1 %70, label %79, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.llvm::Twine"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #22
  %73 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 3
  store i8 1, i8* %73, align 1
  %74 = bitcast %"class.llvm::Twine"* %6 to i8**
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.62, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %6, i64 0, i32 2
  store i8 3, i8* %75, align 8
  %76 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %51, %"class.llvm::Twine"* nonnull dereferenceable(24) %6, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #22
  %77 = bitcast %"class.llvm::cl::Option"** %5 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %67, %71
  %80 = phi i64 [ %78, %71 ], [ %56, %67 ]
  %81 = phi i8 [ 1, %71 ], [ %50, %67 ]
  %82 = bitcast %"class.llvm::cl::Option"** %68 to i64*
  store i64 %80, i64* %82, align 8
  br label %83

83:                                               ; preds = %62, %79, %64, %57
  %84 = phi i8 [ %50, %57 ], [ %50, %62 ], [ %81, %79 ], [ %50, %64 ]
  %85 = and i8 %84, 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.61, i64 0, i64 0), i1 zeroext true) #26
  unreachable

88:                                               ; preds = %83
  %89 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %92

92:                                               ; preds = %88, %91
  %93 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %94 = inttoptr i64 %93 to %"class.llvm::cl::SubCommand"*
  %95 = icmp eq %"class.llvm::cl::SubCommand"* %94, %2
  br i1 %95, label %96, label %140

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %98 = load i8**, i8*** %97, align 8
  %99 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %100 = load i8**, i8*** %99, align 8
  %101 = icmp eq i8** %98, %100
  %102 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 3
  %103 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %104 = select i1 %101, i32* %102, i32* %103
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i8*, i8** %98, i64 %106
  %108 = icmp eq i32 %105, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %96, %114
  %110 = phi i8** [ %115, %114 ], [ %98, %96 ]
  %111 = bitcast i8** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = icmp ugt i64 %112, -3
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = getelementptr inbounds i8*, i8** %110, i64 1
  %116 = icmp eq i8** %115, %107
  br i1 %116, label %140, label %109

117:                                              ; preds = %109, %96
  %118 = phi i8** [ %98, %96 ], [ %110, %109 ]
  %119 = icmp eq i8** %118, %107
  br i1 %119, label %140, label %120

120:                                              ; preds = %117, %138
  %121 = phi i8** [ %131, %138 ], [ %118, %117 ]
  %122 = bitcast i8** %121 to %"class.llvm::cl::SubCommand"**
  %123 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %122, align 8
  %124 = icmp eq %"class.llvm::cl::SubCommand"* %123, %2
  br i1 %124, label %127, label %125

125:                                              ; preds = %120
  %126 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %5, align 8
  call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser9addOptionEPN4llvm2cl6OptionEPNS2_10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* %0, %"class.llvm::cl::Option"* %126, %"class.llvm::cl::SubCommand"* %123) #23
  br label %127

127:                                              ; preds = %120, %125
  %128 = getelementptr inbounds i8*, i8** %121, i64 1
  %129 = icmp eq i8** %128, %107
  br i1 %129, label %140, label %130

130:                                              ; preds = %127, %135
  %131 = phi i8** [ %136, %135 ], [ %128, %127 ]
  %132 = bitcast i8** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = icmp ugt i64 %133, -3
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  %136 = getelementptr inbounds i8*, i8** %131, i64 1
  %137 = icmp eq i8** %136, %107
  br i1 %137, label %140, label %130

138:                                              ; preds = %130
  %139 = icmp eq i8** %131, %107
  br i1 %139, label %140, label %120

140:                                              ; preds = %114, %127, %138, %135, %117, %92
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPNS_2cl6OptionELb1EE9push_backERKS3_(%"class.llvm::SmallVectorTemplateBase.55"*, %"class.llvm::cl::Option"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.55", %"class.llvm::SmallVectorTemplateBase.55"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.55", %"class.llvm::SmallVectorTemplateBase.55"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !30

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.55", %"class.llvm::SmallVectorTemplateBase.55"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.55", %"class.llvm::SmallVectorTemplateBase.55"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #24
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to %"class.llvm::cl::Option"***
  %18 = bitcast %"class.llvm::cl::Option"** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %17, align 8
  %21 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %20, i64 1
  store %"class.llvm::cl::Option"** %21, %"class.llvm::cl::Option"*** %17, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117CommandLineParser12removeOptionEPN4llvm2cl6OptionEPNS2_10SubCommandE(%"class.llvm::cl::Option"*, %"class.llvm::cl::SubCommand"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.llvm::SmallVector.123", align 8
  %4 = bitcast %"class.llvm::SmallVector.123"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %4) #22
  %5 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 256, i1 false)
  %6 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 256
  store i8* %10, i8** %9, align 8
  %11 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %3, i64 0, i32 0
  %12 = bitcast %"class.llvm::cl::Option"* %0 to void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)***
  %13 = load void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)**, void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)*, void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)** %13, i64 8
  %15 = load void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)*, void (%"class.llvm::cl::Option"*, %"class.llvm::SmallVectorImpl"*)** %14, align 8
  call void %15(%"class.llvm::cl::Option"* %0, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(40) %11) #24
  %16 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 6, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.llvm::SmallVector.123", %"class.llvm::SmallVector.123"* %3, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 6
  call void @_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* nonnull %20, %"class.llvm::StringRef"* dereferenceable(16) %21) #23
  br label %22

22:                                               ; preds = %2, %19
  %23 = bitcast %"class.llvm::SmallVector.123"* %3 to %"class.llvm::StringRef"**
  %24 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %23, align 8
  %25 = bitcast i8** %8 to %"class.llvm::StringRef"**
  %26 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %25, align 8
  %27 = icmp eq %"class.llvm::StringRef"* %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %1, i64 0, i32 4
  br label %35

30:                                               ; preds = %35, %22
  %31 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 2
  %32 = load i16, i16* %31, align 4
  %33 = and i16 %32, 384
  %34 = icmp eq i16 %33, 128
  br i1 %34, label %44, label %70

35:                                               ; preds = %28, %35
  %36 = phi %"class.llvm::StringRef"* [ %24, %28 ], [ %42, %35 ]
  %37 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %36, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = call zeroext i1 @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE5eraseENS_9StringRefE(%"class.llvm::StringMap"* %29, i8* %38, i64 %40) #23
  %42 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %36, i64 1
  %43 = icmp eq %"class.llvm::StringRef"* %42, %26
  br i1 %43, label %30, label %35

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %1, i64 0, i32 2
  %46 = bitcast %"class.llvm::SmallVector"* %45 to %"class.llvm::cl::Option"***
  %47 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %46, align 8
  %48 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast i8** %48 to %"class.llvm::cl::Option"***
  %50 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %49, align 8
  %51 = ptrtoint %"class.llvm::cl::Option"** %50 to i64
  br label %52

52:                                               ; preds = %55, %44
  %53 = phi %"class.llvm::cl::Option"** [ %47, %44 ], [ %58, %55 ]
  %54 = icmp eq %"class.llvm::cl::Option"** %53, %50
  br i1 %54, label %104, label %55

55:                                               ; preds = %52
  %56 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %53, align 8
  %57 = icmp eq %"class.llvm::cl::Option"* %56, %0
  %58 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %53, i64 1
  br i1 %57, label %59, label %52

59:                                               ; preds = %55
  %60 = ptrtoint %"class.llvm::cl::Option"** %58 to i64
  %61 = sub i64 %51, %60
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.llvm::cl::Option"** %53 to i8*
  %65 = bitcast %"class.llvm::cl::Option"** %58 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %61, i1 false) #22
  %66 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %49, align 8
  br label %67

67:                                               ; preds = %59, %63
  %68 = phi %"class.llvm::cl::Option"** [ %66, %63 ], [ %50, %59 ]
  %69 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %68, i64 -1
  store %"class.llvm::cl::Option"** %69, %"class.llvm::cl::Option"*** %49, align 8
  br label %104

70:                                               ; preds = %30
  %71 = and i16 %32, 2048
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %99, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %1, i64 0, i32 3
  %75 = bitcast %"class.llvm::SmallVector"* %74 to %"class.llvm::cl::Option"***
  %76 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %75, align 8
  %77 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast i8** %77 to %"class.llvm::cl::Option"***
  %79 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %78, align 8
  %80 = ptrtoint %"class.llvm::cl::Option"** %79 to i64
  br label %81

81:                                               ; preds = %84, %73
  %82 = phi %"class.llvm::cl::Option"** [ %76, %73 ], [ %87, %84 ]
  %83 = icmp eq %"class.llvm::cl::Option"** %82, %79
  br i1 %83, label %104, label %84

84:                                               ; preds = %81
  %85 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %82, align 8
  %86 = icmp eq %"class.llvm::cl::Option"* %85, %0
  %87 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %82, i64 1
  br i1 %86, label %88, label %81

88:                                               ; preds = %84
  %89 = ptrtoint %"class.llvm::cl::Option"** %87 to i64
  %90 = sub i64 %80, %89
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.llvm::cl::Option"** %82 to i8*
  %94 = bitcast %"class.llvm::cl::Option"** %87 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %90, i1 false) #22
  %95 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %78, align 8
  br label %96

96:                                               ; preds = %88, %92
  %97 = phi %"class.llvm::cl::Option"** [ %95, %92 ], [ %79, %88 ]
  %98 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %97, i64 -1
  store %"class.llvm::cl::Option"** %98, %"class.llvm::cl::Option"*** %78, align 8
  br label %104

99:                                               ; preds = %70
  %100 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %1, i64 0, i32 5
  %101 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %100, align 8
  %102 = icmp eq %"class.llvm::cl::Option"* %101, %0
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  store %"class.llvm::cl::Option"* null, %"class.llvm::cl::Option"** %100, align 8
  br label %104

104:                                              ; preds = %81, %52, %96, %67, %103, %99
  %105 = load i8*, i8** %7, align 8
  %106 = icmp eq i8* %105, %6
  br i1 %106, label %108, label %107

107:                                              ; preds = %104
  call void @free(i8* %105) #24
  br label %108

108:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINS_9StringRefELb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, %"class.llvm::StringRef"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !30

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #24
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"class.llvm::StringRef"**
  %15 = bitcast %"class.llvm::StringRef"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %14, align 8
  %17 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %16, i64 1
  store %"class.llvm::StringRef"* %17, %"class.llvm::StringRef"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE5eraseENS_9StringRefE(%"class.llvm::StringMap"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0
  %5 = tail call i32 @_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE(%"class.llvm::StringMapImpl"* %4, i8* %1, i64 %2) #24
  %6 = icmp eq i32 %5, -1
  %7 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %7, align 8
  br i1 %6, label %21, label %9

9:                                                ; preds = %3
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = icmp eq i64 %10, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %8, i64 %10
  %17 = bitcast %"class.llvm::StringMapEntryBase"** %16 to %"class.llvm::StringMapEntry"**
  %18 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %17, align 8
  %19 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %18, i64 0, i32 0
  tail call void @_ZN4llvm13StringMapImpl9RemoveKeyEPNS_18StringMapEntryBaseE(%"class.llvm::StringMapImpl"* %4, %"class.llvm::StringMapEntryBase"* %19) #24
  %20 = bitcast %"class.llvm::StringMapEntry"* %18 to i8*
  tail call void @free(i8* %20) #24
  br label %21

21:                                               ; preds = %3, %9, %15
  %22 = phi i1 [ true, %15 ], [ false, %9 ], [ false, %3 ]
  ret i1 %22
}

; Function Attrs: optsize
declare i32 @_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE(%"class.llvm::StringMapImpl"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN4llvm13StringMapImpl9RemoveKeyEPNS_18StringMapEntryBaseE(%"class.llvm::StringMapImpl"*, %"class.llvm::StringMapEntryBase"*) local_unnamed_addr #3

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4llvm6any_ofIRKNS_11SmallPtrSetIPNS_2cl10SubCommandELj4EEEZNKS2_6Option18isInAllSubCommandsEvEUlPKS3_E_EEbOT_T0_(%"class.llvm::SmallPtrSet"* dereferenceable(64)) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"class.llvm::SmallPtrSet", %"class.llvm::SmallPtrSet"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i8**, i8*** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::SmallPtrSet", %"class.llvm::SmallPtrSet"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i8**, i8*** %4, align 8
  %6 = icmp eq i8** %3, %5
  %7 = getelementptr inbounds %"class.llvm::SmallPtrSet", %"class.llvm::SmallPtrSet"* %0, i64 0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %"class.llvm::SmallPtrSet", %"class.llvm::SmallPtrSet"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %7, align 4
  %10 = load i32, i32* %8, align 4
  %11 = select i1 %6, i32 %9, i32 %10
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i8*, i8** %3, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %1, %20
  %16 = phi i8** [ %21, %20 ], [ %3, %1 ]
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, -3
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds i8*, i8** %16, i64 1
  %22 = icmp eq i8** %21, %13
  br i1 %22, label %50, label %15

23:                                               ; preds = %15, %1
  %24 = phi i8** [ %3, %1 ], [ %16, %15 ]
  %25 = icmp eq i8** %24, %13
  br i1 %25, label %50, label %26

26:                                               ; preds = %23, %48
  %27 = phi i8** [ %41, %48 ], [ %24, %23 ]
  %28 = bitcast i8** %27 to %"class.llvm::cl::SubCommand"**
  %29 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %28, align 8
  %30 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %33

33:                                               ; preds = %32, %26
  %34 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %35 = inttoptr i64 %34 to %"class.llvm::cl::SubCommand"*
  %36 = icmp eq %"class.llvm::cl::SubCommand"* %29, %35
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8*, i8** %27, i64 1
  %39 = icmp eq i8** %38, %13
  br i1 %39, label %50, label %40

40:                                               ; preds = %37, %45
  %41 = phi i8** [ %46, %45 ], [ %38, %37 ]
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp ugt i64 %43, -3
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds i8*, i8** %41, i64 1
  %47 = icmp eq i8** %46, %13
  br i1 %47, label %50, label %40

48:                                               ; preds = %40
  %49 = icmp eq i8** %41, %13
  br i1 %49, label %50, label %26

50:                                               ; preds = %20, %37, %33, %48, %45, %23
  %51 = phi i1 [ false, %23 ], [ false, %45 ], [ false, %37 ], [ true, %33 ], [ false, %48 ], [ false, %20 ]
  ret i1 %51
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_117CommandLineParser12updateArgStrEPN4llvm2cl6OptionENS1_9StringRefEPNS2_10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"*, %"class.llvm::cl::Option"*, i8*, i64, %"class.llvm::cl::SubCommand"*) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.std::__1::pair.122", align 8
  %7 = ptrtoint %"class.llvm::cl::Option"* %1 to i64
  %8 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %4, i64 0, i32 4
  %9 = bitcast %"struct.std::__1::pair.122"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9)
  %10 = getelementptr inbounds %"struct.std::__1::pair.122", %"struct.std::__1::pair.122"* %6, i64 0, i32 0, i32 0
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.122", %"struct.std::__1::pair.122"* %6, i64 0, i32 0, i32 1
  store i64 %3, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.std::__1::pair.122", %"struct.std::__1::pair.122"* %6, i64 0, i32 1
  %13 = bitcast %"class.llvm::cl::Option"** %12 to i64*
  store i64 %7, i64* %13, align 8
  %14 = call { %"class.llvm::StringMapEntryBase"**, i8 } @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE11try_emplaceIJS3_EEENSt3__14pairINS_17StringMapIteratorIS3_EEbEENS_9StringRefEDpOT_(%"class.llvm::StringMap"* %8, i8* %2, i64 %3, %"class.llvm::cl::Option"** dereferenceable(8) %12) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9)
  %15 = extractvalue { %"class.llvm::StringMapEntryBase"**, i8 } %14, 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %29

18:                                               ; preds = %5
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4errsEv() #24
  %20 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %0, i64 0, i32 0
  %21 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.llvm::raw_ostream"* %19, %"class.std::__1::basic_string"* dereferenceable(24) %20) #23
  %22 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %21, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.59, i64 0, i64 0)) #23
  %23 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %22, i8* %24, i64 %26) #23
  %28 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60, i64 0, i64 0)) #23
  call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.61, i64 0, i64 0), i1 zeroext true) #26
  unreachable

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %1, i64 0, i32 6, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = call zeroext i1 @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEE5eraseENS_9StringRefE(%"class.llvm::StringMap"* %8, i8* %31, i64 %33) #23
  ret void
}

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallPtrSetImplIPNS_2cl14OptionCategoryEE6insertES3_(%"struct.std::__1::pair.125"* noalias sret, %"class.llvm::SmallPtrSetImpl.52"*, %"class.llvm::cl::OptionCategory"*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.llvm::SmallPtrSetImpl.52"* %1 to %"class.llvm::SmallPtrSetImplBase"*
  %5 = bitcast %"class.llvm::cl::OptionCategory"* %2 to i8*
  %6 = tail call { i8**, i8 } @_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv(%"class.llvm::SmallPtrSetImplBase"* %4, i8* %5) #23
  %7 = extractvalue { i8**, i8 } %6, 0
  %8 = extractvalue { i8**, i8 } %6, 1
  %9 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl.52", %"class.llvm::SmallPtrSetImpl.52"* %1, i64 0, i32 0, i32 1
  %10 = load i8**, i8*** %9, align 8
  %11 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl.52", %"class.llvm::SmallPtrSetImpl.52"* %1, i64 0, i32 0, i32 0
  %12 = load i8**, i8*** %11, align 8
  %13 = icmp eq i8** %10, %12
  %14 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl.52", %"class.llvm::SmallPtrSetImpl.52"* %1, i64 0, i32 0, i32 3
  %15 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl.52", %"class.llvm::SmallPtrSetImpl.52"* %1, i64 0, i32 0, i32 2
  %16 = select i1 %13, i32* %14, i32* %15
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i8*, i8** %10, i64 %18
  %20 = icmp eq i8** %7, %19
  br i1 %20, label %29, label %21

21:                                               ; preds = %3, %26
  %22 = phi i8** [ %27, %26 ], [ %7, %3 ]
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %24, -3
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds i8*, i8** %22, i64 1
  %28 = icmp eq i8** %27, %19
  br i1 %28, label %29, label %21

29:                                               ; preds = %21, %26, %3
  %30 = phi i8** [ %7, %3 ], [ %22, %21 ], [ %19, %26 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.125", %"struct.std::__1::pair.125"* %0, i64 0, i32 0, i32 0, i32 0
  store i8** %30, i8*** %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.125", %"struct.std::__1::pair.125"* %0, i64 0, i32 0, i32 0, i32 1
  store i8** %19, i8*** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.125", %"struct.std::__1::pair.125"* %0, i64 0, i32 1
  store i8 %8, i8* %33, align 8, !alias.scope !81
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8**, i8 } @_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv(%"class.llvm::SmallPtrSetImplBase"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %8, label %45

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8*, i8** %4, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %8, %21
  %15 = phi i8** [ %24, %21 ], [ %4, %8 ]
  %16 = phi i64 [ %23, %21 ], [ 0, %8 ]
  %17 = phi i8** [ %24, %21 ], [ %6, %8 ]
  %18 = load i8*, i8** %15, align 8
  %19 = icmp eq i8* %18, %1
  %20 = ptrtoint i8** %17 to i64
  br i1 %19, label %50, label %21

21:                                               ; preds = %14
  %22 = icmp eq i8* %18, inttoptr (i64 -2 to i8*)
  %23 = select i1 %22, i64 %20, i64 %16
  %24 = getelementptr inbounds i8*, i8** %15, i64 1
  %25 = icmp eq i8** %12, %24
  br i1 %25, label %26, label %14

26:                                               ; preds = %21
  %27 = icmp eq i64 %23, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = inttoptr i64 %23 to i8**
  store i8* %1, i8** %29, align 8
  %30 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, -1
  store i32 %32, i32* %30, align 8
  br label %52

33:                                               ; preds = %8, %26
  %34 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp ult i32 %10, %35
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = add nuw i32 %10, 1
  store i32 %38, i32* %9, align 4
  store i8* %1, i8** %12, align 8
  %39 = load i8**, i8*** %5, align 8
  %40 = load i32, i32* %9, align 4
  %41 = add i32 %40, -1
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8*, i8** %39, i64 %42
  %44 = ptrtoint i8** %43 to i64
  br label %52

45:                                               ; preds = %33, %2
  %46 = tail call { i8**, i8 } @_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv(%"class.llvm::SmallPtrSetImplBase"* %0, i8* %1) #24
  %47 = extractvalue { i8**, i8 } %46, 0
  %48 = ptrtoint i8** %47 to i64
  %49 = extractvalue { i8**, i8 } %46, 1
  br label %52

50:                                               ; preds = %14
  %51 = ptrtoint i8** %17 to i64
  br label %52

52:                                               ; preds = %50, %37, %28, %45
  %53 = phi i64 [ %48, %45 ], [ %23, %28 ], [ %44, %37 ], [ %51, %50 ]
  %54 = phi i8 [ %49, %45 ], [ 1, %28 ], [ 1, %37 ], [ 0, %50 ]
  %55 = inttoptr i64 %53 to i8**
  %56 = insertvalue { i8**, i8 } undef, i8** %55, 0
  %57 = insertvalue { i8**, i8 } %56, i8 %54, 1
  ret { i8**, i8 } %57
}

; Function Attrs: optsize
declare { i8**, i8 } @_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv(%"class.llvm::SmallPtrSetImplBase"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallPtrSetImplIPNS_2cl10SubCommandEE6insertES3_(%"struct.std::__1::pair.132"* noalias sret, %"class.llvm::SmallPtrSetImpl"*, %"class.llvm::cl::SubCommand"*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.llvm::SmallPtrSetImpl"* %1 to %"class.llvm::SmallPtrSetImplBase"*
  %5 = bitcast %"class.llvm::cl::SubCommand"* %2 to i8*
  %6 = tail call { i8**, i8 } @_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv(%"class.llvm::SmallPtrSetImplBase"* %4, i8* %5) #23
  %7 = extractvalue { i8**, i8 } %6, 0
  %8 = extractvalue { i8**, i8 } %6, 1
  %9 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl", %"class.llvm::SmallPtrSetImpl"* %1, i64 0, i32 0, i32 1
  %10 = load i8**, i8*** %9, align 8
  %11 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl", %"class.llvm::SmallPtrSetImpl"* %1, i64 0, i32 0, i32 0
  %12 = load i8**, i8*** %11, align 8
  %13 = icmp eq i8** %10, %12
  %14 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl", %"class.llvm::SmallPtrSetImpl"* %1, i64 0, i32 0, i32 3
  %15 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl", %"class.llvm::SmallPtrSetImpl"* %1, i64 0, i32 0, i32 2
  %16 = select i1 %13, i32* %14, i32* %15
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i8*, i8** %10, i64 %18
  %20 = icmp eq i8** %7, %19
  br i1 %20, label %29, label %21

21:                                               ; preds = %3, %26
  %22 = phi i8** [ %27, %26 ], [ %7, %3 ]
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %24, -3
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds i8*, i8** %22, i64 1
  %28 = icmp eq i8** %27, %19
  br i1 %28, label %29, label %21

29:                                               ; preds = %21, %26, %3
  %30 = phi i8** [ %7, %3 ], [ %22, %21 ], [ %19, %26 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.132", %"struct.std::__1::pair.132"* %0, i64 0, i32 0, i32 0, i32 0
  store i8** %30, i8*** %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.132", %"struct.std::__1::pair.132"* %0, i64 0, i32 0, i32 0, i32 1
  store i8** %19, i8*** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.132", %"struct.std::__1::pair.132"* %0, i64 0, i32 1
  store i8 %8, i8* %33, align 8, !alias.scope !84
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZN4llvm19SmallPtrSetImplBase9erase_impEPKv(%"class.llvm::SmallPtrSetImplBase"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIcE6appendEmRKc(%"class.llvm::SmallVectorImpl.78"*, i64, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::SmallVectorImpl.78", %"class.llvm::SmallVectorImpl.78"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.llvm::SmallVectorImpl.78", %"class.llvm::SmallVectorImpl.78"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %1
  %12 = inttoptr i64 %9 to i8*
  br i1 %11, label %13, label %21

13:                                               ; preds = %3
  %14 = bitcast %"class.llvm::SmallVectorImpl.78"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %9, %1
  %17 = sub i64 %16, %15
  %18 = getelementptr inbounds %"class.llvm::SmallVectorImpl.78", %"class.llvm::SmallVectorImpl.78"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.llvm::SmallVectorImpl.78", %"class.llvm::SmallVectorImpl.78"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %18, i8* %19, i64 %17, i64 1) #24
  %20 = load i8*, i8** %7, align 8
  br label %23

21:                                               ; preds = %3
  %22 = icmp eq i64 %1, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %13, %21
  %24 = phi i8* [ %12, %21 ], [ %20, %13 ]
  br label %25

25:                                               ; preds = %23, %25
  %26 = phi i8* [ %29, %25 ], [ %24, %23 ]
  %27 = phi i64 [ %30, %25 ], [ %1, %23 ]
  %28 = load i8, i8* %2, align 1
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 1
  %30 = add i64 %27, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = load i8*, i8** %7, align 8
  br label %34

34:                                               ; preds = %32, %21
  %35 = phi i8* [ %33, %32 ], [ %12, %21 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %1
  store i8* %36, i8** %7, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN4llvm12MemoryBuffer7getFileERKNS_5TwineElbb(%"class.llvm::ErrorOr"* sret, %"class.llvm::Twine"* dereferenceable(24), i64, i1 zeroext, i1 zeroext) local_unnamed_addr #3

; Function Attrs: optsize
declare zeroext i1 @_ZN4llvm21hasUTF16ByteOrderMarkENS_8ArrayRefIcEE(i8*, i64) local_unnamed_addr #3

; Function Attrs: optsize
declare zeroext i1 @_ZN4llvm24convertUTF16ToUTF8StringENS_8ArrayRefIcEERNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: optsize
declare zeroext i1 @_ZN4llvm3sys4path11is_relativeERKNS_5TwineE(%"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: optsize
declare { i32, %"class.std::__1::error_category"* } @_ZN4llvm3sys2fs12current_pathERNS_15SmallVectorImplIcEE(%"class.llvm::SmallVectorImpl.78"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_(%"class.llvm::SmallVectorImpl.78"* dereferenceable(32), %"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24), %"class.llvm::Twine"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: optsize
declare { i8*, i64 } @_ZN4llvm3sys4path11parent_pathENS_9StringRefE(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIcE6appendIPKcEEvT_S5_(%"class.llvm::SmallVectorImpl.78"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.llvm::SmallVectorImpl.78", %"class.llvm::SmallVectorImpl.78"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallVectorImpl.78", %"class.llvm::SmallVectorImpl.78"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %9, %12
  %14 = icmp ugt i64 %6, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %3
  %16 = bitcast %"class.llvm::SmallVectorImpl.78"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %12, %6
  %19 = sub i64 %18, %17
  %20 = getelementptr inbounds %"class.llvm::SmallVectorImpl.78", %"class.llvm::SmallVectorImpl.78"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.llvm::SmallVectorImpl.78", %"class.llvm::SmallVectorImpl.78"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %20, i8* %21, i64 %19, i64 1) #24
  br label %22

22:                                               ; preds = %15, %3
  %23 = icmp eq i8* %1, %2
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = load i8*, i8** %10, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %1, i64 %6, i1 false) #22
  br label %26

26:                                               ; preds = %22, %24
  %27 = load i8*, i8** %10, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %6
  store i8* %28, i8** %10, align 8
  ret void
}

; Function Attrs: optsize
declare { i8*, i64 } @_ZN4llvm3sys4path8filenameENS_9StringRefE(i8*, i64) local_unnamed_addr #3

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairINS_9StringRefEjEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.143"*, %"struct.std::__1::pair.147"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.143", %"class.llvm::SmallVectorTemplateBase.143"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.143", %"class.llvm::SmallVectorTemplateBase.143"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !30

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.143", %"class.llvm::SmallVectorTemplateBase.143"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.143", %"class.llvm::SmallVectorTemplateBase.143"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 24) #24
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.147"**
  %15 = bitcast %"struct.std::__1::pair.147"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 24, i1 false)
  %16 = load %"struct.std::__1::pair.147"*, %"struct.std::__1::pair.147"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.147", %"struct.std::__1::pair.147"* %16, i64 1
  store %"struct.std::__1::pair.147"* %17, %"struct.std::__1::pair.147"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc %"class.llvm::cl::Option"* @_ZN12_GLOBAL__N_117CommandLineParser12LookupOptionERN4llvm2cl10SubCommandERNS1_9StringRefES6_(%"class.llvm::cl::SubCommand"* dereferenceable(184), %"class.llvm::StringRef"* nocapture dereferenceable(16), %"class.llvm::StringRef"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %68, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %1, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i8* @memchr(i8* %9, i32 61, i64 %5) #27
  %11 = icmp eq i8* %10, null
  %12 = ptrtoint i8* %10 to i64
  %13 = ptrtoint i8* %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, -1
  %16 = or i1 %11, %15
  %17 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 4
  br i1 %16, label %18, label %36

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %17, i64 0, i32 0
  %20 = tail call i32 @_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE(%"class.llvm::StringMapImpl"* %19, i8* %9, i64 %5) #24
  %21 = icmp eq i32 %20, -1
  %22 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 4, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = sext i32 %20 to i64
  %26 = select i1 %21, i64 %24, i64 %25
  %27 = icmp eq i64 %26, %24
  br i1 %27, label %68, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %17, i64 0, i32 0, i32 0
  %30 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %29, align 8
  %31 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %30, i64 %26
  %32 = bitcast %"class.llvm::StringMapEntryBase"** %31 to %"class.llvm::StringMapEntry"**
  %33 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %32, align 8
  %34 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %33, i64 0, i32 1
  %35 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %34, align 8
  br label %68

36:                                               ; preds = %7
  %37 = icmp ult i64 %5, %14
  %38 = select i1 %37, i64 %5, i64 %14
  %39 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %17, i64 0, i32 0
  %40 = tail call i32 @_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE(%"class.llvm::StringMapImpl"* %39, i8* %9, i64 %38) #24
  %41 = icmp eq i32 %40, -1
  %42 = getelementptr inbounds %"class.llvm::cl::SubCommand", %"class.llvm::cl::SubCommand"* %0, i64 0, i32 4, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = sext i32 %40 to i64
  %46 = select i1 %41, i64 %44, i64 %45
  %47 = icmp eq i64 %46, %44
  br i1 %47, label %68, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %17, i64 0, i32 0, i32 0
  %50 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %49, align 8
  %51 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %50, i64 %46
  %52 = add nuw i64 %14, 1
  %53 = load i64, i64* %4, align 8
  %54 = icmp ult i64 %53, %52
  %55 = select i1 %54, i64 %53, i64 %52
  %56 = load i8*, i8** %8, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  %58 = sub i64 %53, %55
  %59 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %2, i64 0, i32 0
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %2, i64 0, i32 1
  store i64 %58, i64* %60, align 8
  %61 = load i64, i64* %4, align 8
  %62 = icmp ult i64 %61, %14
  %63 = select i1 %62, i64 %61, i64 %14
  store i64 %63, i64* %4, align 8
  %64 = bitcast %"class.llvm::StringMapEntryBase"** %51 to %"class.llvm::StringMapEntry"**
  %65 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %64, align 8
  %66 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %65, i64 0, i32 1
  %67 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %66, align 8
  br label %68

68:                                               ; preds = %48, %36, %28, %18, %3
  %69 = phi %"class.llvm::cl::Option"* [ null, %3 ], [ %35, %28 ], [ null, %18 ], [ %67, %48 ], [ null, %36 ]
  ret %"class.llvm::cl::Option"* %69
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @_ZL13ProvideOptionPN4llvm2cl6OptionENS_9StringRefES3_iPKPKcRi(%"class.llvm::cl::Option"*, i8*, i64, i8*, i64, i32, i8** nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #9 {
  %9 = alloca %"class.llvm::StringRef", align 8
  %10 = alloca %"class.llvm::Twine", align 8
  %11 = alloca %"class.llvm::Twine", align 8
  %12 = alloca %"class.llvm::Twine", align 8
  %13 = alloca %"class.llvm::Twine", align 8
  %14 = alloca %"class.llvm::Twine", align 8
  %15 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 0
  store i8* %3, i8** %15, align 8
  %16 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %9, i64 0, i32 1
  store i64 %4, i64* %16, align 8
  %17 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 2
  %20 = load i16, i16* %19, align 4
  %21 = lshr i16 %20, 3
  %22 = and i16 %21, 3
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %8
  %25 = zext i16 %22 to i32
  br label %32

26:                                               ; preds = %8
  %27 = bitcast %"class.llvm::cl::Option"* %0 to i32 (%"class.llvm::cl::Option"*)***
  %28 = load i32 (%"class.llvm::cl::Option"*)**, i32 (%"class.llvm::cl::Option"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.llvm::cl::Option"*)*, i32 (%"class.llvm::cl::Option"*)** %28, i64 1
  %30 = load i32 (%"class.llvm::cl::Option"*)*, i32 (%"class.llvm::cl::Option"*)** %29, align 8
  %31 = tail call i32 %30(%"class.llvm::cl::Option"* %0) #24
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i32 [ %25, %24 ], [ %31, %26 ]
  switch i32 %33, label %80 [
    i32 2, label %34
    i32 3, label %55
  ]

34:                                               ; preds = %32
  %35 = icmp eq i8* %3, null
  br i1 %35, label %36, label %80

36:                                               ; preds = %34
  %37 = load i32, i32* %7, align 4
  %38 = add nsw i32 %37, 1
  %39 = icmp slt i32 %38, %5
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.llvm::Twine"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #22
  %42 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 3
  store i8 1, i8* %42, align 1
  %43 = bitcast %"class.llvm::Twine"* %10 to i8**
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.84, i64 0, i64 0), i8** %43, align 8
  %44 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %10, i64 0, i32 2
  store i8 3, i8* %44, align 8
  %45 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %0, %"class.llvm::Twine"* nonnull dereferenceable(24) %10, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #22
  br label %125

46:                                               ; preds = %36
  store i32 %38, i32* %7, align 4
  %47 = sext i32 %38 to i64
  %48 = getelementptr inbounds i8*, i8** %6, i64 %47
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  %52 = tail call i64 @strlen(i8* nonnull %49) #27
  br label %53

53:                                               ; preds = %46, %51
  %54 = phi i64 [ %52, %51 ], [ 0, %46 ]
  store i8* %49, i8** %15, align 8
  store i64 %54, i64* %16, align 8
  br label %80

55:                                               ; preds = %32
  %56 = icmp eq i32 %18, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.llvm::Twine"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #22
  %59 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 3
  store i8 1, i8* %59, align 1
  %60 = bitcast %"class.llvm::Twine"* %11 to i8**
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.85, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %11, i64 0, i32 2
  store i8 3, i8* %61, align 8
  %62 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %0, %"class.llvm::Twine"* nonnull dereferenceable(24) %11, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #22
  br label %125

63:                                               ; preds = %55
  %64 = icmp eq i8* %3, null
  br i1 %64, label %84, label %65

65:                                               ; preds = %63
  %66 = bitcast %"class.llvm::Twine"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #22
  %67 = bitcast %"class.llvm::Twine"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #22
  %68 = ptrtoint %"class.llvm::StringRef"* %9 to i64
  %69 = bitcast %"class.llvm::Twine"* %13 to i64*
  store i64 ptrtoint ([26 x i8]* @.str.86 to i64), i64* %69, align 8, !alias.scope !87
  %70 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 1, i32 0
  %71 = bitcast %"class.llvm::Twine"** %70 to i64*
  store i64 %68, i64* %71, align 8, !alias.scope !87
  %72 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 2
  store i8 3, i8* %72, align 8, !alias.scope !87
  %73 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %13, i64 0, i32 3
  store i8 5, i8* %73, align 1, !alias.scope !87
  %74 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 0, i32 0
  store %"class.llvm::Twine"* %13, %"class.llvm::Twine"** %74, align 8, !alias.scope !92
  %75 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 1, i32 0
  %76 = bitcast %"class.llvm::Twine"** %75 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.87 to i64), i64* %76, align 8, !alias.scope !92
  %77 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 2
  store i8 2, i8* %77, align 8, !alias.scope !92
  %78 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %12, i64 0, i32 3
  store i8 3, i8* %78, align 1, !alias.scope !92
  %79 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %0, %"class.llvm::Twine"* nonnull dereferenceable(24) %12, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #22
  br label %125

80:                                               ; preds = %34, %53, %32
  %81 = phi i64 [ %4, %34 ], [ %54, %53 ], [ %4, %32 ]
  %82 = phi i8* [ %3, %34 ], [ %49, %53 ], [ %3, %32 ]
  %83 = icmp eq i32 %18, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %63, %80
  %85 = phi i64 [ %4, %63 ], [ %81, %80 ]
  %86 = phi i8* [ null, %63 ], [ %82, %80 ]
  %87 = load i32, i32* %7, align 4
  %88 = tail call fastcc zeroext i1 @_ZL29CommaSeparateAndAddOccurrencePN4llvm2cl6OptionEjNS_9StringRefES3_b(%"class.llvm::cl::Option"* %0, i32 %87, i8* %1, i64 %2, i8* %86, i64 %85, i1 zeroext false) #23
  br label %125

89:                                               ; preds = %80
  %90 = icmp eq i8* %82, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %89
  %92 = load i32, i32* %7, align 4
  %93 = tail call fastcc zeroext i1 @_ZL29CommaSeparateAndAddOccurrencePN4llvm2cl6OptionEjNS_9StringRefES3_b(%"class.llvm::cl::Option"* %0, i32 %92, i8* %1, i64 %2, i8* nonnull %82, i64 %81, i1 zeroext false) #23
  br i1 %93, label %125, label %94

94:                                               ; preds = %91
  %95 = add i32 %18, -1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %125, label %97

97:                                               ; preds = %89, %94
  %98 = phi i32 [ %18, %89 ], [ %95, %94 ]
  %99 = phi i1 [ false, %89 ], [ true, %94 ]
  br label %102

100:                                              ; preds = %121
  %101 = icmp eq i32 %124, 0
  br i1 %101, label %125, label %102

102:                                              ; preds = %97, %100
  %103 = phi i32 [ %124, %100 ], [ %98, %97 ]
  %104 = phi i1 [ true, %100 ], [ %99, %97 ]
  %105 = load i32, i32* %7, align 4
  %106 = add nsw i32 %105, 1
  %107 = icmp slt i32 %106, %5
  br i1 %107, label %114, label %108

108:                                              ; preds = %102
  %109 = bitcast %"class.llvm::Twine"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #22
  %110 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %14, i64 0, i32 3
  store i8 1, i8* %110, align 1
  %111 = bitcast %"class.llvm::Twine"* %14 to i8**
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.88, i64 0, i64 0), i8** %111, align 8
  %112 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %14, i64 0, i32 2
  store i8 3, i8* %112, align 8
  %113 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %0, %"class.llvm::Twine"* nonnull dereferenceable(24) %14, i8* null, i64 0) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #22
  br label %125

114:                                              ; preds = %102
  store i32 %106, i32* %7, align 4
  %115 = sext i32 %106 to i64
  %116 = getelementptr inbounds i8*, i8** %6, i64 %115
  %117 = load i8*, i8** %116, align 8
  %118 = icmp eq i8* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %114
  %120 = tail call i64 @strlen(i8* nonnull %117) #27
  br label %121

121:                                              ; preds = %114, %119
  %122 = phi i64 [ %120, %119 ], [ 0, %114 ]
  store i8* %117, i8** %15, align 8
  store i64 %122, i64* %16, align 8
  %123 = tail call fastcc zeroext i1 @_ZL29CommaSeparateAndAddOccurrencePN4llvm2cl6OptionEjNS_9StringRefES3_b(%"class.llvm::cl::Option"* %0, i32 %106, i8* %1, i64 %2, i8* %117, i64 %122, i1 zeroext %104) #23
  %124 = add i32 %103, -1
  br i1 %123, label %125, label %100

125:                                              ; preds = %100, %121, %94, %108, %91, %84, %65, %57, %40
  %126 = phi i1 [ %88, %84 ], [ true, %57 ], [ true, %65 ], [ true, %40 ], [ true, %108 ], [ true, %91 ], [ false, %94 ], [ false, %100 ], [ true, %121 ]
  ret i1 %126
}

; Function Attrs: noreturn nounwind optsize
declare void @exit(i32) local_unnamed_addr #11

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIPKcE6appendIPKS2_EEvT_S7_(%"class.llvm::SmallVectorImpl.73"*, i8**, i8**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8** %2 to i64
  %5 = ptrtoint i8** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i8***
  %13 = bitcast i8** %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %10, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ugt i64 %7, %16
  br i1 %17, label %18, label %26

18:                                               ; preds = %3
  %19 = bitcast %"class.llvm::SmallVectorImpl.73"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %14, %6
  %22 = sub i64 %21, %20
  %23 = and i64 %22, -8
  %24 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %24, i8* %25, i64 %23, i64 8) #24
  br label %26

26:                                               ; preds = %18, %3
  %27 = icmp eq i8** %1, %2
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = load i8*, i8** %11, align 8
  %30 = bitcast i8** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %6, i1 false) #22
  br label %31

31:                                               ; preds = %26, %28
  %32 = load i8**, i8*** %12, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 %7
  store i8** %33, i8*** %12, align 8
  ret void
}

; Function Attrs: nofree nounwind optsize readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #15

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc %"class.llvm::cl::Option"* @_ZL13getOptionPredN4llvm9StringRefERmPFbPKNS_2cl6OptionEERKNS_9StringMapIPS3_NS_15MallocAllocatorEEE(i8*, i64, i64* nocapture dereferenceable(8), i1 (%"class.llvm::cl::Option"*)* nocapture, %"class.llvm::StringMap"* dereferenceable(32)) unnamed_addr #0 {
  %6 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %4, i64 0, i32 0
  %7 = tail call i32 @_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE(%"class.llvm::StringMapImpl"* %6, i8* %0, i64 %1) #24
  %8 = icmp eq i32 %7, -1
  %9 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %9, align 8
  br i1 %8, label %11, label %15

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %4, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  br label %20

15:                                               ; preds = %5
  %16 = sext i32 %7 to i64
  %17 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %4, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  br label %20

20:                                               ; preds = %11, %15
  %21 = phi i64 [ %14, %11 ], [ %19, %15 ]
  %22 = phi i64 [ %14, %11 ], [ %16, %15 ]
  %23 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %10, i64 %22
  %24 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %4, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %10, i64 %21
  %26 = icmp eq i64 %22, %21
  %27 = icmp ugt i64 %1, 1
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %53

29:                                               ; preds = %20, %44
  %30 = phi i64 [ %33, %44 ], [ %1, %20 ]
  %31 = add i64 %30, -1
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i64 %30, i64 %31
  %34 = tail call i32 @_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE(%"class.llvm::StringMapImpl"* %6, i8* %0, i64 %33) #24
  %35 = icmp eq i32 %34, -1
  %36 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %9, align 8
  br i1 %35, label %37, label %40

37:                                               ; preds = %29
  %38 = load i32, i32* %24, align 8
  %39 = zext i32 %38 to i64
  br label %44

40:                                               ; preds = %29
  %41 = sext i32 %34 to i64
  %42 = load i32, i32* %24, align 8
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %37, %40
  %45 = phi i64 [ %39, %37 ], [ %43, %40 ]
  %46 = phi i64 [ %39, %37 ], [ %41, %40 ]
  %47 = icmp eq i64 %46, %45
  %48 = icmp ugt i64 %33, 1
  %49 = and i1 %48, %47
  br i1 %49, label %29, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %36, i64 %46
  %52 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %36, i64 %45
  br label %53

53:                                               ; preds = %50, %20
  %54 = phi %"class.llvm::StringMapEntryBase"** [ %23, %20 ], [ %51, %50 ]
  %55 = phi i64 [ %1, %20 ], [ %33, %50 ]
  %56 = phi %"class.llvm::StringMapEntryBase"** [ %25, %20 ], [ %52, %50 ]
  %57 = icmp eq %"class.llvm::StringMapEntryBase"** %54, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.llvm::StringMapEntryBase"** %54 to %"class.llvm::StringMapEntry"**
  %60 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %59, align 8
  %61 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %60, i64 0, i32 1
  %62 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %61, align 8
  %63 = tail call zeroext i1 %3(%"class.llvm::cl::Option"* %62) #24, !callees !97
  br i1 %63, label %64, label %68

64:                                               ; preds = %58
  store i64 %55, i64* %2, align 8
  %65 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %59, align 8
  %66 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %65, i64 0, i32 1
  %67 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %66, align 8
  br label %68

68:                                               ; preds = %53, %58, %64
  %69 = phi %"class.llvm::cl::Option"* [ %67, %64 ], [ null, %58 ], [ null, %53 ]
  ret %"class.llvm::cl::Option"* %69
}

; Function Attrs: inlinehint norecurse nounwind optsize readonly ssp uwtable
define internal zeroext i1 @_ZL20isPrefixedOrGroupingPKN4llvm2cl6OptionE(%"class.llvm::cl::Option"* nocapture readonly) #16 {
  %2 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 2
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 256
  %5 = or i16 %4, 128
  %6 = icmp eq i16 %5, 384
  ret i1 %6
}

; Function Attrs: inlinehint norecurse nounwind optsize readonly ssp uwtable
define internal zeroext i1 @_ZL10isGroupingPKN4llvm2cl6OptionE(%"class.llvm::cl::Option"* nocapture readonly) #16 {
  %2 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 2
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 384
  %5 = icmp eq i16 %4, 384
  ret i1 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK4llvm9StringRef5splitEc(%"struct.std::__1::pair.151"* noalias sret, %"class.llvm::StringRef"*, i8 signext) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %1, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = sext i8 %2 to i32
  %11 = tail call i8* @memchr(i8* %9, i32 %10, i64 %5) #27
  %12 = icmp eq i8* %11, null
  %13 = ptrtoint i8* %11 to i64
  %14 = ptrtoint i8* %9 to i64
  %15 = sub i64 %13, %14
  %16 = icmp eq i64 %15, -1
  %17 = or i1 %12, %16
  br i1 %17, label %18, label %23

18:                                               ; preds = %3, %7
  %19 = bitcast %"struct.std::__1::pair.151"* %0 to i8*
  %20 = bitcast %"class.llvm::StringRef"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false) #22
  %21 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %0, i64 0, i32 1
  %22 = bitcast %"class.llvm::StringRef"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  br label %35

23:                                               ; preds = %7
  %24 = icmp ult i64 %5, %15
  %25 = select i1 %24, i64 %5, i64 %15
  %26 = add nuw i64 %15, 1
  %27 = icmp ult i64 %5, %26
  %28 = select i1 %27, i64 %5, i64 %26
  %29 = getelementptr inbounds i8, i8* %9, i64 %28
  %30 = sub i64 %5, %28
  %31 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %0, i64 0, i32 0, i32 0
  store i8* %9, i8** %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %0, i64 0, i32 0, i32 1
  store i64 %25, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %0, i64 0, i32 1, i32 0
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.151", %"struct.std::__1::pair.151"* %0, i64 0, i32 1, i32 1
  store i64 %30, i64* %34, align 8
  br label %35

35:                                               ; preds = %23, %18
  ret void
}

; Function Attrs: optsize
declare i32 @_ZNK4llvm9StringRef13edit_distanceES0_bj(%"class.llvm::StringRef"*, i8*, i64, i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZNK4llvm5Twine3strEv(%"class.std::__1::basic_string"* sret, %"class.llvm::Twine"*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @_ZL29CommaSeparateAndAddOccurrencePN4llvm2cl6OptionEjNS_9StringRefES3_b(%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1 zeroext) unnamed_addr #0 {
  %8 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %0, i64 0, i32 2
  %9 = load i16, i16* %8, align 4
  %10 = and i16 %9, 512
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %49, label %12

12:                                               ; preds = %7
  %13 = icmp eq i64 %5, 0
  br i1 %13, label %49, label %14

14:                                               ; preds = %12
  %15 = tail call i8* @memchr(i8* %4, i32 44, i64 %5) #27
  %16 = icmp eq i8* %15, null
  %17 = ptrtoint i8* %15 to i64
  %18 = ptrtoint i8* %4 to i64
  %19 = sub i64 %17, %18
  %20 = icmp eq i64 %19, -1
  %21 = or i1 %16, %20
  br i1 %21, label %49, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.llvm::cl::Option"* %0 to i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)***
  br label %24

24:                                               ; preds = %41, %22
  %25 = phi i64 [ %19, %22 ], [ %46, %41 ]
  %26 = phi i8* [ %4, %22 ], [ %38, %41 ]
  %27 = phi i64 [ %5, %22 ], [ %39, %41 ]
  %28 = icmp ult i64 %27, %25
  %29 = select i1 %28, i64 %27, i64 %25
  %30 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)**, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*** %23, align 8
  %31 = getelementptr inbounds i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)** %30, i64 9
  %32 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.llvm::cl::Option"* %0, i32 %1, i8* %2, i64 %3, i8* %26, i64 %29, i1 zeroext %6) #24
  br i1 %33, label %57, label %34

34:                                               ; preds = %24
  %35 = add nuw i64 %25, 1
  %36 = icmp ult i64 %27, %35
  %37 = select i1 %36, i64 %27, i64 %35
  %38 = getelementptr inbounds i8, i8* %26, i64 %37
  %39 = sub i64 %27, %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %34
  %42 = tail call i8* @memchr(i8* %38, i32 44, i64 %39) #27
  %43 = icmp eq i8* %42, null
  %44 = ptrtoint i8* %42 to i64
  %45 = ptrtoint i8* %38 to i64
  %46 = sub i64 %44, %45
  %47 = icmp eq i64 %46, -1
  %48 = or i1 %43, %47
  br i1 %48, label %49, label %24

49:                                               ; preds = %34, %41, %12, %14, %7
  %50 = phi i8* [ %4, %7 ], [ %4, %14 ], [ %4, %12 ], [ %38, %41 ], [ %38, %34 ]
  %51 = phi i64 [ %5, %7 ], [ %5, %14 ], [ 0, %12 ], [ 0, %34 ], [ %39, %41 ]
  %52 = bitcast %"class.llvm::cl::Option"* %0 to i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)***
  %53 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)**, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)** %53, i64 9
  %55 = load i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)*, i1 (%"class.llvm::cl::Option"*, i32, i8*, i64, i8*, i64, i1)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.llvm::cl::Option"* %0, i32 %1, i8* %2, i64 %3, i8* %50, i64 %51, i1 zeroext %6) #24
  br label %57

57:                                               ; preds = %24, %49
  %58 = phi i1 [ %56, %49 ], [ true, %24 ]
  ret i1 %58
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZNK4llvm5Twine5printERNS_11raw_ostreamE(%"class.llvm::Twine"*, %"class.llvm::raw_ostream"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nofree nounwind optsize
declare double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #13

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_111HelpPrinter12printOptionsERN4llvm11SmallVectorINSt3__14pairIPKcPNS1_2cl6OptionEEELj128EEEm(%"class.(anonymous namespace)::HelpPrinter"* nocapture readnone, %"class.llvm::SmallVector.155"* nocapture readonly dereferenceable(2072), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector.155"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %3
  %13 = inttoptr i64 %8 to %"struct.std::__1::pair.161"*
  %14 = bitcast %"class.llvm::SmallVector.155"* %1 to %"struct.std::__1::pair.161"**
  %15 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %13, i64 0, i32 1
  %16 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %15, align 8
  %17 = bitcast %"class.llvm::cl::Option"* %16 to void (%"class.llvm::cl::Option"*, i64)***
  %18 = load void (%"class.llvm::cl::Option"*, i64)**, void (%"class.llvm::cl::Option"*, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.llvm::cl::Option"*, i64)*, void (%"class.llvm::cl::Option"*, i64)** %18, i64 6
  %20 = load void (%"class.llvm::cl::Option"*, i64)*, void (%"class.llvm::cl::Option"*, i64)** %19, align 8
  tail call void %20(%"class.llvm::cl::Option"* %16, i64 %2) #24
  %21 = icmp eq i64 %9, 16
  br i1 %21, label %22, label %23

22:                                               ; preds = %23, %12, %3
  ret void

23:                                               ; preds = %12, %23
  %24 = phi i64 [ %32, %23 ], [ 1, %12 ]
  %25 = load %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"** %14, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %25, i64 %24, i32 1
  %27 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %26, align 8
  %28 = bitcast %"class.llvm::cl::Option"* %27 to void (%"class.llvm::cl::Option"*, i64)***
  %29 = load void (%"class.llvm::cl::Option"*, i64)**, void (%"class.llvm::cl::Option"*, i64)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.llvm::cl::Option"*, i64)*, void (%"class.llvm::cl::Option"*, i64)** %29, i64 6
  %31 = load void (%"class.llvm::cl::Option"*, i64)*, void (%"class.llvm::cl::Option"*, i64)** %30, align 8
  tail call void %31(%"class.llvm::cl::Option"* %27, i64 %2) #24
  %32 = add i64 %24, 1
  %33 = icmp eq i64 %32, %10
  br i1 %33, label %22, label %23
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_111HelpPrinterD0Ev(%"class.(anonymous namespace)::HelpPrinter"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::HelpPrinter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #25
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CategorizedHelpPrinter12printOptionsERN4llvm11SmallVectorINSt3__14pairIPKcPNS1_2cl6OptionEEELj128EEEm(%"class.(anonymous namespace)::CategorizedHelpPrinter"* nocapture readonly, %"class.llvm::SmallVector.155"* nocapture readonly dereferenceable(2072), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.191", align 1
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.191", align 1
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.191", align 1
  %10 = alloca %"class.std::__1::vector.162", align 8
  %11 = alloca %"class.std::__1::map", align 8
  %12 = bitcast %"class.std::__1::vector.162"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #22
  %13 = getelementptr inbounds %"class.std::__1::vector.162", %"class.std::__1::vector.162"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.162", %"class.std::__1::vector.162"* %10, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.162", %"class.std::__1::vector.162"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #22
  %16 = bitcast %"class.std::__1::map"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #22
  %17 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node_base"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #22
  store %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"** %17, align 8
  %21 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %3
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %24

24:                                               ; preds = %3, %23
  %25 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %26 = inttoptr i64 %25 to %"class.(anonymous namespace)::CommandLineParser"*
  %27 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %26, i64 0, i32 3, i32 0, i32 0, i32 1
  %28 = load i8**, i8*** %27, align 8
  %29 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load i8**, i8*** %29, align 8
  %31 = icmp eq i8** %28, %30
  %32 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %26, i64 0, i32 3, i32 0, i32 0, i32 3
  %33 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %26, i64 0, i32 3, i32 0, i32 0, i32 2
  %34 = select i1 %31, i32* %32, i32* %33
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8*, i8** %28, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %24, %44
  %40 = phi i8** [ %45, %44 ], [ %28, %24 ]
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %42, -3
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds i8*, i8** %40, i64 1
  %46 = icmp eq i8** %45, %37
  br i1 %46, label %47, label %39

47:                                               ; preds = %39, %44, %24
  %48 = phi i8** [ %28, %24 ], [ %37, %44 ], [ %40, %39 ]
  %49 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %52

52:                                               ; preds = %47, %51
  %53 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %54 = inttoptr i64 %53 to %"class.(anonymous namespace)::CommandLineParser"*
  %55 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %54, i64 0, i32 3, i32 0, i32 0, i32 1
  %56 = load i8**, i8*** %55, align 8
  %57 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load i8**, i8*** %57, align 8
  %59 = icmp eq i8** %56, %58
  %60 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %54, i64 0, i32 3, i32 0, i32 0, i32 3
  %61 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %54, i64 0, i32 3, i32 0, i32 0, i32 2
  %62 = select i1 %59, i32* %60, i32* %61
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i8*, i8** %56, i64 %64
  %66 = icmp eq i8** %48, %65
  %67 = bitcast %"class.llvm::cl::OptionCategory"*** %14 to i64*
  br i1 %66, label %71, label %68

68:                                               ; preds = %52
  %69 = bitcast %"class.std::__1::vector.162"* %10 to i64*
  %70 = bitcast %"class.llvm::cl::OptionCategory"*** %15 to i64*
  br label %92

71:                                               ; preds = %159, %52
  %72 = load %"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"*** %13, align 8
  %73 = load i64, i64* %67, align 8
  %74 = ptrtoint %"class.llvm::cl::OptionCategory"** %72 to i64
  %75 = sub i64 %73, %74
  %76 = icmp slt i64 %75, 16
  %77 = inttoptr i64 %73 to %"class.llvm::cl::OptionCategory"**
  br i1 %76, label %83, label %78

78:                                               ; preds = %71
  %79 = lshr exact i64 %75, 3
  %80 = bitcast %"class.llvm::cl::OptionCategory"** %72 to i8*
  call void @qsort(i8* %80, i64 %79, i64 8, i32 (i8*, i8*)* bitcast (i32 (%"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"**)* @_ZN12_GLOBAL__N_122CategorizedHelpPrinter21OptionCategoryCompareEPKPN4llvm2cl14OptionCategoryES6_ to i32 (i8*, i8*)*)) #24
  %81 = load %"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"*** %13, align 8
  %82 = load %"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"*** %14, align 8
  br label %83

83:                                               ; preds = %71, %78
  %84 = phi %"class.llvm::cl::OptionCategory"** [ %77, %71 ], [ %82, %78 ]
  %85 = phi %"class.llvm::cl::OptionCategory"** [ %72, %71 ], [ %81, %78 ]
  %86 = icmp eq %"class.llvm::cl::OptionCategory"** %85, %84
  br i1 %86, label %162, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0
  %89 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %90 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::tuple.191", %"class.std::__1::tuple.191"* %7, i64 0, i32 0
  br label %178

92:                                               ; preds = %68, %159
  %93 = phi i8** [ %48, %68 ], [ %160, %159 ]
  %94 = bitcast i8** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = load %"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"*** %14, align 8
  %97 = load %"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"*** %15, align 8
  %98 = icmp ult %"class.llvm::cl::OptionCategory"** %96, %97
  %99 = ptrtoint %"class.llvm::cl::OptionCategory"** %97 to i64
  br i1 %98, label %100, label %104

100:                                              ; preds = %92
  %101 = bitcast %"class.llvm::cl::OptionCategory"** %96 to i64*
  store i64 %95, i64* %101, align 8
  %102 = getelementptr inbounds %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %96, i64 1
  %103 = ptrtoint %"class.llvm::cl::OptionCategory"** %102 to i64
  store i64 %103, i64* %67, align 8
  br label %148

104:                                              ; preds = %92
  %105 = ptrtoint %"class.llvm::cl::OptionCategory"** %96 to i64
  %106 = load i64, i64* %69, align 8
  %107 = sub i64 %105, %106
  %108 = ashr exact i64 %107, 3
  %109 = add nsw i64 %108, 1
  %110 = icmp ugt i64 %109, 2305843009213693951
  br i1 %110, label %111, label %113

111:                                              ; preds = %104
  %112 = bitcast %"class.std::__1::vector.162"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %112) #26
  unreachable

113:                                              ; preds = %104
  %114 = sub i64 %99, %106
  %115 = ashr exact i64 %114, 3
  %116 = icmp ult i64 %115, 1152921504606846975
  br i1 %116, label %117, label %125

117:                                              ; preds = %113
  %118 = ashr exact i64 %114, 2
  %119 = icmp ult i64 %118, %109
  %120 = select i1 %119, i64 %109, i64 %118
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %130, label %122

122:                                              ; preds = %117
  %123 = icmp ugt i64 %120, 2305843009213693951
  br i1 %123, label %124, label %125

124:                                              ; preds = %122
  call void @abort() #26
  unreachable

125:                                              ; preds = %122, %113
  %126 = phi i64 [ %120, %122 ], [ 2305843009213693951, %113 ]
  %127 = shl i64 %126, 3
  %128 = call i8* @_Znwm(i64 %127) #25
  %129 = bitcast i8* %128 to %"class.llvm::cl::OptionCategory"**
  br label %130

130:                                              ; preds = %125, %117
  %131 = phi i64 [ %126, %125 ], [ 0, %117 ]
  %132 = phi i8* [ %128, %125 ], [ null, %117 ]
  %133 = phi %"class.llvm::cl::OptionCategory"** [ %129, %125 ], [ null, %117 ]
  %134 = getelementptr inbounds %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %133, i64 %108
  %135 = getelementptr inbounds %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %133, i64 %131
  %136 = ptrtoint %"class.llvm::cl::OptionCategory"** %135 to i64
  %137 = bitcast %"class.llvm::cl::OptionCategory"** %134 to i64*
  store i64 %95, i64* %137, align 8
  %138 = getelementptr inbounds %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %134, i64 1
  %139 = ptrtoint %"class.llvm::cl::OptionCategory"** %138 to i64
  %140 = ptrtoint %"class.llvm::cl::OptionCategory"** %133 to i64
  %141 = icmp sgt i64 %107, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %130
  %143 = inttoptr i64 %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %143, i64 %107, i1 false) #22
  br label %144

144:                                              ; preds = %142, %130
  store i64 %140, i64* %69, align 8
  store i64 %139, i64* %67, align 8
  store i64 %136, i64* %70, align 8
  %145 = icmp eq i64 %106, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %106 to i8*
  call void @_ZdlPv(i8* %147) #25
  br label %148

148:                                              ; preds = %100, %144, %146
  %149 = getelementptr inbounds i8*, i8** %93, i64 1
  %150 = icmp eq i8** %149, %37
  br i1 %150, label %159, label %151

151:                                              ; preds = %148, %156
  %152 = phi i8** [ %157, %156 ], [ %149, %148 ]
  %153 = bitcast i8** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = icmp ugt i64 %154, -3
  br i1 %155, label %156, label %159

156:                                              ; preds = %151
  %157 = getelementptr inbounds i8*, i8** %152, i64 1
  %158 = icmp eq i8** %157, %37
  br i1 %158, label %159, label %151

159:                                              ; preds = %151, %156, %148
  %160 = phi i8** [ %37, %148 ], [ %152, %151 ], [ %37, %156 ]
  %161 = icmp eq i8** %160, %65
  br i1 %161, label %71, label %92

162:                                              ; preds = %192, %83
  %163 = getelementptr inbounds %"class.llvm::SmallVector.155", %"class.llvm::SmallVector.155"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = bitcast i8** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.llvm::SmallVector.155"* %1 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %165, %167
  %169 = ashr exact i64 %168, 4
  %170 = icmp eq i64 %168, 0
  br i1 %170, label %196, label %171

171:                                              ; preds = %162
  %172 = inttoptr i64 %167 to %"struct.std::__1::pair.161"*
  %173 = bitcast %"class.llvm::SmallVector.155"* %1 to %"struct.std::__1::pair.161"**
  %174 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0
  %175 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %176 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.std::__1::tuple.191", %"class.std::__1::tuple.191"* %5, i64 0, i32 0
  br label %206

178:                                              ; preds = %87, %192
  %179 = phi %"class.llvm::cl::OptionCategory"** [ %85, %87 ], [ %193, %192 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #22
  store %"class.llvm::cl::OptionCategory"** %179, %"class.llvm::cl::OptionCategory"*** %90, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %91) #22
  %180 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__tree_iteratorISC_PNS_11__tree_nodeISC_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %88, %"class.llvm::cl::OptionCategory"** dereferenceable(8) %179, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.191"* nonnull dereferenceable(1) %7) #24
  %181 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %180, 0
  %182 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %181, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %91) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #22
  %183 = bitcast %"class.std::__1::__tree_end_node"* %182 to %"class.llvm::cl::Option"***
  %184 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %183, align 8
  %185 = icmp eq %"class.llvm::cl::Option"** %184, null
  br i1 %185, label %192, label %186

186:                                              ; preds = %178
  %187 = ptrtoint %"class.llvm::cl::Option"** %184 to i64
  %188 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %181, i64 6
  %189 = bitcast %"class.std::__1::__tree_end_node"* %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = bitcast %"class.llvm::cl::Option"** %184 to i8*
  call void @_ZdlPv(i8* %190) #25
  %191 = bitcast %"class.std::__1::__tree_end_node"* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #22
  br label %192

192:                                              ; preds = %178, %186
  %193 = getelementptr inbounds %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %179, i64 1
  %194 = icmp eq %"class.llvm::cl::OptionCategory"** %193, %84
  %195 = bitcast %"class.std::__1::__tree_end_node"* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 24, i1 false)
  br i1 %194, label %162, label %178

196:                                              ; preds = %286, %162
  %197 = load %"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"*** %13, align 8
  %198 = load %"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"*** %14, align 8
  %199 = icmp eq %"class.llvm::cl::OptionCategory"** %197, %198
  %200 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0
  br i1 %199, label %291, label %201

201:                                              ; preds = %196
  %202 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %203 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %204 = getelementptr inbounds %"class.std::__1::tuple.191", %"class.std::__1::tuple.191"* %9, i64 0, i32 0
  %205 = getelementptr inbounds %"class.(anonymous namespace)::CategorizedHelpPrinter", %"class.(anonymous namespace)::CategorizedHelpPrinter"* %0, i64 0, i32 0, i32 1
  br label %300

206:                                              ; preds = %289, %171
  %207 = phi %"struct.std::__1::pair.161"* [ %172, %171 ], [ %290, %289 ]
  %208 = phi i64 [ 0, %171 ], [ %287, %289 ]
  %209 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %207, i64 %208, i32 1
  %210 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %209, align 8
  %211 = ptrtoint %"class.llvm::cl::Option"* %210 to i64
  %212 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %210, i64 0, i32 9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #22
  store %"class.llvm::cl::OptionCategory"** %212, %"class.llvm::cl::OptionCategory"*** %176, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %177) #22
  %213 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__tree_iteratorISC_PNS_11__tree_nodeISC_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %174, %"class.llvm::cl::OptionCategory"** dereferenceable(8) %212, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.191"* nonnull dereferenceable(1) %5) #24
  %214 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %213, 0
  %215 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %214, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %177) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #22
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %214, i64 6
  %217 = bitcast %"class.std::__1::__tree_end_node"* %216 to %"class.llvm::cl::Option"***
  %218 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %214, i64 7
  %220 = bitcast %"class.std::__1::__tree_end_node"* %219 to %"class.llvm::cl::Option"***
  %221 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %220, align 8
  %222 = icmp eq %"class.llvm::cl::Option"** %218, %221
  %223 = ptrtoint %"class.llvm::cl::Option"** %221 to i64
  br i1 %222, label %229, label %224

224:                                              ; preds = %206
  %225 = bitcast %"class.llvm::cl::Option"** %218 to i64*
  store i64 %211, i64* %225, align 8
  %226 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %218, i64 1
  %227 = ptrtoint %"class.llvm::cl::Option"** %226 to i64
  %228 = bitcast %"class.std::__1::__tree_end_node"* %216 to i64*
  store i64 %227, i64* %228, align 8
  br label %286

229:                                              ; preds = %206
  %230 = ptrtoint %"class.llvm::cl::Option"** %218 to i64
  %231 = bitcast %"class.std::__1::__tree_end_node"* %216 to i64*
  %232 = bitcast %"class.std::__1::__tree_end_node"* %215 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = sub i64 %230, %233
  %235 = ashr exact i64 %234, 3
  %236 = add nsw i64 %235, 1
  %237 = icmp ugt i64 %236, 2305843009213693951
  br i1 %237, label %238, label %240

238:                                              ; preds = %229
  %239 = bitcast %"class.std::__1::__tree_end_node"* %215 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %239) #26
  unreachable

240:                                              ; preds = %229
  %241 = bitcast %"class.std::__1::__tree_end_node"* %219 to i64*
  %242 = sub i64 %223, %233
  %243 = ashr exact i64 %242, 3
  %244 = icmp ult i64 %243, 1152921504606846975
  br i1 %244, label %245, label %253

245:                                              ; preds = %240
  %246 = ashr exact i64 %242, 2
  %247 = icmp ult i64 %246, %236
  %248 = select i1 %247, i64 %236, i64 %246
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %258, label %250

250:                                              ; preds = %245
  %251 = icmp ugt i64 %248, 2305843009213693951
  br i1 %251, label %252, label %253

252:                                              ; preds = %250
  call void @abort() #26
  unreachable

253:                                              ; preds = %250, %240
  %254 = phi i64 [ %248, %250 ], [ 2305843009213693951, %240 ]
  %255 = shl i64 %254, 3
  %256 = call i8* @_Znwm(i64 %255) #25
  %257 = bitcast i8* %256 to %"class.llvm::cl::Option"**
  br label %258

258:                                              ; preds = %253, %245
  %259 = phi i64 [ %254, %253 ], [ 0, %245 ]
  %260 = phi %"class.llvm::cl::Option"** [ %257, %253 ], [ null, %245 ]
  %261 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %260, i64 %235
  %262 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %260, i64 %259
  %263 = ptrtoint %"class.llvm::cl::Option"** %262 to i64
  %264 = bitcast %"class.llvm::cl::Option"** %261 to i64*
  store i64 %211, i64* %264, align 8
  %265 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %261, i64 1
  %266 = ptrtoint %"class.llvm::cl::Option"** %265 to i64
  %267 = bitcast %"class.std::__1::__tree_end_node"* %215 to %"class.llvm::cl::Option"***
  %268 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %267, align 8
  %269 = load i64, i64* %231, align 8
  %270 = ptrtoint %"class.llvm::cl::Option"** %268 to i64
  %271 = sub i64 %269, %270
  %272 = ashr exact i64 %271, 3
  %273 = sub nsw i64 0, %272
  %274 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %261, i64 %273
  %275 = ptrtoint %"class.llvm::cl::Option"** %274 to i64
  %276 = icmp sgt i64 %271, 0
  br i1 %276, label %277, label %281

277:                                              ; preds = %258
  %278 = bitcast %"class.llvm::cl::Option"** %274 to i8*
  %279 = bitcast %"class.llvm::cl::Option"** %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %278, i8* align 8 %279, i64 %271, i1 false) #22
  %280 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %267, align 8
  br label %281

281:                                              ; preds = %277, %258
  %282 = phi %"class.llvm::cl::Option"** [ %268, %258 ], [ %280, %277 ]
  store i64 %275, i64* %232, align 8
  store i64 %266, i64* %231, align 8
  store i64 %263, i64* %241, align 8
  %283 = icmp eq %"class.llvm::cl::Option"** %282, null
  br i1 %283, label %286, label %284

284:                                              ; preds = %281
  %285 = bitcast %"class.llvm::cl::Option"** %282 to i8*
  call void @_ZdlPv(i8* %285) #25
  br label %286

286:                                              ; preds = %224, %281, %284
  %287 = add i64 %208, 1
  %288 = icmp eq i64 %287, %169
  br i1 %288, label %196, label %289

289:                                              ; preds = %286
  %290 = load %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"** %173, align 8
  br label %206

291:                                              ; preds = %358, %196
  %292 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %293 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %292, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* nonnull %200, %"class.std::__1::__tree_node"* %293) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #22
  %294 = load %"class.llvm::cl::OptionCategory"**, %"class.llvm::cl::OptionCategory"*** %13, align 8
  %295 = icmp eq %"class.llvm::cl::OptionCategory"** %294, null
  br i1 %295, label %299, label %296

296:                                              ; preds = %291
  %297 = ptrtoint %"class.llvm::cl::OptionCategory"** %294 to i64
  store i64 %297, i64* %67, align 8
  %298 = bitcast %"class.llvm::cl::OptionCategory"** %294 to i8*
  call void @_ZdlPv(i8* %298) #25
  br label %299

299:                                              ; preds = %291, %296
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #22
  ret void

300:                                              ; preds = %201, %358
  %301 = phi %"class.llvm::cl::OptionCategory"** [ %197, %201 ], [ %359, %358 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #22
  store %"class.llvm::cl::OptionCategory"** %301, %"class.llvm::cl::OptionCategory"*** %203, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %204) #22
  %302 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__tree_iteratorISC_PNS_11__tree_nodeISC_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %200, %"class.llvm::cl::OptionCategory"** dereferenceable(8) %301, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.191"* nonnull dereferenceable(1) %9) #24
  %303 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %302, 0
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %303, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %204) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #22
  %305 = bitcast %"class.std::__1::__tree_end_node"* %304 to %"class.llvm::cl::Option"***
  %306 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %305, align 8
  %307 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %303, i64 6
  %308 = bitcast %"class.std::__1::__tree_end_node"* %307 to %"class.llvm::cl::Option"***
  %309 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %308, align 8
  %310 = icmp eq %"class.llvm::cl::Option"** %306, %309
  %311 = load i8, i8* %205, align 8, !range !10
  %312 = icmp ne i8 %311, 0
  %313 = xor i1 %310, true
  %314 = or i1 %312, %313
  br i1 %314, label %315, label %358

315:                                              ; preds = %300
  %316 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %317 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %316, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #24
  %318 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %319 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %301, align 8
  %320 = getelementptr inbounds %"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* %319, i64 0, i32 0, i32 0
  %321 = load i8*, i8** %320, align 8
  %322 = getelementptr inbounds %"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* %319, i64 0, i32 0, i32 1
  %323 = load i64, i64* %322, align 8
  %324 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %318, i8* %321, i64 %323) #23
  %325 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %324, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.91, i64 0, i64 0), i64 2) #24
  %326 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %301, align 8
  %327 = getelementptr inbounds %"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* %326, i64 0, i32 1, i32 1
  %328 = load i64, i64* %327, align 8
  %329 = icmp eq i64 %328, 0
  %330 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  br i1 %329, label %339, label %331

331:                                              ; preds = %315
  %332 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %301, align 8
  %333 = getelementptr inbounds %"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* %332, i64 0, i32 1, i32 0
  %334 = load i8*, i8** %333, align 8
  %335 = getelementptr inbounds %"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* %332, i64 0, i32 1, i32 1
  %336 = load i64, i64* %335, align 8
  %337 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %330, i8* %334, i64 %336) #23
  %338 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %337, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i64 2) #24
  br label %341

339:                                              ; preds = %315
  %340 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %330, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #24
  br label %341

341:                                              ; preds = %339, %331
  br i1 %310, label %342, label %345

342:                                              ; preds = %341
  %343 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4outsEv() #24
  %344 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %343, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.93, i64 0, i64 0), i64 39) #24
  br label %358

345:                                              ; preds = %341
  %346 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %305, align 8
  %347 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %308, align 8
  %348 = icmp eq %"class.llvm::cl::Option"** %346, %347
  br i1 %348, label %358, label %349

349:                                              ; preds = %345, %349
  %350 = phi %"class.llvm::cl::Option"** [ %356, %349 ], [ %346, %345 ]
  %351 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %350, align 8
  %352 = bitcast %"class.llvm::cl::Option"* %351 to void (%"class.llvm::cl::Option"*, i64)***
  %353 = load void (%"class.llvm::cl::Option"*, i64)**, void (%"class.llvm::cl::Option"*, i64)*** %352, align 8
  %354 = getelementptr inbounds void (%"class.llvm::cl::Option"*, i64)*, void (%"class.llvm::cl::Option"*, i64)** %353, i64 6
  %355 = load void (%"class.llvm::cl::Option"*, i64)*, void (%"class.llvm::cl::Option"*, i64)** %354, align 8
  call void %355(%"class.llvm::cl::Option"* %351, i64 %2) #24
  %356 = getelementptr inbounds %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %350, i64 1
  %357 = icmp eq %"class.llvm::cl::Option"** %356, %347
  br i1 %357, label %358, label %349

358:                                              ; preds = %349, %345, %300, %342
  %359 = getelementptr inbounds %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %301, i64 1
  %360 = icmp eq %"class.llvm::cl::OptionCategory"** %359, %198
  br i1 %360, label %291, label %300
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CategorizedHelpPrinterD0Ev(%"class.(anonymous namespace)::CategorizedHelpPrinter"*) unnamed_addr #9 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CategorizedHelpPrinter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #25
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_122CategorizedHelpPrinter21OptionCategoryCompareEPKPN4llvm2cl14OptionCategoryES6_(%"class.llvm::cl::OptionCategory"** nocapture readonly, %"class.llvm::cl::OptionCategory"** nocapture readonly) #17 align 2 {
  %3 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %0, align 8
  %4 = getelementptr inbounds %"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* %3, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %1, align 8
  %9 = getelementptr inbounds %"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* %8, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %7, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = icmp eq i64 %7, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = tail call i32 @bcmp(i8* %5, i8* %10, i64 %7) #22
  %18 = icmp eq i32 %17, 0
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %2, %14, %16
  %21 = phi i32 [ 0, %2 ], [ %19, %16 ], [ 1, %14 ]
  ret i32 %21
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nofree optsize
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #18

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__tree_iteratorISC_PNS_11__tree_nodeISC_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.llvm::cl::OptionCategory"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.191"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %39, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %1, align 8
  br label %13

13:                                               ; preds = %35, %10
  %14 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %8, %10 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.llvm::cl::OptionCategory"*, %"class.llvm::cl::OptionCategory"** %16, align 8
  %18 = icmp ult %"class.llvm::cl::OptionCategory"* %12, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp ult %"class.llvm::cl::OptionCategory"* %17, %12
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %13

39:                                               ; preds = %5
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %41

41:                                               ; preds = %23, %31, %33, %39
  %42 = phi %"class.std::__1::__tree_end_node"* [ %6, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %57

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 64) #25, !noalias !98
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %51 = load i64*, i64** %50, align 8, !noalias !98
  %52 = load i64, i64* %51, align 8, !noalias !98
  %53 = bitcast i8* %49 to i64*
  store i64 %52, i64* %53, align 8, !noalias !98
  %54 = getelementptr inbounds i8, i8* %48, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #22, !noalias !98
  %55 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSN_SN_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_node_base"** dereferenceable(8) %43, %"class.std::__1::__tree_node_base"* nonnull %55) #24
  %56 = bitcast i8* %48 to %"class.std::__1::__tree_node"*
  br label %57

57:                                               ; preds = %47, %41
  %58 = phi i8 [ 1, %47 ], [ 0, %41 ]
  %59 = phi %"class.std::__1::__tree_node"* [ %56, %47 ], [ %45, %41 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %59, i64 0, i32 0, i32 0
  %61 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %60, 0
  %62 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %61, i8 %58, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %62
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSN_SN_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #24
  %20 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !10
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !10
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #24
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #24
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.llvm::cl::Option"**, %"class.llvm::cl::Option"*** %10, align 8
  %12 = icmp eq %"class.llvm::cl::Option"** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint %"class.llvm::cl::Option"** %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.llvm::cl::Option"*** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.llvm::cl::Option"** %11 to i8*
  tail call void @_ZdlPv(i8* %17) #25
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #25
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZL8sortOptsRN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEEERNS_15SmallVectorImplINSt3__14pairIPKcS3_EEEEb(%"class.llvm::StringMap"* nocapture readonly dereferenceable(32), %"class.llvm::SmallVectorImpl.156"* dereferenceable(40), i1 zeroext) unnamed_addr #0 {
  %4 = alloca %"class.llvm::SmallPtrSet.202", align 8
  %5 = alloca %"struct.std::__1::pair.205", align 8
  %6 = alloca %"struct.std::__1::pair.161", align 8
  %7 = bitcast %"class.llvm::SmallPtrSet.202"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %7) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 288, i1 false)
  %8 = getelementptr inbounds %"class.llvm::SmallPtrSet.202", %"class.llvm::SmallPtrSet.202"* %4, i64 0, i32 1, i64 0
  %9 = getelementptr inbounds %"class.llvm::SmallPtrSet.202", %"class.llvm::SmallPtrSet.202"* %4, i64 0, i32 0, i32 0, i32 0
  store i8** %8, i8*** %9, align 8
  %10 = getelementptr inbounds %"class.llvm::SmallPtrSet.202", %"class.llvm::SmallPtrSet.202"* %4, i64 0, i32 0, i32 0, i32 1
  store i8** %8, i8*** %10, align 8
  %11 = getelementptr inbounds %"class.llvm::SmallPtrSet.202", %"class.llvm::SmallPtrSet.202"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 32, i32* %11, align 8
  %12 = getelementptr inbounds %"class.llvm::SmallPtrSet.202", %"class.llvm::SmallPtrSet.202"* %4, i64 0, i32 0, i32 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.llvm::SmallPtrSet.202", %"class.llvm::SmallPtrSet.202"* %4, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 0
  %15 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %14, align 8
  %16 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %3, %23
  %20 = phi %"class.llvm::StringMapEntryBase"** [ %24, %23 ], [ %15, %3 ]
  %21 = bitcast %"class.llvm::StringMapEntryBase"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  switch i64 %22, label %25 [
    i64 0, label %23
    i64 -4, label %23
  ]

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %20, i64 1
  br label %19

25:                                               ; preds = %19, %3
  %26 = phi %"class.llvm::StringMapEntryBase"** [ %15, %3 ], [ %20, %19 ]
  %27 = zext i32 %17 to i64
  %28 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %15, i64 %27
  %29 = icmp eq %"class.llvm::StringMapEntryBase"** %26, %28
  br i1 %29, label %41, label %30

30:                                               ; preds = %25
  %31 = bitcast %"struct.std::__1::pair.205"* %5 to i8*
  %32 = bitcast %"class.llvm::SmallPtrSet.202"* %4 to %"class.llvm::SmallPtrSetImpl.203"*
  %33 = getelementptr inbounds %"struct.std::__1::pair.205", %"struct.std::__1::pair.205"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.llvm::SmallVectorImpl.156", %"class.llvm::SmallVectorImpl.156"* %1, i64 0, i32 0
  %35 = bitcast %"struct.std::__1::pair.161"* %6 to i8*
  %36 = bitcast %"struct.std::__1::pair.161"* %6 to i64*
  %37 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %6, i64 0, i32 1
  %38 = bitcast %"class.llvm::cl::Option"** %37 to i64*
  br label %60

39:                                               ; preds = %85
  %40 = icmp eq %"class.llvm::StringMapEntryBase"** %87, %28
  br i1 %40, label %41, label %60

41:                                               ; preds = %39, %25
  %42 = bitcast %"class.llvm::SmallVectorImpl.156"* %1 to %"struct.std::__1::pair.161"**
  %43 = load %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"** %42, align 8
  %44 = getelementptr inbounds %"class.llvm::SmallVectorImpl.156", %"class.llvm::SmallVectorImpl.156"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = ptrtoint %"struct.std::__1::pair.161"* %43 to i64
  %48 = sub i64 %46, %47
  %49 = icmp slt i64 %48, 32
  br i1 %49, label %53, label %50

50:                                               ; preds = %41
  %51 = lshr exact i64 %48, 4
  %52 = bitcast %"struct.std::__1::pair.161"* %43 to i8*
  call void @qsort(i8* %52, i64 %51, i64 16, i32 (i8*, i8*)* bitcast (i32 (%"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"*)* @_ZL14OptNameComparePKNSt3__14pairIPKcPN4llvm2cl6OptionEEES9_ to i32 (i8*, i8*)*)) #24
  br label %53

53:                                               ; preds = %41, %50
  %54 = load i8**, i8*** %10, align 8
  %55 = load i8**, i8*** %9, align 8
  %56 = icmp eq i8** %54, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast i8** %54 to i8*
  call void @free(i8* %58) #24
  br label %59

59:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %7) #22
  ret void

60:                                               ; preds = %30, %39
  %61 = phi %"class.llvm::StringMapEntryBase"** [ %26, %30 ], [ %87, %39 ]
  %62 = bitcast %"class.llvm::StringMapEntryBase"** %61 to %"class.llvm::StringMapEntry"**
  %63 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %62, align 8
  %64 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %63, i64 0, i32 1
  %65 = load %"class.llvm::cl::Option"*, %"class.llvm::cl::Option"** %64, align 8
  %66 = getelementptr inbounds %"class.llvm::cl::Option", %"class.llvm::cl::Option"* %65, i64 0, i32 2
  %67 = load i16, i16* %66, align 4
  %68 = lshr i16 %67, 5
  %69 = and i16 %68, 3
  %70 = icmp ne i16 %69, 2
  %71 = icmp ne i16 %69, 1
  %72 = or i1 %71, %2
  %73 = and i1 %70, %72
  br i1 %73, label %74, label %84

74:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #22
  call void @_ZN4llvm15SmallPtrSetImplIPNS_2cl6OptionEE6insertES3_(%"struct.std::__1::pair.205"* nonnull sret %5, %"class.llvm::SmallPtrSetImpl.203"* nonnull %32, %"class.llvm::cl::Option"* %65) #23
  %75 = load i8, i8* %33, align 8, !range !10
  %76 = icmp eq i8 %75, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #22
  br i1 %76, label %84, label %77

77:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #22
  %78 = load %"class.llvm::StringMapEntry"*, %"class.llvm::StringMapEntry"** %62, align 8
  %79 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %78, i64 1
  %80 = ptrtoint %"class.llvm::StringMapEntry"* %79 to i64
  %81 = getelementptr inbounds %"class.llvm::StringMapEntry", %"class.llvm::StringMapEntry"* %78, i64 0, i32 1
  store i64 %80, i64* %36, align 8
  %82 = bitcast %"class.llvm::cl::Option"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %38, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPKcPNS_2cl6OptionEEELb1EE9push_backERKS8_(%"class.llvm::SmallVectorTemplateBase.157"* %34, %"struct.std::__1::pair.161"* nonnull dereferenceable(16) %6) #23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #22
  br label %84

84:                                               ; preds = %60, %74, %77
  br label %85

85:                                               ; preds = %90, %84
  %86 = phi %"class.llvm::StringMapEntryBase"** [ %61, %84 ], [ %87, %90 ]
  %87 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %86, i64 1
  %88 = bitcast %"class.llvm::StringMapEntryBase"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  switch i64 %89, label %39 [
    i64 0, label %90
    i64 -4, label %90
  ]

90:                                               ; preds = %85, %85
  br label %85
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallPtrSetImplIPNS_2cl6OptionEE6insertES3_(%"struct.std::__1::pair.205"* noalias sret, %"class.llvm::SmallPtrSetImpl.203"*, %"class.llvm::cl::Option"*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.llvm::SmallPtrSetImpl.203"* %1 to %"class.llvm::SmallPtrSetImplBase"*
  %5 = bitcast %"class.llvm::cl::Option"* %2 to i8*
  %6 = tail call { i8**, i8 } @_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv(%"class.llvm::SmallPtrSetImplBase"* %4, i8* %5) #23
  %7 = extractvalue { i8**, i8 } %6, 0
  %8 = extractvalue { i8**, i8 } %6, 1
  %9 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl.203", %"class.llvm::SmallPtrSetImpl.203"* %1, i64 0, i32 0, i32 1
  %10 = load i8**, i8*** %9, align 8
  %11 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl.203", %"class.llvm::SmallPtrSetImpl.203"* %1, i64 0, i32 0, i32 0
  %12 = load i8**, i8*** %11, align 8
  %13 = icmp eq i8** %10, %12
  %14 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl.203", %"class.llvm::SmallPtrSetImpl.203"* %1, i64 0, i32 0, i32 3
  %15 = getelementptr inbounds %"class.llvm::SmallPtrSetImpl.203", %"class.llvm::SmallPtrSetImpl.203"* %1, i64 0, i32 0, i32 2
  %16 = select i1 %13, i32* %14, i32* %15
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i8*, i8** %10, i64 %18
  %20 = icmp eq i8** %7, %19
  br i1 %20, label %29, label %21

21:                                               ; preds = %3, %26
  %22 = phi i8** [ %27, %26 ], [ %7, %3 ]
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %24, -3
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds i8*, i8** %22, i64 1
  %28 = icmp eq i8** %27, %19
  br i1 %28, label %29, label %21

29:                                               ; preds = %21, %26, %3
  %30 = phi i8** [ %7, %3 ], [ %22, %21 ], [ %19, %26 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.205", %"struct.std::__1::pair.205"* %0, i64 0, i32 0, i32 0, i32 0
  store i8** %30, i8*** %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.205", %"struct.std::__1::pair.205"* %0, i64 0, i32 0, i32 0, i32 1
  store i8** %19, i8*** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.205", %"struct.std::__1::pair.205"* %0, i64 0, i32 1
  store i8 %8, i8* %33, align 8, !alias.scope !101
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPKcPNS_2cl6OptionEEELb1EE9push_backERKS8_(%"class.llvm::SmallVectorTemplateBase.157"*, %"struct.std::__1::pair.161"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.157", %"class.llvm::SmallVectorTemplateBase.157"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.157", %"class.llvm::SmallVectorTemplateBase.157"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !30

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.157", %"class.llvm::SmallVectorTemplateBase.157"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.157", %"class.llvm::SmallVectorTemplateBase.157"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #24
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.161"**
  %15 = bitcast %"struct.std::__1::pair.161"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %16, i64 1
  store %"struct.std::__1::pair.161"* %17, %"struct.std::__1::pair.161"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define internal i32 @_ZL14OptNameComparePKNSt3__14pairIPKcPN4llvm2cl6OptionEEES9_(%"struct.std::__1::pair.161"* nocapture readonly, %"struct.std::__1::pair.161"* nocapture readonly) #17 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @strcmp(i8* %4, i8* %6) #27
  ret i32 %7
}

; Function Attrs: nofree nounwind optsize readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPKcPNS_2cl10SubCommandEEELb1EE9push_backERKS8_(%"class.llvm::SmallVectorTemplateBase.210"*, %"struct.std::__1::pair.214"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.210", %"class.llvm::SmallVectorTemplateBase.210"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.210", %"class.llvm::SmallVectorTemplateBase.210"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !30

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.210", %"class.llvm::SmallVectorTemplateBase.210"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.210", %"class.llvm::SmallVectorTemplateBase.210"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #24
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.214"**
  %15 = bitcast %"struct.std::__1::pair.214"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.214"*, %"struct.std::__1::pair.214"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.214", %"struct.std::__1::pair.214"* %16, i64 1
  store %"struct.std::__1::pair.214"* %17, %"struct.std::__1::pair.214"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define internal i32 @_ZL14SubNameComparePKNSt3__14pairIPKcPN4llvm2cl10SubCommandEEES9_(%"struct.std::__1::pair.214"* nocapture readonly, %"struct.std::__1::pair.214"* nocapture readonly) #17 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.214", %"struct.std::__1::pair.214"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair.214", %"struct.std::__1::pair.214"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @strcmp(i8* %4, i8* %6) #27
  ret i32 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm19SmallPtrSetImplBase5clearEv(%"class.llvm::SmallPtrSetImplBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 1
  %3 = load i8**, i8*** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 0
  %5 = load i8**, i8*** %4, align 8
  %6 = icmp eq i8** %3, %5
  %7 = bitcast i8** %3 to i8*
  br i1 %6, label %24, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 2
  %15 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %14, %16
  %18 = icmp ugt i32 %16, 32
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %21

20:                                               ; preds = %8
  tail call void @_ZN4llvm19SmallPtrSetImplBase16shrink_and_clearEv(%"class.llvm::SmallPtrSetImplBase"* %0) #24
  br label %27

21:                                               ; preds = %8
  %22 = zext i32 %16 to i64
  %23 = shl nuw nsw i64 %22, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -1, i64 %23, i1 false)
  br label %24

24:                                               ; preds = %21, %1
  %25 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 3
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.llvm::SmallPtrSetImplBase", %"class.llvm::SmallPtrSetImplBase"* %0, i64 0, i32 4
  store i32 0, i32* %26, align 8
  br label %27

27:                                               ; preds = %24, %20
  ret void
}

; Function Attrs: optsize
declare void @_ZN4llvm19SmallPtrSetImplBase16shrink_and_clearEv(%"class.llvm::SmallPtrSetImplBase"*) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #19

; Function Attrs: optsize
declare void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"*, i8* ()*, void (i8*)*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i8* @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv() #0 comdat {
  %1 = tail call i8* @_Znwm(i64 184) #25
  %2 = getelementptr inbounds i8, i8* %1, i64 56
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 176, i1 false)
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 40
  %6 = bitcast i8* %5 to i8**
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 48
  %8 = bitcast i8* %7 to i8**
  %9 = getelementptr inbounds i8, i8* %1, i64 88
  store i8* %9, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 112
  %11 = bitcast i8* %9 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %1, i64 96
  %13 = bitcast i8* %12 to i8**
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %1, i64 104
  %15 = bitcast i8* %14 to i8**
  %16 = getelementptr inbounds i8, i8* %1, i64 144
  store i8* %16, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %1, i64 164
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #22
  store i32 16, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %1, i64 176
  %20 = bitcast i8* %19 to %"class.llvm::cl::Option"**
  store %"class.llvm::cl::Option"* null, %"class.llvm::cl::Option"** %20, align 8
  ret i8* %1
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 144
  %5 = bitcast i8* %4 to %"class.llvm::StringMap"*
  tail call void @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEED2Ev(%"class.llvm::StringMap"* %5) #24
  %6 = getelementptr inbounds i8, i8* %0, i64 88
  %7 = bitcast i8* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %0, i64 112
  %10 = icmp eq i8* %8, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void @free(i8* %8) #24
  br label %12

12:                                               ; preds = %11, %3
  %13 = getelementptr inbounds i8, i8* %0, i64 32
  %14 = bitcast i8* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %0, i64 56
  %17 = icmp eq i8* %15, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %12
  tail call void @free(i8* %15) #24
  br label %19

19:                                               ; preds = %12, %18
  tail call void @_ZdlPv(i8* nonnull %0) #25
  br label %20

20:                                               ; preds = %19, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm9StringMapIPNS_2cl6OptionENS_15MallocAllocatorEED2Ev(%"class.llvm::StringMap"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.llvm::StringMap", %"class.llvm::StringMap"* %0, i64 0, i32 0, i32 0
  %11 = zext i32 %7 to i64
  br label %12

12:                                               ; preds = %9, %20
  %13 = phi i64 [ 0, %9 ], [ %21, %20 ]
  %14 = load %"class.llvm::StringMapEntryBase"**, %"class.llvm::StringMapEntryBase"*** %10, align 8
  %15 = getelementptr inbounds %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %14, i64 %13
  %16 = load %"class.llvm::StringMapEntryBase"*, %"class.llvm::StringMapEntryBase"** %15, align 8
  %17 = ptrtoint %"class.llvm::StringMapEntryBase"* %16 to i64
  switch i64 %17, label %18 [
    i64 0, label %20
    i64 -4, label %20
  ]

18:                                               ; preds = %12
  %19 = bitcast %"class.llvm::StringMapEntryBase"* %16 to i8*
  tail call void @free(i8* %19) #24
  br label %20

20:                                               ; preds = %12, %12, %18
  %21 = add nuw nsw i64 %13, 1
  %22 = icmp eq i64 %21, %11
  br i1 %22, label %23, label %12

23:                                               ; preds = %20, %5, %1
  %24 = bitcast %"class.llvm::StringMap"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @free(i8* %25) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE(%"class.llvm::cl::OptionValueCopy"*, %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.llvm::cl::GenericOptionValue"* %1 to %"class.llvm::cl::OptionValueCopy"*
  %4 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy", %"class.llvm::cl::OptionValueCopy"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !10
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy", %"class.llvm::cl::OptionValueCopy"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4, !range !10
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue", %"struct.llvm::cl::GenericOptionValue"* %1, i64 1
  %13 = bitcast %"struct.llvm::cl::GenericOptionValue"* %12 to i32*
  %14 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy", %"class.llvm::cl::OptionValueCopy"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %13, align 4
  %17 = icmp ne i32 %15, %16
  br label %18

18:                                               ; preds = %2, %11, %7
  %19 = phi i1 [ false, %2 ], [ false, %7 ], [ %17, %11 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4llvm2cl15OptionValueCopyIiE7compareERKNS0_18GenericOptionValueE(%"class.llvm::cl::OptionValueCopy.12"*, %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.llvm::cl::GenericOptionValue"* %1 to %"class.llvm::cl::OptionValueCopy.12"*
  %4 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.12", %"class.llvm::cl::OptionValueCopy.12"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !10
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.12", %"class.llvm::cl::OptionValueCopy.12"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4, !range !10
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue", %"struct.llvm::cl::GenericOptionValue"* %1, i64 1
  %13 = bitcast %"struct.llvm::cl::GenericOptionValue"* %12 to i32*
  %14 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.12", %"class.llvm::cl::OptionValueCopy.12"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %13, align 4
  %17 = icmp ne i32 %15, %16
  br label %18

18:                                               ; preds = %2, %11, %7
  %19 = phi i1 [ false, %2 ], [ false, %7 ], [ %17, %11 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %8, label %23, label %13

13:                                               ; preds = %4
  br i1 %12, label %17, label %14

14:                                               ; preds = %13
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  br label %33

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %19, i64 %21) #24
  br label %33

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %29 = zext i8 %11 to i64
  %30 = select i1 %12, i8* %25, i8* %28
  %31 = select i1 %12, i64 %27, i64 %29
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %30, i64 %31) #24
  br label %33

33:                                               ; preds = %14, %2, %23, %17
  %34 = phi %"class.std::__1::basic_string"* [ %32, %23 ], [ %22, %17 ], [ %0, %2 ], [ %0, %14 ]
  ret %"class.std::__1::basic_string"* %34
}

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4llvm2cl15OptionValueCopyIcE7compareERKNS0_18GenericOptionValueE(%"class.llvm::cl::OptionValueCopy.27"*, %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.llvm::cl::GenericOptionValue"* %1 to %"class.llvm::cl::OptionValueCopy.27"*
  %4 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.27", %"class.llvm::cl::OptionValueCopy.27"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !10
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.27", %"class.llvm::cl::OptionValueCopy.27"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 1, !range !10
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue", %"struct.llvm::cl::GenericOptionValue"* %1, i64 1
  %13 = bitcast %"struct.llvm::cl::GenericOptionValue"* %12 to i8*
  %14 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.27", %"class.llvm::cl::OptionValueCopy.27"* %0, i64 0, i32 1
  %15 = load i8, i8* %14, align 8
  %16 = load i8, i8* %13, align 1
  %17 = icmp ne i8 %15, %16
  br label %18

18:                                               ; preds = %2, %11, %7
  %19 = phi i1 [ false, %2 ], [ false, %7 ], [ %17, %11 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE(%"class.llvm::cl::OptionValueCopy.35"*, %"struct.llvm::cl::GenericOptionValue"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.llvm::cl::GenericOptionValue"* %1 to %"class.llvm::cl::OptionValueCopy.35"*
  %4 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.35", %"class.llvm::cl::OptionValueCopy.35"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !10
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.35", %"class.llvm::cl::OptionValueCopy.35"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 1, !range !10
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.llvm::cl::GenericOptionValue", %"struct.llvm::cl::GenericOptionValue"* %1, i64 1
  %13 = bitcast %"struct.llvm::cl::GenericOptionValue"* %12 to i8*
  %14 = getelementptr inbounds %"class.llvm::cl::OptionValueCopy.35", %"class.llvm::cl::OptionValueCopy.35"* %0, i64 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !10
  %16 = load i8, i8* %13, align 1, !range !10
  %17 = icmp ne i8 %15, %16
  br label %18

18:                                               ; preds = %2, %11, %7
  %19 = phi i1 [ false, %2 ], [ false, %7 ], [ %17, %11 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define internal nonnull i8* @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv() #0 {
  %1 = tail call i8* @_Znwm(i64 296) #25
  %2 = bitcast i8* %1 to %"class.(anonymous namespace)::CommandLineParser"*
  %3 = getelementptr inbounds i8, i8* %1, i64 96
  %4 = getelementptr inbounds i8, i8* %1, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 64, i1 false) #22
  %5 = bitcast i8* %4 to i8**
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 72
  %7 = bitcast i8* %6 to i8**
  store i8* %3, i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 80
  %9 = bitcast i8* %8 to i32*
  store i32 16, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 84
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %1, i64 88
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %1, i64 256
  %15 = getelementptr inbounds i8, i8* %1, i64 224
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %1, i64 232
  %18 = bitcast i8* %17 to i8**
  store i8* %14, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %1, i64 240
  %20 = bitcast i8* %19 to i32*
  store i32 4, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %1, i64 244
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %1, i64 248
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %1, i64 288
  %26 = bitcast i8* %25 to %"class.llvm::cl::SubCommand"**
  store %"class.llvm::cl::SubCommand"* null, %"class.llvm::cl::SubCommand"** %26, align 8
  %27 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) acquire, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %0
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %30

30:                                               ; preds = %29, %0
  %31 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl18TopLevelSubCommandE to i64*) monotonic, align 8
  %32 = inttoptr i64 %31 to %"class.llvm::cl::SubCommand"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser18registerSubCommandEPN4llvm2cl10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* nonnull %2, %"class.llvm::cl::SubCommand"* %32) #24
  %33 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %36

36:                                               ; preds = %30, %35
  %37 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %38 = inttoptr i64 %37 to %"class.llvm::cl::SubCommand"*
  tail call fastcc void @_ZN12_GLOBAL__N_117CommandLineParser18registerSubCommandEPN4llvm2cl10SubCommandE(%"class.(anonymous namespace)::CommandLineParser"* nonnull %2, %"class.llvm::cl::SubCommand"* %38) #24
  ret i8* %1
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv(i8*) #0 align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %41, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 232
  %5 = bitcast i8* %4 to i8***
  %6 = load i8**, i8*** %5, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 224
  %8 = bitcast i8* %7 to i8***
  %9 = load i8**, i8*** %8, align 8
  %10 = icmp eq i8** %6, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = bitcast i8** %6 to i8*
  tail call void @free(i8* %12) #24
  br label %13

13:                                               ; preds = %11, %3
  %14 = getelementptr inbounds i8, i8* %0, i64 72
  %15 = bitcast i8* %14 to i8***
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds i8, i8* %0, i64 64
  %18 = bitcast i8* %17 to i8***
  %19 = load i8**, i8*** %18, align 8
  %20 = icmp eq i8** %16, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = bitcast i8** %16 to i8*
  tail call void @free(i8* %22) #24
  br label %23

23:                                               ; preds = %21, %13
  %24 = getelementptr inbounds i8, i8* %0, i64 40
  %25 = bitcast i8* %24 to %"class.llvm::StringRef"**
  %26 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %25, align 8
  %27 = icmp eq %"class.llvm::StringRef"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = ptrtoint %"class.llvm::StringRef"* %26 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 48
  %31 = bitcast i8* %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast %"class.llvm::StringRef"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #25
  br label %33

33:                                               ; preds = %28, %23
  %34 = getelementptr inbounds i8, i8* %0, i64 23
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = bitcast i8* %0 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #25
  br label %40

40:                                               ; preds = %33, %37
  tail call void @_ZdlPv(i8* nonnull %0) #25
  br label %41

41:                                               ; preds = %40, %1
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4llvm9StringRefENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"class.llvm::StringRef"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.220", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__compressed_pair.46"* %4 to %"class.std::__1::allocator.49"*
  %6 = bitcast %"struct.std::__1::__split_buffer.220"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #22
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.220", %"struct.std::__1::__split_buffer.220"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.220", %"struct.std::__1::__split_buffer.220"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer.220", %"struct.std::__1::__split_buffer.220"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.llvm::StringRef"** %10 to i64*
  %12 = bitcast %"struct.std::__1::__split_buffer.220"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.std::__1::vector"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 4
  %18 = add nsw i64 %17, 1
  %19 = icmp ugt i64 %18, 1152921504606846975
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #26
  unreachable

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.llvm::StringRef"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %15
  %27 = ashr exact i64 %26, 4
  %28 = icmp ult i64 %27, 576460752303423487
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = ashr exact i64 %26, 3
  %31 = icmp ult i64 %30, %18
  %32 = select i1 %31, i64 %18, i64 %30
  br label %33

33:                                               ; preds = %22, %29
  %34 = phi i64 [ %32, %29 ], [ 1152921504606846975, %22 ]
  call void @_ZNSt3__114__split_bufferIN4llvm9StringRefERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.220"* nonnull %3, i64 %34, i64 %17, %"class.std::__1::allocator.49"* dereferenceable(1) %5) #23
  %35 = bitcast %"class.llvm::StringRef"** %8 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.llvm::StringRef"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false) #22
  %38 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %8, align 8
  %39 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %38, i64 1
  store %"class.llvm::StringRef"* %39, %"class.llvm::StringRef"** %8, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %41 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %40, align 8
  %42 = load i64, i64* %11, align 8
  %43 = ptrtoint %"class.llvm::StringRef"* %41 to i64
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 4
  %46 = load %"class.llvm::StringRef"*, %"class.llvm::StringRef"** %7, align 8
  %47 = sub nsw i64 0, %45
  %48 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %46, i64 %47
  store %"class.llvm::StringRef"* %48, %"class.llvm::StringRef"** %7, align 8
  %49 = icmp sgt i64 %44, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %33
  %51 = insertelement <2 x %"class.llvm::StringRef"*> undef, %"class.llvm::StringRef"* %48, i32 0
  %52 = insertelement <2 x %"class.llvm::StringRef"*> %51, %"class.llvm::StringRef"* %39, i32 1
  %53 = ptrtoint <2 x %"class.llvm::StringRef"*> %52 to <2 x i64>
  br label %61

54:                                               ; preds = %33
  %55 = bitcast %"class.llvm::StringRef"* %48 to i8*
  %56 = bitcast %"class.llvm::StringRef"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 %44, i1 false) #22
  %57 = load i64, i64* %14, align 8
  %58 = load i64, i64* %11, align 8
  %59 = bitcast %"class.llvm::StringRef"** %7 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  br label %61

61:                                               ; preds = %50, %54
  %62 = phi i64 [ %42, %50 ], [ %58, %54 ]
  %63 = phi i64 [ %43, %50 ], [ %57, %54 ]
  %64 = phi <2 x i64> [ %53, %50 ], [ %60, %54 ]
  %65 = bitcast %"class.llvm::StringRef"** %7 to i64*
  %66 = bitcast %"class.llvm::StringRef"** %8 to i64*
  store i64 %63, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %67, align 8
  store i64 %62, i64* %66, align 8
  %68 = load i64, i64* %24, align 8
  %69 = bitcast %"class.llvm::StringRef"** %9 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %24, align 8
  store i64 %68, i64* %69, align 8
  %71 = bitcast %"struct.std::__1::__split_buffer.220"* %3 to i64*
  store i64 %63, i64* %71, align 8
  %72 = inttoptr i64 %63 to %"class.llvm::StringRef"*
  %73 = inttoptr i64 %62 to %"class.llvm::StringRef"*
  %74 = icmp eq %"class.llvm::StringRef"* %73, %72
  br i1 %74, label %82, label %75

75:                                               ; preds = %61
  %76 = getelementptr %"class.llvm::StringRef", %"class.llvm::StringRef"* %73, i64 -1, i32 0
  %77 = ptrtoint i8** %76 to i64
  %78 = sub i64 %77, %63
  %79 = lshr i64 %78, 4
  %80 = xor i64 %79, -1
  %81 = getelementptr %"class.llvm::StringRef", %"class.llvm::StringRef"* %73, i64 %80
  store %"class.llvm::StringRef"* %81, %"class.llvm::StringRef"** %8, align 8
  br label %82

82:                                               ; preds = %75, %61
  %83 = icmp eq i64 %63, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = inttoptr i64 %63 to i8*
  call void @_ZdlPv(i8* %85) #25
  br label %86

86:                                               ; preds = %82, %84
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4llvm9StringRefERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.220"*, i64, i64, %"class.std::__1::allocator.49"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.220", %"struct.std::__1::__split_buffer.220"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.llvm::StringRef"* null, %"class.llvm::StringRef"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.220", %"struct.std::__1::__split_buffer.220"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.49"* %3, %"class.std::__1::allocator.49"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 1152921504606846975
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #26
  unreachable

11:                                               ; preds = %8
  %12 = shl i64 %1, 4
  %13 = tail call i8* @_Znwm(i64 %12) #25
  %14 = bitcast i8* %13 to %"class.llvm::StringRef"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"class.llvm::StringRef"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.220", %"struct.std::__1::__split_buffer.220"* %0, i64 0, i32 0
  store %"class.llvm::StringRef"* %16, %"class.llvm::StringRef"** %17, align 8
  %18 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.220", %"struct.std::__1::__split_buffer.220"* %0, i64 0, i32 2
  store %"class.llvm::StringRef"* %18, %"class.llvm::StringRef"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.220", %"struct.std::__1::__split_buffer.220"* %0, i64 0, i32 1
  store %"class.llvm::StringRef"* %18, %"class.llvm::StringRef"** %20, align 8
  %21 = getelementptr inbounds %"class.llvm::StringRef", %"class.llvm::StringRef"* %16, i64 %1
  store %"class.llvm::StringRef"* %21, %"class.llvm::StringRef"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIPKcE6appendIPS2_EEvT_S6_(%"class.llvm::SmallVectorImpl.73"*, i8**, i8**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8** %2 to i64
  %5 = ptrtoint i8** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i8***
  %13 = bitcast i8** %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %10, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ugt i64 %7, %16
  br i1 %17, label %18, label %26

18:                                               ; preds = %3
  %19 = bitcast %"class.llvm::SmallVectorImpl.73"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %14, %6
  %22 = sub i64 %21, %20
  %23 = and i64 %22, -8
  %24 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %24, i8* %25, i64 %23, i64 8) #24
  br label %26

26:                                               ; preds = %18, %3
  %27 = icmp eq i8** %1, %2
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = load i8*, i8** %11, align 8
  %30 = bitcast i8** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %6, i1 false) #22
  br label %31

31:                                               ; preds = %26, %28
  %32 = load i8**, i8*** %12, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 %7
  store i8** %33, i8*** %12, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIPKcE6appendINSt3__113move_iteratorIPS2_EEEEvT_S9_(%"class.llvm::SmallVectorImpl.73"*, i8**, i8**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8** %1 to i64
  %5 = ptrtoint i8** %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i8***
  %13 = bitcast i8** %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %10, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ugt i64 %7, %16
  %18 = inttoptr i64 %14 to i8**
  br i1 %17, label %19, label %28

19:                                               ; preds = %3
  %20 = bitcast %"class.llvm::SmallVectorImpl.73"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %14, %6
  %23 = sub i64 %22, %21
  %24 = and i64 %23, -8
  %25 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.llvm::SmallVectorImpl.73", %"class.llvm::SmallVectorImpl.73"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %25, i8* %26, i64 %24, i64 8) #24
  %27 = load i8**, i8*** %12, align 8
  br label %28

28:                                               ; preds = %19, %3
  %29 = phi i8** [ %27, %19 ], [ %18, %3 ]
  %30 = icmp eq i8** %1, %2
  br i1 %30, label %42, label %31

31:                                               ; preds = %28, %31
  %32 = phi i8** [ %38, %31 ], [ %29, %28 ]
  %33 = phi i8** [ %37, %31 ], [ %1, %28 ]
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast i8** %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds i8*, i8** %33, i64 1
  %38 = getelementptr inbounds i8*, i8** %32, i64 1
  %39 = icmp eq i8** %37, %2
  br i1 %39, label %40, label %31

40:                                               ; preds = %31
  %41 = load i8**, i8*** %12, align 8
  br label %42

42:                                               ; preds = %40, %28
  %43 = phi i8** [ %41, %40 ], [ %29, %28 ]
  %44 = getelementptr inbounds i8*, i8** %43, i64 %7
  store i8** %44, i8*** %12, align 8
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZN4llvm18getAsSignedIntegerENS_9StringRefEjRx(i8*, i64, i32, i64* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: optsize
declare zeroext i1 @_ZN4llvm20getAsUnsignedIntegerENS_9StringRefEjRy(i8*, i64, i32, i64* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define internal zeroext i1 @_ZN4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE16handleOccurrenceEjNS_9StringRefES7_(%"class.llvm::cl::opt.106"* nocapture, i32, i8* nocapture readnone, i64, i8*, i64) unnamed_addr #0 align 2 {
  %7 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #22
  store i8 0, i8* %7, align 1
  %8 = bitcast %"class.llvm::cl::opt.106"* %0 to %"class.llvm::cl::Option"*
  %9 = call zeroext i1 @_ZN4llvm2cl6parserIbE5parseERNS0_6OptionENS_9StringRefES5_Rb(%"class.llvm::cl::parser.38"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %8, i8* undef, i64 undef, i8* %4, i64 %5, i8* nonnull dereferenceable(1) %7) #23
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = load i8, i8* %7, align 1, !range !10
  %12 = icmp ne i8 %11, 0
  %13 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.(anonymous namespace)::HelpPrinter"*, %"class.(anonymous namespace)::HelpPrinter"** %13, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_111HelpPrinteraSEb(%"class.(anonymous namespace)::HelpPrinter"* %14, i1 zeroext %12) #24
  %15 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %15, align 8
  br label %16

16:                                               ; preds = %6, %10
  %17 = phi i1 [ false, %10 ], [ true, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #22
  ret i1 %17
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define internal i32 @_ZNK4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE27getValueExpectedFlagDefaultEv(%"class.llvm::cl::opt.106"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEED0Ev(%"class.llvm::cl::opt.106"*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8** %4 to i8*
  tail call void @free(i8* %9) #24
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.llvm::cl::opt.106"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #25
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal i64 @_ZNK4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE14getOptionWidthEv(%"class.llvm::cl::opt.106"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 6, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.llvm::cl::basic_parser_impl"* %2 to { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)***
  %6 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %5, align 8
  %7 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %6, align 8
  %8 = tail call { i8*, i64 } %7(%"class.llvm::cl::basic_parser_impl"* %2) #24
  %9 = extractvalue { i8*, i64 } %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 8, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i64 %9, i64 %13
  %16 = add i64 %4, 3
  %17 = add i64 %16, %15
  br label %18

18:                                               ; preds = %1, %11
  %19 = phi i64 [ %4, %1 ], [ %17, %11 ]
  %20 = add i64 %19, 6
  ret i64 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZNK4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE15printOptionInfoEm(%"class.llvm::cl::opt.106"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.llvm::cl::opt.106"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* %3, %"class.llvm::cl::Option"* dereferenceable(152) %4, i64 %1) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZNK4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE16printOptionValueEmb(%"class.llvm::cl::opt.106"* nocapture readonly, i64, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %2, label %4, label %6

4:                                                ; preds = %3
  %5 = bitcast %"class.llvm::cl::opt.106"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZNK4llvm2cl17basic_parser_impl18printOptionNoValueERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %5, i64 %1) #24
  br label %6

6:                                                ; preds = %3, %4
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define internal void @_ZN4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE(%"class.llvm::cl::opt.106"* nocapture, %"class.llvm::SmallVectorImpl"* nocapture dereferenceable(40)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define internal zeroext i1 @_ZNK4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111HelpPrinterELb1EE7compareERKNS0_18GenericOptionValueE(%"struct.llvm::cl::OptionValueBase.109"* nocapture readnone, %"struct.llvm::cl::GenericOptionValue"* nocapture readnone dereferenceable(8)) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN4llvm2cl5applyINS0_3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEENS0_4descEJNS0_13LocationClassIS4_EENS0_12OptionHiddenENS0_13ValueExpectedENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.106"*, %"struct.llvm::cl::desc"* nocapture readonly dereferenceable(16), %"struct.llvm::cl::LocationClass"* nocapture readonly dereferenceable(8), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), %"struct.llvm::cl::cat"* nocapture readonly dereferenceable(8), %"struct.llvm::cl::sub"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %8 = alloca %"struct.std::__1::pair.132", align 8
  %9 = alloca %"class.llvm::Twine", align 8
  %10 = bitcast %"struct.llvm::cl::desc"* %1 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  %12 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 7, i32 0
  %13 = bitcast i8** %12 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %13, align 8
  %14 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.llvm::cl::opt_storage.107", %"class.llvm::cl::opt_storage.107"* %14, i64 0, i32 0
  %16 = load %"class.(anonymous namespace)::HelpPrinter"*, %"class.(anonymous namespace)::HelpPrinter"** %15, align 8
  %17 = icmp eq %"class.(anonymous namespace)::HelpPrinter"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.llvm::cl::opt.106"* %0 to %"class.llvm::cl::Option"*
  %20 = bitcast %"class.llvm::Twine"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #22
  %21 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 3
  store i8 1, i8* %21, align 1
  %22 = bitcast %"class.llvm::Twine"* %9 to i8**
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.112, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %9, i64 0, i32 2
  store i8 3, i8* %23, align 8
  %24 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %19, %"class.llvm::Twine"* nonnull dereferenceable(24) %9, i8* null, i64 0) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #22
  br label %29

25:                                               ; preds = %7
  %26 = bitcast %"struct.llvm::cl::LocationClass"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.llvm::cl::opt_storage.107"* %14 to i64*
  store i64 %27, i64* %28, align 8
  br label %29

29:                                               ; preds = %18, %25
  %30 = load i32, i32* %3, align 4
  %31 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 2
  %32 = trunc i32 %30 to i16
  %33 = load i16, i16* %31, align 4
  %34 = shl i16 %32, 5
  %35 = and i16 %34, 96
  %36 = and i16 %33, -97
  %37 = or i16 %35, %36
  store i16 %37, i16* %31, align 4
  %38 = load i32, i32* %4, align 4
  %39 = trunc i32 %38 to i16
  %40 = shl i16 %39, 3
  %41 = and i16 %40, 24
  %42 = and i16 %37, -25
  %43 = or i16 %41, %42
  store i16 %43, i16* %31, align 4
  %44 = bitcast %"struct.llvm::cl::cat"* %5 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 9
  %47 = bitcast %"class.llvm::cl::OptionCategory"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.llvm::cl::sub", %"struct.llvm::cl::sub"* %6, i64 0, i32 0
  %49 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %48, align 8
  %50 = getelementptr inbounds %"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* %0, i64 0, i32 0, i32 10
  %51 = bitcast %"class.llvm::SmallPtrSet"* %50 to %"class.llvm::SmallPtrSetImpl"*
  %52 = bitcast %"struct.std::__1::pair.132"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #22
  call void @_ZN4llvm15SmallPtrSetImplIPNS_2cl10SubCommandEE6insertES3_(%"struct.std::__1::pair.132"* nonnull sret %8, %"class.llvm::SmallPtrSetImpl"* %51, %"class.llvm::cl::SubCommand"* %49) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal zeroext i1 @_ZN4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE16handleOccurrenceEjNS_9StringRefES7_(%"class.llvm::cl::opt.110"* nocapture, i32, i8* nocapture readnone, i64, i8*, i64) unnamed_addr #0 align 2 {
  %7 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #22
  store i8 0, i8* %7, align 1
  %8 = bitcast %"class.llvm::cl::opt.110"* %0 to %"class.llvm::cl::Option"*
  %9 = call zeroext i1 @_ZN4llvm2cl6parserIbE5parseERNS0_6OptionENS_9StringRefES5_Rb(%"class.llvm::cl::parser.38"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %8, i8* undef, i64 undef, i8* %4, i64 %5, i8* nonnull dereferenceable(1) %7) #23
  br i1 %9, label %40, label %10

10:                                               ; preds = %6
  %11 = load i8, i8* %7, align 1, !range !10
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.(anonymous namespace)::HelpPrinterWrapper"*, %"class.(anonymous namespace)::HelpPrinterWrapper"** %13, align 8
  br i1 %12, label %38, label %15

15:                                               ; preds = %10
  %16 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) acquire, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorIN12_GLOBAL__N_117CommandLineParserEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterIN12_GLOBAL__N_117CommandLineParserEE4callEPv) #24
  br label %19

19:                                               ; preds = %18, %15
  %20 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZL12GlobalParser to i64*) monotonic, align 8
  %21 = inttoptr i64 %20 to %"class.(anonymous namespace)::CommandLineParser"*
  %22 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %21, i64 0, i32 3, i32 0, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.(anonymous namespace)::CommandLineParser", %"class.(anonymous namespace)::CommandLineParser"* %21, i64 0, i32 3, i32 0, i32 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = sub i32 %23, %25
  %27 = icmp ugt i32 %26, 1
  br i1 %27, label %28, label %33

28:                                               ; preds = %19
  %29 = load i16, i16* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 2), align 4
  %30 = and i16 %29, -97
  store i16 %30, i16* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 2), align 4
  %31 = getelementptr inbounds %"class.(anonymous namespace)::HelpPrinterWrapper", %"class.(anonymous namespace)::HelpPrinterWrapper"* %14, i64 0, i32 1
  %32 = bitcast %"class.(anonymous namespace)::CategorizedHelpPrinter"** %31 to %"class.(anonymous namespace)::HelpPrinter"**
  br label %35

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.(anonymous namespace)::HelpPrinterWrapper", %"class.(anonymous namespace)::HelpPrinterWrapper"* %14, i64 0, i32 0
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi %"class.(anonymous namespace)::HelpPrinter"** [ %32, %28 ], [ %34, %33 ]
  %37 = load %"class.(anonymous namespace)::HelpPrinter"*, %"class.(anonymous namespace)::HelpPrinter"** %36, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_111HelpPrinteraSEb(%"class.(anonymous namespace)::HelpPrinter"* %37, i1 zeroext true) #24
  br label %38

38:                                               ; preds = %35, %10
  %39 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %39, align 8
  br label %40

40:                                               ; preds = %6, %38
  %41 = phi i1 [ false, %38 ], [ true, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #22
  ret i1 %41
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define internal i32 @_ZNK4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE27getValueExpectedFlagDefaultEv(%"class.llvm::cl::opt.110"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEED0Ev(%"class.llvm::cl::opt.110"*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl6OptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8** %4 to i8*
  tail call void @free(i8* %9) #24
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.llvm::cl::opt.110"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #25
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal i64 @_ZNK4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE14getOptionWidthEv(%"class.llvm::cl::opt.110"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %0, i64 0, i32 0, i32 6, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.llvm::cl::basic_parser_impl"* %2 to { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)***
  %6 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)**, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*** %5, align 8
  %7 = load { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)*, { i8*, i64 } (%"class.llvm::cl::basic_parser_impl"*)** %6, align 8
  %8 = tail call { i8*, i64 } %7(%"class.llvm::cl::basic_parser_impl"* %2) #24
  %9 = extractvalue { i8*, i64 } %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %0, i64 0, i32 0, i32 8, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i64 %9, i64 %13
  %16 = add i64 %4, 3
  %17 = add i64 %16, %15
  br label %18

18:                                               ; preds = %1, %11
  %19 = phi i64 [ %4, %1 ], [ %17, %11 ]
  %20 = add i64 %19, 6
  ret i64 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZNK4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE15printOptionInfoEm(%"class.llvm::cl::opt.110"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.llvm::cl::opt.110"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* %3, %"class.llvm::cl::Option"* dereferenceable(152) %4, i64 %1) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZNK4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE16printOptionValueEmb(%"class.llvm::cl::opt.110"* nocapture readonly, i64, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %2, label %4, label %6

4:                                                ; preds = %3
  %5 = bitcast %"class.llvm::cl::opt.110"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZNK4llvm2cl17basic_parser_impl18printOptionNoValueERKNS0_6OptionEm(%"class.llvm::cl::basic_parser_impl"* undef, %"class.llvm::cl::Option"* dereferenceable(152) %5, i64 %1) #24
  br label %6

6:                                                ; preds = %3, %4
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define internal void @_ZN4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE(%"class.llvm::cl::opt.110"* nocapture, %"class.llvm::SmallVectorImpl"* nocapture dereferenceable(40)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define internal zeroext i1 @_ZNK4llvm2cl15OptionValueBaseIN12_GLOBAL__N_118HelpPrinterWrapperELb1EE7compareERKNS0_18GenericOptionValueE(%"struct.llvm::cl::OptionValueBase.113"* nocapture readnone, %"struct.llvm::cl::GenericOptionValue"* nocapture readnone dereferenceable(8)) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN4llvm2cl10applicatorINS0_13LocationClassIN12_GLOBAL__N_118HelpPrinterWrapperEEEE3optINS0_3optIS4_Lb1ENS0_6parserIbEEEEEEvRKS5_RT_(%"struct.llvm::cl::LocationClass.114"* nocapture readonly dereferenceable(8), %"class.llvm::cl::opt.110"* nocapture dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.llvm::Twine", align 8
  %4 = getelementptr inbounds %"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.llvm::cl::opt_storage.111", %"class.llvm::cl::opt_storage.111"* %4, i64 0, i32 0
  %6 = load %"class.(anonymous namespace)::HelpPrinterWrapper"*, %"class.(anonymous namespace)::HelpPrinterWrapper"** %5, align 8
  %7 = icmp eq %"class.(anonymous namespace)::HelpPrinterWrapper"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.llvm::cl::opt.110"* %1 to %"class.llvm::cl::Option"*
  %10 = bitcast %"class.llvm::Twine"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #22
  %11 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 3
  store i8 1, i8* %11, align 1
  %12 = bitcast %"class.llvm::Twine"* %3 to i8**
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.112, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %3, i64 0, i32 2
  store i8 3, i8* %13, align 8
  %14 = call zeroext i1 @_ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE(%"class.llvm::cl::Option"* %9, %"class.llvm::Twine"* nonnull dereferenceable(24) %3, i8* null, i64 0) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #22
  br label %19

15:                                               ; preds = %2
  %16 = bitcast %"struct.llvm::cl::LocationClass.114"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.llvm::cl::opt_storage.111"* %4 to i64*
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %8, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEEA14_cJNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.31"*, [14 x i8]* dereferenceable(14), %"struct.llvm::cl::desc"* dereferenceable(16), i32* dereferenceable(4), %"struct.llvm::cl::initializer"* dereferenceable(8), %"struct.llvm::cl::cat"* dereferenceable(8), %"struct.llvm::cl::sub"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %8 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 0
  %9 = icmp eq [14 x i8]* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call i64 @strlen(i8* nonnull %8) #27
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %7 ]
  %14 = bitcast %"class.llvm::cl::opt.31"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZN4llvm2cl6Option9setArgStrENS_9StringRefE(%"class.llvm::cl::Option"* %14, i8* %8, i64 %13) #24
  %15 = bitcast %"struct.llvm::cl::desc"* %2 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 7, i32 0
  %18 = bitcast i8** %17 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %18, align 8
  tail call void @_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEENS0_12OptionHiddenEJNS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.31"* %0, i32* dereferenceable(4) %3, %"struct.llvm::cl::initializer"* dereferenceable(8) %4, %"struct.llvm::cl::cat"* dereferenceable(8) %5, %"struct.llvm::cl::sub"* dereferenceable(8) %6) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEENS0_12OptionHiddenEJNS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.31"*, i32* dereferenceable(4), %"struct.llvm::cl::initializer"* dereferenceable(8), %"struct.llvm::cl::cat"* dereferenceable(8), %"struct.llvm::cl::sub"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.std::__1::pair.132", align 8
  %7 = load i32, i32* %1, align 4
  %8 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 2
  %9 = trunc i32 %7 to i16
  %10 = load i16, i16* %8, align 4
  %11 = shl i16 %9, 5
  %12 = and i16 %11, 96
  %13 = and i16 %10, -97
  %14 = or i16 %12, %13
  store i16 %14, i16* %8, align 4
  %15 = getelementptr inbounds %"struct.llvm::cl::initializer", %"struct.llvm::cl::initializer"* %2, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 2, i32 0
  %18 = load i8, i8* %16, align 1, !range !10
  store i8 %18, i8* %17, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 17
  store i8 1, i8* %19, align 1
  %20 = load i8, i8* %16, align 1, !range !10
  %21 = getelementptr inbounds i8, i8* %17, i64 16
  store i8 %20, i8* %21, align 8
  %22 = bitcast %"struct.llvm::cl::cat"* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 9
  %25 = bitcast %"class.llvm::cl::OptionCategory"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.llvm::cl::sub", %"struct.llvm::cl::sub"* %4, i64 0, i32 0
  %27 = load %"class.llvm::cl::SubCommand"*, %"class.llvm::cl::SubCommand"** %26, align 8
  %28 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 10
  %29 = bitcast %"class.llvm::SmallPtrSet"* %28 to %"class.llvm::SmallPtrSetImpl"*
  %30 = bitcast %"struct.std::__1::pair.132"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #22
  call void @_ZN4llvm15SmallPtrSetImplIPNS_2cl10SubCommandEE6insertES3_(%"struct.std::__1::pair.132"* nonnull sret %6, %"class.llvm::SmallPtrSetImpl"* %29, %"class.llvm::cl::SubCommand"* %27) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEEA18_cJNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.31"*, [18 x i8]* dereferenceable(18), %"struct.llvm::cl::desc"* dereferenceable(16), i32* dereferenceable(4), %"struct.llvm::cl::initializer"* dereferenceable(8), %"struct.llvm::cl::cat"* dereferenceable(8), %"struct.llvm::cl::sub"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %8 = getelementptr inbounds [18 x i8], [18 x i8]* %1, i64 0, i64 0
  %9 = icmp eq [18 x i8]* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call i64 @strlen(i8* nonnull %8) #27
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %7 ]
  %14 = bitcast %"class.llvm::cl::opt.31"* %0 to %"class.llvm::cl::Option"*
  tail call void @_ZN4llvm2cl6Option9setArgStrENS_9StringRefE(%"class.llvm::cl::Option"* %14, i8* %8, i64 %13) #24
  %15 = bitcast %"struct.llvm::cl::desc"* %2 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = getelementptr inbounds %"class.llvm::cl::opt.31", %"class.llvm::cl::opt.31"* %0, i64 0, i32 0, i32 7, i32 0
  %18 = bitcast i8** %17 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %18, align 8
  tail call void @_ZN4llvm2cl5applyINS0_3optIbLb0ENS0_6parserIbEEEENS0_12OptionHiddenEJNS0_11initializerIbEENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.31"* %0, i32* dereferenceable(4) %3, %"struct.llvm::cl::initializer"* dereferenceable(8) %4, %"struct.llvm::cl::cat"* dereferenceable(8) %5, %"struct.llvm::cl::sub"* dereferenceable(8) %6) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_GLOBAL__sub_I_CommandLine.cpp() #0 section ".text.startup" {
  %1 = alloca %"struct.std::__1::pair.132", align 8
  %2 = alloca %"struct.llvm::cl::LocationClass.114", align 8
  %3 = alloca %"struct.std::__1::pair.132", align 8
  %4 = alloca %"struct.llvm::cl::LocationClass.114", align 8
  %5 = alloca %"struct.llvm::cl::desc", align 8
  %6 = alloca %"struct.llvm::cl::LocationClass", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"struct.llvm::cl::cat", align 8
  %10 = alloca %"struct.llvm::cl::sub", align 8
  %11 = alloca %"struct.llvm::cl::desc", align 8
  %12 = alloca %"struct.llvm::cl::LocationClass", align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"struct.llvm::cl::cat", align 8
  %16 = alloca %"struct.llvm::cl::sub", align 8
  %17 = alloca %"struct.llvm::cl::desc", align 8
  %18 = alloca i32, align 4
  %19 = alloca %"struct.llvm::cl::initializer", align 8
  %20 = alloca i8, align 1
  %21 = alloca %"struct.llvm::cl::cat", align 8
  %22 = alloca %"struct.llvm::cl::sub", align 8
  %23 = alloca %"struct.llvm::cl::desc", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"struct.llvm::cl::initializer", align 8
  %26 = alloca i8, align 1
  %27 = alloca %"struct.llvm::cl::cat", align 8
  %28 = alloca %"struct.llvm::cl::sub", align 8
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8** getelementptr inbounds (%"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, i64 0, i32 0, i32 0), align 8
  store i64 15, i64* getelementptr inbounds (%"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, i64 0, i32 0, i32 1), align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** getelementptr inbounds (%"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, i64 0, i32 1, i32 0), align 8
  store i64 0, i64* getelementptr inbounds (%"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, i64 0, i32 1, i32 1), align 8
  tail call void @_ZN4llvm2cl14OptionCategory16registerCategoryEv(%"class.llvm::cl::OptionCategory"* nonnull @_ZN4llvm2cl15GeneralCategoryE) #24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_111HelpPrinterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** getelementptr inbounds (%"class.(anonymous namespace)::HelpPrinter", %"class.(anonymous namespace)::HelpPrinter"* @_ZL26UncategorizedNormalPrinter, i64 0, i32 0), align 8
  store i8 0, i8* getelementptr inbounds (%"class.(anonymous namespace)::HelpPrinter", %"class.(anonymous namespace)::HelpPrinter"* @_ZL26UncategorizedNormalPrinter, i64 0, i32 1), align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_111HelpPrinterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** getelementptr inbounds (%"class.(anonymous namespace)::HelpPrinter", %"class.(anonymous namespace)::HelpPrinter"* @_ZL26UncategorizedHiddenPrinter, i64 0, i32 0), align 8
  store i8 1, i8* getelementptr inbounds (%"class.(anonymous namespace)::HelpPrinter", %"class.(anonymous namespace)::HelpPrinter"* @_ZL26UncategorizedHiddenPrinter, i64 0, i32 1), align 8
  store i8 0, i8* getelementptr inbounds (%"class.(anonymous namespace)::CategorizedHelpPrinter", %"class.(anonymous namespace)::CategorizedHelpPrinter"* @_ZL24CategorizedNormalPrinter, i64 0, i32 0, i32 1), align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_122CategorizedHelpPrinterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** getelementptr inbounds (%"class.(anonymous namespace)::CategorizedHelpPrinter", %"class.(anonymous namespace)::CategorizedHelpPrinter"* @_ZL24CategorizedNormalPrinter, i64 0, i32 0, i32 0), align 8
  store i8 1, i8* getelementptr inbounds (%"class.(anonymous namespace)::CategorizedHelpPrinter", %"class.(anonymous namespace)::CategorizedHelpPrinter"* @_ZL24CategorizedHiddenPrinter, i64 0, i32 0, i32 1), align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_122CategorizedHelpPrinterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** getelementptr inbounds (%"class.(anonymous namespace)::CategorizedHelpPrinter", %"class.(anonymous namespace)::CategorizedHelpPrinter"* @_ZL24CategorizedHiddenPrinter, i64 0, i32 0, i32 0), align 8
  store %"class.(anonymous namespace)::HelpPrinter"* @_ZL26UncategorizedNormalPrinter, %"class.(anonymous namespace)::HelpPrinter"** getelementptr inbounds (%"class.(anonymous namespace)::HelpPrinterWrapper", %"class.(anonymous namespace)::HelpPrinterWrapper"* @_ZL20WrappedNormalPrinter, i64 0, i32 0), align 8
  store %"class.(anonymous namespace)::CategorizedHelpPrinter"* @_ZL24CategorizedNormalPrinter, %"class.(anonymous namespace)::CategorizedHelpPrinter"** getelementptr inbounds (%"class.(anonymous namespace)::HelpPrinterWrapper", %"class.(anonymous namespace)::HelpPrinterWrapper"* @_ZL20WrappedNormalPrinter, i64 0, i32 1), align 8
  store %"class.(anonymous namespace)::HelpPrinter"* @_ZL26UncategorizedHiddenPrinter, %"class.(anonymous namespace)::HelpPrinter"** getelementptr inbounds (%"class.(anonymous namespace)::HelpPrinterWrapper", %"class.(anonymous namespace)::HelpPrinterWrapper"* @_ZL20WrappedHiddenPrinter, i64 0, i32 0), align 8
  store %"class.(anonymous namespace)::CategorizedHelpPrinter"* @_ZL24CategorizedHiddenPrinter, %"class.(anonymous namespace)::CategorizedHelpPrinter"** getelementptr inbounds (%"class.(anonymous namespace)::HelpPrinterWrapper", %"class.(anonymous namespace)::HelpPrinterWrapper"* @_ZL20WrappedHiddenPrinter, i64 0, i32 1), align 8
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i8** getelementptr inbounds (%"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory, i64 0, i32 0, i32 0), align 8
  store i64 15, i64* getelementptr inbounds (%"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory, i64 0, i32 0, i32 1), align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** getelementptr inbounds (%"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory, i64 0, i32 1, i32 0), align 8
  store i64 0, i64* getelementptr inbounds (%"class.llvm::cl::OptionCategory", %"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory, i64 0, i32 1, i32 1), align 8
  tail call void @_ZN4llvm2cl14OptionCategory16registerCategoryEv(%"class.llvm::cl::OptionCategory"* nonnull @_ZL15GenericCategory) #24
  %29 = bitcast %"struct.llvm::cl::desc"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #22
  %30 = getelementptr inbounds %"struct.llvm::cl::desc", %"struct.llvm::cl::desc"* %11, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.41, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"struct.llvm::cl::desc", %"struct.llvm::cl::desc"* %11, i64 0, i32 0, i32 1
  store i64 62, i64* %31, align 8
  %32 = bitcast %"struct.llvm::cl::LocationClass"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #22
  %33 = getelementptr inbounds %"struct.llvm::cl::LocationClass", %"struct.llvm::cl::LocationClass"* %12, i64 0, i32 0
  store %"class.(anonymous namespace)::HelpPrinter"* @_ZL26UncategorizedNormalPrinter, %"class.(anonymous namespace)::HelpPrinter"** %33, align 8
  %34 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #22
  store i32 1, i32* %13, align 4
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #22
  store i32 3, i32* %14, align 4
  %36 = bitcast %"struct.llvm::cl::cat"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #22
  %37 = getelementptr inbounds %"struct.llvm::cl::cat", %"struct.llvm::cl::cat"* %15, i64 0, i32 0
  store %"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory, %"class.llvm::cl::OptionCategory"** %37, align 8
  %38 = bitcast %"struct.llvm::cl::sub"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #22
  %39 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %0
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %42

42:                                               ; preds = %0, %41
  %43 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %44 = inttoptr i64 %43 to %"class.llvm::cl::SubCommand"*
  %45 = getelementptr inbounds %"struct.llvm::cl::sub", %"struct.llvm::cl::sub"* %16, i64 0, i32 0
  store %"class.llvm::cl::SubCommand"* %44, %"class.llvm::cl::SubCommand"** %45, align 8
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 1), align 8
  %46 = load i16, i16* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 2), align 4
  %47 = and i16 %46, -4096
  store i16 %47, i16* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 2), align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 4) to i8*), i8 0, i64 56, i1 false) #22
  store %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, %"class.llvm::cl::OptionCategory"** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 9), align 8
  store <2 x i8**> <i8** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 10, i32 1, i64 0), i8** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 10, i32 1, i64 0)>, <2 x i8**>* bitcast (i8*** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0) to <2 x i8**>*), align 8
  store i32 4, i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 2), align 8
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 3), align 4
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 4), align 8
  store i8 0, i8* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 11), align 8
  store %"class.(anonymous namespace)::HelpPrinter"* null, %"class.(anonymous namespace)::HelpPrinter"** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 1, i32 0), align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 0, i32 0), align 8
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIN12_GLOBAL__N_111HelpPrinterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl6parserIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* bitcast (i32 (...)*** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL4HLOp, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0) to <2 x i32 (...)**>*), align 8
  tail call void @_ZN4llvm2cl6Option9setArgStrENS_9StringRefE(%"class.llvm::cl::Option"* bitcast (%"class.llvm::cl::opt.106"* @_ZL4HLOp to %"class.llvm::cl::Option"*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), i64 9) #24
  call fastcc void @_ZN4llvm2cl5applyINS0_3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEENS0_4descEJNS0_13LocationClassIS4_EENS0_12OptionHiddenENS0_13ValueExpectedENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.106"* nonnull @_ZL4HLOp, %"struct.llvm::cl::desc"* nonnull dereferenceable(16) %11, %"struct.llvm::cl::LocationClass"* nonnull dereferenceable(8) %12, i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %14, %"struct.llvm::cl::cat"* nonnull dereferenceable(8) %15, %"struct.llvm::cl::sub"* nonnull dereferenceable(8) %16) #24
  tail call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* bitcast (%"class.llvm::cl::opt.106"* @_ZL4HLOp to %"class.llvm::cl::Option"*)) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #22
  %48 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to void (i8*)*), i8* bitcast (%"class.llvm::cl::opt.106"* @_ZL4HLOp to i8*), i8* nonnull @__dso_handle) #22
  %49 = bitcast %"struct.llvm::cl::desc"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #22
  %50 = getelementptr inbounds %"struct.llvm::cl::desc", %"struct.llvm::cl::desc"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.44, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds %"struct.llvm::cl::desc", %"struct.llvm::cl::desc"* %5, i64 0, i32 0, i32 1
  store i64 37, i64* %51, align 8
  %52 = bitcast %"struct.llvm::cl::LocationClass"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #22
  %53 = getelementptr inbounds %"struct.llvm::cl::LocationClass", %"struct.llvm::cl::LocationClass"* %6, i64 0, i32 0
  store %"class.(anonymous namespace)::HelpPrinter"* @_ZL26UncategorizedHiddenPrinter, %"class.(anonymous namespace)::HelpPrinter"** %53, align 8
  %54 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #22
  store i32 1, i32* %7, align 4
  %55 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #22
  store i32 3, i32* %8, align 4
  %56 = bitcast %"struct.llvm::cl::cat"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #22
  %57 = getelementptr inbounds %"struct.llvm::cl::cat", %"struct.llvm::cl::cat"* %9, i64 0, i32 0
  store %"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory, %"class.llvm::cl::OptionCategory"** %57, align 8
  %58 = bitcast %"struct.llvm::cl::sub"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #22
  %59 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %42
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %62

62:                                               ; preds = %42, %61
  %63 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %64 = inttoptr i64 %63 to %"class.llvm::cl::SubCommand"*
  %65 = getelementptr inbounds %"struct.llvm::cl::sub", %"struct.llvm::cl::sub"* %10, i64 0, i32 0
  store %"class.llvm::cl::SubCommand"* %64, %"class.llvm::cl::SubCommand"** %65, align 8
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 1), align 8
  %66 = load i16, i16* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 2), align 4
  %67 = and i16 %66, -4096
  store i16 %67, i16* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 2), align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 4) to i8*), i8 0, i64 56, i1 false) #22
  store %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, %"class.llvm::cl::OptionCategory"** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 9), align 8
  store <2 x i8**> <i8** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 10, i32 1, i64 0), i8** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 10, i32 1, i64 0)>, <2 x i8**>* bitcast (i8*** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0) to <2 x i8**>*), align 8
  store i32 4, i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 2), align 8
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 3), align 4
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 4), align 8
  store i8 0, i8* getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 11), align 8
  store %"class.(anonymous namespace)::HelpPrinter"* null, %"class.(anonymous namespace)::HelpPrinter"** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 1, i32 0), align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 0, i32 0), align 8
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIN12_GLOBAL__N_111HelpPrinterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl6parserIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* bitcast (i32 (...)*** getelementptr inbounds (%"class.llvm::cl::opt.106", %"class.llvm::cl::opt.106"* @_ZL5HLHOp, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0) to <2 x i32 (...)**>*), align 8
  tail call void @_ZN4llvm2cl6Option9setArgStrENS_9StringRefE(%"class.llvm::cl::Option"* bitcast (%"class.llvm::cl::opt.106"* @_ZL5HLHOp to %"class.llvm::cl::Option"*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i64 16) #24
  call fastcc void @_ZN4llvm2cl5applyINS0_3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEENS0_4descEJNS0_13LocationClassIS4_EENS0_12OptionHiddenENS0_13ValueExpectedENS0_3catENS0_3subEEEEvPT_RKT0_DpRKT1_(%"class.llvm::cl::opt.106"* nonnull @_ZL5HLHOp, %"struct.llvm::cl::desc"* nonnull dereferenceable(16) %5, %"struct.llvm::cl::LocationClass"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8, %"struct.llvm::cl::cat"* nonnull dereferenceable(8) %9, %"struct.llvm::cl::sub"* nonnull dereferenceable(8) %10) #24
  tail call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* bitcast (%"class.llvm::cl::opt.106"* @_ZL5HLHOp to %"class.llvm::cl::Option"*)) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #22
  %68 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to void (i8*)*), i8* bitcast (%"class.llvm::cl::opt.106"* @_ZL5HLHOp to i8*), i8* nonnull @__dso_handle) #22
  %69 = bitcast %"struct.llvm::cl::LocationClass.114"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #22
  %70 = getelementptr inbounds %"struct.llvm::cl::LocationClass.114", %"struct.llvm::cl::LocationClass.114"* %4, i64 0, i32 0
  store %"class.(anonymous namespace)::HelpPrinterWrapper"* @_ZL20WrappedNormalPrinter, %"class.(anonymous namespace)::HelpPrinterWrapper"** %70, align 8
  %71 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %62
  tail call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %74

74:                                               ; preds = %62, %73
  %75 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %76 = inttoptr i64 %75 to %"class.llvm::cl::SubCommand"*
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 1), align 8
  %77 = load i16, i16* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 2), align 4
  %78 = and i16 %77, -4096
  store i16 %78, i16* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 2), align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 4) to i8*), i8 0, i64 56, i1 false) #22
  store %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, %"class.llvm::cl::OptionCategory"** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 9), align 8
  store <2 x i8**> <i8** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 10, i32 1, i64 0), i8** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 10, i32 1, i64 0)>, <2 x i8**>* bitcast (i8*** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0) to <2 x i8**>*), align 8
  store i32 4, i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 2), align 8
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 3), align 4
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 4), align 8
  store i8 0, i8* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 11), align 8
  store %"class.(anonymous namespace)::HelpPrinterWrapper"* null, %"class.(anonymous namespace)::HelpPrinterWrapper"** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 1, i32 0), align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 0), align 8
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIN12_GLOBAL__N_118HelpPrinterWrapperEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl6parserIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* bitcast (i32 (...)*** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0) to <2 x i32 (...)**>*), align 8
  tail call void @_ZN4llvm2cl6Option9setArgStrENS_9StringRefE(%"class.llvm::cl::Option"* bitcast (%"class.llvm::cl::opt.110"* @_ZL3HOp to %"class.llvm::cl::Option"*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i64 4) #24
  store <2 x i64> <i64 ptrtoint ([50 x i8]* @.str.47 to i64), i64 49>, <2 x i64>* bitcast (i8** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 7, i32 0) to <2 x i64>*), align 8
  call fastcc void @_ZN4llvm2cl10applicatorINS0_13LocationClassIN12_GLOBAL__N_118HelpPrinterWrapperEEEE3optINS0_3optIS4_Lb1ENS0_6parserIbEEEEEEvRKS5_RT_(%"struct.llvm::cl::LocationClass.114"* nonnull dereferenceable(8) %4, %"class.llvm::cl::opt.110"* nonnull dereferenceable(176) @_ZL3HOp) #24
  %79 = load i16, i16* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 2), align 4
  %80 = or i16 %79, 24
  store i16 %80, i16* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 2), align 4
  store i64 ptrtoint (%"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory to i64), i64* bitcast (%"class.llvm::cl::OptionCategory"** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 9) to i64*), align 8
  %81 = bitcast %"struct.std::__1::pair.132"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #22
  call void @_ZN4llvm15SmallPtrSetImplIPNS_2cl10SubCommandEE6insertES3_(%"struct.std::__1::pair.132"* nonnull sret %3, %"class.llvm::SmallPtrSetImpl"* bitcast (%"class.llvm::SmallPtrSet"* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL3HOp, i64 0, i32 0, i32 10) to %"class.llvm::SmallPtrSetImpl"*), %"class.llvm::cl::SubCommand"* %76) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #22
  call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* bitcast (%"class.llvm::cl::opt.110"* @_ZL3HOp to %"class.llvm::cl::Option"*)) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #22
  %82 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to void (i8*)*), i8* bitcast (%"class.llvm::cl::opt.110"* @_ZL3HOp to i8*), i8* nonnull @__dso_handle) #22
  %83 = bitcast %"struct.llvm::cl::LocationClass.114"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #22
  %84 = getelementptr inbounds %"struct.llvm::cl::LocationClass.114", %"struct.llvm::cl::LocationClass.114"* %2, i64 0, i32 0
  store %"class.(anonymous namespace)::HelpPrinterWrapper"* @_ZL20WrappedHiddenPrinter, %"class.(anonymous namespace)::HelpPrinterWrapper"** %84, align 8
  %85 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %74
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %88

88:                                               ; preds = %74, %87
  %89 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %90 = inttoptr i64 %89 to %"class.llvm::cl::SubCommand"*
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 1), align 8
  %91 = load i16, i16* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 2), align 4
  %92 = and i16 %91, -4096
  store i16 %92, i16* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 2), align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 4) to i8*), i8 0, i64 56, i1 false) #22
  store %"class.llvm::cl::OptionCategory"* @_ZN4llvm2cl15GeneralCategoryE, %"class.llvm::cl::OptionCategory"** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 9), align 8
  store <2 x i8**> <i8** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 10, i32 1, i64 0), i8** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 10, i32 1, i64 0)>, <2 x i8**>* bitcast (i8*** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0) to <2 x i8**>*), align 8
  store i32 4, i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 2), align 8
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 3), align 4
  store i32 0, i32* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 10, i32 0, i32 0, i32 4), align 8
  store i8 0, i8* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 11), align 8
  store %"class.(anonymous namespace)::HelpPrinterWrapper"* null, %"class.(anonymous namespace)::HelpPrinterWrapper"** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 1, i32 0), align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 0), align 8
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl11OptionValueIN12_GLOBAL__N_118HelpPrinterWrapperEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4llvm2cl6parserIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* bitcast (i32 (...)*** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0) to <2 x i32 (...)**>*), align 8
  call void @_ZN4llvm2cl6Option9setArgStrENS_9StringRefE(%"class.llvm::cl::Option"* bitcast (%"class.llvm::cl::opt.110"* @_ZL4HHOp to %"class.llvm::cl::Option"*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i64 0, i64 0), i64 11) #24
  store <2 x i64> <i64 ptrtoint ([30 x i8]* @.str.50 to i64), i64 29>, <2 x i64>* bitcast (i8** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 7, i32 0) to <2 x i64>*), align 8
  call fastcc void @_ZN4llvm2cl10applicatorINS0_13LocationClassIN12_GLOBAL__N_118HelpPrinterWrapperEEEE3optINS0_3optIS4_Lb1ENS0_6parserIbEEEEEEvRKS5_RT_(%"struct.llvm::cl::LocationClass.114"* nonnull dereferenceable(8) %2, %"class.llvm::cl::opt.110"* nonnull dereferenceable(176) @_ZL4HHOp) #24
  %93 = load i16, i16* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 2), align 4
  %94 = and i16 %93, -121
  %95 = or i16 %94, 56
  store i16 %95, i16* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 2), align 4
  store i64 ptrtoint (%"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory to i64), i64* bitcast (%"class.llvm::cl::OptionCategory"** getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 9) to i64*), align 8
  %96 = bitcast %"struct.std::__1::pair.132"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #22
  call void @_ZN4llvm15SmallPtrSetImplIPNS_2cl10SubCommandEE6insertES3_(%"struct.std::__1::pair.132"* nonnull sret %1, %"class.llvm::SmallPtrSetImpl"* bitcast (%"class.llvm::SmallPtrSet"* getelementptr inbounds (%"class.llvm::cl::opt.110", %"class.llvm::cl::opt.110"* @_ZL4HHOp, i64 0, i32 0, i32 10) to %"class.llvm::SmallPtrSetImpl"*), %"class.llvm::cl::SubCommand"* %90) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #22
  call void @_ZN4llvm2cl6Option11addArgumentEv(%"class.llvm::cl::Option"* bitcast (%"class.llvm::cl::opt.110"* @_ZL4HHOp to %"class.llvm::cl::Option"*)) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #22
  %97 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to void (i8*)*), i8* bitcast (%"class.llvm::cl::opt.110"* @_ZL4HHOp to i8*), i8* nonnull @__dso_handle) #22
  %98 = bitcast %"struct.llvm::cl::desc"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #22
  %99 = getelementptr inbounds %"struct.llvm::cl::desc", %"struct.llvm::cl::desc"* %17, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.53, i64 0, i64 0), i8** %99, align 8
  %100 = getelementptr inbounds %"struct.llvm::cl::desc", %"struct.llvm::cl::desc"* %17, i64 0, i32 0, i32 1
  store i64 52, i64* %100, align 8
  %101 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #22
  store i32 1, i32* %18, align 4
  %102 = bitcast %"struct.llvm::cl::initializer"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #22
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #22
  store i8 0, i8* %20, align 1
  %103 = getelementptr inbounds %"struct.llvm::cl::initializer", %"struct.llvm::cl::initializer"* %19, i64 0, i32 0
  store i8* %20, i8** %103, align 8
  %104 = bitcast %"struct.llvm::cl::cat"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #22
  %105 = getelementptr inbounds %"struct.llvm::cl::cat", %"struct.llvm::cl::cat"* %21, i64 0, i32 0
  store %"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory, %"class.llvm::cl::OptionCategory"** %105, align 8
  %106 = bitcast %"struct.llvm::cl::sub"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #22
  %107 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %88
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %110

110:                                              ; preds = %88, %109
  %111 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %112 = inttoptr i64 %111 to %"class.llvm::cl::SubCommand"*
  %113 = getelementptr inbounds %"struct.llvm::cl::sub", %"struct.llvm::cl::sub"* %22, i64 0, i32 0
  store %"class.llvm::cl::SubCommand"* %112, %"class.llvm::cl::SubCommand"** %113, align 8
  call void @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA14_cNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEDpRKT_(%"class.llvm::cl::opt.31"* nonnull @_ZL12PrintOptions, [14 x i8]* nonnull dereferenceable(14) @.str.52, %"struct.llvm::cl::desc"* nonnull dereferenceable(16) %17, i32* nonnull dereferenceable(4) %18, %"struct.llvm::cl::initializer"* nonnull dereferenceable(8) %19, %"struct.llvm::cl::cat"* nonnull dereferenceable(8) %21, %"struct.llvm::cl::sub"* nonnull dereferenceable(8) %22) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #22
  %114 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to void (i8*)*), i8* bitcast (%"class.llvm::cl::opt.31"* @_ZL12PrintOptions to i8*), i8* nonnull @__dso_handle) #22
  %115 = bitcast %"struct.llvm::cl::desc"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #22
  %116 = getelementptr inbounds %"struct.llvm::cl::desc", %"struct.llvm::cl::desc"* %23, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.56, i64 0, i64 0), i8** %116, align 8
  %117 = getelementptr inbounds %"struct.llvm::cl::desc", %"struct.llvm::cl::desc"* %23, i64 0, i32 0, i32 1
  store i64 50, i64* %117, align 8
  %118 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #22
  store i32 1, i32* %24, align 4
  %119 = bitcast %"struct.llvm::cl::initializer"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #22
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #22
  store i8 0, i8* %26, align 1
  %120 = getelementptr inbounds %"struct.llvm::cl::initializer", %"struct.llvm::cl::initializer"* %25, i64 0, i32 0
  store i8* %26, i8** %120, align 8
  %121 = bitcast %"struct.llvm::cl::cat"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #22
  %122 = getelementptr inbounds %"struct.llvm::cl::cat", %"struct.llvm::cl::cat"* %27, i64 0, i32 0
  store %"class.llvm::cl::OptionCategory"* @_ZL15GenericCategory, %"class.llvm::cl::OptionCategory"** %122, align 8
  %123 = bitcast %"struct.llvm::cl::sub"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #22
  %124 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) acquire, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %110
  call void @_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E(%"class.llvm::ManagedStaticBase"* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to %"class.llvm::ManagedStaticBase"*), i8* ()* nonnull @_ZN4llvm14object_creatorINS_2cl10SubCommandEEEPvv, void (i8*)* nonnull @_ZN4llvm14object_deleterINS_2cl10SubCommandEE4callEPv) #24
  br label %127

127:                                              ; preds = %110, %126
  %128 = load atomic i64, i64* bitcast ({ { { i8* } }, void (i8*)*, %"class.llvm::ManagedStaticBase"* }* @_ZN4llvm2cl14AllSubCommandsE to i64*) monotonic, align 8
  %129 = inttoptr i64 %128 to %"class.llvm::cl::SubCommand"*
  %130 = getelementptr inbounds %"struct.llvm::cl::sub", %"struct.llvm::cl::sub"* %28, i64 0, i32 0
  store %"class.llvm::cl::SubCommand"* %129, %"class.llvm::cl::SubCommand"** %130, align 8
  call void @_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEEC2IJA18_cNS0_4descENS0_12OptionHiddenENS0_11initializerIbEENS0_3catENS0_3subEEEEDpRKT_(%"class.llvm::cl::opt.31"* nonnull @_ZL15PrintAllOptions, [18 x i8]* nonnull dereferenceable(18) @.str.55, %"struct.llvm::cl::desc"* nonnull dereferenceable(16) %23, i32* nonnull dereferenceable(4) %24, %"struct.llvm::cl::initializer"* nonnull dereferenceable(8) %25, %"struct.llvm::cl::cat"* nonnull dereferenceable(8) %27, %"struct.llvm::cl::sub"* nonnull dereferenceable(8) %28) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #22
  %131 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.llvm::cl::Option"*)* @_ZN4llvm2cl6OptionD2Ev to void (i8*)*), i8* bitcast (%"class.llvm::cl::opt.31"* @_ZL15PrintAllOptions to i8*), i8* nonnull @__dso_handle) #22
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #20

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #21

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { inlinehint norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { cold noreturn nounwind }
attributes #20 = { nounwind readnone speculatable }
attributes #21 = { nofree nounwind readonly }
attributes #22 = { nounwind }
attributes #23 = { optsize }
attributes #24 = { nounwind optsize }
attributes #25 = { builtin nounwind optsize }
attributes #26 = { noreturn nounwind optsize }
attributes #27 = { nounwind optsize readonly }
attributes #28 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4llvmplEPKcRKNS_9StringRefE: argument 0"}
!4 = distinct !{!4, !"_ZN4llvmplEPKcRKNS_9StringRefE"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!7 = distinct !{!7, !"_ZNK4llvm5Twine6concatERKS0_"}
!8 = distinct !{!8, !9, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!9 = distinct !{!9, !"_ZN4llvmplERKNS_5TwineES2_"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4llvmplEPKcRKNS_9StringRefE: argument 0"}
!13 = distinct !{!13, !"_ZN4llvmplEPKcRKNS_9StringRefE"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!16 = distinct !{!16, !"_ZNK4llvm5Twine6concatERKS0_"}
!17 = distinct !{!17, !18, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!18 = distinct !{!18, !"_ZN4llvmplERKNS_5TwineES2_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4llvm9StringRef3strEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4llvm9StringRef3strEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN4llvmplEPKcRKNS_9StringRefE: argument 0"}
!24 = distinct !{!24, !"_ZN4llvmplEPKcRKNS_9StringRefE"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!27 = distinct !{!27, !"_ZNK4llvm5Twine6concatERKS0_"}
!28 = distinct !{!28, !29, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!29 = distinct !{!29, !"_ZN4llvmplERKNS_5TwineES2_"}
!30 = !{!"branch_weights", i32 2000, i32 1}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZNK4llvm9StringRef3strEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4llvm9StringRef3strEv"}
!34 = distinct !{!34, !35, !"_ZNK4llvm9StringRefcvNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEv: argument 0"}
!35 = distinct !{!35, !"_ZNK4llvm9StringRefcvNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEv"}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZNK4llvm9StringRef3strEv: argument 0"}
!38 = distinct !{!38, !"_ZNK4llvm9StringRef3strEv"}
!39 = distinct !{!39, !40, !"_ZNK4llvm9StringRefcvNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4llvm9StringRefcvNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEv"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!43 = distinct !{!43, !"_ZNK4llvm5Twine6concatERKS0_"}
!44 = distinct !{!44, !45, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!45 = distinct !{!45, !"_ZN4llvmplERKNS_5TwineES2_"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!48 = distinct !{!48, !"_ZNK4llvm5Twine6concatERKS0_"}
!49 = distinct !{!49, !50, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!50 = distinct !{!50, !"_ZN4llvmplERKNS_5TwineES2_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN4llvmplEPKcRKNS_9StringRefE: argument 0"}
!53 = distinct !{!53, !"_ZN4llvmplEPKcRKNS_9StringRefE"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!56 = distinct !{!56, !"_ZNK4llvm5Twine6concatERKS0_"}
!57 = distinct !{!57, !58, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!58 = distinct !{!58, !"_ZN4llvmplERKNS_5TwineES2_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN4llvmplEPKcRKNS_9StringRefE: argument 0"}
!61 = distinct !{!61, !"_ZN4llvmplEPKcRKNS_9StringRefE"}
!62 = !{!63, !65}
!63 = distinct !{!63, !64, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!64 = distinct !{!64, !"_ZNK4llvm5Twine6concatERKS0_"}
!65 = distinct !{!65, !66, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!66 = distinct !{!66, !"_ZN4llvmplERKNS_5TwineES2_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZN4llvmplEPKcRKNS_9StringRefE: argument 0"}
!69 = distinct !{!69, !"_ZN4llvmplEPKcRKNS_9StringRefE"}
!70 = !{!71, !73}
!71 = distinct !{!71, !72, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!72 = distinct !{!72, !"_ZNK4llvm5Twine6concatERKS0_"}
!73 = distinct !{!73, !74, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!74 = distinct !{!74, !"_ZN4llvmplERKNS_5TwineES2_"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN12_GLOBAL__N_117CommandLineParser24getRegisteredSubcommandsEv: argument 0"}
!77 = distinct !{!77, !"_ZN12_GLOBAL__N_117CommandLineParser24getRegisteredSubcommandsEv"}
!78 = !{!79, !76}
!79 = distinct !{!79, !80, !"_ZN4llvm10make_rangeINS_19SmallPtrSetIteratorIPNS_2cl10SubCommandEEEEENS_14iterator_rangeIT_EES7_S7_: argument 0"}
!80 = distinct !{!80, !"_ZN4llvm10make_rangeINS_19SmallPtrSetIteratorIPNS_2cl10SubCommandEEEEENS_14iterator_rangeIT_EES7_S7_"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNSt3__19make_pairIN4llvm19SmallPtrSetIteratorIPNS1_2cl14OptionCategoryEEERbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_: argument 0"}
!83 = distinct !{!83, !"_ZNSt3__19make_pairIN4llvm19SmallPtrSetIteratorIPNS1_2cl14OptionCategoryEEERbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZNSt3__19make_pairIN4llvm19SmallPtrSetIteratorIPNS1_2cl10SubCommandEEERbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_: argument 0"}
!86 = distinct !{!86, !"_ZNSt3__19make_pairIN4llvm19SmallPtrSetIteratorIPNS1_2cl10SubCommandEEERbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_"}
!87 = !{!88, !90}
!88 = distinct !{!88, !89, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!89 = distinct !{!89, !"_ZNK4llvm5Twine6concatERKS0_"}
!90 = distinct !{!90, !91, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!91 = distinct !{!91, !"_ZN4llvmplERKNS_5TwineES2_"}
!92 = !{!93, !95}
!93 = distinct !{!93, !94, !"_ZNK4llvm5Twine6concatERKS0_: argument 0"}
!94 = distinct !{!94, !"_ZNK4llvm5Twine6concatERKS0_"}
!95 = distinct !{!95, !96, !"_ZN4llvmplERKNS_5TwineES2_: argument 0"}
!96 = distinct !{!96, !"_ZN4llvmplERKNS_5TwineES2_"}
!97 = !{i1 (%"class.llvm::cl::Option"*)* @_ZL10isGroupingPKN4llvm2cl6OptionE, i1 (%"class.llvm::cl::Option"*)* @_ZL20isPrefixedOrGroupingPKN4llvm2cl6OptionE}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISC_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__16__treeINS_12__value_typeIPN4llvm2cl14OptionCategoryENS_6vectorIPNS3_6OptionENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISC_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZNSt3__19make_pairIN4llvm19SmallPtrSetIteratorIPNS1_2cl6OptionEEERbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__19make_pairIN4llvm19SmallPtrSetIteratorIPNS1_2cl6OptionEEERbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_"}
