; ModuleID = '../../third_party/blink/renderer/platform/bindings/v8_set_return_value.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/v8_set_return_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::Object" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::PropertyDescriptor" = type { %"struct.v8::PropertyDescriptor::PrivateData"* }
%"struct.v8::PropertyDescriptor::PrivateData" = type opaque
%"class.v8::Context" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Name" = type { i8 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.170", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.114", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist.45"* }
%"class.blink::Worklist.45" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.94", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.108", [4 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { float }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.117", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.45"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.175" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.182, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.182 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.186", %"class.blink::HeapHashMap.193", %"class.std::__1::unique_ptr.203", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.215", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.218" }
%"class.blink::HeapHashMap.186" = type { %"class.WTF::HashMap.189" }
%"class.WTF::HashMap.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.WTF::KeyValuePair.192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.192" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.193" = type { %"class.WTF::HashMap.196" }
%"class.WTF::HashMap.196" = type { %"class.WTF::HashTable.197" }
%"class.WTF::HashTable.197" = type <{ %"struct.WTF::KeyValuePair.199"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.199" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.200" }
%"class.blink::TraceWrapperV8Reference.200" = type { %"class.v8::TracedReference.201" }
%"class.v8::TracedReference.201" = type { %"class.v8::BasicTracedReference.202" }
%"class.v8::BasicTracedReference.202" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.206" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.215" = type { %"class.v8::Persistent.216" }
%"class.v8::Persistent.216" = type { %"class.v8::PersistentBase.217" }
%"class.v8::PersistentBase.217" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.218" = type { %"class.WTF::HashMap.221" }
%"class.WTF::HashMap.221" = type { %"class.WTF::HashTable.222" }
%"class.WTF::HashTable.222" = type <{ %"struct.WTF::KeyValuePair.224"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.224" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.225" }
%"class.blink::Persistent.225" = type { %"class.blink::PersistentBase.226" }
%"class.blink::PersistentBase.226" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Function" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::ObjectTemplate" = type { i8 }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIPKN5blink15WrapperTypeInfoENS_12KeyValuePairIS4_NS1_23TraceWrapperV8ReferenceIN2v88FunctionEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE4findERKS4_ = comdat any

@.str = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"enumerable\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"configurable\00", align 1
@.str.6 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZN5blink8bindings30CreatePropertyDescriptorObjectEPN2v87IsolateERKNS1_18PropertyDescriptorE(%"class.v8::Isolate"*, %"class.v8::PropertyDescriptor"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %4 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #4
  %5 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %0) #4
  %6 = tail call zeroext i1 @_ZNK2v818PropertyDescriptor9has_valueEv(%"class.v8::PropertyDescriptor"* %1) #4
  br i1 %6, label %7, label %30

7:                                                ; preds = %2
  %8 = tail call %"class.v8::Value"* @_ZNK2v818PropertyDescriptor5valueEv(%"class.v8::PropertyDescriptor"* %1) #4
  %9 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 0, i32 5) #4
  %10 = icmp eq %"class.v8::String"* %9, null
  br i1 %10, label %11, label %12, !prof !2

11:                                               ; preds = %7
  tail call void @_ZN2v82V812ToLocalEmptyEv() #4
  br label %12

12:                                               ; preds = %7, %11
  %13 = bitcast %"class.v8::String"* %9 to %"class.v8::Name"*
  %14 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %5, %"class.v8::Context"* %4, %"class.v8::Name"* %13, %"class.v8::Value"* %8) #4
  %15 = trunc i16 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %77, label %17, !prof !2

17:                                               ; preds = %12
  %18 = tail call zeroext i1 @_ZNK2v818PropertyDescriptor8writableEv(%"class.v8::PropertyDescriptor"* %1) #4
  %19 = select i1 %18, i64 184, i64 192
  %20 = add i64 %19, %3
  %21 = inttoptr i64 %20 to %"class.v8::Value"*
  %22 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 8) #4
  %23 = icmp eq %"class.v8::String"* %22, null
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %17
  tail call void @_ZN2v82V812ToLocalEmptyEv() #4
  br label %25

25:                                               ; preds = %17, %24
  %26 = bitcast %"class.v8::String"* %22 to %"class.v8::Name"*
  %27 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %5, %"class.v8::Context"* %4, %"class.v8::Name"* %26, %"class.v8::Value"* %21) #4
  %28 = trunc i16 %27 to i8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %77, label %50, !prof !2

30:                                               ; preds = %2
  %31 = tail call %"class.v8::Value"* @_ZNK2v818PropertyDescriptor3getEv(%"class.v8::PropertyDescriptor"* %1) #4
  %32 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 3) #4
  %33 = icmp eq %"class.v8::String"* %32, null
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %30
  tail call void @_ZN2v82V812ToLocalEmptyEv() #4
  br label %35

35:                                               ; preds = %30, %34
  %36 = bitcast %"class.v8::String"* %32 to %"class.v8::Name"*
  %37 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %5, %"class.v8::Context"* %4, %"class.v8::Name"* %36, %"class.v8::Value"* %31) #4
  %38 = trunc i16 %37 to i8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %77, label %40, !prof !2

40:                                               ; preds = %35
  %41 = tail call %"class.v8::Value"* @_ZNK2v818PropertyDescriptor3setEv(%"class.v8::PropertyDescriptor"* %1) #4
  %42 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 3) #4
  %43 = icmp eq %"class.v8::String"* %42, null
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %40
  tail call void @_ZN2v82V812ToLocalEmptyEv() #4
  br label %45

45:                                               ; preds = %40, %44
  %46 = bitcast %"class.v8::String"* %42 to %"class.v8::Name"*
  %47 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %5, %"class.v8::Context"* %4, %"class.v8::Name"* %46, %"class.v8::Value"* %41) #4
  %48 = trunc i16 %47 to i8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %77, label %50, !prof !2

50:                                               ; preds = %45, %25
  %51 = tail call zeroext i1 @_ZNK2v818PropertyDescriptor10enumerableEv(%"class.v8::PropertyDescriptor"* %1) #4
  %52 = select i1 %51, i64 184, i64 192
  %53 = add i64 %52, %3
  %54 = inttoptr i64 %53 to %"class.v8::Value"*
  %55 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i32 0, i32 10) #4
  %56 = icmp eq %"class.v8::String"* %55, null
  br i1 %56, label %57, label %58, !prof !2

57:                                               ; preds = %50
  tail call void @_ZN2v82V812ToLocalEmptyEv() #4
  br label %58

58:                                               ; preds = %50, %57
  %59 = bitcast %"class.v8::String"* %55 to %"class.v8::Name"*
  %60 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %5, %"class.v8::Context"* %4, %"class.v8::Name"* %59, %"class.v8::Value"* %54) #4
  %61 = trunc i16 %60 to i8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %77, label %63, !prof !2

63:                                               ; preds = %58
  %64 = tail call zeroext i1 @_ZNK2v818PropertyDescriptor12configurableEv(%"class.v8::PropertyDescriptor"* %1) #4
  %65 = select i1 %64, i64 184, i64 192
  %66 = add i64 %65, %3
  %67 = inttoptr i64 %66 to %"class.v8::Value"*
  %68 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i32 0, i32 12) #4
  %69 = icmp eq %"class.v8::String"* %68, null
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %63
  tail call void @_ZN2v82V812ToLocalEmptyEv() #4
  br label %71

71:                                               ; preds = %63, %70
  %72 = bitcast %"class.v8::String"* %68 to %"class.v8::Name"*
  %73 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %5, %"class.v8::Context"* %4, %"class.v8::Name"* %72, %"class.v8::Value"* %67) #4
  %74 = trunc i16 %73 to i8
  %75 = icmp eq i8 %74, 0
  %76 = select i1 %75, %"class.v8::Object"* null, %"class.v8::Object"* %5, !prof !2
  br label %77

77:                                               ; preds = %71, %45, %25, %58, %35, %12
  %78 = phi %"class.v8::Object"* [ null, %12 ], [ null, %35 ], [ null, %58 ], [ null, %25 ], [ null, %45 ], [ %76, %71 ]
  ret %"class.v8::Object"* %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v818PropertyDescriptor9has_valueEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v818PropertyDescriptor5valueEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v818PropertyDescriptor8writableEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Value"* @_ZNK2v818PropertyDescriptor3getEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v818PropertyDescriptor3setEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v818PropertyDescriptor10enumerableEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v818PropertyDescriptor12configurableEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink8bindings25GetExposedInterfaceObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEPKNS_15WrapperTypeInfoE(%"class.v8::Isolate"*, %"class.v8::Object"*, %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #0 {
  %4 = alloca %"struct.blink::WrapperTypeInfo"*, align 8
  %5 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #4
  %6 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %5)
  %7 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.v8::Context"*, %"class.v8::Context"** %7, align 8
  %9 = icmp eq %"class.v8::Context"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %6, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %11, align 8
  %13 = icmp eq %"class.blink::V8PerContextData"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %10, %3
  %15 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %16 = add i64 %15, 160
  %17 = inttoptr i64 %16 to %"class.v8::Value"*
  br label %49

18:                                               ; preds = %10
  %19 = bitcast %"struct.blink::WrapperTypeInfo"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  store %"struct.blink::WrapperTypeInfo"* %2, %"struct.blink::WrapperTypeInfo"** %4, align 8
  %20 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %12, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.WTF::HashMap.196", %"class.WTF::HashMap.196"* %20, i64 0, i32 0
  %22 = call { %"struct.WTF::KeyValuePair.199"*, %"struct.WTF::KeyValuePair.199"* } @_ZN3WTF9HashTableIPKN5blink15WrapperTypeInfoENS_12KeyValuePairIS4_NS1_23TraceWrapperV8ReferenceIN2v88FunctionEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE4findERKS4_(%"class.WTF::HashTable.197"* %21, %"struct.blink::WrapperTypeInfo"** nonnull dereferenceable(8) %4) #4
  %23 = extractvalue { %"struct.WTF::KeyValuePair.199"*, %"struct.WTF::KeyValuePair.199"* } %22, 0
  %24 = getelementptr inbounds %"class.WTF::HashMap.196", %"class.WTF::HashMap.196"* %20, i64 0, i32 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair.199"*, %"struct.WTF::KeyValuePair.199"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::V8PerContextData", %"class.blink::V8PerContextData"* %12, i64 0, i32 2, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.199", %"struct.WTF::KeyValuePair.199"* %25, i64 %28
  %30 = icmp eq %"struct.WTF::KeyValuePair.199"* %23, %29
  br i1 %30, label %43, label %31

31:                                               ; preds = %18
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.199", %"struct.WTF::KeyValuePair.199"* %23, i64 0, i32 1
  %33 = bitcast %"class.blink::TraceWrapperV8Reference.200"* %32 to %"class.v8::Function"**
  %34 = load %"class.v8::Function"*, %"class.v8::Function"** %33, align 8
  %35 = icmp eq %"class.v8::Function"* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::V8PerContextData"* %12 to %"class.v8::internal::Isolate"**
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %37, align 8
  %39 = bitcast %"class.v8::Function"* %34 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %38, i64 %40) #4
  %42 = bitcast i64* %41 to %"class.v8::Function"*
  br label %46

43:                                               ; preds = %18
  %44 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %4, align 8
  %45 = call %"class.v8::Function"* @_ZN5blink16V8PerContextData26ConstructorForTypeSlowCaseEPKNS_15WrapperTypeInfoE(%"class.blink::V8PerContextData"* nonnull %12, %"struct.blink::WrapperTypeInfo"* %44) #4
  br label %46

46:                                               ; preds = %31, %36, %43
  %47 = phi %"class.v8::Function"* [ %45, %43 ], [ %42, %36 ], [ null, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %48 = bitcast %"class.v8::Function"* %47 to %"class.v8::Value"*
  br label %49

49:                                               ; preds = %46, %14
  %50 = phi %"class.v8::Value"* [ %48, %46 ], [ %17, %14 ]
  ret %"class.v8::Value"* %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.6, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0)) #4
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.6, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #4
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #4
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink8bindings25GetExposedNamespaceObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEPKNS_15WrapperTypeInfoE(%"class.v8::Isolate"*, %"class.v8::Object"*, %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #0 {
  %4 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #4
  %5 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %4)
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %10, align 8
  %12 = icmp eq %"class.blink::V8PerContextData"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %9, %3
  %14 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %15 = add i64 %14, 160
  %16 = inttoptr i64 %15 to %"class.v8::Value"*
  br label %59

17:                                               ; preds = %9
  %18 = bitcast %"class.blink::ScriptState"* %5 to %"class.v8::internal::Isolate"**
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %20 = bitcast %"class.v8::Context"* %7 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %19, i64 %21) #4
  %23 = bitcast i64* %22 to %"class.v8::Context"*
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %23) #4
  %24 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 2, i32 0
  %25 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %24, align 8
  %26 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* %2, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %25) #4
  %27 = bitcast %"class.v8::Template"* %26 to %"class.v8::ObjectTemplate"*
  %28 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %29 = icmp eq %"class.v8::Context"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %17
  %31 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %32 = bitcast %"class.v8::Context"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %31, i64 %33) #4
  %35 = bitcast i64* %34 to %"class.v8::Context"*
  br label %36

36:                                               ; preds = %17, %30
  %37 = phi %"class.v8::Context"* [ %35, %30 ], [ null, %17 ]
  %38 = tail call %"class.v8::Object"* @_ZN2v814ObjectTemplate11NewInstanceENS_5LocalINS_7ContextEEE(%"class.v8::ObjectTemplate"* %27, %"class.v8::Context"* %37) #4
  %39 = icmp eq %"class.v8::Object"* %38, null
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %36
  tail call void @_ZN2v82V812ToLocalEmptyEv() #4
  br label %41

41:                                               ; preds = %36, %40
  %42 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %43 = icmp eq %"class.v8::Context"* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %46 = bitcast %"class.v8::Context"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %45, i64 %47) #4
  %49 = bitcast i64* %48 to %"class.v8::Context"*
  br label %50

50:                                               ; preds = %41, %44
  %51 = phi %"class.v8::Context"* [ %49, %44 ], [ null, %41 ]
  %52 = getelementptr inbounds %"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* %2, i64 0, i32 2
  %53 = load void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)** %52, align 8
  %54 = icmp eq void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  %56 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %24, align 8
  tail call void %53(%"class.v8::Context"* %51, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %56, %"class.v8::Object"* null, %"class.v8::Object"* null, %"class.v8::Object"* %38, %"class.v8::Template"* %26, i64 1) #4
  br label %57

57:                                               ; preds = %50, %55
  %58 = bitcast %"class.v8::Object"* %38 to %"class.v8::Value"*
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %23) #4
  br label %59

59:                                               ; preds = %57, %13
  %60 = phi %"class.v8::Value"* [ %58, %57 ], [ %16, %13 ]
  ret %"class.v8::Value"* %60
}

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v814ObjectTemplate11NewInstanceENS_5LocalINS_7ContextEEE(%"class.v8::ObjectTemplate"*, %"class.v8::Context"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare %"class.v8::Function"* @_ZN5blink16V8PerContextData26ConstructorForTypeSlowCaseEPKNS_15WrapperTypeInfoE(%"class.blink::V8PerContextData"*, %"struct.blink::WrapperTypeInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.199"*, %"struct.WTF::KeyValuePair.199"* } @_ZN3WTF9HashTableIPKN5blink15WrapperTypeInfoENS_12KeyValuePairIS4_NS1_23TraceWrapperV8ReferenceIN2v88FunctionEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE4findERKS4_(%"class.WTF::HashTable.197"*, %"struct.blink::WrapperTypeInfo"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.199"*, %"struct.WTF::KeyValuePair.199"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.199"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"struct.blink::WrapperTypeInfo"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.199", %"struct.WTF::KeyValuePair.199"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.199", %"struct.WTF::KeyValuePair.199"* %34, i64 0, i32 0
  %36 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %35, align 8
  %37 = inttoptr i64 %12 to %"struct.blink::WrapperTypeInfo"*
  %38 = icmp eq %"struct.blink::WrapperTypeInfo"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"struct.blink::WrapperTypeInfo"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"struct.blink::WrapperTypeInfo"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.199", %"struct.WTF::KeyValuePair.199"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.199", %"struct.WTF::KeyValuePair.199"* %63, i64 0, i32 0
  %65 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** %64, align 8
  %66 = icmp eq %"struct.blink::WrapperTypeInfo"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.199"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.199"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.199", %"struct.WTF::KeyValuePair.199"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.199", %"struct.WTF::KeyValuePair.199"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.199"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.199"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.199"*, %"struct.WTF::KeyValuePair.199"* } undef, %"struct.WTF::KeyValuePair.199"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.199"*, %"struct.WTF::KeyValuePair.199"* } %79, %"struct.WTF::KeyValuePair.199"* %78, 1
  ret { %"struct.WTF::KeyValuePair.199"*, %"struct.WTF::KeyValuePair.199"* } %80
}

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
