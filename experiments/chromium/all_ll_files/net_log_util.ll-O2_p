; ModuleID = '../../net/log/net_log_util.cc'
source_filename = "../../net/log/net_log_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::(anonymous namespace)::StringToConstant" = type { i8*, i32 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::vector.869" = type { %"class.std::__1::__vector_base.870" }
%"class.std::__1::__vector_base.870" = type { %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"*, %"class.std::__1::__compressed_pair.871" }
%"struct.base::FieldTrial::ActiveGroup" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.872" }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"struct.base::FieldTrial::ActiveGroup"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.246", i8, i8, i8, %"class.std::__1::basic_string" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.29", %"class.std::__1::vector.36" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.31" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.38" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type { i32 (...)** }
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyResolutionService" = type { i32 (...)** }
%"class.net::ProxyDelegate" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.43", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.45" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map.119", %"class.std::__1::vector.129", %"class.base::MRUCache.136", %"class.base::flat_map.156", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.65", %"class.std::__1::map.72", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.118" }
%"class.std::__1::list.65" = type { %"class.std::__1::__list_imp.66" }
%"class.std::__1::__list_imp.66" = type { %"struct.std::__1::__list_node_base.67", %"class.std::__1::__compressed_pair.68" }
%"struct.std::__1::__list_node_base.67" = type { %"struct.std::__1::__list_node_base.67"*, %"struct.std::__1::__list_node_base.67"* }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.72" = type { %"class.std::__1::__tree.73" }
%"class.std::__1::__tree.73" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.83" }
%"class.std::__1::__tree.83" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.90" }
%"class.base::MRUCache.90" = type { %"class.base::MRUCacheBase.91" }
%"class.base::MRUCacheBase.91" = type { i32 (...)**, %"class.std::__1::list.92", %"class.std::__1::map.99", i64 }
%"class.std::__1::list.92" = type { %"class.std::__1::__list_imp.93" }
%"class.std::__1::__list_imp.93" = type { %"struct.std::__1::__list_node_base.94", %"class.std::__1::__compressed_pair.95" }
%"struct.std::__1::__list_node_base.94" = type { %"struct.std::__1::__list_node_base.94"*, %"struct.std::__1::__list_node_base.94"* }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.99" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::WeakPtrFactory.118" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.110", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.110" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.111" }
%"struct.std::__1::atomic.111" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__cxx_atomic_impl.114" }
%"struct.std::__1::__cxx_atomic_impl.114" = type { %"struct.std::__1::__cxx_atomic_base_impl.115" }
%"struct.std::__1::__cxx_atomic_base_impl.115" = type { i8 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map.119" = type { %"class.base::internal::flat_tree.120" }
%"class.base::internal::flat_tree.120" = type { %"class.std::__1::vector.121" }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"struct.std::__1::pair.123"*, %"struct.std::__1::pair.123"*, %"class.std::__1::__compressed_pair.124" }
%"struct.std::__1::pair.123" = type opaque
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::pair.123"* }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.std::__1::basic_string"* }
%"class.base::MRUCache.136" = type { %"class.base::MRUCacheBase.137" }
%"class.base::MRUCacheBase.137" = type { i32 (...)**, %"class.std::__1::list.138", %"class.std::__1::map.145", i64 }
%"class.std::__1::list.138" = type { %"class.std::__1::__list_imp.139" }
%"class.std::__1::__list_imp.139" = type { %"struct.std::__1::__list_node_base.140", %"class.std::__1::__compressed_pair.141" }
%"struct.std::__1::__list_node_base.140" = type { %"struct.std::__1::__list_node_base.140"*, %"struct.std::__1::__list_node_base.140"* }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.145" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::flat_map.156" = type { %"class.base::internal::flat_tree.157" }
%"class.base::internal::flat_tree.157" = type { %"class.std::__1::vector.158" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"*, %"class.std::__1::__compressed_pair.161" }
%"struct.std::__1::pair.160" = type opaque
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::pair.160"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.28" }
%"class.base::time_internal::TimeBase.28" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.116 }
%class.scoped_refptr.116 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.117", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.117" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.166", %"class.std::__1::map.177", %"class.std::__1::map.186", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.208", i8, [7 x i8] }>
%"class.std::__1::map.166" = type { %"class.std::__1::__tree.167" }
%"class.std::__1::__tree.167" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.177" = type { %"class.std::__1::__tree.178" }
%"class.std::__1::__tree.178" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.197", %"struct.std::__1::less.206", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::less.206" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::set.208" = type { %"class.std::__1::__tree.209" }
%"class.std::__1::__tree.209" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type { i32 (...)** }
%"class.net::URLRequestJobFactory" = type opaque
%"class.net::URLRequestThrottlerManager" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.216", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.222", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.229", %"class.std::__1::vector.239", %"class.std::__1::vector.239", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.224" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.229" = type { %"class.std::__1::__tree.230" }
%"class.std::__1::__tree.230" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.231", %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::vector.239" = type { %"class.std::__1::__vector_base.240" }
%"class.std::__1::__vector_base.240" = type { i32*, i32*, %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { i32* }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::ReportingService" = type { i32 (...)** }
%"class.net::NetworkErrorLoggingService" = type <{ i32 (...)**, %"class.base::Clock"*, %"class.net::ReportingService"*, i8, [7 x i8] }>
%"class.net::FtpAuthCache" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.std::__1::set.249"* }
%"class.std::__1::set.249" = type { %"class.std::__1::__tree.250" }
%"class.std::__1::__tree.250" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::vector.687" = type { %"class.std::__1::__vector_base.688" }
%"class.std::__1::__vector_base.688" = type { %"struct.std::__1::pair.689"*, %"struct.std::__1::pair.689"*, %"class.std::__1::__compressed_pair.690" }
%"struct.std::__1::pair.689" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"struct.std::__1::pair.689"* }
%"class.net::HostCache" = type { %"class.std::__1::map.262", i64, i32, i64, %"class.net::HostCache::PersistenceDelegate"*, %"class.base::TickClock"* }
%"class.std::__1::map.262" = type { %"class.std::__1::__tree.263" }
%"class.std::__1::__tree.263" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::HostCache::PersistenceDelegate" = type { i32 (...)** }
%"class.net::HttpNetworkSession" = type { %"class.net::NetLog"*, %"class.net::HttpServerProperties"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::HostResolver"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::ProxyResolutionService"*, %"class.net::SSLConfigService"*, %"class.net::HttpAuthCache", %"class.net::SSLClientSessionCache", %"class.net::SSLClientContext", %"class.net::WebSocketEndpointLockManager", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.355", %"class.net::QuicStreamFactory", %"class.net::SpdySessionPool", %"class.std::__1::unique_ptr.618", %"class.std::__1::map.638", %"class.std::__1::vector.649", %"class.base::flat_map.656", %"struct.net::HttpNetworkSession::Params", %"struct.net::HttpNetworkSession::Context", %"class.std::__1::unique_ptr.303" }
%"class.net::HttpAuthCache" = type { %"class.base::TickClock"*, %"class.base::Clock"*, i8, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.273" }
%"class.std::__1::__tree.273" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::SSLClientSessionCache" = type { %"class.base::Clock"*, %"struct.net::SSLClientSessionCache::Config", %"class.base::MRUCache.283", i64, %"class.std::__1::unique_ptr.303" }
%"struct.net::SSLClientSessionCache::Config" = type { i64, i64 }
%"class.base::MRUCache.283" = type { %"class.base::MRUCacheBase.284" }
%"class.base::MRUCacheBase.284" = type { i32 (...)**, %"class.std::__1::list.285", %"class.std::__1::map.292", i64 }
%"class.std::__1::list.285" = type { %"class.std::__1::__list_imp.286" }
%"class.std::__1::__list_imp.286" = type { %"struct.std::__1::__list_node_base.287", %"class.std::__1::__compressed_pair.288" }
%"struct.std::__1::__list_node_base.287" = type { %"struct.std::__1::__list_node_base.287"*, %"struct.std::__1::__list_node_base.287"* }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.292" = type { %"class.std::__1::__tree.293" }
%"class.std::__1::__tree.293" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::SSLClientContext" = type { %"class.net::SSLConfigService::Observer", %"class.net::CertDatabase::Observer", %"struct.net::SSLContextConfig", %"class.net::SSLConfigService"*, %"class.net::CertVerifier"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SSLClientSessionCache"*, %"class.net::SCTAuditingDelegate"*, %"class.net::SSLClientAuthCache", %"class.base::ObserverList.325" }
%"class.net::SSLConfigService::Observer" = type { i32 (...)** }
%"class.net::CertDatabase::Observer" = type { i32 (...)** }
%"struct.net::SSLContextConfig" = type <{ i16, i16, i16, [2 x i8], %"class.std::__1::vector.309", i8, i8, [6 x i8] }>
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { i16*, i16*, %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { i16* }
%"class.net::SSLClientAuthCache" = type { %"class.std::__1::map.316" }
%"class.std::__1::map.316" = type { %"class.std::__1::__tree.317" }
%"class.std::__1::__tree.317" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::ObserverList.325" = type <{ %"class.std::__1::vector.326", %"class.base::LinkedList.334", i64, i32, [4 x i8] }>
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.329" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.328 }
%class.scoped_refptr.328 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.334" = type { %"class.base::LinkNode.335" }
%"class.base::LinkNode.335" = type { %"class.base::internal::LinkNodeBase" }
%"class.net::WebSocketEndpointLockManager" = type { %"class.std::__1::map.337", %"class.base::TimeDelta", i64, %"class.base::WeakPtrFactory.348" }
%"class.std::__1::map.337" = type { %"class.std::__1::__tree.338" }
%"class.std::__1::__tree.338" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.339", %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::WeakPtrFactory.348" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.net::ClientSocketPoolManager"* }
%"class.net::ClientSocketPoolManager" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.net::ServerPushDelegate"* }
%"class.net::ServerPushDelegate" = type { i32 (...)** }
%"class.net::QuicStreamFactory" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::NetworkObserver", %"class.net::CertDatabase::Observer", i8, %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::ClientSocketFactory"*, %"class.net::HttpServerProperties"*, %"class.net::ServerPushDelegate"*, %"class.net::CertVerifier"*, %"class.net::CTPolicyEnforcer"*, %"class.net::TransportSecurityState"*, %"class.net::SCTAuditingDelegate"*, %"class.net::QuicCryptoClientStreamFactory"*, %"class.quic::QuicRandom"*, %"class.quic::QuicClock"*, %"struct.net::QuicParams", %"class.net::QuicClockSkewDetector", %"class.net::SocketPerformanceWatcherFactory"*, %"class.std::__1::unique_ptr.364", %"class.std::__1::unique_ptr.370", %"class.std::__1::map.376", %"class.std::__1::map.387", %"class.std::__1::map.398", %"class.std::__1::map.407", %"class.std::__1::map.416", %"class.std::__1::set.425", %"class.std::__1::map.435", %"class.std::__1::map.444", %"class.base::MRUCache.455", %"class.quic::QuicConfig", %"class.std::__1::map.498", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, %"class.quic::QuicTime::Delta", i64, %"class.net::IPEndPoint", i8, i8, %"class.net::NetworkConnection", i32, %"class.net::QuicConnectivityMonitor", %"class.base::TickClock"*, %"class.base::SequencedTaskRunner"*, %"class.net::SSLConfigService"*, i8, %"class.base::WeakPtrFactory.544" }
%"class.net::NetworkChangeNotifier::IPAddressObserver" = type { i32 (...)**, %class.scoped_refptr.361 }
%class.scoped_refptr.361 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.net::NetworkChangeNotifier::NetworkObserver" = type { i32 (...)**, %class.scoped_refptr.362 }
%class.scoped_refptr.362 = type { %"class.base::ObserverListThreadSafe.363"* }
%"class.base::ObserverListThreadSafe.363" = type opaque
%"class.net::ClientSocketFactory" = type opaque
%"class.net::QuicCryptoClientStreamFactory" = type opaque
%"class.quic::QuicRandom" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.net::QuicClockSkewDetector" = type { %"class.base::TimeTicks", %"class.base::Time" }
%"class.net::SocketPerformanceWatcherFactory" = type opaque
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.net::QuicChromiumConnectionHelper"* }
%"class.net::QuicChromiumConnectionHelper" = type opaque
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.quic::QuicAlarmFactory"* }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"class.std::__1::map.376" = type { %"class.std::__1::__tree.377" }
%"class.std::__1::__tree.377" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.387" = type { %"class.std::__1::__tree.388" }
%"class.std::__1::__tree.388" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.398" = type { %"class.std::__1::__tree.399" }
%"class.std::__1::__tree.399" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.400", %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.407" = type { %"class.std::__1::__tree.408" }
%"class.std::__1::__tree.408" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.409", %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.416" = type { %"class.std::__1::__tree.417" }
%"class.std::__1::__tree.417" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::set.425" = type { %"class.std::__1::__tree.426" }
%"class.std::__1::__tree.426" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.427", %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.435" = type { %"class.std::__1::__tree.436" }
%"class.std::__1::__tree.436" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.437", %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.444" = type { %"class.std::__1::__tree.445" }
%"class.std::__1::__tree.445" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.446", %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::MRUCache.455" = type { %"class.base::MRUCacheBase.456" }
%"class.base::MRUCacheBase.456" = type { i32 (...)**, %"class.std::__1::list.457", %"class.std::__1::map.464", i64 }
%"class.std::__1::list.457" = type { %"class.std::__1::__list_imp.458" }
%"class.std::__1::__list_imp.458" = type { %"struct.std::__1::__list_node_base.459", %"class.std::__1::__compressed_pair.460" }
%"struct.std::__1::__list_node_base.459" = type { %"struct.std::__1::__list_node_base.459"*, %"struct.std::__1::__list_node_base.459"* }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.464" = type { %"class.std::__1::__tree.465" }
%"class.std::__1::__tree.465" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.476", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.239", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.486", %"class.absl::optional.486", %"class.absl::optional.486", %"class.absl::optional.486", %"class.absl::optional.486", %"class.absl::optional.486", %"class.absl::flat_hash_map", %"class.absl::flat_hash_map" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.239", %"class.std::__1::vector.239" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.473 }
%union.anon.473 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.474, i32 }
%union.anon.474 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.475 }
%union.anon.475 = type { [4 x i32] }
%"class.absl::optional.476" = type { %"class.absl::optional_internal::optional_data.477" }
%"class.absl::optional_internal::optional_data.477" = type { %"class.absl::optional_internal::optional_data_base.478" }
%"class.absl::optional_internal::optional_data_base.478" = type { %"class.absl::optional_internal::optional_data_dtor_base.479" }
%"class.absl::optional_internal::optional_data_dtor_base.479" = type { i8, %union.anon.480 }
%union.anon.480 = type { %"struct.std::__1::pair.481" }
%"struct.std::__1::pair.481" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.485" }
%"class.quic::QuicConnectionId" = type { %union.anon.482 }
%union.anon.482 = type { %struct.anon.484 }
%struct.anon.484 = type { i8, i8* }
%"struct.std::__1::array.485" = type { [16 x i8] }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.485", %"struct.std::__1::array.485", i8 }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::optional.486" = type { %"class.absl::optional_internal::optional_data.487" }
%"class.absl::optional_internal::optional_data.487" = type { %"class.absl::optional_internal::optional_data_base.488" }
%"class.absl::optional_internal::optional_data_base.488" = type { %"class.absl::optional_internal::optional_data_dtor_base.489" }
%"class.absl::optional_internal::optional_data_dtor_base.489" = type { i8, %union.anon.490 }
%union.anon.490 = type { %"class.quic::QuicConnectionId" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::map.498" = type { %"class.std::__1::__tree.499" }
%"class.std::__1::__tree.499" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::NetworkConnection" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", i32, i8* }
%"class.net::NetworkChangeNotifier::ConnectionTypeObserver" = type { i32 (...)**, %class.scoped_refptr.507 }
%class.scoped_refptr.507 = type { %"class.base::ObserverListThreadSafe.508"* }
%"class.base::ObserverListThreadSafe.508" = type opaque
%"class.net::QuicConnectivityMonitor" = type { %"class.net::QuicChromiumClientSession::ConnectivityObserver", i64, %"class.std::__1::set.510", %"class.std::__1::set.510", %"class.absl::optional.518", %"class.base::internal::ClampedNumeric", %"class.base::flat_map.523", %"class.base::flat_map.533", %"class.base::WeakPtrFactory.543" }
%"class.net::QuicChromiumClientSession::ConnectivityObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.509" }
%"class.base::WeakPtrFactory.509" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::set.510" = type { %"class.std::__1::__tree.511" }
%"class.std::__1::__tree.511" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.512", %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.absl::optional.518" = type { %"class.absl::optional_internal::optional_data.519" }
%"class.absl::optional_internal::optional_data.519" = type { %"class.absl::optional_internal::optional_data_base.520" }
%"class.absl::optional_internal::optional_data_base.520" = type { %"class.absl::optional_internal::optional_data_dtor_base.521" }
%"class.absl::optional_internal::optional_data_dtor_base.521" = type { i8, %union.anon.522 }
%union.anon.522 = type { %"class.base::internal::ClampedNumeric" }
%"class.base::internal::ClampedNumeric" = type { i32 }
%"class.base::flat_map.523" = type { %"class.base::internal::flat_tree.524" }
%"class.base::internal::flat_tree.524" = type { %"class.std::__1::vector.525" }
%"class.std::__1::vector.525" = type { %"class.std::__1::__vector_base.526" }
%"class.std::__1::__vector_base.526" = type { %"struct.std::__1::pair.527"*, %"struct.std::__1::pair.527"*, %"class.std::__1::__compressed_pair.528" }
%"struct.std::__1::pair.527" = type opaque
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"struct.std::__1::pair.527"* }
%"class.base::flat_map.533" = type { %"class.base::internal::flat_tree.534" }
%"class.base::internal::flat_tree.534" = type { %"class.std::__1::vector.535" }
%"class.std::__1::vector.535" = type { %"class.std::__1::__vector_base.536" }
%"class.std::__1::__vector_base.536" = type { %"struct.std::__1::pair.537"*, %"struct.std::__1::pair.537"*, %"class.std::__1::__compressed_pair.538" }
%"struct.std::__1::pair.537" = type opaque
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"struct.std::__1::pair.537"* }
%"class.base::WeakPtrFactory.543" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.544" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::SpdySessionPool" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::SSLClientContext::Observer", %"class.net::HttpServerProperties"*, %"class.net::TransportSecurityState"*, %"class.std::__1::set.545", %"class.std::__1::map.555", %"class.std::__1::multimap.566", %"class.std::__1::map.575", %"class.net::Http2PushPromiseIndex", %"class.net::SSLClientContext"*, %"class.net::HostResolver"*, %"class.std::__1::vector.222", i8, i8, i8, i8, i64, i32, %"class.std::__1::map.592", %"class.absl::optional.603", i8, i8, %"class.std::__1::map.608", i64 ()*, %"class.net::ServerPushDelegate"*, %"class.net::NetworkQualityEstimator"*, %"class.base::WeakPtrFactory.617" }
%"class.net::SSLClientContext::Observer" = type { %"class.base::CheckedObserver" }
%"class.std::__1::set.545" = type { %"class.std::__1::__tree.546" }
%"class.std::__1::__tree.546" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.547", %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.555" = type { %"class.std::__1::__tree.556" }
%"class.std::__1::__tree.556" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.557", %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::multimap.566" = type { %"class.std::__1::__tree.567" }
%"class.std::__1::__tree.567" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.575" = type { %"class.std::__1::__tree.576" }
%"class.std::__1::__tree.576" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.577", %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::Http2PushPromiseIndex" = type { %"class.std::__1::set.584" }
%"class.std::__1::set.584" = type { %"class.std::__1::__tree.585" }
%"class.std::__1::__tree.585" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.586", %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.592" = type { %"class.std::__1::__tree.593" }
%"class.std::__1::__tree.593" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.594", %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.absl::optional.603" = type { %"class.absl::optional_internal::optional_data.604" }
%"class.absl::optional_internal::optional_data.604" = type { %"class.absl::optional_internal::optional_data_base.605" }
%"class.absl::optional_internal::optional_data_base.605" = type { %"class.absl::optional_internal::optional_data_dtor_base.606" }
%"class.absl::optional_internal::optional_data_dtor_base.606" = type { i8, %union.anon.607 }
%union.anon.607 = type { %"struct.net::SpdySessionPool::GreasedHttp2Frame" }
%"struct.net::SpdySessionPool::GreasedHttp2Frame" = type { i8, i8, %"class.std::__1::basic_string" }
%"class.std::__1::map.608" = type { %"class.std::__1::__tree.609" }
%"class.std::__1::__tree.609" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::WeakPtrFactory.617" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.net::HttpStreamFactory"* }
%"class.net::HttpStreamFactory" = type { i32 (...)**, %"class.net::HttpNetworkSession"*, %"class.std::__1::set.621", %"class.std::__1::unique_ptr.629" }
%"class.std::__1::set.621" = type { %"class.std::__1::__tree.622" }
%"class.std::__1::__tree.622" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.net::HttpStreamFactory::JobFactory"* }
%"class.net::HttpStreamFactory::JobFactory" = type opaque
%"class.std::__1::map.638" = type { %"class.std::__1::__tree.639" }
%"class.std::__1::__tree.639" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.640", %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { i32*, i32*, %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { i32* }
%"class.base::flat_map.656" = type { %"class.base::internal::flat_tree.657" }
%"class.base::internal::flat_tree.657" = type { %"class.std::__1::vector.658" }
%"class.std::__1::vector.658" = type { %"class.std::__1::__vector_base.659" }
%"class.std::__1::__vector_base.659" = type { %"struct.std::__1::pair.660"*, %"struct.std::__1::pair.660"*, %"class.std::__1::__compressed_pair.661" }
%"struct.std::__1::pair.660" = type { i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i8* }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::pair.660"* }
%"struct.net::HttpNetworkSession::Params" = type <{ i8, [7 x i8], %"class.net::HostMappingRules", i8, i8, i16, i16, i8, i8, i8, [7 x i8], i64, i32, [4 x i8], %"class.std::__1::map.592", %"class.absl::optional.603", i8, [7 x i8], i64 ()*, i8, i8, i8, i8, i8, [3 x i8], %"class.base::internal::flat_tree.680", i8, i8, i8, [5 x i8] }>
%"class.net::HostMappingRules" = type { %"class.std::__1::vector.666", %"class.std::__1::vector.673" }
%"class.std::__1::vector.666" = type { %"class.std::__1::__vector_base.667" }
%"class.std::__1::__vector_base.667" = type { %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"*, %"class.std::__1::__compressed_pair.668" }
%"struct.net::HostMappingRules::MapRule" = type opaque
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"struct.net::HostMappingRules::MapRule"* }
%"class.std::__1::vector.673" = type { %"class.std::__1::__vector_base.674" }
%"class.std::__1::__vector_base.674" = type { %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"*, %"class.std::__1::__compressed_pair.675" }
%"struct.net::HostMappingRules::ExclusionRule" = type opaque
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"struct.net::HostMappingRules::ExclusionRule"* }
%"class.base::internal::flat_tree.680" = type { %"class.std::__1::vector.129" }
%"struct.net::HttpNetworkSession::Context" = type { %"class.net::ClientSocketFactory"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::HttpUserAgentSettings"*, %"class.net::SSLConfigService"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::HttpServerProperties"*, %"class.net::NetLog"*, %"class.net::SocketPerformanceWatcherFactory"*, %"class.net::NetworkQualityEstimator"*, %"class.net::QuicContext"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::QuicCryptoClientStreamFactory"* }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.net::HttpCache" = type { %"class.net::HttpTransactionFactory", %"class.net::NetLog"*, %"class.std::__1::unique_ptr.879", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.885", %"class.std::__1::unique_ptr.891", %"class.std::__1::unordered_map", %"class.std::__1::map.916", %"class.std::__1::unordered_map.927", %"class.base::Clock"*, %"class.base::WeakPtrFactory.951" }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.net::HttpCache::BackendFactory"* }
%"class.net::HttpCache::BackendFactory" = type { i32 (...)** }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.net::HttpTransactionFactory"* }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.disk_cache::Backend"* }
%"class.disk_cache::Backend" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.897", %"class.std::__1::__compressed_pair.905", %"class.std::__1::__compressed_pair.910", %"class.std::__1::__compressed_pair.912", [4 x i8] }>
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899", %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { float }
%"class.std::__1::map.916" = type { %"class.std::__1::__tree.917" }
%"class.std::__1::__tree.917" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.918", %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unordered_map.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.947", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"class.base::WeakPtrFactory.951" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::set.696" = type { %"class.std::__1::__tree.697" }
%"class.std::__1::__tree.697" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.698", %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::URLRequest" = type { %"class.base::SupportsUserData.base", %"class.net::URLRequestContext"*, %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.725", %"class.std::__1::vector.732", %"class.net::SiteForCookies", %"class.net::IsolationInfo", i32, i8, i8, %"class.absl::optional.749", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::HttpRequestHeaders", i32, i8, i32, i32, %"class.std::__1::vector.781", %"class.std::__1::vector.788", i32, %"class.net::URLRequest::Delegate"*, i32, %"class.net::HttpResponseInfo", i8, i8, i32, %"class.net::UploadProgress", i32, i32, i8, %"class.std::__1::basic_string", i8, i8, i64, %"class.base::TimeTicks", %"struct.net::LoadTimingInfo", %"class.net::ProxyServer", %"class.absl::optional.845", %"struct.net::NetworkTrafficAnnotationTag", %"class.net::SocketTag", %"class.base::RepeatingCallback.858", %"class.base::RepeatingCallback.859", %"class.base::RepeatingCallback.859", i8, i8, i32, %"class.base::WeakPtrFactory.860" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.708", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.708" = type { %"class.std::__1::__tree.709" }
%"class.std::__1::__tree.709" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.710", %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.net::URLRequestJob"* }
%"class.net::URLRequestJob" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.net::UploadDataStream"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback.728", %"class.net::NetLogWithSource" }
%"class.base::OnceCallback.728" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.732" = type { %"class.std::__1::__vector_base.733" }
%"class.std::__1::__vector_base.733" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %class.GURL* }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.744" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.744" = type { %"class.absl::optional_internal::optional_data.745" }
%"class.absl::optional_internal::optional_data.745" = type { %"class.absl::optional_internal::optional_data_base.746" }
%"class.absl::optional_internal::optional_data_base.746" = type { %"class.absl::optional_internal::optional_data_dtor_base.747" }
%"class.absl::optional_internal::optional_data_dtor_base.747" = type { i8, %union.anon.748 }
%union.anon.748 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.749", %"class.absl::optional.749", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.759" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.754", %"class.absl::optional.754" }
%"class.absl::optional.754" = type { %"class.absl::optional_internal::optional_data.755" }
%"class.absl::optional_internal::optional_data.755" = type { %"class.absl::optional_internal::optional_data_base.756" }
%"class.absl::optional_internal::optional_data_base.756" = type { %"class.absl::optional_internal::optional_data_dtor_base.757" }
%"class.absl::optional_internal::optional_data_dtor_base.757" = type { i8, %union.anon.758 }
%union.anon.758 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.759" = type { %"class.absl::optional_internal::optional_data.760" }
%"class.absl::optional_internal::optional_data.760" = type { %"class.absl::optional_internal::optional_data_base.761" }
%"class.absl::optional_internal::optional_data_base.761" = type { %"class.absl::optional_internal::optional_data_dtor_base.762" }
%"class.absl::optional_internal::optional_data_dtor_base.762" = type { i8, %union.anon.763 }
%union.anon.763 = type { %"class.std::__1::set.764" }
%"class.std::__1::set.764" = type { %"class.std::__1::__tree.765" }
%"class.std::__1::__tree.765" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.766", %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.absl::optional.749" = type { %"class.absl::optional_internal::optional_data.750" }
%"class.absl::optional_internal::optional_data.750" = type { %"class.absl::optional_internal::optional_data_base.751" }
%"class.absl::optional_internal::optional_data_base.751" = type { %"class.absl::optional_internal::optional_data_dtor_base.752" }
%"class.absl::optional_internal::optional_data_dtor_base.752" = type { i8, %union.anon.753 }
%union.anon.753 = type { %"class.url::Origin" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.734" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.774" }
%"class.std::__1::vector.774" = type { %"class.std::__1::__vector_base.775" }
%"class.std::__1::__vector_base.775" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.776" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.std::__1::vector.781" = type { %"class.std::__1::__vector_base.782" }
%"class.std::__1::__vector_base.782" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.783" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.788" = type { %"class.std::__1::__vector_base.789" }
%"class.std::__1::__vector_base.789" = type { %"struct.net::CookieAndLineWithAccessResult"*, %"struct.net::CookieAndLineWithAccessResult"*, %"class.std::__1::__compressed_pair.795" }
%"struct.net::CookieAndLineWithAccessResult" = type <{ %"class.absl::optional.790", %"class.std::__1::basic_string", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.absl::optional.790" = type { %"class.absl::optional_internal::optional_data.791" }
%"class.absl::optional_internal::optional_data.791" = type { %"class.absl::optional_internal::optional_data_base.792" }
%"class.absl::optional_internal::optional_data_base.792" = type { %"class.absl::optional_internal::optional_data_dtor_base.793" }
%"class.absl::optional_internal::optional_data_dtor_base.793" = type { i8, %union.anon.794 }
%union.anon.794 = type { %"class.net::CanonicalCookie" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"struct.net::CookieAndLineWithAccessResult"* }
%"class.net::URLRequest::Delegate" = type { i32 (...)** }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.800", %class.scoped_refptr.805, %"class.net::SSLInfo", %class.scoped_refptr.836, %"class.net::HttpVaryData", %"class.std::__1::vector.129" }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.800" = type { %"class.absl::optional_internal::optional_data.801" }
%"class.absl::optional_internal::optional_data.801" = type { %"class.absl::optional_internal::optional_data_base.802" }
%"class.absl::optional_internal::optional_data_base.802" = type { %"class.absl::optional_internal::optional_data_dtor_base.803" }
%"class.absl::optional_internal::optional_data_dtor_base.803" = type { i8, %union.anon.804 }
%union.anon.804 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.805 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.806, %class.scoped_refptr.806, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.819", %"class.std::__1::basic_string", %"class.std::__1::vector.827", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.806 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.807", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.808", %"class.std::__1::vector.812" }
%"class.base::RefCountedThreadSafe.807" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.129", %"class.std::__1::vector.129", %"class.std::__1::vector.129", %"class.std::__1::vector.129" }
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.812" = type { %"class.std::__1::__vector_base.813" }
%"class.std::__1::__vector_base.813" = type { %"class.std::__1::unique_ptr.808"*, %"class.std::__1::unique_ptr.808"*, %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.std::__1::unique_ptr.808"* }
%"class.std::__1::vector.819" = type { %"class.std::__1::__vector_base.820" }
%"class.std::__1::__vector_base.820" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.822" }
%"class.net::HashValue" = type { i32, %union.anon.821 }
%union.anon.821 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.827" = type { %"class.std::__1::__vector_base.828" }
%"class.std::__1::__vector_base.828" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.831" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.829, i32, [4 x i8] }>
%class.scoped_refptr.829 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.830", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.830" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.836 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.837", %"class.std::__1::vector.838", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.837" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.838" = type { %"class.std::__1::__vector_base.839" }
%"class.std::__1::__vector_base.839" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.840" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.net::UploadProgress" = type { i64, i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.845" = type { %"class.absl::optional_internal::optional_data.846" }
%"class.absl::optional_internal::optional_data.846" = type { %"class.absl::optional_internal::optional_data_base.847" }
%"class.absl::optional_internal::optional_data_base.847" = type { %"class.absl::optional_internal::optional_data_dtor_base.848" }
%"class.absl::optional_internal::optional_data_dtor_base.848" = type { i8, %union.anon.849 }
%union.anon.849 = type { %"class.base::internal::flat_tree.850" }
%"class.base::internal::flat_tree.850" = type { %"class.std::__1::vector.851" }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { i32*, i32*, %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { i32* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::SocketTag" = type { i8 }
%"class.base::RepeatingCallback.858" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.859" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.860" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.706" = type { %"class.std::__1::__vector_base.707" }
%"class.std::__1::__vector_base.707" = type { %"class.net::URLRequest"**, %"class.net::URLRequest"**, %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.net::URLRequest"** }
%"struct.net::NetLogEntry" = type { i32, %"struct.net::NetLogSource", i32, %"class.base::TimeTicks", %"class.base::Value" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNSt3__16__sortIRPFbPKN3net10URLRequestES4_EPS4_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbPKN3net10URLRequestES4_EPS4_EEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPKN3net10URLRequestES4_EPS4_EEbT0_S9_T_ = comdat any

@.str = private unnamed_addr constant [17 x i8] c"logFormatVersion\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"logEventTypes\00", align 1
@_ZN3net12_GLOBAL__N_116kCertStatusFlagsE = internal constant [22 x %"struct.net::(anonymous namespace)::StringToConstant"] [%"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i32 0, i32 0), i32 1 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i32 0, i32 0), i32 2 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i32 0, i32 0), i32 4 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i32 0, i32 0), i32 16 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i32 0, i32 0), i32 32 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i32 0, i32 0), i32 64 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 128 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50, i32 0, i32 0), i32 256 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i32 0, i32 0), i32 1024 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i32 2048 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i32 0, i32 0), i32 8192 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.54, i32 0, i32 0), i32 16384 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i32 0, i32 0), i32 32768 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0), i32 65536 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i32 0, i32 0), i32 131072 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i32 0, i32 0), i32 524288 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i32 0, i32 0), i32 1048576 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i32 0, i32 0), i32 2097152 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.61, i32 0, i32 0), i32 16777216 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i32 0, i32 0), i32 33554432 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i32 0, i32 0), i32 67108864 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i32 0, i32 0), i32 134217728 }], align 16
@.str.2 = private unnamed_addr constant [15 x i8] c"certStatusFlag\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"VERIFY_DISABLE_NETWORK_FETCHES\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"certVerifierFlags\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"kStrong\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"kWeakAllowSha1\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"certPathBuilderDigestPolicy\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"DISTRUSTED\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"UNSPECIFIED\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"TRUSTED_ANCHOR\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"TRUSTED_ANCHOR_WITH_CONSTRAINTS\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"certificateTrustType\00", align 1
@_ZN3net12_GLOBAL__N_110kLoadFlagsE = internal constant [18 x %"struct.net::(anonymous namespace)::StringToConstant"] [%"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i32 0 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0), i32 1 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i32 0, i32 0), i32 2 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.68, i32 0, i32 0), i32 4 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0), i32 8 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i32 0, i32 0), i32 16 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i32 0, i32 0), i32 32 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72, i32 0, i32 0), i32 64 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0), i32 128 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i32 0, i32 0), i32 256 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i32 512 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i32 0, i32 0), i32 1024 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i32 0, i32 0), i32 2048 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.78, i32 0, i32 0), i32 4096 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79, i32 0, i32 0), i32 8192 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.80, i32 0, i32 0), i32 16384 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81, i32 0, i32 0), i32 32768 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i32 0, i32 0), i32 65536 }], align 16
@.str.13 = private unnamed_addr constant [9 x i8] c"loadFlag\00", align 1
@_ZN3net12_GLOBAL__N_115kLoadStateTableE = internal constant [16 x %"struct.net::(anonymous namespace)::StringToConstant"] [%"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), i32 0 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.84, i32 0, i32 0), i32 1 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i32 2 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i32 0, i32 0), i32 3 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.87, i32 0, i32 0), i32 4 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.88, i32 0, i32 0), i32 5 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.89, i32 0, i32 0), i32 6 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i32 0, i32 0), i32 7 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.91, i32 0, i32 0), i32 8 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.92, i32 0, i32 0), i32 9 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i32 0, i32 0), i32 10 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0), i32 11 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i32 12 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.96, i32 0, i32 0), i32 13 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.97, i32 0, i32 0), i32 14 }, %"struct.net::(anonymous namespace)::StringToConstant" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.98, i32 0, i32 0), i32 15 }], align 16
@.str.14 = private unnamed_addr constant [10 x i8] c"loadState\00", align 1
@_ZN3net12_GLOBAL__N_110kNetErrorsE = internal constant [230 x i16] [i16 -1, i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -7, i16 -8, i16 -9, i16 -10, i16 -11, i16 -12, i16 -13, i16 -14, i16 -15, i16 -16, i16 -17, i16 -18, i16 -19, i16 -20, i16 -21, i16 -22, i16 -23, i16 -24, i16 -25, i16 -26, i16 -27, i16 -29, i16 -30, i16 -31, i16 -100, i16 -101, i16 -102, i16 -103, i16 -104, i16 -105, i16 -106, i16 -107, i16 -108, i16 -109, i16 -110, i16 -111, i16 -112, i16 -113, i16 -114, i16 -115, i16 -116, i16 -117, i16 -118, i16 -119, i16 -120, i16 -121, i16 -122, i16 -123, i16 -124, i16 -125, i16 -126, i16 -127, i16 -130, i16 -131, i16 -133, i16 -134, i16 -135, i16 -136, i16 -137, i16 -138, i16 -139, i16 -140, i16 -141, i16 -142, i16 -145, i16 -147, i16 -148, i16 -149, i16 -150, i16 -151, i16 -153, i16 -154, i16 -156, i16 -159, i16 -160, i16 -161, i16 -162, i16 -163, i16 -164, i16 -166, i16 -167, i16 -168, i16 -169, i16 -170, i16 -171, i16 -172, i16 -173, i16 -174, i16 -176, i16 -177, i16 -178, i16 -179, i16 -180, i16 -181, i16 -200, i16 -201, i16 -202, i16 -203, i16 -204, i16 -205, i16 -206, i16 -207, i16 -208, i16 -210, i16 -211, i16 -212, i16 -213, i16 -214, i16 -215, i16 -217, i16 -218, i16 -219, i16 -300, i16 -301, i16 -302, i16 -303, i16 -310, i16 -311, i16 -312, i16 -320, i16 -321, i16 -322, i16 -323, i16 -324, i16 -325, i16 -327, i16 -328, i16 -329, i16 -330, i16 -331, i16 -332, i16 -333, i16 -334, i16 -336, i16 -337, i16 -338, i16 -339, i16 -340, i16 -341, i16 -342, i16 -343, i16 -344, i16 -345, i16 -346, i16 -347, i16 -348, i16 -349, i16 -350, i16 -351, i16 -352, i16 -354, i16 -355, i16 -356, i16 -357, i16 -358, i16 -360, i16 -361, i16 -362, i16 -363, i16 -364, i16 -365, i16 -366, i16 -367, i16 -370, i16 -371, i16 -372, i16 -373, i16 -374, i16 -375, i16 -376, i16 -377, i16 -378, i16 -379, i16 -380, i16 -381, i16 -400, i16 -401, i16 -402, i16 -403, i16 -404, i16 -405, i16 -406, i16 -407, i16 -408, i16 -409, i16 -410, i16 -411, i16 -412, i16 -413, i16 -501, i16 -502, i16 -503, i16 -504, i16 -505, i16 -506, i16 -507, i16 -601, i16 -602, i16 -603, i16 -604, i16 -605, i16 -606, i16 -607, i16 -701, i16 -702, i16 -703, i16 -704, i16 -705, i16 -706, i16 -707, i16 -708, i16 -709, i16 -710, i16 -712, i16 -713, i16 -714, i16 -800, i16 -801, i16 -802, i16 -803, i16 -804, i16 -805, i16 -806, i16 -808], align 16
@.str.15 = private unnamed_addr constant [9 x i8] c"netError\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"quicError\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"quicRstStreamError\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"PHASE_BEGIN\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"PHASE_END\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"PHASE_NONE\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"logEventPhase\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"logSourceType\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"ADDRESS_FAMILY_UNSPECIFIED\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"ADDRESS_FAMILY_IPV4\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"ADDRESS_FAMILY_IPV6\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"addressFamily\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"timeTickOffset\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"clientInfo\00", align 1
@_ZL19kNetInfoFieldTrials = internal constant [23 x i8] c"activeFieldTrialGroups\00", align 16
@.str.29 = private unnamed_addr constant [11 x i8] c"dns_config\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"capacity\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"network_changes\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"entries\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"cache\00", align 1
@_ZL20kNetInfoHostResolver = internal constant [17 x i8] c"hostResolverInfo\00", align 16
@_ZL18kNetInfoSocketPool = internal constant [15 x i8] c"socketPoolInfo\00", align 1
@_ZL20kNetInfoSpdySessions = internal constant [16 x i8] c"spdySessionInfo\00", align 16
@.str.34 = private unnamed_addr constant [13 x i8] c"enable_http2\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"alpn_protos\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"application_settings\00", align 1
@_ZL18kNetInfoSpdyStatus = internal constant [11 x i8] c"spdyStatus\00", align 1
@_ZL22kNetInfoAltSvcMappings = internal constant [15 x i8] c"altSvcMappings\00", align 1
@_ZL12kNetInfoQuic = internal constant [9 x i8] c"quicInfo\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@_ZL17kNetInfoHTTPCache = internal constant [14 x i8] c"httpCacheInfo\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"networkErrorLogging\00", align 1
@_ZL17kNetInfoReporting = internal constant [14 x i8] c"reportingInfo\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"reportingEnabled\00", align 1
@.str.41 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.43 = private unnamed_addr constant [20 x i8] c"COMMON_NAME_INVALID\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"DATE_INVALID\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"AUTHORITY_INVALID\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"NO_REVOCATION_MECHANISM\00", align 1
@.str.47 = private unnamed_addr constant [27 x i8] c"UNABLE_TO_CHECK_REVOCATION\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"REVOKED\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"INVALID\00", align 1
@.str.50 = private unnamed_addr constant [25 x i8] c"WEAK_SIGNATURE_ALGORITHM\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"NON_UNIQUE_NAME\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"WEAK_KEY\00", align 1
@.str.53 = private unnamed_addr constant [19 x i8] c"PINNED_KEY_MISSING\00", align 1
@.str.54 = private unnamed_addr constant [26 x i8] c"NAME_CONSTRAINT_VIOLATION\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"VALIDITY_TOO_LONG\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"IS_EV\00", align 1
@.str.57 = private unnamed_addr constant [21 x i8] c"REV_CHECKING_ENABLED\00", align 1
@.str.58 = private unnamed_addr constant [23 x i8] c"SHA1_SIGNATURE_PRESENT\00", align 1
@.str.59 = private unnamed_addr constant [21 x i8] c"CT_COMPLIANCE_FAILED\00", align 1
@.str.60 = private unnamed_addr constant [28 x i8] c"KNOWN_INTERCEPTION_DETECTED\00", align 1
@.str.61 = private unnamed_addr constant [34 x i8] c"CERTIFICATE_TRANSPARENCY_REQUIRED\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"SYMANTEC_LEGACY\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"KNOWN_INTERCEPTION_BLOCKED\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"LEGACY_TLS\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"NORMAL\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"VALIDATE_CACHE\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"BYPASS_CACHE\00", align 1
@.str.68 = private unnamed_addr constant [22 x i8] c"SKIP_CACHE_VALIDATION\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"ONLY_FROM_CACHE\00", align 1
@.str.70 = private unnamed_addr constant [14 x i8] c"DISABLE_CACHE\00", align 1
@.str.71 = private unnamed_addr constant [29 x i8] c"DISABLE_CERT_NETWORK_FETCHES\00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"DO_NOT_SAVE_COOKIES\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"BYPASS_PROXY\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c"MAIN_FRAME_DEPRECATED\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"PREFETCH\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"IGNORE_LIMITS\00", align 1
@.str.77 = private unnamed_addr constant [29 x i8] c"DO_NOT_USE_EMBEDDED_IDENTITY\00", align 1
@.str.78 = private unnamed_addr constant [41 x i8] c"DISABLE_CONNECTION_MIGRATION_TO_CELLULAR\00", align 1
@.str.79 = private unnamed_addr constant [16 x i8] c"SKIP_VARY_CHECK\00", align 1
@.str.80 = private unnamed_addr constant [27 x i8] c"SUPPORT_ASYNC_REVALIDATION\00", align 1
@.str.81 = private unnamed_addr constant [20 x i8] c"RESTRICTED_PREFETCH\00", align 1
@.str.82 = private unnamed_addr constant [28 x i8] c"CAN_USE_RESTRICTED_PREFETCH\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.84 = private unnamed_addr constant [32 x i8] c"WAITING_FOR_STALLED_SOCKET_POOL\00", align 1
@.str.85 = private unnamed_addr constant [29 x i8] c"WAITING_FOR_AVAILABLE_SOCKET\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"WAITING_FOR_DELEGATE\00", align 1
@.str.87 = private unnamed_addr constant [18 x i8] c"WAITING_FOR_CACHE\00", align 1
@.str.88 = private unnamed_addr constant [21 x i8] c"WAITING_FOR_APPCACHE\00", align 1
@.str.89 = private unnamed_addr constant [21 x i8] c"DOWNLOADING_PAC_FILE\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"RESOLVING_PROXY_FOR_URL\00", align 1
@.str.91 = private unnamed_addr constant [27 x i8] c"RESOLVING_HOST_IN_PAC_FILE\00", align 1
@.str.92 = private unnamed_addr constant [26 x i8] c"ESTABLISHING_PROXY_TUNNEL\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"RESOLVING_HOST\00", align 1
@.str.94 = private unnamed_addr constant [11 x i8] c"CONNECTING\00", align 1
@.str.95 = private unnamed_addr constant [14 x i8] c"SSL_HANDSHAKE\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"SENDING_REQUEST\00", align 1
@.str.97 = private unnamed_addr constant [21 x i8] c"WAITING_FOR_RESPONSE\00", align 1
@.str.98 = private unnamed_addr constant [17 x i8] c"READING_RESPONSE\00", align 1
@.str.99 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.100 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.101 = private unnamed_addr constant [2 x i8] c":\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15GetNetConstantsEv(%"class.base::Value"* noalias sret) local_unnamed_addr #0 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = alloca %"class.base::Value", align 8
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca %"class.base::Value", align 8
  %11 = alloca %"class.base::Value", align 8
  %12 = alloca %"class.base::Value", align 8
  %13 = alloca %"class.base::Value", align 8
  %14 = alloca %"class.base::Value", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.base::Value", align 8
  %17 = alloca %"class.base::Value", align 8
  %18 = alloca %"class.base::Value", align 8
  %19 = alloca %"class.base::Value", align 8
  %20 = alloca %"class.base::Value", align 8
  %21 = alloca %"class.base::TimeDelta", align 8
  %22 = alloca %"class.base::TimeDelta", align 8
  %23 = alloca %"class.base::Value", align 8
  %24 = alloca %"class.base::Value", align 8
  %25 = alloca %"class.base::Value", align 8
  %26 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #11
  %27 = tail call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16, i32 1) #11
  %28 = bitcast %"class.base::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN3net6NetLog20GetEventTypesAsValueEv(%"class.base::Value"* nonnull sret %7) #11
  %29 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %7) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  %30 = bitcast %"class.base::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %31 = bitcast %"class.base::Value"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %8, i8 zeroext 6) #11
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  br label %54

33:                                               ; preds = %63
  %34 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %8) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  %35 = bitcast %"class.base::Value"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #11
  %36 = bitcast %"class.base::Value"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %9, i8 zeroext 6) #11
  %37 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i64 30, i32 1) #11
  %38 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %9) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #11
  %39 = bitcast %"class.base::Value"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #11
  %40 = bitcast %"class.base::Value"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %10, i8 zeroext 6) #11
  %41 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7, i32 0) #11
  %42 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14, i32 1) #11
  %43 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %10) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #11
  %44 = bitcast %"class.base::Value"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #11
  %45 = bitcast %"class.base::Value"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %11, i8 zeroext 6) #11
  %46 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 10, i32 0) #11
  %47 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 11, i32 1) #11
  %48 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14, i32 2) #11
  %49 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %11, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0), i64 31, i32 3) #11
  %50 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %11) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #11
  %51 = bitcast %"class.base::Value"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #11
  %52 = bitcast %"class.base::Value"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %12, i8 zeroext 6) #11
  %53 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %75

54:                                               ; preds = %1, %63
  %55 = phi %"struct.net::(anonymous namespace)::StringToConstant"* [ getelementptr inbounds ([22 x %"struct.net::(anonymous namespace)::StringToConstant"], [22 x %"struct.net::(anonymous namespace)::StringToConstant"]* @_ZN3net12_GLOBAL__N_116kCertStatusFlagsE, i64 0, i64 0), %1 ], [ %68, %63 ]
  %56 = getelementptr inbounds %"struct.net::(anonymous namespace)::StringToConstant", %"struct.net::(anonymous namespace)::StringToConstant"* %55, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %54
  %60 = call i64 @strlen(i8* nonnull %57) #11
  br label %63

61:                                               ; preds = %54
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)) #11
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %63

63:                                               ; preds = %59, %61
  %64 = phi i64 [ 0, %61 ], [ %60, %59 ]
  %65 = getelementptr inbounds %"struct.net::(anonymous namespace)::StringToConstant", %"struct.net::(anonymous namespace)::StringToConstant"* %55, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %8, i8* %57, i64 %64, i32 %66) #11
  %68 = getelementptr inbounds %"struct.net::(anonymous namespace)::StringToConstant", %"struct.net::(anonymous namespace)::StringToConstant"* %55, i64 1
  %69 = icmp eq %"struct.net::(anonymous namespace)::StringToConstant"* %68, getelementptr inbounds ([22 x %"struct.net::(anonymous namespace)::StringToConstant"], [22 x %"struct.net::(anonymous namespace)::StringToConstant"]* @_ZN3net12_GLOBAL__N_116kCertStatusFlagsE, i64 1, i64 0)
  br i1 %69, label %33, label %54

70:                                               ; preds = %84
  %71 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %12) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #11
  %72 = bitcast %"class.base::Value"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #11
  %73 = bitcast %"class.base::Value"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %13, i8 zeroext 6) #11
  %74 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %100

75:                                               ; preds = %33, %84
  %76 = phi %"struct.net::(anonymous namespace)::StringToConstant"* [ getelementptr inbounds ([18 x %"struct.net::(anonymous namespace)::StringToConstant"], [18 x %"struct.net::(anonymous namespace)::StringToConstant"]* @_ZN3net12_GLOBAL__N_110kLoadFlagsE, i64 0, i64 0), %33 ], [ %89, %84 ]
  %77 = getelementptr inbounds %"struct.net::(anonymous namespace)::StringToConstant", %"struct.net::(anonymous namespace)::StringToConstant"* %76, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = call i64 @strlen(i8* nonnull %78) #11
  br label %84

82:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)) #11
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  br label %84

84:                                               ; preds = %80, %82
  %85 = phi i64 [ 0, %82 ], [ %81, %80 ]
  %86 = getelementptr inbounds %"struct.net::(anonymous namespace)::StringToConstant", %"struct.net::(anonymous namespace)::StringToConstant"* %76, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %12, i8* %78, i64 %85, i32 %87) #11
  %89 = getelementptr inbounds %"struct.net::(anonymous namespace)::StringToConstant", %"struct.net::(anonymous namespace)::StringToConstant"* %76, i64 1
  %90 = icmp eq %"struct.net::(anonymous namespace)::StringToConstant"* %89, getelementptr inbounds ([18 x %"struct.net::(anonymous namespace)::StringToConstant"], [18 x %"struct.net::(anonymous namespace)::StringToConstant"]* @_ZN3net12_GLOBAL__N_110kLoadFlagsE, i64 1, i64 0)
  br i1 %90, label %70, label %75

91:                                               ; preds = %109
  %92 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %13) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #11
  %93 = bitcast %"class.base::Value"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #11
  %94 = bitcast %"class.base::Value"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %14, i8 zeroext 6) #11
  %95 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %96 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %121

100:                                              ; preds = %70, %109
  %101 = phi %"struct.net::(anonymous namespace)::StringToConstant"* [ getelementptr inbounds ([16 x %"struct.net::(anonymous namespace)::StringToConstant"], [16 x %"struct.net::(anonymous namespace)::StringToConstant"]* @_ZN3net12_GLOBAL__N_115kLoadStateTableE, i64 0, i64 0), %70 ], [ %114, %109 ]
  %102 = getelementptr inbounds %"struct.net::(anonymous namespace)::StringToConstant", %"struct.net::(anonymous namespace)::StringToConstant"* %101, i64 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = call i64 @strlen(i8* nonnull %103) #11
  br label %109

107:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)) #11
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #11
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi i64 [ 0, %107 ], [ %106, %105 ]
  %111 = getelementptr inbounds %"struct.net::(anonymous namespace)::StringToConstant", %"struct.net::(anonymous namespace)::StringToConstant"* %101, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %13, i8* %103, i64 %110, i32 %112) #11
  %114 = getelementptr inbounds %"struct.net::(anonymous namespace)::StringToConstant", %"struct.net::(anonymous namespace)::StringToConstant"* %101, i64 1
  %115 = icmp eq %"struct.net::(anonymous namespace)::StringToConstant"* %114, getelementptr inbounds ([16 x %"struct.net::(anonymous namespace)::StringToConstant"], [16 x %"struct.net::(anonymous namespace)::StringToConstant"]* @_ZN3net12_GLOBAL__N_115kLoadStateTableE, i64 1, i64 0)
  br i1 %115, label %91, label %100

116:                                              ; preds = %139
  %117 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %14) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #11
  %118 = bitcast %"class.base::Value"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #11
  %119 = bitcast %"class.base::Value"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %16, i8 zeroext 6) #11
  %120 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %147

121:                                              ; preds = %91, %139
  %122 = phi i16* [ getelementptr inbounds ([230 x i16], [230 x i16]* @_ZN3net12_GLOBAL__N_110kNetErrorsE, i64 0, i64 0), %91 ], [ %140, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #11
  %123 = load i16, i16* %122, align 2
  %124 = sext i16 %123 to i32
  call void @_ZN3net18ErrorToShortStringEi(%"class.std::__1::basic_string"* nonnull sret %15, i32 %124) #11
  %125 = load i8, i8* %97, align 1
  %126 = icmp slt i8 %125, 0
  %127 = load i8*, i8** %98, align 8
  %128 = select i1 %126, i8* %127, i8* %95
  %129 = load i64, i64* %99, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = load i16, i16* %122, align 2
  %133 = sext i16 %132 to i32
  %134 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %14, i8* %128, i64 %131, i32 %133) #11
  %135 = load i8, i8* %97, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %121
  %138 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %121, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #11
  %140 = getelementptr inbounds i16, i16* %122, i64 1
  %141 = icmp eq i16* %140, getelementptr inbounds ([230 x i16], [230 x i16]* @_ZN3net12_GLOBAL__N_110kNetErrorsE, i64 1, i64 0)
  br i1 %141, label %116, label %121

142:                                              ; preds = %155
  %143 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %16) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #11
  %144 = bitcast %"class.base::Value"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %144) #11
  %145 = bitcast %"class.base::Value"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %17, i8 zeroext 6) #11
  %146 = bitcast %"class.logging::CheckError"* %6 to i8*
  br label %192

147:                                              ; preds = %155, %116
  %148 = phi i32 [ 0, %116 ], [ %158, %155 ]
  %149 = call i8* @_ZN4quic21QuicErrorCodeToStringENS_13QuicErrorCodeE(i32 %148) #11
  %150 = icmp eq i8* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %147
  %152 = call i64 @strlen(i8* nonnull %149) #11
  br label %155

153:                                              ; preds = %147
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)) #11
  %154 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  br label %155

155:                                              ; preds = %151, %153
  %156 = phi i64 [ 0, %153 ], [ %152, %151 ]
  %157 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %16, i8* %149, i64 %156, i32 %148) #11
  %158 = add nuw nsw i32 %148, 1
  %159 = icmp eq i32 %158, 205
  br i1 %159, label %142, label %147

160:                                              ; preds = %200
  %161 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %17) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %144) #11
  %162 = bitcast %"class.base::Value"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %162) #11
  %163 = bitcast %"class.base::Value"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %18, i8 zeroext 6) #11
  %164 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i64 11, i32 1) #11
  %165 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i64 9, i32 2) #11
  %166 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i64 10, i32 0) #11
  %167 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %18) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %162) #11
  %168 = bitcast %"class.base::Value"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %168) #11
  call void @_ZN3net6NetLog21GetSourceTypesAsValueEv(%"class.base::Value"* nonnull sret %19) #11
  %169 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %19) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #11
  %170 = bitcast %"class.base::Value"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #11
  %171 = bitcast %"class.base::Value"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %20, i8 zeroext 6) #11
  %172 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %20, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i64 26, i32 0) #11
  %173 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %20, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0), i64 19, i32 1) #11
  %174 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %20, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0), i64 19, i32 2) #11
  %175 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %20) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #11
  %176 = bitcast %"class.base::TimeDelta"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #11
  %177 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %21, i64 0, i32 0
  %178 = call i64 @_ZN4base4Time3NowEv() #11
  %179 = call i64 @_ZN4base4Time9UnixEpochEv() #11
  %180 = sub nsw i64 %178, %179
  store i64 %180, i64* %177, align 8
  %181 = call i64 @_ZN4base9TimeTicks3NowEv() #11
  %182 = bitcast %"class.base::TimeDelta"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #11
  %183 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %21, i64 %181)
  %184 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %22, i64 0, i32 0
  store i64 %183, i64* %184, align 8
  %185 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #11
  %186 = bitcast %"class.base::Value"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #11
  call void @_ZN3net17NetLogNumberValueEl(%"class.base::Value"* nonnull sret %23, i64 %185) #11
  %187 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %23) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #11
  %188 = bitcast %"class.base::Value"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %188) #11
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %24, i8 zeroext 6) #11
  %189 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %24) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %188) #11
  %190 = bitcast %"class.base::Value"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190) #11
  call fastcc void @_ZN3net12_GLOBAL__N_123GetActiveFieldTrialListEv(%"class.base::Value"* nonnull sret %25)
  %191 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZL19kNetInfoFieldTrials, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %25) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %190) #11
  ret void

192:                                              ; preds = %200, %142
  %193 = phi i32 [ 0, %142 ], [ %203, %200 ]
  %194 = call i8* @_ZN4quic30QuicRstStreamErrorCodeToStringENS_22QuicRstStreamErrorCodeE(i32 %193) #11
  %195 = icmp eq i8* %194, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %192
  %197 = call i64 @strlen(i8* nonnull %194) #11
  br label %200

198:                                              ; preds = %192
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)) #11
  %199 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #11
  br label %200

200:                                              ; preds = %196, %198
  %201 = phi i64 [ 0, %198 ], [ %197, %196 ]
  %202 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %17, i8* %194, i64 %201, i32 %193) #11
  %203 = add nuw nsw i32 %193, 1
  %204 = icmp eq i32 %203, 38
  br i1 %204, label %160, label %192
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net6NetLog20GetEventTypesAsValueEv(%"class.base::Value"* sret) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net18ErrorToShortStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare i8* @_ZN4quic21QuicErrorCodeToStringENS_13QuicErrorCodeE(i32) local_unnamed_addr #1

declare i8* @_ZN4quic30QuicRstStreamErrorCodeToStringENS_22QuicRstStreamErrorCodeE(i32) local_unnamed_addr #1

declare void @_ZN3net6NetLog21GetSourceTypesAsValueEv(%"class.base::Value"* sret) local_unnamed_addr #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.99, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.100, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare void @_ZN3net17NetLogNumberValueEl(%"class.base::Value"* sret, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_123GetActiveFieldTrialListEv(%"class.base::Value"* noalias sret) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::vector.869", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::vector.869"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::vector.869", %"class.std::__1::vector.869"* %2, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.869", %"class.std::__1::vector.869"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  call void @_ZN4base14FieldTrialList25GetActiveFieldTrialGroupsEPNSt3__16vectorINS_10FieldTrial11ActiveGroupENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.869"* nonnull %2) #11
  %8 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 7) #11
  %9 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %6, align 8
  %10 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %7, align 8
  %11 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %9, %10
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %59

23:                                               ; preds = %120
  %24 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %6, align 8
  br label %25

25:                                               ; preds = %23, %1
  %26 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %24, %23 ], [ %9, %1 ]
  %27 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %25
  %29 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %26 to i8*
  %30 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %7, align 8
  %31 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %30, %26
  br i1 %31, label %56, label %32

32:                                               ; preds = %28, %51
  %33 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %34, %51 ], [ %30, %28 ]
  %34 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %33, i64 -1
  %35 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %33, i64 -1, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %40, %32
  %44 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %48, %43
  %52 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %34, %26
  br i1 %52, label %53, label %32

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector.869"* %2 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %28
  %57 = phi i8* [ %55, %53 ], [ %29, %28 ]
  store %"struct.base::FieldTrial::ActiveGroup"* %26, %"struct.base::FieldTrial::ActiveGroup"** %7, align 8
  call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %25, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void

59:                                               ; preds = %12, %120
  %60 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %9, %12 ], [ %121, %120 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #11, !alias.scope !3
  %61 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1, !noalias !3
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8, !noalias !3
  %68 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !noalias !3
  br label %73

70:                                               ; preds = %59
  %71 = zext i8 %63 to i64
  %72 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %60 to i8*
  br label %73

73:                                               ; preds = %70, %65
  %74 = phi i64 [ %67, %65 ], [ %71, %70 ]
  %75 = phi i8* [ %69, %65 ], [ %72, %70 ]
  %76 = add i64 %74, 1
  %77 = icmp ugt i64 %76, -17
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %79) #13
  unreachable

80:                                               ; preds = %73
  %81 = icmp ult i64 %76, 23
  br i1 %81, label %87, label %82

82:                                               ; preds = %80
  %83 = add nuw i64 %74, 17
  %84 = and i64 %83, -16
  %85 = call i8* @_Znwm(i64 %84) #12
  store i8* %85, i8** %15, align 8, !alias.scope !3
  %86 = or i64 %84, -9223372036854775808
  store i64 %86, i64* %17, align 8, !alias.scope !3
  store i64 %74, i64* %16, align 8, !alias.scope !3
  br label %90

87:                                               ; preds = %80
  %88 = trunc i64 %74 to i8
  store i8 %88, i8* %19, align 1, !alias.scope !3
  %89 = icmp eq i64 %74, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %82, %87
  %91 = phi i8* [ %85, %82 ], [ %14, %87 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %91, i8* align 1 %75, i64 %74, i1 false) #11
  br label %92

92:                                               ; preds = %87, %90
  %93 = phi i8* [ %14, %87 ], [ %91, %90 ]
  %94 = getelementptr inbounds i8, i8* %93, i64 %74
  store i8 0, i8* %94, align 1
  %95 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0), i64 1) #11
  %96 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %60, i64 0, i32 1
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1, !noalias !6
  %100 = icmp slt i8 %99, 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8, !noalias !6
  %103 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %60, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8, !noalias !6
  %105 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %106 = zext i8 %99 to i64
  %107 = select i1 %100, i8* %102, i8* %105
  %108 = select i1 %100, i64 %104, i64 %106
  %109 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %107, i64 %108) #11, !noalias !6
  %110 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %110, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #11, !noalias !6
  call void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %111 = load i8, i8* %21, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %92
  %114 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %114) #12
  br label %115

115:                                              ; preds = %92, %113
  %116 = load i8, i8* %19, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  %119 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  %121 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %60, i64 1
  %122 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %121, %10
  br i1 %122, label %23, label %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10GetNetInfoEPNS_17URLRequestContextE(%"class.base::Value"* noalias sret, %"class.net::URLRequestContext"* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca %"class.base::Value", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = alloca %"class.base::ListValue"*, align 8
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca %"class.base::Value", align 8
  %11 = alloca %"class.base::Value", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.base::Value", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.base::Value", align 8
  %16 = alloca %"class.base::Value", align 8
  %17 = alloca %"class.base::Value", align 8
  %18 = alloca %"class.base::Value", align 8
  %19 = alloca %"class.std::__1::vector.687", align 8
  %20 = alloca %"class.base::Value", align 8
  %21 = alloca %"class.base::Value", align 8
  %22 = alloca %"class.base::Value", align 8
  %23 = alloca %"class.base::Value", align 8
  %24 = alloca %"class.base::Value", align 8
  %25 = alloca %"class.base::Value", align 8
  %26 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %1, i64 0, i32 5
  %27 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 -86, i64 32, i1 false)
  %28 = load %"class.net::ProxyResolutionService"*, %"class.net::ProxyResolutionService"** %26, align 8
  %29 = bitcast %"class.net::ProxyResolutionService"* %28 to void (%"class.base::Value"*, %"class.net::ProxyResolutionService"*)***
  %30 = load void (%"class.base::Value"*, %"class.net::ProxyResolutionService"*)**, void (%"class.base::Value"*, %"class.net::ProxyResolutionService"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::Value"*, %"class.net::ProxyResolutionService"*)*, void (%"class.base::Value"*, %"class.net::ProxyResolutionService"*)** %30, i64 9
  %32 = load void (%"class.base::Value"*, %"class.net::ProxyResolutionService"*)*, void (%"class.base::Value"*, %"class.net::ProxyResolutionService"*)** %31, align 8
  tail call void %32(%"class.base::Value"* sret %0, %"class.net::ProxyResolutionService"* %28) #11
  %33 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %1, i64 0, i32 2
  %34 = load %"class.net::HostResolver"*, %"class.net::HostResolver"** %33, align 8
  %35 = bitcast %"class.net::HostResolver"* %34 to %"class.net::HostCache"* (%"class.net::HostResolver"*)***
  %36 = load %"class.net::HostCache"* (%"class.net::HostResolver"*)**, %"class.net::HostCache"* (%"class.net::HostResolver"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.net::HostCache"* (%"class.net::HostResolver"*)*, %"class.net::HostCache"* (%"class.net::HostResolver"*)** %36, i64 6
  %38 = load %"class.net::HostCache"* (%"class.net::HostResolver"*)*, %"class.net::HostCache"* (%"class.net::HostResolver"*)** %37, align 8
  %39 = tail call %"class.net::HostCache"* %38(%"class.net::HostResolver"* %34) #11
  %40 = icmp eq %"class.net::HostCache"* %39, null
  br i1 %40, label %69, label %41

41:                                               ; preds = %2
  %42 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #11
  %43 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %4, i8 zeroext 6) #11
  %44 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #11
  %45 = bitcast %"class.net::HostResolver"* %34 to void (%"class.base::Value"*, %"class.net::HostResolver"*)***
  %46 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 32, i1 false)
  %47 = load void (%"class.base::Value"*, %"class.net::HostResolver"*)**, void (%"class.base::Value"*, %"class.net::HostResolver"*)*** %45, align 8
  %48 = getelementptr inbounds void (%"class.base::Value"*, %"class.net::HostResolver"*)*, void (%"class.base::Value"*, %"class.net::HostResolver"*)** %47, i64 7
  %49 = load void (%"class.base::Value"*, %"class.net::HostResolver"*)*, void (%"class.base::Value"*, %"class.net::HostResolver"*)** %48, align 8
  call void %49(%"class.base::Value"* nonnull sret %5, %"class.net::HostResolver"* %34) #11
  %50 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %5) #11
  %51 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #11
  %52 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %6, i8 zeroext 6) #11
  %53 = bitcast %"class.base::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #11
  %54 = bitcast %"class.base::Value"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %7, i8 zeroext 7) #11
  %55 = call i64 @_ZNK3net9HostCache11max_entriesEv(%"class.net::HostCache"* nonnull %39) #11
  %56 = trunc i64 %55 to i32
  %57 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i64 8, i32 %56) #11
  %58 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %39, i64 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i64 15, i32 %59) #11
  %61 = bitcast %"class.base::ListValue"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #11
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %8, align 8
  %62 = call zeroext i1 @_ZN4base5Value9GetAsListEPPNS_9ListValueE(%"class.base::Value"* nonnull %7, %"class.base::ListValue"** nonnull %8) #11
  br i1 %62, label %63, label %65

63:                                               ; preds = %41
  %64 = load %"class.base::ListValue"*, %"class.base::ListValue"** %8, align 8
  call void @_ZNK3net9HostCache14GetAsListValueEPN4base9ListValueEbNS0_17SerializationTypeE(%"class.net::HostCache"* nonnull %39, %"class.base::ListValue"* %64, i1 zeroext true, i32 1) #11
  br label %65

65:                                               ; preds = %63, %41
  %66 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %7) #11
  %67 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %6) #11
  %68 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZL20kNetInfoHostResolver, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #11
  br label %69

69:                                               ; preds = %2, %65
  %70 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %1, i64 0, i32 15
  %71 = load %"class.net::HttpTransactionFactory"*, %"class.net::HttpTransactionFactory"** %70, align 8
  %72 = bitcast %"class.net::HttpTransactionFactory"* %71 to %"class.net::HttpNetworkSession"* (%"class.net::HttpTransactionFactory"*)***
  %73 = load %"class.net::HttpNetworkSession"* (%"class.net::HttpTransactionFactory"*)**, %"class.net::HttpNetworkSession"* (%"class.net::HttpTransactionFactory"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.net::HttpNetworkSession"* (%"class.net::HttpTransactionFactory"*)*, %"class.net::HttpNetworkSession"* (%"class.net::HttpTransactionFactory"*)** %73, i64 4
  %75 = load %"class.net::HttpNetworkSession"* (%"class.net::HttpTransactionFactory"*)*, %"class.net::HttpNetworkSession"* (%"class.net::HttpTransactionFactory"*)** %74, align 8
  %76 = call %"class.net::HttpNetworkSession"* %75(%"class.net::HttpTransactionFactory"* %71) #11
  %77 = bitcast %"class.base::Value"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #11
  %78 = call %"class.base::Value"* @_ZNK3net18HttpNetworkSession21SocketPoolInfoToValueEv(%"class.net::HttpNetworkSession"* %76) #11
  call void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* nonnull sret %9, %"class.base::Value"* %78) #11
  %79 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZL18kNetInfoSocketPool, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %9) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #11
  %80 = bitcast %"class.base::Value"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #11
  %81 = call %"class.base::Value"* @_ZNK3net18HttpNetworkSession26SpdySessionPoolInfoToValueEv(%"class.net::HttpNetworkSession"* %76) #11
  call void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* nonnull sret %10, %"class.base::Value"* %81) #11
  %82 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZL20kNetInfoSpdySessions, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %10) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #11
  %83 = bitcast %"class.base::Value"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #11
  %84 = bitcast %"class.base::Value"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %11, i8 zeroext 6) #11
  %85 = getelementptr inbounds %"class.net::HttpNetworkSession", %"class.net::HttpNetworkSession"* %76, i64 0, i32 22, i32 9
  %86 = load i8, i8* %85, align 8, !range !9
  %87 = icmp ne i8 %86, 0
  %88 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i64 12, i1 zeroext %87) #11
  %89 = getelementptr inbounds %"class.net::HttpNetworkSession", %"class.net::HttpNetworkSession"* %76, i64 0, i32 20, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds %"class.net::HttpNetworkSession", %"class.net::HttpNetworkSession"* %76, i64 0, i32 20, i32 0, i32 1
  %92 = load i32*, i32** %91, align 8
  %93 = icmp eq i32* %90, %92
  br i1 %93, label %133, label %94

94:                                               ; preds = %69
  %95 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #11
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 24, i1 false) #11
  %98 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  br label %114

100:                                              ; preds = %125
  %101 = load i8*, i8** %96, align 8
  %102 = load i64, i64* %97, align 8
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %104 = icmp slt i8 %130, 0
  %105 = select i1 %104, i8* %101, i8* %95
  %106 = zext i8 %130 to i64
  %107 = select i1 %104, i64 %102, i64 %106
  %108 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0), i64 11, i8* %105, i64 %107) #11
  %109 = load i8, i8* %103, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %100
  %112 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %112) #12
  br label %113

113:                                              ; preds = %100, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #11
  br label %133

114:                                              ; preds = %131, %94
  %115 = phi i64 [ 0, %94 ], [ %132, %131 ]
  %116 = phi i8 [ 0, %94 ], [ %130, %131 ]
  %117 = phi i32* [ %90, %94 ], [ %128, %131 ]
  %118 = load i32, i32* %117, align 4
  %119 = icmp slt i8 %116, 0
  %120 = zext i8 %116 to i64
  %121 = select i1 %119, i64 %115, i64 %120
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %114
  %124 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #11
  br label %125

125:                                              ; preds = %123, %114
  %126 = call i8* @_ZN3net17NextProtoToStringENS_9NextProtoE(i32 %118) #11
  %127 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %12, i8* %126) #11
  %128 = getelementptr inbounds i32, i32* %117, i64 1
  %129 = icmp eq i32* %128, %92
  %130 = load i8, i8* %99, align 1
  br i1 %129, label %100, label %131

131:                                              ; preds = %125
  %132 = load i64, i64* %97, align 8
  br label %114

133:                                              ; preds = %113, %69
  %134 = getelementptr inbounds %"class.net::HttpNetworkSession", %"class.net::HttpNetworkSession"* %76, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::pair.660"*, %"struct.std::__1::pair.660"** %134, align 8
  %136 = getelementptr inbounds %"class.net::HttpNetworkSession", %"class.net::HttpNetworkSession"* %76, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %137 = load %"struct.std::__1::pair.660"*, %"struct.std::__1::pair.660"** %136, align 8
  %138 = icmp eq %"struct.std::__1::pair.660"* %135, %137
  br i1 %138, label %180, label %139

139:                                              ; preds = %133
  %140 = bitcast %"class.base::Value"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %140) #11
  %141 = bitcast %"class.base::Value"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %13, i8 zeroext 6) #11
  %142 = load %"struct.std::__1::pair.660"*, %"struct.std::__1::pair.660"** %134, align 8
  %143 = load %"struct.std::__1::pair.660"*, %"struct.std::__1::pair.660"** %136, align 8
  %144 = icmp eq %"struct.std::__1::pair.660"* %142, %143
  br i1 %144, label %151, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.logging::CheckError"* %3 to i8*
  %147 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %148 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %153

151:                                              ; preds = %177, %139
  %152 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %13) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %140) #11
  br label %180

153:                                              ; preds = %145, %177
  %154 = phi %"struct.std::__1::pair.660"* [ %142, %145 ], [ %178, %177 ]
  %155 = getelementptr inbounds %"struct.std::__1::pair.660", %"struct.std::__1::pair.660"* %154, i64 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = call i8* @_ZN3net17NextProtoToStringENS_9NextProtoE(i32 %156) #11
  %158 = icmp eq i8* %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %153
  %160 = call i64 @strlen(i8* nonnull %157) #11
  br label %163

161:                                              ; preds = %153
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)) #11
  %162 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #11
  br label %163

163:                                              ; preds = %159, %161
  %164 = phi i64 [ 0, %161 ], [ %160, %159 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #11
  %165 = getelementptr inbounds %"struct.std::__1::pair.660", %"struct.std::__1::pair.660"* %154, i64 0, i32 1, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr inbounds %"struct.std::__1::pair.660", %"struct.std::__1::pair.660"* %154, i64 0, i32 1, i32 0, i32 1
  %168 = bitcast i8** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = ptrtoint i8* %166 to i64
  %171 = sub i64 %169, %170
  call void @_ZN4base9HexEncodeEPKvm(%"class.std::__1::basic_string"* nonnull sret %14, i8* %166, i64 %171) #11
  %172 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* nonnull %13, i8* %157, i64 %164, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #11
  %173 = load i8, i8* %149, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %163
  %176 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %176) #12
  br label %177

177:                                              ; preds = %163, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #11
  %178 = getelementptr inbounds %"struct.std::__1::pair.660", %"struct.std::__1::pair.660"* %154, i64 1
  %179 = icmp eq %"struct.std::__1::pair.660"* %178, %143
  br i1 %179, label %151, label %153

180:                                              ; preds = %151, %133
  %181 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZL18kNetInfoSpdyStatus, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %11) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #11
  %182 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %1, i64 0, i32 9
  %183 = load %"class.net::HttpServerProperties"*, %"class.net::HttpServerProperties"** %182, align 8
  %184 = bitcast %"class.base::Value"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %184) #11
  call void @_ZNK3net20HttpServerProperties32GetAlternativeServiceInfoAsValueEv(%"class.base::Value"* nonnull sret %15, %"class.net::HttpServerProperties"* %183) #11
  %185 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZL22kNetInfoAltSvcMappings, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %15) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %184) #11
  %186 = bitcast %"class.base::Value"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #11
  call void @_ZNK3net18HttpNetworkSession15QuicInfoToValueEv(%"class.base::Value"* nonnull sret %16, %"class.net::HttpNetworkSession"* %76) #11
  %187 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZL12kNetInfoQuic, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %16) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #11
  %188 = bitcast %"class.base::Value"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %188) #11
  %189 = bitcast %"class.base::Value"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %17, i8 zeroext 6) #11
  %190 = bitcast %"class.base::Value"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190) #11
  %191 = bitcast %"class.base::Value"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %191, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %18, i8 zeroext 6) #11
  %192 = load %"class.net::HttpTransactionFactory"*, %"class.net::HttpTransactionFactory"** %70, align 8
  %193 = icmp eq %"class.net::HttpTransactionFactory"* %192, null
  br i1 %193, label %271, label %194

194:                                              ; preds = %180
  %195 = bitcast %"class.net::HttpTransactionFactory"* %192 to %"class.net::HttpCache"* (%"class.net::HttpTransactionFactory"*)***
  %196 = load %"class.net::HttpCache"* (%"class.net::HttpTransactionFactory"*)**, %"class.net::HttpCache"* (%"class.net::HttpTransactionFactory"*)*** %195, align 8
  %197 = getelementptr inbounds %"class.net::HttpCache"* (%"class.net::HttpTransactionFactory"*)*, %"class.net::HttpCache"* (%"class.net::HttpTransactionFactory"*)** %196, i64 3
  %198 = load %"class.net::HttpCache"* (%"class.net::HttpTransactionFactory"*)*, %"class.net::HttpCache"* (%"class.net::HttpTransactionFactory"*)** %197, align 8
  %199 = call %"class.net::HttpCache"* %198(%"class.net::HttpTransactionFactory"* nonnull %192) #11
  %200 = icmp eq %"class.net::HttpCache"* %199, null
  br i1 %200, label %271, label %201

201:                                              ; preds = %194
  %202 = call %"class.disk_cache::Backend"* @_ZNK3net9HttpCache17GetCurrentBackendEv(%"class.net::HttpCache"* nonnull %199) #11
  %203 = icmp eq %"class.disk_cache::Backend"* %202, null
  br i1 %203, label %271, label %204

204:                                              ; preds = %201
  %205 = bitcast %"class.std::__1::vector.687"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #11
  %206 = getelementptr inbounds %"class.std::__1::vector.687", %"class.std::__1::vector.687"* %19, i64 0, i32 0, i32 0
  %207 = getelementptr inbounds %"class.std::__1::vector.687", %"class.std::__1::vector.687"* %19, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 0, i64 24, i1 false) #11
  %208 = bitcast %"class.disk_cache::Backend"* %202 to void (%"class.disk_cache::Backend"*, %"class.std::__1::vector.687"*)***
  %209 = load void (%"class.disk_cache::Backend"*, %"class.std::__1::vector.687"*)**, void (%"class.disk_cache::Backend"*, %"class.std::__1::vector.687"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.disk_cache::Backend"*, %"class.std::__1::vector.687"*)*, void (%"class.disk_cache::Backend"*, %"class.std::__1::vector.687"*)** %209, i64 13
  %211 = load void (%"class.disk_cache::Backend"*, %"class.std::__1::vector.687"*)*, void (%"class.disk_cache::Backend"*, %"class.std::__1::vector.687"*)** %210, align 8
  call void %211(%"class.disk_cache::Backend"* nonnull %202, %"class.std::__1::vector.687"* nonnull %19) #11
  %212 = load %"struct.std::__1::pair.689"*, %"struct.std::__1::pair.689"** %206, align 8
  %213 = load %"struct.std::__1::pair.689"*, %"struct.std::__1::pair.689"** %207, align 8
  %214 = icmp eq %"struct.std::__1::pair.689"* %212, %213
  br i1 %214, label %219, label %215

215:                                              ; preds = %204
  %216 = bitcast %"class.base::Value"* %20 to i8*
  br label %253

217:                                              ; preds = %253
  %218 = load %"struct.std::__1::pair.689"*, %"struct.std::__1::pair.689"** %206, align 8
  br label %219

219:                                              ; preds = %217, %204
  %220 = phi %"struct.std::__1::pair.689"* [ %218, %217 ], [ %212, %204 ]
  %221 = icmp eq %"struct.std::__1::pair.689"* %220, null
  br i1 %221, label %252, label %222

222:                                              ; preds = %219
  %223 = bitcast %"struct.std::__1::pair.689"* %220 to i8*
  %224 = load %"struct.std::__1::pair.689"*, %"struct.std::__1::pair.689"** %207, align 8
  %225 = icmp eq %"struct.std::__1::pair.689"* %224, %220
  br i1 %225, label %250, label %226

226:                                              ; preds = %222, %245
  %227 = phi %"struct.std::__1::pair.689"* [ %228, %245 ], [ %224, %222 ]
  %228 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %227, i64 -1
  %229 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %227, i64 -1, i32 1
  %230 = bitcast %"class.std::__1::basic_string"* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %226
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  call void @_ZdlPv(i8* %236) #12
  br label %237

237:                                              ; preds = %234, %226
  %238 = bitcast %"struct.std::__1::pair.689"* %228 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %245

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %228, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  call void @_ZdlPv(i8* %244) #12
  br label %245

245:                                              ; preds = %242, %237
  %246 = icmp eq %"struct.std::__1::pair.689"* %228, %220
  br i1 %246, label %247, label %226

247:                                              ; preds = %245
  %248 = bitcast %"class.std::__1::vector.687"* %19 to i8**
  %249 = load i8*, i8** %248, align 8
  br label %250

250:                                              ; preds = %247, %222
  %251 = phi i8* [ %249, %247 ], [ %223, %222 ]
  store %"struct.std::__1::pair.689"* %220, %"struct.std::__1::pair.689"** %207, align 8
  call void @_ZdlPv(i8* %251) #12
  br label %252

252:                                              ; preds = %219, %250
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #11
  br label %271

253:                                              ; preds = %215, %253
  %254 = phi %"struct.std::__1::pair.689"* [ %212, %215 ], [ %269, %253 ]
  %255 = bitcast %"struct.std::__1::pair.689"* %254 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %256 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %255, i64 0, i32 1, i32 0
  %257 = load i8, i8* %256, align 1
  %258 = icmp slt i8 %257, 0
  %259 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = bitcast %"struct.std::__1::pair.689"* %254 to i8*
  %262 = select i1 %258, i8* %260, i8* %261
  %263 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %264 = load i64, i64* %263, align 8
  %265 = zext i8 %257 to i64
  %266 = select i1 %258, i64 %264, i64 %265
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %216) #11
  %267 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %254, i64 0, i32 1
  call void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %20, %"class.std::__1::basic_string"* dereferenceable(24) %267) #11
  %268 = call %"class.base::Value"* @_ZN4base5Value6SetKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEOS0_(%"class.base::Value"* nonnull %18, i8* %262, i64 %266, %"class.base::Value"* nonnull dereferenceable(32) %20) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %216) #11
  %269 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %254, i64 1
  %270 = icmp eq %"struct.std::__1::pair.689"* %269, %213
  br i1 %270, label %217, label %253

271:                                              ; preds = %194, %180, %201, %252
  %272 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %18) #11
  %273 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZL17kNetInfoHTTPCache, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %17) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %190) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %188) #11
  %274 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %1, i64 0, i32 20
  %275 = load %"class.net::ReportingService"*, %"class.net::ReportingService"** %274, align 8
  %276 = icmp eq %"class.net::ReportingService"* %275, null
  br i1 %276, label %294, label %277

277:                                              ; preds = %271
  %278 = bitcast %"class.base::Value"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %278) #11
  %279 = bitcast %"class.net::ReportingService"* %275 to void (%"class.base::Value"*, %"class.net::ReportingService"*)***
  %280 = bitcast %"class.base::Value"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %280, i8 -86, i64 32, i1 false)
  %281 = load void (%"class.base::Value"*, %"class.net::ReportingService"*)**, void (%"class.base::Value"*, %"class.net::ReportingService"*)*** %279, align 8
  %282 = getelementptr inbounds void (%"class.base::Value"*, %"class.net::ReportingService"*)*, void (%"class.base::Value"*, %"class.net::ReportingService"*)** %281, i64 9
  %283 = load void (%"class.base::Value"*, %"class.net::ReportingService"*)*, void (%"class.base::Value"*, %"class.net::ReportingService"*)** %282, align 8
  call void %283(%"class.base::Value"* nonnull sret %21, %"class.net::ReportingService"* nonnull %275) #11
  %284 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %1, i64 0, i32 21
  %285 = load %"class.net::NetworkErrorLoggingService"*, %"class.net::NetworkErrorLoggingService"** %284, align 8
  %286 = icmp eq %"class.net::NetworkErrorLoggingService"* %285, null
  br i1 %286, label %304, label %287

287:                                              ; preds = %277
  %288 = bitcast %"class.base::Value"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %288) #11
  %289 = bitcast %"class.net::NetworkErrorLoggingService"* %285 to void (%"class.base::Value"*, %"class.net::NetworkErrorLoggingService"*)***
  %290 = load void (%"class.base::Value"*, %"class.net::NetworkErrorLoggingService"*)**, void (%"class.base::Value"*, %"class.net::NetworkErrorLoggingService"*)*** %289, align 8
  %291 = getelementptr inbounds void (%"class.base::Value"*, %"class.net::NetworkErrorLoggingService"*)*, void (%"class.base::Value"*, %"class.net::NetworkErrorLoggingService"*)** %290, i64 7
  %292 = load void (%"class.base::Value"*, %"class.net::NetworkErrorLoggingService"*)*, void (%"class.base::Value"*, %"class.net::NetworkErrorLoggingService"*)** %291, align 8
  call void %292(%"class.base::Value"* nonnull sret %22, %"class.net::NetworkErrorLoggingService"* nonnull %285) #11
  %293 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %22) #11
  br label %299

294:                                              ; preds = %271
  %295 = bitcast %"class.base::Value"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %295) #11
  %296 = bitcast %"class.base::Value"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %296, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %23, i8 zeroext 6) #11
  %297 = bitcast %"class.base::Value"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %297) #11
  call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %24, i1 zeroext false) #11
  %298 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %23, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %24) #11
  br label %299

299:                                              ; preds = %294, %287
  %300 = phi %"class.base::Value"* [ %22, %287 ], [ %24, %294 ]
  %301 = phi i8* [ %288, %287 ], [ %297, %294 ]
  %302 = phi %"class.base::Value"* [ %21, %287 ], [ %23, %294 ]
  %303 = phi i8* [ %278, %287 ], [ %295, %294 ]
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %300) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %301) #11
  br label %304

304:                                              ; preds = %299, %277
  %305 = phi %"class.base::Value"* [ %21, %277 ], [ %302, %299 ]
  %306 = phi i8* [ %278, %277 ], [ %303, %299 ]
  %307 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZL17kNetInfoReporting, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %305) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %305) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %306) #11
  %308 = bitcast %"class.base::Value"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %308) #11
  call fastcc void @_ZN3net12_GLOBAL__N_123GetActiveFieldTrialListEv(%"class.base::Value"* nonnull sret %25)
  %309 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZL19kNetInfoFieldTrials, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %25) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %308) #11
  ret void
}

declare i64 @_ZNK3net9HostCache11max_entriesEv(%"class.net::HostCache"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base5Value9GetAsListEPPNS_9ListValueE(%"class.base::Value"*, %"class.base::ListValue"**) local_unnamed_addr #1

declare void @_ZNK3net9HostCache14GetAsListValueEPN4base9ListValueEbNS0_17SerializationTypeE(%"class.net::HostCache"*, %"class.base::ListValue"*, i1 zeroext, i32) local_unnamed_addr #1

declare void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK3net18HttpNetworkSession21SocketPoolInfoToValueEv(%"class.net::HttpNetworkSession"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK3net18HttpNetworkSession26SpdySessionPoolInfoToValueEv(%"class.net::HttpNetworkSession"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare i8* @_ZN3net17NextProtoToStringENS_9NextProtoE(i32) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base9HexEncodeEPKvm(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZNK3net20HttpServerProperties32GetAlternativeServiceInfoAsValueEv(%"class.base::Value"* sret, %"class.net::HttpServerProperties"*) local_unnamed_addr #1

declare void @_ZNK3net18HttpNetworkSession15QuicInfoToValueEv(%"class.base::Value"* sret, %"class.net::HttpNetworkSession"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEOS0_(%"class.base::Value"*, i8*, i64, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN4base5ValueC1Eb(%"class.base::Value"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net35CreateNetLogEntriesForActiveObjectsERKNSt3__13setIPNS_17URLRequestContextENS0_4lessIS3_EENS0_9allocatorIS3_EEEEPNS_6NetLog18ThreadSafeObserverE(%"class.std::__1::set.696"* dereferenceable(24), %"class.net::NetLog::ThreadSafeObserver"*) local_unnamed_addr #0 {
  %3 = alloca i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, align 8
  %4 = alloca %"class.std::__1::vector.706", align 8
  %5 = alloca %"struct.net::NetLogEntry", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = bitcast %"class.std::__1::vector.706"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::vector.706", %"class.std::__1::vector.706"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.706", %"class.std::__1::vector.706"* %4, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.706", %"class.std::__1::vector.706"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.std::__1::set.696", %"class.std::__1::set.696"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::set.696", %"class.std::__1::set.696"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.net::URLRequest"*** %9 to i64*
  %17 = bitcast %"class.std::__1::vector.706"* %4 to i64*
  %18 = bitcast %"class.net::URLRequest"*** %10 to i64*
  br label %29

19:                                               ; preds = %76, %2
  %20 = phi %"class.net::URLRequest"** [ null, %2 ], [ %45, %76 ]
  %21 = phi %"class.net::URLRequest"** [ null, %2 ], [ %46, %76 ]
  %22 = bitcast i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  store i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)* @_ZN3net12_GLOBAL__N_120RequestCreatedBeforeEPKNS_10URLRequestES3_, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %3, align 8
  call void @_ZNSt3__16__sortIRPFbPKN3net10URLRequestES4_EPS4_EEvT0_S9_T_(%"class.net::URLRequest"** %21, %"class.net::URLRequest"** %20, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %23 = load %"class.net::URLRequest"**, %"class.net::URLRequest"*** %8, align 8
  %24 = load %"class.net::URLRequest"**, %"class.net::URLRequest"*** %9, align 8
  %25 = icmp eq %"class.net::URLRequest"** %23, %24
  br i1 %25, label %175, label %26

26:                                               ; preds = %19
  %27 = bitcast %"struct.net::NetLogEntry"* %5 to i8*
  %28 = bitcast %"class.net::NetLog::ThreadSafeObserver"* %1 to void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)***
  br label %183

29:                                               ; preds = %15, %76
  %30 = phi %"class.net::URLRequest"** [ null, %15 ], [ %45, %76 ]
  %31 = phi %"class.net::URLRequest"** [ null, %15 ], [ %46, %76 ]
  %32 = phi i64 [ 0, %15 ], [ %47, %76 ]
  %33 = phi %"class.net::URLRequest"** [ null, %15 ], [ %48, %76 ]
  %34 = phi %"class.std::__1::__tree_end_node"* [ %12, %15 ], [ %77, %76 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 4
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.net::URLRequestContext"**
  %37 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %36, align 8
  %38 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %37, i64 0, i32 23, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::set.249"*, %"class.std::__1::set.249"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::set.249", %"class.std::__1::set.249"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::set.249", %"class.std::__1::set.249"* %39, i64 0, i32 0, i32 1, i32 0, i32 0
  %43 = icmp eq %"class.std::__1::__tree_end_node"* %41, %42
  br i1 %43, label %44, label %79

44:                                               ; preds = %170, %29
  %45 = phi %"class.net::URLRequest"** [ %30, %29 ], [ %140, %170 ]
  %46 = phi %"class.net::URLRequest"** [ %31, %29 ], [ %141, %170 ]
  %47 = phi i64 [ %32, %29 ], [ %142, %170 ]
  %48 = phi %"class.net::URLRequest"** [ %33, %29 ], [ %140, %170 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 1, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %60

52:                                               ; preds = %44
  %53 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 2
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_end_node"**
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %53
  br i1 %59, label %76, label %67

60:                                               ; preds = %44, %60
  %61 = phi %"class.std::__1::__tree_node_base"* [ %63, %60 ], [ %50, %44 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %60

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 0, i32 0
  br label %76

67:                                               ; preds = %52, %67
  %68 = phi %"class.std::__1::__tree_end_node"** [ %71, %67 ], [ %55, %52 ]
  %69 = bitcast %"class.std::__1::__tree_end_node"** %68 to %"class.std::__1::__tree_node_base"**
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %70, i64 0, i32 2
  %72 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, %70
  br i1 %75, label %76, label %67

76:                                               ; preds = %67, %52, %65
  %77 = phi %"class.std::__1::__tree_end_node"* [ %66, %65 ], [ %56, %52 ], [ %72, %67 ]
  %78 = icmp eq %"class.std::__1::__tree_end_node"* %77, %13
  br i1 %78, label %19, label %29

79:                                               ; preds = %29, %170
  %80 = phi %"class.net::URLRequest"** [ %141, %170 ], [ %31, %29 ]
  %81 = phi i64 [ %142, %170 ], [ %32, %29 ]
  %82 = phi %"class.net::URLRequest"** [ %140, %170 ], [ %33, %29 ]
  %83 = phi %"class.std::__1::__tree_end_node"* [ %171, %170 ], [ %41, %29 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 4
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = load %"class.net::URLRequest"**, %"class.net::URLRequest"*** %10, align 8
  %88 = icmp eq %"class.net::URLRequest"** %82, %87
  br i1 %88, label %93, label %89

89:                                               ; preds = %79
  %90 = bitcast %"class.net::URLRequest"** %82 to i64*
  store i64 %86, i64* %90, align 8
  %91 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %82, i64 1
  %92 = ptrtoint %"class.net::URLRequest"** %91 to i64
  store i64 %92, i64* %16, align 8
  br label %139

93:                                               ; preds = %79
  %94 = ptrtoint %"class.net::URLRequest"** %87 to i64
  %95 = load i64, i64* %17, align 8
  %96 = sub i64 %94, %95
  %97 = ashr exact i64 %96, 3
  %98 = add nsw i64 %97, 1
  %99 = icmp ugt i64 %98, 2305843009213693951
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = bitcast %"class.std::__1::vector.706"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %101) #13
  unreachable

102:                                              ; preds = %93
  %103 = icmp ult i64 %97, 1152921504606846975
  br i1 %103, label %104, label %112

104:                                              ; preds = %102
  %105 = ashr exact i64 %96, 2
  %106 = icmp ult i64 %105, %98
  %107 = select i1 %106, i64 %98, i64 %105
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %104
  %110 = icmp ugt i64 %107, 2305843009213693951
  br i1 %110, label %111, label %112

111:                                              ; preds = %109
  tail call void @abort() #13
  unreachable

112:                                              ; preds = %109, %102
  %113 = phi i64 [ %107, %109 ], [ 2305843009213693951, %102 ]
  %114 = shl i64 %113, 3
  %115 = tail call i8* @_Znwm(i64 %114) #12
  %116 = bitcast i8* %115 to %"class.net::URLRequest"**
  br label %117

117:                                              ; preds = %112, %104
  %118 = phi i64 [ %113, %112 ], [ 0, %104 ]
  %119 = phi %"class.net::URLRequest"** [ %116, %112 ], [ null, %104 ]
  %120 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %119, i64 %97
  %121 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %119, i64 %118
  %122 = ptrtoint %"class.net::URLRequest"** %121 to i64
  %123 = bitcast %"class.net::URLRequest"** %120 to i64*
  store i64 %86, i64* %123, align 8
  %124 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %120, i64 1
  %125 = ptrtoint %"class.net::URLRequest"** %124 to i64
  %126 = sub i64 %81, %95
  %127 = ashr exact i64 %126, 3
  %128 = sub nsw i64 0, %127
  %129 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %120, i64 %128
  %130 = ptrtoint %"class.net::URLRequest"** %129 to i64
  %131 = icmp sgt i64 %126, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %117
  %133 = bitcast %"class.net::URLRequest"** %129 to i8*
  %134 = inttoptr i64 %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 %126, i1 false) #11
  br label %135

135:                                              ; preds = %132, %117
  store i64 %130, i64* %17, align 8
  store i64 %125, i64* %16, align 8
  store i64 %122, i64* %18, align 8
  %136 = icmp eq i64 %95, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = inttoptr i64 %95 to i8*
  tail call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %89, %135, %137
  %140 = phi %"class.net::URLRequest"** [ %91, %89 ], [ %124, %135 ], [ %124, %137 ]
  %141 = phi %"class.net::URLRequest"** [ %80, %89 ], [ %129, %135 ], [ %129, %137 ]
  %142 = phi i64 [ %92, %89 ], [ %125, %135 ], [ %125, %137 ]
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 1, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, null
  br i1 %145, label %146, label %154

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_node_base"*
  %148 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 2
  %149 = bitcast %"class.std::__1::__tree_end_node"* %148 to %"class.std::__1::__tree_end_node"**
  %150 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %150, i64 0, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, %147
  br i1 %153, label %170, label %161

154:                                              ; preds = %139, %154
  %155 = phi %"class.std::__1::__tree_node_base"* [ %157, %154 ], [ %144, %139 ]
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node_base"* %157, null
  br i1 %158, label %159, label %154

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 0
  br label %170

161:                                              ; preds = %146, %161
  %162 = phi %"class.std::__1::__tree_end_node"** [ %165, %161 ], [ %149, %146 ]
  %163 = bitcast %"class.std::__1::__tree_end_node"** %162 to %"class.std::__1::__tree_node_base"**
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %164, i64 0, i32 2
  %166 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %166, i64 0, i32 0
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node_base"* %168, %164
  br i1 %169, label %170, label %161

170:                                              ; preds = %161, %146, %159
  %171 = phi %"class.std::__1::__tree_end_node"* [ %160, %159 ], [ %150, %146 ], [ %166, %161 ]
  %172 = icmp eq %"class.std::__1::__tree_end_node"* %171, %42
  br i1 %172, label %44, label %79

173:                                              ; preds = %183
  %174 = load %"class.net::URLRequest"**, %"class.net::URLRequest"*** %8, align 8
  br label %175

175:                                              ; preds = %173, %19
  %176 = phi %"class.net::URLRequest"** [ %174, %173 ], [ %23, %19 ]
  %177 = icmp eq %"class.net::URLRequest"** %176, null
  br i1 %177, label %182, label %178

178:                                              ; preds = %175
  %179 = ptrtoint %"class.net::URLRequest"** %176 to i64
  %180 = bitcast %"class.net::URLRequest"*** %9 to i64*
  store i64 %179, i64* %180, align 8
  %181 = bitcast %"class.net::URLRequest"** %176 to i8*
  call void @_ZdlPv(i8* %181) #12
  br label %182

182:                                              ; preds = %175, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void

183:                                              ; preds = %26, %183
  %184 = phi %"class.net::URLRequest"** [ %23, %26 ], [ %195, %183 ]
  %185 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %184, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 72, i1 false)
  %186 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %185, i64 0, i32 2, i32 0
  %187 = bitcast %"struct.net::NetLogSource"* %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %185, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %185, i64 0, i32 39, i32 0, i32 0
  %192 = load i64, i64* %191, align 8
  call void @_ZNK3net10URLRequest15GetStateAsValueEv(%"class.base::Value"* nonnull sret %6, %"class.net::URLRequest"* %185) #11
  call void @_ZN3net11NetLogEntryC1ENS_15NetLogEventTypeENS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksENS4_5ValueE(%"struct.net::NetLogEntry"* nonnull %5, i32 2, i64 %188, i64 %190, i32 1, i64 %192, %"class.base::Value"* nonnull %6) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #11
  %193 = load void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)**, void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)*** %28, align 8
  %194 = load void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)*, void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)** %193, align 8
  call void %194(%"class.net::NetLog::ThreadSafeObserver"* %1, %"struct.net::NetLogEntry"* nonnull dereferenceable(72) %5) #11
  call void @_ZN3net11NetLogEntryD1Ev(%"struct.net::NetLogEntry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %27) #11
  %195 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %184, i64 1
  %196 = icmp eq %"class.net::URLRequest"** %195, %24
  br i1 %196, label %173, label %183
}

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN3net12_GLOBAL__N_120RequestCreatedBeforeEPKNS_10URLRequestES3_(%"class.net::URLRequest"* nocapture readonly, %"class.net::URLRequest"* nocapture readonly) #4 {
  %3 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %0, i64 0, i32 39, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %1, i64 0, i32 39, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = icmp sgt i64 %4, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %1, i64 0, i32 2, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %12, %14
  br label %16

16:                                               ; preds = %8, %2, %10
  %17 = phi i1 [ %15, %10 ], [ true, %2 ], [ false, %8 ]
  ret i1 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK3net10URLRequest15GetStateAsValueEv(%"class.base::Value"* sret, %"class.net::URLRequest"*) local_unnamed_addr #1

declare void @_ZN3net11NetLogEntryC1ENS_15NetLogEventTypeENS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksENS4_5ValueE(%"struct.net::NetLogEntry"*, i32, i64, i64, i32, i64, %"class.base::Value"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net11NetLogEntryD1Ev(%"struct.net::NetLogEntry"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #6

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN4base14FieldTrialList25GetActiveFieldTrialGroupsEPNSt3__16vectorINS_10FieldTrial11ActiveGroupENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.869"*) local_unnamed_addr #1

declare void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare %"class.disk_cache::Backend"* @_ZNK3net9HttpCache17GetCurrentBackendEv(%"class.net::HttpCache"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPKN3net10URLRequestES4_EPS4_EEvT0_S9_T_(%"class.net::URLRequest"**, %"class.net::URLRequest"**, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %264, %3
  %5 = phi %"class.net::URLRequest"** [ %1, %3 ], [ %243, %264 ]
  %6 = phi %"class.net::URLRequest"** [ %0, %3 ], [ %17, %264 ]
  %7 = ptrtoint %"class.net::URLRequest"** %5 to i64
  %8 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, i64 -1
  %9 = bitcast %"class.net::URLRequest"** %8 to i64*
  %10 = bitcast %"class.net::URLRequest"** %8 to i64*
  %11 = bitcast %"class.net::URLRequest"** %8 to i64*
  %12 = bitcast %"class.net::URLRequest"** %8 to i64*
  %13 = ptrtoint %"class.net::URLRequest"** %5 to i64
  br label %14

14:                                               ; preds = %273, %4
  %15 = phi %"class.net::URLRequest"** [ %6, %4 ], [ %274, %273 ]
  br label %16

16:                                               ; preds = %187, %14
  %17 = phi %"class.net::URLRequest"** [ %15, %14 ], [ %174, %187 ]
  %18 = ptrtoint %"class.net::URLRequest"** %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %86 [
    i64 0, label %277
    i64 1, label %277
    i64 2, label %21
    i64 3, label %32
    i64 4, label %75
    i64 5, label %80
  ]

21:                                               ; preds = %16
  %22 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %23 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, i64 -1
  %24 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %23, align 8
  %25 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %26 = tail call zeroext i1 %22(%"class.net::URLRequest"* %24, %"class.net::URLRequest"* %25) #11
  br i1 %26, label %27, label %277

27:                                               ; preds = %21
  %28 = bitcast %"class.net::URLRequest"** %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.net::URLRequest"** %23 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  br label %277

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 1
  %34 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, i64 -1
  %35 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %36 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %33, align 8
  %37 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %38 = tail call zeroext i1 %35(%"class.net::URLRequest"* %36, %"class.net::URLRequest"* %37) #11
  %39 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %40 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %34, align 8
  %41 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %33, align 8
  %42 = tail call zeroext i1 %39(%"class.net::URLRequest"* %40, %"class.net::URLRequest"* %41) #11
  br i1 %38, label %58, label %43

43:                                               ; preds = %32
  br i1 %42, label %44, label %277

44:                                               ; preds = %43
  %45 = bitcast %"class.net::URLRequest"** %33 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.net::URLRequest"** %34 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %50 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %33, align 8
  %51 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %52 = tail call zeroext i1 %49(%"class.net::URLRequest"* %50, %"class.net::URLRequest"* %51) #11
  br i1 %52, label %53, label %277

53:                                               ; preds = %44
  %54 = bitcast %"class.net::URLRequest"** %17 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = shufflevector <2 x i64> %55, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %57 = bitcast %"class.net::URLRequest"** %17 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 8
  br label %277

58:                                               ; preds = %32
  %59 = bitcast %"class.net::URLRequest"** %17 to i64*
  %60 = load i64, i64* %59, align 8
  br i1 %42, label %61, label %64

61:                                               ; preds = %58
  %62 = bitcast %"class.net::URLRequest"** %34 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %59, align 8
  store i64 %60, i64* %62, align 8
  br label %277

64:                                               ; preds = %58
  %65 = bitcast %"class.net::URLRequest"** %33 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %59, align 8
  store i64 %60, i64* %65, align 8
  %67 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %68 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %34, align 8
  %69 = inttoptr i64 %60 to %"class.net::URLRequest"*
  %70 = tail call zeroext i1 %67(%"class.net::URLRequest"* %68, %"class.net::URLRequest"* %69) #11
  br i1 %70, label %71, label %277

71:                                               ; preds = %64
  %72 = load i64, i64* %65, align 8
  %73 = bitcast %"class.net::URLRequest"** %34 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %65, align 8
  store i64 %72, i64* %73, align 8
  br label %277

75:                                               ; preds = %16
  %76 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 1
  %77 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 2
  %78 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_T_(%"class.net::URLRequest"** %17, %"class.net::URLRequest"** %76, %"class.net::URLRequest"** %77, %"class.net::URLRequest"** %78, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  br label %277

80:                                               ; preds = %16
  %81 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 1
  %82 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 2
  %83 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 3
  %84 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, i64 -1
  %85 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"class.net::URLRequest"** %17, %"class.net::URLRequest"** %81, %"class.net::URLRequest"** %82, %"class.net::URLRequest"** %83, %"class.net::URLRequest"** %84, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  br label %277

86:                                               ; preds = %16
  %87 = icmp slt i64 %19, 248
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbPKN3net10URLRequestES4_EPS4_EEvT0_S9_T_(%"class.net::URLRequest"** %17, %"class.net::URLRequest"** %5, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  br label %277

89:                                               ; preds = %86
  %90 = icmp sgt i64 %19, 7992
  %91 = sdiv i64 %20, 2
  %92 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 %91
  br i1 %90, label %93, label %98

93:                                               ; preds = %89
  %94 = sdiv i64 %20, 4
  %95 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 %94
  %96 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %92, i64 %94
  %97 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"class.net::URLRequest"** %17, %"class.net::URLRequest"** %95, %"class.net::URLRequest"** %92, %"class.net::URLRequest"** %96, %"class.net::URLRequest"** %8, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  br label %135

98:                                               ; preds = %89
  %99 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %100 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %92, align 8
  %101 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %102 = tail call zeroext i1 %99(%"class.net::URLRequest"* %100, %"class.net::URLRequest"* %101) #11
  %103 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %104 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %8, align 8
  %105 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %92, align 8
  %106 = tail call zeroext i1 %103(%"class.net::URLRequest"* %104, %"class.net::URLRequest"* %105) #11
  br i1 %102, label %120, label %107

107:                                              ; preds = %98
  br i1 %106, label %108, label %135

108:                                              ; preds = %107
  %109 = bitcast %"class.net::URLRequest"** %92 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %9, align 8
  store i64 %111, i64* %109, align 8
  store i64 %110, i64* %9, align 8
  %112 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %113 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %92, align 8
  %114 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %115 = tail call zeroext i1 %112(%"class.net::URLRequest"* %113, %"class.net::URLRequest"* %114) #11
  br i1 %115, label %116, label %135

116:                                              ; preds = %108
  %117 = bitcast %"class.net::URLRequest"** %17 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %109, align 8
  store i64 %119, i64* %117, align 8
  store i64 %118, i64* %109, align 8
  br label %135

120:                                              ; preds = %98
  %121 = bitcast %"class.net::URLRequest"** %17 to i64*
  %122 = load i64, i64* %121, align 8
  br i1 %106, label %123, label %125

123:                                              ; preds = %120
  %124 = load i64, i64* %11, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %11, align 8
  br label %135

125:                                              ; preds = %120
  %126 = bitcast %"class.net::URLRequest"** %92 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %121, align 8
  store i64 %122, i64* %126, align 8
  %128 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %129 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %8, align 8
  %130 = inttoptr i64 %122 to %"class.net::URLRequest"*
  %131 = tail call zeroext i1 %128(%"class.net::URLRequest"* %129, %"class.net::URLRequest"* %130) #11
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = load i64, i64* %126, align 8
  %134 = load i64, i64* %10, align 8
  store i64 %134, i64* %126, align 8
  store i64 %133, i64* %10, align 8
  br label %135

135:                                              ; preds = %132, %125, %123, %116, %108, %107, %93
  %136 = phi i32 [ %97, %93 ], [ 1, %123 ], [ 0, %107 ], [ 2, %116 ], [ 1, %108 ], [ 2, %132 ], [ 1, %125 ]
  %137 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %138 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %139 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %92, align 8
  %140 = tail call zeroext i1 %137(%"class.net::URLRequest"* %138, %"class.net::URLRequest"* %139) #11
  br i1 %140, label %205, label %141

141:                                              ; preds = %135, %194
  %142 = phi %"class.net::URLRequest"** [ %143, %194 ], [ %8, %135 ]
  %143 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %142, i64 -1
  %144 = icmp eq %"class.net::URLRequest"** %17, %143
  br i1 %144, label %145, label %194

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 1
  %147 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %148 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %149 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %8, align 8
  %150 = tail call zeroext i1 %147(%"class.net::URLRequest"* %148, %"class.net::URLRequest"* %149) #11
  br i1 %150, label %167, label %151

151:                                              ; preds = %145
  %152 = icmp eq %"class.net::URLRequest"** %146, %8
  br i1 %152, label %277, label %153

153:                                              ; preds = %151, %164
  %154 = phi %"class.net::URLRequest"** [ %165, %164 ], [ %146, %151 ]
  %155 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %156 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %157 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %154, align 8
  %158 = tail call zeroext i1 %155(%"class.net::URLRequest"* %156, %"class.net::URLRequest"* %157) #11
  br i1 %158, label %159, label %164

159:                                              ; preds = %153
  %160 = bitcast %"class.net::URLRequest"** %154 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %12, align 8
  store i64 %162, i64* %160, align 8
  store i64 %161, i64* %12, align 8
  %163 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %154, i64 1
  br label %167

164:                                              ; preds = %153
  %165 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %154, i64 1
  %166 = icmp eq %"class.net::URLRequest"** %165, %8
  br i1 %166, label %277, label %153

167:                                              ; preds = %159, %145
  %168 = phi %"class.net::URLRequest"** [ %146, %145 ], [ %163, %159 ]
  %169 = icmp eq %"class.net::URLRequest"** %168, %8
  br i1 %169, label %277, label %170

170:                                              ; preds = %167, %189
  %171 = phi %"class.net::URLRequest"** [ %179, %189 ], [ %168, %167 ]
  %172 = phi %"class.net::URLRequest"** [ %184, %189 ], [ %8, %167 ]
  br label %173

173:                                              ; preds = %173, %170
  %174 = phi %"class.net::URLRequest"** [ %171, %170 ], [ %179, %173 ]
  %175 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %176 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %177 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %174, align 8
  %178 = tail call zeroext i1 %175(%"class.net::URLRequest"* %176, %"class.net::URLRequest"* %177) #11
  %179 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %174, i64 1
  br i1 %178, label %180, label %173

180:                                              ; preds = %173, %180
  %181 = phi %"class.net::URLRequest"** [ %184, %180 ], [ %172, %173 ]
  %182 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %183 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, align 8
  %184 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %181, i64 -1
  %185 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %184, align 8
  %186 = tail call zeroext i1 %182(%"class.net::URLRequest"* %183, %"class.net::URLRequest"* %185) #11
  br i1 %186, label %180, label %187

187:                                              ; preds = %180
  %188 = icmp ult %"class.net::URLRequest"** %174, %184
  br i1 %188, label %189, label %16

189:                                              ; preds = %187
  %190 = bitcast %"class.net::URLRequest"** %174 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.net::URLRequest"** %184 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %190, align 8
  store i64 %191, i64* %192, align 8
  br label %170

194:                                              ; preds = %141
  %195 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %196 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %143, align 8
  %197 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %92, align 8
  %198 = tail call zeroext i1 %195(%"class.net::URLRequest"* %196, %"class.net::URLRequest"* %197) #11
  br i1 %198, label %199, label %141

199:                                              ; preds = %194
  %200 = bitcast %"class.net::URLRequest"** %17 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.net::URLRequest"** %143 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %200, align 8
  store i64 %201, i64* %202, align 8
  %204 = add i32 %136, 1
  br label %205

205:                                              ; preds = %135, %199
  %206 = phi i32 [ %204, %199 ], [ %136, %135 ]
  %207 = phi %"class.net::URLRequest"** [ %143, %199 ], [ %8, %135 ]
  %208 = ptrtoint %"class.net::URLRequest"** %17 to i64
  %209 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %17, i64 1
  %210 = icmp ult %"class.net::URLRequest"** %209, %207
  br i1 %210, label %211, label %240

211:                                              ; preds = %205, %232
  %212 = phi %"class.net::URLRequest"** [ %239, %232 ], [ %92, %205 ]
  %213 = phi i32 [ %237, %232 ], [ %206, %205 ]
  %214 = phi %"class.net::URLRequest"** [ %222, %232 ], [ %209, %205 ]
  %215 = phi %"class.net::URLRequest"** [ %226, %232 ], [ %207, %205 ]
  br label %216

216:                                              ; preds = %216, %211
  %217 = phi %"class.net::URLRequest"** [ %214, %211 ], [ %222, %216 ]
  %218 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %219 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %217, align 8
  %220 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %212, align 8
  %221 = tail call zeroext i1 %218(%"class.net::URLRequest"* %219, %"class.net::URLRequest"* %220) #11
  %222 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %217, i64 1
  br i1 %221, label %216, label %223

223:                                              ; preds = %216, %223
  %224 = phi %"class.net::URLRequest"** [ %226, %223 ], [ %215, %216 ]
  %225 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %226 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %224, i64 -1
  %227 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %226, align 8
  %228 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %212, align 8
  %229 = tail call zeroext i1 %225(%"class.net::URLRequest"* %227, %"class.net::URLRequest"* %228) #11
  br i1 %229, label %230, label %223

230:                                              ; preds = %223
  %231 = icmp ugt %"class.net::URLRequest"** %217, %226
  br i1 %231, label %240, label %232

232:                                              ; preds = %230
  %233 = bitcast %"class.net::URLRequest"** %217 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.net::URLRequest"** %226 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %233, align 8
  store i64 %234, i64* %235, align 8
  %237 = add i32 %213, 1
  %238 = icmp eq %"class.net::URLRequest"** %212, %217
  %239 = select i1 %238, %"class.net::URLRequest"** %226, %"class.net::URLRequest"** %212
  br label %211

240:                                              ; preds = %230, %205
  %241 = phi %"class.net::URLRequest"** [ %92, %205 ], [ %212, %230 ]
  %242 = phi i32 [ %206, %205 ], [ %213, %230 ]
  %243 = phi %"class.net::URLRequest"** [ %209, %205 ], [ %217, %230 ]
  %244 = icmp eq %"class.net::URLRequest"** %243, %241
  br i1 %244, label %256, label %245

245:                                              ; preds = %240
  %246 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %247 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %241, align 8
  %248 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %243, align 8
  %249 = tail call zeroext i1 %246(%"class.net::URLRequest"* %247, %"class.net::URLRequest"* %248) #11
  br i1 %249, label %250, label %256

250:                                              ; preds = %245
  %251 = bitcast %"class.net::URLRequest"** %243 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.net::URLRequest"** %241 to i64*
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %251, align 8
  store i64 %252, i64* %253, align 8
  %255 = add i32 %242, 1
  br label %256

256:                                              ; preds = %240, %250, %245
  %257 = phi i32 [ %255, %250 ], [ %242, %245 ], [ %242, %240 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %256
  %260 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN3net10URLRequestES4_EPS4_EEbT0_S9_T_(%"class.net::URLRequest"** %17, %"class.net::URLRequest"** %243, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  %261 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %243, i64 1
  %262 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN3net10URLRequestES4_EPS4_EEbT0_S9_T_(%"class.net::URLRequest"** %261, %"class.net::URLRequest"** %5, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  br i1 %260, label %277, label %264

264:                                              ; preds = %263, %275
  br label %4

265:                                              ; preds = %259
  br i1 %260, label %273, label %266

266:                                              ; preds = %265, %256
  %267 = ptrtoint %"class.net::URLRequest"** %243 to i64
  %268 = sub i64 %267, %208
  %269 = sub i64 %13, %267
  %270 = icmp slt i64 %268, %269
  br i1 %270, label %271, label %275

271:                                              ; preds = %266
  tail call void @_ZNSt3__16__sortIRPFbPKN3net10URLRequestES4_EPS4_EEvT0_S9_T_(%"class.net::URLRequest"** %17, %"class.net::URLRequest"** %243, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  %272 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %243, i64 1
  br label %273

273:                                              ; preds = %271, %265
  %274 = phi %"class.net::URLRequest"** [ %261, %265 ], [ %272, %271 ]
  br label %14

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %243, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPKN3net10URLRequestES4_EPS4_EEvT0_S9_T_(%"class.net::URLRequest"** %276, %"class.net::URLRequest"** %5, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  br label %264

277:                                              ; preds = %263, %167, %16, %16, %151, %164, %71, %64, %61, %53, %44, %43, %21, %27, %75, %80, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_T_(%"class.net::URLRequest"**, %"class.net::URLRequest"**, %"class.net::URLRequest"**, %"class.net::URLRequest"**, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %4, align 8
  %7 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, align 8
  %8 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.net::URLRequest"* %7, %"class.net::URLRequest"* %8) #11
  %10 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %4, align 8
  %11 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %2, align 8
  %12 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, align 8
  %13 = tail call zeroext i1 %10(%"class.net::URLRequest"* %11, %"class.net::URLRequest"* %12) #11
  br i1 %9, label %28, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %45

15:                                               ; preds = %14
  %16 = bitcast %"class.net::URLRequest"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.net::URLRequest"** %2 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %4, align 8
  %21 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, align 8
  %22 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.net::URLRequest"* %21, %"class.net::URLRequest"* %22) #11
  br i1 %23, label %24, label %45

24:                                               ; preds = %15
  %25 = bitcast %"class.net::URLRequest"** %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %16, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %16, align 8
  br label %45

28:                                               ; preds = %5
  %29 = bitcast %"class.net::URLRequest"** %0 to i64*
  %30 = load i64, i64* %29, align 8
  br i1 %13, label %31, label %34

31:                                               ; preds = %28
  %32 = bitcast %"class.net::URLRequest"** %2 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %29, align 8
  store i64 %30, i64* %32, align 8
  br label %45

34:                                               ; preds = %28
  %35 = bitcast %"class.net::URLRequest"** %1 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %30, i64* %35, align 8
  %37 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %4, align 8
  %38 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %2, align 8
  %39 = inttoptr i64 %30 to %"class.net::URLRequest"*
  %40 = tail call zeroext i1 %37(%"class.net::URLRequest"* %38, %"class.net::URLRequest"* %39) #11
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = load i64, i64* %35, align 8
  %43 = bitcast %"class.net::URLRequest"** %2 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %35, align 8
  store i64 %42, i64* %43, align 8
  br label %45

45:                                               ; preds = %14, %15, %24, %31, %34, %41
  %46 = phi i32 [ 1, %31 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %41 ], [ 1, %34 ]
  %47 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %4, align 8
  %48 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %3, align 8
  %49 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %2, align 8
  %50 = tail call zeroext i1 %47(%"class.net::URLRequest"* %48, %"class.net::URLRequest"* %49) #11
  br i1 %50, label %51, label %75

51:                                               ; preds = %45
  %52 = bitcast %"class.net::URLRequest"** %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.net::URLRequest"** %3 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  store i64 %53, i64* %54, align 8
  %56 = add nuw nsw i32 %46, 1
  %57 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %4, align 8
  %58 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %2, align 8
  %59 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, align 8
  %60 = tail call zeroext i1 %57(%"class.net::URLRequest"* %58, %"class.net::URLRequest"* %59) #11
  br i1 %60, label %61, label %75

61:                                               ; preds = %51
  %62 = bitcast %"class.net::URLRequest"** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %52, align 8
  store i64 %64, i64* %62, align 8
  store i64 %63, i64* %52, align 8
  %65 = add nuw nsw i32 %46, 2
  %66 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %4, align 8
  %67 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, align 8
  %68 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %69 = tail call zeroext i1 %66(%"class.net::URLRequest"* %67, %"class.net::URLRequest"* %68) #11
  br i1 %69, label %70, label %75

70:                                               ; preds = %61
  %71 = bitcast %"class.net::URLRequest"** %0 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %62, align 8
  store i64 %73, i64* %71, align 8
  store i64 %72, i64* %62, align 8
  %74 = add nuw nsw i32 %46, 3
  br label %75

75:                                               ; preds = %51, %70, %61, %45
  %76 = phi i32 [ %74, %70 ], [ %65, %61 ], [ %56, %51 ], [ %46, %45 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"class.net::URLRequest"**, %"class.net::URLRequest"**, %"class.net::URLRequest"**, %"class.net::URLRequest"**, %"class.net::URLRequest"**, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_T_(%"class.net::URLRequest"** %0, %"class.net::URLRequest"** %1, %"class.net::URLRequest"** %2, %"class.net::URLRequest"** %3, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %5, align 8
  %9 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %4, align 8
  %10 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %3, align 8
  %11 = tail call zeroext i1 %8(%"class.net::URLRequest"* %9, %"class.net::URLRequest"* %10) #11
  br i1 %11, label %12, label %45

12:                                               ; preds = %6
  %13 = bitcast %"class.net::URLRequest"** %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.net::URLRequest"** %4 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = add i32 %7, 1
  %18 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %5, align 8
  %19 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %3, align 8
  %20 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %2, align 8
  %21 = tail call zeroext i1 %18(%"class.net::URLRequest"* %19, %"class.net::URLRequest"* %20) #11
  br i1 %21, label %22, label %45

22:                                               ; preds = %12
  %23 = bitcast %"class.net::URLRequest"** %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %13, align 8
  store i64 %25, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  %26 = add i32 %7, 2
  %27 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %5, align 8
  %28 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %2, align 8
  %29 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, align 8
  %30 = tail call zeroext i1 %27(%"class.net::URLRequest"* %28, %"class.net::URLRequest"* %29) #11
  br i1 %30, label %31, label %45

31:                                               ; preds = %22
  %32 = bitcast %"class.net::URLRequest"** %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %23, align 8
  store i64 %34, i64* %32, align 8
  store i64 %33, i64* %23, align 8
  %35 = add i32 %7, 3
  %36 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %5, align 8
  %37 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, align 8
  %38 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.net::URLRequest"* %37, %"class.net::URLRequest"* %38) #11
  br i1 %39, label %40, label %45

40:                                               ; preds = %31
  %41 = bitcast %"class.net::URLRequest"** %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %32, align 8
  store i64 %43, i64* %41, align 8
  store i64 %42, i64* %32, align 8
  %44 = add i32 %7, 4
  br label %45

45:                                               ; preds = %12, %31, %40, %22, %6
  %46 = phi i32 [ %44, %40 ], [ %35, %31 ], [ %26, %22 ], [ %17, %12 ], [ %7, %6 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbPKN3net10URLRequestES4_EPS4_EEvT0_S9_T_(%"class.net::URLRequest"**, %"class.net::URLRequest"**, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 2
  %5 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 1
  %6 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %7 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, align 8
  %8 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.net::URLRequest"* %7, %"class.net::URLRequest"* %8) #11
  %10 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %11 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %4, align 8
  %12 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, align 8
  %13 = tail call zeroext i1 %10(%"class.net::URLRequest"* %11, %"class.net::URLRequest"* %12) #11
  br i1 %9, label %29, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %47

15:                                               ; preds = %14
  %16 = bitcast %"class.net::URLRequest"** %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.net::URLRequest"** %4 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %21 = inttoptr i64 %19 to %"class.net::URLRequest"*
  %22 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.net::URLRequest"* %21, %"class.net::URLRequest"* %22) #11
  br i1 %23, label %24, label %47

24:                                               ; preds = %15
  %25 = bitcast %"class.net::URLRequest"** %0 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = shufflevector <2 x i64> %26, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %28 = bitcast %"class.net::URLRequest"** %0 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  br label %47

29:                                               ; preds = %3
  %30 = bitcast %"class.net::URLRequest"** %0 to i64*
  %31 = load i64, i64* %30, align 8
  br i1 %13, label %32, label %35

32:                                               ; preds = %29
  %33 = bitcast %"class.net::URLRequest"** %4 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %30, align 8
  store i64 %31, i64* %33, align 8
  br label %47

35:                                               ; preds = %29
  %36 = bitcast %"class.net::URLRequest"** %5 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %30, align 8
  store i64 %31, i64* %36, align 8
  %38 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %39 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %4, align 8
  %40 = inttoptr i64 %31 to %"class.net::URLRequest"*
  %41 = tail call zeroext i1 %38(%"class.net::URLRequest"* %39, %"class.net::URLRequest"* %40) #11
  br i1 %41, label %42, label %47

42:                                               ; preds = %35
  %43 = bitcast %"class.net::URLRequest"** %5 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = shufflevector <2 x i64> %44, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %46 = bitcast %"class.net::URLRequest"** %5 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  br label %47

47:                                               ; preds = %14, %15, %24, %32, %35, %42
  %48 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 3
  %49 = icmp eq %"class.net::URLRequest"** %48, %1
  br i1 %49, label %50, label %51

50:                                               ; preds = %77, %47
  ret void

51:                                               ; preds = %47, %77
  %52 = phi %"class.net::URLRequest"** [ %78, %77 ], [ %48, %47 ]
  %53 = phi %"class.net::URLRequest"** [ %52, %77 ], [ %4, %47 ]
  %54 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %55 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %52, align 8
  %56 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %53, align 8
  %57 = tail call zeroext i1 %54(%"class.net::URLRequest"* %55, %"class.net::URLRequest"* %56) #11
  br i1 %57, label %58, label %77

58:                                               ; preds = %51
  %59 = bitcast %"class.net::URLRequest"** %52 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"class.net::URLRequest"*
  br label %62

62:                                               ; preds = %69, %58
  %63 = phi %"class.net::URLRequest"** [ %52, %58 ], [ %64, %69 ]
  %64 = phi %"class.net::URLRequest"** [ %53, %58 ], [ %71, %69 ]
  %65 = bitcast %"class.net::URLRequest"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.net::URLRequest"** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = icmp eq %"class.net::URLRequest"** %64, %0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %71 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %64, i64 -1
  %72 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %71, align 8
  %73 = tail call zeroext i1 %70(%"class.net::URLRequest"* %61, %"class.net::URLRequest"* %72) #11
  br i1 %73, label %62, label %74

74:                                               ; preds = %62, %69
  %75 = phi %"class.net::URLRequest"** [ %64, %69 ], [ %0, %62 ]
  %76 = bitcast %"class.net::URLRequest"** %75 to i64*
  store i64 %60, i64* %76, align 8
  br label %77

77:                                               ; preds = %74, %51
  %78 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %52, i64 1
  %79 = icmp eq %"class.net::URLRequest"** %78, %1
  br i1 %79, label %50, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN3net10URLRequestES4_EPS4_EEbT0_S9_T_(%"class.net::URLRequest"**, %"class.net::URLRequest"**, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.net::URLRequest"** %1 to i64
  %5 = ptrtoint %"class.net::URLRequest"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %73 [
    i64 0, label %156
    i64 1, label %156
    i64 2, label %8
    i64 3, label %19
    i64 4, label %62
    i64 5, label %67
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %10 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, i64 -1
  %11 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %10, align 8
  %12 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %13 = tail call zeroext i1 %9(%"class.net::URLRequest"* %11, %"class.net::URLRequest"* %12) #11
  br i1 %13, label %14, label %156

14:                                               ; preds = %8
  %15 = bitcast %"class.net::URLRequest"** %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.net::URLRequest"** %10 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  br label %156

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 1
  %21 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, i64 -1
  %22 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %23 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %20, align 8
  %24 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %25 = tail call zeroext i1 %22(%"class.net::URLRequest"* %23, %"class.net::URLRequest"* %24) #11
  %26 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %27 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %21, align 8
  %28 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %20, align 8
  %29 = tail call zeroext i1 %26(%"class.net::URLRequest"* %27, %"class.net::URLRequest"* %28) #11
  br i1 %25, label %45, label %30

30:                                               ; preds = %19
  br i1 %29, label %31, label %156

31:                                               ; preds = %30
  %32 = bitcast %"class.net::URLRequest"** %20 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.net::URLRequest"** %21 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %37 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %20, align 8
  %38 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.net::URLRequest"* %37, %"class.net::URLRequest"* %38) #11
  br i1 %39, label %40, label %156

40:                                               ; preds = %31
  %41 = bitcast %"class.net::URLRequest"** %0 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = shufflevector <2 x i64> %42, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %44 = bitcast %"class.net::URLRequest"** %0 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  br label %156

45:                                               ; preds = %19
  %46 = bitcast %"class.net::URLRequest"** %0 to i64*
  %47 = load i64, i64* %46, align 8
  br i1 %29, label %48, label %51

48:                                               ; preds = %45
  %49 = bitcast %"class.net::URLRequest"** %21 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  store i64 %47, i64* %49, align 8
  br label %156

51:                                               ; preds = %45
  %52 = bitcast %"class.net::URLRequest"** %20 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %46, align 8
  store i64 %47, i64* %52, align 8
  %54 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %55 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %21, align 8
  %56 = inttoptr i64 %47 to %"class.net::URLRequest"*
  %57 = tail call zeroext i1 %54(%"class.net::URLRequest"* %55, %"class.net::URLRequest"* %56) #11
  br i1 %57, label %58, label %156

58:                                               ; preds = %51
  %59 = load i64, i64* %52, align 8
  %60 = bitcast %"class.net::URLRequest"** %21 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %52, align 8
  store i64 %59, i64* %60, align 8
  br label %156

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 1
  %64 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 2
  %65 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_T_(%"class.net::URLRequest"** %0, %"class.net::URLRequest"** %63, %"class.net::URLRequest"** %64, %"class.net::URLRequest"** %65, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  br label %156

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 1
  %69 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 2
  %70 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 3
  %71 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN3net10URLRequestES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"class.net::URLRequest"** %0, %"class.net::URLRequest"** %68, %"class.net::URLRequest"** %69, %"class.net::URLRequest"** %70, %"class.net::URLRequest"** %71, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** dereferenceable(8) %2)
  br label %156

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 2
  %75 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 1
  %76 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %77 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %75, align 8
  %78 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %79 = tail call zeroext i1 %76(%"class.net::URLRequest"* %77, %"class.net::URLRequest"* %78) #11
  %80 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %81 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %74, align 8
  %82 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %75, align 8
  %83 = tail call zeroext i1 %80(%"class.net::URLRequest"* %81, %"class.net::URLRequest"* %82) #11
  br i1 %79, label %99, label %84

84:                                               ; preds = %73
  br i1 %83, label %85, label %117

85:                                               ; preds = %84
  %86 = bitcast %"class.net::URLRequest"** %75 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.net::URLRequest"** %74 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  store i64 %87, i64* %88, align 8
  %90 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %91 = inttoptr i64 %89 to %"class.net::URLRequest"*
  %92 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, align 8
  %93 = tail call zeroext i1 %90(%"class.net::URLRequest"* %91, %"class.net::URLRequest"* %92) #11
  br i1 %93, label %94, label %117

94:                                               ; preds = %85
  %95 = bitcast %"class.net::URLRequest"** %0 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = shufflevector <2 x i64> %96, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %98 = bitcast %"class.net::URLRequest"** %0 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  br label %117

99:                                               ; preds = %73
  %100 = bitcast %"class.net::URLRequest"** %0 to i64*
  %101 = load i64, i64* %100, align 8
  br i1 %83, label %102, label %105

102:                                              ; preds = %99
  %103 = bitcast %"class.net::URLRequest"** %74 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %100, align 8
  store i64 %101, i64* %103, align 8
  br label %117

105:                                              ; preds = %99
  %106 = bitcast %"class.net::URLRequest"** %75 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %100, align 8
  store i64 %101, i64* %106, align 8
  %108 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %109 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %74, align 8
  %110 = inttoptr i64 %101 to %"class.net::URLRequest"*
  %111 = tail call zeroext i1 %108(%"class.net::URLRequest"* %109, %"class.net::URLRequest"* %110) #11
  br i1 %111, label %112, label %117

112:                                              ; preds = %105
  %113 = bitcast %"class.net::URLRequest"** %75 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8
  %115 = shufflevector <2 x i64> %114, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %116 = bitcast %"class.net::URLRequest"** %75 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %116, align 8
  br label %117

117:                                              ; preds = %84, %85, %94, %102, %105, %112
  %118 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %0, i64 3
  %119 = icmp eq %"class.net::URLRequest"** %118, %1
  br i1 %119, label %156, label %120

120:                                              ; preds = %117, %149
  %121 = phi %"class.net::URLRequest"** [ %151, %149 ], [ %118, %117 ]
  %122 = phi i32 [ %150, %149 ], [ 0, %117 ]
  %123 = phi %"class.net::URLRequest"** [ %121, %149 ], [ %74, %117 ]
  %124 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %125 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %121, align 8
  %126 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %123, align 8
  %127 = tail call zeroext i1 %124(%"class.net::URLRequest"* %125, %"class.net::URLRequest"* %126) #11
  br i1 %127, label %128, label %149

128:                                              ; preds = %120
  %129 = bitcast %"class.net::URLRequest"** %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = inttoptr i64 %130 to %"class.net::URLRequest"*
  br label %132

132:                                              ; preds = %139, %128
  %133 = phi %"class.net::URLRequest"** [ %121, %128 ], [ %134, %139 ]
  %134 = phi %"class.net::URLRequest"** [ %123, %128 ], [ %141, %139 ]
  %135 = bitcast %"class.net::URLRequest"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.net::URLRequest"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = icmp eq %"class.net::URLRequest"** %134, %0
  br i1 %138, label %144, label %139

139:                                              ; preds = %132
  %140 = load i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)*, i1 (%"class.net::URLRequest"*, %"class.net::URLRequest"*)** %2, align 8
  %141 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %134, i64 -1
  %142 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %141, align 8
  %143 = tail call zeroext i1 %140(%"class.net::URLRequest"* %131, %"class.net::URLRequest"* %142) #11
  br i1 %143, label %132, label %144

144:                                              ; preds = %132, %139
  %145 = phi %"class.net::URLRequest"** [ %134, %139 ], [ %0, %132 ]
  %146 = bitcast %"class.net::URLRequest"** %145 to i64*
  store i64 %130, i64* %146, align 8
  %147 = add i32 %122, 1
  %148 = icmp eq i32 %147, 8
  br i1 %148, label %153, label %149

149:                                              ; preds = %144, %120
  %150 = phi i32 [ %147, %144 ], [ %122, %120 ]
  %151 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %121, i64 1
  %152 = icmp eq %"class.net::URLRequest"** %151, %1
  br i1 %152, label %156, label %120

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.net::URLRequest"*, %"class.net::URLRequest"** %121, i64 1
  %155 = icmp eq %"class.net::URLRequest"** %154, %1
  br label %156

156:                                              ; preds = %149, %153, %117, %58, %51, %48, %40, %31, %30, %8, %14, %3, %3, %67, %62
  %157 = phi i1 [ true, %67 ], [ true, %62 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %30 ], [ true, %31 ], [ true, %40 ], [ true, %48 ], [ true, %51 ], [ true, %58 ], [ true, %117 ], [ %155, %153 ], [ true, %149 ]
  ret i1 %157
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!9 = !{i8 0, i8 2}
