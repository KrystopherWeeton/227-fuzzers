; ModuleID = '../../third_party/skia/src/utils/SkJSONWriter.cpp'
source_filename = "../../third_party/skia/src/utils/SkJSONWriter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkJSONWriter = type { i8*, i8*, i8*, %class.SkWStream*, i32, i32, %class.SkSTArray, %class.SkSTArray.0 }
%class.SkWStream = type { i32 (...)** }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray = type { i32*, i64 }
%class.SkSTArray.0 = type { %class.SkAlignedSTStorage.1, %class.SkTArray.2 }
%class.SkAlignedSTStorage.1 = type { [16 x i8] }
%class.SkTArray.2 = type { i8*, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN12SkJSONWriter10beginValueEb = comdat any

$_ZN12SkJSONWriter9separatorEb = comdat any

@.str = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"\220x%lx\22\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"   \00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkJSONWriter9appendS64El(%class.SkJSONWriter*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %0, i1 zeroext false)
  tail call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %36

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %9, %12
  %14 = inttoptr i64 %12 to i8*
  br i1 %13, label %15, label %32

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, %14
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %21 = load %class.SkWStream*, %class.SkWStream** %20, align 8
  %22 = ptrtoint i8* %17 to i64
  %23 = sub i64 %9, %22
  %24 = bitcast %class.SkWStream* %21 to i1 (%class.SkWStream*, i8*, i64)***
  %25 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %25, i64 2
  %27 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%class.SkWStream* %21, i8* %17, i64 %23) #2
  %29 = bitcast %class.SkJSONWriter* %0 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %11, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %6, %15, %19
  %33 = phi i8* [ %31, %19 ], [ %14, %15 ], [ %14, %6 ]
  store i8 44, i8* %33, align 1
  %34 = load i8*, i8** %10, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %35, i8** %10, align 8
  br label %36

36:                                               ; preds = %32, %2
  %37 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 64
  %38 = bitcast i8* %37 to i32**
  %39 = load i32*, i32** %38, align 8
  %40 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 72
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = lshr i64 %42, 1
  %44 = and i64 %43, 2147483647
  %45 = add nsw i64 %44, -1
  %46 = getelementptr inbounds i32, i32* %39, i64 %45
  %47 = load i32, i32* %46, align 4
  switch i32 %47, label %95 [
    i32 2, label %48
    i32 1, label %61
  ]

48:                                               ; preds = %36
  %49 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %50 = bitcast i8* %49 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 1
  %56 = and i64 %55, 2147483647
  %57 = add nsw i64 %56, -1
  %58 = getelementptr inbounds i8, i8* %51, i64 %57
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp ne i8 %59, 0
  tail call void @_ZN12SkJSONWriter9separatorEb(%class.SkJSONWriter* %0, i1 zeroext %60)
  br label %95

61:                                               ; preds = %36
  %62 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 4
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %95

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %68, %71
  %73 = inttoptr i64 %71 to i8*
  br i1 %72, label %74, label %91

74:                                               ; preds = %65
  %75 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, %73
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %80 = load %class.SkWStream*, %class.SkWStream** %79, align 8
  %81 = ptrtoint i8* %76 to i64
  %82 = sub i64 %68, %81
  %83 = bitcast %class.SkWStream* %80 to i1 (%class.SkWStream*, i8*, i64)***
  %84 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %83, align 8
  %85 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %84, i64 2
  %86 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %85, align 8
  %87 = tail call zeroext i1 %86(%class.SkWStream* %80, i8* %76, i64 %82) #2
  %88 = bitcast %class.SkJSONWriter* %0 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %70, align 8
  %90 = inttoptr i64 %89 to i8*
  br label %91

91:                                               ; preds = %65, %74, %78
  %92 = phi i8* [ %90, %78 ], [ %73, %74 ], [ %73, %65 ]
  store i8 32, i8* %92, align 1
  %93 = load i8*, i8** %69, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  store i8* %94, i8** %69, align 8
  br label %95

95:                                               ; preds = %36, %61, %91, %48
  br i1 %1, label %106, label %96

96:                                               ; preds = %95
  %97 = load i32*, i32** %38, align 8
  %98 = load i64, i64* %41, align 8
  %99 = lshr i64 %98, 1
  %100 = and i64 %99, 2147483647
  %101 = add nsw i64 %100, -1
  %102 = getelementptr inbounds i32, i32* %97, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 2
  %105 = select i1 %104, i32 6, i32 4
  store i32 %105, i32* %3, align 4
  br label %106

106:                                              ; preds = %96, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #0 align 2 {
  %3 = alloca [1024 x i8], align 16
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %5) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 1024, i1 false)
  %6 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #2
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %8 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %6)
  %9 = call i32 @vsnprintf(i8* nonnull %5, i64 1024, i8* %1, %struct.__va_list_tag* nonnull %7) #2
  call void @llvm.va_end(i8* nonnull %6)
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %13, %16
  %18 = icmp ult i64 %17, %10
  %19 = inttoptr i64 %16 to i8*
  br i1 %18, label %20, label %37

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, %19
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %26 = load %class.SkWStream*, %class.SkWStream** %25, align 8
  %27 = ptrtoint i8* %22 to i64
  %28 = sub i64 %16, %27
  %29 = bitcast %class.SkWStream* %26 to i1 (%class.SkWStream*, i8*, i64)***
  %30 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %29, align 8
  %31 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %30, i64 2
  %32 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %31, align 8
  %33 = call zeroext i1 %32(%class.SkWStream* %26, i8* %22, i64 %28) #2
  %34 = bitcast %class.SkJSONWriter* %0 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %15, align 8
  %36 = inttoptr i64 %35 to i8*
  br label %37

37:                                               ; preds = %24, %20, %2
  %38 = phi i8* [ %36, %24 ], [ %19, %20 ], [ %19, %2 ]
  %39 = icmp ugt i32 %9, 32768
  br i1 %39, label %40, label %48

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %42 = load %class.SkWStream*, %class.SkWStream** %41, align 8
  %43 = bitcast %class.SkWStream* %42 to i1 (%class.SkWStream*, i8*, i64)***
  %44 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %43, align 8
  %45 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %44, i64 2
  %46 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %45, align 8
  %47 = call zeroext i1 %46(%class.SkWStream* %42, i8* nonnull %5, i64 %10) #2
  br label %51

48:                                               ; preds = %37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* nonnull align 16 %5, i64 %10, i1 false) #2
  %49 = load i8*, i8** %14, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %10
  store i8* %50, i8** %14, align 8
  br label %51

51:                                               ; preds = %40, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #2
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %5) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkJSONWriter9appendU64Em(%class.SkJSONWriter*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %0, i1 zeroext false)
  tail call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkJSONWriter12appendHexU64Em(%class.SkJSONWriter*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %0, i1 zeroext false)
  tail call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 %1)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #2

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter9separatorEb(%class.SkJSONWriter*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %100

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %9, %12
  %14 = inttoptr i64 %12 to i8*
  br i1 %1, label %15, label %78

15:                                               ; preds = %6
  br i1 %13, label %16, label %33

16:                                               ; preds = %15
  %17 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %22 = load %class.SkWStream*, %class.SkWStream** %21, align 8
  %23 = ptrtoint i8* %18 to i64
  %24 = sub i64 %9, %23
  %25 = bitcast %class.SkWStream* %22 to i1 (%class.SkWStream*, i8*, i64)***
  %26 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %26, i64 2
  %28 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %27, align 8
  %29 = tail call zeroext i1 %28(%class.SkWStream* %22, i8* %18, i64 %24) #2
  %30 = bitcast %class.SkJSONWriter* %0 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %11, align 8
  %32 = inttoptr i64 %31 to i8*
  br label %33

33:                                               ; preds = %15, %16, %20
  %34 = phi i8* [ %32, %20 ], [ %14, %16 ], [ %14, %15 ]
  store i8 10, i8* %34, align 1
  %35 = load i8*, i8** %10, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  store i8* %36, i8** %10, align 8
  %37 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 72
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 4294967292
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %100, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %44 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %45 = bitcast %class.SkJSONWriter* %0 to i64*
  br label %46

46:                                               ; preds = %42, %67
  %47 = phi i8* [ %36, %42 ], [ %70, %67 ]
  %48 = phi i32 [ 0, %42 ], [ %71, %67 ]
  %49 = ptrtoint i8* %47 to i64
  %50 = load i64, i64* %8, align 8
  %51 = sub i64 %50, %49
  %52 = icmp ult i64 %51, 3
  br i1 %52, label %53, label %67

53:                                               ; preds = %46
  %54 = load i8*, i8** %43, align 8
  %55 = icmp eq i8* %54, %47
  br i1 %55, label %67, label %56

56:                                               ; preds = %53
  %57 = load %class.SkWStream*, %class.SkWStream** %44, align 8
  %58 = ptrtoint i8* %54 to i64
  %59 = sub i64 %49, %58
  %60 = bitcast %class.SkWStream* %57 to i1 (%class.SkWStream*, i8*, i64)***
  %61 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %60, align 8
  %62 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %61, i64 2
  %63 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %62, align 8
  %64 = tail call zeroext i1 %63(%class.SkWStream* %57, i8* %54, i64 %59) #2
  %65 = load i64, i64* %45, align 8
  store i64 %65, i64* %11, align 8
  %66 = inttoptr i64 %65 to i8*
  br label %67

67:                                               ; preds = %46, %53, %56
  %68 = phi i8* [ %66, %56 ], [ %47, %53 ], [ %47, %46 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3, i1 false) #2
  %69 = load i8*, i8** %10, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 3
  store i8* %70, i8** %10, align 8
  %71 = add nuw nsw i32 %48, 1
  %72 = load i64, i64* %38, align 8
  %73 = lshr i64 %72, 1
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 2147483647
  %76 = add nsw i32 %75, -1
  %77 = icmp slt i32 %71, %76
  br i1 %77, label %46, label %100

78:                                               ; preds = %6
  br i1 %13, label %79, label %96

79:                                               ; preds = %78
  %80 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, %14
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %85 = load %class.SkWStream*, %class.SkWStream** %84, align 8
  %86 = ptrtoint i8* %81 to i64
  %87 = sub i64 %9, %86
  %88 = bitcast %class.SkWStream* %85 to i1 (%class.SkWStream*, i8*, i64)***
  %89 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %88, align 8
  %90 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %89, i64 2
  %91 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %90, align 8
  %92 = tail call zeroext i1 %91(%class.SkWStream* %85, i8* %81, i64 %87) #2
  %93 = bitcast %class.SkJSONWriter* %0 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %11, align 8
  %95 = inttoptr i64 %94 to i8*
  br label %96

96:                                               ; preds = %78, %79, %83
  %97 = phi i8* [ %95, %83 ], [ %14, %79 ], [ %14, %78 ]
  store i8 32, i8* %97, align 1
  %98 = load i8*, i8** %10, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  store i8* %99, i8** %10, align 8
  br label %100

100:                                              ; preds = %67, %33, %96, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
