; ModuleID = '../../third_party/blink/renderer/platform/webrtc/webrtc_video_utils.cc'
source_filename = "../../third_party/blink/renderer/platform/webrtc/webrtc_video_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::ColorSpace" = type { i8, i8, i8, i32, i32, i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.webrtc::HdrMetadata" }
%"struct.webrtc::HdrMetadata" = type { %"struct.webrtc::HdrMasteringMetadata", i32, i32 }
%"struct.webrtc::HdrMasteringMetadata" = type { %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", float, float }
%"struct.webrtc::HdrMasteringMetadata::Chromaticity" = type { float, float }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }

@switch.table._ZN5blink23WebRtcToMediaVideoCodecEN6webrtc14VideoCodecTypeE = private unnamed_addr constant [4 x i32] [i32 6, i32 7, i32 10, i32 1], align 4
@switch.table._ZN5blink28WebRtcToMediaVideoColorSpaceERKN6webrtc10ColorSpaceE = private unnamed_addr constant [22 x i8] c"\01\00\00\04\05\06\07\08\09\0A\0B\0C\00\00\00\00\00\00\00\00\00\16", align 1
@switch.table._ZN5blink28WebRtcToMediaVideoColorSpaceERKN6webrtc10ColorSpaceE.1 = private unnamed_addr constant [18 x i8] c"\01\00\00\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12", align 1
@switch.table._ZN5blink28WebRtcToMediaVideoColorSpaceERKN6webrtc10ColorSpaceE.2 = private unnamed_addr constant [12 x i8] c"\00\01\FF\FF\04\05\06\07\08\09\0A\0B", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink26WebRtcToMediaVideoRotationEN6webrtc13VideoRotationE(i32) local_unnamed_addr #0 {
  switch i32 %0, label %5 [
    i32 270, label %4
    i32 90, label %2
    i32 180, label %3
  ]

2:                                                ; preds = %1
  br label %5

3:                                                ; preds = %1
  br label %5

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %4, %3, %2
  %6 = phi i32 [ 3, %4 ], [ 2, %3 ], [ 1, %2 ], [ 0, %1 ]
  ret i32 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink23WebRtcToMediaVideoCodecEN6webrtc14VideoCodecTypeE(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 4
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN5blink23WebRtcToMediaVideoCodecEN6webrtc14VideoCodecTypeE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink28WebRtcToMediaVideoColorSpaceERKN6webrtc10ColorSpaceE(%"class.webrtc::ColorSpace"* dereferenceable(68)) local_unnamed_addr #1 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to %"class.media::VideoColorSpace"*
  %4 = tail call zeroext i8 @_ZNK6webrtc10ColorSpace9primariesEv(%"class.webrtc::ColorSpace"* %0) #3
  %5 = add i8 %4, -1
  %6 = icmp ult i8 %5, 22
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = sext i8 %5 to i64
  %9 = getelementptr inbounds [22 x i8], [22 x i8]* @switch.table._ZN5blink28WebRtcToMediaVideoColorSpaceERKN6webrtc10ColorSpaceE, i64 0, i64 %8
  %10 = load i8, i8* %9, align 1
  br label %11

11:                                               ; preds = %7, %1
  %12 = phi i8 [ 0, %1 ], [ %10, %7 ]
  %13 = tail call zeroext i8 @_ZNK6webrtc10ColorSpace8transferEv(%"class.webrtc::ColorSpace"* %0) #3
  %14 = add i8 %13, -1
  %15 = icmp ult i8 %14, 18
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = sext i8 %14 to i64
  %18 = getelementptr inbounds [18 x i8], [18 x i8]* @switch.table._ZN5blink28WebRtcToMediaVideoColorSpaceERKN6webrtc10ColorSpaceE.1, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  br label %20

20:                                               ; preds = %16, %11
  %21 = phi i8 [ 0, %11 ], [ %19, %16 ]
  %22 = tail call zeroext i8 @_ZNK6webrtc10ColorSpace6matrixEv(%"class.webrtc::ColorSpace"* %0) #3
  %23 = icmp ult i8 %22, 12
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = sext i8 %22 to i64
  %26 = getelementptr inbounds [12 x i8], [12 x i8]* @switch.table._ZN5blink28WebRtcToMediaVideoColorSpaceERKN6webrtc10ColorSpaceE.2, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  br label %28

28:                                               ; preds = %24, %20
  %29 = phi i8 [ -1, %20 ], [ %27, %24 ]
  %30 = tail call i32 @_ZNK6webrtc10ColorSpace5rangeEv(%"class.webrtc::ColorSpace"* %0) #3
  %31 = icmp eq i32 %30, 2
  %32 = select i1 %31, i8 2, i8 0
  %33 = icmp eq i32 %30, 1
  %34 = select i1 %33, i8 1, i8 %32
  call void @_ZN5media15VideoColorSpaceC1ENS0_9PrimaryIDENS0_10TransferIDENS0_8MatrixIDEN3gfx10ColorSpace7RangeIDE(%"class.media::VideoColorSpace"* nonnull %3, i8 zeroext %12, i8 zeroext %21, i8 zeroext %29, i8 zeroext %34) #3
  %35 = load i32, i32* %2, align 4
  ret i32 %35
}

declare zeroext i8 @_ZNK6webrtc10ColorSpace9primariesEv(%"class.webrtc::ColorSpace"*) local_unnamed_addr #2

declare zeroext i8 @_ZNK6webrtc10ColorSpace8transferEv(%"class.webrtc::ColorSpace"*) local_unnamed_addr #2

declare zeroext i8 @_ZNK6webrtc10ColorSpace6matrixEv(%"class.webrtc::ColorSpace"*) local_unnamed_addr #2

declare i32 @_ZNK6webrtc10ColorSpace5rangeEv(%"class.webrtc::ColorSpace"*) local_unnamed_addr #2

declare void @_ZN5media15VideoColorSpaceC1ENS0_9PrimaryIDENS0_10TransferIDENS0_8MatrixIDEN3gfx10ColorSpace7RangeIDE(%"class.media::VideoColorSpace"*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
