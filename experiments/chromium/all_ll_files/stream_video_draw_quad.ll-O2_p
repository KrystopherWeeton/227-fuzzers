; ModuleID = '../../components/viz/common/quads/stream_video_draw_quad.cc'
source_filename = "../../components/viz/common/quads/stream_video_draw_quad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::StreamVideoDrawQuad" = type { %"class.viz::DrawQuad.base", %"class.gfx::PointF", %"class.gfx::PointF", %"struct.viz::StreamVideoDrawQuad::OverlayResources", [4 x i8] }
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.0", float, i8, [3 x i8] }>
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Rect" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType"] }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.gfx::PointF" = type { float, float }
%"struct.viz::StreamVideoDrawQuad::OverlayResources" = type { %"class.gfx::Size" }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }

@_ZTVN3viz19StreamVideoDrawQuadE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::StreamVideoDrawQuad"*)* @_ZN3viz19StreamVideoDrawQuadD2Ev to i8*), i8* bitcast (void (%"class.viz::StreamVideoDrawQuad"*)* @_ZN3viz19StreamVideoDrawQuadD0Ev to i8*), i8* bitcast (void (%"class.viz::StreamVideoDrawQuad"*, %"class.base::trace_event::TracedValue"*)* @_ZNK3viz19StreamVideoDrawQuad11ExtendValueEPN4base11trace_event11TracedValueE to i8*)] }, align 8
@.str = private unnamed_addr constant [12 x i8] c"resource_id\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"uv_top_left\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"uv_bottom_right\00", align 1

@_ZN3viz19StreamVideoDrawQuadC1Ev = hidden unnamed_addr alias void (%"class.viz::StreamVideoDrawQuad"*), void (%"class.viz::StreamVideoDrawQuad"*)* @_ZN3viz19StreamVideoDrawQuadC2Ev
@_ZN3viz19StreamVideoDrawQuadD1Ev = hidden unnamed_addr alias void (%"class.viz::StreamVideoDrawQuad"*), void (%"class.viz::StreamVideoDrawQuad"*)* @_ZN3viz19StreamVideoDrawQuadD2Ev
@_ZN3viz19StreamVideoDrawQuadC1ERKS0_ = hidden unnamed_addr alias void (%"class.viz::StreamVideoDrawQuad"*, %"class.viz::StreamVideoDrawQuad"*), void (%"class.viz::StreamVideoDrawQuad"*, %"class.viz::StreamVideoDrawQuad"*)* @_ZN3viz19StreamVideoDrawQuadC2ERKS0_
@_ZN3viz19StreamVideoDrawQuad16OverlayResourcesC1Ev = hidden unnamed_addr alias void (%"struct.viz::StreamVideoDrawQuad::OverlayResources"*), void (%"struct.viz::StreamVideoDrawQuad::OverlayResources"*)* @_ZN3viz19StreamVideoDrawQuad16OverlayResourcesC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19StreamVideoDrawQuadC2Ev(%"class.viz::StreamVideoDrawQuad"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::StreamVideoDrawQuad"* %0 to %"class.viz::DrawQuad"*
  tail call void @_ZN3viz8DrawQuadC2Ev(%"class.viz::DrawQuad"* %2) #7
  %3 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz19StreamVideoDrawQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 1, i32 0
  %5 = bitcast float* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN3viz8DrawQuadC2Ev(%"class.viz::DrawQuad"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz8DrawQuadD2Ev(%"class.viz::DrawQuad"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19StreamVideoDrawQuadD2Ev(%"class.viz::StreamVideoDrawQuad"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::StreamVideoDrawQuad"* %0 to %"class.viz::DrawQuad"*
  tail call void @_ZN3viz8DrawQuadD2Ev(%"class.viz::DrawQuad"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19StreamVideoDrawQuadD0Ev(%"class.viz::StreamVideoDrawQuad"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::StreamVideoDrawQuad"* %0 to %"class.viz::DrawQuad"*
  tail call void @_ZN3viz8DrawQuadD2Ev(%"class.viz::DrawQuad"* %2) #7
  %3 = bitcast %"class.viz::StreamVideoDrawQuad"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19StreamVideoDrawQuadC2ERKS0_(%"class.viz::StreamVideoDrawQuad"*, %"class.viz::StreamVideoDrawQuad"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::StreamVideoDrawQuad"* %0 to %"class.viz::DrawQuad"*
  %4 = bitcast %"class.viz::StreamVideoDrawQuad"* %1 to %"class.viz::DrawQuad"*
  tail call void @_ZN3viz8DrawQuadC2ERKS0_(%"class.viz::DrawQuad"* %3, %"class.viz::DrawQuad"* dereferenceable(80) %4) #7
  %5 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz19StreamVideoDrawQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %1, i64 0, i32 1
  %8 = bitcast %"class.gfx::PointF"* %6 to i8*
  %9 = bitcast %"class.gfx::PointF"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 24, i1 false)
  ret void
}

declare void @_ZN3viz8DrawQuadC2ERKS0_(%"class.viz::DrawQuad"*, %"class.viz::DrawQuad"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19StreamVideoDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_bN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEENS4_4SizeERKNS4_6PointFESF_(%"class.viz::StreamVideoDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext, i32, i64, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %10 = bitcast %"class.viz::StreamVideoDrawQuad"* %0 to %"class.viz::DrawQuad"*
  tail call void @_ZN3viz8DrawQuad6SetAllEPKNS_15SharedQuadStateENS0_8MaterialERKN3gfx4RectES8_b(%"class.viz::DrawQuad"* %10, %"class.viz::SharedQuadState"* %1, i32 6, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* dereferenceable(16) %3, i1 zeroext %4) #7
  %11 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  store i32 %5, i32* %11, align 4
  %12 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 3
  %13 = bitcast %"struct.viz::StreamVideoDrawQuad::OverlayResources"* %12 to i64*
  store i64 %6, i64* %13, align 4
  %14 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 0, i32 7, i32 0
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 1
  %16 = bitcast %"class.gfx::PointF"* %7 to i64*
  %17 = bitcast %"class.gfx::PointF"* %15 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 4
  %19 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 2
  %20 = bitcast %"class.gfx::PointF"* %8 to i64*
  %21 = bitcast %"class.gfx::PointF"* %19 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 4
  ret void
}

declare void @_ZN3viz8DrawQuad6SetAllEPKNS_15SharedQuadStateENS0_8MaterialERKN3gfx4RectES8_b(%"class.viz::DrawQuad"*, %"class.viz::SharedQuadState"*, i32, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19StreamVideoDrawQuad6SetAllEPKNS_15SharedQuadStateERKN3gfx4RectES7_bN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEENS4_4SizeERKNS4_6PointFESF_(%"class.viz::StreamVideoDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext, i32, i64, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %10 = bitcast %"class.viz::StreamVideoDrawQuad"* %0 to %"class.viz::DrawQuad"*
  tail call void @_ZN3viz8DrawQuad6SetAllEPKNS_15SharedQuadStateENS0_8MaterialERKN3gfx4RectES8_b(%"class.viz::DrawQuad"* %10, %"class.viz::SharedQuadState"* %1, i32 6, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* dereferenceable(16) %3, i1 zeroext %4) #7
  %11 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  store i32 %5, i32* %11, align 4
  %12 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 3
  %13 = bitcast %"struct.viz::StreamVideoDrawQuad::OverlayResources"* %12 to i64*
  store i64 %6, i64* %13, align 4
  %14 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 0, i32 7, i32 0
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 1
  %16 = bitcast %"class.gfx::PointF"* %7 to i64*
  %17 = bitcast %"class.gfx::PointF"* %15 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 4
  %19 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 2
  %20 = bitcast %"class.gfx::PointF"* %8 to i64*
  %21 = bitcast %"class.gfx::PointF"* %19 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.viz::StreamVideoDrawQuad"* @_ZN3viz19StreamVideoDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* readnone) local_unnamed_addr #5 align 2 {
  %2 = bitcast %"class.viz::DrawQuad"* %0 to %"class.viz::StreamVideoDrawQuad"*
  ret %"class.viz::StreamVideoDrawQuad"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz19StreamVideoDrawQuad11ExtendValueEPN4base11trace_event11TracedValueE(%"class.viz::StreamVideoDrawQuad"*, %"class.base::trace_event::TracedValue"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 %4) #7
  %5 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 1
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx6PointFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), %"class.gfx::PointF"* dereferenceable(8) %5, %"class.base::trace_event::TracedValue"* %1) #7
  %6 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %0, i64 0, i32 2
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx6PointFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), %"class.gfx::PointF"* dereferenceable(8) %6, %"class.base::trace_event::TracedValue"* %1) #7
  ret void
}

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx6PointFEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::PointF"* dereferenceable(8), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz19StreamVideoDrawQuad16OverlayResourcesC2Ev(%"struct.viz::StreamVideoDrawQuad::OverlayResources"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.viz::StreamVideoDrawQuad::OverlayResources", %"struct.viz::StreamVideoDrawQuad::OverlayResources"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.viz::StreamVideoDrawQuad::OverlayResources", %"struct.viz::StreamVideoDrawQuad::OverlayResources"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
