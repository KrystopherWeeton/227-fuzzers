; ModuleID = '../../third_party/blink/renderer/core/html/html_slot_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_slot_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::StaticSingleton.1852" = type { %"class.WTF::StaticSingleton<WTF::Vector<blink::HTMLSlotElement::LCSArray<unsigned int, 16>, 16, WTF::PartitionAllocator> *>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Vector<blink::HTMLSlotElement::LCSArray<unsigned int, 16>, 16, WTF::PartitionAllocator> *>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::StaticSingleton.1866" = type { %"class.WTF::StaticSingleton<WTF::Vector<blink::HTMLSlotElement::LCSArray<std::__1::pair<unsigned int, unsigned int>, 16>, 16, WTF::PartitionAllocator> *>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Vector<blink::HTMLSlotElement::LCSArray<std::__1::pair<unsigned int, unsigned int>, 16>, 16, WTF::PartitionAllocator> *>::InstanceStorage" = type { [8 x i8] }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.189", i32, [4 x i8], %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.325", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.335", %"class.std::__1::unique_ptr.341", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.353", %"class.std::__1::unique_ptr.359", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.366", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.282", %"class.std::__1::unique_ptr.305", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.225" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__cxx_atomic_impl.228" }
%"struct.std::__1::__cxx_atomic_impl.228" = type { %"struct.std::__1::__cxx_atomic_base_impl.229" }
%"struct.std::__1::__cxx_atomic_base_impl.229" = type { i64 }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.225" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist.243"* }
%"class.blink::Worklist.243" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.225" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::Worklist.250"* }
%"class.blink::Worklist.250" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.225" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::Worklist.257"* }
%"class.blink::Worklist.257" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.225" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::Worklist.264"* }
%"class.blink::Worklist.264" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.225" }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::Worklist.271"* }
%"class.blink::Worklist.271" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.225" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::Worklist.278"* }
%"class.blink::Worklist.278" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.225" }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.285", %"class.std::__1::__compressed_pair.292", %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.299", [4 x i8] }>
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287", %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { i64 }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { float }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.308", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.317" }
%"class.WTF::Vector.317" = type { %"class.WTF::VectorBuffer.318" }
%"class.WTF::VectorBuffer.318" = type { %"class.WTF::VectorBufferBase.319" }
%"class.WTF::VectorBufferBase.319" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.333" }
%"class.WTF::VectorBuffer.333" = type { %"class.WTF::VectorBufferBase.334" }
%"class.WTF::VectorBufferBase.334" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.347" }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.236"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.243"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.250"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.257"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.264"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1399" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.365 }
%class.scoped_refptr.365 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.136" }
%"struct.std::__1::atomic.136" = type { %"struct.std::__1::__atomic_base.137" }
%"struct.std::__1::__atomic_base.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__cxx_atomic_impl.139" }
%"struct.std::__1::__cxx_atomic_impl.139" = type { %"struct.std::__1::__cxx_atomic_base_impl.140" }
%"struct.std::__1::__cxx_atomic_base_impl.140" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.176", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.176" = type { %"class.base::RefCounted.177" }
%"class.base::RefCounted.177" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.180" }
%"class.blink::HeapHashMap.180" = type { %"class.WTF::HashMap.183" }
%"class.WTF::HashMap.183" = type { %"class.WTF::HashTable.184" }
%"class.WTF::HashTable.184" = type <{ %"struct.WTF::KeyValuePair.186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.186" = type { %"class.blink::WeakMember.187", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.187" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector", %"class.blink::HeapVector", i8, %"class.blink::HeapLinkedHashSet" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.34", %"class.blink::Member.36", %"class.blink::Member.0", %"class.blink::Member.38", %"class.blink::Member.38", %"class.blink::Member.61", %"class.blink::Member.63", %"class.blink::Member.65", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.70", %"class.blink::HeapVector.72" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::Document"* }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.44" }
%"class.WTF::HashMap.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %"struct.WTF::KeyValuePair.47"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.47" = type { %"class.WTF::AtomicString", %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.52", i32, %"class.blink::HeapVector.54" }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.54" = type { %"class.WTF::Vector.57" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %"class.blink::Member.52"*, i32, i32 }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.67" }
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::HeapHashMap.69"* }
%"class.blink::HeapHashMap.69" = type opaque
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.72" = type { %"class.WTF::Vector.75" }
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { %"class.blink::Member.78"*, i32, i32 }
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.80", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.82, %"class.WTF::Vector.96", %"class.WTF::Vector.96", %"class.blink::Member", %"class.blink::Member.101", %"class.blink::HeapHashSet", %"class.blink::Member.36", %"class.WTF::HashSet.109", %"class.WTF::TextPosition", %"class.blink::Member.113", %"class.blink::HeapVector.115", %"class.blink::Member.122" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.82 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.83", %"class.WTF::Vector.85" }
%"class.WTF::RefCounted.83" = type { %"class.base::RefCounted.84" }
%"class.base::RefCounted.84" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.88", %"class.WTF::String" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.96" = type { %"class.WTF::VectorBuffer.97" }
%"class.WTF::VectorBuffer.97" = type { %"class.WTF::VectorBufferBase.98" }
%"class.WTF::VectorBufferBase.98" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.103" }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.107" }
%"class.WTF::HashTable.107" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.109" = type { %"class.WTF::HashTable.110" }
%"class.WTF::HashTable.110" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.82, %"class.blink::Member.78", %"class.blink::Member.101" }
%"class.blink::HeapVector.115" = type { %"class.WTF::Vector.118" }
%"class.WTF::Vector.118" = type { %"class.WTF::VectorBuffer.119" }
%"class.WTF::VectorBuffer.119" = type { %"class.WTF::VectorBufferBase.120" }
%"class.WTF::VectorBufferBase.120" = type { %"class.blink::Member.101"*, i32, i32 }
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.19", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.23" }
%"class.WTF::Vector.23" = type { %"class.WTF::VectorBuffer.24" }
%"class.WTF::VectorBuffer.24" = type { %"class.WTF::VectorBufferBase.25" }
%"class.WTF::VectorBufferBase.25" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::WeakMember.1363", i32, [4 x i8] }>
%"class.blink::WeakMember.1363" = type { %"class.blink::MemberBase" }
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.30", i32, i32 }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"class.blink::WeakMember.1363" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.132", %"class.WTF::Vector.132", i8, i32, %"class.blink::Member.143", %"class.blink::Member.145", %"class.blink::Member.147", %"class.blink::Member.149", %"class.blink::Member.151", %"class.blink::Member.153", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.161", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.167", %"class.blink::Member.169", %"class.blink::Member.78", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.172", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.54", %"class.blink::Member.52", %"class.blink::Member.382", %"class.blink::Member.52", %"class.blink::Member.52", %"class.blink::Member.52", %"class.blink::UserActionElementSet", %"class.blink::Member.391", double, double, i64, i64, %"class.blink::HeapHashSet.393", %"class.blink::HeapHashSet.400", i16, i8, %"class.blink::Member.407", %"class.blink::Member.409", %"class.blink::Member.1182", %"class.blink::Member.1184", %"class.blink::TextLinkColors", %"class.blink::Member.1186", i8, [7 x i8], %"class.blink::HeapHashMap.1188", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.52", %"class.WTF::Vector.1195", %"class.blink::Member.1200", %"class.blink::Member.1204", i8, %"class.blink::Member.52", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1206", %"class.blink::HeapVector.1208", %"class.std::__1::unique_ptr.1216", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1222", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1235", %"class.WTF::Vector.1237", i8, i8, %"class.std::__1::unique_ptr.1242", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.54", %"class.blink::HeapVector.1248", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1256", i8, i32, %"class.blink::Member.1258", %"class.blink::Member.1260", %"class.blink::Member.1262", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1264", %"class.WTF::HashMap.1266", %"class.blink::Member.1271", %"class.blink::Member.1273", %"class.blink::Member.1275", %"class.blink::Member.1277", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1279", i8, i32, %"class.blink::Member.1286", %"class.blink::Member.1288", i32, %"class.blink::Member.1290", %"class.blink::Member.1292", %"class.blink::Member.1294", %"class.std::__1::unique_ptr.1296", i64, %"class.std::__1::unique_ptr.1302", i32, i32, %"class.blink::Member.1313", %"class.blink::Member.1315", %"class.blink::Member.1317", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1319", %"class.WTF::Vector.1321", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1326", %"class.blink::Member.1333", %"class.std::__1::unique_ptr.1335", %"class.blink::Member.1341", i8, i8, %"class.WTF::String", %"class.blink::Member.1343", i8, [7 x i8], %"class.blink::HeapHashMap.1345", %"class.blink::HeapObserverSet", %"class.blink::Member.1359", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1361", i32, i8, i8, %"class.blink::WeakMember.1363", %"class.blink::Member.1364" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.125" }
%"class.blink::HeapHashMap.125" = type { %"class.WTF::HashMap.128" }
%"class.WTF::HashMap.128" = type { %"class.WTF::HashTable.129" }
%"class.WTF::HashTable.129" = type <{ %"struct.WTF::KeyValuePair.131"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.131" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.132" = type { %"class.WTF::VectorBuffer.133" }
%"class.WTF::VectorBuffer.133" = type { %"class.WTF::VectorBufferBase.134" }
%"class.WTF::VectorBufferBase.134" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.136" }
%"class.blink::Member.143" = type { %"class.blink::MemberBase.144" }
%"class.blink::MemberBase.144" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1404", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1471", i32, i8, [3 x i8], %"class.blink::HeapVector.1473", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1481", %"class.blink::Member.1483", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1492", %"class.blink::Member.1615", %"class.blink::Member.1617", i8, [7 x i8] }>
%"class.blink::Supplementable.1404" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1405" }
%"class.blink::HeapHashMap.1405" = type { %"class.WTF::HashMap.1408" }
%"class.WTF::HashMap.1408" = type { %"class.WTF::HashTable.1409" }
%"class.WTF::HashTable.1409" = type <{ %"struct.WTF::KeyValuePair.1411"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1411" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1420" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1412" }
%"class.blink::HeapObserverSet.1412" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1413" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::WeakMember.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1419" = type opaque
%"class.blink::Supplementable.1420" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1421" }
%"class.blink::HeapHashMap.1421" = type { %"class.WTF::HashMap.1424" }
%"class.WTF::HashMap.1424" = type { %"class.WTF::HashTable.1425" }
%"class.WTF::HashTable.1425" = type <{ %"struct.WTF::KeyValuePair.1427"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1427" = type { i8*, %"class.blink::Member.2759" }
%"class.blink::Member.2759" = type { %"class.blink::MemberBase.2760" }
%"class.blink::MemberBase.2760" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2761" }
%"class.blink::Member.2761" = type { %"class.blink::MemberBase.2762" }
%"class.blink::MemberBase.2762" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1428, %"class.std::__1::unique_ptr.1437", %"class.std::__1::unique_ptr.1437", %"class.std::__1::unique_ptr.1461", %"class.std::__1::unique_ptr.1461", %"class.blink::Member.145", i32, [4 x i8], %"class.WTF::HashSet.1467", i32, i32 }
%class.scoped_refptr.1428 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1429", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1431", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1436 }
%"class.WTF::RefCounted.1429" = type { %"class.base::RefCounted.1430" }
%"class.base::RefCounted.1430" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1431" = type { %"class.absl::optional_internal::optional_data.1432" }
%"class.absl::optional_internal::optional_data.1432" = type { %"class.absl::optional_internal::optional_data_base.1433" }
%"class.absl::optional_internal::optional_data_base.1433" = type { %"class.absl::optional_internal::optional_data_dtor_base.1434" }
%"class.absl::optional_internal::optional_data_dtor_base.1434" = type { i8, %union.anon.1435 }
%union.anon.1435 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1436 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1437" = type { %"class.std::__1::__compressed_pair.1438" }
%"class.std::__1::__compressed_pair.1438" = type { %"struct.std::__1::__compressed_pair_elem.1439" }
%"struct.std::__1::__compressed_pair_elem.1439" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1448", %"class.std::__1::map.1457"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1431" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1440", %"class.std::__1::__compressed_pair.1445" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1445" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"class.std::__1::map.1448" = type { %"class.std::__1::__tree.1449" }
%"class.std::__1::__tree.1449" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1450", %"class.std::__1::__compressed_pair.1454" }
%"class.std::__1::__compressed_pair.1450" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"class.std::__1::__compressed_pair.1454" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"class.std::__1::map.1457" = type opaque
%"class.std::__1::unique_ptr.1461" = type { %"class.std::__1::__compressed_pair.1462" }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.1463" }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1467" = type { %"class.WTF::HashTable.1468" }
%"class.WTF::HashTable.1468" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1473" = type { %"class.WTF::Vector.1476" }
%"class.WTF::Vector.1476" = type { %"class.WTF::VectorBuffer.1477" }
%"class.WTF::VectorBuffer.1477" = type { %"class.WTF::VectorBufferBase.1478" }
%"class.WTF::VectorBufferBase.1478" = type { %"class.blink::Member.1479"*, i32, i32 }
%"class.blink::Member.1479" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1485", i32, i32 }
%"class.blink::HeapHashMap.1485" = type { %"class.WTF::HashMap.1488" }
%"class.WTF::HashMap.1488" = type { %"class.WTF::HashTable.1489" }
%"class.WTF::HashTable.1489" = type <{ %"struct.WTF::KeyValuePair.1491"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1491" = type opaque
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1495" }
%"class.std::__1::unique_ptr.1495" = type { %"class.std::__1::__compressed_pair.1496" }
%"class.std::__1::__compressed_pair.1496" = type { %"struct.std::__1::__compressed_pair_elem.1497" }
%"struct.std::__1::__compressed_pair_elem.1497" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1498" }
%"class.WTF::Vector.1498" = type { %"class.WTF::VectorBuffer.1499" }
%"class.WTF::VectorBuffer.1499" = type { %"class.WTF::VectorBufferBase.1500" }
%"class.WTF::VectorBufferBase.1500" = type { %"class.mojo::StructPtr.1501"*, i32, i32 }
%"class.mojo::StructPtr.1501" = type { %"class.std::__1::unique_ptr.1502" }
%"class.std::__1::unique_ptr.1502" = type { %"class.std::__1::__compressed_pair.1503" }
%"class.std::__1::__compressed_pair.1503" = type { %"struct.std::__1::__compressed_pair_elem.1504" }
%"struct.std::__1::__compressed_pair_elem.1504" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1505", %"class.WTF::HashMap.1512", %"class.WTF::HashMap.1517", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.820", i32, %"class.mojo::StructPtr.1522", %"class.WTF::Vector.820" }
%"class.mojo::StructPtr.1505" = type { %"class.std::__1::unique_ptr.1506" }
%"class.std::__1::unique_ptr.1506" = type { %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1512" = type { %"class.WTF::HashTable.1513" }
%"class.WTF::HashTable.1513" = type <{ %"struct.WTF::KeyValuePair.1516"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1516" = type opaque
%"class.WTF::HashMap.1517" = type { %"class.WTF::HashTable.1518" }
%"class.WTF::HashTable.1518" = type <{ %"struct.WTF::KeyValuePair.1521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1521" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1522" = type { %"class.std::__1::unique_ptr.1523" }
%"class.std::__1::unique_ptr.1523" = type { %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.820", i8, i8, [6 x i8] }>
%"class.WTF::Vector.820" = type { %"class.WTF::VectorBuffer.821" }
%"class.WTF::VectorBuffer.821" = type { %"class.WTF::VectorBufferBase.822" }
%"class.WTF::VectorBufferBase.822" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1606" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1537", i32 }>
%"class.std::__1::unique_ptr.1537" = type { %"class.std::__1::__compressed_pair.1538" }
%"class.std::__1::__compressed_pair.1538" = type { %"struct.std::__1::__compressed_pair_elem.1539" }
%"struct.std::__1::__compressed_pair_elem.1539" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1540", %"class.absl::optional.1541", %"class.absl::optional.1546", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1559", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1581", %"class.std::__1::map.1592", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1601", i8, %class.scoped_refptr.1551, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1602" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1540" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1541" = type { %"class.absl::optional_internal::optional_data.1542" }
%"class.absl::optional_internal::optional_data.1542" = type { %"class.absl::optional_internal::optional_data_base.1543" }
%"class.absl::optional_internal::optional_data_base.1543" = type { %"class.absl::optional_internal::optional_data_dtor_base.1544" }
%"class.absl::optional_internal::optional_data_dtor_base.1544" = type { i8, %union.anon.1545 }
%union.anon.1545 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1546" = type { %"class.absl::optional_internal::optional_data.1547" }
%"class.absl::optional_internal::optional_data.1547" = type { %"class.absl::optional_internal::optional_data_base.1548" }
%"class.absl::optional_internal::optional_data_base.1548" = type { %"class.absl::optional_internal::optional_data_dtor_base.1549" }
%"class.absl::optional_internal::optional_data_dtor_base.1549" = type { i8, %union.anon.1550 }
%union.anon.1550 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1551, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1552" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1552" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.374 }
%class.scoped_refptr.374 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.375", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.375" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.376" }
%"struct.std::__1::atomic.376" = type { %"struct.std::__1::__atomic_base.377" }
%"struct.std::__1::__atomic_base.377" = type { %"struct.std::__1::__atomic_base.378" }
%"struct.std::__1::__atomic_base.378" = type { %"struct.std::__1::__cxx_atomic_impl.379" }
%"struct.std::__1::__cxx_atomic_impl.379" = type { %"struct.std::__1::__cxx_atomic_base_impl.380" }
%"struct.std::__1::__cxx_atomic_base_impl.380" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1557 }
%class.scoped_refptr.1557 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1629", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1551, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1629" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1558 }
%class.scoped_refptr.1558 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1559" = type { %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1562", %class.scoped_refptr.1563 }
%"class.base::RepeatingCallback.1562" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1563 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1564", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1564" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1568", %"class.std::__1::unique_ptr.1574", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1580" }
%"class.std::__1::unique_ptr.1568" = type { %"class.std::__1::__compressed_pair.1569" }
%"class.std::__1::__compressed_pair.1569" = type { %"struct.std::__1::__compressed_pair_elem.1570" }
%"struct.std::__1::__compressed_pair_elem.1570" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1574" = type { %"class.std::__1::__compressed_pair.1575" }
%"class.std::__1::__compressed_pair.1575" = type { %"struct.std::__1::__compressed_pair_elem.1576" }
%"struct.std::__1::__compressed_pair_elem.1576" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1580" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1581" = type { %"class.std::__1::__tree.1582" }
%"class.std::__1::__tree.1582" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1583", %"class.std::__1::__compressed_pair.1587" }
%"class.std::__1::__compressed_pair.1583" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"class.std::__1::__compressed_pair.1587" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"class.std::__1::map.1592" = type { %"class.std::__1::__tree.1593" }
%"class.std::__1::__tree.1593" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1594", %"class.std::__1::__compressed_pair.1598" }
%"class.std::__1::__compressed_pair.1594" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"class.std::__1::__compressed_pair.1598" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"class.base::OnceCallback.1601" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1551 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.373" }>
%"class.base::RefCountedThreadSafe.373" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1602" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1606" = type { %"class.std::__1::__compressed_pair.1607" }
%"class.std::__1::__compressed_pair.1607" = type { %"struct.std::__1::__compressed_pair_elem.1608" }
%"struct.std::__1::__compressed_pair_elem.1608" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1615" = type { %"class.blink::MemberBase.1616" }
%"class.blink::MemberBase.1616" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1483", i8, [7 x i8], %"class.WTF::Vector.1498", %"class.blink::HeapVector.1621", i8, [7 x i8], %"class.WTF::HashSet.1467", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1621" = type { %"class.WTF::Vector.1624" }
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626" }
%"class.WTF::VectorBufferBase.1626" = type { %"class.blink::Member.1627"*, i32, i32 }
%"class.blink::Member.1627" = type opaque
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.153" = type { %"class.blink::MemberBase.154" }
%"class.blink::MemberBase.154" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.155" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::KURL"* }
%"class.blink::Member.167" = type { %"class.blink::MemberBase.168" }
%"class.blink::MemberBase.168" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.169" = type { %"class.blink::MemberBase.170" }
%"class.blink::MemberBase.170" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.171 }
%class.scoped_refptr.171 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.172" = type { %"class.WTF::VectorBuffer.173" }
%"class.WTF::VectorBuffer.173" = type { %"class.WTF::VectorBufferBase.174" }
%"class.WTF::VectorBufferBase.174" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.175 }
%class.scoped_refptr.175 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.36", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.384" }
%"class.blink::HeapHashMap.384" = type { %"class.WTF::HashMap.387" }
%"class.WTF::HashMap.387" = type { %"class.WTF::HashTable.388" }
%"class.WTF::HashTable.388" = type <{ %"struct.WTF::KeyValuePair.390"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.390" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.393" = type { %"class.WTF::HashSet.396" }
%"class.WTF::HashSet.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"class.blink::WeakMember.399"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.399" = type opaque
%"class.blink::HeapHashSet.400" = type { %"class.WTF::HashSet.403" }
%"class.WTF::HashSet.403" = type { %"class.WTF::HashTable.404" }
%"class.WTF::HashTable.404" = type <{ %"class.blink::WeakMember.406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.406" = type opaque
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.36", i32, i32, i32, %"class.blink::Member.78", %"class.blink::Member.413", %"class.blink::Member.440", %"class.blink::HeapHashMap.442", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.449", %"class.blink::HeapHashSet.449", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.455", %"class.blink::Member.478", %"class.blink::Member.945", %"class.blink::Member.947", %"class.blink::Member.953", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1115", %"class.blink::Member.1121", %"class.blink::HeapHashMap.1123", %"class.blink::HeapHashMap.1130", %"class.std::__1::unique_ptr.1137", i32, %"class.blink::HeapVector.1143", %"class.blink::HeapVector.1143", %"class.blink::HeapVector.425", %"class.blink::HeapHashSet.1151", %"class.blink::HeapHashMap.1158", %"class.blink::Member.1165", %"class.blink::HeapHashMap.1167", %class.scoped_refptr.1174, %class.scoped_refptr.570, %"class.blink::Member.1079", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1175", %"class.blink::Member.52" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.0", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.417", %"class.blink::HeapVector.425", i8 }>
%"class.blink::HeapVector.417" = type { %"class.WTF::Vector.420" }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"class.blink::Member.423"*, i32, i32 }
%"class.blink::Member.423" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.436", %"class.blink::Member.438", %"class.blink::Member.438", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.436" = type <{ %"class.blink::Member.438"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member", %"class.blink::Member.438", %"class.blink::Member.438" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.442" = type { %"class.WTF::HashMap.445" }
%"class.WTF::HashMap.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"struct.WTF::KeyValuePair.448"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.448" = type opaque
%"class.blink::HeapHashSet.449" = type { %"class.WTF::HashSet.452" }
%"class.WTF::HashSet.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"class.blink::Member.0"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.459", %"class.blink::Member.470" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.52", %"class.blink::HeapHashMap.463" }
%"class.blink::HeapHashMap.463" = type { %"class.WTF::HashMap.466" }
%"class.WTF::HashMap.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"struct.WTF::KeyValuePair.469"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.469" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.474", %"class.blink::Member.476" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1383", %"class.blink::Member.470", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1390] }
%"class.blink::HeapVector.1383" = type { %"class.WTF::Vector.1386" }
%"class.WTF::Vector.1386" = type { %"class.WTF::VectorBuffer.1387" }
%"class.WTF::VectorBuffer.1387" = type { %"class.WTF::VectorBufferBase.1388" }
%"class.WTF::VectorBufferBase.1388" = type { %"class.blink::Member.476"*, i32, i32 }
%class.sk_sp.1390 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1391, i32, %"class.absl::optional.1392", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.136" }>
%class.sk_sp.1391 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1392" = type { %"class.absl::optional_internal::optional_data.1393" }
%"class.absl::optional_internal::optional_data.1393" = type { %"class.absl::optional_internal::optional_data_base.1394" }
%"class.absl::optional_internal::optional_data_base.1394" = type { %"class.absl::optional_internal::optional_data_dtor_base.1395" }
%"class.absl::optional_internal::optional_data_dtor_base.1395" = type { i8, %union.anon.1396 }
%union.anon.1396 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.36", %class.scoped_refptr.489, %"class.blink::SelectorFilter", %"class.blink::Member.440", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.482" }
%"class.blink::HeapHashMap.482" = type { %"class.WTF::HashMap.485" }
%"class.WTF::HashMap.485" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"struct.WTF::KeyValuePair.488"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.488" = type opaque
%class.scoped_refptr.489 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.912", %"class.std::__1::unique_ptr.914" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.555", %"class.blink::DataRef.635", %"class.blink::DataRef.639", %"class.blink::DataRef.837", %"class.blink::DataRef.895", %"class.blink::DataRef.899", %"class.blink::DataRef.903", %"class.blink::DataRef.907", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.491", %"class.blink::DataRef.493", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.493" = type { %class.scoped_refptr.494 }
%class.scoped_refptr.494 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.495", %"class.blink::Font" }
%"class.WTF::RefCounted.495" = type { %"class.base::RefCounted.496" }
%"class.base::RefCounted.496" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.528 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.498, %class.scoped_refptr.506, %class.scoped_refptr.516, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.527 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.497 }
%class.scoped_refptr.497 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1379", [4 x i8] }>
%"class.WTF::RefCounted.1379" = type { %"class.base::RefCounted.1380" }
%"class.base::RefCounted.1380" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.498 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.504", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.499" }
%"class.WTF::Vector.499" = type { %"class.WTF::VectorBuffer.500" }
%"class.WTF::VectorBuffer.500" = type { %"class.WTF::VectorBufferBase.501" }
%"class.WTF::VectorBufferBase.501" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.504" = type { %"class.base::RefCounted.505" }
%"class.base::RefCounted.505" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.506 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.507", %"class.WTF::RefCounted.514", [4 x i8] }>
%"class.blink::FontSettings.507" = type { %"class.WTF::Vector.508" }
%"class.WTF::Vector.508" = type { %"class.WTF::VectorBuffer.509" }
%"class.WTF::VectorBuffer.509" = type { %"class.WTF::VectorBufferBase.510" }
%"class.WTF::VectorBufferBase.510" = type { %"class.blink::FontTagValuePair.511"*, i32, i32 }
%"class.blink::FontTagValuePair.511" = type { i32, float }
%"class.WTF::RefCounted.514" = type { %"class.base::RefCounted.515" }
%"class.base::RefCounted.515" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.516 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.517", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.524, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.517" = type { %"class.base::RefCounted.518" }
%"class.base::RefCounted.518" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.524 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.525", [4 x i8] }>
%"class.WTF::RefCounted.525" = type { %"class.base::RefCounted.526" }
%"class.base::RefCounted.526" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.527 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.528 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.529", %"class.WTF::Vector.531", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.529" = type { %"class.base::RefCounted.530" }
%"class.base::RefCounted.530" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.531" = type { %"class.WTF::VectorBuffer.532" }
%"class.WTF::VectorBuffer.532" = type { %"class.WTF::VectorBufferBase.533", [8 x i8] }
%"class.WTF::VectorBufferBase.533" = type { %class.scoped_refptr.534*, i32, i32 }
%class.scoped_refptr.534 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.535", [4 x i8] }>
%"class.WTF::RefCounted.535" = type { %"class.base::RefCounted.536" }
%"class.base::RefCounted.536" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.541", %class.scoped_refptr.548, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.535" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.539 }
%union.anon.539 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.540, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.136" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.376" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.540 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.544, %class.scoped_refptr.544 }
%class.scoped_refptr.544 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.548 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.549", [4 x i8] }>
%"class.WTF::RefCounted.549" = type { %"class.base::RefCounted.550" }
%"class.base::RefCounted.550" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.551" }
%"class.blink::PersistentBase.551" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.552" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.552" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.553 }
%class.scoped_refptr.553 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.554, i8, i8, i8, i8 }>
%union.anon.554 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.555" = type { %class.scoped_refptr.556 }
%class.scoped_refptr.556 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.557", [4 x i8], %"class.blink::DataRef.559", %"class.blink::DataRef.600", %"class.WTF::Vector.604", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.608, %class.scoped_refptr.617, %"class.blink::Persistent.625", %"class.blink::Persistent.627", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.557" = type { %"class.base::RefCounted.558" }
%"class.base::RefCounted.558" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.559" = type { %class.scoped_refptr.560 }
%class.scoped_refptr.560 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.561", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.563, %class.scoped_refptr.570, %"class.blink::Persistent.587", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.561" = type { %"class.base::RefCounted.562" }
%"class.base::RefCounted.562" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.563 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.564", %"class.WTF::Vector.565" }
%"class.base::RefCountedThreadSafe.564" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.565" = type { %"class.WTF::VectorBuffer.566" }
%"class.WTF::VectorBuffer.566" = type { %"class.WTF::VectorBufferBase.567" }
%"class.WTF::VectorBufferBase.567" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.587" = type { %"class.blink::PersistentBase.588" }
%"class.blink::PersistentBase.588" = type { %"class.blink::HeapVector.589"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.589" = type { %"class.WTF::Vector.592" }
%"class.WTF::Vector.592" = type { %"class.WTF::VectorBuffer.593" }
%"class.WTF::VectorBuffer.593" = type { %"class.WTF::VectorBufferBase.594" }
%"class.WTF::VectorBufferBase.594" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.595", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.600" = type { %class.scoped_refptr.601 }
%class.scoped_refptr.601 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.602", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.602" = type { %"class.base::RefCounted.603" }
%"class.base::RefCounted.603" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.604" = type { %"class.WTF::VectorBuffer.605" }
%"class.WTF::VectorBuffer.605" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.608 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.609", %"class.WTF::Vector.611" }
%"class.WTF::RefCounted.609" = type { %"class.base::RefCounted.610" }
%"class.base::RefCounted.610" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.611" = type { %"class.WTF::VectorBuffer.612" }
%"class.WTF::VectorBuffer.612" = type { %"class.WTF::VectorBufferBase.613" }
%"class.WTF::VectorBufferBase.613" = type { %"struct.std::__1::pair.614"*, i32, i32 }
%"struct.std::__1::pair.614" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.617 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.618", [4 x i8], %"class.WTF::Vector.620" }
%"class.WTF::RefCounted.618" = type { %"class.base::RefCounted.619" }
%"class.base::RefCounted.619" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.622", [28 x i8] }>
%"class.WTF::VectorBufferBase.622" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.625" = type { %"class.blink::PersistentBase.626" }
%"class.blink::PersistentBase.626" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.627" = type { %"class.blink::PersistentBase.628" }
%"class.blink::PersistentBase.628" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.631", %"class.blink::Member.633" }
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.635" = type { %class.scoped_refptr.636 }
%class.scoped_refptr.636 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.637", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.637" = type { %"class.base::RefCounted.638" }
%"class.base::RefCounted.638" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.639" = type { %class.scoped_refptr.640 }
%class.scoped_refptr.640 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.641", [4 x i8], %"class.blink::DataRef.643", %"class.blink::DataRef.707", %"class.blink::TransformOperations", %class.scoped_refptr.617, %"class.blink::Persistent.831", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.641" = type { %"class.base::RefCounted.642" }
%"class.base::RefCounted.642" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.643" = type { %class.scoped_refptr.644 }
%class.scoped_refptr.644 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.645", [4 x i8], %"class.blink::DataRef.647", %"class.blink::Persistent.685", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.645" = type { %"class.base::RefCounted.646" }
%"class.base::RefCounted.646" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.649", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.667, %class.scoped_refptr.670, %class.scoped_refptr.673, %class.scoped_refptr.676, %class.scoped_refptr.677, %class.scoped_refptr.678, %"class.blink::Persistent.685", %"class.blink::Persistent.698", %"class.absl::optional.702", %"class.absl::optional.702", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.651", %"class.std::__1::unique_ptr.656" }
%"class.WTF::Vector.651" = type { %"class.WTF::VectorBuffer.652" }
%"class.WTF::VectorBuffer.652" = type { %"class.WTF::VectorBufferBase.653" }
%"class.WTF::VectorBufferBase.653" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.659", %"class.WTF::Vector.651", i32, i32 }
%"class.WTF::Vector.659" = type { %"class.WTF::VectorBuffer.660" }
%"class.WTF::VectorBuffer.660" = type { %"class.WTF::VectorBufferBase.661" }
%"class.WTF::VectorBufferBase.661" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.667 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.668", [4 x i8] }>
%"class.WTF::RefCounted.668" = type { %"class.base::RefCounted.669" }
%"class.base::RefCounted.669" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.670 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.671", [4 x i8] }>
%"class.WTF::RefCounted.671" = type { %"class.base::RefCounted.672" }
%"class.base::RefCounted.672" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.673 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.674" }>
%"class.WTF::RefCounted.674" = type { %"class.base::RefCounted.675" }
%"class.base::RefCounted.675" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.676 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.677 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.678 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.679", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.679" = type { %"class.base::RefCounted.680" }
%"class.base::RefCounted.680" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.681" }
%"class.blink::DataRef.681" = type { %class.scoped_refptr.682 }
%class.scoped_refptr.682 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.625", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.683" }
%"class.WTF::RefCounted.683" = type { %"class.base::RefCounted.684" }
%"class.base::RefCounted.684" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.698" = type { %"class.blink::PersistentBase.699" }
%"class.blink::PersistentBase.699" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.670, %"class.blink::Member.595", i32, [4 x i8] }>
%"class.absl::optional.702" = type { %"class.absl::optional_internal::optional_data.703" }
%"class.absl::optional_internal::optional_data.703" = type { %"class.absl::optional_internal::optional_data_base.704" }
%"class.absl::optional_internal::optional_data_base.704" = type { %"class.absl::optional_internal::optional_data_dtor_base.705" }
%"class.absl::optional_internal::optional_data_dtor_base.705" = type { i8, [3 x i8], %union.anon.706 }
%union.anon.706 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.685" = type { %"class.blink::PersistentBase.686" }
%"class.blink::PersistentBase.686" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.689" }
%"class.blink::HeapVector.689" = type { %"class.WTF::Vector.692" }
%"class.WTF::Vector.692" = type { %"class.WTF::VectorBuffer.693" }
%"class.WTF::VectorBuffer.693" = type { %"class.WTF::VectorBufferBase.694" }
%"class.WTF::VectorBufferBase.694" = type { %"class.blink::Member.695"*, i32, i32 }
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.707" = type { %class.scoped_refptr.708 }
%class.scoped_refptr.708 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.709", %"class.blink::DataRef.711", %"class.blink::DataRef.715", %"class.blink::DataRef.724", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.743", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.792", %"class.std::__1::unique_ptr.803", %"class.std::__1::unique_ptr.814", %"class.WTF::Vector.820", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.709" = type { %"class.base::RefCounted.710" }
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.711" = type { %class.scoped_refptr.712 }
%class.scoped_refptr.712 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.713", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.713" = type { %"class.base::RefCounted.714" }
%"class.base::RefCounted.714" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.715" = type { %class.scoped_refptr.716 }
%class.scoped_refptr.716 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.717", [4 x i8], %"class.WTF::Vector.719", i8, [7 x i8] }>
%"class.WTF::RefCounted.717" = type { %"class.base::RefCounted.718" }
%"class.base::RefCounted.718" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.719" = type { %"class.WTF::VectorBuffer.720" }
%"class.WTF::VectorBuffer.720" = type { %"class.WTF::VectorBufferBase.721" }
%"class.WTF::VectorBufferBase.721" = type { i32*, i32, i32 }
%"class.blink::DataRef.724" = type { %class.scoped_refptr.725 }
%class.scoped_refptr.725 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.726", [4 x i8], %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.733", %"class.WTF::HashMap.733", %"class.WTF::HashMap.733", %"class.WTF::HashMap.733", %"class.WTF::HashMap.738", %"class.WTF::Vector.651", %"class.WTF::Vector.651", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.726" = type { %"class.base::RefCounted.727" }
%"class.base::RefCounted.727" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.728" = type { %"class.WTF::HashTable.729" }
%"class.WTF::HashTable.729" = type <{ %"struct.WTF::KeyValuePair.732"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.732" = type { %"class.WTF::String", %"class.WTF::Vector.2769" }
%"class.WTF::Vector.2769" = type { %"class.WTF::VectorBuffer.2770" }
%"class.WTF::VectorBuffer.2770" = type { %"class.WTF::VectorBufferBase.2771" }
%"class.WTF::VectorBufferBase.2771" = type { i64*, i32, i32 }
%"class.WTF::HashMap.733" = type { %"class.WTF::HashTable.734" }
%"class.WTF::HashTable.734" = type <{ %"struct.WTF::KeyValuePair.737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.737" = type { i64, %"class.WTF::Vector.820" }
%"class.WTF::HashMap.738" = type { %"class.WTF::HashTable.739" }
%"class.WTF::HashTable.739" = type <{ %"struct.WTF::KeyValuePair.742"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.742" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.746" }
%"class.WTF::HashMap.746" = type { %"class.WTF::HashTable.747" }
%"class.WTF::HashTable.747" = type <{ %"struct.WTF::KeyValuePair.750"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.750" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2774", %"class.absl::optional.2774", %"class.absl::optional.2774" }
%"class.absl::optional.2774" = type { %"class.absl::optional_internal::optional_data.2775" }
%"class.absl::optional_internal::optional_data.2775" = type { %"class.absl::optional_internal::optional_data_base.2776" }
%"class.absl::optional_internal::optional_data_base.2776" = type { %"class.absl::optional_internal::optional_data_dtor_base.2777" }
%"class.absl::optional_internal::optional_data_dtor_base.2777" = type { i8, %union.anon.2778 }
%union.anon.2778 = type { i32 }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.604", %"class.WTF::Vector.769", %"class.WTF::Vector.757", %"class.WTF::Vector.774", %"class.WTF::Vector.779", %"class.WTF::Vector.784" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.757", %"class.WTF::Vector.757", %"class.WTF::Vector.762" }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.763" }
%"class.WTF::VectorBuffer.763" = type { %"class.WTF::VectorBufferBase.764" }
%"class.WTF::VectorBufferBase.764" = type { %class.scoped_refptr.765*, i32, i32 }
%class.scoped_refptr.765 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.766" }
%"class.base::RefCountedThreadSafe.766" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.769" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase.771" }
%"class.WTF::VectorBufferBase.771" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.757" = type { %"class.WTF::VectorBuffer.758" }
%"class.WTF::VectorBuffer.758" = type { %"class.WTF::VectorBufferBase.759" }
%"class.WTF::VectorBufferBase.759" = type { double*, i32, i32 }
%"class.WTF::Vector.774" = type { %"class.WTF::VectorBuffer.775" }
%"class.WTF::VectorBuffer.775" = type { %"class.WTF::VectorBufferBase.776" }
%"class.WTF::VectorBufferBase.776" = type { i32*, i32, i32 }
%"class.WTF::Vector.779" = type { %"class.WTF::VectorBuffer.780" }
%"class.WTF::VectorBuffer.780" = type { %"class.WTF::VectorBufferBase.781" }
%"class.WTF::VectorBufferBase.781" = type { i32*, i32, i32 }
%"class.WTF::Vector.784" = type { %"class.WTF::VectorBuffer.785" }
%"class.WTF::VectorBuffer.785" = type { %"class.WTF::VectorBufferBase.786" }
%"class.WTF::VectorBufferBase.786" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.795" }
%"class.WTF::Vector.795" = type { %"class.WTF::VectorBuffer.796" }
%"class.WTF::VectorBuffer.796" = type { %"class.WTF::VectorBufferBase.797" }
%"class.WTF::VectorBufferBase.797" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.806" }
%"class.WTF::Vector.806" = type { %"class.WTF::VectorBuffer.807" }
%"class.WTF::VectorBuffer.807" = type { %"class.WTF::VectorBufferBase.808" }
%"class.WTF::VectorBufferBase.808" = type { %"class.blink::Persistent.625"*, i32, i32 }
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.573", %"class.blink::Persistent.578" }
%"class.WTF::HashMap.573" = type { %"class.WTF::HashTable.574" }
%"class.WTF::HashTable.574" = type <{ %"struct.WTF::KeyValuePair.577"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.577" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2779 }
%class.scoped_refptr.2779 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2780", %"class.WTF::Vector.820", %"class.WTF::Vector.2782", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2780" = type { %"class.base::RefCounted.2781" }
%"class.base::RefCounted.2781" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2782" = type { %"class.WTF::VectorBuffer.2783" }
%"class.WTF::VectorBuffer.2783" = type { %"class.WTF::VectorBufferBase.2784" }
%"class.WTF::VectorBufferBase.2784" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2785 }
%union.anon.2785 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent.578" = type { %"class.blink::PersistentBase.579" }
%"class.blink::PersistentBase.579" = type { %"class.blink::HeapHashMap.580"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.580" = type { %"class.WTF::HashMap.583" }
%"class.WTF::HashMap.583" = type { %"class.WTF::HashTable.584" }
%"class.WTF::HashTable.584" = type <{ %"struct.WTF::KeyValuePair.586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.586" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.625", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.825" }
%"class.WTF::Vector.825" = type { %"class.WTF::VectorBuffer.826" }
%"class.WTF::VectorBuffer.826" = type { %"class.WTF::VectorBufferBase.827" }
%"class.WTF::VectorBufferBase.827" = type { %class.scoped_refptr.828*, i32, i32 }
%class.scoped_refptr.828 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.674", [4 x i8] }>
%"class.blink::Persistent.831" = type { %"class.blink::PersistentBase.832" }
%"class.blink::PersistentBase.832" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.835" }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.837" = type { %class.scoped_refptr.838 }
%class.scoped_refptr.838 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.839", [4 x i8], %"class.blink::DataRef.841", %"class.blink::DataRef.845", %"class.blink::DataRef.866", %"class.blink::DataRef.875", %"class.blink::DataRef.887", %"class.blink::DataRef.891", %class.scoped_refptr.870, i32, [4 x i8] }>
%"class.WTF::RefCounted.839" = type { %"class.base::RefCounted.840" }
%"class.base::RefCounted.840" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.841" = type { %class.scoped_refptr.842 }
%class.scoped_refptr.842 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.843", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.843" = type { %"class.base::RefCounted.844" }
%"class.base::RefCounted.844" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.845" = type { %class.scoped_refptr.846 }
%class.scoped_refptr.846 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.847", %class.scoped_refptr.849, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.847" = type { %"class.base::RefCounted.848" }
%"class.base::RefCounted.848" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.849 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.850", %"class.std::__1::unique_ptr.856", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.671" }>
%"class.std::__1::unique_ptr.850" = type { %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.859, i32, %"struct.std::__1::atomic.376", %"struct.std::__1::atomic.376", i8, i8 }>
%class.sk_sp.859 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.860, %class.SkTDArray.861, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.136" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.860 = type { i8*, i32, i32 }
%class.SkTDArray.861 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.862 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.136", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.862 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.366", [3 x i8] }
%"class.blink::DataRef.866" = type { %class.scoped_refptr.867 }
%class.scoped_refptr.867 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.868", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.868" = type { %"class.base::RefCounted.869" }
%"class.base::RefCounted.869" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.870, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.875" = type { %class.scoped_refptr.876 }
%class.scoped_refptr.876 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.877", [4 x i8], %class.scoped_refptr.879, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.877" = type { %"class.base::RefCounted.878" }
%"class.base::RefCounted.878" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.879 = type { %"class.base::RefCountedData.880"* }
%"class.base::RefCountedData.880" = type { %"class.base::RefCountedThreadSafe.881", %"class.WTF::Vector.882" }
%"class.base::RefCountedThreadSafe.881" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.882" = type { %"class.WTF::VectorBuffer.883" }
%"class.WTF::VectorBuffer.883" = type { %"class.WTF::VectorBufferBase.884" }
%"class.WTF::VectorBufferBase.884" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.887" = type { %class.scoped_refptr.888 }
%class.scoped_refptr.888 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.889", %class.scoped_refptr.870, %class.scoped_refptr.870, %class.scoped_refptr.870 }
%"class.WTF::RefCounted.889" = type { %"class.base::RefCounted.890" }
%"class.base::RefCounted.890" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.891" = type { %class.scoped_refptr.892 }
%class.scoped_refptr.892 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.893", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.893" = type { %"class.base::RefCounted.894" }
%"class.base::RefCounted.894" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.870 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.871", %"class.blink::Persistent.873", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.871" = type { %"class.base::RefCounted.872" }
%"class.base::RefCounted.872" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.873" = type { %"class.blink::PersistentBase.874" }
%"class.blink::PersistentBase.874" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DataRef.895" = type { %class.scoped_refptr.896 }
%class.scoped_refptr.896 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.897", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.899" = type { %class.scoped_refptr.900 }
%class.scoped_refptr.900 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.901", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.901" = type { %"class.base::RefCounted.902" }
%"class.base::RefCounted.902" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.903" = type { %class.scoped_refptr.904 }
%class.scoped_refptr.904 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.905", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.907" = type { %class.scoped_refptr.908 }
%class.scoped_refptr.908 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.909", %class.scoped_refptr.911 }
%"class.WTF::RefCounted.909" = type { %"class.base::RefCounted.910" }
%"class.base::RefCounted.910" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.911 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1377", %"class.blink::StyleVariables", %class.scoped_refptr.911 }
%"class.WTF::RefCounted.1377" = type { %"class.base::RefCounted.1378" }
%"class.base::RefCounted.1378" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.912" = type { %"class.base::RefCounted.913" }
%"class.base::RefCounted.913" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.917" }
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.WTF::Vector.920"* }
%"class.WTF::Vector.920" = type { %"class.WTF::VectorBuffer.2789" }
%"class.WTF::VectorBuffer.2789" = type { %"class.WTF::VectorBufferBase.2790", [32 x i8] }
%"class.WTF::VectorBufferBase.2790" = type { %class.scoped_refptr.489*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.927", %"class.std::__1::unique_ptr.939" }
%"class.blink::HeapVector.927" = type { %"class.WTF::Vector.930" }
%"class.WTF::Vector.930" = type { %"class.WTF::VectorBuffer.931" }
%"class.WTF::VectorBuffer.931" = type { %"class.WTF::VectorBufferBase.932" }
%"class.WTF::VectorBufferBase.932" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.52", %"class.WTF::Vector.933" }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.934" }
%"class.WTF::VectorBuffer.934" = type { %"class.WTF::VectorBufferBase.935", [16 x i8] }
%"class.WTF::VectorBufferBase.935" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.951", i8, [7 x i8] }>
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.975", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.957", %"class.WTF::HashMap.957", %"class.WTF::HashMap.957", %"class.WTF::HashMap.962", %class.scoped_refptr.967, %class.scoped_refptr.974, %class.scoped_refptr.973, %"class.WTF::Vector.96", %"class.WTF::Vector.96", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.957" = type { %"class.WTF::HashTable.958" }
%"class.WTF::HashTable.958" = type <{ %"struct.WTF::KeyValuePair.961"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.961" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2753 }
%class.scoped_refptr.2753 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.968", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.970", %"union.blink::InvalidationSet::Backing.971", %"union.blink::InvalidationSet::Backing.972", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.968" = type { %"class.base::RefCounted.969" }
%"class.base::RefCounted.969" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.970" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.971" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.972" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.962" = type { %"class.WTF::HashTable.963" }
%"class.WTF::HashTable.963" = type <{ %"struct.WTF::KeyValuePair.966"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.966" = type opaque
%class.scoped_refptr.967 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.973, %class.scoped_refptr.973 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.968", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.970", %"union.blink::InvalidationSet::Backing.971", %"union.blink::InvalidationSet::Backing.972", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.974 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.973 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.979", %"class.blink::HeapHashMap.979", %"class.blink::HeapHashMap.979", %"class.blink::HeapHashMap.979", %"class.blink::HeapVector.986", %"class.blink::HeapVector.986", %"class.blink::HeapVector.986", %"class.blink::HeapVector.986", %"class.blink::HeapVector.986", %"class.blink::HeapVector.986", %"class.blink::HeapVector.986", %"class.blink::HeapVector.986", %"class.blink::HeapVector.986", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1022", %"class.blink::HeapVector.1030", %"class.blink::HeapVector.1038", %"class.blink::HeapVector.1055", %"class.blink::HeapVector.1063", %"class.blink::HeapVector.1071", %"class.blink::HeapVector.1084", %"class.WTF::Vector.1091", i32, %"class.blink::Member.1097" }
%"class.blink::HeapHashMap.979" = type { %"class.WTF::HashMap.982" }
%"class.WTF::HashMap.982" = type { %"class.WTF::HashTable.983" }
%"class.WTF::HashTable.983" = type <{ %"struct.WTF::KeyValuePair.985"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.985" = type { %"class.WTF::AtomicString", %"class.blink::Member.2767" }
%"class.blink::Member.2767" = type { %"class.blink::MemberBase.2768" }
%"class.blink::MemberBase.2768" = type { %"class.blink::HeapVector.986"* }
%"class.blink::HeapVector.986" = type { %"class.WTF::Vector.989" }
%"class.WTF::Vector.989" = type { %"class.WTF::VectorBuffer.990" }
%"class.WTF::VectorBuffer.990" = type { %"class.WTF::VectorBufferBase.991" }
%"class.WTF::VectorBufferBase.991" = type { %"class.blink::Member.992"*, i32, i32 }
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.996", i64, [4 x i32] }
%"class.blink::Member.996" = type { %"class.blink::MemberBase.997" }
%"class.blink::MemberBase.997" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.14", %"class.blink::Member.1017" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1017" = type { %"class.blink::MemberBase.1018" }
%"class.blink::MemberBase.1018" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1022" = type { %"class.WTF::Vector.1025" }
%"class.WTF::Vector.1025" = type { %"class.WTF::VectorBuffer.1026" }
%"class.WTF::VectorBuffer.1026" = type { %"class.WTF::VectorBufferBase.1027" }
%"class.WTF::VectorBufferBase.1027" = type { %"class.blink::Member.1028"*, i32, i32 }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.2763" }
%"class.blink::MemberBase.2763" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.14", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1030" = type { %"class.WTF::Vector.1033" }
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"class.blink::Member.1036"*, i32, i32 }
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.2764" }
%"class.blink::MemberBase.2764" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.14" }
%"class.blink::HeapVector.1038" = type { %"class.WTF::Vector.1041" }
%"class.WTF::Vector.1041" = type { %"class.WTF::VectorBuffer.1042" }
%"class.WTF::VectorBuffer.1042" = type { %"class.WTF::VectorBufferBase.1043" }
%"class.WTF::VectorBufferBase.1043" = type { %"class.blink::Member.1044"*, i32, i32 }
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1046", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1046" = type { %"class.WTF::Vector.1049" }
%"class.WTF::Vector.1049" = type { %"class.WTF::VectorBuffer.1050" }
%"class.WTF::VectorBuffer.1050" = type { %"class.WTF::VectorBufferBase.1051" }
%"class.WTF::VectorBufferBase.1051" = type { %"class.blink::Member.1052"*, i32, i32 }
%"class.blink::Member.1052" = type opaque
%"class.blink::HeapVector.1055" = type { %"class.WTF::Vector.1058" }
%"class.WTF::Vector.1058" = type { %"class.WTF::VectorBuffer.1059" }
%"class.WTF::VectorBuffer.1059" = type { %"class.WTF::VectorBufferBase.1060" }
%"class.WTF::VectorBufferBase.1060" = type { %"class.blink::Member.1061"*, i32, i32 }
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.2765" }
%"class.blink::MemberBase.2765" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.14" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::Member.1069"*, i32, i32 }
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.2766" }
%"class.blink::MemberBase.2766" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", i32, [4 x i8] }>
%"class.blink::HeapVector.1071" = type { %"class.WTF::Vector.1074" }
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { %"class.blink::Member.1077"*, i32, i32 }
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079", %"class.blink::Member.1079" }
%"class.blink::HeapVector.1084" = type { %"class.WTF::Vector.1087" }
%"class.WTF::Vector.1087" = type { %"class.WTF::VectorBuffer.1088" }
%"class.WTF::VectorBuffer.1088" = type { %"class.WTF::VectorBufferBase.1089" }
%"class.WTF::VectorBufferBase.1089" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.996", i32, i32 }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1094, i8, [7 x i8] }>
%class.scoped_refptr.1094 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1101", %"class.blink::HeapHashMap.1101", %"class.blink::HeapHashMap.1101", %"class.blink::HeapHashMap.1101" }
%"class.blink::HeapHashMap.1101" = type { %"class.WTF::HashMap.1104" }
%"class.WTF::HashMap.1104" = type { %"class.WTF::HashTable.1105" }
%"class.WTF::HashTable.1105" = type <{ %"struct.WTF::KeyValuePair.1107"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1107" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1108" }
%"class.blink::HeapHashMap.1108" = type { %"class.WTF::HashMap.1111" }
%"class.WTF::HashMap.1111" = type { %"class.WTF::HashTable.1112" }
%"class.WTF::HashTable.1112" = type <{ %"struct.WTF::KeyValuePair.1114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1114" = type { %"class.blink::Member.34", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2754", %"class.WTF::Vector.2754" }
%"class.WTF::Vector.2754" = type { %"class.WTF::VectorBuffer.2755" }
%"class.WTF::VectorBuffer.2755" = type { %"class.WTF::VectorBufferBase.2756" }
%"class.WTF::VectorBufferBase.2756" = type { %class.scoped_refptr.2753*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1115" = type { %"class.WTF::HashSet.1118" }
%"class.WTF::HashSet.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"class.blink::Member.52"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1123" = type { %"class.WTF::HashMap.1126" }
%"class.WTF::HashMap.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"struct.WTF::KeyValuePair.1129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1129" = type opaque
%"class.blink::HeapHashMap.1130" = type { %"class.WTF::HashMap.1133" }
%"class.WTF::HashMap.1133" = type { %"class.WTF::HashTable.1134" }
%"class.WTF::HashTable.1134" = type <{ %"struct.WTF::KeyValuePair.1136"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1136" = type opaque
%"class.std::__1::unique_ptr.1137" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1143" = type { %"class.WTF::Vector.1146" }
%"class.WTF::Vector.1146" = type { %"class.WTF::VectorBuffer.1147" }
%"class.WTF::VectorBuffer.1147" = type { %"class.WTF::VectorBufferBase.1148" }
%"class.WTF::VectorBufferBase.1148" = type { %"struct.std::__1::pair.1149"*, i32, i32 }
%"struct.std::__1::pair.1149" = type opaque
%"class.blink::HeapVector.425" = type { %"class.WTF::Vector.428" }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"struct.std::__1::pair.431"*, i32, i32 }
%"struct.std::__1::pair.431" = type opaque
%"class.blink::HeapHashSet.1151" = type { %"class.WTF::HashSet.1154" }
%"class.WTF::HashSet.1154" = type { %"class.WTF::HashTable.1155" }
%"class.WTF::HashTable.1155" = type <{ %"class.blink::WeakMember.1157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1157" = type { %"class.blink::MemberBase.79" }
%"class.blink::HeapHashMap.1158" = type { %"class.WTF::HashMap.1161" }
%"class.WTF::HashMap.1161" = type { %"class.WTF::HashTable.1162" }
%"class.WTF::HashTable.1162" = type <{ %"struct.WTF::KeyValuePair.1164"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1164" = type { %"class.WTF::AtomicString", %"class.blink::Member.1044" }
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1167" = type { %"class.WTF::HashMap.1170" }
%"class.WTF::HashMap.1170" = type { %"class.WTF::HashTable.1171" }
%"class.WTF::HashTable.1171" = type <{ %"struct.WTF::KeyValuePair.1173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1173" = type opaque
%class.scoped_refptr.1174 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.570 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.571", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.571" = type { %"class.base::RefCounted.572" }
%"class.base::RefCounted.572" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1175" = type { %"class.WTF::HashSet.1178" }
%"class.WTF::HashSet.1178" = type { %"class.WTF::HashTable.1179" }
%"class.WTF::HashTable.1179" = type <{ %"class.blink::Member.1181"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1181" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.72" }
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1188" = type { %"class.WTF::HashMap.1191" }
%"class.WTF::HashMap.1191" = type { %"class.WTF::HashTable.1192" }
%"class.WTF::HashTable.1192" = type <{ %"struct.WTF::KeyValuePair.1194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1194" = type opaque
%"class.WTF::Vector.1195" = type { %"class.WTF::VectorBuffer.1196" }
%"class.WTF::VectorBuffer.1196" = type { %"class.WTF::VectorBufferBase.1197" }
%"class.WTF::VectorBufferBase.1197" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1208" = type { %"class.WTF::Vector.1211" }
%"class.WTF::Vector.1211" = type { %"class.WTF::VectorBuffer.1212" }
%"class.WTF::VectorBuffer.1212" = type { %"class.WTF::VectorBufferBase.1213" }
%"class.WTF::VectorBufferBase.1213" = type { %"class.blink::Member.1214"*, i32, i32 }
%"class.blink::Member.1214" = type opaque
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1222" = type { %"class.WTF::HashSet.1225" }
%"class.WTF::HashSet.1225" = type { %"class.WTF::HashTable.1226" }
%"class.WTF::HashTable.1226" = type <{ %"class.blink::WeakMember.1228"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1228" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1229", i32, [4 x i8] }>
%"class.WTF::Vector.1229" = type { %"class.WTF::VectorBuffer.1230" }
%"class.WTF::VectorBuffer.1230" = type { %"class.WTF::VectorBufferBase.1231" }
%"class.WTF::VectorBufferBase.1231" = type { %"struct.std::__1::pair.1232"*, i32, i32 }
%"struct.std::__1::pair.1232" = type opaque
%"class.blink::Member.1235" = type { %"class.blink::MemberBase.1236" }
%"class.blink::MemberBase.1236" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.1238" }
%"class.WTF::VectorBuffer.1238" = type { %"class.WTF::VectorBufferBase.1239" }
%"class.WTF::VectorBufferBase.1239" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1242" = type { %"class.std::__1::__compressed_pair.1243" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1248" = type { %"class.WTF::Vector.1251" }
%"class.WTF::Vector.1251" = type { %"class.WTF::VectorBuffer.1252" }
%"class.WTF::VectorBuffer.1252" = type { %"class.WTF::VectorBufferBase.1253" }
%"class.WTF::VectorBufferBase.1253" = type { %"class.blink::Member.1254"*, i32, i32 }
%"class.blink::Member.1254" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.36" }
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1266" = type { %"class.WTF::HashTable.1267" }
%"class.WTF::HashTable.1267" = type <{ %"struct.WTF::KeyValuePair.1270"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1270" = type opaque
%"class.blink::Member.1271" = type { %"class.blink::MemberBase.1272" }
%"class.blink::MemberBase.1272" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.381", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.372, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.372 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.381" = type { %"class.blink::MemberBase.37" }
%"class.blink::HeapHashSet.1279" = type { %"class.WTF::HashSet.1282" }
%"class.WTF::HashSet.1282" = type { %"class.WTF::HashTable.1283" }
%"class.WTF::HashTable.1283" = type <{ %"class.blink::Member.1285"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1285" = type opaque
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.109", %"class.WTF::HashSet.109", %"class.WTF::HashSet.109", %"class.WTF::HashSet.109", %"class.WTF::HashSet.109", %"class.WTF::HashSet.109", i32, [4 x i8], %"class.WTF::HashMap.1305", %"class.WTF::HashMap.1305", %"class.WTF::HashMap.1305", %"class.WTF::HashMap.1305", %"class.WTF::HashMap.1305", %"class.WTF::HashMap.1305", %"class.WTF::HashMap.1305", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1305" = type { %"class.WTF::HashTable.1306" }
%"class.WTF::HashTable.1306" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1315" = type { %"class.blink::MemberBase.1316" }
%"class.blink::MemberBase.1316" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1321" = type { %"class.WTF::VectorBuffer.1322" }
%"class.WTF::VectorBuffer.1322" = type { %"class.WTF::VectorBufferBase.1323" }
%"class.WTF::VectorBufferBase.1323" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type opaque
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1345" = type { %"class.WTF::HashMap.1348" }
%"class.WTF::HashMap.1348" = type { %"class.WTF::HashTable.1349" }
%"class.WTF::HashTable.1349" = type <{ %"struct.WTF::KeyValuePair.1351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1351" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1352" }
%"class.blink::HeapHashSet.1352" = type { %"class.WTF::HashSet.1355" }
%"class.WTF::HashSet.1355" = type { %"class.WTF::HashTable.1356" }
%"class.WTF::HashTable.1356" = type <{ %"class.blink::WeakMember.1358"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1358" = type opaque
%"class.blink::Member.1359" = type { %"class.blink::MemberBase.1360" }
%"class.blink::MemberBase.1360" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.36", %"class.blink::HeapHashSet.1368", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1375", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1368" = type { %"class.WTF::HashSet.1371" }
%"class.WTF::HashSet.1371" = type { %"class.WTF::HashTable.1372" }
%"class.WTF::HashTable.1372" = type <{ %"class.blink::Member.1374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1374" = type opaque
%"class.blink::HeapTaskRunnerTimer.1375" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1376", { i64, i64 } }
%"class.blink::WeakMember.1376" = type { %"class.blink::MemberBase.1362" }
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1182", %"class.blink::Member.1636", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type { %"class.blink::HeapVector.1640", %"class.blink::Member.38", %"class.blink::WeakMember.1648", i32, [4 x i8], %"class.blink::HeapHashSet.1650" }
%"class.blink::HeapVector.1640" = type { %"class.WTF::Vector.1643" }
%"class.WTF::Vector.1643" = type { %"class.WTF::VectorBuffer.1644" }
%"class.WTF::VectorBuffer.1644" = type { %"class.WTF::VectorBufferBase.1645" }
%"class.WTF::VectorBufferBase.1645" = type { %"class.blink::Member.1646"*, i32, i32 }
%"class.blink::Member.1646" = type opaque
%"class.blink::WeakMember.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::ShadowRoot"* }
%"class.blink::HeapHashSet.1650" = type { %"class.WTF::HashSet.1653" }
%"class.WTF::HashSet.1653" = type { %"class.WTF::HashTable.1654" }
%"class.WTF::HashTable.1654" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::AssignedNodesOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1658" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1658" = type { %"class.v8::TracedReference.1659" }
%"class.v8::TracedReference.1659" = type { %"class.v8::BasicTracedReference.1660" }
%"class.v8::BasicTracedReference.1660" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper" = type { %"class.WTF::VectorBackedLinkedListConstIterator", %"struct.WTF::HashTableConstIteratorAdapter" }
%"class.WTF::VectorBackedLinkedListConstIterator" = type { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2907", %"class.blink::Member.2909", %"class.blink::Member.2911", %"class.blink::Member.2930", %"class.blink::Member.2932" }
%"class.blink::Member.2907" = type { %"class.blink::MemberBase.2908" }
%"class.blink::MemberBase.2908" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.489 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.489, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1676" }
%"class.blink::MemberBase.1676" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1677" }
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1680", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1686", %"class.std::__1::unique_ptr.1802", i8, %"class.absl::optional.1808", %class.scoped_refptr.1784, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1813" }
%"class.std::__1::unique_ptr.1680" = type { %"class.std::__1::__compressed_pair.1681" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.1682" }
%"struct.std::__1::__compressed_pair_elem.1682" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1689, %class.scoped_refptr.1689, %class.scoped_refptr.1689, %class.scoped_refptr.1689, %class.scoped_refptr.1689, %class.scoped_refptr.1689, %class.scoped_refptr.1724, %class.scoped_refptr.1740, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1741, %class.scoped_refptr.1774, %class.scoped_refptr.1775, %class.scoped_refptr.1775, %class.scoped_refptr.1775, %class.scoped_refptr.1775, %class.scoped_refptr.1775, %class.scoped_refptr.1775, %class.scoped_refptr.1775, %class.scoped_refptr.1775, %class.scoped_refptr.1798 }
%class.scoped_refptr.1689 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1706" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1690", i8, i8, %class.scoped_refptr.1692, i32, i32 }
%"class.WTF::RefCounted.1690" = type { %"class.base::RefCounted.1691" }
%"class.base::RefCounted.1691" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1692 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1699, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1700", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1693" }
%"class.std::__1::unique_ptr.1693" = type { %"class.std::__1::__compressed_pair.1694" }
%"class.std::__1::__compressed_pair.1694" = type { %"struct.std::__1::__compressed_pair_elem.1695" }
%"struct.std::__1::__compressed_pair_elem.1695" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1699 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1725", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1725" = type { %"class.WTF::RefCounted.1726", i8, i8, %class.scoped_refptr.1699, i32, i32 }
%"class.WTF::RefCounted.1726" = type { %"class.base::RefCounted.1727" }
%"class.base::RefCounted.1727" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1728" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1728" = type { %"class.absl::optional_internal::optional_data.1729" }
%"class.absl::optional_internal::optional_data.1729" = type { %"class.absl::optional_internal::optional_data_base.1730" }
%"class.absl::optional_internal::optional_data_base.1730" = type { %"class.absl::optional_internal::optional_data_dtor_base.1731" }
%"class.absl::optional_internal::optional_data_dtor_base.1731" = type { i8, %union.anon.1732 }
%union.anon.1732 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1733", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1733" = type { %"class.std::__1::__vector_base.1734" }
%"class.std::__1::__vector_base.1734" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1735" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1735" = type { %"struct.std::__1::__compressed_pair_elem.1736" }
%"struct.std::__1::__compressed_pair_elem.1736" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1700" = type { %"class.std::__1::__compressed_pair.1701" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1702" }
%"struct.std::__1::__compressed_pair_elem.1702" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1706" = type { %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1715", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1715" = type { %"class.std::__1::__compressed_pair.1716" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.1717" }
%"struct.std::__1::__compressed_pair_elem.1717" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1724 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1740 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1741 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1742" }
%"class.blink::PaintPropertyNode.1742" = type { %"class.WTF::RefCounted.1743", i8, i8, %class.scoped_refptr.1745, i32, i32 }
%"class.WTF::RefCounted.1743" = type { %"class.base::RefCounted.1744" }
%"class.base::RefCounted.1744" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1745 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1692, %class.scoped_refptr.1746, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1761", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1746 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1776" }
%"class.blink::PaintPropertyNode.1776" = type { %"class.WTF::RefCounted.1777", i8, i8, %class.scoped_refptr.1746, i32, i32 }
%"class.WTF::RefCounted.1777" = type { %"class.base::RefCounted.1778" }
%"class.base::RefCounted.1778" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1747" }
%"class.std::__1::vector.1747" = type { %"class.std::__1::__vector_base.1748" }
%"class.std::__1::__vector_base.1748" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1756" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1390, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1749", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.1749" = type { %"class.std::__1::__vector_base.1750" }
%"class.std::__1::__vector_base.1750" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1751" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1751" = type { %"struct.std::__1::__compressed_pair_elem.1752" }
%"struct.std::__1::__compressed_pair_elem.1752" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1756" = type { %"struct.std::__1::__compressed_pair_elem.1757" }
%"struct.std::__1::__compressed_pair_elem.1757" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1767" }
%"class.std::__1::vector.1767" = type { %"class.std::__1::__vector_base.1768" }
%"class.std::__1::__vector_base.1768" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { i32* }
%class.scoped_refptr.1774 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1775 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1787" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1692, %"class.absl::optional.1779", %class.scoped_refptr.1784, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1779" = type { %"class.absl::optional_internal::optional_data.1780" }
%"class.absl::optional_internal::optional_data.1780" = type { %"class.absl::optional_internal::optional_data_base.1781" }
%"class.absl::optional_internal::optional_data_base.1781" = type { %"class.absl::optional_internal::optional_data_dtor_base.1782" }
%"class.absl::optional_internal::optional_data_dtor_base.1782" = type { i8, [3 x i8], %union.anon.1783 }
%union.anon.1783 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1787" = type { %"class.std::__1::__compressed_pair.1788" }
%"class.std::__1::__compressed_pair.1788" = type { %"struct.std::__1::__compressed_pair_elem.1789" }
%"struct.std::__1::__compressed_pair_elem.1789" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1790", i32, [4 x i8] }>
%"class.WTF::Vector.1790" = type { %"class.WTF::VectorBuffer.1791" }
%"class.WTF::VectorBuffer.1791" = type { %"class.WTF::VectorBufferBase.1792" }
%"class.WTF::VectorBufferBase.1792" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1798 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1802" = type { %"class.std::__1::__compressed_pair.1803" }
%"class.std::__1::__compressed_pair.1803" = type { %"struct.std::__1::__compressed_pair_elem.1804" }
%"struct.std::__1::__compressed_pair_elem.1804" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1692, %class.scoped_refptr.1746, %class.scoped_refptr.1745 }
%"class.absl::optional.1808" = type { %"class.absl::optional_internal::optional_data.1809" }
%"class.absl::optional_internal::optional_data.1809" = type { %"class.absl::optional_internal::optional_data_base.1810" }
%"class.absl::optional_internal::optional_data_base.1810" = type { %"class.absl::optional_internal::optional_data_dtor_base.1811" }
%"class.absl::optional_internal::optional_data_dtor_base.1811" = type { i8, %union.anon.1812 }
%union.anon.1812 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1784 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1785", [4 x i8] }
%"class.WTF::RefCounted.1785" = type { %"class.base::RefCounted.1786" }
%"class.base::RefCounted.1786" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2909" = type { %"class.blink::MemberBase.2910" }
%"class.blink::MemberBase.2910" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2911" = type { %"class.blink::MemberBase.2912" }
%"class.blink::MemberBase.2912" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2915", %"class.blink::HeapHashSet.2924" }
%"class.blink::HeapVector.2915" = type { %"class.WTF::Vector.2918" }
%"class.WTF::Vector.2918" = type { %"class.WTF::VectorBuffer.2919" }
%"class.WTF::VectorBuffer.2919" = type { %"class.WTF::VectorBufferBase.2920" }
%"class.WTF::VectorBufferBase.2920" = type { %"class.blink::Member.2921"*, i32, i32 }
%"class.blink::Member.2921" = type { %"class.blink::MemberBase.2922" }
%"class.blink::MemberBase.2922" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2924" = type { %"class.WTF::HashSet.2927" }
%"class.WTF::HashSet.2927" = type { %"class.WTF::HashTable.2928" }
%"class.WTF::HashTable.2928" = type <{ %"class.blink::Member.2921"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2930" = type { %"class.blink::MemberBase.2931" }
%"class.blink::MemberBase.2931" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type { %"class.blink::WeakMember.1663", %"class.blink::WeakMember.1363", %"class.blink::WeakMember.1363", %"class.blink::WeakMember.1663" }
%"class.blink::WeakMember.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::HTMLSlotElement"* }
%"class.blink::Member.2932" = type { %"class.blink::MemberBase.2933" }
%"class.blink::MemberBase.2933" = type { %"class.blink::HeapHashSet.2934"* }
%"class.blink::HeapHashSet.2934" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1670", %"class.blink::Member.1670", %"class.blink::Member.1672", %"class.blink::Member.1674", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1665" }
%"class.absl::optional.1665" = type { %"class.absl::optional_internal::optional_data.1666" }
%"class.absl::optional_internal::optional_data.1666" = type { %"class.absl::optional_internal::optional_data_base.1667" }
%"class.absl::optional_internal::optional_data_base.1667" = type { %"class.absl::optional_internal::optional_data_dtor_base.1668" }
%"class.absl::optional_internal::optional_data_dtor_base.1668" = type { i8, %union.anon.1669 }
%union.anon.1669 = type { i64 }
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::Event"* }
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2939" }
%"class.WTF::Vector.2939" = type { %"class.WTF::VectorBuffer.2940" }
%"class.WTF::VectorBuffer.2940" = type { %"class.WTF::VectorBufferBase.2941", [64 x i8] }
%"class.WTF::VectorBufferBase.2941" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.555", %"class.blink::DataRef.635", %"class.blink::DataRef.639", %"class.blink::DataRef.837", %"class.blink::DataRef.895", %"class.blink::DataRef.899", %"class.blink::DataRef.903", %"class.blink::DataRef.907", [20 x i8], [4 x i8] }>
%"class.blink::WhitespaceAttacher" = type <{ %"class.blink::Element"*, %"class.blink::Text"*, i8, i8, [6 x i8] }>
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1822 }
%class.scoped_refptr.1822 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1823", %"class.WTF::String", %"class.std::__1::unique_ptr.1825" }
%"class.WTF::RefCounted.1823" = type { %"class.base::RefCounted.1824" }
%"class.base::RefCounted.1824" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1825" = type { %"class.std::__1::__compressed_pair.1826" }
%"class.std::__1::__compressed_pair.1826" = type { %"struct.std::__1::__compressed_pair_elem.1827" }
%"struct.std::__1::__compressed_pair_elem.1827" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1828", %"class.std::__1::unique_ptr.1839", %"class.WTF::Vector.1845", i8, i32 }
%"class.std::__1::unique_ptr.1828" = type { %"class.std::__1::__compressed_pair.1829" }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"class.WTF::Vector.1831"* }
%"class.WTF::Vector.1831" = type { %"class.WTF::VectorBuffer.1832" }
%"class.WTF::VectorBuffer.1832" = type { %"class.WTF::VectorBufferBase.1833" }
%"class.WTF::VectorBufferBase.1833" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1839" = type { %"class.std::__1::__compressed_pair.1840" }
%"class.std::__1::__compressed_pair.1840" = type { %"struct.std::__1::__compressed_pair_elem.1841" }
%"struct.std::__1::__compressed_pair_elem.1841" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1833", [32 x i8] }
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%"class.blink::StyleRecalcChange" = type <{ i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1857" = type { %"class.WTF::VectorBuffer.1858" }
%"class.WTF::VectorBuffer.1858" = type { %"class.WTF::VectorBufferBase.1859", [1280 x i8] }
%"class.WTF::VectorBufferBase.1859" = type { %"struct.blink::HTMLSlotElement::LCSArray"*, i32, i32 }
%"struct.blink::HTMLSlotElement::LCSArray" = type { %"class.WTF::Vector.1860" }
%"class.WTF::Vector.1860" = type { %"class.WTF::VectorBuffer.1861" }
%"class.WTF::VectorBuffer.1861" = type { %"class.WTF::VectorBufferBase.935", [64 x i8] }
%"class.WTF::Vector.1871" = type { %"class.WTF::VectorBuffer.1872" }
%"class.WTF::VectorBuffer.1872" = type { %"class.WTF::VectorBufferBase.1873", [2304 x i8] }
%"class.WTF::VectorBufferBase.1873" = type { %"struct.blink::HTMLSlotElement::LCSArray.1874"*, i32, i32 }
%"struct.blink::HTMLSlotElement::LCSArray.1874" = type { %"class.WTF::Vector.1875" }
%"class.WTF::Vector.1875" = type { %"class.WTF::VectorBuffer.1876" }
%"class.WTF::VectorBuffer.1876" = type { %"class.WTF::VectorBufferBase.1877", [128 x i8] }
%"class.WTF::VectorBufferBase.1877" = type { %"struct.std::__1::pair.1878"*, i32, i32 }
%"struct.std::__1::pair.1878" = type { i32, i32 }
%"class.blink::HeapHashMap.1884" = type { %"class.WTF::HashMap.1887" }
%"class.WTF::HashMap.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"struct.WTF::KeyValuePair.1890"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1890" = type <{ %"class.blink::Member", i32, [4 x i8] }>
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector", %"class.WTF::String"* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1914" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1902" }
%"class.blink::HeapVector.1902" = type { %"class.WTF::Vector.1905" }
%"class.WTF::Vector.1905" = type { %"class.WTF::VectorBuffer.1906" }
%"class.WTF::VectorBuffer.1906" = type { %"class.WTF::VectorBufferBase.1907", [32 x i8] }
%"class.WTF::VectorBufferBase.1907" = type { %"struct.std::__1::pair.1908"*, i32, i32 }
%"struct.std::__1::pair.1908" = type { %"class.WTF::AtomicString", %"class.blink::Member.1909" }
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::HeapVector.1911"* }
%"class.blink::HeapVector.1911" = type opaque
%"class.std::__1::unique_ptr.1914" = type { %"class.std::__1::__compressed_pair.1915" }
%"class.std::__1::__compressed_pair.1915" = type { %"struct.std::__1::__compressed_pair_elem.1916" }
%"struct.std::__1::__compressed_pair_elem.1916" = type { %"class.WTF::Vector.1917"* }
%"class.WTF::Vector.1917" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1895, %"class.blink::Member.1896", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1895 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1898" }
%"class.blink::Persistent.1898" = type { %"class.blink::PersistentBase.1899" }
%"class.blink::PersistentBase.1899" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1921", %"class.blink::Member.1923", %"class.blink::Member.1925", %"class.blink::Member.1927", i8, %"class.WTF::Vector.1929" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::Member.1921" = type { %"class.blink::MemberBase.1922" }
%"class.blink::MemberBase.1922" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2037", %"class.blink::Member.2039", %"class.blink::Member.2041", i8, i32, i8, i32, %"class.blink::Member.2043", %"class.blink::Member.1923", %"class.blink::FrameLifecycle", %"class.blink::Member.1921", %"class.blink::Member.1921", %"class.blink::Member.1921", %"class.blink::Member.1921", %"class.blink::Member.1921", %"class.blink::Member.1921", %"class.blink::Member.2045", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2056", i8, %"class.base::UnguessableToken", %"class.absl::optional.2058", %"class.absl::optional.2063", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1921", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2039" = type { %"class.blink::MemberBase.2040" }
%"class.blink::MemberBase.2040" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2041" = type { %"class.blink::MemberBase.2042" }
%"class.blink::MemberBase.2042" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.2043" = type { %"class.blink::MemberBase.2044" }
%"class.blink::MemberBase.2044" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2045" = type { %"class.blink::MemberBase.2046" }
%"class.blink::MemberBase.2046" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2075", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2083", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2097", %"class.blink::FrameLoader", %"class.blink::Member.2118", %"class.blink::Member.52", %"class.blink::Member.2120", %"class.blink::Member.2122", %"class.blink::Member.2124", %"class.blink::Member.2126", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2128", %class.scoped_refptr.2352, %"class.blink::Member.2353", %"class.blink::Member.2355", %"class.blink::Member.2366", %"class.blink::Member.2368", %"class.blink::Member.2370", %"class.blink::Member.2374", %"class.blink::Member.2376", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2380", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2386", %"class.std::__1::unique_ptr.2387", %"class.absl::optional.2063", i32, [4 x i8], %"class.std::__1::unique_ptr.2393", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2401", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2406", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2411", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2414", %"class.blink::Member.2416", %"class.blink::Member.2418", %"class.blink::Member.2420", %"class.mojo::StructPtr.2423", %"class.blink::Member.2432", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2434", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2075" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2076" }
%"class.blink::HeapHashMap.2076" = type { %"class.WTF::HashMap.2079" }
%"class.WTF::HashMap.2079" = type { %"class.WTF::HashTable.2080" }
%"class.WTF::HashTable.2080" = type <{ %"struct.WTF::KeyValuePair.2082"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2082" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2083" = type { %"class.std::__1::__compressed_pair.2084" }
%"class.std::__1::__compressed_pair.2084" = type { %"struct.std::__1::__compressed_pair_elem.2085" }
%"struct.std::__1::__compressed_pair_elem.2085" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2086", %"class.base::WeakPtrFactory.2091" }
%"class.WTF::HashMap.2086" = type { %"class.WTF::HashTable.2087" }
%"class.WTF::HashTable.2087" = type <{ %"struct.WTF::KeyValuePair.2090"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2090" = type opaque
%"class.base::WeakPtrFactory.2091" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2095" }
%"class.blink::Member.2095" = type { %"class.blink::MemberBase.2096" }
%"class.blink::MemberBase.2096" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2795" }
%"class.blink::WeakMember.2795" = type { %"class.blink::MemberBase.2796" }
%"class.blink::MemberBase.2796" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2797", i64, %"class.std::__1::map.2798", i8*, i64, %"class.base::WeakPtrFactory.2807" }
%"class.base::RepeatingCallback.2797" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2798" = type { %"class.std::__1::__tree.2799" }
%"class.std::__1::__tree.2799" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2800", %"class.std::__1::__compressed_pair.2804" }
%"class.std::__1::__compressed_pair.2800" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"class.std::__1::__compressed_pair.2804" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"class.base::WeakPtrFactory.2807" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2097" = type { %"class.WTF::HashSet.2100" }
%"class.WTF::HashSet.2100" = type { %"class.WTF::HashTable.2101" }
%"class.WTF::HashTable.2101" = type <{ %"class.blink::WeakMember.2103"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2103" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.2045", %"class.blink::Member.2104", %"class.blink::Member.2106", %"class.std::__1::unique_ptr.2108", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2114" }
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2106" = type { %"class.blink::MemberBase.2107" }
%"class.blink::MemberBase.2107" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2108" = type { %"class.std::__1::__compressed_pair.2109" }
%"class.std::__1::__compressed_pair.2109" = type { %"struct.std::__1::__compressed_pair_elem.2110" }
%"struct.std::__1::__compressed_pair_elem.2110" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.WTF::HashSet.2114" = type { %"class.WTF::HashTable.2115" }
%"class.WTF::HashTable.2115" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2118" = type { %"class.blink::MemberBase.2119" }
%"class.blink::MemberBase.2119" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2513", %"class.blink::Member.2045", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2518", i8, i32, %"class.blink::Color", %"class.absl::optional.2520", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2525", %"class.blink::Member.2527", %"class.blink::Member.2527", %"class.std::__1::unique_ptr.2530", i32, [4 x i8], %"class.WTF::HashSet.2533", %"class.blink::Member.2540", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2542", %"class.blink::HeapHashSet.2549", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2557", i8, %"class.blink::Member.2563", i8, i8, i32, %"class.blink::HeapLinkedHashSet.2565", %"class.blink::HeapLinkedHashSet.2579", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2593", i8, %"class.std::__1::unique_ptr.2599", %"class.std::__1::unique_ptr.2680", %"class.WTF::Vector.2686", i32, %class.scoped_refptr.2691, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2692", %"class.blink::Member.2694", %"class.blink::Member.2696", %"class.blink::HeapHashSet.2698", %"class.blink::HeapHashSet.2705", %"class.std::__1::unique_ptr.2712", %"class.std::__1::unique_ptr.2719", %"class.WTF::Vector.132" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2513" = type { %"class.WTF::HashTable.2514" }
%"class.WTF::HashTable.2514" = type <{ %class.scoped_refptr.2517*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2517 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2518" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2519", { i64, i64 } }
%"class.blink::WeakMember.2519" = type { %"class.blink::MemberBase.2119" }
%"class.absl::optional.2520" = type { %"class.absl::optional_internal::optional_data.2521" }
%"class.absl::optional_internal::optional_data.2521" = type { %"class.absl::optional_internal::optional_data_base.2522" }
%"class.absl::optional_internal::optional_data_base.2522" = type { %"class.absl::optional_internal::optional_data_dtor_base.2523" }
%"class.absl::optional_internal::optional_data_dtor_base.2523" = type { i8, %union.anon.2524 }
%union.anon.2524 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2525" = type { %"class.blink::MemberBase.2526" }
%"class.blink::MemberBase.2526" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2527" = type { %"class.blink::MemberBase.2528" }
%"class.blink::MemberBase.2528" = type { %"class.blink::HeapHashSet.2529"* }
%"class.blink::HeapHashSet.2529" = type opaque
%"class.std::__1::unique_ptr.2530" = type { %"class.std::__1::__compressed_pair.2531" }
%"class.std::__1::__compressed_pair.2531" = type { %"struct.std::__1::__compressed_pair_elem.2532" }
%"struct.std::__1::__compressed_pair_elem.2532" = type { %"class.WTF::HashSet.2533"* }
%"class.WTF::HashSet.2533" = type { %"class.WTF::HashTable.2534" }
%"class.WTF::HashTable.2534" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2540" = type { %"class.blink::MemberBase.2541" }
%"class.blink::MemberBase.2541" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2542" = type { %"class.WTF::HashSet.2545" }
%"class.WTF::HashSet.2545" = type { %"class.WTF::HashTable.2546" }
%"class.WTF::HashTable.2546" = type <{ %"class.blink::Member.2548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2548" = type opaque
%"class.blink::HeapHashSet.2549" = type { %"class.WTF::HashSet.2552" }
%"class.WTF::HashSet.2552" = type { %"class.WTF::HashTable.2553" }
%"class.WTF::HashTable.2553" = type <{ %"class.blink::Member.2555"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2555" = type { %"class.blink::MemberBase.2556" }
%"class.blink::MemberBase.2556" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2732", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2734", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.52" }
%"class.blink::Member.2732" = type { %"class.blink::MemberBase.2733" }
%"class.blink::MemberBase.2733" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2734" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2735", { i64, i64 } }
%"class.blink::WeakMember.2735" = type { %"class.blink::MemberBase.2556" }
%"class.std::__1::unique_ptr.2557" = type { %"class.std::__1::__compressed_pair.2558" }
%"class.std::__1::__compressed_pair.2558" = type { %"struct.std::__1::__compressed_pair_elem.2559" }
%"struct.std::__1::__compressed_pair_elem.2559" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2563" = type { %"class.blink::MemberBase.2564" }
%"class.blink::MemberBase.2564" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.2565" = type { %"class.WTF::LinkedHashSet.2568" }
%"class.WTF::LinkedHashSet.2568" = type { %"class.WTF::HashMap.2569", %"class.WTF::VectorBackedLinkedList.2573" }
%"class.WTF::HashMap.2569" = type { %"class.WTF::HashTable.2570" }
%"class.WTF::HashTable.2570" = type <{ %"struct.WTF::KeyValuePair.2572"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2572" = type opaque
%"class.WTF::VectorBackedLinkedList.2573" = type { %"class.WTF::Vector.2574", i32, i32 }
%"class.WTF::Vector.2574" = type { %"class.WTF::VectorBuffer.2575" }
%"class.WTF::VectorBuffer.2575" = type { %"class.WTF::VectorBufferBase.2576" }
%"class.WTF::VectorBufferBase.2576" = type { %"class.WTF::VectorBackedLinkedListNode.2577"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2577" = type opaque
%"class.blink::HeapLinkedHashSet.2579" = type { %"class.WTF::LinkedHashSet.2582" }
%"class.WTF::LinkedHashSet.2582" = type { %"class.WTF::HashMap.2583", %"class.WTF::VectorBackedLinkedList.2587" }
%"class.WTF::HashMap.2583" = type { %"class.WTF::HashTable.2584" }
%"class.WTF::HashTable.2584" = type <{ %"struct.WTF::KeyValuePair.2586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2586" = type opaque
%"class.WTF::VectorBackedLinkedList.2587" = type { %"class.WTF::Vector.2588", i32, i32 }
%"class.WTF::Vector.2588" = type { %"class.WTF::VectorBuffer.2589" }
%"class.WTF::VectorBuffer.2589" = type { %"class.WTF::VectorBufferBase.2590" }
%"class.WTF::VectorBufferBase.2590" = type { %"class.WTF::VectorBackedLinkedListNode.2591"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2591" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2593" = type { %"class.std::__1::__compressed_pair.2594" }
%"class.std::__1::__compressed_pair.2594" = type { %"struct.std::__1::__compressed_pair_elem.2595" }
%"struct.std::__1::__compressed_pair_elem.2595" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2599" = type { %"class.std::__1::__compressed_pair.2600" }
%"class.std::__1::__compressed_pair.2600" = type { %"struct.std::__1::__compressed_pair_elem.2601" }
%"struct.std::__1::__compressed_pair_elem.2601" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2602, %class.scoped_refptr.2602, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2657", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2662", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2602 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2603", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2610" }
%"class.WTF::RefCounted.2603" = type { %"class.base::RefCounted.2604" }
%"class.base::RefCounted.2604" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2605", i32, [4 x i8] }>
%"class.WTF::Vector.2605" = type { %"class.WTF::VectorBuffer.2606" }
%"class.WTF::VectorBuffer.2606" = type { %"class.WTF::VectorBufferBase.2607" }
%"class.WTF::VectorBufferBase.2607" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2610" = type { %"class.WTF::VectorBuffer.2611" }
%"class.WTF::VectorBuffer.2611" = type { %"class.WTF::VectorBufferBase.2612" }
%"class.WTF::VectorBufferBase.2612" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2613", %"class.std::__1::unique_ptr.2629", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2613" = type { %"class.std::__1::__compressed_pair.2614" }
%"class.std::__1::__compressed_pair.2614" = type { %"struct.std::__1::__compressed_pair_elem.2615" }
%"struct.std::__1::__compressed_pair_elem.2615" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2616", %"class.WTF::Vector.2621", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2616" = type { %"class.WTF::VectorBuffer.2617" }
%"class.WTF::VectorBuffer.2617" = type { %"class.WTF::VectorBufferBase.2618" }
%"class.WTF::VectorBufferBase.2618" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2621" = type { %"class.WTF::VectorBuffer.2622" }
%"class.WTF::VectorBuffer.2622" = type { %"class.WTF::VectorBufferBase.2623" }
%"class.WTF::VectorBufferBase.2623" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2629" = type { %"class.std::__1::__compressed_pair.2630" }
%"class.std::__1::__compressed_pair.2630" = type { %"struct.std::__1::__compressed_pair_elem.2631" }
%"struct.std::__1::__compressed_pair_elem.2631" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2632", %"class.absl::optional.2632" }
%"class.absl::optional.2632" = type { %"class.absl::optional_internal::optional_data.2633" }
%"class.absl::optional_internal::optional_data.2633" = type { %"class.absl::optional_internal::optional_data_base.2634" }
%"class.absl::optional_internal::optional_data_base.2634" = type { %"class.absl::optional_internal::optional_data_dtor_base.2635" }
%"class.absl::optional_internal::optional_data_dtor_base.2635" = type { i8, [3 x i8], %union.anon.2636 }
%union.anon.2636 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2610"*, %"class.absl::optional.2642", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2642" = type { %"class.absl::optional_internal::optional_data.2643" }
%"class.absl::optional_internal::optional_data.2643" = type { %"class.absl::optional_internal::optional_data_base.2644" }
%"class.absl::optional_internal::optional_data_base.2644" = type { %"class.absl::optional_internal::optional_data_dtor_base.2645" }
%"class.absl::optional_internal::optional_data_dtor_base.2645" = type { i8, %union.anon.2646 }
%union.anon.2646 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2647", %"class.WTF::Vector.2652" }
%"class.WTF::Vector.2647" = type { %"class.WTF::VectorBuffer.2648" }
%"class.WTF::VectorBuffer.2648" = type { %"class.WTF::VectorBufferBase.2649", [128 x i8] }
%"class.WTF::VectorBufferBase.2649" = type { i32*, i32, i32 }
%"class.WTF::Vector.2652" = type { %"class.WTF::VectorBuffer.2653" }
%"class.WTF::VectorBuffer.2653" = type { %"class.WTF::VectorBufferBase.2654", [128 x i8] }
%"class.WTF::VectorBufferBase.2654" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2657" = type { %"class.WTF::VectorBuffer.2658" }
%"class.WTF::VectorBuffer.2658" = type { %"class.WTF::VectorBufferBase.2659" }
%"class.WTF::VectorBufferBase.2659" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2662" = type { %"class.WTF::HashTable.2663" }
%"class.WTF::HashTable.2663" = type <{ %"struct.WTF::KeyValuePair.2666"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2666" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2667", %"class.WTF::Vector.2672" }
%"class.WTF::HashMap.2667" = type { %"class.WTF::HashTable.2668" }
%"class.WTF::HashTable.2668" = type <{ %"struct.WTF::KeyValuePair.2671"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2671" = type opaque
%"class.WTF::Vector.2672" = type { %"class.WTF::VectorBuffer.2673" }
%"class.WTF::VectorBuffer.2673" = type { %"class.WTF::VectorBufferBase.2674" }
%"class.WTF::VectorBufferBase.2674" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2680" = type { %"class.std::__1::__compressed_pair.2681" }
%"class.std::__1::__compressed_pair.2681" = type { %"struct.std::__1::__compressed_pair_elem.2682" }
%"struct.std::__1::__compressed_pair_elem.2682" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2686" = type { %"class.WTF::VectorBuffer.2687" }
%"class.WTF::VectorBuffer.2687" = type { %"class.WTF::VectorBufferBase.2688" }
%"class.WTF::VectorBufferBase.2688" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2691 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2692" = type { %"class.blink::MemberBase.2693" }
%"class.blink::MemberBase.2693" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2696" = type { %"class.blink::MemberBase.2697" }
%"class.blink::MemberBase.2697" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2698" = type { %"class.WTF::HashSet.2701" }
%"class.WTF::HashSet.2701" = type { %"class.WTF::HashTable.2702" }
%"class.WTF::HashTable.2702" = type <{ %"class.blink::WeakMember.2704"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2704" = type opaque
%"class.blink::HeapHashSet.2705" = type { %"class.WTF::HashSet.2708" }
%"class.WTF::HashSet.2708" = type { %"class.WTF::HashTable.2709" }
%"class.WTF::HashTable.2709" = type <{ %"class.blink::WeakMember.2711"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2711" = type opaque
%"class.std::__1::unique_ptr.2712" = type { %"class.std::__1::__compressed_pair.2713" }
%"class.std::__1::__compressed_pair.2713" = type { %"struct.std::__1::__compressed_pair_elem.2714" }
%"struct.std::__1::__compressed_pair_elem.2714" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2715" }
%"class.base::time_internal::TimeBase.2715" = type { i64 }
%"class.std::__1::unique_ptr.2719" = type { %"class.std::__1::__compressed_pair.2720" }
%"class.std::__1::__compressed_pair.2720" = type { %"struct.std::__1::__compressed_pair_elem.2721" }
%"struct.std::__1::__compressed_pair_elem.2721" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2722", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2722" = type { %"class.absl::optional_internal::optional_data.2723" }
%"class.absl::optional_internal::optional_data.2723" = type { %"class.absl::optional_internal::optional_data_base.2724" }
%"class.absl::optional_internal::optional_data_base.2724" = type { %"class.absl::optional_internal::optional_data_dtor_base.2725" }
%"class.absl::optional_internal::optional_data_dtor_base.2725" = type { i8, %union.anon.2726 }
%union.anon.2726 = type { %"class.base::Time" }
%"class.blink::Member.2120" = type { %"class.blink::MemberBase.2121" }
%"class.blink::MemberBase.2121" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2122" = type { %"class.blink::MemberBase.2123" }
%"class.blink::MemberBase.2123" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.2124" = type { %"class.blink::MemberBase.2125" }
%"class.blink::MemberBase.2125" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2126" = type { %"class.blink::MemberBase.2127" }
%"class.blink::MemberBase.2127" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2128" = type { %"class.blink::MemberBase.2129" }
%"class.blink::MemberBase.2129" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2132", %"class.blink::HeapListHashSet.2143", %"class.blink::HeapListHashSet.2154", %"class.blink::HeapListHashSet.2165", %"class.blink::HeapListHashSet.2176", %"class.blink::HeapListHashSet.2187", %"class.blink::HeapListHashSet.2198", %"class.blink::HeapListHashSet.2209", %"class.blink::HeapListHashSet.2220", %"class.blink::HeapListHashSet.2231", %"class.blink::HeapListHashSet.2242", %"class.blink::HeapListHashSet.2253", %"class.blink::HeapListHashSet.2264", %"class.blink::HeapListHashSet.2275", %"class.blink::HeapListHashSet.2286", %"class.blink::HeapListHashSet.2297", %"class.blink::HeapListHashSet.2308", %"class.blink::HeapListHashSet.2319", %"class.blink::HeapListHashSet.2330", %"class.blink::HeapListHashSet.2341" }
%"class.blink::HeapListHashSet.2132" = type { %"class.WTF::ListHashSet.base.2142", [7 x i8] }
%"class.WTF::ListHashSet.base.2142" = type <{ %"class.WTF::HashTable.2137", %"class.blink::Member.2139", %"class.blink::Member.2139", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2137" = type <{ %"class.blink::Member.2139"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::HeapListHashSetNode.2141"* }
%"class.blink::HeapListHashSetNode.2141" = type { %"class.blink::Member.2355", %"class.blink::Member.2139", %"class.blink::Member.2139" }
%"class.blink::HeapListHashSet.2143" = type { %"class.WTF::ListHashSet.base.2153", [7 x i8] }
%"class.WTF::ListHashSet.base.2153" = type <{ %"class.WTF::HashTable.2148", %"class.blink::Member.2150", %"class.blink::Member.2150", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2148" = type <{ %"class.blink::Member.2150"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::HeapListHashSetNode.2152"* }
%"class.blink::HeapListHashSetNode.2152" = type { %"class.blink::Member.2507", %"class.blink::Member.2150", %"class.blink::Member.2150" }
%"class.blink::Member.2507" = type { %"class.blink::MemberBase.2508" }
%"class.blink::MemberBase.2508" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2154" = type { %"class.WTF::ListHashSet.base.2164", [7 x i8] }
%"class.WTF::ListHashSet.base.2164" = type <{ %"class.WTF::HashTable.2159", %"class.blink::Member.2161", %"class.blink::Member.2161", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2159" = type <{ %"class.blink::Member.2161"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2161" = type { %"class.blink::MemberBase.2162" }
%"class.blink::MemberBase.2162" = type { %"class.blink::HeapListHashSetNode.2163"* }
%"class.blink::HeapListHashSetNode.2163" = type { %"class.blink::Member.2503", %"class.blink::Member.2161", %"class.blink::Member.2161" }
%"class.blink::Member.2503" = type { %"class.blink::MemberBase.2504" }
%"class.blink::MemberBase.2504" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2165" = type { %"class.WTF::ListHashSet.base.2175", [7 x i8] }
%"class.WTF::ListHashSet.base.2175" = type <{ %"class.WTF::HashTable.2170", %"class.blink::Member.2172", %"class.blink::Member.2172", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2170" = type <{ %"class.blink::Member.2172"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2172" = type { %"class.blink::MemberBase.2173" }
%"class.blink::MemberBase.2173" = type { %"class.blink::HeapListHashSetNode.2174"* }
%"class.blink::HeapListHashSetNode.2174" = type { %"class.blink::Member.2499", %"class.blink::Member.2172", %"class.blink::Member.2172" }
%"class.blink::Member.2499" = type { %"class.blink::MemberBase.2500" }
%"class.blink::MemberBase.2500" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2176" = type { %"class.WTF::ListHashSet.base.2186", [7 x i8] }
%"class.WTF::ListHashSet.base.2186" = type <{ %"class.WTF::HashTable.2181", %"class.blink::Member.2183", %"class.blink::Member.2183", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2181" = type <{ %"class.blink::Member.2183"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2183" = type { %"class.blink::MemberBase.2184" }
%"class.blink::MemberBase.2184" = type { %"class.blink::HeapListHashSetNode.2185"* }
%"class.blink::HeapListHashSetNode.2185" = type { %"class.blink::Member.2495", %"class.blink::Member.2183", %"class.blink::Member.2183" }
%"class.blink::Member.2495" = type { %"class.blink::MemberBase.2496" }
%"class.blink::MemberBase.2496" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2187" = type { %"class.WTF::ListHashSet.base.2197", [7 x i8] }
%"class.WTF::ListHashSet.base.2197" = type <{ %"class.WTF::HashTable.2192", %"class.blink::Member.2194", %"class.blink::Member.2194", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2192" = type <{ %"class.blink::Member.2194"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2194" = type { %"class.blink::MemberBase.2195" }
%"class.blink::MemberBase.2195" = type { %"class.blink::HeapListHashSetNode.2196"* }
%"class.blink::HeapListHashSetNode.2196" = type { %"class.blink::Member.2491", %"class.blink::Member.2194", %"class.blink::Member.2194" }
%"class.blink::Member.2491" = type { %"class.blink::MemberBase.2492" }
%"class.blink::MemberBase.2492" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2198" = type { %"class.WTF::ListHashSet.base.2208", [7 x i8] }
%"class.WTF::ListHashSet.base.2208" = type <{ %"class.WTF::HashTable.2203", %"class.blink::Member.2205", %"class.blink::Member.2205", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2203" = type <{ %"class.blink::Member.2205"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2205" = type { %"class.blink::MemberBase.2206" }
%"class.blink::MemberBase.2206" = type { %"class.blink::HeapListHashSetNode.2207"* }
%"class.blink::HeapListHashSetNode.2207" = type { %"class.blink::Member.2487", %"class.blink::Member.2205", %"class.blink::Member.2205" }
%"class.blink::Member.2487" = type { %"class.blink::MemberBase.2488" }
%"class.blink::MemberBase.2488" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2209" = type { %"class.WTF::ListHashSet.base.2219", [7 x i8] }
%"class.WTF::ListHashSet.base.2219" = type <{ %"class.WTF::HashTable.2214", %"class.blink::Member.2216", %"class.blink::Member.2216", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2214" = type <{ %"class.blink::Member.2216"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2216" = type { %"class.blink::MemberBase.2217" }
%"class.blink::MemberBase.2217" = type { %"class.blink::HeapListHashSetNode.2218"* }
%"class.blink::HeapListHashSetNode.2218" = type { %"class.blink::Member.2483", %"class.blink::Member.2216", %"class.blink::Member.2216" }
%"class.blink::Member.2483" = type { %"class.blink::MemberBase.2484" }
%"class.blink::MemberBase.2484" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2220" = type { %"class.WTF::ListHashSet.base.2230", [7 x i8] }
%"class.WTF::ListHashSet.base.2230" = type <{ %"class.WTF::HashTable.2225", %"class.blink::Member.2227", %"class.blink::Member.2227", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2225" = type <{ %"class.blink::Member.2227"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2227" = type { %"class.blink::MemberBase.2228" }
%"class.blink::MemberBase.2228" = type { %"class.blink::HeapListHashSetNode.2229"* }
%"class.blink::HeapListHashSetNode.2229" = type { %"class.blink::Member.2479", %"class.blink::Member.2227", %"class.blink::Member.2227" }
%"class.blink::Member.2479" = type { %"class.blink::MemberBase.2480" }
%"class.blink::MemberBase.2480" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2231" = type { %"class.WTF::ListHashSet.base.2241", [7 x i8] }
%"class.WTF::ListHashSet.base.2241" = type <{ %"class.WTF::HashTable.2236", %"class.blink::Member.2238", %"class.blink::Member.2238", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2236" = type <{ %"class.blink::Member.2238"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2238" = type { %"class.blink::MemberBase.2239" }
%"class.blink::MemberBase.2239" = type { %"class.blink::HeapListHashSetNode.2240"* }
%"class.blink::HeapListHashSetNode.2240" = type { %"class.blink::Member.2475", %"class.blink::Member.2238", %"class.blink::Member.2238" }
%"class.blink::Member.2475" = type { %"class.blink::MemberBase.2476" }
%"class.blink::MemberBase.2476" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2242" = type { %"class.WTF::ListHashSet.base.2252", [7 x i8] }
%"class.WTF::ListHashSet.base.2252" = type <{ %"class.WTF::HashTable.2247", %"class.blink::Member.2249", %"class.blink::Member.2249", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2247" = type <{ %"class.blink::Member.2249"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2249" = type { %"class.blink::MemberBase.2250" }
%"class.blink::MemberBase.2250" = type { %"class.blink::HeapListHashSetNode.2251"* }
%"class.blink::HeapListHashSetNode.2251" = type { %"class.blink::Member.2368", %"class.blink::Member.2249", %"class.blink::Member.2249" }
%"class.blink::HeapListHashSet.2253" = type { %"class.WTF::ListHashSet.base.2263", [7 x i8] }
%"class.WTF::ListHashSet.base.2263" = type <{ %"class.WTF::HashTable.2258", %"class.blink::Member.2260", %"class.blink::Member.2260", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2258" = type <{ %"class.blink::Member.2260"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2260" = type { %"class.blink::MemberBase.2261" }
%"class.blink::MemberBase.2261" = type { %"class.blink::HeapListHashSetNode.2262"* }
%"class.blink::HeapListHashSetNode.2262" = type { %"class.blink::Member.2469", %"class.blink::Member.2260", %"class.blink::Member.2260" }
%"class.blink::Member.2469" = type { %"class.blink::MemberBase.2470" }
%"class.blink::MemberBase.2470" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2264" = type { %"class.WTF::ListHashSet.base.2274", [7 x i8] }
%"class.WTF::ListHashSet.base.2274" = type <{ %"class.WTF::HashTable.2269", %"class.blink::Member.2271", %"class.blink::Member.2271", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2269" = type <{ %"class.blink::Member.2271"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2271" = type { %"class.blink::MemberBase.2272" }
%"class.blink::MemberBase.2272" = type { %"class.blink::HeapListHashSetNode.2273"* }
%"class.blink::HeapListHashSetNode.2273" = type { %"class.blink::Member.2465", %"class.blink::Member.2271", %"class.blink::Member.2271" }
%"class.blink::Member.2465" = type { %"class.blink::MemberBase.2466" }
%"class.blink::MemberBase.2466" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2275" = type { %"class.WTF::ListHashSet.base.2285", [7 x i8] }
%"class.WTF::ListHashSet.base.2285" = type <{ %"class.WTF::HashTable.2280", %"class.blink::Member.2282", %"class.blink::Member.2282", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2280" = type <{ %"class.blink::Member.2282"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2282" = type { %"class.blink::MemberBase.2283" }
%"class.blink::MemberBase.2283" = type { %"class.blink::HeapListHashSetNode.2284"* }
%"class.blink::HeapListHashSetNode.2284" = type { %"class.blink::Member.2461", %"class.blink::Member.2282", %"class.blink::Member.2282" }
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2286" = type { %"class.WTF::ListHashSet.base.2296", [7 x i8] }
%"class.WTF::ListHashSet.base.2296" = type <{ %"class.WTF::HashTable.2291", %"class.blink::Member.2293", %"class.blink::Member.2293", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2291" = type <{ %"class.blink::Member.2293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2293" = type { %"class.blink::MemberBase.2294" }
%"class.blink::MemberBase.2294" = type { %"class.blink::HeapListHashSetNode.2295"* }
%"class.blink::HeapListHashSetNode.2295" = type { %"class.blink::Member.2457", %"class.blink::Member.2293", %"class.blink::Member.2293" }
%"class.blink::Member.2457" = type { %"class.blink::MemberBase.2458" }
%"class.blink::MemberBase.2458" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2297" = type { %"class.WTF::ListHashSet.base.2307", [7 x i8] }
%"class.WTF::ListHashSet.base.2307" = type <{ %"class.WTF::HashTable.2302", %"class.blink::Member.2304", %"class.blink::Member.2304", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2302" = type <{ %"class.blink::Member.2304"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2304" = type { %"class.blink::MemberBase.2305" }
%"class.blink::MemberBase.2305" = type { %"class.blink::HeapListHashSetNode.2306"* }
%"class.blink::HeapListHashSetNode.2306" = type { %"class.blink::Member.2453", %"class.blink::Member.2304", %"class.blink::Member.2304" }
%"class.blink::Member.2453" = type { %"class.blink::MemberBase.2454" }
%"class.blink::MemberBase.2454" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2308" = type { %"class.WTF::ListHashSet.base.2318", [7 x i8] }
%"class.WTF::ListHashSet.base.2318" = type <{ %"class.WTF::HashTable.2313", %"class.blink::Member.2315", %"class.blink::Member.2315", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2313" = type <{ %"class.blink::Member.2315"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2315" = type { %"class.blink::MemberBase.2316" }
%"class.blink::MemberBase.2316" = type { %"class.blink::HeapListHashSetNode.2317"* }
%"class.blink::HeapListHashSetNode.2317" = type { %"class.blink::Member.2449", %"class.blink::Member.2315", %"class.blink::Member.2315" }
%"class.blink::Member.2449" = type { %"class.blink::MemberBase.2450" }
%"class.blink::MemberBase.2450" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2319" = type { %"class.WTF::ListHashSet.base.2329", [7 x i8] }
%"class.WTF::ListHashSet.base.2329" = type <{ %"class.WTF::HashTable.2324", %"class.blink::Member.2326", %"class.blink::Member.2326", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2324" = type <{ %"class.blink::Member.2326"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2326" = type { %"class.blink::MemberBase.2327" }
%"class.blink::MemberBase.2327" = type { %"class.blink::HeapListHashSetNode.2328"* }
%"class.blink::HeapListHashSetNode.2328" = type { %"class.blink::Member.2445", %"class.blink::Member.2326", %"class.blink::Member.2326" }
%"class.blink::Member.2445" = type { %"class.blink::MemberBase.2446" }
%"class.blink::MemberBase.2446" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2330" = type { %"class.WTF::ListHashSet.base.2340", [7 x i8] }
%"class.WTF::ListHashSet.base.2340" = type <{ %"class.WTF::HashTable.2335", %"class.blink::Member.2337", %"class.blink::Member.2337", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2335" = type <{ %"class.blink::Member.2337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2337" = type { %"class.blink::MemberBase.2338" }
%"class.blink::MemberBase.2338" = type { %"class.blink::HeapListHashSetNode.2339"* }
%"class.blink::HeapListHashSetNode.2339" = type { %"class.blink::Member.2370", %"class.blink::Member.2337", %"class.blink::Member.2337" }
%"class.blink::HeapListHashSet.2341" = type { %"class.WTF::ListHashSet.base.2351", [7 x i8] }
%"class.WTF::ListHashSet.base.2351" = type <{ %"class.WTF::HashTable.2346", %"class.blink::Member.2348", %"class.blink::Member.2348", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2346" = type <{ %"class.blink::Member.2348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::HeapListHashSetNode.2350"* }
%"class.blink::HeapListHashSetNode.2350" = type { %"class.blink::Member.2353", %"class.blink::Member.2348", %"class.blink::Member.2348" }
%class.scoped_refptr.2352 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2353" = type { %"class.blink::MemberBase.2354" }
%"class.blink::MemberBase.2354" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2355" = type { %"class.blink::MemberBase.2356" }
%"class.blink::MemberBase.2356" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.2045", %"class.WTF::Vector.1321", i32, [4 x i8], %"class.blink::HeapHashMap.2359", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.2359" = type { %"class.WTF::HashMap.2362" }
%"class.WTF::HashMap.2362" = type { %"class.WTF::HashTable.2363" }
%"class.WTF::HashTable.2363" = type <{ %"struct.WTF::KeyValuePair.2365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2365" = type opaque
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2368" = type { %"class.blink::MemberBase.2369" }
%"class.blink::MemberBase.2369" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2370" = type { %"class.blink::MemberBase.2371" }
%"class.blink::MemberBase.2371" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2376" = type { %"class.blink::MemberBase.2377" }
%"class.blink::MemberBase.2377" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2378" }
%"class.blink::Member.2378" = type { %"class.blink::MemberBase.2379" }
%"class.blink::MemberBase.2379" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2810" }
%"class.mojo::Remote.2810" = type { %"class.mojo::internal::InterfacePtrState.2811" }
%"class.mojo::internal::InterfacePtrState.2811" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2812" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1934, %"class.std::__1::unique_ptr.1537", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1551, i32 }>
%class.scoped_refptr.1934 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1551, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1993", %"class.absl::optional.1998", %"class.absl::optional.1951", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2018", i8, [7 x i8], %class.scoped_refptr.1551, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1564" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1551, %"class.std::__1::unique_ptr.1935", %"class.absl::optional.1945", %"struct.std::__1::atomic.366", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1951", %"class.std::__1::unique_ptr.1956", i8, i64, %class.scoped_refptr.1990, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1991", %"class.base::WeakPtrFactory.1992" }
%"class.std::__1::unique_ptr.1935" = type { %"class.std::__1::__compressed_pair.1936" }
%"class.std::__1::__compressed_pair.1936" = type { %"struct.std::__1::__compressed_pair_elem.1937" }
%"struct.std::__1::__compressed_pair_elem.1937" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1551, i8, %"class.mojo::ScopedHandleBase.1938", %class.scoped_refptr.1939, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1940", i8*, %"class.base::WeakPtrFactory.1941" }
%"class.mojo::ScopedHandleBase.1938" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1939 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1940" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1941" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1945" = type { %"class.absl::optional_internal::optional_data.1946" }
%"class.absl::optional_internal::optional_data.1946" = type { %"class.absl::optional_internal::optional_data_base.1947" }
%"class.absl::optional_internal::optional_data_base.1947" = type { %"class.absl::optional_internal::optional_data_dtor_base.1948" }
%"class.absl::optional_internal::optional_data_dtor_base.1948" = type { i8, %union.anon.1949 }
%union.anon.1949 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1950", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1950" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1956" = type { %"class.std::__1::__compressed_pair.1957" }
%"class.std::__1::__compressed_pair.1957" = type { %"struct.std::__1::__compressed_pair_elem.1958" }
%"struct.std::__1::__compressed_pair_elem.1958" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1959", i8, i64, %class.scoped_refptr.1960, %class.scoped_refptr.1985 }
%"class.base::RepeatingCallback.1959" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1960 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1961", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1963", %"class.std::__1::map.1974", i8, [7 x i8] }>
%"class.base::RefCounted.1961" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1962 }
%class.scoped_refptr.1962 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1963" = type { %"class.std::__1::__tree.1964" }
%"class.std::__1::__tree.1964" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1965", %"class.std::__1::__compressed_pair.1969" }
%"class.std::__1::__compressed_pair.1965" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"class.std::__1::__compressed_pair.1969" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"class.std::__1::map.1974" = type { %"class.std::__1::__tree.1975" }
%"class.std::__1::__tree.1975" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1976", %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1976" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%class.scoped_refptr.1985 = type { %"class.base::RefCountedData.1986"* }
%"class.base::RefCountedData.1986" = type opaque
%class.scoped_refptr.1990 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1991" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1992" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1993" = type { %"class.absl::optional_internal::optional_data.1994" }
%"class.absl::optional_internal::optional_data.1994" = type { %"class.absl::optional_internal::optional_data_base.1995" }
%"class.absl::optional_internal::optional_data_base.1995" = type { %"class.absl::optional_internal::optional_data_dtor_base.1996" }
%"class.absl::optional_internal::optional_data_dtor_base.1996" = type { i8, %union.anon.1997 }
%union.anon.1997 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1998" = type { %"class.absl::optional_internal::optional_data.1999" }
%"class.absl::optional_internal::optional_data.1999" = type { %"class.absl::optional_internal::optional_data_base.2000" }
%"class.absl::optional_internal::optional_data_base.2000" = type { %"class.absl::optional_internal::optional_data_dtor_base.2001" }
%"class.absl::optional_internal::optional_data_dtor_base.2001" = type { i8, [7 x i8], %union.anon.2002 }
%union.anon.2002 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1951" = type { %"class.absl::optional_internal::optional_data.1952" }
%"class.absl::optional_internal::optional_data.1952" = type { %"class.absl::optional_internal::optional_data_base.1953" }
%"class.absl::optional_internal::optional_data_base.1953" = type { %"class.absl::optional_internal::optional_data_dtor_base.1954" }
%"class.absl::optional_internal::optional_data_dtor_base.1954" = type { i8, %union.anon.1955 }
%union.anon.1955 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2003 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2003 = type { %"class.std::__1::map.2006" }
%"class.std::__1::map.2006" = type { %"class.std::__1::__tree.2007" }
%"class.std::__1::__tree.2007" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2008", %"class.std::__1::__compressed_pair.2012" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"class.std::__1::__compressed_pair.2012" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2017"*, i64 }
%"class.std::__1::unique_ptr.2017" = type opaque
%"class.std::__1::map.2018" = type { %"class.std::__1::__tree.2019" }
%"class.std::__1::__tree.2019" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2020", %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2812" = type { %"class.std::__1::__compressed_pair.2813" }
%"class.std::__1::__compressed_pair.2813" = type { %"struct.std::__1::__compressed_pair_elem.2814" }
%"struct.std::__1::__compressed_pair_elem.2814" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2380" = type { %"class.std::__1::__compressed_pair.2381" }
%"class.std::__1::__compressed_pair.2381" = type { %"struct.std::__1::__compressed_pair_elem.2382" }
%"struct.std::__1::__compressed_pair_elem.2382" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2386" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2387" = type { %"class.std::__1::__compressed_pair.2388" }
%"class.std::__1::__compressed_pair.2388" = type { %"struct.std::__1::__compressed_pair_elem.2389" }
%"struct.std::__1::__compressed_pair_elem.2389" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2393" = type { %"class.std::__1::__compressed_pair.2394" }
%"class.std::__1::__compressed_pair.2394" = type { %"struct.std::__1::__compressed_pair_elem.2395" }
%"struct.std::__1::__compressed_pair_elem.2395" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2399" }
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2820" }
%"class.mojo::AssociatedRemote.2820" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2821" }
%"class.mojo::internal::AssociatedInterfacePtrState.2821" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2822" }
%"class.std::__1::unique_ptr.2822" = type { %"class.std::__1::__compressed_pair.2823" }
%"class.std::__1::__compressed_pair.2823" = type { %"struct.std::__1::__compressed_pair_elem.2824" }
%"struct.std::__1::__compressed_pair_elem.2824" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2401" = type { %"class.blink::Member.2402" }
%"class.blink::Member.2402" = type { %"class.blink::MemberBase.2403" }
%"class.blink::MemberBase.2403" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2830" }
%"class.mojo::AssociatedRemote.2830" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2831" }
%"class.mojo::internal::AssociatedInterfacePtrState.2831" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2832" }
%"class.std::__1::unique_ptr.2832" = type { %"class.std::__1::__compressed_pair.2833" }
%"class.std::__1::__compressed_pair.2833" = type { %"struct.std::__1::__compressed_pair_elem.2834" }
%"struct.std::__1::__compressed_pair_elem.2834" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2404" }
%"class.blink::Member.2404" = type { %"class.blink::MemberBase.2405" }
%"class.blink::MemberBase.2405" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2045", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2840" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1537" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2840" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2406" = type { %"class.blink::Member.2407" }
%"class.blink::Member.2407" = type { %"class.blink::MemberBase.2408" }
%"class.blink::MemberBase.2408" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2843", %"class.blink::Member.2045", %"class.mojo::AssociatedReceiver.2844" }
%"class.blink::ThreadState::PrefinalizerRegistration.2843" = type { i8 }
%"class.mojo::AssociatedReceiver.2844" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2845" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2845" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2409" }
%"class.blink::Member.2409" = type { %"class.blink::MemberBase.2410" }
%"class.blink::MemberBase.2410" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2848", %"class.blink::Member.2045", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2848" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1934, %"class.std::__1::unique_ptr.1537", %"class.base::WeakPtrFactory.2849" }
%"class.base::WeakPtrFactory.2849" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2411" = type { %"class.blink::Member.2412" }
%"class.blink::Member.2412" = type { %"class.blink::MemberBase.2413" }
%"class.blink::MemberBase.2413" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2852", %"class.blink::Member.2045", %"class.mojo::AssociatedReceiver.2853" }
%"class.blink::ThreadState::PrefinalizerRegistration.2852" = type { i8 }
%"class.mojo::AssociatedReceiver.2853" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2854" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2854" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2414" = type { %"class.blink::MemberBase.2415" }
%"class.blink::MemberBase.2415" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2416" = type { %"class.blink::MemberBase.2417" }
%"class.blink::MemberBase.2417" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2420" = type { %"class.blink::MemberBase.2421" }
%"class.blink::MemberBase.2421" = type { %"class.blink::HeapHashMap.2422"* }
%"class.blink::HeapHashMap.2422" = type opaque
%"class.mojo::StructPtr.2423" = type { %"class.std::__1::unique_ptr.2424" }
%"class.std::__1::unique_ptr.2424" = type { %"class.std::__1::__compressed_pair.2425" }
%"class.std::__1::__compressed_pair.2425" = type { %"struct.std::__1::__compressed_pair_elem.2426" }
%"struct.std::__1::__compressed_pair_elem.2426" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2427", %"class.mojo::InlinedStructPtr.2428" }
%"class.mojo::InlinedStructPtr.2427" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2428" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2432" = type { %"class.blink::MemberBase.2433" }
%"class.blink::MemberBase.2433" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2434" = type { %"class.absl::optional_internal::optional_data.2435" }
%"class.absl::optional_internal::optional_data.2435" = type { %"class.absl::optional_internal::optional_data_base.2436" }
%"class.absl::optional_internal::optional_data_base.2436" = type { %"class.absl::optional_internal::optional_data_dtor_base.2437" }
%"class.absl::optional_internal::optional_data_dtor_base.2437" = type { i8, %union.anon.2438 }
%union.anon.2438 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1921", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2047" }
%"class.base::internal::flat_tree.2047" = type { %"class.std::__1::vector.2048" }
%"class.std::__1::vector.2048" = type { %"class.std::__1::__vector_base.2049" }
%"class.std::__1::__vector_base.2049" = type { %"struct.std::__1::pair.2050"*, %"struct.std::__1::pair.2050"*, %"class.std::__1::__compressed_pair.2051" }
%"struct.std::__1::pair.2050" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2051" = type { %"struct.std::__1::__compressed_pair_elem.2052" }
%"struct.std::__1::__compressed_pair_elem.2052" = type { %"struct.std::__1::pair.2050"* }
%"class.blink::Member.2056" = type { %"class.blink::MemberBase.2057" }
%"class.blink::MemberBase.2057" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2058" = type { %"class.absl::optional_internal::optional_data.2059" }
%"class.absl::optional_internal::optional_data.2059" = type { %"class.absl::optional_internal::optional_data_base.2060" }
%"class.absl::optional_internal::optional_data_base.2060" = type { %"class.absl::optional_internal::optional_data_dtor_base.2061" }
%"class.absl::optional_internal::optional_data_dtor_base.2061" = type { i8, %union.anon.2062 }
%union.anon.2062 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.2063" = type { %"class.absl::optional_internal::optional_data.2064" }
%"class.absl::optional_internal::optional_data.2064" = type { %"class.absl::optional_internal::optional_data_base.2065" }
%"class.absl::optional_internal::optional_data_base.2065" = type { %"class.absl::optional_internal::optional_data_dtor_base.2066" }
%"class.absl::optional_internal::optional_data_dtor_base.2066" = type { i8, %union.anon.2067 }
%union.anon.2067 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2068" }
%"class.blink::HeapHashSet.2068" = type { %"class.WTF::HashSet.2071" }
%"class.WTF::HashSet.2071" = type { %"class.WTF::HashTable.2072" }
%"class.WTF::HashTable.2072" = type <{ %"class.blink::WeakMember.2074"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2074" = type opaque
%"class.blink::Member.1923" = type { %"class.blink::MemberBase.1924" }
%"class.blink::MemberBase.1924" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1927" = type { %"class.blink::MemberBase.1928" }
%"class.blink::MemberBase.1928" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1929" = type { %"class.WTF::VectorBuffer.1930" }
%"class.WTF::VectorBuffer.1930" = type { %"class.WTF::VectorBufferBase.1931" }
%"class.WTF::VectorBufferBase.1931" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.1932", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.1932" = type { %"class.base::StrongAlias.1933" }
%"class.base::StrongAlias.1933" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2027" }
%"class.std::__1::unique_ptr.2027" = type { %"class.std::__1::__compressed_pair.2028" }
%"class.std::__1::__compressed_pair.2028" = type { %"struct.std::__1::__compressed_pair_elem.2029" }
%"struct.std::__1::__compressed_pair_elem.2029" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2736", i8, [7 x i8] }>
%"class.blink::Member.2736" = type { %"class.blink::MemberBase.2737" }
%"class.blink::MemberBase.2737" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.WTF::HashMap.2738" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.2739", %"class.blink::HeapVector.2744", i8, [7 x i8] }>
%"class.blink::Member.2739" = type { %"class.blink::MemberBase.2740" }
%"class.blink::MemberBase.2740" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.2742" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2741" }
%"class.blink::WeakMember.2741" = type { %"class.blink::MemberBase.146" }
%"class.blink::Member.2742" = type { %"class.blink::MemberBase.2743" }
%"class.blink::MemberBase.2743" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.2744" = type { %"class.WTF::Vector.2747" }
%"class.WTF::Vector.2747" = type { %"class.WTF::VectorBuffer.2748" }
%"class.WTF::VectorBuffer.2748" = type { %"class.WTF::VectorBufferBase.2749", [96 x i8] }
%"class.WTF::VectorBufferBase.2749" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1079" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::FormAssociated" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking.2901" = type { i8 }
%"class.blink::HeapVectorBacking.2956" = type { i8 }
%"class.blink::HeapHashTableBacking.2976" = type { i8 }

$_ZN5blink15HTMLSlotElement51FillLongestCommonSubsequenceDynamicProgrammingTableINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEN3WTF6VectorINS0_8LCSArrayIjLj16EEELj16ENS7_18PartitionAllocatorEEENS8_INS9_INSt3__14pairIjjEELj16EEELj16ESB_EEEEvRKT_SK_RT0_RT1_ = comdat any

$_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_ = comdat any

$_ZN5blink7ElementD2Ev = comdat any

$_ZN5blink15HTMLSlotElementD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink15HTMLSlotElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEEC2ERKS8_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS4_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_EC2ERKS8_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEES0_EEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSlotElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRNS1_6MemberIS3_EEEENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIRNS1_6MemberIS3_EEEENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERNS1_6MemberIS3_EERKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE = comdat any

$_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4swapERSG_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEaSERKS6_ = comdat any

$_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayINSt3__14pairIjjEELj16EEELj16ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIjjEELj16ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_4NodeEEENS_12KeyValuePairIS5_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSC_IjEEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink26WeakCallbackMethodDelegateIN3WTF22VectorBackedLinkedListINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEEXadL_ZNS7_21ProcessCustomWeaknessIS6_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSB_14LivenessBrokerEEEE10TrampolineERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE21ProcessCustomWeaknessIS5_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSA_14LivenessBrokerE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink15HTMLSlotElementE = hidden unnamed_addr constant { [172 x i8*], [3 x i8*] } { [172 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7ElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSlotElement"*)* @_ZN5blink15HTMLSlotElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLSlotElement"*, %"class.blink::Visitor"*)* @_ZNK5blink15HTMLSlotElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLSlotElement"*)* @_ZNK5blink15HTMLSlotElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::HTMLSlotElement"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink15HTMLSlotElement16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::HTMLSlotElement"*, i1)* @_ZN5blink15HTMLSlotElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLSlotElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink15HTMLSlotElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLSlotElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink15HTMLSlotElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Event"*)* @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Document"*)* @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLSlotElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink15HTMLSlotElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2738"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLSlotElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink15HTMLSlotElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, %"class.blink::StyleRecalcContext"*)* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)] }, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name = internal global i64 0, align 8
@_ZZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name = internal global i64 0, align 8
@_ZN5blink16event_type_names11kSlotchangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E11s_lcs_table = internal unnamed_addr global %"class.WTF::StaticSingleton.1852" zeroinitializer, align 8
@_ZGVZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E11s_lcs_table = internal global i64 0, align 8
@_ZZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E17s_backtrack_table = internal unnamed_addr global %"class.WTF::StaticSingleton.1866" zeroinitializer, align 8
@_ZGVZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E17s_backtrack_table = internal global i64 0, align 8
@.str = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.6 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.12 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [429 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::Node>, WTF::KeyValuePair<blink::WeakMember<blink::Node>, unsigned int>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Node>, WTF::HashMapValueTraits<WTF::HashTraits<blink::WeakMember<blink::Node> >, WTF::HashTraits<unsigned int> >, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv = private unnamed_addr constant [267 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<WTF::VectorBackedLinkedListNode<blink::WeakMember<blink::Node>, blink::HeapAllocator>, WTF::VectorTraits<WTF::VectorBackedLinkedListNode<blink::WeakMember<blink::Node>, blink::HeapAllocator> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@_ZTVN5blink7ElementE = external unnamed_addr constant { [157 x i8*], [3 x i8*] }, align 8
@_ZN5blink15HTMLSlotElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.15 = private unnamed_addr constant [24 x i8] c"user-agent-default-slot\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"user-agent-custom-assign-slot\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [140 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<blink::HTMLSlotElement::LCSArray<unsigned int, 16>, 16, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink15HTMLSlotElement8LCSArrayINSt3__14pairIjjEELj16EEELj16ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [170 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<blink::HTMLSlotElement::LCSArray<std::__1::pair<unsigned int, unsigned int>, 16>, 16, WTF::PartitionAllocator>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [413 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, WTF::KeyValuePair<blink::Member<blink::Node>, unsigned int>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Node>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<unsigned int> >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1

@_ZN5blink15HTMLSlotElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::HTMLSlotElement"*, %"class.blink::Document"*), void (%"class.blink::HTMLSlotElement"*, %"class.blink::Document"*)* @_ZN5blink15HTMLSlotElementC2ERNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSlotElement"* @_ZN5blink15HTMLSlotElement26CreateUserAgentDefaultSlotERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::HTMLSlotElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSlotElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %0) #10
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !2

7:                                                ; preds = %1
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i64 23) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name) #10
  br label %11

11:                                               ; preds = %1, %7, %10
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name to %"class.WTF::AtomicString"*)) #10
  ret %"class.blink::HTMLSlotElement"* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i64 23) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name) #10
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEvE30s_user_agent_default_slot_name to %"class.WTF::AtomicString"*)
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSlotElement"* @_ZN5blink15HTMLSlotElement31CreateUserAgentCustomAssignSlotERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::HTMLSlotElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSlotElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %0) #10
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !2

7:                                                ; preds = %1
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i64 29) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name) #10
  br label %11

11:                                               ; preds = %1, %7, %10
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name to %"class.WTF::AtomicString"*)) #10
  ret %"class.blink::HTMLSlotElement"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i64 29) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name) #10
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEvE36s_user_agent_custom_assign_slot_name to %"class.WTF::AtomicString"*)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElementC2ERNS_8DocumentE(%"class.blink::HTMLSlotElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE to %"class.blink::QualifiedName"**), align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %5, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.blink::Document"* %1, i32 1026) #10
  %6 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink15HTMLSlotElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink15HTMLSlotElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4
  %10 = bitcast %"class.blink::HeapLinkedHashSet"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #10
  %11 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0, i32 1
  %12 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %3 to i8*
  %13 = bitcast %"class.WTF::VectorBackedLinkedList"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = bitcast %"class.blink::HeapVector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 33, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #10
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %11, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.30"* %15, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  %16 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %17 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  call void %20(%"class.blink::UseCounter"* %16, i32 1898) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15HTMLSlotElement17NormalizeSlotNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %1, %5
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.WTF::StringImpl"* [ %12, %9 ], [ %3, %5 ]
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %9, %14, %30
  %33 = phi %"class.WTF::StringImpl"* [ null, %9 ], [ %15, %14 ], [ %15, %30 ]
  ret %"class.WTF::StringImpl"* %33
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 512
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %7) #10
  %9 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %8, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %9, align 8
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* %10) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1
  ret %"class.blink::HeapVector"* %12
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement22FlattenedAssignedNodesEv(%"class.blink::HeapVector"* noalias sret, %"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 512
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.23"* %8, %"class.WTF::Vector.23"* dereferenceable(16) %9) #10
  br label %11

10:                                               ; preds = %2
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129CollectFlattenedAssignedNodesERKNS_15HTMLSlotElementE(%"class.blink::HeapVector"* sret %0, %"class.blink::HTMLSlotElement"* dereferenceable(192) %1)
  br label %11

11:                                               ; preds = %10, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129CollectFlattenedAssignedNodesERKNS_15HTMLSlotElementE(%"class.blink::HeapVector"* noalias sret, %"class.blink::HTMLSlotElement"* dereferenceable(192)) unnamed_addr #0 {
  %3 = alloca %"class.blink::HeapVector", align 8
  %4 = alloca %"class.blink::HeapVector", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 512
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %10) #10
  %12 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %11, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %12, align 8
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* %13) #10
  br label %14

14:                                               ; preds = %2, %9
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.blink::HeapVector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #10
  %19 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %91

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = icmp eq %"class.blink::HTMLSlotElement"* %1, null
  br i1 %24, label %151, label %25

25:                                               ; preds = %22
  %26 = load i32, i32* %5, align 8
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %151, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1
  %31 = bitcast %"class.blink::Node"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %151, label %34

34:                                               ; preds = %29
  %35 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %38 = bitcast %"class.blink::HeapVector"* %3 to i8*
  %39 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %41

41:                                               ; preds = %34, %86
  %42 = phi i64 [ %32, %34 ], [ %89, %86 ]
  %43 = inttoptr i64 %42 to %"class.blink::Node"*
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %86

48:                                               ; preds = %41
  %49 = and i32 %45, 48
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %68

51:                                               ; preds = %48
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1, i32 2
  %54 = bitcast %"class.blink::Member"* %53 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp ne %"class.WTF::StringImpl"* %57, %59
  %61 = and i32 %45, 512
  %62 = icmp eq i32 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %51
  %65 = inttoptr i64 %42 to %"class.blink::HTMLSlotElement"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #10
  call fastcc void @_ZN5blink12_GLOBAL__N_129CollectFlattenedAssignedNodesERKNS_15HTMLSlotElementE(%"class.blink::HeapVector"* nonnull sret %3, %"class.blink::HTMLSlotElement"* nonnull dereferenceable(192) %65)
  %66 = load %"class.blink::Member"*, %"class.blink::Member"** %39, align 8
  %67 = load i32, i32* %40, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.23"* %37, %"class.blink::Member"* %66, i32 %67) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #10
  br label %86

68:                                               ; preds = %51, %48
  %69 = load i32, i32* %17, align 4
  %70 = load i32, i32* %16, align 8
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %85, label %72, !prof !3

72:                                               ; preds = %68
  %73 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %74 = zext i32 %69 to i64
  %75 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %73, i64 %74
  %76 = bitcast %"class.blink::Member"* %75 to i64*
  store atomic i64 %42, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %72
  %80 = inttoptr i64 %42 to i8*
  %81 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #10
  br label %82

82:                                               ; preds = %79, %72
  %83 = load i32, i32* %17, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %17, align 4
  br label %86

85:                                               ; preds = %68
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.23"* %37, %"class.blink::Node"* nonnull dereferenceable(64) %43) #10
  br label %86

86:                                               ; preds = %85, %82, %64, %41
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 5, i32 0, i32 0
  %88 = bitcast %"class.blink::Node"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %151, label %41

91:                                               ; preds = %14
  %92 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::Member"*, %"class.blink::Member"** %92, align 8
  %94 = zext i32 %20 to i64
  %95 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %93, i64 %94
  %96 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %97 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %99 = bitcast %"class.blink::HeapVector"* %4 to i8*
  %100 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %102

102:                                              ; preds = %91, %148
  %103 = phi %"class.blink::Member"* [ %93, %91 ], [ %149, %148 ]
  %104 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.blink::Node"*, %"class.blink::Node"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 48
  %109 = icmp ne i32 %108, 0
  %110 = icmp eq %"class.blink::Node"* %105, null
  %111 = or i1 %110, %109
  %112 = ptrtoint %"class.blink::Node"* %105 to i64
  br i1 %111, label %130, label %113

113:                                              ; preds = %102
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 1, i32 2
  %116 = bitcast %"class.blink::Member"* %115 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 3, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp ne %"class.WTF::StringImpl"* %119, %121
  %123 = and i32 %107, 512
  %124 = icmp eq i32 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %130, label %126

126:                                              ; preds = %113
  %127 = bitcast %"class.blink::Node"* %105 to %"class.blink::HTMLSlotElement"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #10
  call fastcc void @_ZN5blink12_GLOBAL__N_129CollectFlattenedAssignedNodesERKNS_15HTMLSlotElementE(%"class.blink::HeapVector"* nonnull sret %4, %"class.blink::HTMLSlotElement"* nonnull dereferenceable(192) %127)
  %128 = load %"class.blink::Member"*, %"class.blink::Member"** %100, align 8
  %129 = load i32, i32* %101, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.23"* %98, %"class.blink::Member"* %128, i32 %129) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #10
  br label %148

130:                                              ; preds = %113, %102
  %131 = load i32, i32* %17, align 4
  %132 = load i32, i32* %16, align 8
  %133 = icmp eq i32 %131, %132
  br i1 %133, label %147, label %134, !prof !3

134:                                              ; preds = %130
  %135 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %136 = zext i32 %131 to i64
  %137 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %135, i64 %136
  %138 = bitcast %"class.blink::Member"* %137 to i64*
  store atomic i64 %112, i64* %138 monotonic, align 8
  %139 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %134
  %142 = bitcast %"class.blink::Node"* %105 to i8*
  %143 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %142) #10
  br label %144

144:                                              ; preds = %141, %134
  %145 = load i32, i32* %17, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %17, align 4
  br label %148

147:                                              ; preds = %130
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.23"* %98, %"class.blink::Member"* dereferenceable(8) %103) #10
  br label %148

148:                                              ; preds = %147, %144, %126
  %149 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %103, i64 1
  %150 = icmp eq %"class.blink::Member"* %149, %95
  br i1 %150, label %151, label %102

151:                                              ; preds = %148, %86, %25, %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement23AssignedNodesForBindingEPKNS_20AssignedNodesOptionsE(%"class.blink::HeapVector"* noalias sret, %"class.blink::HTMLSlotElement"*, %"class.blink::AssignedNodesOptions"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AssignedNodesOptions", %"class.blink::AssignedNodesOptions"* %2, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::AssignedNodesOptions", %"class.blink::AssignedNodesOptions"* %2, i64 0, i32 2
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8, !noalias !5
  %14 = and i32 %13, 512
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.23"* %17, %"class.WTF::Vector.23"* dereferenceable(16) %18) #10
  br label %33

19:                                               ; preds = %11
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129CollectFlattenedAssignedNodesERKNS_15HTMLSlotElementE(%"class.blink::HeapVector"* sret %0, %"class.blink::HTMLSlotElement"* dereferenceable(192) %1) #10
  br label %33

20:                                               ; preds = %7, %3
  %21 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 512
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %26) #10
  %28 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %27, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %28, align 8
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* %29) #10
  br label %30

30:                                               ; preds = %20, %25
  %31 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.23"* %31, %"class.WTF::Vector.23"* dereferenceable(16) %32) #10
  br label %33

33:                                               ; preds = %19, %16, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement16AssignedElementsEv(%"class.blink::HeapVector.54"* noalias sret, %"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapVector.54", %"class.blink::HeapVector.54"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HeapVector.54", %"class.blink::HeapVector.54"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.blink::HeapVector.54", %"class.blink::HeapVector.54"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.blink::HeapVector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #10
  %7 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 512
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %12) #10
  %14 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %14, align 8
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* %15) #10
  br label %16

16:                                               ; preds = %2, %11
  %17 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member"*, %"class.blink::Member"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::HeapVector.54", %"class.blink::HeapVector.54"* %0, i64 0, i32 0
  br label %27

26:                                               ; preds = %57, %16
  ret void

27:                                               ; preds = %24, %57
  %28 = phi %"class.blink::Member"* [ %18, %24 ], [ %58, %57 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %57, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 12
  %36 = icmp eq i32 %35, 0
  %37 = bitcast %"class.blink::Node"* %30 to %"class.blink::Element"*
  br i1 %36, label %38, label %57

38:                                               ; preds = %32
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* %4, align 8
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %56, label %42, !prof !3

42:                                               ; preds = %38
  %43 = load %"class.blink::Member.52"*, %"class.blink::Member.52"** %3, align 8
  %44 = zext i32 %39 to i64
  %45 = getelementptr inbounds %"class.blink::Member.52", %"class.blink::Member.52"* %43, i64 %44
  %46 = ptrtoint %"class.blink::Node"* %30 to i64
  %47 = bitcast %"class.blink::Member.52"* %45 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = bitcast %"class.blink::Node"* %30 to i8*
  %52 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %50, %42
  %54 = load i32, i32* %5, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %57

56:                                               ; preds = %38
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.57"* %25, %"class.blink::Element"* nonnull dereferenceable(104) %37) #10
  br label %57

57:                                               ; preds = %32, %27, %56, %53
  %58 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %28, i64 1
  %59 = icmp eq %"class.blink::Member"* %58, %22
  br i1 %59, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement26AssignedElementsForBindingEPKNS_20AssignedNodesOptionsE(%"class.blink::HeapVector.54"* noalias sret, %"class.blink::HTMLSlotElement"*, %"class.blink::AssignedNodesOptions"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeapVector", align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector.54", %"class.blink::HeapVector.54"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector.54", %"class.blink::HeapVector.54"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HeapVector.54", %"class.blink::HeapVector.54"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast %"class.blink::HeapVector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #10
  %9 = bitcast %"class.blink::HeapVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.blink::AssignedNodesOptions", %"class.blink::AssignedNodesOptions"* %2, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !4, !noalias !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::AssignedNodesOptions", %"class.blink::AssignedNodesOptions"* %2, i64 0, i32 2
  %15 = load i8, i8* %14, align 1, !range !4, !noalias !8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8, !noalias !11
  %20 = and i32 %19, 512
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 1, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.23"* nonnull %23, %"class.WTF::Vector.23"* dereferenceable(16) %24) #10
  br label %39

25:                                               ; preds = %17
  call fastcc void @_ZN5blink12_GLOBAL__N_129CollectFlattenedAssignedNodesERKNS_15HTMLSlotElementE(%"class.blink::HeapVector"* nonnull sret %4, %"class.blink::HTMLSlotElement"* dereferenceable(192) %1) #10
  br label %39

26:                                               ; preds = %13, %3
  %27 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8, !noalias !8
  %29 = and i32 %28, 512
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %32) #10
  %34 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %33, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %34, align 8
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* %35) #10
  br label %36

36:                                               ; preds = %31, %26
  %37 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 1, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.23"* nonnull %37, %"class.WTF::Vector.23"* dereferenceable(16) %38) #10
  br label %39

39:                                               ; preds = %22, %25, %36
  %40 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Member"*, %"class.blink::Member"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %44
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.blink::HeapVector.54", %"class.blink::HeapVector.54"* %0, i64 0, i32 0
  br label %50

49:                                               ; preds = %80, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret void

50:                                               ; preds = %47, %80
  %51 = phi %"class.blink::Member"* [ %41, %47 ], [ %81, %80 ]
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %80, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 12
  %59 = icmp eq i32 %58, 0
  %60 = bitcast %"class.blink::Node"* %53 to %"class.blink::Element"*
  br i1 %59, label %61, label %80

61:                                               ; preds = %55
  %62 = load i32, i32* %7, align 4
  %63 = load i32, i32* %6, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %79, label %65, !prof !3

65:                                               ; preds = %61
  %66 = load %"class.blink::Member.52"*, %"class.blink::Member.52"** %5, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::Member.52", %"class.blink::Member.52"* %66, i64 %67
  %69 = ptrtoint %"class.blink::Node"* %53 to i64
  %70 = bitcast %"class.blink::Member.52"* %68 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.blink::Node"* %53 to i8*
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %74) #10
  br label %76

76:                                               ; preds = %73, %65
  %77 = load i32, i32* %7, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %7, align 4
  br label %80

79:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.57"* %48, %"class.blink::Element"* nonnull dereferenceable(104) %60) #10
  br label %80

80:                                               ; preds = %55, %50, %79, %76
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %51, i64 1
  %82 = icmp eq %"class.blink::Member"* %81, %45
  br i1 %82, label %49, label %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement6assignENS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEERNS_14ExceptionStateE(%"class.blink::HTMLSlotElement"*, %"class.blink::HeapVector"* nocapture readonly, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %5 = alloca %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %6 = alloca %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %7 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %8 = alloca %"class.blink::HeapLinkedHashSet", align 8
  %9 = alloca %"class.blink::HeapLinkedHashSet", align 8
  %10 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 2
  %16 = bitcast %"class.blink::UseCounter"* %15 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* %15, i32 3442) #10
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0, i32 1, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %197, label %27

27:                                               ; preds = %23, %3
  %28 = bitcast %"class.blink::HeapLinkedHashSet"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false)
  %29 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %8, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0
  call void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEEC2ERKS8_(%"class.WTF::LinkedHashSet"* nonnull %29, %"class.WTF::LinkedHashSet"* dereferenceable(48) %30) #10
  %31 = bitcast %"class.blink::HeapLinkedHashSet"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 20, i1 false) #10
  %32 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 1
  %33 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %7 to i8*
  %34 = bitcast %"class.WTF::VectorBackedLinkedList"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #10
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %32, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.30"* %35, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #10
  %36 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::Member"*, %"class.blink::Member"** %36, align 8
  %38 = load i32, i32* %20, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %37, i64 %39
  %41 = icmp eq i32 %38, 0
  %42 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0
  br i1 %41, label %54, label %43

43:                                               ; preds = %27
  %44 = bitcast %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6 to i8*
  %45 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 1, i32 0, i32 0
  %51 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 1, i32 0, i32 1
  %52 = bitcast %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %5 to i8*
  %53 = bitcast %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %4 to i8*
  br label %66

54:                                               ; preds = %105, %27
  %55 = phi i8 [ 0, %27 ], [ %106, %105 ]
  %56 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 1, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0, i32 1, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp ne i32 %57, %59
  %61 = zext i1 %60 to i32
  %62 = and i8 %55, 1
  %63 = zext i8 %62 to i32
  %64 = or i32 %61, %63
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %109, label %139

66:                                               ; preds = %43, %105
  %67 = phi i8 [ 0, %43 ], [ %106, %105 ]
  %68 = phi %"class.blink::Member"* [ %37, %43 ], [ %107, %105 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44)
  %69 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %35, i32 0) #10, !noalias !14
  store %"class.WTF::VectorBackedLinkedListNode"* %69, %"class.WTF::VectorBackedLinkedListNode"** %45, align 8, !alias.scope !14
  store %"class.WTF::VectorBackedLinkedList"* %32, %"class.WTF::VectorBackedLinkedList"** %46, align 8, !alias.scope !14
  %70 = load i32, i32* %47, align 4, !noalias !17
  %71 = icmp eq i32 %70, 0
  %72 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %48, align 8, !noalias !17
  %73 = load i32, i32* %49, align 8, !noalias !17
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %74
  br i1 %71, label %85, label %76

76:                                               ; preds = %66
  %77 = icmp eq i32 %73, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %76, %82
  %79 = phi %"struct.WTF::KeyValuePair"* [ %83, %82 ], [ %72, %76 ]
  %80 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !17
  switch i64 %81, label %85 [
    i64 -1, label %82
    i64 0, label %82
  ]

82:                                               ; preds = %78, %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, %75
  br i1 %84, label %85, label %78

85:                                               ; preds = %78, %82, %66, %76
  %86 = phi %"struct.WTF::KeyValuePair"* [ %75, %66 ], [ %72, %76 ], [ %79, %78 ], [ %75, %82 ]
  store %"struct.WTF::KeyValuePair"* %86, %"struct.WTF::KeyValuePair"** %50, align 8, !alias.scope !17
  store %"struct.WTF::KeyValuePair"* %75, %"struct.WTF::KeyValuePair"** %51, align 8, !alias.scope !17
  %87 = call { %"class.blink::WeakMember.1363"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRNS1_6MemberIS3_EEEENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"* nonnull %42, %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %6, %"class.blink::Member"* dereferenceable(8) %68, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44)
  %88 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 0, i32 0, i32 0
  %89 = load %"class.blink::Node"*, %"class.blink::Node"** %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52)
  call void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull sret %5, %"class.WTF::LinkedHashSet"* nonnull %29, %"class.blink::Node"* %89) #10
  call void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE(%"class.WTF::LinkedHashSet"* nonnull %29, %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52)
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %88, align 8
  %91 = call %"class.blink::HTMLSlotElement"* @_ZN5blink4Node20ManuallyAssignedSlotEv(%"class.blink::Node"* %90) #10
  %92 = icmp eq %"class.blink::HTMLSlotElement"* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %85
  %94 = icmp eq %"class.blink::HTMLSlotElement"* %91, %0
  br i1 %94, label %105, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %91, i64 0, i32 4, i32 0
  %97 = load %"class.blink::Node"*, %"class.blink::Node"** %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53)
  call void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull sret %4, %"class.WTF::LinkedHashSet"* %96, %"class.blink::Node"* %97) #10
  call void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE(%"class.WTF::LinkedHashSet"* %96, %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53)
  %98 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 512
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %103, label %102

102:                                              ; preds = %95
  call void @_ZN5blink15HTMLSlotElement13DidSlotChangeENS_14SlotChangeTypeE(%"class.blink::HTMLSlotElement"* nonnull %91, i32 0)
  br label %103

103:                                              ; preds = %95, %85, %102
  %104 = load %"class.blink::Node"*, %"class.blink::Node"** %88, align 8
  call void @_ZN5blink4Node23SetManuallyAssignedSlotEPNS_15HTMLSlotElementE(%"class.blink::Node"* %104, %"class.blink::HTMLSlotElement"* %0) #10
  br label %105

105:                                              ; preds = %93, %103
  %106 = phi i8 [ 1, %103 ], [ %67, %93 ]
  %107 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 1
  %108 = icmp eq %"class.blink::Member"* %107, %40
  br i1 %108, label %54, label %66

109:                                              ; preds = %54
  %110 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 1, i32 0
  %111 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %110, i32 0) #10, !noalias !20
  %112 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %111, i64 0, i32 1
  %113 = load i32, i32* %112, align 4, !noalias !20
  %114 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %110, i32 %113) #10, !noalias !20
  %115 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %116 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %115, i32 0) #10, !noalias !23
  %117 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %116, i64 0, i32 1
  %118 = load i32, i32* %117, align 4, !noalias !23
  %119 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %115, i32 %118) #10, !noalias !23
  %120 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %110, i32 0) #10, !noalias !26
  %121 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %114, %120
  br i1 %121, label %196, label %122

122:                                              ; preds = %109, %130
  %123 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %133, %130 ], [ %114, %109 ]
  %124 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %136, %130 ], [ %119, %109 ]
  %125 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 0
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %125, align 8
  %127 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 0
  %128 = load %"class.blink::Node"*, %"class.blink::Node"** %127, align 8
  %129 = icmp eq %"class.blink::Node"* %126, %128
  br i1 %129, label %130, label %139

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %110, i32 %132) #10
  %134 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %115, i32 %135) #10
  %137 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %110, i32 0) #10, !noalias !26
  %138 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %133, %137
  br i1 %138, label %196, label %122

139:                                              ; preds = %122, %54
  %140 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %8, i64 0, i32 0, i32 1, i32 0
  %141 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %140, i32 0) #10, !noalias !29
  %142 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %141, i64 0, i32 1
  %143 = load i32, i32* %142, align 4, !noalias !29
  %144 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %140, i32 %143) #10, !noalias !29
  %145 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %140, i32 0) #10, !noalias !32
  %146 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %144, %145
  br i1 %146, label %147, label %184

147:                                              ; preds = %184, %139
  %148 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %30, i64 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4swapERSG_(%"class.WTF::HashTable"* %148, %"class.WTF::HashTable"* nonnull dereferenceable(24) %149) #10
  %150 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0, i32 1
  %151 = bitcast %"class.WTF::VectorBackedLinkedList"* %32 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.WTF::VectorBackedLinkedList"* %150 to i64*
  %154 = load i64, i64* %153, align 8
  store atomic i64 %154, i64* %151 monotonic, align 8
  store atomic i64 %152, i64* %153 monotonic, align 8
  %155 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %157 = load i32, i32* %155, align 4
  %158 = load i32, i32* %156, align 8
  store i32 %158, i32* %155, align 4
  store i32 %157, i32* %156, align 8
  %159 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %160 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %161 = load i32, i32* %159, align 4
  %162 = load i32, i32* %160, align 4
  store i32 %162, i32* %159, align 4
  store i32 %161, i32* %160, align 4
  %163 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %147
  %166 = inttoptr i64 %152 to i8*
  %167 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %166) #10
  br label %168

168:                                              ; preds = %165, %147
  %169 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %175, label %171

171:                                              ; preds = %168
  %172 = bitcast %"class.WTF::VectorBackedLinkedList"* %32 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %173) #10
  br label %175

175:                                              ; preds = %168, %171
  %176 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0, i32 1, i32 1
  %177 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %9, i64 0, i32 0, i32 1, i32 1
  %178 = load i32, i32* %176, align 4
  %179 = load i32, i32* %177, align 8
  store i32 %179, i32* %176, align 4
  store i32 %178, i32* %177, align 8
  %180 = load i32, i32* %58, align 4
  %181 = load i32, i32* %56, align 4
  store i32 %181, i32* %58, align 4
  store i32 %180, i32* %56, align 4
  %182 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %10) #10
  %183 = icmp eq %"class.blink::ShadowRoot"* %182, null
  br i1 %183, label %196, label %192

184:                                              ; preds = %139, %184
  %185 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %190, %184 ], [ %144, %139 ]
  %186 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %185, i64 0, i32 2, i32 0, i32 0
  %187 = load %"class.blink::Node"*, %"class.blink::Node"** %186, align 8
  call void @_ZN5blink4Node23SetManuallyAssignedSlotEPNS_15HTMLSlotElementE(%"class.blink::Node"* %187, %"class.blink::HTMLSlotElement"* null) #10
  %188 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %185, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %140, i32 %189) #10
  %191 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %190, %145
  br i1 %191, label %147, label %184

192:                                              ; preds = %175
  %193 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %10) #10
  %194 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %193, i64 0, i32 3, i32 0, i32 0
  %195 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %194, align 8
  call void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"* %195) #10
  call void @_ZN5blink15HTMLSlotElement13DidSlotChangeENS_14SlotChangeTypeE(%"class.blink::HTMLSlotElement"* %0, i32 0)
  br label %196

196:                                              ; preds = %130, %109, %175, %192
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #10
  br label %197

197:                                              ; preds = %23, %196
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.blink::HTMLSlotElement"* @_ZN5blink4Node20ManuallyAssignedSlotEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement13DidSlotChangeENS_14SlotChangeTypeE(%"class.blink::HTMLSlotElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %5) #10
  %7 = icmp eq %"class.blink::ShadowRoot"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %5) #10
  %10 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %9, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 196608
  %13 = icmp eq i32 %12, 131072
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %5) #10
  %16 = tail call zeroext i1 @_ZNK5blink10ShadowRoot31SupportsNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"* %15) #10
  br i1 %16, label %17, label %22

17:                                               ; preds = %14, %8, %4
  %18 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 3
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN5blink16MutationObserver17EnqueueSlotChangeERNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"* dereferenceable(192) %0) #10
  store i8 1, i8* %18, align 8
  br label %22

22:                                               ; preds = %21, %17, %14, %2
  %23 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %23) #10
  %25 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %24, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %25, align 8
  tail call void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"* %26) #10
  tail call void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"* %23, i32 1) #10
  ret void
}

declare void @_ZN5blink4Node23SetManuallyAssignedSlotEPNS_15HTMLSlotElementE(%"class.blink::Node"*, %"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement34SetShadowRootNeedsAssignmentRecalcEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %4 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %3, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %4, align 8
  tail call void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement18AppendAssignedNodeERNS_4NodeE(%"class.blink::HTMLSlotElement"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0
  %5 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %26, label %11, !prof !3

11:                                               ; preds = %2
  %12 = ptrtoint %"class.blink::Node"* %1 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Member"*, %"class.blink::Member"** %13, align 8
  %15 = zext i32 %7 to i64
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %14, i64 %15
  %17 = bitcast %"class.blink::Member"* %16 to i64*
  store atomic i64 %12, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = bitcast %"class.blink::Node"* %1 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #10
  br label %23

23:                                               ; preds = %20, %11
  %24 = load i32, i32* %6, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %6, align 4
  br label %27

26:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.23"* %4, %"class.blink::Node"** nonnull dereferenceable(8) %3) #10
  br label %27

27:                                               ; preds = %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement18ClearAssignedNodesEv(%"class.blink::HTMLSlotElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.WTF::Vector.23"* %2 to i8**
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  %12 = load i8*, i8** %10, align 8
  %13 = zext i32 %8 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %12, i64 %14) #10
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %11, %6
  %16 = load i8*, i8** %10, align 8
  %17 = bitcast %"class.WTF::Vector.23"* %2 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %16) #10
  br label %18

18:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement37ClearAssignedNodesAndFlatTreeChildrenEv(%"class.blink::HTMLSlotElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.WTF::Vector.23"* %2 to i8**
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  %12 = load i8*, i8** %10, align 8
  %13 = zext i32 %8 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %12, i64 %14) #10
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %11, %6
  %16 = load i8*, i8** %10, align 8
  %17 = bitcast %"class.WTF::Vector.23"* %2 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %16) #10
  br label %18

18:                                               ; preds = %1, %15
  %19 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = bitcast %"class.WTF::Vector.23"* %19 to i8**
  br i1 %26, label %32, label %28

28:                                               ; preds = %23
  %29 = load i8*, i8** %27, align 8
  %30 = zext i32 %25 to i64
  %31 = shl nuw nsw i64 %30, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %31) #10
  store i32 0, i32* %24, align 4
  br label %32

32:                                               ; preds = %28, %23
  %33 = load i8*, i8** %27, align 8
  %34 = bitcast %"class.WTF::Vector.23"* %19 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  store i32 0, i32* %20, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #10
  br label %35

35:                                               ; preds = %18, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement38UpdateFlatTreeNodeDataForAssignedNodesEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Member"*, %"class.blink::Member"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %111, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %"class.blink::HTMLSlotElement"* %0 to i64
  %11 = bitcast %"class.blink::HTMLSlotElement"* %0 to i8*
  br label %14

12:                                               ; preds = %100
  %13 = icmp eq %"class.blink::Node"* %98, null
  br i1 %13, label %111, label %103

14:                                               ; preds = %9, %100
  %15 = phi %"class.blink::Node"* [ null, %9 ], [ %98, %100 ]
  %16 = phi %"class.blink::Member"* [ %3, %9 ], [ %101, %100 ]
  %17 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 98304
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %66

23:                                               ; preds = %14
  %24 = and i32 %20, 12
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %20, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 6, i32 0, i32 0
  br i1 %25, label %29, label %40

29:                                               ; preds = %23
  br i1 %27, label %36, label %30

30:                                               ; preds = %29
  %31 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRareData"**
  %32 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %34, i64 0, i32 2, i32 0
  br label %55

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRenderingData"**
  %38 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %38, i64 0, i32 2, i32 0
  br label %55

40:                                               ; preds = %23
  br i1 %27, label %45, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRareData"**
  %43 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %43, i64 0, i32 1, i32 0, i32 0
  br label %47

45:                                               ; preds = %40
  %46 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRenderingData"**
  br label %47

47:                                               ; preds = %45, %41
  %48 = phi %"class.blink::NodeRenderingData"** [ %44, %41 ], [ %46, %45 ]
  %49 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %49, i64 0, i32 1
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = icmp eq %"class.blink::LayoutObject"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 0, i32 5, i32 0
  br label %55

55:                                               ; preds = %30, %36, %53
  %56 = phi %"class.blink::ComputedStyle"** [ %54, %53 ], [ %35, %30 ], [ %39, %36 ]
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = icmp eq %"class.blink::ComputedStyle"* %57, null
  br i1 %58, label %59, label %66

59:                                               ; preds = %47, %55
  %60 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %18) #10
  %61 = icmp eq %"class.blink::FlatTreeNodeData"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %60, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %63, align 8
  %65 = icmp eq %"class.blink::HTMLSlotElement"* %64, null
  br label %66

66:                                               ; preds = %14, %62, %59, %55
  %67 = phi i1 [ false, %14 ], [ false, %55 ], [ %65, %62 ], [ false, %59 ]
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %69 = tail call dereferenceable(32) %"class.blink::FlatTreeNodeData"* @_ZN5blink4Node22EnsureFlatTreeNodeDataEv(%"class.blink::Node"* %68) #10
  %70 = bitcast %"class.blink::FlatTreeNodeData"* %69 to i64*
  store atomic i64 %10, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #10
  br label %75

75:                                               ; preds = %66, %73
  %76 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %69, i64 0, i32 1
  %77 = ptrtoint %"class.blink::Node"* %15 to i64
  %78 = bitcast %"class.blink::WeakMember.1363"* %76 to i64*
  store atomic i64 %77, i64* %78 monotonic, align 8
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Node"* %15 to i8*
  %83 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %82) #10
  br label %84

84:                                               ; preds = %75, %81
  %85 = icmp eq %"class.blink::Node"* %15, null
  br i1 %85, label %97, label %86

86:                                               ; preds = %84
  %87 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* nonnull %15) #10
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %89 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %87, i64 0, i32 2
  %90 = ptrtoint %"class.blink::Node"* %88 to i64
  %91 = bitcast %"class.blink::WeakMember.1363"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %86
  %95 = bitcast %"class.blink::Node"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #10
  br label %97

97:                                               ; preds = %94, %86, %84
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  br i1 %67, label %99, label %100

99:                                               ; preds = %97
  tail call void @_ZN5blink4Node21FlatTreeParentChangedEv(%"class.blink::Node"* %98) #10
  br label %100

100:                                              ; preds = %99, %97
  %101 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %102 = icmp eq %"class.blink::Member"* %101, %7
  br i1 %102, label %12, label %14

103:                                              ; preds = %12
  %104 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* nonnull %98) #10
  %105 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %104, i64 0, i32 2
  %106 = bitcast %"class.blink::WeakMember.1363"* %105 to i64*
  store atomic i64 0, i64* %106 monotonic, align 8
  %107 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %103
  %110 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #10
  br label %111

111:                                              ; preds = %1, %109, %103, %12
  ret void
}

declare %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"*) local_unnamed_addr #2

declare dereferenceable(32) %"class.blink::FlatTreeNodeData"* @_ZN5blink4Node22EnsureFlatTreeNodeDataEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink4Node21FlatTreeParentChangedEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement50DetachDisplayLockedAssignedNodesLayoutTreeIfNeededEv(%"class.blink::HTMLSlotElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Member"*, %"class.blink::Member"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %23, %1
  ret void

10:                                               ; preds = %1, %23
  %11 = phi %"class.blink::Member"* [ %24, %23 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 33554432
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::Node"* %13 to void (%"class.blink::Node"*, i1)***
  %20 = load void (%"class.blink::Node"*, i1)**, void (%"class.blink::Node"*, i1)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %20, i64 56
  %22 = load void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %21, align 8
  tail call void %22(%"class.blink::Node"* %13, i1 zeroext false) #10
  br label %23

23:                                               ; preds = %10, %18
  %24 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 1
  %25 = icmp eq %"class.blink::Member"* %24, %7
  br i1 %25, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement22RecalcFlatTreeChildrenEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector", align 8
  %3 = bitcast %"class.blink::HeapVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.blink::HeapVector"* %2 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0
  %10 = bitcast %"class.blink::HeapVector"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::HeapVector"* %2 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %5, align 8
  store i32 0, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %6, align 4
  store i32 0, i32* %15, align 4
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  %19 = inttoptr i64 %11 to %"class.blink::Member"*
  br i1 %18, label %23, label %20

20:                                               ; preds = %1
  %21 = inttoptr i64 %11 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #10
  br label %23

23:                                               ; preds = %20, %1
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.blink::HeapVector"* %8 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %28) #10
  br label %30

30:                                               ; preds = %23, %26
  %31 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %79

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = icmp eq %"class.blink::HTMLSlotElement"* %0, null
  br i1 %36, label %100, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %100, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1
  %44 = bitcast %"class.blink::Node"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %100, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %47, %74
  %50 = phi i64 [ %45, %47 ], [ %77, %74 ]
  %51 = inttoptr i64 %50 to %"class.blink::Node"*
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %74

56:                                               ; preds = %49
  %57 = load i32, i32* %15, align 4
  %58 = load i32, i32* %13, align 8
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %73, label %60, !prof !3

60:                                               ; preds = %56
  %61 = load %"class.blink::Member"*, %"class.blink::Member"** %48, align 8
  %62 = zext i32 %57 to i64
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 %62
  %64 = bitcast %"class.blink::Member"* %63 to i64*
  store atomic i64 %50, i64* %64 monotonic, align 8
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %60
  %68 = inttoptr i64 %50 to i8*
  %69 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #10
  br label %70

70:                                               ; preds = %67, %60
  %71 = load i32, i32* %15, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %15, align 4
  br label %74

73:                                               ; preds = %56
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.23"* %9, %"class.blink::Node"* nonnull dereferenceable(64) %51) #10
  br label %74

74:                                               ; preds = %73, %70, %49
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 0, i32 5, i32 0, i32 0
  %76 = bitcast %"class.blink::Node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %98, label %49

79:                                               ; preds = %30
  %80 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0
  %81 = tail call dereferenceable(16) %"class.WTF::Vector.23"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.23"* %9, %"class.WTF::Vector.23"* dereferenceable(16) %80) #10
  %82 = zext i32 %16 to i64
  %83 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %19, i64 %82
  %84 = icmp eq i32 %16, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0
  br label %87

87:                                               ; preds = %85, %95
  %88 = phi %"class.blink::Member"* [ %19, %85 ], [ %96, %95 ]
  %89 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %88, i64 0, i32 0, i32 0
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %89, align 8
  %91 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %90) #10
  %92 = icmp eq %"class.blink::ContainerNode"* %91, %86
  br i1 %92, label %93, label %95

93:                                               ; preds = %87
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %89, align 8
  tail call void @_ZN5blink4Node19RemovedFromFlatTreeEv(%"class.blink::Node"* %94) #10
  br label %95

95:                                               ; preds = %93, %87
  %96 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %88, i64 1
  %97 = icmp eq %"class.blink::Member"* %96, %83
  br i1 %97, label %100, label %87

98:                                               ; preds = %74
  %99 = load i32, i32* %6, align 4
  br label %100

100:                                              ; preds = %95, %37, %34, %98, %79, %42
  %101 = phi i32 [ %99, %98 ], [ 0, %79 ], [ %16, %42 ], [ %16, %34 ], [ %16, %37 ], [ %16, %95 ]
  %102 = load i32, i32* %15, align 4
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %104, label %124

104:                                              ; preds = %100
  %105 = icmp eq i32 %101, 0
  br i1 %105, label %139, label %106

106:                                              ; preds = %104
  %107 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %108 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::Member"*, %"class.blink::Member"** %108, align 8
  %110 = zext i32 %101 to i64
  %111 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %107, i64 %110
  br label %112

112:                                              ; preds = %120, %106
  %113 = phi %"class.blink::Member"* [ %122, %120 ], [ %109, %106 ]
  %114 = phi %"class.blink::Member"* [ %121, %120 ], [ %107, %106 ]
  %115 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %113, i64 0, i32 0, i32 0
  %118 = load %"class.blink::Node"*, %"class.blink::Node"** %117, align 8
  %119 = icmp eq %"class.blink::Node"* %116, %118
  br i1 %119, label %120, label %124

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %114, i64 1
  %122 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %113, i64 1
  %123 = icmp eq %"class.blink::Member"* %121, %111
  br i1 %123, label %139, label %112

124:                                              ; preds = %112, %100
  %125 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %126 = and i32 %125, 64
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %124
  tail call void @_ZN5blink5probe30DidPerformSlotDistributionImplEPNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"* %0) #10
  br label %129

129:                                              ; preds = %128, %124
  %130 = load i32, i32* %6, align 4
  %131 = add i32 %130, 1
  %132 = icmp ugt i32 %131, 16
  br i1 %132, label %137, label %133

133:                                              ; preds = %129
  %134 = load i32, i32* %15, align 4
  %135 = add i32 %134, 1
  %136 = icmp ugt i32 %135, 16
  br i1 %136, label %137, label %138

137:                                              ; preds = %133, %129
  call void @_ZN5blink15HTMLSlotElement39NotifySlottedNodesOfFlatTreeChangeNaiveERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_(%"class.blink::HeapVector"* nonnull dereferenceable(16) %2, %"class.blink::HeapVector"* dereferenceable(16) %8) #10
  br label %139

138:                                              ; preds = %133
  call void @_ZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_(%"class.blink::HeapVector"* nonnull dereferenceable(16) %2, %"class.blink::HeapVector"* dereferenceable(16) %8) #10
  br label %139

139:                                              ; preds = %120, %104, %137, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink4Node19RemovedFromFlatTreeEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement34NotifySlottedNodesOfFlatTreeChangeERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_(%"class.blink::HTMLSlotElement"*, %"class.blink::HeapVector"* dereferenceable(16), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %30

9:                                                ; preds = %3
  %10 = icmp eq i32 %5, 0
  br i1 %10, label %45, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %16 = zext i32 %5 to i64
  %17 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 %16
  br label %18

18:                                               ; preds = %26, %11
  %19 = phi %"class.blink::Member"* [ %28, %26 ], [ %15, %11 ]
  %20 = phi %"class.blink::Member"* [ %27, %26 ], [ %13, %11 ]
  %21 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %19, i64 0, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %22, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %20, i64 1
  %28 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %19, i64 1
  %29 = icmp eq %"class.blink::Member"* %27, %17
  br i1 %29, label %45, label %18

30:                                               ; preds = %18, %3
  %31 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %32 = and i32 %31, 64
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @_ZN5blink5probe30DidPerformSlotDistributionImplEPNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"* %0) #10
  br label %35

35:                                               ; preds = %30, %34
  %36 = load i32, i32* %4, align 4
  %37 = add i32 %36, 1
  %38 = icmp ugt i32 %37, 16
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = load i32, i32* %6, align 4
  %41 = add i32 %40, 1
  %42 = icmp ugt i32 %41, 16
  br i1 %42, label %43, label %44

43:                                               ; preds = %39, %35
  tail call void @_ZN5blink15HTMLSlotElement39NotifySlottedNodesOfFlatTreeChangeNaiveERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_(%"class.blink::HeapVector"* dereferenceable(16) %1, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %45

44:                                               ; preds = %39
  tail call void @_ZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_(%"class.blink::HeapVector"* dereferenceable(16) %1, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %45

45:                                               ; preds = %26, %9, %44, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement23DispatchSlotChangeEventEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kSlotchangeE, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #10
  %4 = bitcast i8* %3 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 0, i32 1, i32 1) #10
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %4, %"class.blink::EventTarget"* %9) #10
  %10 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"* %10, %"class.blink::Event"* dereferenceable(104) %4) #10
  ret void
}

declare void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"*, %"class.blink::EventTarget"*) local_unnamed_addr #2

declare void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15HTMLSlotElement7GetNameEv(%"class.blink::HTMLSlotElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %63, %58
  %68 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %90, label %72

72:                                               ; preds = %67, %63
  %73 = phi %"class.WTF::StringImpl"* [ %70, %67 ], [ %61, %63 ]
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #10
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %78
  tail call void @llvm.trap() #10
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %67, %72, %88
  %91 = phi %"class.WTF::StringImpl"* [ null, %67 ], [ %73, %72 ], [ %73, %88 ]
  ret %"class.WTF::StringImpl"* %91
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::HTMLSlotElement"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::Node::AttachContext", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"* %4, %"struct.blink::Node::AttachContext"* dereferenceable(32) %1) #10
  %5 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 512
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %112, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = and i32 %6, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %12, label %18, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRareData"**
  %16 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %16, i64 0, i32 1, i32 0, i32 0
  br label %20

18:                                               ; preds = %9
  %19 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRenderingData"**
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi %"class.blink::NodeRenderingData"** [ %17, %14 ], [ %19, %18 ]
  %22 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %22, i64 0, i32 1
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = bitcast %"struct.blink::Node::AttachContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"struct.blink::Node::AttachContext", %"struct.blink::Node::AttachContext"* %3, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.blink::Node::AttachContext", %"struct.blink::Node::AttachContext"* %3, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.blink::Node::AttachContext", %"struct.blink::Node::AttachContext"* %3, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.blink::Node::AttachContext", %"struct.blink::Node::AttachContext"* %3, i64 0, i32 4
  %30 = getelementptr inbounds %"struct.blink::Node::AttachContext", %"struct.blink::Node::AttachContext"* %3, i64 0, i32 5
  %31 = getelementptr inbounds %"struct.blink::Node::AttachContext", %"struct.blink::Node::AttachContext"* %3, i64 0, i32 6
  %32 = bitcast %"struct.blink::Node::AttachContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %32, i64 32, i1 false)
  %33 = and i32 %6, 12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %50

35:                                               ; preds = %20
  br i1 %12, label %44, label %36

36:                                               ; preds = %35
  %37 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRareData"**
  %38 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %38, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %40, i64 0, i32 2, i32 0
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %43 = bitcast %"class.blink::ComputedStyle"* %42 to %"class.blink::ComputedStyleBase"*
  br label %67

44:                                               ; preds = %35
  %45 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRenderingData"**
  %46 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %46, i64 0, i32 2, i32 0
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %47, align 8
  %49 = bitcast %"class.blink::ComputedStyle"* %48 to %"class.blink::ComputedStyleBase"*
  br label %67

50:                                               ; preds = %20
  br i1 %12, label %55, label %51

51:                                               ; preds = %50
  %52 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRareData"**
  %53 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %53, i64 0, i32 1, i32 0, i32 0
  br label %57

55:                                               ; preds = %50
  %56 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRenderingData"**
  br label %57

57:                                               ; preds = %55, %51
  %58 = phi %"class.blink::NodeRenderingData"** [ %54, %51 ], [ %56, %55 ]
  %59 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %59, i64 0, i32 1
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = icmp eq %"class.blink::LayoutObject"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 5, i32 0
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %66 = bitcast %"class.blink::ComputedStyle"* %65 to %"class.blink::ComputedStyleBase"*
  br label %67

67:                                               ; preds = %36, %44, %57, %63
  %68 = phi %"class.blink::ComputedStyleBase"* [ %66, %63 ], [ null, %57 ], [ %43, %36 ], [ %49, %44 ]
  %69 = phi %"class.blink::ComputedStyle"* [ %65, %63 ], [ null, %57 ], [ %42, %36 ], [ %48, %44 ]
  call void @_ZN5blink7Element23AdjustForceLegacyLayoutEPKNS_13ComputedStyleEPb(%"class.blink::Element"* %4, %"class.blink::ComputedStyle"* %69, i8* %31) #10
  %70 = icmp eq %"class.blink::LayoutObject"* %24, null
  %71 = icmp ne %"class.blink::ComputedStyle"* %69, null
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %79

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %68, i64 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 21778071482940061661655974875633165533184
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %73, %67
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %26, align 8
  store %"class.blink::LayoutObject"* %24, %"class.blink::LayoutObject"** %27, align 8
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %28, align 8
  store i8 1, i8* %30, align 2
  br label %80

80:                                               ; preds = %73, %79
  store i8 1, i8* %29, align 1
  %81 = load i32, i32* %5, align 8
  %82 = and i32 %81, 512
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %80
  %85 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %10) #10
  %86 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %85, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %86, align 8
  call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* %87) #10
  br label %88

88:                                               ; preds = %80, %84
  %89 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::Member"*, %"class.blink::Member"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %90, i64 %93
  %95 = icmp eq i32 %92, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %99, %88
  %97 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %98 = icmp eq %"class.blink::LayoutObject"* %97, null
  br i1 %98, label %111, label %109

99:                                               ; preds = %88, %99
  %100 = phi %"class.blink::Member"* [ %107, %99 ], [ %90, %88 ]
  %101 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.blink::Node"*, %"class.blink::Node"** %101, align 8
  %103 = bitcast %"class.blink::Node"* %102 to void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)***
  %104 = load void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)**, void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)*, void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)** %104, i64 55
  %106 = load void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)*, void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)** %105, align 8
  call void %106(%"class.blink::Node"* %102, %"struct.blink::Node::AttachContext"* nonnull dereferenceable(32) %3) #10
  %107 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %100, i64 1
  %108 = icmp eq %"class.blink::Member"* %107, %94
  br i1 %108, label %96, label %99

109:                                              ; preds = %96
  %110 = getelementptr inbounds %"struct.blink::Node::AttachContext", %"struct.blink::Node::AttachContext"* %1, i64 0, i32 0
  store %"class.blink::LayoutObject"* %97, %"class.blink::LayoutObject"** %110, align 8
  br label %111

111:                                              ; preds = %96, %109
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  br label %112

112:                                              ; preds = %2, %111
  ret void
}

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink7Element23AdjustForceLegacyLayoutEPKNS_13ComputedStyleEPb(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement16DetachLayoutTreeEb(%"class.blink::HTMLSlotElement"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 512
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %34, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %8) #10
  %10 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0
  br label %19

19:                                               ; preds = %17, %31
  %20 = phi %"class.blink::Member"* [ %11, %17 ], [ %32, %31 ]
  %21 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %22) #10
  %24 = icmp eq %"class.blink::ContainerNode"* %18, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %27 = bitcast %"class.blink::Node"* %26 to void (%"class.blink::Node"*, i1)***
  %28 = load void (%"class.blink::Node"*, i1)**, void (%"class.blink::Node"*, i1)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %28, i64 56
  %30 = load void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %29, align 8
  tail call void %30(%"class.blink::Node"* %26, i1 zeroext %1) #10
  br label %31

31:                                               ; preds = %25, %19
  %32 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %20, i64 1
  %33 = icmp eq %"class.blink::Member"* %32, %15
  br i1 %33, label %34, label %19

34:                                               ; preds = %31, %7, %2
  %35 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"* %35, i1 zeroext %1) #10
  ret void
}

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement37RebuildDistributedChildrenLayoutTreesERNS_18WhitespaceAttacherE(%"class.blink::HTMLSlotElement"*, %"class.blink::WhitespaceAttacher"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = zext i32 %5 to i64
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %3, align 8
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 %8
  %11 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0
  br label %13

12:                                               ; preds = %13, %2
  ret void

13:                                               ; preds = %7, %13
  %14 = phi %"class.blink::Member"* [ %10, %7 ], [ %15, %13 ]
  %15 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %14, i64 -1
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  tail call void @_ZN5blink13ContainerNode25RebuildLayoutTreeForChildEPNS_4NodeERNS_18WhitespaceAttacherE(%"class.blink::ContainerNode"* %11, %"class.blink::Node"* %17, %"class.blink::WhitespaceAttacher"* dereferenceable(24) %1) #10
  %18 = load %"class.blink::Member"*, %"class.blink::Member"** %3, align 8
  %19 = icmp eq %"class.blink::Member"* %15, %18
  br i1 %19, label %12, label %13
}

declare void @_ZN5blink13ContainerNode25RebuildLayoutTreeForChildEPNS_4NodeERNS_18WhitespaceAttacherE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::WhitespaceAttacher"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLSlotElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %10
  br i1 %11, label %12, label %77

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %13) #10
  %15 = icmp eq %"class.blink::ShadowRoot"* %14, null
  br i1 %15, label %77, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %17, align 8
  %19 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %20 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %22, %24
  br i1 %25, label %77, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %14, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %27, align 8
  %29 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  %30 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %26
  %36 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %58, label %40

40:                                               ; preds = %35, %31
  %41 = phi %"class.WTF::StringImpl"* [ %38, %35 ], [ %22, %31 ]
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %35, %40, %56
  %59 = phi %"class.WTF::StringImpl"* [ null, %35 ], [ %41, %40 ], [ %41, %56 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %60, align 8
  call void @_ZN5blink14SlotAssignment13DidRenameSlotERKN3WTF12AtomicStringERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"* %28, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.blink::HTMLSlotElement"* dereferenceable(192) %0) #10
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #10
  br label %76

76:                                               ; preds = %58, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %77

77:                                               ; preds = %16, %76, %12, %2
  %78 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0
  call void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"* %78, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #10
  ret void
}

declare void @_ZN5blink14SlotAssignment13DidRenameSlotERKN3WTF12AtomicStringERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15HTMLSlotElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLSlotElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #10
  %5 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 512
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %10) #10
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %13 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %12) #10
  %14 = icmp eq %"class.blink::ShadowRoot"* %11, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  tail call void @_ZN5blink10ShadowRoot10DidAddSlotERNS_15HTMLSlotElementE(%"class.blink::ShadowRoot"* %11, %"class.blink::HTMLSlotElement"* dereferenceable(192) %0) #10
  br label %24

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 256
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = tail call zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"* %11) #10
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @_ZN5blink15HTMLSlotElement37ClearAssignedNodesAndFlatTreeChildrenEv(%"class.blink::HTMLSlotElement"* %0)
  br label %24

24:                                               ; preds = %16, %2, %15, %23, %21
  ret i32 0
}

declare i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN5blink10ShadowRoot10DidAddSlotERNS_15HTMLSlotElementE(%"class.blink::ShadowRoot"*, %"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLSlotElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %3) #10
  %5 = icmp eq %"class.blink::ShadowRoot"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"* nonnull %4) #10
  br i1 %7, label %8, label %19

8:                                                ; preds = %6
  tail call void @_ZN5blink15HTMLSlotElement37ClearAssignedNodesAndFlatTreeChildrenEv(%"class.blink::HTMLSlotElement"* %0)
  br label %19

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 512
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %16 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %15) #10
  %17 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %17, align 8
  tail call void @_ZN5blink14SlotAssignment13DidRemoveSlotERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"* %18, %"class.blink::HTMLSlotElement"* dereferenceable(192) %0) #10
  tail call void @_ZN5blink15HTMLSlotElement37ClearAssignedNodesAndFlatTreeChildrenEv(%"class.blink::HTMLSlotElement"* %0)
  br label %19

19:                                               ; preds = %9, %14, %8, %6
  %20 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %20, %"class.blink::ContainerNode"* dereferenceable(80) %1) #10
  ret void
}

declare void @_ZN5blink14SlotAssignment13DidRemoveSlotERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"*, %"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement26RecalcStyleForSlotChildrenENS_17StyleRecalcChangeERKNS_18StyleRecalcContextE(%"class.blink::HTMLSlotElement"* nocapture readonly, i64, %"class.blink::StyleRecalcContext"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::StyleRecalcChange"*
  store i64 %1, i64* %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %32, %3
  ret void

14:                                               ; preds = %3, %32
  %15 = phi %"class.blink::Member"* [ %33, %32 ], [ %7, %3 ]
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = call zeroext i1 @_ZNK5blink17StyleRecalcChange13TraverseChildERKNS_4NodeE(%"class.blink::StyleRecalcChange"* nonnull %5, %"class.blink::Node"* dereferenceable(64) %17) #10
  br i1 %18, label %19, label %32

19:                                               ; preds = %14
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 12
  switch i32 %25, label %32 [
    i32 0, label %26
    i32 4, label %29
  ]

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::Node"* %20 to %"class.blink::Element"*
  %28 = load i64, i64* %4, align 8
  call void @_ZN5blink7Element11RecalcStyleENS_17StyleRecalcChangeERKNS_18StyleRecalcContextE(%"class.blink::Element"* nonnull %27, i64 %28, %"class.blink::StyleRecalcContext"* dereferenceable(8) %2) #10
  br label %32

29:                                               ; preds = %22
  %30 = bitcast %"class.blink::Node"* %20 to %"class.blink::Text"*
  %31 = load i64, i64* %4, align 8
  call void @_ZN5blink4Text15RecalcTextStyleENS_17StyleRecalcChangeE(%"class.blink::Text"* nonnull %30, i64 %31) #10
  br label %32

32:                                               ; preds = %22, %19, %26, %29, %14
  %33 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 1
  %34 = icmp eq %"class.blink::Member"* %33, %11
  br i1 %34, label %13, label %14
}

declare zeroext i1 @_ZNK5blink17StyleRecalcChange13TraverseChildERKNS_4NodeE(%"class.blink::StyleRecalcChange"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink7Element11RecalcStyleENS_17StyleRecalcChangeERKNS_18StyleRecalcContextE(%"class.blink::Element"*, i64, %"class.blink::StyleRecalcContext"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4Text15RecalcTextStyleENS_17StyleRecalcChangeE(%"class.blink::Text"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_(%"class.blink::HeapVector"* dereferenceable(16), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E11s_lcs_table to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %127, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E11s_lcs_table) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %127, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 1296, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %9 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 16, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 16, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 32
  %17 = bitcast i8* %10 to i8**
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 16, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 28
  %21 = bitcast i8* %20 to i32*
  store i32 16, i32* %21, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 64, i1 false) #10
  %22 = getelementptr inbounds i8, i8* %9, i64 96
  %23 = getelementptr inbounds i8, i8* %9, i64 112
  %24 = bitcast i8* %22 to i8**
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %9, i64 104
  %26 = bitcast i8* %25 to i32*
  store i32 16, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 108
  %28 = bitcast i8* %27 to i32*
  store i32 16, i32* %28, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 64, i1 false) #10
  %29 = getelementptr inbounds i8, i8* %9, i64 176
  %30 = getelementptr inbounds i8, i8* %9, i64 192
  %31 = bitcast i8* %29 to i8**
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %9, i64 184
  %33 = bitcast i8* %32 to i32*
  store i32 16, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %9, i64 188
  %35 = bitcast i8* %34 to i32*
  store i32 16, i32* %35, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 64, i1 false) #10
  %36 = getelementptr inbounds i8, i8* %9, i64 256
  %37 = getelementptr inbounds i8, i8* %9, i64 272
  %38 = bitcast i8* %36 to i8**
  store i8* %37, i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %9, i64 264
  %40 = bitcast i8* %39 to i32*
  store i32 16, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %9, i64 268
  %42 = bitcast i8* %41 to i32*
  store i32 16, i32* %42, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 64, i1 false) #10
  %43 = getelementptr inbounds i8, i8* %9, i64 336
  %44 = getelementptr inbounds i8, i8* %9, i64 352
  %45 = bitcast i8* %43 to i8**
  store i8* %44, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %9, i64 344
  %47 = bitcast i8* %46 to i32*
  store i32 16, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %9, i64 348
  %49 = bitcast i8* %48 to i32*
  store i32 16, i32* %49, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 64, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %9, i64 416
  %51 = getelementptr inbounds i8, i8* %9, i64 432
  %52 = bitcast i8* %50 to i8**
  store i8* %51, i8** %52, align 8
  %53 = getelementptr inbounds i8, i8* %9, i64 424
  %54 = bitcast i8* %53 to i32*
  store i32 16, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %9, i64 428
  %56 = bitcast i8* %55 to i32*
  store i32 16, i32* %56, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 64, i1 false) #10
  %57 = getelementptr inbounds i8, i8* %9, i64 496
  %58 = getelementptr inbounds i8, i8* %9, i64 512
  %59 = bitcast i8* %57 to i8**
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %9, i64 504
  %61 = bitcast i8* %60 to i32*
  store i32 16, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %9, i64 508
  %63 = bitcast i8* %62 to i32*
  store i32 16, i32* %63, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 64, i1 false) #10
  %64 = getelementptr inbounds i8, i8* %9, i64 576
  %65 = getelementptr inbounds i8, i8* %9, i64 592
  %66 = bitcast i8* %64 to i8**
  store i8* %65, i8** %66, align 8
  %67 = getelementptr inbounds i8, i8* %9, i64 584
  %68 = bitcast i8* %67 to i32*
  store i32 16, i32* %68, align 8
  %69 = getelementptr inbounds i8, i8* %9, i64 588
  %70 = bitcast i8* %69 to i32*
  store i32 16, i32* %70, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 64, i1 false) #10
  %71 = getelementptr inbounds i8, i8* %9, i64 656
  %72 = getelementptr inbounds i8, i8* %9, i64 672
  %73 = bitcast i8* %71 to i8**
  store i8* %72, i8** %73, align 8
  %74 = getelementptr inbounds i8, i8* %9, i64 664
  %75 = bitcast i8* %74 to i32*
  store i32 16, i32* %75, align 8
  %76 = getelementptr inbounds i8, i8* %9, i64 668
  %77 = bitcast i8* %76 to i32*
  store i32 16, i32* %77, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 64, i1 false) #10
  %78 = getelementptr inbounds i8, i8* %9, i64 736
  %79 = getelementptr inbounds i8, i8* %9, i64 752
  %80 = bitcast i8* %78 to i8**
  store i8* %79, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %9, i64 744
  %82 = bitcast i8* %81 to i32*
  store i32 16, i32* %82, align 8
  %83 = getelementptr inbounds i8, i8* %9, i64 748
  %84 = bitcast i8* %83 to i32*
  store i32 16, i32* %84, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %79, i8 0, i64 64, i1 false) #10
  %85 = getelementptr inbounds i8, i8* %9, i64 816
  %86 = getelementptr inbounds i8, i8* %9, i64 832
  %87 = bitcast i8* %85 to i8**
  store i8* %86, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %9, i64 824
  %89 = bitcast i8* %88 to i32*
  store i32 16, i32* %89, align 8
  %90 = getelementptr inbounds i8, i8* %9, i64 828
  %91 = bitcast i8* %90 to i32*
  store i32 16, i32* %91, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 64, i1 false) #10
  %92 = getelementptr inbounds i8, i8* %9, i64 896
  %93 = getelementptr inbounds i8, i8* %9, i64 912
  %94 = bitcast i8* %92 to i8**
  store i8* %93, i8** %94, align 8
  %95 = getelementptr inbounds i8, i8* %9, i64 904
  %96 = bitcast i8* %95 to i32*
  store i32 16, i32* %96, align 8
  %97 = getelementptr inbounds i8, i8* %9, i64 908
  %98 = bitcast i8* %97 to i32*
  store i32 16, i32* %98, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %93, i8 0, i64 64, i1 false) #10
  %99 = getelementptr inbounds i8, i8* %9, i64 976
  %100 = getelementptr inbounds i8, i8* %9, i64 992
  %101 = bitcast i8* %99 to i8**
  store i8* %100, i8** %101, align 8
  %102 = getelementptr inbounds i8, i8* %9, i64 984
  %103 = bitcast i8* %102 to i32*
  store i32 16, i32* %103, align 8
  %104 = getelementptr inbounds i8, i8* %9, i64 988
  %105 = bitcast i8* %104 to i32*
  store i32 16, i32* %105, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %100, i8 0, i64 64, i1 false) #10
  %106 = getelementptr inbounds i8, i8* %9, i64 1056
  %107 = getelementptr inbounds i8, i8* %9, i64 1072
  %108 = bitcast i8* %106 to i8**
  store i8* %107, i8** %108, align 8
  %109 = getelementptr inbounds i8, i8* %9, i64 1064
  %110 = bitcast i8* %109 to i32*
  store i32 16, i32* %110, align 8
  %111 = getelementptr inbounds i8, i8* %9, i64 1068
  %112 = bitcast i8* %111 to i32*
  store i32 16, i32* %112, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %107, i8 0, i64 64, i1 false) #10
  %113 = getelementptr inbounds i8, i8* %9, i64 1136
  %114 = getelementptr inbounds i8, i8* %9, i64 1152
  %115 = bitcast i8* %113 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %9, i64 1144
  %117 = bitcast i8* %116 to i32*
  store i32 16, i32* %117, align 8
  %118 = getelementptr inbounds i8, i8* %9, i64 1148
  %119 = bitcast i8* %118 to i32*
  store i32 16, i32* %119, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 64, i1 false) #10
  %120 = getelementptr inbounds i8, i8* %9, i64 1216
  %121 = getelementptr inbounds i8, i8* %9, i64 1232
  %122 = bitcast i8* %120 to i8**
  store i8* %121, i8** %122, align 8
  %123 = getelementptr inbounds i8, i8* %9, i64 1224
  %124 = bitcast i8* %123 to i32*
  store i32 16, i32* %124, align 8
  %125 = getelementptr inbounds i8, i8* %9, i64 1228
  %126 = bitcast i8* %125 to i32*
  store i32 16, i32* %126, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 64, i1 false) #10
  store i8* %9, i8** bitcast (%"class.WTF::StaticSingleton.1852"* @_ZZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E11s_lcs_table to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E11s_lcs_table) #10
  br label %127

127:                                              ; preds = %5, %8, %2
  %128 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E17s_backtrack_table to i8*) acquire, align 8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %252, !prof !2

130:                                              ; preds = %127
  %131 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E17s_backtrack_table) #10
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %252, label %133

133:                                              ; preds = %130
  %134 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 2320, i8* getelementptr inbounds ([170 x i8], [170 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink15HTMLSlotElement8LCSArrayINSt3__14pairIjjEELj16EEELj16ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %135 = getelementptr inbounds i8, i8* %134, i64 16
  %136 = bitcast i8* %134 to i8**
  store i8* %135, i8** %136, align 8
  %137 = getelementptr inbounds i8, i8* %134, i64 8
  %138 = bitcast i8* %137 to i32*
  store i32 16, i32* %138, align 8
  %139 = getelementptr inbounds i8, i8* %134, i64 12
  %140 = bitcast i8* %139 to i32*
  store i32 16, i32* %140, align 4
  %141 = getelementptr inbounds i8, i8* %134, i64 32
  %142 = bitcast i8* %135 to i8**
  store i8* %141, i8** %142, align 8
  %143 = getelementptr inbounds i8, i8* %134, i64 24
  %144 = bitcast i8* %143 to i32*
  store i32 16, i32* %144, align 8
  %145 = getelementptr inbounds i8, i8* %134, i64 28
  %146 = bitcast i8* %145 to i32*
  store i32 16, i32* %146, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %141, i8 0, i64 128, i1 false) #10
  %147 = getelementptr inbounds i8, i8* %134, i64 160
  %148 = getelementptr inbounds i8, i8* %134, i64 176
  %149 = bitcast i8* %147 to i8**
  store i8* %148, i8** %149, align 8
  %150 = getelementptr inbounds i8, i8* %134, i64 168
  %151 = bitcast i8* %150 to i32*
  store i32 16, i32* %151, align 8
  %152 = getelementptr inbounds i8, i8* %134, i64 172
  %153 = bitcast i8* %152 to i32*
  store i32 16, i32* %153, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %148, i8 0, i64 128, i1 false) #10
  %154 = getelementptr inbounds i8, i8* %134, i64 304
  %155 = getelementptr inbounds i8, i8* %134, i64 320
  %156 = bitcast i8* %154 to i8**
  store i8* %155, i8** %156, align 8
  %157 = getelementptr inbounds i8, i8* %134, i64 312
  %158 = bitcast i8* %157 to i32*
  store i32 16, i32* %158, align 8
  %159 = getelementptr inbounds i8, i8* %134, i64 316
  %160 = bitcast i8* %159 to i32*
  store i32 16, i32* %160, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %155, i8 0, i64 128, i1 false) #10
  %161 = getelementptr inbounds i8, i8* %134, i64 448
  %162 = getelementptr inbounds i8, i8* %134, i64 464
  %163 = bitcast i8* %161 to i8**
  store i8* %162, i8** %163, align 8
  %164 = getelementptr inbounds i8, i8* %134, i64 456
  %165 = bitcast i8* %164 to i32*
  store i32 16, i32* %165, align 8
  %166 = getelementptr inbounds i8, i8* %134, i64 460
  %167 = bitcast i8* %166 to i32*
  store i32 16, i32* %167, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %162, i8 0, i64 128, i1 false) #10
  %168 = getelementptr inbounds i8, i8* %134, i64 592
  %169 = getelementptr inbounds i8, i8* %134, i64 608
  %170 = bitcast i8* %168 to i8**
  store i8* %169, i8** %170, align 8
  %171 = getelementptr inbounds i8, i8* %134, i64 600
  %172 = bitcast i8* %171 to i32*
  store i32 16, i32* %172, align 8
  %173 = getelementptr inbounds i8, i8* %134, i64 604
  %174 = bitcast i8* %173 to i32*
  store i32 16, i32* %174, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %169, i8 0, i64 128, i1 false) #10
  %175 = getelementptr inbounds i8, i8* %134, i64 736
  %176 = getelementptr inbounds i8, i8* %134, i64 752
  %177 = bitcast i8* %175 to i8**
  store i8* %176, i8** %177, align 8
  %178 = getelementptr inbounds i8, i8* %134, i64 744
  %179 = bitcast i8* %178 to i32*
  store i32 16, i32* %179, align 8
  %180 = getelementptr inbounds i8, i8* %134, i64 748
  %181 = bitcast i8* %180 to i32*
  store i32 16, i32* %181, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %176, i8 0, i64 128, i1 false) #10
  %182 = getelementptr inbounds i8, i8* %134, i64 880
  %183 = getelementptr inbounds i8, i8* %134, i64 896
  %184 = bitcast i8* %182 to i8**
  store i8* %183, i8** %184, align 8
  %185 = getelementptr inbounds i8, i8* %134, i64 888
  %186 = bitcast i8* %185 to i32*
  store i32 16, i32* %186, align 8
  %187 = getelementptr inbounds i8, i8* %134, i64 892
  %188 = bitcast i8* %187 to i32*
  store i32 16, i32* %188, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %183, i8 0, i64 128, i1 false) #10
  %189 = getelementptr inbounds i8, i8* %134, i64 1024
  %190 = getelementptr inbounds i8, i8* %134, i64 1040
  %191 = bitcast i8* %189 to i8**
  store i8* %190, i8** %191, align 8
  %192 = getelementptr inbounds i8, i8* %134, i64 1032
  %193 = bitcast i8* %192 to i32*
  store i32 16, i32* %193, align 8
  %194 = getelementptr inbounds i8, i8* %134, i64 1036
  %195 = bitcast i8* %194 to i32*
  store i32 16, i32* %195, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %190, i8 0, i64 128, i1 false) #10
  %196 = getelementptr inbounds i8, i8* %134, i64 1168
  %197 = getelementptr inbounds i8, i8* %134, i64 1184
  %198 = bitcast i8* %196 to i8**
  store i8* %197, i8** %198, align 8
  %199 = getelementptr inbounds i8, i8* %134, i64 1176
  %200 = bitcast i8* %199 to i32*
  store i32 16, i32* %200, align 8
  %201 = getelementptr inbounds i8, i8* %134, i64 1180
  %202 = bitcast i8* %201 to i32*
  store i32 16, i32* %202, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %197, i8 0, i64 128, i1 false) #10
  %203 = getelementptr inbounds i8, i8* %134, i64 1312
  %204 = getelementptr inbounds i8, i8* %134, i64 1328
  %205 = bitcast i8* %203 to i8**
  store i8* %204, i8** %205, align 8
  %206 = getelementptr inbounds i8, i8* %134, i64 1320
  %207 = bitcast i8* %206 to i32*
  store i32 16, i32* %207, align 8
  %208 = getelementptr inbounds i8, i8* %134, i64 1324
  %209 = bitcast i8* %208 to i32*
  store i32 16, i32* %209, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %204, i8 0, i64 128, i1 false) #10
  %210 = getelementptr inbounds i8, i8* %134, i64 1456
  %211 = getelementptr inbounds i8, i8* %134, i64 1472
  %212 = bitcast i8* %210 to i8**
  store i8* %211, i8** %212, align 8
  %213 = getelementptr inbounds i8, i8* %134, i64 1464
  %214 = bitcast i8* %213 to i32*
  store i32 16, i32* %214, align 8
  %215 = getelementptr inbounds i8, i8* %134, i64 1468
  %216 = bitcast i8* %215 to i32*
  store i32 16, i32* %216, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %211, i8 0, i64 128, i1 false) #10
  %217 = getelementptr inbounds i8, i8* %134, i64 1600
  %218 = getelementptr inbounds i8, i8* %134, i64 1616
  %219 = bitcast i8* %217 to i8**
  store i8* %218, i8** %219, align 8
  %220 = getelementptr inbounds i8, i8* %134, i64 1608
  %221 = bitcast i8* %220 to i32*
  store i32 16, i32* %221, align 8
  %222 = getelementptr inbounds i8, i8* %134, i64 1612
  %223 = bitcast i8* %222 to i32*
  store i32 16, i32* %223, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %218, i8 0, i64 128, i1 false) #10
  %224 = getelementptr inbounds i8, i8* %134, i64 1744
  %225 = getelementptr inbounds i8, i8* %134, i64 1760
  %226 = bitcast i8* %224 to i8**
  store i8* %225, i8** %226, align 8
  %227 = getelementptr inbounds i8, i8* %134, i64 1752
  %228 = bitcast i8* %227 to i32*
  store i32 16, i32* %228, align 8
  %229 = getelementptr inbounds i8, i8* %134, i64 1756
  %230 = bitcast i8* %229 to i32*
  store i32 16, i32* %230, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %225, i8 0, i64 128, i1 false) #10
  %231 = getelementptr inbounds i8, i8* %134, i64 1888
  %232 = getelementptr inbounds i8, i8* %134, i64 1904
  %233 = bitcast i8* %231 to i8**
  store i8* %232, i8** %233, align 8
  %234 = getelementptr inbounds i8, i8* %134, i64 1896
  %235 = bitcast i8* %234 to i32*
  store i32 16, i32* %235, align 8
  %236 = getelementptr inbounds i8, i8* %134, i64 1900
  %237 = bitcast i8* %236 to i32*
  store i32 16, i32* %237, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %232, i8 0, i64 128, i1 false) #10
  %238 = getelementptr inbounds i8, i8* %134, i64 2032
  %239 = getelementptr inbounds i8, i8* %134, i64 2048
  %240 = bitcast i8* %238 to i8**
  store i8* %239, i8** %240, align 8
  %241 = getelementptr inbounds i8, i8* %134, i64 2040
  %242 = bitcast i8* %241 to i32*
  store i32 16, i32* %242, align 8
  %243 = getelementptr inbounds i8, i8* %134, i64 2044
  %244 = bitcast i8* %243 to i32*
  store i32 16, i32* %244, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %239, i8 0, i64 128, i1 false) #10
  %245 = getelementptr inbounds i8, i8* %134, i64 2176
  %246 = getelementptr inbounds i8, i8* %134, i64 2192
  %247 = bitcast i8* %245 to i8**
  store i8* %246, i8** %247, align 8
  %248 = getelementptr inbounds i8, i8* %134, i64 2184
  %249 = bitcast i8* %248 to i32*
  store i32 16, i32* %249, align 8
  %250 = getelementptr inbounds i8, i8* %134, i64 2188
  %251 = bitcast i8* %250 to i32*
  store i32 16, i32* %251, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %246, i8 0, i64 128, i1 false) #10
  store i8* %134, i8** bitcast (%"class.WTF::StaticSingleton.1866"* @_ZZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E17s_backtrack_table to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E17s_backtrack_table) #10
  br label %252

252:                                              ; preds = %130, %133, %127
  %253 = load %"class.WTF::Vector.1857"*, %"class.WTF::Vector.1857"** bitcast (%"class.WTF::StaticSingleton.1852"* @_ZZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E11s_lcs_table to %"class.WTF::Vector.1857"**), align 8
  %254 = load %"class.WTF::Vector.1871"*, %"class.WTF::Vector.1871"** bitcast (%"class.WTF::StaticSingleton.1866"* @_ZZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E17s_backtrack_table to %"class.WTF::Vector.1871"**), align 8
  tail call void @_ZN5blink15HTMLSlotElement51FillLongestCommonSubsequenceDynamicProgrammingTableINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEN3WTF6VectorINS0_8LCSArrayIjLj16EEELj16ENS7_18PartitionAllocatorEEENS8_INS9_INSt3__14pairIjjEELj16EEELj16ESB_EEEEvRKT_SK_RT0_RT1_(%"class.blink::HeapVector"* dereferenceable(16) %0, %"class.blink::HeapVector"* dereferenceable(16) %1, %"class.WTF::Vector.1857"* dereferenceable(1296) %253, %"class.WTF::Vector.1871"* dereferenceable(2320) %254)
  %255 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  %258 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %259 = load i32, i32* %258, align 4
  %260 = icmp ne i32 %256, 0
  %261 = icmp ne i32 %259, 0
  %262 = and i1 %261, %260
  br i1 %262, label %263, label %294

263:                                              ; preds = %252, %288
  %264 = phi i32 [ %272, %288 ], [ %256, %252 ]
  %265 = phi i32 [ %274, %288 ], [ %259, %252 ]
  %266 = load %"class.WTF::Vector.1871"*, %"class.WTF::Vector.1871"** bitcast (%"class.WTF::StaticSingleton.1866"* @_ZZN5blink15HTMLSlotElement54NotifySlottedNodesOfFlatTreeChangeByDynamicProgrammingERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_E17s_backtrack_table to %"class.WTF::Vector.1871"**), align 8
  %267 = tail call dereferenceable(144) %"struct.blink::HTMLSlotElement::LCSArray.1874"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayINSt3__14pairIjjEELj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1871"* %266, i32 %264) #10
  %268 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray.1874", %"struct.blink::HTMLSlotElement::LCSArray.1874"* %267, i64 0, i32 0
  %269 = tail call dereferenceable(8) %"struct.std::__1::pair.1878"* @_ZN3WTF6VectorINSt3__14pairIjjEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* %268, i32 %265) #10
  %270 = bitcast %"struct.std::__1::pair.1878"* %269 to i64*
  %271 = load i64, i64* %270, align 4
  %272 = trunc i64 %271 to i32
  %273 = lshr i64 %271, 32
  %274 = trunc i64 %273 to i32
  %275 = add i32 %264, -1
  %276 = add i32 %265, -1
  %277 = icmp eq i32 %275, %272
  %278 = icmp eq i32 %276, %274
  %279 = and i1 %277, %278
  %280 = xor i1 %279, true
  %281 = icmp eq i32 %264, %272
  %282 = and i1 %281, %278
  %283 = and i1 %282, %280
  br i1 %283, label %284, label %288

284:                                              ; preds = %263
  %285 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %257, i32 %274) #10
  %286 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %285, i64 0, i32 0, i32 0
  %287 = load %"class.blink::Node"*, %"class.blink::Node"** %286, align 8
  tail call void @_ZN5blink4Node21FlatTreeParentChangedEv(%"class.blink::Node"* %287) #10
  br label %288

288:                                              ; preds = %263, %284
  %289 = icmp ne i32 %272, 0
  %290 = icmp ne i32 %274, 0
  %291 = and i1 %290, %289
  br i1 %291, label %263, label %292

292:                                              ; preds = %288
  %293 = trunc i64 %273 to i32
  br label %294

294:                                              ; preds = %292, %252
  %295 = phi i32 [ %259, %252 ], [ %293, %292 ]
  %296 = phi i1 [ %261, %252 ], [ %290, %292 ]
  %297 = icmp ne i32 %295, 0
  %298 = and i1 %296, %297
  br i1 %298, label %299, label %306

299:                                              ; preds = %294, %299
  %300 = phi i32 [ %304, %299 ], [ 0, %294 ]
  %301 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %257, i32 %300) #10
  %302 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %301, i64 0, i32 0, i32 0
  %303 = load %"class.blink::Node"*, %"class.blink::Node"** %302, align 8
  tail call void @_ZN5blink4Node21FlatTreeParentChangedEv(%"class.blink::Node"* %303) #10
  %304 = add nuw i32 %300, 1
  %305 = icmp ult i32 %304, %295
  br i1 %305, label %299, label %306

306:                                              ; preds = %299, %294
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15HTMLSlotElement51FillLongestCommonSubsequenceDynamicProgrammingTableINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEN3WTF6VectorINS0_8LCSArrayIjLj16EEELj16ENS7_18PartitionAllocatorEEENS8_INS9_INSt3__14pairIjjEELj16EEELj16ESB_EEEEvRKT_SK_RT0_RT1_(%"class.blink::HeapVector"* dereferenceable(16), %"class.blink::HeapVector"* dereferenceable(16), %"class.WTF::Vector.1857"* dereferenceable(1296), %"class.WTF::Vector.1871"* dereferenceable(2320)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  br label %9

9:                                                ; preds = %4, %9
  %10 = phi i32 [ 0, %4 ], [ %14, %9 ]
  %11 = tail call dereferenceable(80) %"struct.blink::HTMLSlotElement::LCSArray"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1857"* %2, i32 %10) #10
  %12 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray", %"struct.blink::HTMLSlotElement::LCSArray"* %11, i64 0, i32 0
  %13 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1860"* %12, i32 0) #10
  store i32 0, i32* %13, align 4
  %14 = add i32 %10, 1
  %15 = icmp ugt i32 %14, %6
  br i1 %15, label %16, label %9

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  br label %23

19:                                               ; preds = %23
  %20 = icmp eq i32 %6, 0
  br i1 %20, label %34, label %21

21:                                               ; preds = %19
  %22 = icmp eq i32 %8, 0
  br label %30

23:                                               ; preds = %16, %23
  %24 = phi i32 [ %28, %23 ], [ 0, %16 ]
  %25 = tail call dereferenceable(80) %"struct.blink::HTMLSlotElement::LCSArray"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1857"* %2, i32 0) #10
  %26 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray", %"struct.blink::HTMLSlotElement::LCSArray"* %25, i64 0, i32 0
  %27 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1860"* %26, i32 %24) #10
  store i32 0, i32* %27, align 4
  %28 = add i32 %24, 1
  %29 = icmp ugt i32 %28, %8
  br i1 %29, label %19, label %23

30:                                               ; preds = %21, %35
  %31 = phi i32 [ 1, %21 ], [ %36, %35 ]
  br i1 %22, label %35, label %32

32:                                               ; preds = %30
  %33 = add i32 %31, -1
  br label %38

34:                                               ; preds = %35, %19
  ret void

35:                                               ; preds = %72, %30
  %36 = add i32 %31, 1
  %37 = icmp ugt i32 %36, %6
  br i1 %37, label %34, label %30

38:                                               ; preds = %32, %72
  %39 = phi i32 [ 1, %32 ], [ %84, %72 ]
  %40 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %17, i32 %33) #10
  %41 = add i32 %39, -1
  %42 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %18, i32 %41) #10
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %40, i64 0, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %42, i64 0, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %44, %46
  %48 = tail call dereferenceable(80) %"struct.blink::HTMLSlotElement::LCSArray"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1857"* %2, i32 %33) #10
  %49 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray", %"struct.blink::HTMLSlotElement::LCSArray"* %48, i64 0, i32 0
  br i1 %47, label %50, label %54

50:                                               ; preds = %38
  %51 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1860"* %49, i32 %41) #10
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %52, 1
  br label %72

54:                                               ; preds = %38
  %55 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1860"* %49, i32 %39) #10
  %56 = load i32, i32* %55, align 4
  %57 = tail call dereferenceable(80) %"struct.blink::HTMLSlotElement::LCSArray"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1857"* %2, i32 %31) #10
  %58 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray", %"struct.blink::HTMLSlotElement::LCSArray"* %57, i64 0, i32 0
  %59 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1860"* %58, i32 %41) #10
  %60 = load i32, i32* %59, align 4
  %61 = icmp ugt i32 %56, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %54
  %63 = tail call dereferenceable(80) %"struct.blink::HTMLSlotElement::LCSArray"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1857"* %2, i32 %33) #10
  %64 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray", %"struct.blink::HTMLSlotElement::LCSArray"* %63, i64 0, i32 0
  %65 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1860"* %64, i32 %39) #10
  %66 = load i32, i32* %65, align 4
  br label %72

67:                                               ; preds = %54
  %68 = tail call dereferenceable(80) %"struct.blink::HTMLSlotElement::LCSArray"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1857"* %2, i32 %31) #10
  %69 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray", %"struct.blink::HTMLSlotElement::LCSArray"* %68, i64 0, i32 0
  %70 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1860"* %69, i32 %41) #10
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %50, %67, %62
  %73 = phi i32 [ %53, %50 ], [ %71, %67 ], [ %66, %62 ]
  %74 = phi i32 [ %33, %50 ], [ %31, %67 ], [ %33, %62 ]
  %75 = phi i32 [ %41, %50 ], [ %41, %67 ], [ %39, %62 ]
  %76 = tail call dereferenceable(80) %"struct.blink::HTMLSlotElement::LCSArray"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1857"* %2, i32 %31) #10
  %77 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray", %"struct.blink::HTMLSlotElement::LCSArray"* %76, i64 0, i32 0
  %78 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1860"* %77, i32 %39) #10
  store i32 %73, i32* %78, align 4
  %79 = tail call dereferenceable(144) %"struct.blink::HTMLSlotElement::LCSArray.1874"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayINSt3__14pairIjjEELj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1871"* %3, i32 %31) #10
  %80 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray.1874", %"struct.blink::HTMLSlotElement::LCSArray.1874"* %79, i64 0, i32 0
  %81 = tail call dereferenceable(8) %"struct.std::__1::pair.1878"* @_ZN3WTF6VectorINSt3__14pairIjjEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* %80, i32 %39) #10
  %82 = getelementptr inbounds %"struct.std::__1::pair.1878", %"struct.std::__1::pair.1878"* %81, i64 0, i32 0
  store i32 %74, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.std::__1::pair.1878", %"struct.std::__1::pair.1878"* %81, i64 0, i32 1
  store i32 %75, i32* %83, align 4
  %84 = add i32 %39, 1
  %85 = icmp ugt i32 %84, %8
  br i1 %85, label %35, label %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement39NotifySlottedNodesOfFlatTreeChangeNaiveERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEES7_(%"class.blink::HeapVector"* dereferenceable(16), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapHashMap.1884", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.blink::HeapVector", align 8
  %9 = alloca %"class.blink::Node"*, align 8
  %10 = bitcast %"class.blink::HeapHashMap.1884"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.blink::HeapHashMap.1884", %"class.blink::HeapHashMap.1884"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HeapHashMap.1884", %"class.blink::HeapHashMap.1884"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.blink::HeapHashMap.1884"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 20, i1 false) #10
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 0, i32* %4, align 4
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::HeapHashMap.1884", %"class.blink::HeapHashMap.1884"* %3, i64 0, i32 0, i32 0
  br label %39

21:                                               ; preds = %39, %2
  %22 = phi i32 [ 0, %2 ], [ %45, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  %23 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #10
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = icmp eq i32 %22, 0
  br i1 %28, label %160, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  %31 = getelementptr inbounds %"class.blink::HeapHashMap.1884", %"class.blink::HeapHashMap.1884"* %3, i64 0, i32 0
  %32 = bitcast %"class.blink::Node"** %6 to i8*
  %33 = bitcast %"class.blink::Node"** %6 to i64*
  %34 = bitcast %"class.blink::Node"** %7 to i8*
  %35 = bitcast %"class.blink::Node"** %7 to i64*
  %36 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %37 = load i32, i32* %27, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %160, label %47

39:                                               ; preds = %19, %39
  %40 = phi i32 [ 0, %19 ], [ %44, %39 ]
  %41 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %15, i32 %40) #10
  %42 = call { %"struct.WTF::KeyValuePair.1890"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1888"* nonnull %20, %"class.blink::Member"* dereferenceable(8) %41, i32* nonnull dereferenceable(4) %4) #10
  %43 = load i32, i32* %4, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %4, align 4
  %45 = load i32, i32* %16, align 4
  %46 = icmp ult i32 %44, %45
  br i1 %46, label %39, label %21

47:                                               ; preds = %29, %152
  %48 = phi i32 [ %154, %152 ], [ 0, %29 ]
  %49 = phi i32 [ %153, %152 ], [ 0, %29 ]
  %50 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %30, i32 %48) #10
  %51 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %15, i32 %49) #10
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %50, i64 0, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %53, %55
  %57 = ptrtoint %"class.blink::Node"* %55 to i64
  br i1 %56, label %58, label %60

58:                                               ; preds = %47
  %59 = add nuw i32 %49, 1
  br label %152

60:                                               ; preds = %47
  %61 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %11, align 8
  %62 = icmp eq %"struct.WTF::KeyValuePair.1890"* %61, null
  br i1 %62, label %132, label %63

63:                                               ; preds = %60
  %64 = load i32, i32* %12, align 8
  %65 = add i32 %64, -1
  %66 = zext i32 %65 to i64
  %67 = shl i64 %57, 32
  %68 = xor i64 %67, -1
  %69 = add i64 %68, %57
  %70 = lshr i64 %69, 22
  %71 = xor i64 %70, %69
  %72 = shl i64 %71, 13
  %73 = xor i64 %72, -1
  %74 = add i64 %71, %73
  %75 = lshr i64 %74, 8
  %76 = xor i64 %75, %74
  %77 = mul i64 %76, 9
  %78 = lshr i64 %77, 15
  %79 = xor i64 %78, %77
  %80 = shl i64 %79, 27
  %81 = xor i64 %80, -1
  %82 = add i64 %79, %81
  %83 = lshr i64 %82, 31
  %84 = xor i64 %83, %82
  %85 = trunc i64 %84 to i32
  %86 = and i32 %65, %85
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %61, i64 %87
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %89, align 8
  %91 = icmp eq %"class.blink::Node"* %90, %55
  br i1 %91, label %121, label %92

92:                                               ; preds = %63
  %93 = xor i32 %85, -1
  %94 = lshr i32 %85, 23
  %95 = add i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %106

106:                                              ; preds = %112, %92
  %107 = phi i64 [ %87, %92 ], [ %116, %112 ]
  %108 = phi i64 [ 0, %92 ], [ %114, %112 ]
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %61, i64 %107, i32 0, i32 0, i32 0
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %109, align 8
  %111 = icmp eq %"class.blink::Node"* %110, null
  br i1 %111, label %132, label %112

112:                                              ; preds = %106
  %113 = icmp eq i64 %108, 0
  %114 = select i1 %113, i64 %105, i64 %108
  %115 = add i64 %114, %107
  %116 = and i64 %115, %66
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %61, i64 %116
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %118, align 8
  %120 = icmp eq %"class.blink::Node"* %119, %55
  br i1 %120, label %121, label %106

121:                                              ; preds = %112, %63
  %122 = phi %"struct.WTF::KeyValuePair.1890"* [ %88, %63 ], [ %117, %112 ]
  %123 = icmp eq %"struct.WTF::KeyValuePair.1890"* %122, null
  br i1 %123, label %132, label %124

124:                                              ; preds = %121
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  store i64 %57, i64* %33, align 8
  %125 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1887"* nonnull %31, %"class.blink::Node"** nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  %126 = icmp ugt i32 %125, %49
  br i1 %126, label %127, label %132

127:                                              ; preds = %124
  %128 = bitcast %"class.blink::Member"* %50 to i64*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %35, align 8
  %130 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1887"* nonnull %31, %"class.blink::Node"** nonnull dereferenceable(8) %7)
  %131 = add i32 %130, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %152

132:                                              ; preds = %106, %121, %124, %60
  %133 = load i32, i32* %26, align 4
  %134 = load i32, i32* %25, align 8
  %135 = icmp eq i32 %133, %134
  br i1 %135, label %151, label %136, !prof !3

136:                                              ; preds = %132
  %137 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %138 = zext i32 %133 to i64
  %139 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %137, i64 %138
  %140 = bitcast %"class.blink::Member"* %50 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.blink::Member"* %139 to i64*
  store atomic i64 %141, i64* %142 monotonic, align 8
  %143 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %136
  %146 = inttoptr i64 %141 to i8*
  %147 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %146) #10
  br label %148

148:                                              ; preds = %145, %136
  %149 = load i32, i32* %26, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %26, align 4
  br label %152

151:                                              ; preds = %132
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.23"* nonnull %36, %"class.blink::Member"* dereferenceable(8) %50) #10
  br label %152

152:                                              ; preds = %151, %148, %127, %58
  %153 = phi i32 [ %59, %58 ], [ %131, %127 ], [ %49, %148 ], [ %49, %151 ]
  %154 = add i32 %48, 1
  %155 = load i32, i32* %16, align 4
  %156 = icmp ult i32 %153, %155
  %157 = load i32, i32* %27, align 4
  %158 = icmp ult i32 %154, %157
  %159 = and i1 %156, %158
  br i1 %159, label %47, label %160

160:                                              ; preds = %152, %29, %21
  %161 = phi i32 [ 0, %21 ], [ %22, %29 ], [ %155, %152 ]
  %162 = phi i32 [ 0, %21 ], [ 0, %29 ], [ %154, %152 ]
  %163 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  %164 = load i32, i32* %27, align 4
  %165 = icmp ult i32 %162, %164
  br i1 %165, label %166, label %196

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  br label %168

168:                                              ; preds = %166, %190
  %169 = phi i32 [ %162, %166 ], [ %191, %190 ]
  %170 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %163, i32 %169) #10
  %171 = load i32, i32* %26, align 4
  %172 = load i32, i32* %25, align 8
  %173 = icmp eq i32 %171, %172
  br i1 %173, label %189, label %174, !prof !3

174:                                              ; preds = %168
  %175 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %176 = zext i32 %171 to i64
  %177 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %175, i64 %176
  %178 = bitcast %"class.blink::Member"* %170 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.blink::Member"* %177 to i64*
  store atomic i64 %179, i64* %180 monotonic, align 8
  %181 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %186, label %183

183:                                              ; preds = %174
  %184 = inttoptr i64 %179 to i8*
  %185 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %184) #10
  br label %186

186:                                              ; preds = %183, %174
  %187 = load i32, i32* %26, align 4
  %188 = add i32 %187, 1
  store i32 %188, i32* %26, align 4
  br label %190

189:                                              ; preds = %168
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.23"* nonnull %167, %"class.blink::Member"* dereferenceable(8) %170) #10
  br label %190

190:                                              ; preds = %186, %189
  %191 = add nuw i32 %169, 1
  %192 = load i32, i32* %27, align 4
  %193 = icmp ult i32 %191, %192
  br i1 %193, label %168, label %194

194:                                              ; preds = %190
  %195 = load i32, i32* %16, align 4
  br label %196

196:                                              ; preds = %194, %160
  %197 = phi i32 [ %161, %160 ], [ %195, %194 ]
  %198 = phi i32 [ %164, %160 ], [ %192, %194 ]
  %199 = bitcast %"class.blink::HeapVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %199) #10
  %200 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %202 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 0, i64 16, i1 false) #10
  %203 = icmp ne i32 %197, 0
  %204 = icmp ne i32 %198, 0
  %205 = and i1 %204, %203
  br i1 %205, label %206, label %211

206:                                              ; preds = %196
  %207 = getelementptr inbounds %"class.blink::HeapHashMap.1884", %"class.blink::HeapHashMap.1884"* %3, i64 0, i32 0
  %208 = bitcast %"class.blink::Node"** %9 to i8*
  %209 = bitcast %"class.blink::Node"** %9 to i64*
  %210 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0
  br label %216

211:                                              ; preds = %318, %196
  %212 = phi i32 [ %198, %196 ], [ %319, %318 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %349, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0
  br label %324

216:                                              ; preds = %206, %318
  %217 = phi i32 [ %197, %206 ], [ %320, %318 ]
  %218 = phi i32 [ %198, %206 ], [ %319, %318 ]
  %219 = add i32 %218, -1
  %220 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %163, i32 %219) #10
  %221 = add i32 %217, -1
  %222 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %15, i32 %221) #10
  %223 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.blink::Node"*, %"class.blink::Node"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %220, i64 0, i32 0, i32 0
  %226 = load %"class.blink::Node"*, %"class.blink::Node"** %225, align 8
  %227 = icmp eq %"class.blink::Node"* %224, %226
  %228 = ptrtoint %"class.blink::Node"* %226 to i64
  br i1 %227, label %318, label %229

229:                                              ; preds = %216
  %230 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %11, align 8
  %231 = icmp eq %"struct.WTF::KeyValuePair.1890"* %230, null
  br i1 %231, label %296, label %232

232:                                              ; preds = %229
  %233 = load i32, i32* %12, align 8
  %234 = add i32 %233, -1
  %235 = zext i32 %234 to i64
  %236 = shl i64 %228, 32
  %237 = xor i64 %236, -1
  %238 = add i64 %237, %228
  %239 = lshr i64 %238, 22
  %240 = xor i64 %239, %238
  %241 = shl i64 %240, 13
  %242 = xor i64 %241, -1
  %243 = add i64 %240, %242
  %244 = lshr i64 %243, 8
  %245 = xor i64 %244, %243
  %246 = mul i64 %245, 9
  %247 = lshr i64 %246, 15
  %248 = xor i64 %247, %246
  %249 = shl i64 %248, 27
  %250 = xor i64 %249, -1
  %251 = add i64 %248, %250
  %252 = lshr i64 %251, 31
  %253 = xor i64 %252, %251
  %254 = trunc i64 %253 to i32
  %255 = and i32 %234, %254
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %230, i64 %256
  %258 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %257, i64 0, i32 0, i32 0, i32 0
  %259 = load %"class.blink::Node"*, %"class.blink::Node"** %258, align 8
  %260 = icmp eq %"class.blink::Node"* %259, %226
  br i1 %260, label %290, label %261

261:                                              ; preds = %232
  %262 = xor i32 %254, -1
  %263 = lshr i32 %254, 23
  %264 = add i32 %263, %262
  %265 = shl i32 %264, 12
  %266 = xor i32 %265, %264
  %267 = lshr i32 %266, 7
  %268 = xor i32 %267, %266
  %269 = shl i32 %268, 2
  %270 = xor i32 %269, %268
  %271 = lshr i32 %270, 20
  %272 = xor i32 %271, %270
  %273 = or i32 %272, 1
  %274 = zext i32 %273 to i64
  br label %275

275:                                              ; preds = %281, %261
  %276 = phi i64 [ %256, %261 ], [ %285, %281 ]
  %277 = phi i64 [ 0, %261 ], [ %283, %281 ]
  %278 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %230, i64 %276, i32 0, i32 0, i32 0
  %279 = load %"class.blink::Node"*, %"class.blink::Node"** %278, align 8
  %280 = icmp eq %"class.blink::Node"* %279, null
  br i1 %280, label %296, label %281

281:                                              ; preds = %275
  %282 = icmp eq i64 %277, 0
  %283 = select i1 %282, i64 %274, i64 %277
  %284 = add i64 %283, %276
  %285 = and i64 %284, %235
  %286 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %230, i64 %285
  %287 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %286, i64 0, i32 0, i32 0, i32 0
  %288 = load %"class.blink::Node"*, %"class.blink::Node"** %287, align 8
  %289 = icmp eq %"class.blink::Node"* %288, %226
  br i1 %289, label %290, label %275

290:                                              ; preds = %281, %232
  %291 = phi %"struct.WTF::KeyValuePair.1890"* [ %257, %232 ], [ %286, %281 ]
  %292 = icmp eq %"struct.WTF::KeyValuePair.1890"* %291, null
  br i1 %292, label %296, label %293

293:                                              ; preds = %290
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #10
  store i64 %228, i64* %209, align 8
  %294 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1887"* nonnull %207, %"class.blink::Node"** nonnull dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #10
  %295 = icmp ult i32 %294, %221
  br i1 %295, label %318, label %296

296:                                              ; preds = %275, %293, %290, %229
  %297 = load i32, i32* %202, align 4
  %298 = load i32, i32* %201, align 8
  %299 = icmp eq i32 %297, %298
  br i1 %299, label %315, label %300, !prof !3

300:                                              ; preds = %296
  %301 = load %"class.blink::Member"*, %"class.blink::Member"** %200, align 8
  %302 = zext i32 %297 to i64
  %303 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %301, i64 %302
  %304 = bitcast %"class.blink::Member"* %220 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.blink::Member"* %303 to i64*
  store atomic i64 %305, i64* %306 monotonic, align 8
  %307 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %312, label %309

309:                                              ; preds = %300
  %310 = inttoptr i64 %305 to i8*
  %311 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %310) #10
  br label %312

312:                                              ; preds = %309, %300
  %313 = load i32, i32* %202, align 4
  %314 = add i32 %313, 1
  store i32 %314, i32* %202, align 4
  br label %316

315:                                              ; preds = %296
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.23"* nonnull %210, %"class.blink::Member"* dereferenceable(8) %220) #10
  br label %316

316:                                              ; preds = %312, %315
  %317 = add i32 %218, -1
  br label %318

318:                                              ; preds = %293, %216, %316
  %319 = phi i32 [ %317, %316 ], [ %219, %293 ], [ %219, %216 ]
  %320 = phi i32 [ %217, %316 ], [ %294, %293 ], [ %221, %216 ]
  %321 = icmp ne i32 %320, 0
  %322 = icmp ne i32 %319, 0
  %323 = and i1 %322, %321
  br i1 %323, label %216, label %211

324:                                              ; preds = %214, %347
  %325 = phi i32 [ %212, %214 ], [ %326, %347 ]
  %326 = add i32 %325, -1
  %327 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"* %163, i32 %326) #10
  %328 = load i32, i32* %202, align 4
  %329 = load i32, i32* %201, align 8
  %330 = icmp eq i32 %328, %329
  br i1 %330, label %346, label %331, !prof !3

331:                                              ; preds = %324
  %332 = load %"class.blink::Member"*, %"class.blink::Member"** %200, align 8
  %333 = zext i32 %328 to i64
  %334 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %332, i64 %333
  %335 = bitcast %"class.blink::Member"* %327 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = bitcast %"class.blink::Member"* %334 to i64*
  store atomic i64 %336, i64* %337 monotonic, align 8
  %338 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %343, label %340

340:                                              ; preds = %331
  %341 = inttoptr i64 %336 to i8*
  %342 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %341) #10
  br label %343

343:                                              ; preds = %340, %331
  %344 = load i32, i32* %202, align 4
  %345 = add i32 %344, 1
  store i32 %345, i32* %202, align 4
  br label %347

346:                                              ; preds = %324
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.23"* nonnull %215, %"class.blink::Member"* dereferenceable(8) %327) #10
  br label %347

347:                                              ; preds = %343, %346
  %348 = icmp eq i32 %326, 0
  br i1 %348, label %349, label %324

349:                                              ; preds = %347, %211
  %350 = load i32, i32* %26, align 4
  %351 = load i32, i32* %202, align 4
  %352 = icmp ugt i32 %350, %351
  br i1 %352, label %364, label %353

353:                                              ; preds = %349
  %354 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %355 = zext i32 %350 to i64
  %356 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %354, i64 %355
  %357 = icmp eq i32 %350, 0
  br i1 %357, label %375, label %358

358:                                              ; preds = %353, %358
  %359 = phi %"class.blink::Member"* [ %362, %358 ], [ %354, %353 ]
  %360 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %359, i64 0, i32 0, i32 0
  %361 = load %"class.blink::Node"*, %"class.blink::Node"** %360, align 8
  call void @_ZN5blink4Node21FlatTreeParentChangedEv(%"class.blink::Node"* %361) #10
  %362 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %359, i64 1
  %363 = icmp eq %"class.blink::Member"* %362, %356
  br i1 %363, label %375, label %358

364:                                              ; preds = %349
  %365 = load %"class.blink::Member"*, %"class.blink::Member"** %200, align 8
  %366 = zext i32 %351 to i64
  %367 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %365, i64 %366
  %368 = icmp eq i32 %351, 0
  br i1 %368, label %375, label %369

369:                                              ; preds = %364, %369
  %370 = phi %"class.blink::Member"* [ %373, %369 ], [ %365, %364 ]
  %371 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %370, i64 0, i32 0, i32 0
  %372 = load %"class.blink::Node"*, %"class.blink::Node"** %371, align 8
  call void @_ZN5blink4Node21FlatTreeParentChangedEv(%"class.blink::Node"* %372) #10
  %373 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %370, i64 1
  %374 = icmp eq %"class.blink::Member"* %373, %367
  br i1 %374, label %375, label %369

375:                                              ; preds = %358, %369, %353, %364
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %199) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement39DidSlotChangeAfterRemovedFromShadowTreeEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %4 = icmp eq %"class.blink::ShadowRoot"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %7 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %6, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 196608
  %10 = icmp eq i32 %9, 131072
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %13 = tail call zeroext i1 @_ZNK5blink10ShadowRoot31SupportsNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"* %12) #10
  br i1 %13, label %14, label %19

14:                                               ; preds = %11, %5, %1
  %15 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @_ZN5blink16MutationObserver17EnqueueSlotChangeERNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"* dereferenceable(192) %0) #10
  store i8 1, i8* %15, align 8
  br label %19

19:                                               ; preds = %11, %14, %18
  tail call void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"* %2, i32 1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement22EnqueueSlotChangeEventEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %4 = icmp eq %"class.blink::ShadowRoot"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %7 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %6, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 196608
  %10 = icmp eq i32 %9, 131072
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %13 = tail call zeroext i1 @_ZNK5blink10ShadowRoot31SupportsNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"* %12) #10
  br i1 %13, label %14, label %19

14:                                               ; preds = %1, %11, %5
  %15 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @_ZN5blink16MutationObserver17EnqueueSlotChangeERNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"* dereferenceable(192) %0) #10
  store i8 1, i8* %15, align 8
  br label %19

19:                                               ; preds = %14, %11, %18
  ret void
}

declare void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement26DidSlotChangeAfterRenamingEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %4 = icmp eq %"class.blink::ShadowRoot"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %7 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %6, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 196608
  %10 = icmp eq i32 %9, 131072
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %13 = tail call zeroext i1 @_ZNK5blink10ShadowRoot31SupportsNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"* %12) #10
  br i1 %13, label %14, label %19

14:                                               ; preds = %11, %5, %1
  %15 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @_ZN5blink16MutationObserver17EnqueueSlotChangeERNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"* dereferenceable(192) %0) #10
  store i8 1, i8* %15, align 8
  br label %19

19:                                               ; preds = %11, %14, %18
  %20 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %21 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %21, align 8
  tail call void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"* %22) #10
  tail call void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"* %2, i32 1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1887"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  %4 = ptrtoint %"class.blink::Node"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.1887", %"class.WTF::HashMap.1887"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.1890"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.1887", %"class.WTF::HashMap.1887"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.1890"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.1890"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %68, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %52, %2, %67, %70
  %74 = phi i32 [ %72, %70 ], [ 0, %67 ], [ 0, %2 ], [ 0, %52 ]
  ret i32 %74
}

declare void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement40CheckFallbackAfterInsertedIntoShadowTreeEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = icmp eq %"class.blink::HTMLSlotElement"* %0, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %11 = bitcast %"class.blink::Node"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %9, %21
  %15 = phi i64 [ %24, %21 ], [ %12, %9 ]
  %16 = inttoptr i64 %15 to %"class.blink::Node"*
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %23 = bitcast %"class.blink::Node"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %30, label %14

26:                                               ; preds = %14
  %27 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #10
  %28 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %27, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %28, align 8
  tail call void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"* %29) #10
  tail call void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"* %2, i32 1) #10
  br label %30

30:                                               ; preds = %21, %4, %1, %9, %26
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HTMLSlotElement16HasSlotableChildEv(%"class.blink::HTMLSlotElement"* readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = icmp eq %"class.blink::HTMLSlotElement"* %0, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %11 = bitcast %"class.blink::Node"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %9, %21
  %15 = phi i64 [ %24, %21 ], [ %12, %9 ]
  %16 = inttoptr i64 %15 to %"class.blink::Node"*
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %23 = bitcast %"class.blink::Node"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %14

26:                                               ; preds = %21, %14, %4, %1, %9
  %27 = phi i1 [ false, %9 ], [ false, %1 ], [ false, %4 ], [ true, %14 ], [ false, %21 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement39CheckFallbackAfterRemovedFromShadowTreeEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = icmp eq %"class.blink::HTMLSlotElement"* %0, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %11 = bitcast %"class.blink::Node"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %9, %21
  %15 = phi i64 [ %24, %21 ], [ %12, %9 ]
  %16 = inttoptr i64 %15 to %"class.blink::Node"*
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %23 = bitcast %"class.blink::Node"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %14

26:                                               ; preds = %14
  tail call void @_ZN5blink4Node15CheckSlotChangeENS_14SlotChangeTypeE(%"class.blink::Node"* %2, i32 1) #10
  br label %27

27:                                               ; preds = %21, %4, %1, %9, %26
  ret void
}

declare zeroext i1 @_ZNK5blink10ShadowRoot31SupportsNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"*) local_unnamed_addr #2

declare void @_ZN5blink16MutationObserver17EnqueueSlotChangeERNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HTMLSlotElement20HasAssignedNodesSlowEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %4) #10
  %6 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %6, align 8
  %8 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15HTMLSlotElement7GetNameEv(%"class.blink::HTMLSlotElement"* %0)
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = call %"class.blink::HTMLSlotElement"* @_ZNK5blink14SlotAssignment14FindSlotByNameERKN3WTF12AtomicStringE(%"class.blink::SlotAssignment"* %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #10
  %12 = icmp eq %"class.blink::HTMLSlotElement"* %11, %0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #10
  br label %28

28:                                               ; preds = %1, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  br i1 %12, label %29, label %50

29:                                               ; preds = %28
  %30 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = call %"class.WTF::StringImpl"* @_ZNK5blink15HTMLSlotElement7GetNameEv(%"class.blink::HTMLSlotElement"* %0)
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = call zeroext i1 @_ZNK5blink14SlotAssignment23FindHostChildBySlotNameERKN3WTF12AtomicStringE(%"class.blink::SlotAssignment"* %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #10
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #10
  br label %49

49:                                               ; preds = %29, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %50

50:                                               ; preds = %28, %49
  %51 = phi i1 [ %33, %49 ], [ false, %28 ]
  ret i1 %51
}

declare %"class.blink::HTMLSlotElement"* @_ZNK5blink14SlotAssignment14FindSlotByNameERKN3WTF12AtomicStringE(%"class.blink::SlotAssignment"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14SlotAssignment23FindHostChildBySlotNameERKN3WTF12AtomicStringE(%"class.blink::SlotAssignment"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLSlotElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLSlotElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"* %3, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56) %1) #10
  %4 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 512
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %9) #10
  %11 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %10, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %11, align 8
  tail call void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"* %12) #10
  br label %13

13:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15HTMLSlotElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSlotElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::HeapVector"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  %8 = bitcast %"class.blink::HeapVector"* %4 to i8**
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %10 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, i64 11
  %12 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8** %8) #10
  br i1 %7, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %19

19:                                               ; preds = %2, %13
  %20 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 2
  %21 = bitcast %"class.blink::HeapVector"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast %"class.blink::HeapVector"* %20 to i8**
  %25 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %9, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, i64 11
  %27 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8** %24) #10
  br i1 %23, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %34

34:                                               ; preds = %19, %28
  %35 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4
  %36 = bitcast %"class.blink::HeapLinkedHashSet"* %35 to i8*
  %37 = bitcast %"class.blink::HeapLinkedHashSet"* %35 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = inttoptr i64 %38 to %"struct.WTF::KeyValuePair"*
  %40 = bitcast %"class.blink::HeapLinkedHashSet"* %35 to i8**
  %41 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %9, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %41, i64 11
  %43 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8** %40) #10
  %44 = inttoptr i64 %38 to i8*
  %45 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #10
  %46 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair"**
  store %"struct.WTF::KeyValuePair"* %39, %"struct.WTF::KeyValuePair"** %46, align 8
  %47 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %47, align 8
  %48 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %49 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %49, i64 10
  %51 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %1, i8* %44, i8** %40, i8* %44, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_4NodeEEENS_12KeyValuePairIS5_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSC_IjEEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %36) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #10
  %52 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 4, i32 0, i32 1
  %53 = bitcast %"class.WTF::VectorBackedLinkedList"* %52 to i8*
  %54 = bitcast %"class.WTF::VectorBackedLinkedList"* %52 to i64*
  %55 = load atomic i64, i64* %54 monotonic, align 8
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %"class.WTF::VectorBackedLinkedList"* %52 to i8**
  %58 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %9, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %58, i64 11
  %60 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %1, i8** %57) #10
  br i1 %56, label %67, label %61

61:                                               ; preds = %34
  %62 = inttoptr i64 %55 to i8*
  %63 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, i64 5
  %66 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, align 8
  tail call void %66(%"class.blink::Visitor"* %1, i8* nonnull %62, i8* nonnull %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %67

67:                                               ; preds = %34, %61
  %68 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %69 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %69, i64 2
  %71 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %70, align 8
  tail call void %71(%"class.blink::Visitor"* %1, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink26WeakCallbackMethodDelegateIN3WTF22VectorBackedLinkedListINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEEXadL_ZNS7_21ProcessCustomWeaknessIS6_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSB_14LivenessBrokerEEEE10TrampolineERKNS_14LivenessBrokerEPKv, i8* %53) #10
  %72 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %72, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7ElementD2Ev(%"class.blink::Element"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #10
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15HTMLSlotElementD0Ev(%"class.blink::HTMLSlotElement"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #10
  %5 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #10
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink15HTMLSlotElement18GetWrapperTypeInfoEv(%"class.blink::HTMLSlotElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15HTMLSlotElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #2

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #2

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #10
  ret %"class.blink::ComputedStyle"* %4
}

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.WTF::HashMap.2738"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #2

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #2

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #2

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement13SupportsFocusEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #2

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

declare void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.23"*, %"class.blink::Member"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %16 = icmp ugt %"class.blink::Member"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 %18
  %20 = icmp ugt %"class.blink::Member"* %19, %1
  br i1 %20, label %29, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.23"* %0, i32 %28) #10
  br label %43

29:                                               ; preds = %17
  %30 = ptrtoint %"class.blink::Member"* %1 to i64
  %31 = ptrtoint %"class.blink::Member"* %15 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = lshr i32 %11, 2
  %35 = add nuw i32 %11, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %9
  %40 = select i1 %39, i32 %38, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.23"* %0, i32 %40) #10
  %41 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %33
  br label %43

43:                                               ; preds = %29, %21, %3
  %44 = phi %"class.blink::Member"* [ %1, %3 ], [ %1, %21 ], [ %42, %29 ]
  %45 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = load i32, i32* %7, align 4
  %48 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ult i32 %9, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %53 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %52, i8* %53) #10
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %61 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Member"*, %"class.blink::Member"** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 %64
  %66 = icmp ne %"class.blink::Member"* %65, null
  %67 = icmp ne %"class.blink::Member"* %44, null
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %88, !prof !35

69:                                               ; preds = %60
  %70 = zext i32 %2 to i64
  %71 = bitcast %"class.blink::Member"* %65 to i8*
  %72 = bitcast %"class.blink::Member"* %44 to i8*
  %73 = shl nuw nsw i64 %70, 3
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %71, i8* nonnull %72, i64 %73) #10
  %74 = icmp eq i32 %2, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %69, %85
  %76 = phi i64 [ %78, %85 ], [ %70, %69 ]
  %77 = phi %"class.blink::Member"* [ %86, %85 ], [ %65, %69 ]
  %78 = add nsw i64 %76, -1
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Member"* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #10
  br label %85

85:                                               ; preds = %81, %75
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %77, i64 1
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %88, label %75

88:                                               ; preds = %85, %60, %69
  store i32 %9, i32* %7, align 4
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.23"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !35

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.23"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.23"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.23"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.23"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.23"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !35

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.23"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.23"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.23"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.6, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEEC2ERKS8_(%"class.WTF::LinkedHashSet"*, %"class.WTF::LinkedHashSet"* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast %"class.WTF::LinkedHashSet"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #10
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %44, label %8

8:                                                ; preds = %2
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %3, i32 %6) #10
  %9 = load i32, i32* %4, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  br i1 %10, label %44, label %17

17:                                               ; preds = %8
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %17, %23
  %20 = phi %"struct.WTF::KeyValuePair"* [ %24, %23 ], [ %12, %17 ]
  %21 = bitcast %"struct.WTF::KeyValuePair"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  switch i64 %22, label %26 [
    i64 -1, label %23
    i64 0, label %23
  ]

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 1
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %16
  br i1 %25, label %44, label %19

26:                                               ; preds = %19, %17
  %27 = phi %"struct.WTF::KeyValuePair"* [ %12, %17 ], [ %20, %19 ]
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, %16
  br i1 %28, label %44, label %29

29:                                               ; preds = %26, %42
  %30 = phi %"struct.WTF::KeyValuePair"* [ %36, %42 ], [ %27, %26 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0
  %32 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS4_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.blink::WeakMember.1363"* dereferenceable(8) %31, %"struct.WTF::KeyValuePair"* dereferenceable(16) %30) #10
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, %16
  br i1 %34, label %44, label %35

35:                                               ; preds = %29, %39
  %36 = phi %"struct.WTF::KeyValuePair"* [ %40, %39 ], [ %33, %29 ]
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 1
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, %16
  br i1 %41, label %44, label %35

42:                                               ; preds = %35
  %43 = icmp eq %"struct.WTF::KeyValuePair"* %36, %16
  br i1 %43, label %44, label %29

44:                                               ; preds = %23, %29, %42, %39, %2, %8, %26
  %45 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_EC2ERKS8_(%"class.WTF::Vector.30"* %45, %"class.WTF::Vector.30"* dereferenceable(16) %46) #10
  %47 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 1
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 1, i32 1
  %49 = bitcast i32* %48 to i64*
  %50 = bitcast i32* %47 to i64*
  %51 = load i64, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0)) #10
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  store i8 -86, i8* %3, align 1
  %32 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable"* %0, i32 %18, %"struct.WTF::KeyValuePair"* null, i8* nonnull dereferenceable(1) %3) #10
  %33 = load i8, i8* %3, align 1, !range !4
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #10
  %38 = bitcast %"class.blink::HeapHashTableBacking"* %37 to %"struct.WTF::KeyValuePair"*
  %39 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %38, i32 %18, %"struct.WTF::KeyValuePair"* null) #10
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair"* nonnull %52, i32 %41) #10
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::WeakMember.1363"* dereferenceable(8) %67) #10
  %69 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair"* %69, %"struct.WTF::KeyValuePair"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.12, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([429 x i8], [429 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::WeakMember.1363"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember.1363"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %2
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !4
  %18 = icmp ne i8 %17, 0
  %19 = icmp ne i32 %1, 0
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %38

21:                                               ; preds = %12
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %35, %21
  %24 = phi i64 [ 0, %21 ], [ %36, %35 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %24
  %26 = bitcast %"struct.WTF::KeyValuePair"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %28 [
    i64 -1, label %35
    i64 0, label %35
  ]

28:                                               ; preds = %23
  store atomic i64 -1, i64* %26 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %33

33:                                               ; preds = %28, %31
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %24, i32 1
  store i32 0, i32* %34, align 1
  br label %35

35:                                               ; preds = %23, %23, %33
  %36 = add nuw nsw i64 %24, 1
  %37 = icmp eq i64 %36, %22
  br i1 %37, label %38, label %23

38:                                               ; preds = %35, %12, %2
  %39 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %39) #10
  ret void
}

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS4_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::WeakMember.1363"* dereferenceable(8), %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::WeakMember.1363"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %181, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"struct.WTF::KeyValuePair"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #10
  br label %96

96:                                               ; preds = %86, %93
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 1
  store i32 %98, i32* %99, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %96
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #10
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !3

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #10
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !4
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %90 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %96, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %87)
  br label %181

147:                                              ; preds = %135
  %148 = mul i32 %138, 6
  %149 = icmp ult i32 %148, %143
  %150 = icmp ugt i32 %143, 8
  %151 = and i1 %149, %150
  br i1 %151, label %152, label %181

152:                                              ; preds = %147
  %153 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %154 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %153, i64 0, i32 1
  %155 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %154) #10
  %156 = icmp eq i8* %155, null
  br i1 %156, label %157, label %159, !prof !3

157:                                              ; preds = %152
  %158 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %154, i8* %158) #10
  br label %159

159:                                              ; preds = %157, %152
  %160 = phi i8* [ %158, %157 ], [ %155, %152 ]
  %161 = bitcast i8* %160 to %"class.blink::ThreadState"**
  %162 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 6
  %164 = load i8, i8* %163, align 8, !range !4
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 16
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %181, label %170

170:                                              ; preds = %159, %166
  %171 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 13
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %181

174:                                              ; preds = %170
  %175 = load i32, i32* %12, align 8
  %176 = lshr i32 %175, 1
  %177 = zext i32 %176 to i64
  %178 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %177) #10
  %179 = bitcast %"class.blink::HeapHashTableBacking"* %178 to %"struct.WTF::KeyValuePair"*
  %180 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %179, i32 %176, %"struct.WTF::KeyValuePair"* %87) #10
  br label %181

181:                                              ; preds = %58, %166, %147, %145, %174, %170
  %182 = phi i8 [ 1, %170 ], [ 1, %174 ], [ 1, %145 ], [ 1, %147 ], [ 1, %166 ], [ 0, %58 ]
  %183 = phi %"struct.WTF::KeyValuePair"* [ %87, %170 ], [ %180, %174 ], [ %146, %145 ], [ %87, %147 ], [ %87, %166 ], [ %60, %58 ]
  %184 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %183, 0
  %185 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %184, i8 %182, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %185
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_EC2ERKS8_(%"class.WTF::Vector.30"*, %"class.WTF::Vector.30"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* null, %"class.WTF::VectorBackedLinkedListNode"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEES0_EEEEmm(i64 %9) #10
  %11 = lshr i64 %10, 4
  %12 = tail call %"class.blink::HeapVectorBacking.2901"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %11) #10
  %13 = ptrtoint %"class.blink::HeapVectorBacking.2901"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking.2901"* %12 to %"class.WTF::VectorBackedLinkedListNode"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking.2901", %"class.blink::HeapVectorBacking.2901"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #10
  %22 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.WTF::VectorBackedLinkedListNode"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %28, align 8
  %30 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %24, null
  %31 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %48, !prof !35

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %24 to i8*
  %37 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 4
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #10
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %33
  %42 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %43 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %42, i64 0, i32 1
  %44 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %43) #10
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %48, !prof !3

46:                                               ; preds = %41
  %47 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %43, i8* %47) #10
  br label %48

48:                                               ; preds = %23, %33, %41, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2901"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.6, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2901"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2901"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([267 x i8], [267 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink5probe30DidPerformSlotDistributionImplEPNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"*) unnamed_addr #8

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLSlotElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSlotElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %4, %1 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 200
  br i1 %16, label %47, label %17, !prof !3

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 200
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -200
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 100, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 200, i64 %48) #10
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::HTMLSlotElement"*
  %53 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE to %"class.blink::QualifiedName"**), align 8
  %54 = bitcast i8* %51 to %"class.blink::Element"*
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %54, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* %0, i32 1026) #10
  %55 = bitcast i8* %51 to i32 (...)***
  %56 = getelementptr inbounds i8, i8* %51, i64 80
  %57 = bitcast i8* %56 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink15HTMLSlotElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink15HTMLSlotElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds i8, i8* %51, i64 104
  %59 = getelementptr inbounds i8, i8* %51, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 20, i1 false) #10
  %60 = getelementptr inbounds i8, i8* %51, i64 168
  %61 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 33, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 16, i1 false) #10
  %62 = bitcast i8* %60 to %"class.WTF::Vector.30"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.30"* %62, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #10
  %63 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 2
  %64 = bitcast %"class.blink::UseCounter"* %63 to void (%"class.blink::UseCounter"*, i32)***
  %65 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %65, i64 3
  %67 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %66, align 8
  call void %67(%"class.blink::UseCounter"* %63, i32 1898) #10
  %68 = getelementptr inbounds i8, i8* %51, i64 -4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = or i16 %70, 1
  store atomic i16 %71, i16* %69 release, align 2
  ret %"class.blink::HTMLSlotElement"* %52
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.30"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.30"* %0, i32 %22) #10
  %23 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %26 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.30"* %0, i32 %37) #10
  %38 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %41, i64 %44
  %46 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %41, i64 %44, i32 2
  %50 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %42, i64 0, i32 2
  %51 = bitcast %"class.blink::WeakMember.1363"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::WeakMember.1363"* %49 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %40
  %57 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %58 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %57, i64 0, i32 1
  %59 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %58) #10
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %63, !prof !3

61:                                               ; preds = %56
  %62 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %58, i8* %62) #10
  br label %63

63:                                               ; preds = %40, %56, %61
  %64 = load i32, i32* %3, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.30"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !35

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEES0_EEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking.2901"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2901"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2901", %"class.blink::HeapVectorBacking.2901"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %26 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.30"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.30"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.30"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEES0_EEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking.2901"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2901"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2901"* %17, null
  %23 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !35

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.30"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2901", %"class.blink::HeapVectorBacking.2901"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.30"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2901", %"class.blink::HeapVectorBacking.2901"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.23"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.23"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = ptrtoint %"class.blink::Node"* %1 to i64
  %21 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.blink::Node"* %1 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #10
  br label %27

27:                                               ; preds = %2, %24
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.23"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %8 = icmp ugt %"class.blink::Member"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.23"* %0, i32 %22) #10
  %23 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member"* %1 to i64
  %26 = ptrtoint %"class.blink::Member"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.23"* %0, i32 %37) #10
  %38 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %44
  %46 = bitcast %"class.blink::Member"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #10
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.23"*, %"class.WTF::Vector.23"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member"* null, %"class.blink::Member"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %9) #10
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #10
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.23"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #10
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member"*, %"class.blink::Member"** %28, align 8
  %30 = icmp ne %"class.blink::Member"* %24, null
  %31 = icmp ne %"class.blink::Member"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !35

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member"* %24 to i8*
  %37 = bitcast %"class.blink::Member"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #10
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.57"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.57"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.52"*, %"class.blink::Member.52"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.52", %"class.blink::Member.52"* %16, i64 %18
  %20 = ptrtoint %"class.blink::Element"* %1 to i64
  %21 = bitcast %"class.blink::Member.52"* %19 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.blink::Element"* %1 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #10
  br label %27

27:                                               ; preds = %2, %24
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.57"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !35

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.52"*, %"class.blink::Member.52"** %8, align 8
  %10 = icmp eq %"class.blink::Member.52"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2956"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2956"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.57"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2956", %"class.blink::HeapVectorBacking.2956"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.52"*, %"class.blink::Member.52"** %8, align 8
  %26 = icmp eq %"class.blink::Member.52"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.52"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.57"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.57"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.57"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.57"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2956"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2956"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.52"*, %"class.blink::Member.52"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2956"* %17, null
  %23 = icmp ne %"class.blink::Member.52"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.52"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !35

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.57"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2956", %"class.blink::HeapVectorBacking.2956"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.57"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.57"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2956", %"class.blink::HeapVectorBacking.2956"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2956"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.6, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.2956"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.2956"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.52"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.52", %"class.blink::Member.52"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.52"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember.1363"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRNS1_6MemberIS3_EEEENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"*, %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8, %"class.blink::Member"* dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 14
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %19 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERNS1_6MemberIS3_EERKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %18, %"class.blink::Member"* dereferenceable(8) %2, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #10
  %20 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %19, 0
  %21 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %19, 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  br i1 %23, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %28, align 8
  %30 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIRNS1_6MemberIS3_EEEENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %27, %"class.WTF::VectorBackedLinkedList"* %29, %"class.blink::Member"* dereferenceable(8) %2)
  %31 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 0
  %32 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 1
  %33 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %32, i64 0, i32 0
  %35 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %34, i32 0) #10
  %36 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %35 to i64
  %37 = sub i64 %33, %36
  %38 = lshr exact i64 %37, 4
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %54

41:                                               ; preds = %11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %24, i64 0, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %44, i32 %43) #10
  %46 = icmp eq i32 %3, 1
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %51 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %50, align 8
  %52 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %45, %"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %49, %"class.WTF::VectorBackedLinkedList"* %51)
  %53 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %52, 0
  br label %54

54:                                               ; preds = %41, %47, %25
  %55 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %53, %47 ], [ %31, %25 ], [ %45, %41 ]
  %56 = phi i8 [ 0, %47 ], [ 1, %25 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %55, i64 0, i32 2
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #10
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !3

62:                                               ; preds = %54
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #10
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i8* [ %63, %62 ], [ %60, %54 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = insertvalue { %"class.blink::WeakMember.1363"*, i8 } undef, %"class.blink::WeakMember.1363"* %57, 0
  %72 = insertvalue { %"class.blink::WeakMember.1363"*, i8 } %71, i8 %56, 1
  ret { %"class.blink::WeakMember.1363"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIRNS1_6MemberIS3_EEEENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %7, i32 0) #10
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %13, i32 %12) #10
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %58

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = bitcast %"class.blink::Member"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 0
  store i32 %16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  store i32 %12, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2
  %29 = bitcast %"class.blink::WeakMember.1363"* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %56, label %33, !prof !3

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %37 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36, i32 2
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.blink::WeakMember.1363"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #10
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #10
  br label %53

53:                                               ; preds = %51, %46, %33
  %54 = load i32, i32* %21, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %21, align 4
  br label %57

56:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.30"* %13, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %5) #10
  br label %57

57:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  br label %75

58:                                               ; preds = %4
  %59 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %13, i32 %18) #10
  %60 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %17, align 8
  %62 = bitcast %"class.blink::Member"* %3 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %59 to i64*
  %65 = shl i64 %10, 28
  %66 = zext i32 %16 to i64
  %67 = or i64 %65, %66
  store i64 %67, i64* %64, align 8
  %68 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %59, i64 0, i32 2
  %69 = bitcast %"class.blink::WeakMember.1363"* %68 to i64*
  store atomic i64 %63, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %58
  %73 = inttoptr i64 %63 to i8*
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #10
  br label %75

75:                                               ; preds = %72, %58, %57
  %76 = phi i32 [ %22, %57 ], [ %18, %58 ], [ %18, %72 ]
  %77 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %13, i32 %16) #10
  %78 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %77, i64 0, i32 1
  store i32 %76, i32* %78, align 4
  %79 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %13, i32 %12) #10
  %80 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %79, i64 0, i32 0
  store i32 %76, i32* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %81, align 4
  %84 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %13, i32 %76) #10
  %85 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %84, 0
  %86 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %85, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %7, i32 0) #10
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %1, %3
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %14, i32 %12) #10
  br i1 %13, label %41, label %16

16:                                               ; preds = %5
  %17 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %3 to i64
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %4, i64 0, i32 0
  %19 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %18, i32 0) #10
  %20 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = lshr exact i64 %21, 4
  %23 = trunc i64 %22 to i32
  %24 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %14, i32 %23) #10
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %12
  br i1 %27, label %39, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %14, i32 %30) #10
  %34 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %14, i32 %32) #10
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %33, i64 0, i32 1
  store i32 %32, i32* %35, align 4
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %34, i64 0, i32 0
  store i32 %30, i32* %36, align 8
  %37 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %14, i32 %26) #10
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %37, i64 0, i32 1
  store i32 %12, i32* %38, align 4
  store i32 %12, i32* %25, align 8
  store i32 %26, i32* %29, align 8
  store i32 %23, i32* %31, align 4
  br label %39

39:                                               ; preds = %16, %28
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %14, i32 %12) #10
  br label %41

41:                                               ; preds = %39, %5
  %42 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %15, %5 ], [ %40, %39 ]
  %43 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %42, 0
  %44 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %43, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERNS1_6MemberIS3_EERKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::Member"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %180, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  store atomic i64 %88, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = inttoptr i64 %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #10
  br label %96

96:                                               ; preds = %87, %93
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %98 = load i32, i32* %2, align 4
  store i32 %98, i32* %97, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %96
  %102 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %103 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %102, i64 0, i32 1
  %104 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %103) #10
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %108, !prof !3

106:                                              ; preds = %101
  %107 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %103, i8* %107) #10
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %107, %106 ], [ %104, %101 ]
  %110 = bitcast i8* %109 to %"class.blink::ThreadState"**
  %111 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !4
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 13
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %119, align 8
  %121 = load atomic i64, i64* %90 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %120, i64 0, i32 0, i32 0
  %125 = inttoptr i64 %121 to i8*
  %126 = bitcast %"class.blink::MarkingVisitor"* %120 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, i64 5
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, align 8
  tail call void %129(%"class.blink::Visitor"* %124, i8* nonnull %125, i8* %125, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  %130 = load i64, i64* %116, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i64 [ %118, %115 ], [ %130, %123 ]
  %133 = add i64 %132, -1
  store i64 %133, i64* %116, align 8
  br label %134

134:                                              ; preds = %96, %108, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, %137
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %12, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %180

146:                                              ; preds = %134
  %147 = mul i32 %137, 6
  %148 = icmp ult i32 %147, %142
  %149 = icmp ugt i32 %142, 8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %180

151:                                              ; preds = %146
  %152 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %153 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %152, i64 0, i32 1
  %154 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %153) #10
  %155 = icmp eq i8* %154, null
  br i1 %155, label %156, label %158, !prof !3

156:                                              ; preds = %151
  %157 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %153, i8* %157) #10
  br label %158

158:                                              ; preds = %156, %151
  %159 = phi i8* [ %157, %156 ], [ %154, %151 ]
  %160 = bitcast i8* %159 to %"class.blink::ThreadState"**
  %161 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %161, i64 0, i32 6
  %163 = load i8, i8* %162, align 8, !range !4
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %161, i64 0, i32 16
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %180, label %169

169:                                              ; preds = %158, %165
  %170 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %161, i64 0, i32 13
  %171 = load i64, i64* %170, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %169
  %174 = load i32, i32* %12, align 8
  %175 = lshr i32 %174, 1
  %176 = zext i32 %175 to i64
  %177 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %176) #10
  %178 = bitcast %"class.blink::HeapHashTableBacking"* %177 to %"struct.WTF::KeyValuePair"*
  %179 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %178, i32 %175, %"struct.WTF::KeyValuePair"* %89) #10
  br label %180

180:                                              ; preds = %58, %165, %146, %144, %173, %169
  %181 = phi i8 [ 1, %169 ], [ 1, %173 ], [ 1, %144 ], [ 1, %146 ], [ 1, %165 ], [ 0, %58 ]
  %182 = phi %"struct.WTF::KeyValuePair"* [ %89, %169 ], [ %179, %173 ], [ %145, %144 ], [ %89, %146 ], [ %89, %165 ], [ %60, %58 ]
  %183 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %182, 0
  %184 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %183, i8 %181, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %184
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE(%"class.WTF::LinkedHashSet"*, %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %3, i64 0, i32 0
  %5 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %4, i32 0) #10, !noalias !36
  %6 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %9, %5
  br i1 %10, label %53, label %11

11:                                               ; preds = %2
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #10
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #10
  br label %18

18:                                               ; preds = %11, %16
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 14
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %9, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %28 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %27, %"class.blink::Node"* %26) #10
  %29 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %28, 0
  %30 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %31 = load i32, i32* %7, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %32
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, %29
  br i1 %34, label %36, label %35

35:                                               ; preds = %18
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable"* %27, %"struct.WTF::KeyValuePair"* %29) #10
  br label %36

36:                                               ; preds = %18, %35
  %37 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %38 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %37, align 8
  %39 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"* %3, %"class.WTF::VectorBackedLinkedListNode"* %9, %"class.WTF::VectorBackedLinkedList"* %38)
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #10
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !3

44:                                               ; preds = %36
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #10
  br label %46

46:                                               ; preds = %36, %44
  %47 = phi i8* [ %45, %44 ], [ %42, %36 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 14
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, -1
  store i64 %52, i64* %50, align 8
  br label %53

53:                                               ; preds = %2, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* noalias sret, %"class.WTF::LinkedHashSet"*, %"class.blink::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %4, %"class.blink::Node"* %2) #10
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %6, %12
  %14 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 1
  br i1 %13, label %15, label %36

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %16, i32 0) #10, !noalias !39
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %17, %"class.WTF::VectorBackedLinkedListNode"** %18, align 8, !alias.scope !39
  %19 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %19, align 8, !alias.scope !39
  %20 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4, !noalias !42
  %22 = icmp eq i32 %21, 0
  %23 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8, !noalias !42
  %24 = load i32, i32* %9, align 8, !noalias !42
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %25
  br i1 %22, label %59, label %27

27:                                               ; preds = %15
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %59, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"struct.WTF::KeyValuePair"* [ %34, %33 ], [ %23, %27 ]
  %31 = bitcast %"struct.WTF::KeyValuePair"* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !42
  switch i64 %32, label %59 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %26
  br i1 %35, label %59, label %29

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %39, i32 %38) #10
  %41 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %40, %"class.WTF::VectorBackedLinkedListNode"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4, !noalias !45
  %45 = icmp eq i32 %44, 0
  %46 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8, !noalias !45
  %47 = load i32, i32* %9, align 8, !noalias !45
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %48
  br i1 %45, label %59, label %50

50:                                               ; preds = %36
  %51 = icmp eq i32 %47, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %50, %56
  %53 = phi %"struct.WTF::KeyValuePair"* [ %57, %56 ], [ %46, %50 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %53 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !45
  switch i64 %55, label %59 [
    i64 -1, label %56
    i64 0, label %56
  ]

56:                                               ; preds = %52, %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 1
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, %49
  br i1 %58, label %59, label %52

59:                                               ; preds = %56, %52, %33, %29, %50, %36, %27, %15
  %60 = phi %"struct.WTF::KeyValuePair"* [ %26, %15 ], [ %23, %27 ], [ %49, %36 ], [ %46, %50 ], [ %26, %33 ], [ %30, %29 ], [ %53, %52 ], [ %49, %56 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ %26, %15 ], [ %26, %27 ], [ %49, %36 ], [ %49, %50 ], [ %26, %29 ], [ %26, %33 ], [ %49, %52 ], [ %49, %56 ]
  %62 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"** %62, align 8, !alias.scope !48
  %63 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Node>, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair"* %61, %"struct.WTF::KeyValuePair"** %63, align 8, !alias.scope !48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %6 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %5, i32 0) #10
  %7 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %6 to i64
  %8 = sub i64 %4, %7
  %9 = lshr exact i64 %8, 4
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %12 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %11, i32 %10) #10
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %11, i32 %16) #10
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %11, i32 %14) #10
  %19 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %17, i64 0, i32 1
  store i32 %14, i32* %19, align 4
  %20 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %18, i64 0, i32 0
  store i32 %16, i32* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 2
  %22 = bitcast %"class.blink::WeakMember.1363"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #10
  br label %27

27:                                               ; preds = %3, %25
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %13, align 4
  store i32 -1, i32* %15, align 8
  store i32 %10, i32* %28, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  store i32 %32, i32* %30, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %11, i32 %14) #10
  %34 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %33, 0
  %35 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %34, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  store i32 0, i32* %9, align 1
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  %13 = and i32 %12, 2147483647
  %14 = and i32 %11, -2147483648
  %15 = or i32 %13, %14
  store i32 %15, i32* %10, align 8
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  store i32 %18, i32* %16, align 4
  %19 = mul i32 %18, 6
  %20 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %19, %21
  %23 = icmp ugt i32 %21, 8
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %54

25:                                               ; preds = %8
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #10
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !3

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #10
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 6
  %37 = load i8, i8* %36, align 8, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 16
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %54, label %43

43:                                               ; preds = %32, %39
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 13
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %43
  %48 = load i32, i32* %20, align 8
  %49 = lshr i32 %48, 1
  %50 = zext i32 %49 to i64
  %51 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %50) #10
  %52 = bitcast %"class.blink::HeapHashTableBacking"* %51 to %"struct.WTF::KeyValuePair"*
  %53 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %52, i32 %49, %"struct.WTF::KeyValuePair"* null) #10
  br label %54

54:                                               ; preds = %39, %8, %47, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4swapERSG_(%"class.WTF::HashTable"*, %"class.WTF::HashTable"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 0
  %5 = bitcast %"class.WTF::HashTable"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  store atomic i64 %8, i64* %5 monotonic, align 8
  store atomic i64 %6, i64* %7 monotonic, align 8
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %6 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #10
  br label %14

14:                                               ; preds = %2, %11
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.WTF::HashTable"* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #10
  br label %21

21:                                               ; preds = %14, %17
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %23 = icmp eq %"struct.WTF::KeyValuePair"* %22, null
  %24 = bitcast %"struct.WTF::KeyValuePair"* %22 to i8*
  br i1 %23, label %29, label %25

25:                                               ; preds = %21
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* nonnull %24) #10
  br label %29

29:                                               ; preds = %28, %25, %21
  %30 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %31 = icmp eq %"struct.WTF::KeyValuePair"* %30, null
  %32 = bitcast %"struct.WTF::KeyValuePair"* %30 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %29
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* nonnull %32) #10
  br label %37

37:                                               ; preds = %36, %33, %29
  %38 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 1
  %40 = load i32, i32* %38, align 4
  %41 = load i32, i32* %39, align 4
  store i32 %41, i32* %38, align 4
  store i32 %40, i32* %39, align 4
  %42 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 2
  %44 = load i32, i32* %42, align 4
  %45 = load i32, i32* %43, align 4
  store i32 %45, i32* %42, align 4
  store i32 %44, i32* %43, align 4
  %46 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 2147483647
  %49 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 2147483647
  %52 = and i32 %47, -2147483648
  %53 = or i32 %51, %52
  store i32 %53, i32* %46, align 8
  %54 = load i32, i32* %49, align 8
  %55 = and i32 %54, -2147483648
  %56 = or i32 %55, %48
  store i32 %56, i32* %49, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.23"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.23"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::Node"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.23"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.23"*, %"class.WTF::Vector.23"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.23"* %1, %0
  br i1 %3, label %87, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %21

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member"*, %"class.blink::Member"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 %14
  %17 = bitcast %"class.blink::Member"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member"* %16 to i64
  %19 = ptrtoint %"class.blink::Member"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10
  store i32 %8, i32* %5, align 4
  br label %41

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp ugt i32 %8, %23
  br i1 %24, label %25, label %41

25:                                               ; preds = %21
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %25
  %28 = icmp eq i32 %6, 0
  %29 = bitcast %"class.WTF::Vector.23"* %0 to i8**
  br i1 %28, label %34, label %30

30:                                               ; preds = %27
  %31 = load i8*, i8** %29, align 8
  %32 = zext i32 %6 to i64
  %33 = shl nuw nsw i64 %32, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %31, i64 %33) #10
  store i32 0, i32* %5, align 4
  br label %34

34:                                               ; preds = %30, %27
  %35 = load i8*, i8** %29, align 8
  %36 = bitcast %"class.WTF::Vector.23"* %0 to i64*
  store atomic i64 0, i64* %36 monotonic, align 8
  store i32 0, i32* %22, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %35) #10
  %37 = load i32, i32* %7, align 4
  br label %38

38:                                               ; preds = %25, %34
  %39 = phi i32 [ %8, %25 ], [ %37, %34 ]
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.23"* %0, i32 %39)
  %40 = load i32, i32* %5, align 4
  br label %41

41:                                               ; preds = %21, %38, %10
  %42 = phi i32 [ %6, %21 ], [ %40, %38 ], [ %8, %10 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.WTF::Vector.23"* %1 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = zext i32 %42 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::Vector.23"* %0 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = shl nuw nsw i64 %46, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* %49, i8* %45, i64 %50) #10
  %51 = load %"class.blink::Member"*, %"class.blink::Member"** %43, align 8
  %52 = load i32, i32* %5, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %51, i64 %53
  %55 = load %"class.blink::Member"*, %"class.blink::Member"** %47, align 8
  %56 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %55, i64 %53
  %57 = icmp ne %"class.blink::Member"* %56, null
  %58 = icmp ne %"class.blink::Member"* %54, null
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %85, !prof !35

60:                                               ; preds = %41
  %61 = load i32, i32* %7, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %51, i64 %62
  %64 = bitcast %"class.blink::Member"* %56 to i8*
  %65 = bitcast %"class.blink::Member"* %54 to i8*
  %66 = ptrtoint %"class.blink::Member"* %63 to i64
  %67 = ptrtoint %"class.blink::Member"* %54 to i64
  %68 = sub i64 %66, %67
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %64, i8* nonnull %65, i64 %68) #10
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %60
  %71 = ashr exact i64 %68, 3
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i64 [ %75, %82 ], [ %71, %70 ]
  %74 = phi %"class.blink::Member"* [ %83, %82 ], [ %56, %70 ]
  %75 = add i64 %73, -1
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.blink::Member"* %74 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #10
  br label %82

82:                                               ; preds = %78, %72
  %83 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %74, i64 1
  %84 = icmp eq i64 %75, 0
  br i1 %84, label %85, label %72

85:                                               ; preds = %82, %41, %60
  %86 = load i32, i32* %7, align 4
  store i32 %86, i32* %5, align 4
  br label %87

87:                                               ; preds = %2, %85
  ret %"class.WTF::Vector.23"* %0
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(80) %"struct.blink::HTMLSlotElement::LCSArray"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayIjLj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1857"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1857", %"class.WTF::Vector.1857"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1857", %"class.WTF::Vector.1857"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::HTMLSlotElement::LCSArray"*, %"struct.blink::HTMLSlotElement::LCSArray"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray", %"struct.blink::HTMLSlotElement::LCSArray"* %24, i64 %25
  ret %"struct.blink::HTMLSlotElement::LCSArray"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1860"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1860", %"class.WTF::Vector.1860"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1860", %"class.WTF::Vector.1860"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(144) %"struct.blink::HTMLSlotElement::LCSArray.1874"* @_ZN3WTF6VectorIN5blink15HTMLSlotElement8LCSArrayINSt3__14pairIjjEELj16EEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1871"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1871", %"class.WTF::Vector.1871"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1871", %"class.WTF::Vector.1871"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::HTMLSlotElement::LCSArray.1874"*, %"struct.blink::HTMLSlotElement::LCSArray.1874"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::HTMLSlotElement::LCSArray.1874", %"struct.blink::HTMLSlotElement::LCSArray.1874"* %24, i64 %25
  ret %"struct.blink::HTMLSlotElement::LCSArray.1874"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.std::__1::pair.1878"* @_ZN3WTF6VectorINSt3__14pairIjjEELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.1878"*, %"struct.std::__1::pair.1878"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.1878", %"struct.std::__1::pair.1878"* %24, i64 %25
  ret %"struct.std::__1::pair.1878"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.23"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1890"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1888"*, %"class.blink::Member"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1890"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1890"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1888"* %0, %"struct.WTF::KeyValuePair.1890"* null)
  %9 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1890"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1890"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1890"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %146, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1890"* %60, %"struct.WTF::KeyValuePair.1890"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1890"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1890"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.1890"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.1890"* %89 to i64*
  store atomic i64 %88, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = inttoptr i64 %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #10
  br label %96

96:                                               ; preds = %87, %93
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %89, i64 0, i32 1
  %98 = load i32, i32* %2, align 4
  store i32 %98, i32* %97, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %96
  %102 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %103 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %102, i64 0, i32 1
  %104 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %103) #10
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %108, !prof !3

106:                                              ; preds = %101
  %107 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %103, i8* %107) #10
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %107, %106 ], [ %104, %101 ]
  %110 = bitcast i8* %109 to %"class.blink::ThreadState"**
  %111 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !4
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 13
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %119, align 8
  %121 = load atomic i64, i64* %90 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %120, i64 0, i32 0, i32 0
  %125 = inttoptr i64 %121 to i8*
  %126 = bitcast %"class.blink::MarkingVisitor"* %120 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, i64 5
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, align 8
  tail call void %129(%"class.blink::Visitor"* %124, i8* nonnull %125, i8* %125, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  %130 = load i64, i64* %116, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i64 [ %118, %115 ], [ %130, %123 ]
  %133 = add i64 %132, -1
  store i64 %133, i64* %116, align 8
  br label %134

134:                                              ; preds = %96, %108, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, %137
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %12, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call %"struct.WTF::KeyValuePair.1890"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1888"* %0, %"struct.WTF::KeyValuePair.1890"* %89)
  br label %146

146:                                              ; preds = %58, %134, %144
  %147 = phi i8 [ 1, %134 ], [ 1, %144 ], [ 0, %58 ]
  %148 = phi %"struct.WTF::KeyValuePair.1890"* [ %89, %134 ], [ %145, %144 ], [ %60, %58 ]
  %149 = insertvalue { %"struct.WTF::KeyValuePair.1890"*, i8 } undef, %"struct.WTF::KeyValuePair.1890"* %148, 0
  %150 = insertvalue { %"struct.WTF::KeyValuePair.1890"*, i8 } %149, i8 %147, 1
  ret { %"struct.WTF::KeyValuePair.1890"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1890"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1888"*, %"struct.WTF::KeyValuePair.1890"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.1890"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.1888"* %0, i32 %35, %"struct.WTF::KeyValuePair.1890"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.2976"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking.2976"* %42 to %"struct.WTF::KeyValuePair.1890"*
  %44 = call %"struct.WTF::KeyValuePair.1890"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1888"* %0, %"struct.WTF::KeyValuePair.1890"* %43, i32 %40, %"struct.WTF::KeyValuePair.1890"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.1890"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.1890"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1890"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.1888"*, i32, %"struct.WTF::KeyValuePair.1890"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.1890"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.1890"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.2976"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking.2976"* %44 to %"struct.WTF::KeyValuePair.1890"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair.1890"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable.1888"* %0 to %"class.blink::HeapHashTableBacking.2976"**
  store %"class.blink::HeapHashTableBacking.2976"* %44, %"class.blink::HeapHashTableBacking.2976"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.2976", %"class.blink::HeapHashTableBacking.2976"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.1890"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.1890"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1888"* %0, %"struct.WTF::KeyValuePair.1890"* %42, i32 %1, %"struct.WTF::KeyValuePair.1890"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.1890"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.1890"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.1890"* %64, %"struct.WTF::KeyValuePair.1890"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.1890"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.1890"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.1890"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair.1890"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.1890"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1890"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1888"*, %"struct.WTF::KeyValuePair.1890"*, i32, %"struct.WTF::KeyValuePair.1890"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1888", align 8
  %6 = bitcast %"class.WTF::HashTable.1888"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1888"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1890"* %1, %"struct.WTF::KeyValuePair.1890"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.1890"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.1890"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable.1888"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.1890"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.1888"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.1888"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.1888"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #10
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.1890"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair.1890"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair.1890"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.1890"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.1890"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1888"* nonnull %5, %"class.blink::Member"* dereferenceable(8) %67) #10
  %69 = extractvalue { %"struct.WTF::KeyValuePair.1890"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.1890"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair.1890"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair.1890"* %69, %"struct.WTF::KeyValuePair.1890"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair.1890"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair.1890"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.2976"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.12, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.2976"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.2976"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([413 x i8], [413 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.1890"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.1890"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1890"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1888"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1890"*, %"struct.WTF::KeyValuePair.1890"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1888", %"class.WTF::HashTable.1888"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1890"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1890"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.1890"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1890"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1890"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1890"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.1890"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1890", %"struct.WTF::KeyValuePair.1890"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.1890"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.1890"*, i8 } undef, %"struct.WTF::KeyValuePair.1890"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.1890"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.1890"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_4NodeEEENS_12KeyValuePairIS5_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSC_IjEEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"**
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair"* %12, %4
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %59
  %20 = phi %"struct.WTF::KeyValuePair"* [ %12, %14 ], [ %60, %59 ]
  %21 = phi %"struct.WTF::KeyValuePair"* [ %11, %14 ], [ %20, %59 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = ptrtoint %"class.blink::Node"* %23 to i64
  switch i64 %24, label %25 [
    i64 -1, label %59
    i64 0, label %59
  ]

25:                                               ; preds = %19
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #10
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !3

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #10
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = icmp eq %"class.blink::ThreadState"* %35, null
  br i1 %36, label %59, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 -1, i32 6
  %39 = bitcast %"class.blink::Member.2"* %38 to %"class.blink::HeapObjectHeader"*
  %40 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %39, i64 0, i32 2
  %41 = load i16, i16* %40, align 2
  %42 = and i16 %41, 1
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %59

44:                                               ; preds = %37
  %45 = bitcast %"struct.WTF::KeyValuePair"* %20 to i64*
  store atomic i64 -1, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 -1, i32 1
  store i32 0, i32* %51, align 1
  %52 = load i32, i32* %16, align 8
  %53 = add i32 %52, 1
  %54 = and i32 %53, 2147483647
  %55 = and i32 %52, -2147483648
  %56 = or i32 %54, %55
  store i32 %56, i32* %16, align 8
  %57 = load i32, i32* %18, align 4
  %58 = add i32 %57, -1
  store i32 %58, i32* %18, align 4
  br label %59

59:                                               ; preds = %37, %19, %19, %32, %50
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 -1
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %62 = icmp ult %"struct.WTF::KeyValuePair"* %60, %61
  br i1 %62, label %63, label %19

63:                                               ; preds = %59, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26WeakCallbackMethodDelegateIN3WTF22VectorBackedLinkedListINS_10WeakMemberINS_4NodeEEENS_13HeapAllocatorEEEXadL_ZNS7_21ProcessCustomWeaknessIS6_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSB_14LivenessBrokerEEEE10TrampolineERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.WTF::VectorBackedLinkedList"*
  tail call void @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE21ProcessCustomWeaknessIS5_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSA_14LivenessBrokerE(%"class.WTF::VectorBackedLinkedList"* %3, %"class.blink::LivenessBroker"* dereferenceable(1) %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE21ProcessCustomWeaknessIS5_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSA_14LivenessBrokerE(%"class.WTF::VectorBackedLinkedList"*, %"class.blink::LivenessBroker"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %4 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %3, i32 0) #10
  %5 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %3, i32 %6) #10
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %3, i32 0) #10
  %9 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, %8
  br i1 %9, label %49, label %10

10:                                               ; preds = %2, %44
  %11 = phi %"class.WTF::VectorBackedLinkedList"* [ %46, %44 ], [ %0, %2 ]
  %12 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %45, %44 ], [ %7, %2 ]
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !3

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #10
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = icmp eq %"class.blink::ThreadState"* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 -1, i32 6
  %30 = bitcast %"class.blink::Member.2"* %29 to %"class.blink::HeapObjectHeader"*
  %31 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %30, i64 0, i32 2
  %32 = load i16, i16* %31, align 2
  %33 = and i16 %32, 1
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_4NodeEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"* %0, %"class.WTF::VectorBackedLinkedListNode"* %12, %"class.WTF::VectorBackedLinkedList"* %11)
  %37 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %36, 0
  %38 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %36, 1
  br label %44

39:                                               ; preds = %28, %23, %10
  %40 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %11, i64 0, i32 0
  %43 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %42, i32 %41) #10
  br label %44

44:                                               ; preds = %39, %35
  %45 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %43, %39 ], [ %37, %35 ]
  %46 = phi %"class.WTF::VectorBackedLinkedList"* [ %11, %39 ], [ %38, %35 ]
  %47 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.30"* %3, i32 0) #10
  %48 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %45, %47
  br i1 %48, label %49, label %10

49:                                               ; preds = %44, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink15HTMLSlotElement22FlattenedAssignedNodesEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink15HTMLSlotElement22FlattenedAssignedNodesEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink15HTMLSlotElement23AssignedNodesForBindingEPKNS_20AssignedNodesOptionsE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink15HTMLSlotElement23AssignedNodesForBindingEPKNS_20AssignedNodesOptionsE"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZN5blink15HTMLSlotElement22FlattenedAssignedNodesEv: argument 0"}
!13 = distinct !{!13, !"_ZN5blink15HTMLSlotElement22FlattenedAssignedNodesEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!19 = distinct !{!19, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!35 = !{!"branch_weights", i32 2000, i32 1}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!41 = distinct !{!41, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!42 = !{!43, !40}
!43 = distinct !{!43, !44, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!44 = distinct !{!44, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!47 = distinct !{!47, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!48 = !{!43, !40, !46}
