; ModuleID = '../../third_party/blink/renderer/core/script/module_map.cc'
source_filename = "../../third_party/blink/renderer/core/script/module_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.12", i32, [4 x i8], %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.145", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.187", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.128", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i64 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.108", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110", %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { i64 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { float }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.131", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.153" }
%"class.WTF::VectorBuffer.153" = type { %"class.WTF::VectorBufferBase.154" }
%"class.WTF::VectorBufferBase.154" = type { %"struct.std::__1::pair.155"*, i32, i32 }
%"struct.std::__1::pair.155" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.227" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.186 }
%class.scoped_refptr.186 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.232" }
%"struct.std::__1::atomic.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__atomic_base.234" }
%"struct.std::__1::__atomic_base.234" = type { %"struct.std::__1::__cxx_atomic_impl.235" }
%"struct.std::__1::__cxx_atomic_impl.235" = type { %"struct.std::__1::__cxx_atomic_base_impl.236" }
%"struct.std::__1::__cxx_atomic_base_impl.236" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ModuleMap::Entry" = type { %"class.blink::NameClient", %"class.blink::ModuleScriptLoaderClient", %"class.blink::Member", %"class.blink::Member.194", i8, [7 x i8], %"class.blink::HeapHashSet.217" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::ModuleScriptLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ModuleScript"* }
%"class.blink::ModuleScript" = type { %"class.blink::Script", %"class.blink::Member.4", %"class.blink::TraceWrapperV8Reference", %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference", %"class.WTF::HashMap", %"class.blink::KURL" }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.8", %class.scoped_refptr.11 }
%"class.blink::TraceWrapperV8Reference.8" = type { %"class.v8::TracedReference.9" }
%"class.v8::TracedReference.9" = type { %"class.v8::BasicTracedReference.10" }
%"class.v8::BasicTracedReference.10" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.11 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.191" }
%"class.WTF::HashTable.191" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::ModuleMap"* }
%"class.blink::HeapHashSet.217" = type { %"class.WTF::HashSet.220" }
%"class.WTF::HashSet.220" = type { %"class.WTF::HashTable.221" }
%"class.WTF::HashTable.221" = type <{ %"class.blink::Member.223"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::SingleModuleClient"* }
%"class.blink::SingleModuleClient" = type { %"class.blink::NameClient" }
%"class.blink::ModuleMap" = type { %"class.blink::NameClient", %"class.blink::HeapHashMap", %"class.blink::Member.4", %"class.blink::Member.207" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.200" }
%"class.WTF::HashMap.200" = type { %"class.WTF::HashTable.201" }
%"class.WTF::HashTable.201" = type <{ %"struct.WTF::KeyValuePair.203"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.203" = type { %"struct.std::__1::pair.204", %"class.blink::Member.205" }
%"struct.std::__1::pair.204" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::Member.205" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::ModuleMap::Entry"* }
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::ModuleScriptLoaderRegistry"* }
%"class.blink::ModuleScriptLoaderRegistry" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.213" }
%"class.WTF::HashSet.213" = type { %"class.WTF::HashTable.214" }
%"class.WTF::HashTable.214" = type <{ %"class.blink::Member.216"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.216" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::ModuleScriptLoader"* }
%"class.blink::ModuleScriptLoader" = type { %"class.blink::ModuleScriptFetcher::Client", %"class.blink::Member.4", i32, [4 x i8], %"class.blink::ScriptFetchOptions", %"class.blink::Member", %"class.blink::Member.207", %"class.blink::Member.574", %"class.blink::Member.576" }
%"class.blink::ModuleScriptFetcher::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::ModuleScriptLoaderClient"* }
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::ModuleScriptFetcher"* }
%"class.blink::ModuleScriptFetcher" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.569", [7 x i8], %"class.blink::Member.510", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.569" = type { i8 }
%"class.blink::Member.510" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.358", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.461", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.473", %"class.blink::ResourceResponse", %class.scoped_refptr.475, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.337 }
%union.anon.337 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.338", i8, %"class.absl::optional.343", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.338" = type { %"class.absl::optional_internal::optional_data.339" }
%"class.absl::optional_internal::optional_data.339" = type { %"class.absl::optional_internal::optional_data_base.340" }
%"class.absl::optional_internal::optional_data_base.340" = type { %"class.absl::optional_internal::optional_data_dtor_base.341" }
%"class.absl::optional_internal::optional_data_dtor_base.341" = type { i8, [7 x i8], %union.anon.342 }
%union.anon.342 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.343" = type { %"class.absl::optional_internal::optional_data.344" }
%"class.absl::optional_internal::optional_data.344" = type { %"class.absl::optional_internal::optional_data_base.345" }
%"class.absl::optional_internal::optional_data_base.345" = type { %"class.absl::optional_internal::optional_data_dtor_base.346" }
%"class.absl::optional_internal::optional_data_dtor_base.346" = type { i8, %union.anon.347 }
%union.anon.347 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.348", %"class.WTF::Vector.353" }
%"class.WTF::Vector.348" = type { %"class.WTF::VectorBuffer.349" }
%"class.WTF::VectorBuffer.349" = type { %"class.WTF::VectorBufferBase.350" }
%"class.WTF::VectorBufferBase.350" = type { i32*, i32, i32 }
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.457" }
%"class.WTF::HashMap.457" = type { %"class.WTF::HashTable.458" }
%"class.WTF::HashTable.458" = type <{ %"struct.WTF::KeyValuePair.460"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.460" = type <{ %"class.blink::WeakMember.567", i32, [4 x i8] }>
%"class.blink::WeakMember.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.569", [7 x i8], %"class.blink::Member.510", i8, [7 x i8] }>
%"class.blink::HeapHashSet.461" = type { %"class.WTF::HashSet.464" }
%"class.WTF::HashSet.464" = type { %"class.WTF::HashTable.465" }
%"class.WTF::HashTable.465" = type <{ %"class.blink::WeakMember.467"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.467" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet", i8, i8, %class.scoped_refptr.11, %class.scoped_refptr.468, %class.scoped_refptr.470 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%class.scoped_refptr.468 = type { %"class.base::RefCountedData.469"* }
%"class.base::RefCountedData.469" = type opaque
%class.scoped_refptr.470 = type { %"class.base::RefCountedData.471"* }
%"class.base::RefCountedData.471" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.420" }
%"class.base::time_internal::TimeBase.420" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.472 }
%class.scoped_refptr.472 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.366, %class.scoped_refptr.366, %class.scoped_refptr.366, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.372, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.384", %"class.absl::optional.389", %"class.absl::optional.399", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.409", %"class.absl::optional.399", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.399", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.409", %"class.absl::optional.414", i8, %class.scoped_refptr.419 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.361" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.361" = type { %"class.absl::optional_internal::optional_data.362" }
%"class.absl::optional_internal::optional_data.362" = type { %"class.absl::optional_internal::optional_data_base.363" }
%"class.absl::optional_internal::optional_data_base.363" = type { %"class.absl::optional_internal::optional_data_dtor_base.364" }
%"class.absl::optional_internal::optional_data_dtor_base.364" = type { i8, %union.anon.365 }
%union.anon.365 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.366 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.548", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.361", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.366 }
%"class.WTF::RefCounted.548" = type { %"class.base::RefCounted.549" }
%"class.base::RefCounted.549" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.367" }
%"class.WTF::HashMap.367" = type { %"class.WTF::HashTable.368" }
%"class.WTF::HashTable.368" = type <{ %"struct.WTF::KeyValuePair.371"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.371" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.372 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.373", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.382, i8, %"class.url::Origin" }
%"class.base::RefCounted.373" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.374" }
%"class.std::__1::vector.374" = type { %"class.std::__1::__vector_base.375" }
%"class.std::__1::__vector_base.375" = type { %"class.std::__1::unique_ptr.376"*, %"class.std::__1::unique_ptr.376"*, %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::unique_ptr.376"* }
%class.scoped_refptr.382 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.383", [4 x i8] }>
%"class.base::RefCountedThreadSafe.383" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.232" }
%"class.absl::optional.384" = type { %"class.absl::optional_internal::optional_data.385" }
%"class.absl::optional_internal::optional_data.385" = type { %"class.absl::optional_internal::optional_data_base.386" }
%"class.absl::optional_internal::optional_data_base.386" = type { %"class.absl::optional_internal::optional_data_dtor_base.387" }
%"class.absl::optional_internal::optional_data_dtor_base.387" = type { i8, %union.anon.388 }
%union.anon.388 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.389" = type { %"class.absl::optional_internal::optional_data.390" }
%"class.absl::optional_internal::optional_data.390" = type { %"class.absl::optional_internal::optional_data_base.391" }
%"class.absl::optional_internal::optional_data_base.391" = type { %"class.absl::optional_internal::optional_data_dtor_base.392" }
%"class.absl::optional_internal::optional_data_dtor_base.392" = type { i8, %union.anon.393 }
%union.anon.393 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.394", %"class.WTF::Vector.353", %"class.WTF::String" }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %class.scoped_refptr.366*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.404", %"class.absl::optional.404" }
%"class.absl::optional.404" = type { %"class.absl::optional_internal::optional_data.405" }
%"class.absl::optional_internal::optional_data.405" = type { %"class.absl::optional_internal::optional_data_base.406" }
%"class.absl::optional_internal::optional_data_base.406" = type { %"class.absl::optional_internal::optional_data_dtor_base.407" }
%"class.absl::optional_internal::optional_data_dtor_base.407" = type { i8, %union.anon.408 }
%union.anon.408 = type { %"class.base::TimeDelta" }
%"class.absl::optional.399" = type { %"class.absl::optional_internal::optional_data.400" }
%"class.absl::optional_internal::optional_data.400" = type { %"class.absl::optional_internal::optional_data_base.401" }
%"class.absl::optional_internal::optional_data_base.401" = type { %"class.absl::optional_internal::optional_data_dtor_base.402" }
%"class.absl::optional_internal::optional_data_dtor_base.402" = type { i8, %union.anon.403 }
%union.anon.403 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.409" = type { %"class.absl::optional_internal::optional_data.410" }
%"class.absl::optional_internal::optional_data.410" = type { %"class.absl::optional_internal::optional_data_base.411" }
%"class.absl::optional_internal::optional_data_base.411" = type { %"class.absl::optional_internal::optional_data_dtor_base.412" }
%"class.absl::optional_internal::optional_data_dtor_base.412" = type { i8, %union.anon.413 }
%union.anon.413 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.414" = type { %"class.absl::optional_internal::optional_data.415" }
%"class.absl::optional_internal::optional_data.415" = type { %"class.absl::optional_internal::optional_data_base.416" }
%"class.absl::optional_internal::optional_data_base.416" = type { %"class.absl::optional_internal::optional_data_dtor_base.417" }
%"class.absl::optional_internal::optional_data_dtor_base.417" = type { i8, %union.anon.418 }
%union.anon.418 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.419 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.558", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.558" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.559" }
%"class.std::__1::vector.559" = type { %"class.std::__1::__vector_base.560" }
%"class.std::__1::__vector_base.560" = type { i32*, i32*, %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { i32* }
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.421", %class.scoped_refptr.436, %class.scoped_refptr.437, %"struct.blink::CacheControlHeader", %"class.absl::optional.404", %"class.absl::optional.438", %"class.absl::optional.438", %"class.absl::optional.438", i64, %"class.blink::KURL", %"class.WTF::Vector.443", %"class.WTF::String", %"class.WTF::Vector.353", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.409", %"class.WTF::Vector.353", %"class.blink::KURL", %"class.absl::optional.448" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.421" = type { %"class.absl::optional_internal::optional_data.422" }
%"class.absl::optional_internal::optional_data.422" = type { %"class.absl::optional_internal::optional_data_base.423" }
%"class.absl::optional_internal::optional_data_base.423" = type { %"class.absl::optional_internal::optional_data_dtor_base.424" }
%"class.absl::optional_internal::optional_data_dtor_base.424" = type { i8, %union.anon.425 }
%union.anon.425 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.353", %"class.WTF::String", i64, i64, %"class.WTF::Vector.426", %"class.WTF::Vector.431" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.431" = type { %"class.WTF::VectorBuffer.432" }
%"class.WTF::VectorBuffer.432" = type { %"class.WTF::VectorBufferBase.433" }
%"class.WTF::VectorBufferBase.433" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.436 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.437 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.438" = type { %"class.absl::optional_internal::optional_data.439" }
%"class.absl::optional_internal::optional_data.439" = type { %"class.absl::optional_internal::optional_data_base.440" }
%"class.absl::optional_internal::optional_data_base.440" = type { %"class.absl::optional_internal::optional_data_dtor_base.441" }
%"class.absl::optional_internal::optional_data_dtor_base.441" = type { i8, %union.anon.442 }
%union.anon.442 = type { %"class.base::Time" }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445" }
%"class.WTF::VectorBufferBase.445" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.448" = type { %"class.absl::optional_internal::optional_data.449" }
%"class.absl::optional_internal::optional_data.449" = type { %"class.absl::optional_internal::optional_data_base.450" }
%"class.absl::optional_internal::optional_data_base.450" = type { %"class.absl::optional_internal::optional_data_dtor_base.451" }
%"class.absl::optional_internal::optional_data_dtor_base.451" = type { i8, %union.anon.452 }
%union.anon.452 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.475 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.476", i64, %"class.WTF::Vector.478", %"class.WTF::Vector.483" }
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { i8*, i32, i32 }
%"class.WTF::Vector.483" = type { %"class.WTF::VectorBuffer.484" }
%"class.WTF::VectorBuffer.484" = type { %"class.WTF::VectorBufferBase.485" }
%"class.WTF::VectorBufferBase.485" = type { %"class.std::__1::unique_ptr.486"*, i32, i32 }
%"class.std::__1::unique_ptr.486" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.489" }
%"class.std::__1::__tree.489" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.490", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.238", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.238" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Persistent.239" = type { %"class.blink::PersistentBase.240" }
%"class.blink::PersistentBase.240" = type { %"class.blink::SingleModuleClient"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.241" = type { %"class.blink::PersistentBase.242" }
%"class.blink::PersistentBase.242" = type { %"class.blink::ModuleScript"*, %"class.blink::PersistentNodePtr" }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.597" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.239" }
%"class.std::__1::__tuple_leaf.597" = type { %"class.blink::Persistent.241" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ModuleScriptFetchRequest" = type { %"class.blink::KURL", i32, i32, i32, [4 x i8], %"class.blink::ScriptFetchOptions", %"class.WTF::String", %"class.WTF::TextPosition" }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.250", %"class.blink::Member.252", %"class.blink::Member.254", %class.scoped_refptr.256, %class.scoped_refptr.256, %"class.blink::Member.257", %"class.blink::Member.259", %"class.blink::Member.261", %"class.blink::Member.265", %"class.blink::Member.319", %"class.blink::HeapHashMap.321", %"class.blink::HeapHashSet.328", %"class.blink::HeapHashSet.328", %"class.blink::HeapHashMap.498", %"class.blink::HeapVector", %"class.blink::Member.512", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.517", %"class.WTF::Vector.524", %"class.blink::HeapHashSet.530", %"class.blink::HeapHashSet.530", %"class.std::__1::unique_ptr.536", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.545", i8, i8, %"class.base::WeakPtrFactory.547" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.256 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type opaque
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.269", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.271", %"class.WTF::HashSet.276", i8, [3 x i8], i32, %"class.blink::HeapHashMap.280", %"class.std::__1::map", %"class.std::__1::map.295", %"class.std::__1::unique_ptr.304", %"class.blink::Member.259", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.317", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.271" = type { %"class.WTF::HashTable.272" }
%"class.WTF::HashTable.272" = type <{ %"struct.WTF::KeyValuePair.275"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.275" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.276" = type { %"class.WTF::HashTable.277" }
%"class.WTF::HashTable.277" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.280" = type { %"class.WTF::HashMap.283" }
%"class.WTF::HashMap.283" = type { %"class.WTF::HashTable.284" }
%"class.WTF::HashTable.284" = type <{ %"struct.WTF::KeyValuePair.286"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.286" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.287", %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::map.295" = type { %"class.std::__1::__tree.296" }
%"class.std::__1::__tree.296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.321" = type { %"class.WTF::HashMap.324" }
%"class.WTF::HashMap.324" = type { %"class.WTF::HashTable.325" }
%"class.WTF::HashTable.325" = type <{ %"struct.WTF::KeyValuePair.327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.327" = type opaque
%"class.blink::HeapHashSet.328" = type { %"class.WTF::HashSet.331" }
%"class.WTF::HashSet.331" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.334" }
%"class.blink::HeapHashMap.498" = type { %"class.WTF::HashMap.501" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.504" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.507" }
%"class.WTF::Vector.507" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509" }
%"class.WTF::VectorBufferBase.509" = type { %"class.blink::Member.510"*, i32, i32 }
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.515", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.256, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.514 }
%class.scoped_refptr.514 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.308", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.308" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.309" }
%"struct.std::__1::atomic.309" = type { %"struct.std::__1::__atomic_base.310" }
%"struct.std::__1::__atomic_base.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__cxx_atomic_impl.312" }
%"struct.std::__1::__cxx_atomic_impl.312" = type { %"struct.std::__1::__cxx_atomic_base_impl.313" }
%"struct.std::__1::__cxx_atomic_base_impl.313" = type { i8 }
%"class.blink::WeakMember.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::HeapHashMap.517" = type { %"class.WTF::HashMap.520" }
%"class.WTF::HashMap.520" = type { %"class.WTF::HashTable.521" }
%"class.WTF::HashTable.521" = type <{ %"struct.WTF::KeyValuePair.523"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.523" = type opaque
%"class.WTF::Vector.524" = type { %"class.WTF::VectorBuffer.525" }
%"class.WTF::VectorBuffer.525" = type { %"class.WTF::VectorBufferBase.526" }
%"class.WTF::VectorBufferBase.526" = type { %class.scoped_refptr.527*, i32, i32 }
%class.scoped_refptr.527 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.530" = type { %"class.WTF::HashSet.533" }
%"class.WTF::HashSet.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"class.blink::Member.473"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.WTF::HashSet.539"* }
%"class.WTF::HashSet.539" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.307 }
%class.scoped_refptr.307 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.543" }
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.547" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::internal::ConcurrentBucket.628" = type { [120 x i8], %"class.blink::Member.205"* }
%"class.blink::HeapHashTableBacking.623" = type { i8 }

$_ZNK5blink9ModuleMap5Entry18NameInHeapSnapshotEv = comdat any

$_ZN5blink9ModuleMap5EntryD2Ev = comdat any

$_ZN5blink9ModuleMap5EntryD0Ev = comdat any

$_ZThn8_N5blink9ModuleMap5EntryD1Ev = comdat any

$_ZThn8_N5blink9ModuleMap5EntryD0Ev = comdat any

$_ZNK5blink9ModuleMap18NameInHeapSnapshotEv = comdat any

$_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9ModuleMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18SingleModuleClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12ModuleScriptELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENS9_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink18SingleModuleClientEFvPNS2_12ModuleScriptEEJNS2_10PersistentIS3_EENS8_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_18SingleModuleClientEEENS4_INS3_12ModuleScriptEEEEED2Ev = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_18SingleModuleClientEEENS4_INS3_12ModuleScriptEEEEEC2IJLm0ELm1EEJS6_S8_EJEJEJS6_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_26ModuleScriptLoaderRegistryEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_26ModuleScriptLoaderRegistryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_26ModuleScriptLoaderRegistryEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink4KURLENS5_10ModuleTypeEEENS_12KeyValuePairIS8_NS5_6MemberINS5_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS6_S7_EENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_ = comdat any

$_ZN5blink10TraceTraitINS_9ModuleMap5EntryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EES6_DnEENS_18HashTableAddResultISM_SC_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6ExpandEPSC_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE12ExpandBufferEjPSC_Rb = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE13AllocateTableEj = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE8RehashToEPSC_jSN_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSF_ISB_EEEELb1EE4MoveEOSC_RSC_ = comdat any

$_ZN3WTF15ConstructTraitsINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISB_EEEENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJSC_EEEPSC_PvDpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS1_12KeyValuePairIS7_NS_6MemberINS_9ModuleMap5EntryEEEEENS1_24KeyValuePairKeyExtractorENS1_8PairHashIS5_S6_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEE14AllocateObjectISO_EEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS3_12KeyValuePairIS9_NS_6MemberINS_9ModuleMap5EntryEEEEENS3_24KeyValuePairKeyExtractorENS3_8PairHashIS7_S8_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSK_ISE_EEEESL_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISF_SK_SL_EES6_EENS2_IPSC_bEERKT0_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_9ModuleMap5EntryEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_9ModuleMap5EntryEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_9ModuleMap5EntryEE7GetNameEPKv = comdat any

$_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISF_SK_SL_EES6_EEPKSC_RKT0_ = comdat any

$_ZTVN5blink9ModuleMapE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_26ModuleScriptLoaderRegistryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_26ModuleScriptLoaderRegistryEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_9ModuleMap5EntryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_9ModuleMap5EntryEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink9ModuleMap5EntryE = hidden unnamed_addr constant { [7 x i8*], [6 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ModuleMap::Entry"*)* @_ZNK5blink9ModuleMap5Entry18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ModuleMap::Entry"*)* @_ZN5blink9ModuleMap5EntryD2Ev to i8*), i8* bitcast (void (%"class.blink::ModuleMap::Entry"*)* @_ZN5blink9ModuleMap5EntryD0Ev to i8*), i8* bitcast (void (%"class.blink::ModuleMap::Entry"*, %"class.blink::Visitor"*)* @_ZNK5blink9ModuleMap5Entry5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ModuleMap::Entry"*, %"class.blink::ModuleScript"*)* @_ZN5blink9ModuleMap5Entry29NotifyNewSingleModuleFinishedEPNS_12ModuleScriptE to i8*)], [6 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::ModuleMap::Entry"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink9ModuleMap5Entry5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ModuleMap::Entry"*)* @_ZThn8_N5blink9ModuleMap5EntryD1Ev to i8*), i8* bitcast (void (%"class.blink::ModuleMap::Entry"*)* @_ZThn8_N5blink9ModuleMap5EntryD0Ev to i8*), i8* bitcast (void (%"class.blink::ModuleMap::Entry"*, %"class.blink::ModuleScript"*)* @_ZThn8_N5blink9ModuleMap5Entry29NotifyNewSingleModuleFinishedEPNS_12ModuleScriptE to i8*)] }, align 8
@.str = private unnamed_addr constant [34 x i8] c"DispatchFinishedNotificationAsync\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/core/script/module_map.cc\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"is_fetching_\00", align 1
@_ZTVN5blink9ModuleMapE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ModuleMap"*)* @_ZNK5blink9ModuleMap18NameInHeapSnapshotEv to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"ModuleMap::Entry\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.7 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.8 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_18SingleModuleClientEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [386 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::SingleModuleClient>, blink::Member<blink::SingleModuleClient>, WTF::IdentityExtractor, WTF::MemberHash<blink::SingleModuleClient>, WTF::HashTraits<blink::Member<blink::SingleModuleClient> >, WTF::HashTraits<blink::Member<blink::SingleModuleClient> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26ModuleScriptLoaderRegistryEEEPKcv = private unnamed_addr constant [81 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ModuleScriptLoaderRegistry]\00", align 1
@_ZZN5blink11GCInfoTraitINS_26ModuleScriptLoaderRegistryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_26ModuleScriptLoaderRegistryEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_26ModuleScriptLoaderRegistryEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_26ModuleScriptLoaderRegistryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS3_12KeyValuePairIS9_NS_6MemberINS_9ModuleMap5EntryEEEEENS3_24KeyValuePairKeyExtractorENS3_8PairHashIS7_S8_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSK_ISE_EEEESL_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINSt3__14pairINS1_4KURLENS1_10ModuleTypeEEENS_12KeyValuePairIS8_NS1_6MemberINS1_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS6_S7_EENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [564 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<std::__1::pair<blink::KURL, blink::ModuleType>, WTF::KeyValuePair<std::__1::pair<blink::KURL, blink::ModuleType>, blink::Member<blink::ModuleMap::Entry> >, WTF::KeyValuePairKeyExtractor, WTF::PairHash<blink::KURL, blink::ModuleType>, WTF::HashMapValueTraits<WTF::HashTraits<std::__1::pair<blink::KURL, blink::ModuleType> >, WTF::HashTraits<blink::Member<blink::ModuleMap::Entry> > >, WTF::HashTraits<std::__1::pair<blink::KURL, blink::ModuleType> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9ModuleMap5EntryEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ModuleMap::Entry]\00", align 1
@_ZZN5blink11GCInfoTraitINS_9ModuleMap5EntryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_9ModuleMap5EntryEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_9ModuleMap5EntryEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_9ModuleMap5EntryEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_9ModuleMap5EntryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [10 x i8] c"ModuleMap\00", align 1

@_ZN5blink9ModuleMap5EntryC1EPS0_ = hidden unnamed_addr alias void (%"class.blink::ModuleMap::Entry"*, %"class.blink::ModuleMap"*), void (%"class.blink::ModuleMap::Entry"*, %"class.blink::ModuleMap"*)* @_ZN5blink9ModuleMap5EntryC2EPS0_
@_ZN5blink9ModuleMapC1EPNS_9ModulatorE = hidden unnamed_addr alias void (%"class.blink::ModuleMap"*, %"class.blink::Modulator"*), void (%"class.blink::ModuleMap"*, %"class.blink::Modulator"*)* @_ZN5blink9ModuleMapC2EPNS_9ModulatorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9ModuleMap5EntryC2EPS0_(%"class.blink::ModuleMap::Entry"* nocapture, %"class.blink::ModuleMap"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ModuleMap::Entry"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN5blink9ModuleMap5EntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN5blink9ModuleMap5EntryE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ModuleScript"* null, %"class.blink::ModuleScript"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::ModuleMap"* %1, %"class.blink::ModuleMap"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 4
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 6
  %8 = bitcast %"class.blink::HeapHashSet.217"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9ModuleMap5Entry5TraceEPNS_7VisitorE(%"class.blink::ModuleMap::Entry"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.194"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModuleMapEE5TraceEPNS_7VisitorEPKv) #8
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 6
  %26 = bitcast %"class.blink::HeapHashSet.217"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = bitcast %"class.blink::HeapHashSet.217"* %25 to i8**
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %30 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %30, i64 11
  %32 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8** %28) #8
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %24
  %35 = inttoptr i64 %27 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %40

40:                                               ; preds = %24, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_NK5blink9ModuleMap5Entry5TraceEPNS_7VisitorE(%"class.blink::ModuleMap::Entry"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 -1, i32 6, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds i32, i32* %3, i64 4
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds i32, i32* %3, i64 6
  %16 = bitcast i32* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModuleMapEE5TraceEPNS_7VisitorEPKv) #8
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds i32, i32* %3, i64 10
  %27 = bitcast i32* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = bitcast i32* %26 to i8**
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %31 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %31, i64 11
  %33 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8** %29) #8
  %34 = icmp eq i64 %28, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %25
  %36 = inttoptr i64 %28 to i8*
  %37 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %1, i8* nonnull %36, i8* nonnull %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %41

41:                                               ; preds = %25, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9ModuleMap5Entry33DispatchFinishedNotificationAsyncEPNS_18SingleModuleClientE(%"class.blink::ModuleMap::Entry"* nocapture readonly, %"class.blink::SingleModuleClient"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.blink::Persistent.239", align 8
  %6 = alloca %"class.blink::Persistent.241", align 8
  %7 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ModuleMap"*, %"class.blink::ModuleMap"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %9, align 8
  %11 = bitcast %"class.blink::Modulator"* %10 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)***
  %12 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)** %12, i64 5
  %14 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Modulator"*)** %13, align 8
  %15 = tail call %"class.base::SingleThreadTaskRunner"* %14(%"class.blink::Modulator"* %10) #8
  %16 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to %"class.base::TaskRunner"*
  %17 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 64) #8
  %18 = bitcast %"class.blink::Persistent.239"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.blink::Persistent.239", %"class.blink::Persistent.239"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::Persistent.239", %"class.blink::Persistent.239"* %5, i64 0, i32 0, i32 0
  store %"class.blink::SingleModuleClient"* %1, %"class.blink::SingleModuleClient"** %20, align 8, !alias.scope !2
  %21 = getelementptr inbounds %"class.blink::Persistent.239", %"class.blink::Persistent.239"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %21, align 8, !alias.scope !2
  %22 = ptrtoint %"class.blink::SingleModuleClient"* %1 to i64
  switch i64 %22, label %23 [
    i64 0, label %49
    i64 -1, label %49
  ]

23:                                               ; preds = %2
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !2
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #8, !noalias !2
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !5

28:                                               ; preds = %23
  %29 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #8
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8, !noalias !2
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8, !noalias !2
  %36 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8, !noalias !2
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %39, label %42, !prof !5

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %40) #8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  br label %42

42:                                               ; preds = %39, %30
  %43 = phi %"class.blink::PersistentNode"* [ %41, %39 ], [ %37, %30 ]
  %44 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !2
  %46 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  store i64 %45, i64* %46, align 8, !noalias !2
  %47 = bitcast %"class.blink::PersistentNode"* %43 to %"class.blink::PersistentBase.240"**
  store %"class.blink::PersistentBase.240"* %19, %"class.blink::PersistentBase.240"** %47, align 8, !noalias !2
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18SingleModuleClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %21, align 8, !alias.scope !2
  br label %49

49:                                               ; preds = %2, %2, %42
  %50 = bitcast %"class.blink::Persistent.241"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8
  %51 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::Persistent.241", %"class.blink::Persistent.241"* %6, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::Persistent.241", %"class.blink::Persistent.241"* %6, i64 0, i32 0, i32 0
  store %"class.blink::ModuleScript"* %52, %"class.blink::ModuleScript"** %54, align 8, !alias.scope !6
  %55 = getelementptr inbounds %"class.blink::Persistent.241", %"class.blink::Persistent.241"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %55, align 8, !alias.scope !6
  %56 = ptrtoint %"class.blink::ModuleScript"* %52 to i64
  switch i64 %56, label %57 [
    i64 0, label %83
    i64 -1, label %83
  ]

57:                                               ; preds = %49
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #8, !noalias !6
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !5

62:                                               ; preds = %57
  %63 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #8
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i8* [ %63, %62 ], [ %60, %57 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8, !noalias !6
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %68, align 8, !noalias !6
  %70 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %70, align 8, !noalias !6
  %72 = icmp eq %"class.blink::PersistentNode"* %71, null
  br i1 %72, label %73, label %76, !prof !5

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %69, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %74) #8
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %70, align 8
  br label %76

76:                                               ; preds = %73, %64
  %77 = phi %"class.blink::PersistentNode"* [ %75, %73 ], [ %71, %64 ]
  %78 = bitcast %"class.blink::PersistentNode"* %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !6
  %80 = bitcast %"class.blink::PersistentRegion"* %69 to i64*
  store i64 %79, i64* %80, align 8, !noalias !6
  %81 = bitcast %"class.blink::PersistentNode"* %77 to %"class.blink::PersistentBase.242"**
  store %"class.blink::PersistentBase.242"* %53, %"class.blink::PersistentBase.242"** %81, align 8, !noalias !6
  %82 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %77, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12ModuleScriptELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %82, align 8
  store %"class.blink::PersistentNode"* %77, %"class.blink::PersistentNode"** %55, align 8, !alias.scope !6
  br label %83

83:                                               ; preds = %49, %49, %76
  %84 = call i8* @_Znwm(i64 80) #9, !noalias !9
  %85 = bitcast i8* %84 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %85, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENS9_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink18SingleModuleClientEFvPNS2_12ModuleScriptEEJNS2_10PersistentIS3_EENS8_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !9
  %86 = getelementptr inbounds i8, i8* %84, i64 32
  %87 = bitcast i8* %86 to <2 x i64>*
  store <2 x i64> <i64 33, i64 0>, <2 x i64>* %87, align 8, !noalias !9
  %88 = getelementptr inbounds i8, i8* %84, i64 48
  %89 = bitcast i8* %88 to %"struct.std::__1::__tuple_impl"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_18SingleModuleClientEEENS4_INS3_12ModuleScriptEEEEEC2IJLm0ELm1EEJS6_S8_EJEJEJS6_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"* %89, %"class.blink::Persistent.239"* nonnull dereferenceable(16) %5, %"class.blink::Persistent.241"* nonnull dereferenceable(16) %6) #8, !noalias !9
  %90 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %84, i8** %90, align 8, !alias.scope !9
  %91 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %16, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #8
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #8
  %93 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %94 = icmp eq %"class.blink::PersistentNode"* %93, null
  br i1 %94, label %114, label %95

95:                                               ; preds = %83
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !5

100:                                              ; preds = %95
  %101 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #8
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 3, i32 0, i32 0, i32 0
  %107 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %106, align 8
  %108 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %109 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %107, i64 0, i32 0, i32 0
  %110 = bitcast %"class.blink::PersistentRegion"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.blink::PersistentNode"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %108, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %113, align 8
  store %"class.blink::PersistentNode"* %108, %"class.blink::PersistentNode"** %109, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %55, align 8
  br label %114

114:                                              ; preds = %83, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  %115 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %116 = icmp eq %"class.blink::PersistentNode"* %115, null
  br i1 %116, label %136, label %117

117:                                              ; preds = %114
  %118 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %119 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %118, i64 0, i32 1
  %120 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %119) #8
  %121 = icmp eq i8* %120, null
  br i1 %121, label %122, label %124, !prof !5

122:                                              ; preds = %117
  %123 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %119, i8* %123) #8
  br label %124

124:                                              ; preds = %122, %117
  %125 = phi i8* [ %123, %122 ], [ %120, %117 ]
  %126 = bitcast i8* %125 to %"class.blink::ThreadState"**
  %127 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %127, i64 0, i32 3, i32 0, i32 0, i32 0
  %129 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %128, align 8
  %130 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %131 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %129, i64 0, i32 0, i32 0
  %132 = bitcast %"class.blink::PersistentRegion"* %129 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.blink::PersistentNode"* %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %130, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %135, align 8
  store %"class.blink::PersistentNode"* %130, %"class.blink::PersistentNode"** %131, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %21, align 8
  br label %136

136:                                              ; preds = %114, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9ModuleMap5Entry9AddClientEPNS_18SingleModuleClientE(%"class.blink::ModuleMap::Entry"*, %"class.blink::SingleModuleClient"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SingleModuleClient"*, align 8
  store %"class.blink::SingleModuleClient"* %1, %"class.blink::SingleModuleClient"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !16
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN5blink9ModuleMap5Entry33DispatchFinishedNotificationAsyncEPNS_18SingleModuleClientE(%"class.blink::ModuleMap::Entry"* %0, %"class.blink::SingleModuleClient"* %1)
  br label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 6, i32 0, i32 0
  %10 = call { %"class.blink::Member.223"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.221"* %9, %"class.blink::SingleModuleClient"** nonnull dereferenceable(8) %3, %"class.blink::SingleModuleClient"** nonnull dereferenceable(8) %3) #8
  br label %11

11:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9ModuleMap5Entry29NotifyNewSingleModuleFinishedEPNS_12ModuleScriptE(%"class.blink::ModuleMap::Entry"* nocapture, %"class.blink::ModuleScript"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !16
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #8
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 2
  %12 = ptrtoint %"class.blink::ModuleScript"* %1 to i64
  %13 = bitcast %"class.blink::Member"* %11 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::ModuleScript"* %1 to i8*
  %18 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #8
  br label %19

19:                                               ; preds = %10, %16
  store i8 0, i8* %4, align 8
  %20 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 6, i32 0
  %21 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::HashSet.220", %"class.WTF::HashSet.220"* %20, i64 0, i32 0, i32 0
  %25 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %25, i64 %28
  br i1 %23, label %44, label %30

30:                                               ; preds = %19
  %31 = icmp eq i32 %27, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %30, %36
  %33 = phi %"class.blink::Member.223"* [ %37, %36 ], [ %25, %30 ]
  %34 = bitcast %"class.blink::Member.223"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %33, i64 1
  %38 = icmp eq %"class.blink::Member.223"* %37, %29
  br i1 %38, label %44, label %32

39:                                               ; preds = %32, %30
  %40 = phi %"class.blink::Member.223"* [ %25, %30 ], [ %33, %32 ]
  %41 = icmp eq %"class.blink::Member.223"* %40, %29
  br i1 %41, label %44, label %51

42:                                               ; preds = %51, %64, %61
  %43 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %24, align 8
  br label %44

44:                                               ; preds = %36, %19, %42, %39
  %45 = phi %"class.blink::Member.223"* [ %43, %42 ], [ %25, %39 ], [ %25, %19 ], [ %25, %36 ]
  %46 = icmp eq %"class.blink::Member.223"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::Member.223"* %45 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %48) #8
  %49 = bitcast %"class.WTF::HashSet.220"* %20 to i64*
  store atomic i64 0, i64* %49 monotonic, align 8
  store i32 0, i32* %26, align 8
  store i32 0, i32* %21, align 4
  br label %50

50:                                               ; preds = %44, %47
  ret void

51:                                               ; preds = %39, %64
  %52 = phi %"class.blink::Member.223"* [ %58, %64 ], [ %40, %39 ]
  %53 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::SingleModuleClient"*, %"class.blink::SingleModuleClient"** %53, align 8
  call void @_ZN5blink9ModuleMap5Entry33DispatchFinishedNotificationAsyncEPNS_18SingleModuleClientE(%"class.blink::ModuleMap::Entry"* %0, %"class.blink::SingleModuleClient"* %54)
  %55 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %52, i64 1
  %56 = icmp eq %"class.blink::Member.223"* %55, %29
  br i1 %56, label %42, label %57

57:                                               ; preds = %51, %61
  %58 = phi %"class.blink::Member.223"* [ %62, %61 ], [ %55, %51 ]
  %59 = bitcast %"class.blink::Member.223"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %64 [
    i64 -1, label %61
    i64 0, label %61
  ]

61:                                               ; preds = %57, %57
  %62 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %58, i64 1
  %63 = icmp eq %"class.blink::Member.223"* %62, %29
  br i1 %63, label %42, label %57

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::Member.223"* %58, %29
  br i1 %65, label %42, label %51
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink9ModuleMap5Entry29NotifyNewSingleModuleFinishedEPNS_12ModuleScriptE(%"class.blink::ModuleMap::Entry"* nocapture, %"class.blink::ModuleScript"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 -1, i32 6, i32 0, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::ModuleMap::Entry"*
  tail call void @_ZN5blink9ModuleMap5Entry29NotifyNewSingleModuleFinishedEPNS_12ModuleScriptE(%"class.blink::ModuleMap::Entry"* %4, %"class.blink::ModuleScript"* %1)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ModuleScript"* @_ZNK5blink9ModuleMap5Entry15GetModuleScriptEv(%"class.blink::ModuleMap::Entry"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %2, align 8
  ret %"class.blink::ModuleScript"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9ModuleMapC2EPNS_9ModulatorE(%"class.blink::ModuleMap"* nocapture, %"class.blink::Modulator"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink9ModuleMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::HeapHashMap"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #8
  %6 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::Modulator"* %1, %"class.blink::Modulator"** %6, align 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_26ModuleScriptLoaderRegistryEEEPhm(i64 24) #8
  %8 = getelementptr inbounds i8, i8* %7, i64 -4
  %9 = bitcast i8* %8 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = bitcast %"class.blink::ModuleScriptLoaderRegistry"** %12 to i8**
  store i8* %7, i8** %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9ModuleMap5TraceEPNS_7VisitorE(%"class.blink::ModuleMap"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapHashMap"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #8
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to %"struct.WTF::KeyValuePair.203"*
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* %14, i8* %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %19

19:                                               ; preds = %2, %12
  %20 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 2
  %21 = bitcast %"class.blink::Member.4"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %19
  %25 = inttoptr i64 %22 to i8*
  %26 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, i64 5
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %1, i8* nonnull %25, i8* nonnull %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv) #8
  br label %30

30:                                               ; preds = %19, %24
  %31 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 3
  %32 = bitcast %"class.blink::Member.207"* %31 to i64*
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = inttoptr i64 %33 to i8*
  %37 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %1, i8* nonnull %36, i8* nonnull %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26ModuleScriptLoaderRegistryEE5TraceEPNS_7VisitorEPKv) #8
  br label %41

41:                                               ; preds = %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9ModuleMap23FetchSingleModuleScriptERKNS_24ModuleScriptFetchRequestEPNS_15ResourceFetcherENS_16ModuleGraphLevelENS_27ModuleScriptCustomFetchTypeEPNS_18SingleModuleClientE(%"class.blink::ModuleMap"*, %"class.blink::ModuleScriptFetchRequest"* dereferenceable(208), %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::SingleModuleClient"*, align 8
  %8 = alloca %"struct.std::__1::pair.204", align 8
  %9 = alloca i8*, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ModuleScriptFetchRequest", %"class.blink::ModuleScriptFetchRequest"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %8, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %14, %"class.blink::KURL"* dereferenceable(112) %11) #8
  %15 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %8, i64 0, i32 1
  store i32 %13, i32* %15, align 8, !alias.scope !17
  %16 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %9, align 8
  %17 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = call { %"struct.WTF::KeyValuePair.203"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EES6_DnEENS_18HashTableAddResultISM_SC_EEOT0_OT1_(%"class.WTF::HashTable.201"* %17, %"struct.std::__1::pair.204"* nonnull dereferenceable(120) %8, i8** nonnull dereferenceable(8) %9) #8
  %19 = extractvalue { %"struct.WTF::KeyValuePair.203"*, i8 } %18, 0
  %20 = extractvalue { %"struct.WTF::KeyValuePair.203"*, i8 } %18, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %10) #8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %19, i64 0, i32 1
  %22 = and i8 %20, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %56, label %24

24:                                               ; preds = %6
  %25 = ptrtoint %"class.blink::ModuleMap"* %0 to i64
  %26 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_9ModuleMap5EntryEEEPhm(i64 64) #8
  %27 = bitcast i8* %26 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN5blink9ModuleMap5EntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN5blink9ModuleMap5EntryE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %27, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 16
  %29 = bitcast i8* %28 to %"class.blink::ModuleScript"**
  store %"class.blink::ModuleScript"* null, %"class.blink::ModuleScript"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %26, i64 24
  %31 = bitcast i8* %30 to i64*
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %26, i64 32
  store i8 1, i8* %32, align 8
  %33 = getelementptr inbounds i8, i8* %26, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false) #8
  %34 = getelementptr inbounds i8, i8* %26, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = ptrtoint i8* %26 to i64
  %39 = bitcast %"class.blink::Member.205"* %21 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  %42 = bitcast i8* %26 to %"class.blink::ModuleMap::Entry"*
  br i1 %41, label %47, label %43

43:                                               ; preds = %24
  %44 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  %45 = getelementptr inbounds %"class.blink::Member.205", %"class.blink::Member.205"* %21, i64 0, i32 0, i32 0
  %46 = load %"class.blink::ModuleMap::Entry"*, %"class.blink::ModuleMap::Entry"** %45, align 8
  br label %47

47:                                               ; preds = %24, %43
  %48 = phi %"class.blink::ModuleMap::Entry"* [ %42, %24 ], [ %46, %43 ]
  %49 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::ModuleScriptLoaderRegistry"*, %"class.blink::ModuleScriptLoaderRegistry"** %51, align 8
  %53 = icmp eq %"class.blink::ModuleMap::Entry"* %48, null
  %54 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %48, i64 0, i32 1
  %55 = select i1 %53, %"class.blink::ModuleScriptLoaderClient"* null, %"class.blink::ModuleScriptLoaderClient"* %54
  call void @_ZN5blink18ModuleScriptLoader5FetchERKNS_24ModuleScriptFetchRequestEPNS_15ResourceFetcherENS_16ModuleGraphLevelEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_26ModuleScriptLoaderRegistryEPNS_24ModuleScriptLoaderClientE(%"class.blink::ModuleScriptFetchRequest"* dereferenceable(208) %1, %"class.blink::ResourceFetcher"* %2, i32 %3, %"class.blink::Modulator"* %50, i32 %4, %"class.blink::ModuleScriptLoaderRegistry"* %52, %"class.blink::ModuleScriptLoaderClient"* %55) #8
  br label %56

56:                                               ; preds = %6, %47
  %57 = icmp eq %"class.blink::SingleModuleClient"* %5, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::Member.205", %"class.blink::Member.205"* %21, i64 0, i32 0, i32 0
  %60 = load %"class.blink::ModuleMap::Entry"*, %"class.blink::ModuleMap::Entry"** %59, align 8
  %61 = bitcast %"class.blink::SingleModuleClient"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  store %"class.blink::SingleModuleClient"* %5, %"class.blink::SingleModuleClient"** %7, align 8
  %62 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %60, i64 0, i32 4
  %63 = load i8, i8* %62, align 8, !range !16
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %58
  call void @_ZN5blink9ModuleMap5Entry33DispatchFinishedNotificationAsyncEPNS_18SingleModuleClientE(%"class.blink::ModuleMap::Entry"* %60, %"class.blink::SingleModuleClient"* nonnull %5) #8
  br label %69

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %60, i64 0, i32 6, i32 0, i32 0
  %68 = call { %"class.blink::Member.223"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.221"* %67, %"class.blink::SingleModuleClient"** nonnull dereferenceable(8) %7, %"class.blink::SingleModuleClient"** nonnull dereferenceable(8) %7) #8
  br label %69

69:                                               ; preds = %65, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  br label %70

70:                                               ; preds = %56, %69
  ret void
}

declare void @_ZN5blink18ModuleScriptLoader5FetchERKNS_24ModuleScriptFetchRequestEPNS_15ResourceFetcherENS_16ModuleGraphLevelEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_26ModuleScriptLoaderRegistryEPNS_24ModuleScriptLoaderClientE(%"class.blink::ModuleScriptFetchRequest"* dereferenceable(208), %"class.blink::ResourceFetcher"*, i32, %"class.blink::Modulator"*, i32, %"class.blink::ModuleScriptLoaderRegistry"*, %"class.blink::ModuleScriptLoaderClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ModuleScript"* @_ZNK5blink9ModuleMap22GetFetchedModuleScriptERKNS_4KURLENS_10ModuleTypeE(%"class.blink::ModuleMap"*, %"class.blink::KURL"* dereferenceable(112), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.204", align 8
  %5 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %4, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %7, %"class.blink::KURL"* dereferenceable(112) %1) #8
  %8 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %4, i64 0, i32 1
  store i32 %2, i32* %8, align 8, !alias.scope !20
  %9 = getelementptr inbounds %"class.WTF::HashMap.200", %"class.WTF::HashMap.200"* %5, i64 0, i32 0
  %10 = call %"struct.WTF::KeyValuePair.203"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISF_SK_SL_EES6_EEPKSC_RKT0_(%"class.WTF::HashTable.201"* %9, %"struct.std::__1::pair.204"* nonnull dereferenceable(120) %4) #8
  %11 = icmp eq %"struct.WTF::KeyValuePair.203"* %10, null
  %12 = getelementptr inbounds %"class.WTF::HashMap.200", %"class.WTF::HashMap.200"* %5, i64 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ModuleMap", %"class.blink::ModuleMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %13, i64 %16
  %18 = select i1 %11, %"struct.WTF::KeyValuePair.203"* %17, %"struct.WTF::KeyValuePair.203"* %10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %6) #8
  %19 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %12, align 8
  %20 = load i32, i32* %14, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %19, i64 %21
  %23 = icmp eq %"struct.WTF::KeyValuePair.203"* %18, %22
  br i1 %23, label %29, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %18, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.blink::ModuleMap::Entry"*, %"class.blink::ModuleMap::Entry"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ModuleMap::Entry", %"class.blink::ModuleMap::Entry"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %27, align 8
  br label %29

29:                                               ; preds = %3, %24
  %30 = phi %"class.blink::ModuleScript"* [ %28, %24 ], [ null, %3 ]
  ret %"class.blink::ModuleScript"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink9ModuleMap5Entry18NameInHeapSnapshotEv(%"class.blink::ModuleMap::Entry"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9ModuleMap5EntryD2Ev(%"class.blink::ModuleMap::Entry"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9ModuleMap5EntryD0Ev(%"class.blink::ModuleMap::Entry"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink9ModuleMap5EntryD1Ev(%"class.blink::ModuleMap::Entry"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink9ModuleMap5EntryD0Ev(%"class.blink::ModuleMap::Entry"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink9ModuleMap18NameInHeapSnapshotEv(%"class.blink::ModuleMap"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleScript"*
  %4 = bitcast i8* %1 to void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)**, void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::ModuleScript"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ModuleMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast i8* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #8
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to %"struct.WTF::KeyValuePair.203"*
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %0, i8* %14, i8* %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %19

19:                                               ; preds = %12, %2
  %20 = getelementptr inbounds i8, i8* %1, i64 32
  %21 = bitcast i8* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %19
  %25 = inttoptr i64 %22 to i8*
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, i64 5
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %0, i8* nonnull %25, i8* nonnull %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv) #8
  br label %30

30:                                               ; preds = %24, %19
  %31 = getelementptr inbounds i8, i8* %1, i64 40
  %32 = bitcast i8* %31 to i64*
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = inttoptr i64 %33 to i8*
  %37 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %0, i8* nonnull %36, i8* nonnull %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26ModuleScriptLoaderRegistryEE5TraceEPNS_7VisitorEPKv) #8
  br label %41

41:                                               ; preds = %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.223"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #8
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.223"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv) #8
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv) #8
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SingleModuleClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SingleModuleClient"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18SingleModuleClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SingleModuleClient"**
  %5 = load %"class.blink::SingleModuleClient"*, %"class.blink::SingleModuleClient"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #8
  %7 = icmp eq %"class.blink::SingleModuleClient"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SingleModuleClient"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #8
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12ModuleScriptELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ModuleScript"**
  %5 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #8
  %7 = icmp eq %"class.blink::ModuleScript"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ModuleScript"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #8
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENS9_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::SingleModuleClient"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)**
  %21 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::SingleModuleClient"*, %"class.blink::ModuleScript"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"class.blink::ModuleScript"**
  %28 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %27, align 8
  tail call void %25(%"class.blink::SingleModuleClient"* %12, %"class.blink::ModuleScript"* %28) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18SingleModuleClientEFvPNS2_12ModuleScriptEEJNS2_10PersistentIS3_EENS8_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_18SingleModuleClientEEENS4_INS3_12ModuleScriptEEEEED2Ev(%"struct.std::__1::__tuple_impl"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_18SingleModuleClientEEENS4_INS3_12ModuleScriptEEEEED2Ev(%"struct.std::__1::__tuple_impl"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !5

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !5

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #8
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_18SingleModuleClientEEENS4_INS3_12ModuleScriptEEEEEC2IJLm0ELm1EEJS6_S8_EJEJEJS6_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"*, %"class.blink::Persistent.239"* dereferenceable(16), %"class.blink::Persistent.241"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::Persistent.239"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.std::__1::__tuple_impl"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  switch i64 %6, label %9 [
    i64 0, label %35
    i64 -1, label %35
  ]

9:                                                ; preds = %3
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !5

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #8
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !5

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.240"**
  store %"class.blink::PersistentBase.240"* %4, %"class.blink::PersistentBase.240"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18SingleModuleClientELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %8, align 8
  br label %35

35:                                               ; preds = %3, %3, %28
  %36 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::__tuple_leaf.597", %"class.std::__1::__tuple_leaf.597"* %36, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::Persistent.241"* %2 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::__tuple_leaf.597"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %41, align 8
  switch i64 %39, label %42 [
    i64 0, label %68
    i64 -1, label %68
  ]

42:                                               ; preds = %35
  %43 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %44 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %43, i64 0, i32 1
  %45 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %44) #8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49, !prof !5

47:                                               ; preds = %42
  %48 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %44, i8* %48) #8
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %48, %47 ], [ %45, %42 ]
  %51 = bitcast i8* %50 to %"class.blink::ThreadState"**
  %52 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %57 = icmp eq %"class.blink::PersistentNode"* %56, null
  br i1 %57, label %58, label %61, !prof !5

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %59) #8
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  br label %61

61:                                               ; preds = %58, %49
  %62 = phi %"class.blink::PersistentNode"* [ %60, %58 ], [ %56, %49 ]
  %63 = bitcast %"class.blink::PersistentNode"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentRegion"* %54 to i64*
  store i64 %64, i64* %65, align 8
  %66 = bitcast %"class.blink::PersistentNode"* %62 to %"class.blink::PersistentBase.242"**
  store %"class.blink::PersistentBase.242"* %37, %"class.blink::PersistentBase.242"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %62, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12ModuleScriptELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  store %"class.blink::PersistentNode"* %62, %"class.blink::PersistentNode"** %41, align 8
  br label %68

68:                                               ; preds = %35, %35, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.223"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.221"*, %"class.blink::SingleModuleClient"** dereferenceable(8), %"class.blink::SingleModuleClient"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %4, align 8
  %6 = icmp eq %"class.blink::Member.223"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.223"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.221"* %0, %"class.blink::Member.223"* null)
  %9 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.223"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SingleModuleClient"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SingleModuleClient"*, %"class.blink::SingleModuleClient"** %40, align 8
  %42 = icmp eq %"class.blink::SingleModuleClient"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SingleModuleClient"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SingleModuleClient"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.223"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.223"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::SingleModuleClient"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::SingleModuleClient"* %59, inttoptr (i64 -1 to %"class.blink::SingleModuleClient"*)
  %67 = select i1 %66, %"class.blink::Member.223"* %60, %"class.blink::Member.223"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::SingleModuleClient"*, %"class.blink::SingleModuleClient"** %73, align 8
  %75 = icmp eq %"class.blink::SingleModuleClient"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.223"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.223"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #8
  %80 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.223"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::SingleModuleClient"*, %"class.blink::SingleModuleClient"** %2, align 8
  %89 = ptrtoint %"class.blink::SingleModuleClient"* %88 to i64
  %90 = bitcast %"class.blink::Member.223"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::SingleModuleClient"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #8
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.223"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #8
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.223"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.221"* %0, %"class.blink::Member.223"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.223"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.223"*, i8 } undef, %"class.blink::Member.223"* %117, 0
  %119 = insertvalue { %"class.blink::Member.223"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.223"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.223"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.221"*, %"class.blink::Member.223"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #8
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %23, i8* %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.223"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.221"* %0, i32 %35, %"class.blink::Member.223"* %1, i8* nonnull dereferenceable(1) %4) #8
  %37 = load i8, i8* %4, align 1, !range !16
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #8
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.223"*
  %44 = call %"class.blink::Member.223"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.221"* %0, %"class.blink::Member.223"* %43, i32 %40, %"class.blink::Member.223"* %1) #8
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.223"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.223"* %46
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.223"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.221"*, i32, %"class.blink::Member.223"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !5

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !16
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %31, align 8
  %33 = icmp eq %"class.blink::Member.223"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.223"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #8
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #8
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.223"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.223"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.223"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.223"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.223"* %61, %"class.blink::Member.223"* %55
  %63 = bitcast %"class.blink::Member.223"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.223"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.223"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.221"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #8
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.223"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.223"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.221"* %0, %"class.blink::Member.223"* %42, i32 %1, %"class.blink::Member.223"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.223"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.223"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.223"* %87, %"class.blink::Member.223"* %82
  %89 = bitcast %"class.blink::Member.223"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.223"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.223"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.223"* %99, %"class.blink::Member.223"* %88
  %101 = bitcast %"class.blink::Member.223"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.223"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.223"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.223"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.223"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18SingleModuleClientEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.221"*, %"class.blink::Member.223"*, i32, %"class.blink::Member.223"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.223"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.223"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.223"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #8
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.221"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.223"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #8
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.223"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.223"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #8
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.221", %"class.WTF::HashTable.221"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.223"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.223"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.223"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.223"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.223"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::SingleModuleClient"*, %"class.blink::SingleModuleClient"** %70, align 8
  %72 = icmp eq %"class.blink::SingleModuleClient"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::SingleModuleClient"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.223"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.223"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.223"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.223"* %93, null
  %95 = ptrtoint %"class.blink::Member.223"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::SingleModuleClient"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::SingleModuleClient"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::SingleModuleClient"* %99, inttoptr (i64 -1 to %"class.blink::SingleModuleClient"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.223"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::SingleModuleClient"*, %"class.blink::SingleModuleClient"** %113, align 8
  %115 = icmp eq %"class.blink::SingleModuleClient"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.223"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.223"*, %"class.blink::Member.223"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.223", %"class.blink::Member.223"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.223"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.223"* %118, %"class.blink::Member.223"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.223"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.223"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.8, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([386 x i8], [386 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_18SingleModuleClientEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !5

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_26ModuleScriptLoaderRegistryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_26ModuleScriptLoaderRegistryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_26ModuleScriptLoaderRegistryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_26ModuleScriptLoaderRegistryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26ModuleScriptLoaderRegistryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26ModuleScriptLoaderRegistryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleScriptLoaderRegistry"*
  tail call void @_ZNK5blink26ModuleScriptLoaderRegistry5TraceEPNS_7VisitorE(%"class.blink::ModuleScriptLoaderRegistry"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_26ModuleScriptLoaderRegistryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink26ModuleScriptLoaderRegistry5TraceEPNS_7VisitorE(%"class.blink::ModuleScriptLoaderRegistry"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink4KURLENS5_10ModuleTypeEEENS_12KeyValuePairIS8_NS5_6MemberINS5_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS6_S7_EENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #8
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink4KURLENS5_10ModuleTypeEEENS_12KeyValuePairIS8_NS5_6MemberINS5_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS6_S7_EENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::internal::ConcurrentBucket.628", align 8
  %4 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.203"*
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load i16, i16* %6, align 2
  %8 = lshr i16 %7, 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %18, !prof !5

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i64 -8
  %12 = ptrtoint i8* %11 to i64
  %13 = and i64 %12, -131072
  %14 = inttoptr i64 %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 4144
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 16
  br label %21

18:                                               ; preds = %2
  %19 = zext i16 %8 to i64
  %20 = shl nuw nsw i64 %19, 3
  br label %21

21:                                               ; preds = %10, %18
  %22 = phi i64 [ %17, %10 ], [ %20, %18 ]
  %23 = add i64 %22, -8
  %24 = lshr i64 %23, 7
  %25 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %26 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, i64 3
  %28 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::Visitor"* %0) #8
  %30 = icmp eq i64 %24, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %21
  %32 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.628", %"class.WTF::internal::ConcurrentBucket.628"* %3, i64 0, i32 0, i64 0
  %34 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.628", %"class.WTF::internal::ConcurrentBucket.628"* %3, i64 0, i32 1
  %35 = bitcast %"class.WTF::internal::ConcurrentBucket.628"* %3 to %"struct.std::__1::pair.204"*
  %36 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.628", %"class.WTF::internal::ConcurrentBucket.628"* %3, i64 0, i32 0, i64 120
  %37 = bitcast i8* %36 to i64**
  br label %39

38:                                               ; preds = %70, %21
  ret void

39:                                               ; preds = %70, %31
  %40 = phi i64 [ 0, %31 ], [ %71, %70 ]
  br i1 %29, label %41, label %55

41:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %33) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 120, i1 false)
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %4, i64 %40, i32 1
  store %"class.blink::Member.205"* %42, %"class.blink::Member.205"** %34, align 8
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %4, i64 %40, i32 0, i32 0, i32 0
  call void @_ZN3WTF16AtomicReadMemcpyEPvPKvm(i8* nonnull %33, i8* %43, i64 120) #8
  %44 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.204"* nonnull dereferenceable(120) %35)
  br i1 %44, label %54, label %45

45:                                               ; preds = %41
  %46 = load i64*, i64** %37, align 8
  %47 = load atomic i64, i64* %46 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = inttoptr i64 %47 to i8*
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %52 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, i64 5
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, align 8
  call void %53(%"class.blink::Visitor"* %0, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModuleMap5EntryEE5TraceEPNS_7VisitorEPKv) #8
  br label %54

54:                                               ; preds = %49, %45, %41
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %33) #8
  br label %70

55:                                               ; preds = %39
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %4, i64 %40
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %56, i64 0, i32 0
  %58 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.204"* dereferenceable(120) %57) #8
  br i1 %58, label %70, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %56, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds i8, i8* %60, i64 120
  %62 = bitcast i8* %61 to i64*
  %63 = load atomic i64, i64* %62 monotonic, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = inttoptr i64 %63 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModuleMap5EntryEE5TraceEPNS_7VisitorEPKv) #8
  br label %70

70:                                               ; preds = %65, %59, %54, %55
  %71 = add nuw nsw i64 %40, 1
  %72 = icmp eq i64 %71, %24
  br i1 %72, label %38, label %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.204"* dereferenceable(120)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"struct.std::__1::pair.204", align 8
  %4 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #8, !noalias !23
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %2) #8, !noalias !23
  %6 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %3, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %6, %"class.blink::KURL"* nonnull dereferenceable(112) %2) #8
  %7 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %3, i64 0, i32 1
  store i32 -128, i32* %7, align 8, !alias.scope !26
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #8, !noalias !23
  %8 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %0, i64 0, i32 0
  %9 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %8, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #8
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #8
  br label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i32, i32* %7, align 8
  %15 = icmp eq i32 %13, %14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #8
  br i1 %15, label %21, label %16

16:                                               ; preds = %10, %11
  %17 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %0, i64 0, i32 0, i32 4
  %18 = bitcast %"class.WTF::String"* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, inttoptr (i64 -1 to i8*)
  br label %21

21:                                               ; preds = %16, %11
  %22 = phi i1 [ true, %11 ], [ %20, %16 ]
  ret i1 %22
}

declare void @_ZN3WTF16AtomicReadMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ModuleMap5EntryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 24
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModuleMapEE5TraceEPNS_7VisitorEPKv) #8
  br label %24

24:                                               ; preds = %18, %13
  %25 = getelementptr inbounds i8, i8* %1, i64 40
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = bitcast i8* %25 to i8**
  %29 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %30 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %30, i64 11
  %32 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %0, i8** %28) #8
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %24
  %35 = inttoptr i64 %27 to i8*
  %36 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %0, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18SingleModuleClientEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %40

40:                                               ; preds = %24, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Modulator"*
  %4 = bitcast i8* %1 to void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)**, void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)*, void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Modulator"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.203"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EES6_DnEENS_18HashTableAddResultISM_SC_EEOT0_OT1_(%"class.WTF::HashTable.201"*, %"struct.std::__1::pair.204"* dereferenceable(120), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"struct.std::__1::pair.204", align 8
  %6 = alloca %"struct.WTF::KeyValuePair.203", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = alloca %"struct.std::__1::pair.204", align 8
  %9 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %9, align 8
  %11 = icmp eq %"struct.WTF::KeyValuePair.203"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = tail call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.201"* %0, %"struct.WTF::KeyValuePair.203"* null)
  %14 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %9, align 8
  br label %15

15:                                               ; preds = %3, %12
  %16 = phi %"struct.WTF::KeyValuePair.203"* [ %10, %3 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = lshr i32 %24, 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %15
  %28 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %22) #8
  br label %29

29:                                               ; preds = %15, %27
  %30 = phi i32 [ %28, %27 ], [ %25, %15 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %1, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = shl i32 %32, 15
  %34 = xor i32 %33, -1
  %35 = add i32 %32, %34
  %36 = lshr i32 %35, 10
  %37 = xor i32 %36, %35
  %38 = mul i32 %37, 9
  %39 = lshr i32 %38, 6
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 11
  %42 = xor i32 %41, -1
  %43 = add i32 %40, %42
  %44 = lshr i32 %43, 16
  %45 = xor i32 %44, %43
  %46 = zext i32 %30 to i64
  %47 = mul i64 %46, 5146158508761418231
  %48 = zext i32 %45 to i64
  %49 = mul i64 %48, -682818954288075998
  %50 = add i64 %49, %47
  %51 = lshr i64 %50, 32
  %52 = trunc i64 %51 to i32
  %53 = and i32 %19, %52
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %8, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %8, i64 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %8, i64 0, i32 1
  %59 = xor i32 %52, -1
  %60 = lshr i64 %50, 55
  %61 = trunc i64 %60 to i32
  %62 = add i32 %61, %59
  %63 = shl i32 %62, 12
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 7
  %66 = xor i32 %65, %64
  %67 = shl i32 %66, 2
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 20
  %70 = xor i32 %69, %68
  %71 = or i32 %70, 1
  %72 = zext i32 %71 to i64
  br label %73

73:                                               ; preds = %100, %29
  %74 = phi i64 [ 0, %29 ], [ %103, %100 ]
  %75 = phi i64 [ %54, %29 ], [ %105, %100 ]
  %76 = phi %"struct.WTF::KeyValuePair.203"* [ null, %29 ], [ %101, %100 ]
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %16, i64 %75
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %55) #8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %56) #8, !noalias !29
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %7) #8, !noalias !29
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %57, %"class.blink::KURL"* nonnull dereferenceable(112) %7) #8
  store i32 -128, i32* %58, align 8, !alias.scope !32
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %56) #8, !noalias !29
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %77, i64 0, i32 0, i32 0
  %79 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %78, %"class.blink::KURL"* nonnull dereferenceable(112) %57) #8
  br i1 %79, label %81, label %80

80:                                               ; preds = %73
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %55) #8
  br label %86

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %16, i64 %75, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = load i32, i32* %58, align 8
  %85 = icmp eq i32 %83, %84
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %55) #8
  br i1 %85, label %106, label %86

86:                                               ; preds = %80, %81
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %16, i64 %75, i32 0, i32 0, i32 4
  %88 = bitcast %"class.WTF::String"* %87 to i8**
  %89 = load i8*, i8** %88, align 8
  %90 = icmp eq i8* %89, inttoptr (i64 -1 to i8*)
  br i1 %90, label %100, label %91

91:                                               ; preds = %86
  %92 = bitcast i8* %89 to %"class.WTF::StringImpl"*
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %94 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"* %93) #8
  br i1 %94, label %95, label %100

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %16, i64 %75, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = load i32, i32* %31, align 8
  %99 = icmp eq i32 %97, %98
  br i1 %99, label %186, label %100

100:                                              ; preds = %86, %91, %95
  %101 = phi %"struct.WTF::KeyValuePair.203"* [ %76, %95 ], [ %77, %86 ], [ %76, %91 ]
  %102 = icmp eq i64 %74, 0
  %103 = select i1 %102, i64 %72, i64 %74
  %104 = add i64 %103, %75
  %105 = and i64 %104, %20
  br label %73

106:                                              ; preds = %81
  %107 = icmp eq %"struct.WTF::KeyValuePair.203"* %76, null
  br i1 %107, label %127, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %76, i64 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %110) #8
  %111 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %111) #8, !noalias !35
  %112 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %112) #8, !noalias !38
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #8, !noalias !38
  %113 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %5, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %113, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #8, !noalias !35
  %114 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %5, i64 0, i32 1
  store i32 -128, i32* %114, align 8, !alias.scope !41, !noalias !35
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #8, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %112) #8, !noalias !38
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 0, i32 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %115, %"class.blink::KURL"* nonnull dereferenceable(112) %113) #8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 0, i32 0, i32 1
  %117 = load i32, i32* %114, align 8, !noalias !35
  store i32 %117, i32* %116, align 8, !alias.scope !35
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 0, i32 1
  %119 = bitcast %"class.blink::Member.205"* %118 to i64*
  store i64 0, i64* %119, align 8, !alias.scope !35
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %113) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %111) #8, !noalias !35
  %120 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISB_EEEENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJSC_EEEPSC_PvDpOT_(i8* %109, %"struct.WTF::KeyValuePair.203"* nonnull dereferenceable(128) %6) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %115) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %110) #8
  %121 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, 2147483647
  %124 = and i32 %123, 2147483647
  %125 = and i32 %122, -2147483648
  %126 = or i32 %124, %125
  store i32 %126, i32* %121, align 8
  br label %127

127:                                              ; preds = %106, %108
  %128 = phi %"struct.WTF::KeyValuePair.203"* [ %76, %108 ], [ %77, %106 ]
  %129 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %1, i64 0, i32 0
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %128, i64 0, i32 0, i32 0
  %131 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %130, %"class.blink::KURL"* dereferenceable(112) %129) #8
  %132 = load i32, i32* %31, align 4
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %128, i64 0, i32 0, i32 1
  store i32 %132, i32* %133, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %128, i64 0, i32 1
  %135 = bitcast %"class.blink::Member.205"* %134 to i64*
  store atomic i64 0, i64* %135 monotonic, align 8
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %128, i64 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %174, label %139

139:                                              ; preds = %127
  %140 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %141 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %140, i64 0, i32 1
  %142 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %141) #8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %144, label %146, !prof !5

144:                                              ; preds = %139
  %145 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %141, i8* %145) #8
  br label %146

146:                                              ; preds = %144, %139
  %147 = phi i8* [ %145, %144 ], [ %142, %139 ]
  %148 = bitcast i8* %147 to %"class.blink::ThreadState"**
  %149 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %149, i64 0, i32 9
  %151 = load i8, i8* %150, align 1, !range !16
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %174, label %153

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %149, i64 0, i32 13
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %154, align 8
  %157 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %149, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %158 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %157, align 8
  %159 = getelementptr inbounds i8, i8* %136, i64 120
  %160 = bitcast i8* %159 to i64*
  %161 = load atomic i64, i64* %160 monotonic, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %153
  %164 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %158, i64 0, i32 0, i32 0
  %165 = inttoptr i64 %161 to i8*
  %166 = bitcast %"class.blink::MarkingVisitor"* %158 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %167 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %167, i64 5
  %169 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %168, align 8
  call void %169(%"class.blink::Visitor"* %164, i8* nonnull %165, i8* %165, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModuleMap5EntryEE5TraceEPNS_7VisitorEPKv) #8
  %170 = load i64, i64* %154, align 8
  br label %171

171:                                              ; preds = %163, %153
  %172 = phi i64 [ %156, %153 ], [ %170, %163 ]
  %173 = add i64 %172, -1
  store i64 %173, i64* %154, align 8
  br label %174

174:                                              ; preds = %127, %146, %171
  %175 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 3
  %179 = load i32, i32* %178, align 8
  %180 = add i32 %179, %177
  %181 = shl i32 %180, 1
  %182 = load i32, i32* %17, align 8
  %183 = icmp ult i32 %181, %182
  br i1 %183, label %186, label %184

184:                                              ; preds = %174
  %185 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.201"* %0, %"struct.WTF::KeyValuePair.203"* %128)
  br label %186

186:                                              ; preds = %95, %174, %184
  %187 = phi i8 [ 1, %174 ], [ 1, %184 ], [ 0, %95 ]
  %188 = phi %"struct.WTF::KeyValuePair.203"* [ %128, %174 ], [ %185, %184 ], [ %77, %95 ]
  %189 = insertvalue { %"struct.WTF::KeyValuePair.203"*, i8 } undef, %"struct.WTF::KeyValuePair.203"* %188, 0
  %190 = insertvalue { %"struct.WTF::KeyValuePair.203"*, i8 } %189, i8 %187, 1
  ret { %"struct.WTF::KeyValuePair.203"*, i8 } %190
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.201"*, %"struct.WTF::KeyValuePair.203"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #8
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %23, i8* %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE12ExpandBufferEjPSC_Rb(%"class.WTF::HashTable.201"* %0, i32 %35, %"struct.WTF::KeyValuePair.203"* %1, i8* nonnull dereferenceable(1) %4) #8
  %37 = load i8, i8* %4, align 1, !range !16
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %38, label %39, label %43

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE13AllocateTableEj(i32 %40) #8
  %42 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE8RehashToEPSC_jSN_(%"class.WTF::HashTable.201"* %0, %"struct.WTF::KeyValuePair.203"* %41, i32 %40, %"struct.WTF::KeyValuePair.203"* %1) #8
  br label %43

43:                                               ; preds = %34, %39
  %44 = phi %"struct.WTF::KeyValuePair.203"* [ %42, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.203"* %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE12ExpandBufferEjPSC_Rb(%"class.WTF::HashTable.201"*, i32, %"struct.WTF::KeyValuePair.203"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"struct.std::__1::pair.204", align 8
  %7 = alloca %"struct.WTF::KeyValuePair.203", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"struct.std::__1::pair.204", align 8
  %10 = alloca %"struct.WTF::KeyValuePair.203", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !5

16:                                               ; preds = %4
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #8
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi i8* [ %17, %16 ], [ %14, %4 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 6
  %23 = load i8, i8* %22, align 8, !range !16
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 16
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %33, label %29

29:                                               ; preds = %18, %25
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 13
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %25, %29
  %34 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %36

36:                                               ; preds = %29, %33
  %37 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 0
  %38 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %37, align 8
  %39 = icmp eq %"struct.WTF::KeyValuePair.203"* %38, null
  br i1 %39, label %112, label %40

40:                                               ; preds = %36
  %41 = zext i32 %1 to i64
  %42 = shl nuw nsw i64 %41, 7
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %38, i64 0, i32 0, i32 0, i32 0
  %44 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* %43, i64 %42) #8
  br i1 %44, label %45, label %112

45:                                               ; preds = %40
  store i8 1, i8* %3, align 1
  %46 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %37, align 8
  %49 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE13AllocateTableEj(i32 %47)
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %10, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %9, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %9, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %9, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %10, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %10, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %10, i64 0, i32 1
  %60 = bitcast %"class.blink::Member.205"* %59 to i64*
  %61 = zext i32 %47 to i64
  br label %81

62:                                               ; preds = %100, %45
  %63 = phi %"struct.WTF::KeyValuePair.203"* [ null, %45 ], [ %88, %100 ]
  store %"struct.WTF::KeyValuePair.203"* %49, %"struct.WTF::KeyValuePair.203"** %37, align 8
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %49, i64 0, i32 0, i32 0, i32 0
  %68 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #8
  br label %69

69:                                               ; preds = %62, %66
  %70 = icmp eq i32 %1, 0
  br i1 %70, label %103, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %7, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %6, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %6, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %6, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %7, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %7, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %7, i64 0, i32 1
  %80 = bitcast %"class.blink::Member.205"* %79 to i64*
  br label %105

81:                                               ; preds = %100, %51
  %82 = phi i64 [ 0, %51 ], [ %101, %100 ]
  %83 = phi %"struct.WTF::KeyValuePair.203"* [ null, %51 ], [ %88, %100 ]
  %84 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %37, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %84, i64 %82
  %86 = icmp eq %"struct.WTF::KeyValuePair.203"* %85, %2
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %49, i64 %82
  %88 = select i1 %86, %"struct.WTF::KeyValuePair.203"* %87, %"struct.WTF::KeyValuePair.203"* %83
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %85, i64 0, i32 0
  %90 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.204"* dereferenceable(120) %89) #8
  br i1 %90, label %91, label %95

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %87, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %52) #8
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %53) #8, !noalias !44
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %54) #8, !noalias !47
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %8) #8, !noalias !47
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %55, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #8, !noalias !44
  store i32 -128, i32* %56, align 8, !alias.scope !50, !noalias !44
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #8, !noalias !44
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %54) #8, !noalias !47
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %57, %"class.blink::KURL"* nonnull dereferenceable(112) %55) #8
  %93 = load i32, i32* %56, align 8, !noalias !44
  store i32 %93, i32* %58, align 8, !alias.scope !44
  store i64 0, i64* %60, align 8, !alias.scope !44
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %55) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %53) #8, !noalias !44
  %94 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISB_EEEENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJSC_EEEPSC_PvDpOT_(i8* %92, %"struct.WTF::KeyValuePair.203"* nonnull dereferenceable(128) %10) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %52) #8
  br label %100

95:                                               ; preds = %81
  %96 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %37, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %96, i64 %82
  call void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSF_ISB_EEEELb1EE4MoveEOSC_RSC_(%"struct.WTF::KeyValuePair.203"* dereferenceable(128) %97, %"struct.WTF::KeyValuePair.203"* dereferenceable(128) %87)
  %98 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %37, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %98, i64 %82, i32 0, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %99) #8
  br label %100

100:                                              ; preds = %91, %95
  %101 = add nuw nsw i64 %82, 1
  %102 = icmp eq i64 %101, %61
  br i1 %102, label %62, label %81

103:                                              ; preds = %105, %69
  %104 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE8RehashToEPSC_jSN_(%"class.WTF::HashTable.201"* %0, %"struct.WTF::KeyValuePair.203"* %48, i32 %1, %"struct.WTF::KeyValuePair.203"* %63)
  br label %112

105:                                              ; preds = %105, %71
  %106 = phi i64 [ 0, %71 ], [ %110, %105 ]
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %48, i64 %106, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %72) #8
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %73) #8, !noalias !53
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %74) #8, !noalias !56
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %5) #8, !noalias !56
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %75, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #8, !noalias !53
  store i32 -128, i32* %76, align 8, !alias.scope !59, !noalias !53
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #8, !noalias !53
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %74) #8, !noalias !56
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %77, %"class.blink::KURL"* nonnull dereferenceable(112) %75) #8
  %108 = load i32, i32* %76, align 8, !noalias !53
  store i32 %108, i32* %78, align 8, !alias.scope !53
  store i64 0, i64* %80, align 8, !alias.scope !53
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %73) #8, !noalias !53
  %109 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISB_EEEENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJSC_EEEPSC_PvDpOT_(i8* %107, %"struct.WTF::KeyValuePair.203"* nonnull dereferenceable(128) %7) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %77) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %72) #8
  %110 = add nuw nsw i64 %106, 1
  %111 = icmp eq i64 %110, %41
  br i1 %111, label %103, label %105

112:                                              ; preds = %40, %36, %103
  %113 = phi %"struct.WTF::KeyValuePair.203"* [ %104, %103 ], [ null, %36 ], [ null, %40 ]
  ret %"struct.WTF::KeyValuePair.203"* %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE13AllocateTableEj(i32) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"struct.std::__1::pair.204", align 8
  %4 = alloca %"struct.WTF::KeyValuePair.203", align 8
  %5 = zext i32 %0 to i64
  %6 = tail call %"class.blink::HeapHashTableBacking.623"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE4CallEm(i64 %5) #8
  %7 = bitcast %"class.blink::HeapHashTableBacking.623"* %6 to %"struct.WTF::KeyValuePair.203"*
  %8 = icmp eq i32 %0, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %4, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %4, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %4, i64 0, i32 1
  %18 = bitcast %"class.blink::Member.205"* %17 to i64*
  br label %20

19:                                               ; preds = %20, %1
  ret %"struct.WTF::KeyValuePair.203"* %7

20:                                               ; preds = %20, %9
  %21 = phi i64 [ 0, %9 ], [ %25, %20 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %7, i64 %21, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %11) #8, !noalias !62
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #8, !noalias !65
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %2) #8, !noalias !65
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %13, %"class.blink::KURL"* nonnull dereferenceable(112) %2) #8, !noalias !62
  store i32 -128, i32* %14, align 8, !alias.scope !68, !noalias !62
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #8, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #8, !noalias !65
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %15, %"class.blink::KURL"* nonnull dereferenceable(112) %13) #8
  %23 = load i32, i32* %14, align 8, !noalias !62
  store i32 %23, i32* %16, align 8, !alias.scope !62
  store i64 0, i64* %18, align 8, !alias.scope !62
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %11) #8, !noalias !62
  %24 = call %"struct.WTF::KeyValuePair.203"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISB_EEEENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJSC_EEEPSC_PvDpOT_(i8* %22, %"struct.WTF::KeyValuePair.203"* nonnull dereferenceable(128) %4) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #8
  %25 = add nuw nsw i64 %21, 1
  %26 = icmp eq i64 %25, %5
  br i1 %26, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.203"* @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE8RehashToEPSC_jSN_(%"class.WTF::HashTable.201"*, %"struct.WTF::KeyValuePair.203"*, i32, %"struct.WTF::KeyValuePair.203"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.201", align 8
  %6 = bitcast %"class.WTF::HashTable.201"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.201"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.203"* %1, %"struct.WTF::KeyValuePair.203"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.203"* %1 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %1, i64 0, i32 0, i32 0, i32 0
  br label %24

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 0
  br label %76

20:                                               ; preds = %93
  %21 = bitcast %"class.WTF::HashTable.201"* %5 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = ptrtoint i8* %22 to i64
  br label %24

24:                                               ; preds = %15, %20
  %25 = phi i64 [ %16, %15 ], [ %23, %20 ]
  %26 = phi i32 [ 0, %15 ], [ %95, %20 ]
  %27 = phi i8* [ %17, %15 ], [ %22, %20 ]
  %28 = phi %"struct.WTF::KeyValuePair.203"* [ null, %15 ], [ %94, %20 ]
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.WTF::HashTable.201"* %5 to i64*
  br label %37

33:                                               ; preds = %24
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %27) #8
  %34 = load i32, i32* %12, align 8
  %35 = bitcast %"class.WTF::HashTable.201"* %5 to i64*
  %36 = load i64, i64* %35, align 8
  br label %37

37:                                               ; preds = %31, %33
  %38 = phi i64* [ %32, %31 ], [ %35, %33 ]
  %39 = phi i64 [ %25, %31 ], [ %36, %33 ]
  %40 = phi i32 [ %26, %31 ], [ %34, %33 ]
  %41 = bitcast %"class.WTF::HashTable.201"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  store atomic i64 %39, i64* %41 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %37
  %46 = inttoptr i64 %39 to i8*
  %47 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #8
  br label %48

48:                                               ; preds = %37, %45
  store i32 %2, i32* %12, align 8
  store i64 %42, i64* %38, align 8
  store i32 %40, i32* %8, align 8
  %49 = inttoptr i64 %42 to %"struct.WTF::KeyValuePair.203"*
  %50 = icmp eq i64 %42, 0
  br i1 %50, label %72, label %51

51:                                               ; preds = %48
  %52 = icmp eq i32 %40, 0
  br i1 %52, label %70, label %53

53:                                               ; preds = %51
  %54 = zext i32 %40 to i64
  br label %55

55:                                               ; preds = %67, %53
  %56 = phi i64 [ 0, %53 ], [ %68, %67 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %49, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %57, i64 0, i32 0
  %59 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.204"* dereferenceable(120) %58) #8
  br i1 %59, label %67, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %57, i64 0, i32 0, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %61) #8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %49, i64 %56, i32 0, i32 0, i32 4
  %63 = bitcast %"class.WTF::String"* %62 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %63, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %49, i64 %56, i32 0, i32 1
  store i32 0, i32* %64, align 1
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %49, i64 %56, i32 1
  %66 = bitcast %"class.blink::Member.205"* %65 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  br label %67

67:                                               ; preds = %60, %55
  %68 = add nuw nsw i64 %56, 1
  %69 = icmp eq i64 %68, %54
  br i1 %69, label %70, label %55

70:                                               ; preds = %67, %51
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %49, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %71) #8
  store atomic i64 0, i64* %38 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %72

72:                                               ; preds = %48, %70
  %73 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, -2147483648
  store i32 %75, i32* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair.203"* %28

76:                                               ; preds = %18, %93
  %77 = phi %"struct.WTF::KeyValuePair.203"* [ null, %18 ], [ %94, %93 ]
  %78 = phi i32 [ 0, %18 ], [ %95, %93 ]
  %79 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %19, align 8
  %80 = zext i32 %78 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %79, i64 %80, i32 0
  %82 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.204"* dereferenceable(120) %81) #8
  br i1 %82, label %93, label %83

83:                                               ; preds = %76
  %84 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %19, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %84, i64 %80
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %85, i64 0, i32 0
  %87 = call { %"struct.WTF::KeyValuePair.203"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISF_SK_SL_EES6_EENS2_IPSC_bEERKT0_(%"class.WTF::HashTable.201"* nonnull %5, %"struct.std::__1::pair.204"* dereferenceable(120) %86) #8
  %88 = extractvalue { %"struct.WTF::KeyValuePair.203"*, i8 } %87, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSF_ISB_EEEELb1EE4MoveEOSC_RSC_(%"struct.WTF::KeyValuePair.203"* dereferenceable(128) %85, %"struct.WTF::KeyValuePair.203"* dereferenceable(128) %88) #8
  %89 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %19, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %89, i64 %80
  %91 = icmp eq %"struct.WTF::KeyValuePair.203"* %90, %3
  %92 = select i1 %91, %"struct.WTF::KeyValuePair.203"* %88, %"struct.WTF::KeyValuePair.203"* %77
  br label %93

93:                                               ; preds = %76, %83
  %94 = phi %"struct.WTF::KeyValuePair.203"* [ %77, %76 ], [ %92, %83 ]
  %95 = add i32 %78, 1
  %96 = load i32, i32* %12, align 8
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %20, label %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSF_ISB_EEEELb1EE4MoveEOSC_RSC_(%"struct.WTF::KeyValuePair.203"* dereferenceable(128), %"struct.WTF::KeyValuePair.203"* dereferenceable(128)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !5

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %16) #8
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %16, %"class.blink::KURL"* dereferenceable(112) %17) #8
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %1, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %0, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %1, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %0, i64 0, i32 1
  %23 = bitcast %"class.blink::Member.205"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::Member.205"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !5

30:                                               ; preds = %9
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #8
  br label %32

32:                                               ; preds = %9, %30
  %33 = phi i8* [ %31, %30 ], [ %28, %9 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 14
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %36, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.203"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISB_EEEENS4_13HeapAllocatorEE25ConstructAndNotifyElementIJSC_EEEPSC_PvDpOT_(i8*, %"struct.WTF::KeyValuePair.203"* dereferenceable(128)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.203"*
  %4 = bitcast i8* %0 to %"class.blink::KURL"*
  %5 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %4, %"class.blink::KURL"* dereferenceable(112) %5) #8
  %6 = getelementptr inbounds i8, i8* %0, i64 112
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 120
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %1, i64 0, i32 1
  %12 = bitcast %"class.blink::Member.205"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast i8* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %2
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !5

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #8
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 9
  %29 = load i8, i8* %28, align 1, !range !16
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %50, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 13
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %35, align 8
  %37 = load atomic i64, i64* %14 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %36, i64 0, i32 0, i32 0
  %41 = inttoptr i64 %37 to i8*
  %42 = bitcast %"class.blink::MarkingVisitor"* %36 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %40, i8* nonnull %41, i8* %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModuleMap5EntryEE5TraceEPNS_7VisitorEPKv) #8
  %46 = load i64, i64* %32, align 8
  br label %47

47:                                               ; preds = %39, %31
  %48 = phi i64 [ %34, %31 ], [ %46, %39 ]
  %49 = add i64 %48, -1
  store i64 %49, i64* %32, align 8
  br label %50

50:                                               ; preds = %2, %24, %47
  ret %"struct.WTF::KeyValuePair.203"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.623"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.8, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 7
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS1_12KeyValuePairIS7_NS_6MemberINS_9ModuleMap5EntryEEEEENS1_24KeyValuePairKeyExtractorENS1_8PairHashIS5_S6_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEE14AllocateObjectISO_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.623"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.623"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS1_12KeyValuePairIS7_NS_6MemberINS_9ModuleMap5EntryEEEEENS1_24KeyValuePairKeyExtractorENS1_8PairHashIS5_S6_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEE14AllocateObjectISO_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([564 x i8], [564 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINSt3__14pairINS1_4KURLENS1_10ModuleTypeEEENS_12KeyValuePairIS8_NS1_6MemberINS1_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS6_S7_EENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS3_12KeyValuePairIS9_NS_6MemberINS_9ModuleMap5EntryEEEEENS3_24KeyValuePairKeyExtractorENS3_8PairHashIS7_S8_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSK_ISE_EEEESL_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !5

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 7
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.203"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %18, %32
  %25 = phi i64 [ %34, %32 ], [ 0, %18 ]
  %26 = phi i32 [ %33, %32 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %22, i64 %25
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %27, i64 0, i32 0
  %29 = tail call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEENS4_6MemberINS4_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS7_EEE28IsEmptyOrDeletedBucketForKeyERKS7_(%"struct.std::__1::pair.204"* dereferenceable(120) %28) #8
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %27, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %31) #8
  br label %32

32:                                               ; preds = %30, %24
  %33 = add i32 %26, 1
  %34 = zext i32 %33 to i64
  %35 = icmp ugt i64 %21, %34
  br i1 %35, label %24, label %36

36:                                               ; preds = %32, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_4KURLENS_10ModuleTypeEEENS2_12KeyValuePairIS8_NS_6MemberINS_9ModuleMap5EntryEEEEENS2_24KeyValuePairKeyExtractorENS2_8PairHashIS6_S7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.203"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISF_SK_SL_EES6_EENS2_IPSC_bEERKT0_(%"class.WTF::HashTable.201"*, %"struct.std::__1::pair.204"* dereferenceable(120)) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"struct.std::__1::pair.204", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #8
  br label %19

19:                                               ; preds = %2, %17
  %20 = phi i32 [ %18, %17 ], [ %15, %2 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = shl i32 %22, 15
  %24 = xor i32 %23, -1
  %25 = add i32 %22, %24
  %26 = lshr i32 %25, 10
  %27 = xor i32 %26, %25
  %28 = mul i32 %27, 9
  %29 = lshr i32 %28, 6
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 11
  %32 = xor i32 %31, -1
  %33 = add i32 %30, %32
  %34 = lshr i32 %33, 16
  %35 = xor i32 %34, %33
  %36 = zext i32 %20 to i64
  %37 = mul i64 %36, 5146158508761418231
  %38 = zext i32 %35 to i64
  %39 = mul i64 %38, -682818954288075998
  %40 = add i64 %39, %37
  %41 = lshr i64 %40, 32
  %42 = trunc i64 %41 to i32
  %43 = and i32 %9, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %4, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %4, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %4, i64 0, i32 1
  %49 = xor i32 %42, -1
  %50 = lshr i64 %40, 55
  %51 = trunc i64 %50 to i32
  %52 = add i32 %51, %49
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %63

63:                                               ; preds = %93, %19
  %64 = phi %"struct.WTF::KeyValuePair.203"* [ null, %19 ], [ %94, %93 ]
  %65 = phi i64 [ 0, %19 ], [ %96, %93 ]
  %66 = phi i64 [ %44, %19 ], [ %98, %93 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 %66
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %45) #8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %46) #8, !noalias !71
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #8, !noalias !71
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %47, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #8
  store i32 -128, i32* %48, align 8, !alias.scope !74
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %46) #8, !noalias !71
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %67, i64 0, i32 0, i32 0
  %69 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %68, %"class.blink::KURL"* nonnull dereferenceable(112) %47) #8
  br i1 %69, label %71, label %70

70:                                               ; preds = %63
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %45) #8
  br label %79

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 %66, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = load i32, i32* %48, align 8
  %75 = icmp eq i32 %73, %74
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %45) #8
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = icmp eq %"struct.WTF::KeyValuePair.203"* %64, null
  %78 = select i1 %77, %"struct.WTF::KeyValuePair.203"* %67, %"struct.WTF::KeyValuePair.203"* %64
  br label %99

79:                                               ; preds = %70, %71
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 %66, i32 0, i32 0, i32 4
  %81 = bitcast %"class.WTF::String"* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, inttoptr (i64 -1 to i8*)
  br i1 %83, label %93, label %84

84:                                               ; preds = %79
  %85 = bitcast i8* %82 to %"class.WTF::StringImpl"*
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %87 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"* %86) #8
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 %66, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = load i32, i32* %21, align 8
  %92 = icmp eq i32 %90, %91
  br i1 %92, label %99, label %93

93:                                               ; preds = %79, %84, %88
  %94 = phi %"struct.WTF::KeyValuePair.203"* [ %64, %84 ], [ %64, %88 ], [ %67, %79 ]
  %95 = icmp eq i64 %65, 0
  %96 = select i1 %95, i64 %62, i64 %65
  %97 = add i64 %96, %66
  %98 = and i64 %97, %10
  br label %63

99:                                               ; preds = %88, %76
  %100 = phi %"struct.WTF::KeyValuePair.203"* [ %78, %76 ], [ %67, %88 ]
  %101 = phi i8 [ 0, %76 ], [ 1, %88 ]
  %102 = insertvalue { %"struct.WTF::KeyValuePair.203"*, i8 } undef, %"struct.WTF::KeyValuePair.203"* %100, 0
  %103 = insertvalue { %"struct.WTF::KeyValuePair.203"*, i8 } %102, i8 %101, 1
  ret { %"struct.WTF::KeyValuePair.203"*, i8 } %103
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_9ModuleMap5EntryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_9ModuleMap5EntryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_9ModuleMap5EntryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_9ModuleMap5EntryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9ModuleMap5EntryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_9ModuleMap5EntryEE8FinalizeEPv(i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_9ModuleMap5EntryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.203"* @_ZNK3WTF9HashTableINSt3__14pairIN5blink4KURLENS3_10ModuleTypeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_9ModuleMap5EntryEEEEENS_24KeyValuePairKeyExtractorENS_8PairHashIS4_S5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISF_SK_SL_EES6_EEPKSC_RKT0_(%"class.WTF::HashTable.201"*, %"struct.std::__1::pair.204"* dereferenceable(120)) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"struct.std::__1::pair.204", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.203"*, %"struct.WTF::KeyValuePair.203"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.203"* %6, null
  br i1 %7, label %96, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable.201", %"class.WTF::HashTable.201"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = lshr i32 %16, 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %8
  %20 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %14) #8
  br label %21

21:                                               ; preds = %8, %19
  %22 = phi i32 [ %20, %19 ], [ %17, %8 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = shl i32 %24, 15
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 10
  %29 = xor i32 %28, %27
  %30 = mul i32 %29, 9
  %31 = lshr i32 %30, 6
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 11
  %34 = xor i32 %33, -1
  %35 = add i32 %32, %34
  %36 = lshr i32 %35, 16
  %37 = xor i32 %36, %35
  %38 = zext i32 %22 to i64
  %39 = mul i64 %38, 5146158508761418231
  %40 = zext i32 %37 to i64
  %41 = mul i64 %40, -682818954288075998
  %42 = add i64 %41, %39
  %43 = lshr i64 %42, 32
  %44 = trunc i64 %43 to i32
  %45 = and i32 %11, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %4, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %4, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair.204", %"struct.std::__1::pair.204"* %4, i64 0, i32 1
  %51 = xor i32 %44, -1
  %52 = lshr i64 %42, 55
  %53 = trunc i64 %52 to i32
  %54 = add i32 %53, %51
  %55 = shl i32 %54, 12
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 7
  %58 = xor i32 %57, %56
  %59 = shl i32 %58, 2
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 20
  %62 = xor i32 %61, %60
  %63 = or i32 %62, 1
  %64 = zext i32 %63 to i64
  br label %65

65:                                               ; preds = %91, %21
  %66 = phi i64 [ 0, %21 ], [ %93, %91 ]
  %67 = phi i64 [ %46, %21 ], [ %95, %91 ]
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 %67
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %47) #8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %48) #8, !noalias !77
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #8, !noalias !77
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %49, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #8
  store i32 -128, i32* %50, align 8, !alias.scope !80
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %48) #8, !noalias !77
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %68, i64 0, i32 0, i32 0
  %70 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %69, %"class.blink::KURL"* nonnull dereferenceable(112) %49) #8
  br i1 %70, label %72, label %71

71:                                               ; preds = %65
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %47) #8
  br label %77

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 %67, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = load i32, i32* %50, align 8
  %76 = icmp eq i32 %74, %75
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %47) #8
  br i1 %76, label %96, label %77

77:                                               ; preds = %71, %72
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 %67, i32 0, i32 0, i32 4
  %79 = bitcast %"class.WTF::String"* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, inttoptr (i64 -1 to i8*)
  br i1 %81, label %91, label %82

82:                                               ; preds = %77
  %83 = bitcast i8* %80 to %"class.WTF::StringImpl"*
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %85 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"* %84) #8
  br i1 %85, label %86, label %91

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.203", %"struct.WTF::KeyValuePair.203"* %6, i64 %67, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = load i32, i32* %23, align 8
  %90 = icmp eq i32 %88, %89
  br i1 %90, label %96, label %91

91:                                               ; preds = %82, %77, %86
  %92 = icmp eq i64 %66, 0
  %93 = select i1 %92, i64 %64, i64 %66
  %94 = add i64 %93, %67
  %95 = and i64 %94, %12
  br label %65

96:                                               ; preds = %86, %72, %2
  %97 = phi %"struct.WTF::KeyValuePair.203"* [ null, %2 ], [ null, %72 ], [ %68, %86 ]
  ret %"struct.WTF::KeyValuePair.203"* %97
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink22WrapPersistentInternalINS_18SingleModuleClientEEENS_10PersistentIT_EEPS3_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink22WrapPersistentInternalINS_18SingleModuleClientEEENS_10PersistentIT_EEPS3_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink22WrapPersistentInternalINS_12ModuleScriptEEENS_10PersistentIT_EEPS3_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink22WrapPersistentInternalINS_12ModuleScriptEEENS_10PersistentIT_EEPS3_"}
!9 = !{!10, !12, !14}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENS9_IS5_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18SingleModuleClientEFvPNS3_12ModuleScriptEEJNS3_10PersistentIS4_EENS9_IS5_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIMN5blink18SingleModuleClientEFvPNS1_12ModuleScriptEEJNS1_10PersistentIS2_EENS7_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIMN5blink18SingleModuleClientEFvPNS1_12ModuleScriptEEJNS1_10PersistentIS2_EENS7_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!14 = distinct !{!14, !15, !"_ZN3WTF4BindIMN5blink18SingleModuleClientEFvPNS1_12ModuleScriptEEJNS1_10PersistentIS2_EENS7_IS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF4BindIMN5blink18SingleModuleClientEFvPNS1_12ModuleScriptEEJNS1_10PersistentIS2_EENS7_IS3_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!16 = !{i8 0, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__19make_pairIRKN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__19make_pairIRKN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__19make_pairIRKN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__19make_pairIRKN5blink4KURLERNS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!26 = !{!27, !24}
!27 = distinct !{!27, !28, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS4_6MemberINS4_9ModuleMap5EntryEEEEEE10EmptyValueEv: argument 0"}
!37 = distinct !{!37, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS4_6MemberINS4_9ModuleMap5EntryEEEEEE10EmptyValueEv"}
!38 = !{!39, !36}
!39 = distinct !{!39, !40, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!41 = !{!42, !39}
!42 = distinct !{!42, !43, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS4_6MemberINS4_9ModuleMap5EntryEEEEEE10EmptyValueEv: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS4_6MemberINS4_9ModuleMap5EntryEEEEEE10EmptyValueEv"}
!47 = !{!48, !45}
!48 = distinct !{!48, !49, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!49 = distinct !{!49, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!50 = !{!51, !48}
!51 = distinct !{!51, !52, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS4_6MemberINS4_9ModuleMap5EntryEEEEEE10EmptyValueEv: argument 0"}
!55 = distinct !{!55, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS4_6MemberINS4_9ModuleMap5EntryEEEEEE10EmptyValueEv"}
!56 = !{!57, !54}
!57 = distinct !{!57, !58, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!58 = distinct !{!58, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!59 = !{!60, !57}
!60 = distinct !{!60, !61, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS4_6MemberINS4_9ModuleMap5EntryEEEEEE10EmptyValueEv: argument 0"}
!64 = distinct !{!64, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink4KURLENS4_10ModuleTypeEEEEENS1_INS4_6MemberINS4_9ModuleMap5EntryEEEEEE10EmptyValueEv"}
!65 = !{!66, !63}
!66 = distinct !{!66, !67, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!67 = distinct !{!67, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!68 = !{!69, !66}
!69 = distinct !{!69, !70, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!73 = distinct !{!73, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!74 = !{!75, !72}
!75 = distinct !{!75, !76, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!76 = distinct !{!76, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv: argument 0"}
!79 = distinct !{!79, !"_ZN3WTF14PairHashTraitsINS_10HashTraitsIN5blink4KURLEEENS1_INS2_10ModuleTypeEEEE10EmptyValueEv"}
!80 = !{!81, !78}
!81 = distinct !{!81, !82, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__19make_pairIN5blink4KURLENS1_10ModuleTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_"}
