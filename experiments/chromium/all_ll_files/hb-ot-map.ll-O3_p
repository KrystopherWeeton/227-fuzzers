; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-map.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_ot_map_builder_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, [2 x i32], [2 x i8], [2 x i32], [2 x i32], [2 x i32], %struct.hb_vector_t.143, [2 x %struct.hb_vector_t.144] }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_vector_t.143 = type { i32, i32, %"struct.hb_ot_map_builder_t::feature_info_t"* }
%"struct.hb_ot_map_builder_t::feature_info_t" = type { i32, i32, i32, i32, i32, [2 x i32] }
%struct.hb_vector_t.144 = type { i32, i32, %"struct.hb_ot_map_builder_t::stage_info_t"* }
%"struct.hb_ot_map_builder_t::stage_info_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_complex_shaper_t = type opaque
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.0], [2 x %struct.hb_vector_t.1] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.0 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.1 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.139 }
%struct.hb_vector_t.139 = type { i32, i32, i32* }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.131 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t.2 }
%struct.hb_vector_t.2 = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.130, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.130 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.131 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.132 }
%struct.hb_shaper_lazy_loader_t.132 = type { %struct.hb_lazy_loader_t.133 }
%struct.hb_lazy_loader_t.133 = type { %struct.hb_atomic_ptr_t.135 }
%struct.hb_atomic_ptr_t.135 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.136, %struct.anon.137, %struct.anon.138 }
%struct.anon.136 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.137 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.138 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.129 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.3 }
%struct.hb_atomic_ptr_t.3 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.9, %struct.hb_face_lazy_loader_t.12, %struct.hb_table_lazy_loader_t.16, %struct.hb_face_lazy_loader_t.19, %struct.hb_face_lazy_loader_t.23, %struct.hb_table_lazy_loader_t.27, %struct.hb_face_lazy_loader_t.30, %struct.hb_table_lazy_loader_t.34, %struct.hb_face_lazy_loader_t.37, %struct.hb_face_lazy_loader_t.41, %struct.hb_face_lazy_loader_t.45, %struct.hb_face_lazy_loader_t.49, %struct.hb_table_lazy_loader_t.53, %struct.hb_table_lazy_loader_t.56, %struct.hb_table_lazy_loader_t.59, %struct.hb_face_lazy_loader_t.62, %struct.hb_table_lazy_loader_t.66, %struct.hb_table_lazy_loader_t.69, %struct.hb_face_lazy_loader_t.72, %struct.hb_face_lazy_loader_t.76, %struct.hb_face_lazy_loader_t.80, %struct.hb_table_lazy_loader_t.84, %struct.hb_table_lazy_loader_t.87, %struct.hb_table_lazy_loader_t.90, %struct.hb_table_lazy_loader_t.93, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_table_lazy_loader_t.111, %struct.hb_face_lazy_loader_t.114, %struct.hb_face_lazy_loader_t.118, %struct.hb_face_lazy_loader_t.122, %struct.hb_table_lazy_loader_t.126 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.4 }
%struct.hb_lazy_loader_t.4 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.6 }
%struct.hb_lazy_loader_t.6 = type { %struct.hb_atomic_ptr_t.8 }
%struct.hb_atomic_ptr_t.8 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.9 = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_face_lazy_loader_t.12 = type { %struct.hb_lazy_loader_t.13 }
%struct.hb_lazy_loader_t.13 = type { %struct.hb_atomic_ptr_t.15 }
%struct.hb_atomic_ptr_t.15 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.16 = type { %struct.hb_lazy_loader_t.17 }
%struct.hb_lazy_loader_t.17 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_face_lazy_loader_t.19 = type { %struct.hb_lazy_loader_t.20 }
%struct.hb_lazy_loader_t.20 = type { %struct.hb_atomic_ptr_t.22 }
%struct.hb_atomic_ptr_t.22 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.23 = type { %struct.hb_lazy_loader_t.24 }
%struct.hb_lazy_loader_t.24 = type { %struct.hb_atomic_ptr_t.26 }
%struct.hb_atomic_ptr_t.26 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.27 = type { %struct.hb_lazy_loader_t.28 }
%struct.hb_lazy_loader_t.28 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_face_lazy_loader_t.30 = type { %struct.hb_lazy_loader_t.31 }
%struct.hb_lazy_loader_t.31 = type { %struct.hb_atomic_ptr_t.33 }
%struct.hb_atomic_ptr_t.33 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.34 = type { %struct.hb_lazy_loader_t.35 }
%struct.hb_lazy_loader_t.35 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_face_lazy_loader_t.37 = type { %struct.hb_lazy_loader_t.38 }
%struct.hb_lazy_loader_t.38 = type { %struct.hb_atomic_ptr_t.40 }
%struct.hb_atomic_ptr_t.40 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.41 = type { %struct.hb_lazy_loader_t.42 }
%struct.hb_lazy_loader_t.42 = type { %struct.hb_atomic_ptr_t.44 }
%struct.hb_atomic_ptr_t.44 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.45 = type { %struct.hb_lazy_loader_t.46 }
%struct.hb_lazy_loader_t.46 = type { %struct.hb_atomic_ptr_t.48 }
%struct.hb_atomic_ptr_t.48 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.49 = type { %struct.hb_lazy_loader_t.50 }
%struct.hb_lazy_loader_t.50 = type { %struct.hb_atomic_ptr_t.52 }
%struct.hb_atomic_ptr_t.52 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.56 = type { %struct.hb_lazy_loader_t.57 }
%struct.hb_lazy_loader_t.57 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.59 = type { %struct.hb_lazy_loader_t.60 }
%struct.hb_lazy_loader_t.60 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_face_lazy_loader_t.62 = type { %struct.hb_lazy_loader_t.63 }
%struct.hb_lazy_loader_t.63 = type { %struct.hb_atomic_ptr_t.65 }
%struct.hb_atomic_ptr_t.65 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.66 = type { %struct.hb_lazy_loader_t.67 }
%struct.hb_lazy_loader_t.67 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.69 = type { %struct.hb_lazy_loader_t.70 }
%struct.hb_lazy_loader_t.70 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_face_lazy_loader_t.72 = type { %struct.hb_lazy_loader_t.73 }
%struct.hb_lazy_loader_t.73 = type { %struct.hb_atomic_ptr_t.75 }
%struct.hb_atomic_ptr_t.75 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.76 = type { %struct.hb_lazy_loader_t.77 }
%struct.hb_lazy_loader_t.77 = type { %struct.hb_atomic_ptr_t.79 }
%struct.hb_atomic_ptr_t.79 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.80 = type { %struct.hb_lazy_loader_t.81 }
%struct.hb_lazy_loader_t.81 = type { %struct.hb_atomic_ptr_t.83 }
%struct.hb_atomic_ptr_t.83 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.87 = type { %struct.hb_lazy_loader_t.88 }
%struct.hb_lazy_loader_t.88 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.90 = type { %struct.hb_lazy_loader_t.91 }
%struct.hb_lazy_loader_t.91 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.93 = type { %struct.hb_lazy_loader_t.94 }
%struct.hb_lazy_loader_t.94 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_table_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_face_lazy_loader_t.114 = type { %struct.hb_lazy_loader_t.115 }
%struct.hb_lazy_loader_t.115 = type { %struct.hb_atomic_ptr_t.117 }
%struct.hb_atomic_ptr_t.117 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.118 = type { %struct.hb_lazy_loader_t.119 }
%struct.hb_lazy_loader_t.119 = type { %struct.hb_atomic_ptr_t.121 }
%struct.hb_atomic_ptr_t.121 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.122 = type { %struct.hb_lazy_loader_t.123 }
%struct.hb_lazy_loader_t.123 = type { %struct.hb_atomic_ptr_t.125 }
%struct.hb_atomic_ptr_t.125 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.126 = type { %struct.hb_lazy_loader_t.127 }
%struct.hb_lazy_loader_t.127 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.129 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_set_t = type { %struct.hb_object_header_t, i8, i32, %struct.hb_sorted_vector_t.140, %struct.hb_vector_t.142 }
%struct.hb_sorted_vector_t.140 = type { %struct.hb_vector_t.141 }
%struct.hb_vector_t.141 = type { i32, i32, %"struct.hb_set_t::page_map_t"* }
%"struct.hb_set_t::page_map_t" = type { i32, i32 }
%struct.hb_vector_t.142 = type { i32, i32, %"struct.hb_set_t::page_t"* }
%"struct.hb_set_t::page_t" = type { %struct.hb_vector_size_t }
%struct.hb_vector_size_t = type { [8 x i64] }

$_ZN8hb_set_t15page_for_insertEj = comdat any

$_ZN19hb_ot_map_builder_t14feature_info_t3cmpEPKvS2_ = comdat any

$_ZN11hb_ot_map_t12lookup_map_t3cmpEPKvS2_ = comdat any

@_ZL10table_tags = internal unnamed_addr constant [2 x i32] [i32 1196643650, i32 1196445523], align 4
@_hb_CrapPool = external hidden global [48 x i64], align 16
@_hb_NullPool = external hidden local_unnamed_addr constant [48 x i64], align 16

@_ZN19hb_ot_map_builder_tC1EP9hb_face_tPK23hb_segment_properties_t = hidden unnamed_addr alias void (%struct.hb_ot_map_builder_t*, %struct.hb_face_t*, %struct.hb_segment_properties_t*), void (%struct.hb_ot_map_builder_t*, %struct.hb_face_t*, %struct.hb_segment_properties_t*)* @_ZN19hb_ot_map_builder_tC2EP9hb_face_tPK23hb_segment_properties_t
@_ZN19hb_ot_map_builder_tD1Ev = hidden unnamed_addr alias void (%struct.hb_ot_map_builder_t*), void (%struct.hb_ot_map_builder_t*)* @_ZN19hb_ot_map_builder_tD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11hb_ot_map_t15collect_lookupsEjP8hb_set_t(%struct.hb_ot_map_t* nocapture readonly, i32, %struct.hb_set_t*) local_unnamed_addr #0 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %0, i64 0, i32 4, i64 %4, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %0, i64 0, i32 4, i64 %4, i32 2
  %10 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %2, i64 0, i32 1
  %11 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %2, i64 0, i32 2
  br label %13

12:                                               ; preds = %41, %3
  ret void

13:                                               ; preds = %8, %41
  %14 = phi i32 [ %6, %8 ], [ %43, %41 ]
  %15 = phi i64 [ 0, %8 ], [ %42, %41 ]
  %16 = zext i32 %14 to i64
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %21, !prof !2

18:                                               ; preds = %13
  %19 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %9, align 8
  %20 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %19, i64 %15
  br label %21

21:                                               ; preds = %13, %18
  %22 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ %20, %18 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_ot_map_t::lookup_map_t"*), %13 ]
  %23 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %22, i64 0, i32 0
  %24 = load i16, i16* %23, align 4
  %25 = zext i16 %24 to i32
  %26 = load i8, i8* %10, align 8, !range !3
  %27 = icmp eq i8 %26, 1
  br i1 %27, label %28, label %41, !prof !4

28:                                               ; preds = %21
  store i32 -1, i32* %11, align 4
  %29 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %2, i32 %25) #6
  %30 = icmp eq %"struct.hb_set_t::page_t"* %29, null
  br i1 %30, label %41, label %31, !prof !5

31:                                               ; preds = %28
  %32 = and i32 %25, 63
  %33 = zext i32 %32 to i64
  %34 = shl i64 1, %33
  %35 = lshr i32 %25, 6
  %36 = and i32 %35, 7
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %29, i64 0, i32 0, i32 0, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = or i64 %39, %34
  store i64 %40, i64* %38, align 8
  br label %41

41:                                               ; preds = %21, %28, %31
  %42 = add nuw nsw i64 %15, 1
  %43 = load i32, i32* %5, align 4
  %44 = zext i32 %43 to i64
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %13, label %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19hb_ot_map_builder_tC2EP9hb_face_tPK23hb_segment_properties_t(%struct.hb_ot_map_builder_t*, %struct.hb_face_t*, %struct.hb_segment_properties_t* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [3 x i32], align 4
  %7 = alloca [3 x i32], align 4
  %8 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 1
  %10 = bitcast %struct.hb_segment_properties_t* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 120, i1 false)
  store %struct.hb_face_t* %1, %struct.hb_face_t** %8, align 8
  %11 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 1
  %12 = bitcast %struct.hb_segment_properties_t* %11 to i8*
  %13 = bitcast %struct.hb_segment_properties_t* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  store i32 3, i32* %4, align 4
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #6
  store i32 3, i32* %5, align 4
  %16 = bitcast [3 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #6
  %17 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 0
  store i32 -1431655766, i32* %17, align 4
  %18 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  store i32 -1431655766, i32* %18, align 4
  %19 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  store i32 -1431655766, i32* %19, align 4
  %20 = bitcast [3 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #6
  %21 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 0
  store i32 -1431655766, i32* %21, align 4
  %22 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 1
  store i32 -1431655766, i32* %22, align 4
  %23 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 2
  store i32 -1431655766, i32* %23, align 4
  %24 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 1, i32 2
  %27 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %26, align 8
  call void @hb_ot_tags_from_script_and_language(i32 %25, %struct.hb_language_impl_t* %27, i32* nonnull %4, i32* nonnull %17, i32* nonnull %5, i32* nonnull %21) #6
  %28 = load %struct.hb_face_t*, %struct.hb_face_t** %8, align 8
  %29 = load i32, i32* %4, align 4
  %30 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 4, i64 0
  %31 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 2, i64 0
  %32 = call i32 @hb_ot_layout_table_select_script(%struct.hb_face_t* %28, i32 1196643650, i32 %29, i32* nonnull %17, i32* %30, i32* %31) #6
  %33 = icmp ne i32 %32, 0
  %34 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 3, i64 0
  %35 = zext i1 %33 to i8
  store i8 %35, i8* %34, align 1
  %36 = load %struct.hb_face_t*, %struct.hb_face_t** %8, align 8
  %37 = load i32, i32* %30, align 4
  %38 = load i32, i32* %5, align 4
  %39 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 5, i64 0
  %40 = call i32 @hb_ot_layout_script_select_language(%struct.hb_face_t* %36, i32 1196643650, i32 %37, i32 %38, i32* nonnull %21, i32* %39) #6
  %41 = load %struct.hb_face_t*, %struct.hb_face_t** %8, align 8
  %42 = load i32, i32* %4, align 4
  %43 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 4, i64 1
  %44 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 2, i64 1
  %45 = call i32 @hb_ot_layout_table_select_script(%struct.hb_face_t* %41, i32 1196445523, i32 %42, i32* nonnull %17, i32* %43, i32* %44) #6
  %46 = icmp ne i32 %45, 0
  %47 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 3, i64 1
  %48 = zext i1 %46 to i8
  store i8 %48, i8* %47, align 1
  %49 = load %struct.hb_face_t*, %struct.hb_face_t** %8, align 8
  %50 = load i32, i32* %43, align 4
  %51 = load i32, i32* %5, align 4
  %52 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 5, i64 1
  %53 = call i32 @hb_ot_layout_script_select_language(%struct.hb_face_t* %49, i32 1196445523, i32 %50, i32 %51, i32* nonnull %21, i32* %52) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @hb_ot_tags_from_script_and_language(i32, %struct.hb_language_impl_t*, i32*, i32*, i32*, i32*) local_unnamed_addr #2

declare i32 @hb_ot_layout_table_select_script(%struct.hb_face_t*, i32, i32, i32*, i32*, i32*) local_unnamed_addr #2

declare i32 @hb_ot_layout_script_select_language(%struct.hb_face_t*, i32, i32, i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19hb_ot_map_builder_tD2Ev(%struct.hb_ot_map_builder_t*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7
  %3 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 2
  %4 = bitcast %"struct.hb_ot_map_builder_t::feature_info_t"** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @free(i8* %5) #6
  %6 = bitcast %struct.hb_vector_t.143* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #6
  %7 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 0
  %8 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 0, i32 2
  %9 = bitcast %"struct.hb_ot_map_builder_t::stage_info_t"** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @free(i8* %10) #6
  %11 = bitcast %struct.hb_vector_t.144* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #6
  %12 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 1, i32 2
  %13 = bitcast %"struct.hb_ot_map_builder_t::stage_info_t"** %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @free(i8* %14) #6
  %15 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 1
  %16 = bitcast %struct.hb_vector_t.144* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #6
  %17 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 0
  %18 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 0, i32 2
  %19 = bitcast %"struct.hb_ot_map_builder_t::stage_info_t"** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #6
  %21 = bitcast %struct.hb_vector_t.144* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #6
  %22 = load i8*, i8** %4, align 8
  tail call void @free(i8* %22) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* nocapture, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %74, label %6, !prof !5

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, 1
  %10 = icmp sgt i32 %9, 0
  %11 = select i1 %10, i32 %9, i32 0
  %12 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %50, label %15, !prof !5

15:                                               ; preds = %6
  %16 = icmp ult i32 %13, %11
  br i1 %16, label %17, label %38, !prof !5

17:                                               ; preds = %15, %17
  %18 = phi i32 [ %21, %17 ], [ %13, %15 ]
  %19 = lshr i32 %18, 1
  %20 = add i32 %18, 8
  %21 = add i32 %20, %19
  %22 = icmp ugt i32 %21, %11
  br i1 %22, label %23, label %17

23:                                               ; preds = %17
  %24 = icmp uge i32 %21, %13
  %25 = icmp ult i32 %21, 153391689
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %35, !prof !4

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 2
  %29 = bitcast %"struct.hb_ot_map_builder_t::feature_info_t"** %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = zext i32 %21 to i64
  %32 = mul nuw nsw i64 %31, 28
  %33 = tail call i8* @realloc(i8* %30, i64 %32) #6
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %36, !prof !5

35:                                               ; preds = %27, %23
  store i32 -1, i32* %12, align 8
  br label %50

36:                                               ; preds = %27
  store i8* %33, i8** %29, align 8
  store i32 %21, i32* %12, align 8
  %37 = load i32, i32* %7, align 4
  br label %38

38:                                               ; preds = %36, %15
  %39 = phi i32 [ %37, %36 ], [ %8, %15 ]
  %40 = icmp ugt i32 %11, %39
  br i1 %40, label %41, label %51

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 2
  %43 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %42, align 8
  %44 = zext i32 %39 to i64
  %45 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %43, i64 %44
  %46 = bitcast %"struct.hb_ot_map_builder_t::feature_info_t"* %45 to i8*
  %47 = sub i32 %11, %39
  %48 = zext i32 %47 to i64
  %49 = mul nuw nsw i64 %48, 28
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 %49, i1 false) #6
  br label %51

50:                                               ; preds = %35, %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %57

51:                                               ; preds = %41, %38
  store i32 %11, i32* %7, align 4
  %52 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 2
  %53 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %52, align 8
  %54 = add nsw i32 %11, -1
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %53, i64 %55
  br label %57

57:                                               ; preds = %50, %51
  %58 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %50 ], [ %56, %51 ]
  %59 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %58, i64 0, i32 0
  store i32 %1, i32* %59, align 4
  %60 = load i32, i32* %7, align 4
  %61 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %58, i64 0, i32 1
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %58, i64 0, i32 2
  store i32 %3, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %58, i64 0, i32 3
  store i32 %2, i32* %63, align 4
  %64 = and i32 %2, 1
  %65 = icmp eq i32 %64, 0
  %66 = select i1 %65, i32 0, i32 %3
  %67 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %58, i64 0, i32 4
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 6, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %58, i64 0, i32 5, i64 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 6, i64 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %58, i64 0, i32 5, i64 1
  store i32 %72, i32* %73, align 4
  br label %74

74:                                               ; preds = %4, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19hb_ot_map_builder_t11add_lookupsER11hb_ot_map_tjjjjbbb(%struct.hb_ot_map_builder_t* nocapture readonly, %struct.hb_ot_map_t* nocapture dereferenceable(96), i32, i32, i32, i32, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %10 = alloca [32 x i32], align 16
  %11 = alloca i32, align 4
  %12 = bitcast [32 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 128, i1 false)
  %13 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  store i32 -1431655766, i32* %11, align 4
  %14 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 0
  %15 = load %struct.hb_face_t*, %struct.hb_face_t** %14, align 8
  %16 = zext i32 %2 to i64
  %17 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZL10table_tags, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = tail call i32 @hb_ot_layout_table_get_lookup_count(%struct.hb_face_t* %15, i32 %18) #6
  %20 = getelementptr inbounds [32 x i32], [32 x i32]* %10, i64 0, i64 0
  %21 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 4, i64 %16, i32 1
  %22 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 4, i64 %16, i32 0
  %23 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 4, i64 %16, i32 2
  %24 = bitcast %"struct.hb_ot_map_t::lookup_map_t"** %23 to i8**
  %25 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  %26 = zext i1 %6 to i8
  %27 = zext i1 %7 to i8
  %28 = shl nuw nsw i8 %27, 1
  %29 = zext i1 %8 to i8
  %30 = shl nuw nsw i8 %29, 2
  %31 = or i8 %28, %26
  %32 = or i8 %31, %30
  %33 = lshr i64 %25, 16
  %34 = trunc i64 %33 to i8
  br label %35

35:                                               ; preds = %41, %9
  %36 = phi i32 [ 0, %9 ], [ %42, %41 ]
  store i32 32, i32* %11, align 4
  %37 = load %struct.hb_face_t*, %struct.hb_face_t** %14, align 8
  %38 = call i32 @hb_ot_layout_feature_with_variations_get_lookups(%struct.hb_face_t* %37, i32 %18, i32 %3, i32 %4, i32 %36, i32* nonnull %11, i32* nonnull %20) #6
  %39 = load i32, i32* %11, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %113, label %44

41:                                               ; preds = %108
  %42 = add i32 %109, %36
  %43 = icmp eq i32 %109, 32
  br i1 %43, label %35, label %113

44:                                               ; preds = %35, %108
  %45 = phi i32 [ %109, %108 ], [ %39, %35 ]
  %46 = phi i64 [ %110, %108 ], [ 0, %35 ]
  %47 = getelementptr inbounds [32 x i32], [32 x i32]* %10, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = icmp ult i32 %48, %19
  br i1 %49, label %50, label %108

50:                                               ; preds = %44
  %51 = load i32, i32* %21, align 4
  %52 = add i32 %51, 1
  %53 = icmp sgt i32 %52, 0
  %54 = select i1 %53, i32 %52, i32 0
  %55 = load i32, i32* %22, align 8
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %89, label %57, !prof !5

57:                                               ; preds = %50
  %58 = icmp ult i32 %55, %54
  br i1 %58, label %59, label %78, !prof !5

59:                                               ; preds = %57, %59
  %60 = phi i32 [ %63, %59 ], [ %55, %57 ]
  %61 = lshr i32 %60, 1
  %62 = add i32 %60, 8
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, %54
  br i1 %64, label %65, label %59

65:                                               ; preds = %59
  %66 = icmp uge i32 %63, %55
  %67 = icmp ult i32 %63, 536870911
  %68 = and i1 %66, %67
  br i1 %68, label %69, label %75, !prof !4

69:                                               ; preds = %65
  %70 = load i8*, i8** %24, align 8
  %71 = zext i32 %63 to i64
  %72 = shl nuw nsw i64 %71, 3
  %73 = call i8* @realloc(i8* %70, i64 %72) #6
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %76, !prof !5

75:                                               ; preds = %69, %65
  store i32 -1, i32* %22, align 8
  br label %89

76:                                               ; preds = %69
  store i8* %73, i8** %24, align 8
  store i32 %63, i32* %22, align 8
  %77 = load i32, i32* %21, align 4
  br label %78

78:                                               ; preds = %76, %57
  %79 = phi i32 [ %77, %76 ], [ %51, %57 ]
  %80 = icmp ugt i32 %54, %79
  br i1 %80, label %81, label %90

81:                                               ; preds = %78
  %82 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %23, align 8
  %83 = zext i32 %79 to i64
  %84 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %82, i64 %83
  %85 = bitcast %"struct.hb_ot_map_t::lookup_map_t"* %84 to i8*
  %86 = sub i32 %54, %79
  %87 = zext i32 %86 to i64
  %88 = shl nuw nsw i64 %87, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %85, i8 0, i64 %88, i1 false) #6
  br label %90

89:                                               ; preds = %75, %50
  store i64 %25, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %97

90:                                               ; preds = %81, %78
  store i32 %54, i32* %21, align 4
  %91 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %23, align 8
  %92 = add nsw i32 %54, -1
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %91, i64 %93
  %95 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %91, i64 %93, i32 1
  %96 = load i8, i8* %95, align 2
  br label %97

97:                                               ; preds = %89, %90
  %98 = phi i8 [ %34, %89 ], [ %96, %90 ]
  %99 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::lookup_map_t"*), %89 ], [ %94, %90 ]
  %100 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %99, i64 0, i32 2
  store i32 %5, i32* %100, align 4
  %101 = load i32, i32* %47, align 4
  %102 = trunc i32 %101 to i16
  %103 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %99, i64 0, i32 0
  store i16 %102, i16* %103, align 4
  %104 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %99, i64 0, i32 1
  %105 = and i8 %98, -8
  %106 = or i8 %32, %105
  store i8 %106, i8* %104, align 2
  %107 = load i32, i32* %11, align 4
  br label %108

108:                                              ; preds = %44, %97
  %109 = phi i32 [ %45, %44 ], [ %107, %97 ]
  %110 = add nuw nsw i64 %46, 1
  %111 = zext i32 %109 to i64
  %112 = icmp ult i64 %110, %111
  br i1 %112, label %44, label %41

113:                                              ; preds = %35, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %12) #6
  ret void
}

declare i32 @hb_ot_layout_table_get_lookup_count(%struct.hb_face_t*, i32) local_unnamed_addr #2

declare i32 @hb_ot_layout_feature_with_variations_get_lookups(%struct.hb_face_t*, i32, i32, i32, i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* nocapture, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)*) local_unnamed_addr #0 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 %4, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, 1
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %8, i32 %7, i32 0
  %10 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 %4, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %48, label %13, !prof !5

13:                                               ; preds = %3
  %14 = icmp ult i32 %11, %9
  br i1 %14, label %15, label %36, !prof !5

15:                                               ; preds = %13, %15
  %16 = phi i32 [ %19, %15 ], [ %11, %13 ]
  %17 = lshr i32 %16, 1
  %18 = add i32 %16, 8
  %19 = add i32 %18, %17
  %20 = icmp ugt i32 %19, %9
  br i1 %20, label %21, label %15

21:                                               ; preds = %15
  %22 = icmp uge i32 %19, %11
  %23 = icmp ult i32 %19, 268435455
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %33, !prof !4

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 %4, i32 2
  %27 = bitcast %"struct.hb_ot_map_builder_t::stage_info_t"** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = zext i32 %19 to i64
  %30 = shl nuw nsw i64 %29, 4
  %31 = tail call i8* @realloc(i8* %28, i64 %30) #6
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %34, !prof !5

33:                                               ; preds = %25, %21
  store i32 -1, i32* %10, align 8
  br label %48

34:                                               ; preds = %25
  store i8* %31, i8** %27, align 8
  store i32 %19, i32* %10, align 8
  %35 = load i32, i32* %5, align 4
  br label %36

36:                                               ; preds = %34, %13
  %37 = phi i32 [ %35, %34 ], [ %6, %13 ]
  %38 = icmp ugt i32 %9, %37
  br i1 %38, label %39, label %49

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 %4, i32 2
  %41 = load %"struct.hb_ot_map_builder_t::stage_info_t"*, %"struct.hb_ot_map_builder_t::stage_info_t"** %40, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %41, i64 %42
  %44 = bitcast %"struct.hb_ot_map_builder_t::stage_info_t"* %43 to i8*
  %45 = sub i32 %9, %37
  %46 = zext i32 %45 to i64
  %47 = shl nuw nsw i64 %46, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %47, i1 false) #6
  br label %49

48:                                               ; preds = %33, %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #6
  br label %55

49:                                               ; preds = %39, %36
  store i32 %9, i32* %5, align 4
  %50 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 %4, i32 2
  %51 = load %"struct.hb_ot_map_builder_t::stage_info_t"*, %"struct.hb_ot_map_builder_t::stage_info_t"** %50, align 8
  %52 = add nsw i32 %9, -1
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %51, i64 %53
  br label %55

55:                                               ; preds = %48, %49
  %56 = phi %"struct.hb_ot_map_builder_t::stage_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::stage_info_t"*), %48 ], [ %54, %49 ]
  %57 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 6, i64 %4
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %56, i64 0, i32 0
  store i32 %58, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %56, i64 0, i32 1
  store void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* %2, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)** %60, align 8
  %61 = load i32, i32* %57, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %57, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19hb_ot_map_builder_t7compileER11hb_ot_map_tRK22hb_ot_shape_plan_key_t(%struct.hb_ot_map_builder_t*, %struct.hb_ot_map_t* dereferenceable(96), %struct.hb_ot_shape_plan_key_t* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x i32], align 4
  %5 = alloca [2 x i32], align 4
  %6 = alloca i64, align 8
  %7 = alloca [2 x i32], align 4
  %8 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 2
  store i32 2, i32* %8, align 4
  %9 = bitcast [2 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 0
  store i32 -1431655766, i32* %10, align 4
  %11 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 1
  store i32 -1431655766, i32* %11, align 4
  %12 = bitcast [2 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  %13 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 0
  store i32 -1431655766, i32* %13, align 4
  %14 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 1
  store i32 -1431655766, i32* %14, align 4
  %15 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  store i64 0, i64* %6, align 8
  %16 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 0
  %17 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 2, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 0, i64 0
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 3, i64 0
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 1, i64 0
  store i8 %21, i8* %22, align 1
  %23 = load %struct.hb_face_t*, %struct.hb_face_t** %16, align 8
  %24 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 4, i64 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 5, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = call i32 @hb_ot_layout_language_get_required_feature(%struct.hb_face_t* %23, i32 1196643650, i32 %25, i32 %27, i32* nonnull %10, i32* nonnull %13) #6
  %29 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 2, i64 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 0, i64 1
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 3, i64 1
  %33 = load i8, i8* %32, align 1, !range !3
  %34 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 1, i64 1
  store i8 %33, i8* %34, align 1
  %35 = load %struct.hb_face_t*, %struct.hb_face_t** %16, align 8
  %36 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 4, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 5, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = call i32 @hb_ot_layout_language_get_required_feature(%struct.hb_face_t* %35, i32 1196445523, i32 %37, i32 %39, i32* %11, i32* %14) #6
  %41 = bitcast i64* %6 to [2 x i32]*
  %42 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %319, label %45

45:                                               ; preds = %3
  %46 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 2
  %47 = bitcast %"struct.hb_ot_map_builder_t::feature_info_t"** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = zext i32 %43 to i64
  call fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8* %48, i64 %49, i64 28, i32 (i8*, i8*)* nonnull @_ZN19hb_ot_map_builder_t14feature_info_t3cmpEPKvS2_) #6
  %50 = load i32, i32* %42, align 4
  %51 = icmp ugt i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 2
  br label %62

54:                                               ; preds = %294, %45
  %55 = phi i32 [ %50, %45 ], [ %297, %294 ]
  %56 = phi i32 [ 0, %45 ], [ %295, %294 ]
  %57 = add i32 %56, 1
  %58 = icmp sgt i32 %57, 0
  %59 = select i1 %58, i32 %57, i32 0
  %60 = icmp ult i32 %59, %55
  br i1 %60, label %61, label %300

61:                                               ; preds = %54
  store i32 %59, i32* %42, align 4
  br label %300

62:                                               ; preds = %52, %294
  %63 = phi i32 [ %50, %52 ], [ %297, %294 ]
  %64 = phi i64 [ 1, %52 ], [ %296, %294 ]
  %65 = phi i32 [ 0, %52 ], [ %295, %294 ]
  %66 = zext i32 %63 to i64
  %67 = icmp ult i64 %64, %66
  br i1 %67, label %69, label %68, !prof !2

68:                                               ; preds = %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %72

69:                                               ; preds = %62
  %70 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %71 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %70, i64 %64
  br label %72

72:                                               ; preds = %68, %69
  %73 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %68 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp ugt i32 %63, %65
  br i1 %76, label %78, label %77, !prof !2

77:                                               ; preds = %72
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %82

78:                                               ; preds = %72
  %79 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %80 = zext i32 %65 to i64
  %81 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %79, i64 %80
  br label %82

82:                                               ; preds = %77, %78
  %83 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %77 ], [ %81, %78 ]
  %84 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %83, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %75, %85
  br i1 %67, label %88, label %87, !prof !2

87:                                               ; preds = %82
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %91

88:                                               ; preds = %82
  %89 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %90 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %89, i64 %64
  br label %91

91:                                               ; preds = %87, %88
  %92 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %87 ], [ %90, %88 ]
  br i1 %86, label %105, label %93

93:                                               ; preds = %91
  %94 = add i32 %65, 1
  %95 = icmp ugt i32 %63, %94
  br i1 %95, label %97, label %96, !prof !2

96:                                               ; preds = %93
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %101

97:                                               ; preds = %93
  %98 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %99 = zext i32 %94 to i64
  %100 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %98, i64 %99
  br label %101

101:                                              ; preds = %96, %97
  %102 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %96 ], [ %100, %97 ]
  %103 = bitcast %"struct.hb_ot_map_builder_t::feature_info_t"* %102 to i8*
  %104 = bitcast %"struct.hb_ot_map_builder_t::feature_info_t"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 28, i1 false)
  br label %294

105:                                              ; preds = %91
  %106 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %92, i64 0, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %76, label %111, label %110, !prof !2

110:                                              ; preds = %105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %115

111:                                              ; preds = %105
  %112 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %113 = zext i32 %65 to i64
  %114 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %112, i64 %113
  br label %115

115:                                              ; preds = %110, %111
  %116 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %110 ], [ %114, %111 ]
  %117 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %116, i64 0, i32 3
  %118 = load i32, i32* %117, align 4
  br i1 %109, label %161, label %119

119:                                              ; preds = %115
  %120 = or i32 %118, 1
  store i32 %120, i32* %117, align 4
  %121 = load i32, i32* %42, align 4
  %122 = zext i32 %121 to i64
  %123 = icmp ult i64 %64, %122
  br i1 %123, label %125, label %124, !prof !2

124:                                              ; preds = %119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %128

125:                                              ; preds = %119
  %126 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %127 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %126, i64 %64
  br label %128

128:                                              ; preds = %124, %125
  %129 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %124 ], [ %127, %125 ]
  %130 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %129, i64 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = icmp ugt i32 %121, %65
  br i1 %132, label %134, label %133, !prof !2

133:                                              ; preds = %128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %138

134:                                              ; preds = %128
  %135 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %136 = zext i32 %65 to i64
  %137 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %135, i64 %136
  br label %138

138:                                              ; preds = %133, %134
  %139 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %133 ], [ %137, %134 ]
  %140 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %139, i64 0, i32 2
  store i32 %131, i32* %140, align 4
  %141 = load i32, i32* %42, align 4
  %142 = zext i32 %141 to i64
  %143 = icmp ult i64 %64, %142
  br i1 %143, label %145, label %144, !prof !2

144:                                              ; preds = %138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %148

145:                                              ; preds = %138
  %146 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %147 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %146, i64 %64
  br label %148

148:                                              ; preds = %144, %145
  %149 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %144 ], [ %147, %145 ]
  %150 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %149, i64 0, i32 4
  %151 = load i32, i32* %150, align 4
  %152 = icmp ugt i32 %141, %65
  br i1 %152, label %154, label %153, !prof !2

153:                                              ; preds = %148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %158

154:                                              ; preds = %148
  %155 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %156 = zext i32 %65 to i64
  %157 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %155, i64 %156
  br label %158

158:                                              ; preds = %153, %154
  %159 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %153 ], [ %157, %154 ]
  %160 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %159, i64 0, i32 4
  store i32 %151, i32* %160, align 4
  br label %208

161:                                              ; preds = %115
  %162 = and i32 %118, 1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %176, label %164

164:                                              ; preds = %161
  br i1 %76, label %166, label %165, !prof !2

165:                                              ; preds = %164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %170

166:                                              ; preds = %164
  %167 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %168 = zext i32 %65 to i64
  %169 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %167, i64 %168
  br label %170

170:                                              ; preds = %165, %166
  %171 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %165 ], [ %169, %166 ]
  %172 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %171, i64 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = xor i32 %173, 1
  store i32 %174, i32* %172, align 4
  %175 = load i32, i32* %42, align 4
  br label %176

176:                                              ; preds = %161, %170
  %177 = phi i32 [ %63, %161 ], [ %175, %170 ]
  %178 = icmp ugt i32 %177, %65
  br i1 %178, label %180, label %179, !prof !2

179:                                              ; preds = %176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %184

180:                                              ; preds = %176
  %181 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %182 = zext i32 %65 to i64
  %183 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %181, i64 %182
  br label %184

184:                                              ; preds = %179, %180
  %185 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %179 ], [ %183, %180 ]
  %186 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %185, i64 0, i32 2
  %187 = zext i32 %177 to i64
  %188 = icmp ult i64 %64, %187
  br i1 %188, label %190, label %189, !prof !2

189:                                              ; preds = %184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %193

190:                                              ; preds = %184
  %191 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %192 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %191, i64 %64
  br label %193

193:                                              ; preds = %189, %190
  %194 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %189 ], [ %192, %190 ]
  %195 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %194, i64 0, i32 2
  %196 = load i32, i32* %186, align 4
  %197 = load i32, i32* %195, align 4
  %198 = icmp ult i32 %196, %197
  %199 = select i1 %198, i32 %197, i32 %196
  br i1 %178, label %201, label %200, !prof !2

200:                                              ; preds = %193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %205

201:                                              ; preds = %193
  %202 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %203 = zext i32 %65 to i64
  %204 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %202, i64 %203
  br label %205

205:                                              ; preds = %200, %201
  %206 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %200 ], [ %204, %201 ]
  %207 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %206, i64 0, i32 2
  store i32 %199, i32* %207, align 4
  br label %208

208:                                              ; preds = %205, %158
  %209 = load i32, i32* %42, align 4
  %210 = zext i32 %209 to i64
  %211 = icmp ult i64 %64, %210
  br i1 %211, label %213, label %212, !prof !2

212:                                              ; preds = %208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %216

213:                                              ; preds = %208
  %214 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %215 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %214, i64 %64
  br label %216

216:                                              ; preds = %212, %213
  %217 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %212 ], [ %215, %213 ]
  %218 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %217, i64 0, i32 3
  %219 = load i32, i32* %218, align 4
  %220 = and i32 %219, 2
  %221 = icmp ugt i32 %209, %65
  br i1 %221, label %223, label %222, !prof !2

222:                                              ; preds = %216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %227

223:                                              ; preds = %216
  %224 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %225 = zext i32 %65 to i64
  %226 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %224, i64 %225
  br label %227

227:                                              ; preds = %222, %223
  %228 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %222 ], [ %226, %223 ]
  %229 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %228, i64 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = or i32 %230, %220
  store i32 %231, i32* %229, align 4
  %232 = load i32, i32* %42, align 4
  %233 = icmp ugt i32 %232, %65
  br i1 %233, label %235, label %234, !prof !2

234:                                              ; preds = %227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %239

235:                                              ; preds = %227
  %236 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %237 = zext i32 %65 to i64
  %238 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %236, i64 %237
  br label %239

239:                                              ; preds = %234, %235
  %240 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %234 ], [ %238, %235 ]
  %241 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %240, i64 0, i32 5, i64 0
  %242 = zext i32 %232 to i64
  %243 = icmp ult i64 %64, %242
  br i1 %243, label %245, label %244, !prof !2

244:                                              ; preds = %239
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %248

245:                                              ; preds = %239
  %246 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %247 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %246, i64 %64
  br label %248

248:                                              ; preds = %244, %245
  %249 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %244 ], [ %247, %245 ]
  %250 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %249, i64 0, i32 5, i64 0
  %251 = load i32, i32* %241, align 4
  %252 = load i32, i32* %250, align 4
  %253 = icmp ugt i32 %251, %252
  %254 = select i1 %253, i32 %252, i32 %251
  br i1 %233, label %256, label %255, !prof !2

255:                                              ; preds = %248
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %260

256:                                              ; preds = %248
  %257 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %258 = zext i32 %65 to i64
  %259 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %257, i64 %258
  br label %260

260:                                              ; preds = %255, %256
  %261 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %255 ], [ %259, %256 ]
  %262 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %261, i64 0, i32 5, i64 0
  store i32 %254, i32* %262, align 4
  %263 = load i32, i32* %42, align 4
  %264 = icmp ugt i32 %263, %65
  br i1 %264, label %266, label %265, !prof !2

265:                                              ; preds = %260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %270

266:                                              ; preds = %260
  %267 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %268 = zext i32 %65 to i64
  %269 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %267, i64 %268
  br label %270

270:                                              ; preds = %265, %266
  %271 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %265 ], [ %269, %266 ]
  %272 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %271, i64 0, i32 5, i64 1
  %273 = zext i32 %263 to i64
  %274 = icmp ult i64 %64, %273
  br i1 %274, label %276, label %275, !prof !2

275:                                              ; preds = %270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %279

276:                                              ; preds = %270
  %277 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %278 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %277, i64 %64
  br label %279

279:                                              ; preds = %275, %276
  %280 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %275 ], [ %278, %276 ]
  %281 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %280, i64 0, i32 5, i64 1
  %282 = load i32, i32* %272, align 4
  %283 = load i32, i32* %281, align 4
  %284 = icmp ugt i32 %282, %283
  %285 = select i1 %284, i32 %283, i32 %282
  br i1 %264, label %287, label %286, !prof !2

286:                                              ; preds = %279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 28, i1 false) #6
  br label %291

287:                                              ; preds = %279
  %288 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %53, align 8
  %289 = zext i32 %65 to i64
  %290 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %288, i64 %289
  br label %291

291:                                              ; preds = %286, %287
  %292 = phi %"struct.hb_ot_map_builder_t::feature_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::feature_info_t"*), %286 ], [ %290, %287 ]
  %293 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %292, i64 0, i32 5, i64 1
  store i32 %285, i32* %293, align 4
  br label %294

294:                                              ; preds = %101, %291
  %295 = phi i32 [ %94, %101 ], [ %65, %291 ]
  %296 = add nuw nsw i64 %64, 1
  %297 = load i32, i32* %42, align 4
  %298 = zext i32 %297 to i64
  %299 = icmp ult i64 %296, %298
  br i1 %299, label %62, label %54

300:                                              ; preds = %61, %54
  %301 = phi i32 [ %59, %61 ], [ %55, %54 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %319, label %303

303:                                              ; preds = %300
  %304 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 7, i32 2
  %305 = bitcast [2 x i32]* %7 to i8*
  %306 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0
  %307 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 1
  %308 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 3, i32 0, i32 1
  %309 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 3, i32 0, i32 0
  %310 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 3, i32 0, i32 2
  %311 = bitcast %"struct.hb_ot_map_t::feature_map_t"** %310 to i8**
  %312 = bitcast i64* %6 to i32*
  %313 = getelementptr inbounds [2 x i32], [2 x i32]* %41, i64 0, i64 1
  %314 = load i32, i32* %312, align 8
  %315 = load i32, i32* %313, align 4
  br label %451

316:                                              ; preds = %631
  store i32 %633, i32* %312, align 8
  store i32 %632, i32* %313, align 4
  %317 = icmp eq i32 %634, 0
  br i1 %317, label %319, label %318

318:                                              ; preds = %316
  store i32 0, i32* %42, align 4
  br label %319

319:                                              ; preds = %3, %300, %316, %318
  %320 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 0, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = add i32 %321, 1
  %323 = icmp sgt i32 %322, 0
  %324 = select i1 %323, i32 %322, i32 0
  %325 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 0, i32 0
  %326 = load i32, i32* %325, align 8
  %327 = icmp slt i32 %326, 0
  br i1 %327, label %363, label %328, !prof !5

328:                                              ; preds = %319
  %329 = icmp ult i32 %326, %324
  br i1 %329, label %330, label %351, !prof !5

330:                                              ; preds = %328, %330
  %331 = phi i32 [ %334, %330 ], [ %326, %328 ]
  %332 = lshr i32 %331, 1
  %333 = add i32 %331, 8
  %334 = add i32 %333, %332
  %335 = icmp ugt i32 %334, %324
  br i1 %335, label %336, label %330

336:                                              ; preds = %330
  %337 = icmp uge i32 %334, %326
  %338 = icmp ult i32 %334, 268435455
  %339 = and i1 %337, %338
  br i1 %339, label %340, label %348, !prof !4

340:                                              ; preds = %336
  %341 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 0, i32 2
  %342 = bitcast %"struct.hb_ot_map_builder_t::stage_info_t"** %341 to i8**
  %343 = load i8*, i8** %342, align 8
  %344 = zext i32 %334 to i64
  %345 = shl nuw nsw i64 %344, 4
  %346 = call i8* @realloc(i8* %343, i64 %345) #6
  %347 = icmp eq i8* %346, null
  br i1 %347, label %348, label %349, !prof !5

348:                                              ; preds = %340, %336
  store i32 -1, i32* %325, align 8
  br label %363

349:                                              ; preds = %340
  store i8* %346, i8** %342, align 8
  store i32 %334, i32* %325, align 8
  %350 = load i32, i32* %320, align 4
  br label %351

351:                                              ; preds = %349, %328
  %352 = phi i32 [ %350, %349 ], [ %321, %328 ]
  %353 = icmp ugt i32 %324, %352
  br i1 %353, label %354, label %364

354:                                              ; preds = %351
  %355 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 0, i32 2
  %356 = load %"struct.hb_ot_map_builder_t::stage_info_t"*, %"struct.hb_ot_map_builder_t::stage_info_t"** %355, align 8
  %357 = zext i32 %352 to i64
  %358 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %356, i64 %357
  %359 = bitcast %"struct.hb_ot_map_builder_t::stage_info_t"* %358 to i8*
  %360 = sub i32 %324, %352
  %361 = zext i32 %360 to i64
  %362 = shl nuw nsw i64 %361, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %359, i8 0, i64 %362, i1 false) #6
  br label %364

363:                                              ; preds = %348, %319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #6
  br label %370

364:                                              ; preds = %354, %351
  store i32 %324, i32* %320, align 4
  %365 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 0, i32 2
  %366 = load %"struct.hb_ot_map_builder_t::stage_info_t"*, %"struct.hb_ot_map_builder_t::stage_info_t"** %365, align 8
  %367 = add nsw i32 %324, -1
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %366, i64 %368
  br label %370

370:                                              ; preds = %363, %364
  %371 = phi %"struct.hb_ot_map_builder_t::stage_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::stage_info_t"*), %363 ], [ %369, %364 ]
  %372 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 6, i64 0
  %373 = load i32, i32* %372, align 4
  %374 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %371, i64 0, i32 0
  store i32 %373, i32* %374, align 8
  %375 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %371, i64 0, i32 1
  store void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)** %375, align 8
  %376 = load i32, i32* %372, align 4
  %377 = add i32 %376, 1
  store i32 %377, i32* %372, align 4
  %378 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 1, i32 1
  %379 = load i32, i32* %378, align 4
  %380 = add i32 %379, 1
  %381 = icmp sgt i32 %380, 0
  %382 = select i1 %381, i32 %380, i32 0
  %383 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 1, i32 0
  %384 = load i32, i32* %383, align 8
  %385 = icmp slt i32 %384, 0
  br i1 %385, label %421, label %386, !prof !5

386:                                              ; preds = %370
  %387 = icmp ult i32 %384, %382
  br i1 %387, label %388, label %409, !prof !5

388:                                              ; preds = %386, %388
  %389 = phi i32 [ %392, %388 ], [ %384, %386 ]
  %390 = lshr i32 %389, 1
  %391 = add i32 %389, 8
  %392 = add i32 %391, %390
  %393 = icmp ugt i32 %392, %382
  br i1 %393, label %394, label %388

394:                                              ; preds = %388
  %395 = icmp uge i32 %392, %384
  %396 = icmp ult i32 %392, 268435455
  %397 = and i1 %395, %396
  br i1 %397, label %398, label %406, !prof !4

398:                                              ; preds = %394
  %399 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 1, i32 2
  %400 = bitcast %"struct.hb_ot_map_builder_t::stage_info_t"** %399 to i8**
  %401 = load i8*, i8** %400, align 8
  %402 = zext i32 %392 to i64
  %403 = shl nuw nsw i64 %402, 4
  %404 = call i8* @realloc(i8* %401, i64 %403) #6
  %405 = icmp eq i8* %404, null
  br i1 %405, label %406, label %407, !prof !5

406:                                              ; preds = %398, %394
  store i32 -1, i32* %383, align 8
  br label %421

407:                                              ; preds = %398
  store i8* %404, i8** %400, align 8
  store i32 %392, i32* %383, align 8
  %408 = load i32, i32* %378, align 4
  br label %409

409:                                              ; preds = %407, %386
  %410 = phi i32 [ %408, %407 ], [ %379, %386 ]
  %411 = icmp ugt i32 %382, %410
  br i1 %411, label %412, label %422

412:                                              ; preds = %409
  %413 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 1, i32 2
  %414 = load %"struct.hb_ot_map_builder_t::stage_info_t"*, %"struct.hb_ot_map_builder_t::stage_info_t"** %413, align 8
  %415 = zext i32 %410 to i64
  %416 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %414, i64 %415
  %417 = bitcast %"struct.hb_ot_map_builder_t::stage_info_t"* %416 to i8*
  %418 = sub i32 %382, %410
  %419 = zext i32 %418 to i64
  %420 = shl nuw nsw i64 %419, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %417, i8 0, i64 %420, i1 false) #6
  br label %422

421:                                              ; preds = %406, %370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #6
  br label %428

422:                                              ; preds = %412, %409
  store i32 %382, i32* %378, align 4
  %423 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 1, i32 2
  %424 = load %"struct.hb_ot_map_builder_t::stage_info_t"*, %"struct.hb_ot_map_builder_t::stage_info_t"** %423, align 8
  %425 = add nsw i32 %382, -1
  %426 = zext i32 %425 to i64
  %427 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %424, i64 %426
  br label %428

428:                                              ; preds = %421, %422
  %429 = phi %"struct.hb_ot_map_builder_t::stage_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::stage_info_t"*), %421 ], [ %427, %422 ]
  %430 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 6, i64 1
  %431 = load i32, i32* %430, align 4
  %432 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %429, i64 0, i32 0
  store i32 %431, i32* %432, align 8
  %433 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %429, i64 0, i32 1
  store void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)** %433, align 8
  %434 = load i32, i32* %430, align 4
  %435 = add i32 %434, 1
  store i32 %435, i32* %430, align 4
  %436 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 3, i32 0, i32 1
  %437 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 3, i32 0, i32 2
  %438 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  %439 = trunc i64 %438 to i16
  %440 = trunc i64 %438 to i16
  %441 = lshr i64 %438, 32
  %442 = trunc i64 %441 to i32
  %443 = lshr i64 %438, 16
  %444 = trunc i64 %443 to i8
  %445 = lshr i64 %438, 16
  %446 = trunc i64 %445 to i8
  %447 = lshr i64 %438, 16
  %448 = trunc i64 %447 to i8
  %449 = lshr i64 %438, 16
  %450 = trunc i64 %449 to i8
  br label %639

451:                                              ; preds = %303, %631
  %452 = phi i32 [ %315, %303 ], [ %632, %631 ]
  %453 = phi i32 [ %314, %303 ], [ %633, %631 ]
  %454 = phi i32 [ %301, %303 ], [ %634, %631 ]
  %455 = phi i64 [ 0, %303 ], [ %636, %631 ]
  %456 = phi i32 [ 2, %303 ], [ %635, %631 ]
  %457 = load %"struct.hb_ot_map_builder_t::feature_info_t"*, %"struct.hb_ot_map_builder_t::feature_info_t"** %304, align 8
  %458 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %457, i64 %455, i32 3
  %459 = load i32, i32* %458, align 4
  %460 = and i32 %459, 1
  %461 = icmp ne i32 %460, 0
  %462 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %457, i64 %455, i32 2
  %463 = load i32, i32* %462, align 4
  %464 = icmp eq i32 %463, 1
  %465 = and i1 %461, %464
  br i1 %465, label %473, label %466

466:                                              ; preds = %451
  %467 = icmp eq i32 %463, 0
  br i1 %467, label %631, label %468, !prof !5

468:                                              ; preds = %466
  %469 = icmp ult i32 %463, 128
  br i1 %469, label %470, label %473

470:                                              ; preds = %468
  %471 = call i32 @llvm.ctlz.i32(i32 %463, i1 true) #6, !range !6
  %472 = sub nuw nsw i32 32, %471
  br label %473

473:                                              ; preds = %468, %451, %470
  %474 = phi i32 [ %472, %470 ], [ 8, %468 ], [ 0, %451 ]
  %475 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %457, i64 %455, i32 2
  %476 = add i32 %474, %456
  %477 = icmp ugt i32 %476, 32
  br i1 %477, label %631, label %478

478:                                              ; preds = %473
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #6
  store i32 -1431655766, i32* %306, align 4
  store i32 -1431655766, i32* %307, align 4
  %479 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %457, i64 %455, i32 0
  %480 = load i32, i32* %13, align 4
  %481 = load i32, i32* %479, align 4
  %482 = icmp eq i32 %480, %481
  br i1 %482, label %483, label %486

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %457, i64 %455, i32 5, i64 0
  %485 = load i32, i32* %484, align 4
  br label %486

486:                                              ; preds = %483, %478
  %487 = phi i32 [ %485, %483 ], [ %453, %478 ]
  %488 = load %struct.hb_face_t*, %struct.hb_face_t** %16, align 8
  %489 = load i32, i32* %24, align 4
  %490 = load i32, i32* %26, align 4
  %491 = call i32 @hb_ot_layout_language_find_feature(%struct.hb_face_t* %488, i32 1196643650, i32 %489, i32 %490, i32 %481, i32* nonnull %306) #6
  %492 = load i32, i32* %14, align 4
  %493 = load i32, i32* %479, align 4
  %494 = icmp eq i32 %492, %493
  br i1 %494, label %989, label %992

495:                                              ; preds = %992
  %496 = load i32, i32* %458, align 4
  %497 = and i32 %496, 16
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %509, label %499

499:                                              ; preds = %495
  %500 = load %struct.hb_face_t*, %struct.hb_face_t** %16, align 8
  %501 = load i32, i32* %479, align 4
  %502 = call zeroext i1 @_Z31hb_ot_layout_table_find_featureP9hb_face_tjjPj(%struct.hb_face_t* %500, i32 1196643650, i32 %501, i32* nonnull %306) #6
  %503 = load %struct.hb_face_t*, %struct.hb_face_t** %16, align 8
  %504 = load i32, i32* %479, align 4
  %505 = call zeroext i1 @_Z31hb_ot_layout_table_find_featureP9hb_face_tjjPj(%struct.hb_face_t* %503, i32 1196445523, i32 %504, i32* %307) #6
  %506 = or i1 %502, %505
  br i1 %506, label %513, label %507

507:                                              ; preds = %499
  %508 = load i32, i32* %458, align 4
  br label %509

509:                                              ; preds = %495, %507
  %510 = phi i32 [ %508, %507 ], [ %496, %495 ]
  %511 = and i32 %510, 2
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %628, label %513

513:                                              ; preds = %992, %499, %509
  %514 = phi i8 [ 1, %509 ], [ 0, %499 ], [ 0, %992 ]
  %515 = load i32, i32* %308, align 4
  %516 = add i32 %515, 1
  %517 = icmp sgt i32 %516, 0
  %518 = select i1 %517, i32 %516, i32 0
  %519 = load i32, i32* %309, align 8
  %520 = icmp slt i32 %519, 0
  br i1 %520, label %553, label %521, !prof !5

521:                                              ; preds = %513
  %522 = icmp ult i32 %519, %518
  br i1 %522, label %523, label %542, !prof !5

523:                                              ; preds = %521, %523
  %524 = phi i32 [ %527, %523 ], [ %519, %521 ]
  %525 = lshr i32 %524, 1
  %526 = add i32 %524, 8
  %527 = add i32 %526, %525
  %528 = icmp ugt i32 %527, %518
  br i1 %528, label %529, label %523

529:                                              ; preds = %523
  %530 = icmp uge i32 %527, %519
  %531 = icmp ult i32 %527, 119304647
  %532 = and i1 %530, %531
  br i1 %532, label %533, label %539, !prof !4

533:                                              ; preds = %529
  %534 = load i8*, i8** %311, align 8
  %535 = zext i32 %527 to i64
  %536 = mul nuw nsw i64 %535, 36
  %537 = call i8* @realloc(i8* %534, i64 %536) #6
  %538 = icmp eq i8* %537, null
  br i1 %538, label %539, label %540, !prof !5

539:                                              ; preds = %533, %529
  store i32 -1, i32* %309, align 8
  br label %553

540:                                              ; preds = %533
  store i8* %537, i8** %311, align 8
  store i32 %527, i32* %309, align 8
  %541 = load i32, i32* %308, align 4
  br label %542

542:                                              ; preds = %540, %521
  %543 = phi i32 [ %541, %540 ], [ %515, %521 ]
  %544 = icmp ugt i32 %518, %543
  br i1 %544, label %545, label %554

545:                                              ; preds = %542
  %546 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %310, align 8
  %547 = zext i32 %543 to i64
  %548 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %546, i64 %547
  %549 = bitcast %"struct.hb_ot_map_t::feature_map_t"* %548 to i8*
  %550 = sub i32 %518, %543
  %551 = zext i32 %550 to i64
  %552 = mul nuw nsw i64 %551, 36
  call void @llvm.memset.p0i8.i64(i8* align 4 %549, i8 0, i64 %552, i1 false) #6
  br label %554

553:                                              ; preds = %539, %513
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 36, i1 false) #6
  br label %559

554:                                              ; preds = %545, %542
  store i32 %518, i32* %308, align 4
  %555 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %310, align 8
  %556 = add nsw i32 %518, -1
  %557 = zext i32 %556 to i64
  %558 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %555, i64 %557
  br label %559

559:                                              ; preds = %553, %554
  %560 = phi %"struct.hb_ot_map_t::feature_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::feature_map_t"*), %553 ], [ %558, %554 ]
  %561 = load i32, i32* %479, align 4
  %562 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 0
  store i32 %561, i32* %562, align 4
  %563 = load i32, i32* %306, align 4
  %564 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 1, i64 0
  store i32 %563, i32* %564, align 4
  %565 = load i32, i32* %307, align 4
  %566 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 1, i64 1
  store i32 %565, i32* %566, align 4
  %567 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %457, i64 %455, i32 5, i64 0
  %568 = load i32, i32* %567, align 4
  %569 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 2, i64 0
  store i32 %568, i32* %569, align 4
  %570 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %457, i64 %455, i32 5, i64 1
  %571 = load i32, i32* %570, align 4
  %572 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 2, i64 1
  store i32 %571, i32* %572, align 4
  %573 = load i32, i32* %458, align 4
  %574 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 6
  %575 = load i8, i8* %574, align 4
  %576 = lshr i32 %573, 1
  %577 = trunc i32 %576 to i8
  %578 = and i8 %577, 2
  %579 = and i8 %575, -3
  %580 = or i8 %578, %579
  %581 = xor i8 %580, 2
  store i8 %581, i8* %574, align 4
  %582 = load i32, i32* %458, align 4
  %583 = lshr i32 %582, 1
  %584 = trunc i32 %583 to i8
  %585 = and i8 %584, 4
  %586 = and i8 %581, -5
  %587 = or i8 %585, %586
  %588 = xor i8 %587, 4
  store i8 %588, i8* %574, align 4
  %589 = load i32, i32* %458, align 4
  %590 = lshr i32 %589, 2
  %591 = trunc i32 %590 to i8
  %592 = and i8 %591, 8
  %593 = and i8 %588, -9
  %594 = or i8 %593, %592
  store i8 %594, i8* %574, align 4
  %595 = load i32, i32* %458, align 4
  %596 = and i32 %595, 1
  %597 = icmp ne i32 %596, 0
  %598 = load i32, i32* %475, align 4
  %599 = icmp eq i32 %598, 1
  %600 = and i1 %597, %599
  %601 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 3
  br i1 %600, label %602, label %604

602:                                              ; preds = %559
  store i32 1, i32* %601, align 4
  %603 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 4
  store i32 2, i32* %603, align 4
  br label %618

604:                                              ; preds = %559
  store i32 %456, i32* %601, align 4
  %605 = shl i32 1, %476
  %606 = shl i32 1, %456
  %607 = sub i32 %605, %606
  %608 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 4
  store i32 %607, i32* %608, align 4
  %609 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %457, i64 %455, i32 4
  %610 = load i32, i32* %609, align 4
  %611 = shl i32 %610, %456
  %612 = and i32 %611, %607
  %613 = load i32, i32* %8, align 4
  %614 = or i32 %612, %613
  store i32 %614, i32* %8, align 4
  %615 = load i32, i32* %601, align 4
  %616 = load i32, i32* %608, align 4
  %617 = load i8, i8* %574, align 4
  br label %618

618:                                              ; preds = %604, %602
  %619 = phi i8 [ %594, %602 ], [ %617, %604 ]
  %620 = phi i32 [ 2, %602 ], [ %616, %604 ]
  %621 = phi i32 [ 1, %602 ], [ %615, %604 ]
  %622 = phi i32 [ %456, %602 ], [ %476, %604 ]
  %623 = shl i32 1, %621
  %624 = and i32 %623, %620
  %625 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %560, i64 0, i32 5
  store i32 %624, i32* %625, align 4
  %626 = and i8 %619, -2
  %627 = or i8 %626, %514
  store i8 %627, i8* %574, align 4
  br label %628

628:                                              ; preds = %509, %618
  %629 = phi i32 [ %622, %618 ], [ %456, %509 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #6
  %630 = load i32, i32* %42, align 4
  br label %631

631:                                              ; preds = %466, %473, %628
  %632 = phi i32 [ %993, %628 ], [ %452, %473 ], [ %452, %466 ]
  %633 = phi i32 [ %487, %628 ], [ %453, %473 ], [ %453, %466 ]
  %634 = phi i32 [ %630, %628 ], [ %454, %473 ], [ %454, %466 ]
  %635 = phi i32 [ %629, %628 ], [ %456, %473 ], [ %456, %466 ]
  %636 = add nuw nsw i64 %455, 1
  %637 = zext i32 %634 to i64
  %638 = icmp ult i64 %636, %637
  br i1 %638, label %451, label %316

639:                                              ; preds = %659, %428
  %640 = phi i64 [ 0, %428 ], [ %660, %659 ]
  %641 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 6, i64 %640
  %642 = load i32, i32* %641, align 4
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %659, label %644

644:                                              ; preds = %639
  %645 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 %640
  %646 = getelementptr inbounds [2 x i32], [2 x i32]* %41, i64 0, i64 %640
  %647 = getelementptr inbounds %struct.hb_ot_shape_plan_key_t, %struct.hb_ot_shape_plan_key_t* %2, i64 0, i32 0, i64 %640
  %648 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 4, i64 %640, i32 1
  %649 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 4, i64 %640, i32 2
  %650 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 %640, i32 1
  %651 = getelementptr inbounds %struct.hb_ot_map_builder_t, %struct.hb_ot_map_builder_t* %0, i64 0, i32 8, i64 %640, i32 2
  %652 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 5, i64 %640, i32 1
  %653 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 5, i64 %640, i32 0
  %654 = getelementptr inbounds %struct.hb_ot_map_t, %struct.hb_ot_map_t* %1, i64 0, i32 5, i64 %640, i32 2
  %655 = bitcast %"struct.hb_ot_map_t::stage_map_t"** %654 to i8**
  %656 = trunc i64 %640 to i32
  %657 = trunc i64 %640 to i32
  br label %662

658:                                              ; preds = %659
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  ret void

659:                                              ; preds = %984, %639
  %660 = add nuw nsw i64 %640, 1
  %661 = icmp eq i64 %660, 2
  br i1 %661, label %658, label %639

662:                                              ; preds = %644, %984
  %663 = phi i32 [ 0, %644 ], [ %986, %984 ]
  %664 = phi i32 [ 0, %644 ], [ %912, %984 ]
  %665 = phi i32 [ 0, %644 ], [ %985, %984 ]
  %666 = load i32, i32* %645, align 4
  %667 = icmp eq i32 %666, 65535
  br i1 %667, label %673, label %668

668:                                              ; preds = %662
  %669 = load i32, i32* %646, align 4
  %670 = icmp eq i32 %669, %663
  br i1 %670, label %671, label %673

671:                                              ; preds = %668
  %672 = load i32, i32* %647, align 4
  call void @_ZN19hb_ot_map_builder_t11add_lookupsER11hb_ot_map_tjjjjbbb(%struct.hb_ot_map_builder_t* %0, %struct.hb_ot_map_t* dereferenceable(96) %1, i32 %656, i32 %666, i32 %672, i32 2, i1 zeroext true, i1 zeroext true, i1 zeroext false)
  br label %673

673:                                              ; preds = %662, %671, %668
  %674 = load i32, i32* %436, align 4
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %679

676:                                              ; preds = %760, %673
  %677 = load i32, i32* %648, align 4
  %678 = icmp ugt i32 %677, %664
  br i1 %678, label %765, label %911

679:                                              ; preds = %673, %760
  %680 = phi i32 [ %762, %760 ], [ %674, %673 ]
  %681 = phi i64 [ %761, %760 ], [ 0, %673 ]
  %682 = zext i32 %680 to i64
  %683 = icmp ult i64 %681, %682
  br i1 %683, label %685, label %684, !prof !2

684:                                              ; preds = %679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 36, i1 false) #6
  br label %688

685:                                              ; preds = %679
  %686 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %437, align 8
  %687 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %686, i64 %681
  br label %688

688:                                              ; preds = %684, %685
  %689 = phi %"struct.hb_ot_map_t::feature_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::feature_map_t"*), %684 ], [ %687, %685 ]
  %690 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %689, i64 0, i32 2, i64 %640
  %691 = load i32, i32* %690, align 4
  %692 = icmp eq i32 %691, %663
  br i1 %692, label %693, label %760

693:                                              ; preds = %688
  %694 = load i32, i32* %436, align 4
  %695 = zext i32 %694 to i64
  %696 = icmp ult i64 %681, %695
  br i1 %696, label %700, label %697, !prof !2

697:                                              ; preds = %693
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 36, i1 false) #6
  %698 = load i32, i32* %436, align 4
  %699 = zext i32 %698 to i64
  br label %703

700:                                              ; preds = %693
  %701 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %437, align 8
  %702 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %701, i64 %681
  br label %703

703:                                              ; preds = %697, %700
  %704 = phi i64 [ %699, %697 ], [ %695, %700 ]
  %705 = phi %"struct.hb_ot_map_t::feature_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::feature_map_t"*), %697 ], [ %702, %700 ]
  %706 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %705, i64 0, i32 1, i64 %640
  %707 = load i32, i32* %706, align 4
  %708 = load i32, i32* %647, align 4
  %709 = icmp ugt i64 %704, %681
  br i1 %709, label %713, label %710, !prof !2

710:                                              ; preds = %703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 36, i1 false) #6
  %711 = load i32, i32* %436, align 4
  %712 = zext i32 %711 to i64
  br label %716

713:                                              ; preds = %703
  %714 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %437, align 8
  %715 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %714, i64 %681
  br label %716

716:                                              ; preds = %710, %713
  %717 = phi i64 [ %712, %710 ], [ %704, %713 ]
  %718 = phi %"struct.hb_ot_map_t::feature_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::feature_map_t"*), %710 ], [ %715, %713 ]
  %719 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %718, i64 0, i32 4
  %720 = load i32, i32* %719, align 4
  %721 = icmp ugt i64 %717, %681
  br i1 %721, label %725, label %722, !prof !2

722:                                              ; preds = %716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 36, i1 false) #6
  %723 = load i32, i32* %436, align 4
  %724 = zext i32 %723 to i64
  br label %728

725:                                              ; preds = %716
  %726 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %437, align 8
  %727 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %726, i64 %681
  br label %728

728:                                              ; preds = %722, %725
  %729 = phi i64 [ %724, %722 ], [ %717, %725 ]
  %730 = phi %"struct.hb_ot_map_t::feature_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::feature_map_t"*), %722 ], [ %727, %725 ]
  %731 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %730, i64 0, i32 6
  %732 = load i8, i8* %731, align 4
  %733 = and i8 %732, 2
  %734 = icmp ne i8 %733, 0
  %735 = icmp ugt i64 %729, %681
  br i1 %735, label %739, label %736, !prof !2

736:                                              ; preds = %728
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 36, i1 false) #6
  %737 = load i32, i32* %436, align 4
  %738 = zext i32 %737 to i64
  br label %742

739:                                              ; preds = %728
  %740 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %437, align 8
  %741 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %740, i64 %681
  br label %742

742:                                              ; preds = %736, %739
  %743 = phi i64 [ %738, %736 ], [ %729, %739 ]
  %744 = phi %"struct.hb_ot_map_t::feature_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::feature_map_t"*), %736 ], [ %741, %739 ]
  %745 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %744, i64 0, i32 6
  %746 = load i8, i8* %745, align 4
  %747 = and i8 %746, 4
  %748 = icmp ne i8 %747, 0
  %749 = icmp ugt i64 %743, %681
  br i1 %749, label %751, label %750, !prof !2

750:                                              ; preds = %742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 36, i1 false) #6
  br label %754

751:                                              ; preds = %742
  %752 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %437, align 8
  %753 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %752, i64 %681
  br label %754

754:                                              ; preds = %750, %751
  %755 = phi %"struct.hb_ot_map_t::feature_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::feature_map_t"*), %750 ], [ %753, %751 ]
  %756 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %755, i64 0, i32 6
  %757 = load i8, i8* %756, align 4
  %758 = and i8 %757, 8
  %759 = icmp ne i8 %758, 0
  call void @_ZN19hb_ot_map_builder_t11add_lookupsER11hb_ot_map_tjjjjbbb(%struct.hb_ot_map_builder_t* %0, %struct.hb_ot_map_t* dereferenceable(96) %1, i32 %657, i32 %707, i32 %708, i32 %720, i1 zeroext %734, i1 zeroext %748, i1 zeroext %759)
  br label %760

760:                                              ; preds = %688, %754
  %761 = add nuw nsw i64 %681, 1
  %762 = load i32, i32* %436, align 4
  %763 = zext i32 %762 to i64
  %764 = icmp ult i64 %761, %763
  br i1 %764, label %679, label %676

765:                                              ; preds = %676
  %766 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %767 = zext i32 %664 to i64
  %768 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %766, i64 %767
  %769 = bitcast %"struct.hb_ot_map_t::lookup_map_t"* %768 to i8*
  %770 = sub i32 %677, %664
  %771 = zext i32 %770 to i64
  call fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8* %769, i64 %771, i64 8, i32 (i8*, i8*)* nonnull @_ZN11hb_ot_map_t12lookup_map_t3cmpEPKvS2_) #6
  %772 = load i32, i32* %648, align 4
  %773 = add nuw i32 %664, 1
  %774 = icmp ult i32 %773, %772
  br i1 %774, label %775, label %779

775:                                              ; preds = %765
  %776 = zext i32 %773 to i64
  br label %786

777:                                              ; preds = %905
  %778 = add i32 %906, 1
  br label %779

779:                                              ; preds = %777, %765
  %780 = phi i32 [ %778, %777 ], [ %773, %765 ]
  %781 = phi i32 [ %908, %777 ], [ %772, %765 ]
  %782 = icmp sgt i32 %780, 0
  %783 = select i1 %782, i32 %780, i32 0
  %784 = icmp ult i32 %783, %781
  br i1 %784, label %785, label %911

785:                                              ; preds = %779
  store i32 %783, i32* %648, align 4
  br label %911

786:                                              ; preds = %775, %905
  %787 = phi i32 [ %772, %775 ], [ %908, %905 ]
  %788 = phi i64 [ %776, %775 ], [ %910, %905 ]
  %789 = phi i32 [ %773, %775 ], [ %907, %905 ]
  %790 = phi i32 [ %664, %775 ], [ %906, %905 ]
  %791 = zext i32 %787 to i64
  %792 = icmp ult i64 %788, %791
  br i1 %792, label %795, label %793, !prof !2

793:                                              ; preds = %786
  store i64 %438, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %794 = load i32, i32* %648, align 4
  br label %799

795:                                              ; preds = %786
  %796 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %797 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %796, i64 %788, i32 0
  %798 = load i16, i16* %797, align 4
  br label %799

799:                                              ; preds = %793, %795
  %800 = phi i32 [ %794, %793 ], [ %787, %795 ]
  %801 = phi i16 [ %439, %793 ], [ %798, %795 ]
  %802 = icmp ugt i32 %800, %790
  br i1 %802, label %805, label %803, !prof !2

803:                                              ; preds = %799
  store i64 %438, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %804 = load i32, i32* %648, align 4
  br label %810

805:                                              ; preds = %799
  %806 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %807 = zext i32 %790 to i64
  %808 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %806, i64 %807, i32 0
  %809 = load i16, i16* %808, align 4
  br label %810

810:                                              ; preds = %803, %805
  %811 = phi i32 [ %804, %803 ], [ %800, %805 ]
  %812 = phi i16 [ %440, %803 ], [ %809, %805 ]
  %813 = icmp eq i16 %801, %812
  %814 = zext i32 %811 to i64
  %815 = icmp ult i64 %788, %814
  br i1 %815, label %817, label %816, !prof !2

816:                                              ; preds = %810
  store i64 %438, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %820

817:                                              ; preds = %810
  %818 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %819 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %818, i64 %788
  br label %820

820:                                              ; preds = %816, %817
  %821 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::lookup_map_t"*), %816 ], [ %819, %817 ]
  br i1 %813, label %836, label %822

822:                                              ; preds = %820
  %823 = add i32 %790, 1
  %824 = load i32, i32* %648, align 4
  %825 = icmp ugt i32 %824, %823
  br i1 %825, label %827, label %826, !prof !2

826:                                              ; preds = %822
  store i64 %438, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %831

827:                                              ; preds = %822
  %828 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %829 = zext i32 %823 to i64
  %830 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %828, i64 %829
  br label %831

831:                                              ; preds = %826, %827
  %832 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::lookup_map_t"*), %826 ], [ %830, %827 ]
  %833 = bitcast %"struct.hb_ot_map_t::lookup_map_t"* %821 to i64*
  %834 = bitcast %"struct.hb_ot_map_t::lookup_map_t"* %832 to i64*
  %835 = load i64, i64* %833, align 4
  store i64 %835, i64* %834, align 4
  br label %905

836:                                              ; preds = %820
  %837 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %821, i64 0, i32 2
  %838 = load i32, i32* %837, align 4
  %839 = load i32, i32* %648, align 4
  %840 = icmp ugt i32 %839, %790
  br i1 %840, label %842, label %841, !prof !2

841:                                              ; preds = %836
  store i64 %438, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %848

842:                                              ; preds = %836
  %843 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %844 = zext i32 %790 to i64
  %845 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %843, i64 %844
  %846 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %843, i64 %844, i32 2
  %847 = load i32, i32* %846, align 4
  br label %848

848:                                              ; preds = %841, %842
  %849 = phi i32 [ %442, %841 ], [ %847, %842 ]
  %850 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::lookup_map_t"*), %841 ], [ %845, %842 ]
  %851 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %850, i64 0, i32 2
  %852 = or i32 %849, %838
  store i32 %852, i32* %851, align 4
  %853 = load i32, i32* %648, align 4
  %854 = zext i32 %853 to i64
  %855 = icmp ult i64 %788, %854
  br i1 %855, label %858, label %856, !prof !2

856:                                              ; preds = %848
  store i64 %438, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %857 = load i32, i32* %648, align 4
  br label %862

858:                                              ; preds = %848
  %859 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %860 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %859, i64 %788, i32 1
  %861 = load i8, i8* %860, align 2
  br label %862

862:                                              ; preds = %856, %858
  %863 = phi i32 [ %857, %856 ], [ %853, %858 ]
  %864 = phi i8 [ %444, %856 ], [ %861, %858 ]
  %865 = icmp ugt i32 %863, %790
  br i1 %865, label %867, label %866, !prof !2

866:                                              ; preds = %862
  store i64 %438, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %873

867:                                              ; preds = %862
  %868 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %869 = zext i32 %790 to i64
  %870 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %868, i64 %869
  %871 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %868, i64 %869, i32 1
  %872 = load i8, i8* %871, align 2
  br label %873

873:                                              ; preds = %866, %867
  %874 = phi i8 [ %446, %866 ], [ %872, %867 ]
  %875 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::lookup_map_t"*), %866 ], [ %870, %867 ]
  %876 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %875, i64 0, i32 1
  %877 = or i8 %864, -2
  %878 = and i8 %874, %877
  store i8 %878, i8* %876, align 2
  %879 = load i32, i32* %648, align 4
  %880 = zext i32 %879 to i64
  %881 = icmp ult i64 %788, %880
  br i1 %881, label %884, label %882, !prof !2

882:                                              ; preds = %873
  store i64 %438, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %883 = load i32, i32* %648, align 4
  br label %888

884:                                              ; preds = %873
  %885 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %886 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %885, i64 %788, i32 1
  %887 = load i8, i8* %886, align 2
  br label %888

888:                                              ; preds = %882, %884
  %889 = phi i32 [ %883, %882 ], [ %879, %884 ]
  %890 = phi i8 [ %448, %882 ], [ %887, %884 ]
  %891 = icmp ugt i32 %889, %790
  br i1 %891, label %893, label %892, !prof !2

892:                                              ; preds = %888
  store i64 %438, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %899

893:                                              ; preds = %888
  %894 = load %"struct.hb_ot_map_t::lookup_map_t"*, %"struct.hb_ot_map_t::lookup_map_t"** %649, align 8
  %895 = zext i32 %790 to i64
  %896 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %894, i64 %895
  %897 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %894, i64 %895, i32 1
  %898 = load i8, i8* %897, align 2
  br label %899

899:                                              ; preds = %892, %893
  %900 = phi i8 [ %450, %892 ], [ %898, %893 ]
  %901 = phi %"struct.hb_ot_map_t::lookup_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::lookup_map_t"*), %892 ], [ %896, %893 ]
  %902 = getelementptr inbounds %"struct.hb_ot_map_t::lookup_map_t", %"struct.hb_ot_map_t::lookup_map_t"* %901, i64 0, i32 1
  %903 = or i8 %890, -3
  %904 = and i8 %900, %903
  store i8 %904, i8* %902, align 2
  br label %905

905:                                              ; preds = %831, %899
  %906 = phi i32 [ %823, %831 ], [ %790, %899 ]
  %907 = add nuw i32 %789, 1
  %908 = load i32, i32* %648, align 4
  %909 = icmp ult i32 %907, %908
  %910 = add nuw nsw i64 %788, 1
  br i1 %909, label %786, label %777

911:                                              ; preds = %785, %779, %676
  %912 = phi i32 [ %783, %785 ], [ %781, %779 ], [ %677, %676 ]
  %913 = load i32, i32* %650, align 4
  %914 = icmp ult i32 %665, %913
  br i1 %914, label %915, label %984

915:                                              ; preds = %911
  %916 = load %"struct.hb_ot_map_builder_t::stage_info_t"*, %"struct.hb_ot_map_builder_t::stage_info_t"** %651, align 8
  %917 = zext i32 %665 to i64
  %918 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %916, i64 %917, i32 0
  %919 = load i32, i32* %918, align 8
  %920 = icmp eq i32 %919, %663
  br i1 %920, label %921, label %984

921:                                              ; preds = %915
  %922 = load i32, i32* %652, align 4
  %923 = add i32 %922, 1
  %924 = icmp sgt i32 %923, 0
  %925 = select i1 %924, i32 %923, i32 0
  %926 = load i32, i32* %653, align 8
  %927 = icmp slt i32 %926, 0
  br i1 %927, label %960, label %928, !prof !5

928:                                              ; preds = %921
  %929 = icmp ult i32 %926, %925
  br i1 %929, label %930, label %949, !prof !5

930:                                              ; preds = %928, %930
  %931 = phi i32 [ %934, %930 ], [ %926, %928 ]
  %932 = lshr i32 %931, 1
  %933 = add i32 %931, 8
  %934 = add i32 %933, %932
  %935 = icmp ugt i32 %934, %925
  br i1 %935, label %936, label %930

936:                                              ; preds = %930
  %937 = icmp uge i32 %934, %926
  %938 = icmp ult i32 %934, 268435455
  %939 = and i1 %937, %938
  br i1 %939, label %940, label %946, !prof !4

940:                                              ; preds = %936
  %941 = load i8*, i8** %655, align 8
  %942 = zext i32 %934 to i64
  %943 = shl nuw nsw i64 %942, 4
  %944 = call i8* @realloc(i8* %941, i64 %943) #6
  %945 = icmp eq i8* %944, null
  br i1 %945, label %946, label %947, !prof !5

946:                                              ; preds = %940, %936
  store i32 -1, i32* %653, align 8
  br label %960

947:                                              ; preds = %940
  store i8* %944, i8** %655, align 8
  store i32 %934, i32* %653, align 8
  %948 = load i32, i32* %652, align 4
  br label %949

949:                                              ; preds = %947, %928
  %950 = phi i32 [ %948, %947 ], [ %922, %928 ]
  %951 = icmp ugt i32 %925, %950
  br i1 %951, label %952, label %961

952:                                              ; preds = %949
  %953 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %654, align 8
  %954 = zext i32 %950 to i64
  %955 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %953, i64 %954
  %956 = bitcast %"struct.hb_ot_map_t::stage_map_t"* %955 to i8*
  %957 = sub i32 %925, %950
  %958 = zext i32 %957 to i64
  %959 = shl nuw nsw i64 %958, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %956, i8 0, i64 %959, i1 false) #6
  br label %961

960:                                              ; preds = %946, %921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #6
  br label %966

961:                                              ; preds = %952, %949
  store i32 %925, i32* %652, align 4
  %962 = load %"struct.hb_ot_map_t::stage_map_t"*, %"struct.hb_ot_map_t::stage_map_t"** %654, align 8
  %963 = add nsw i32 %925, -1
  %964 = zext i32 %963 to i64
  %965 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %962, i64 %964
  br label %966

966:                                              ; preds = %960, %961
  %967 = phi %"struct.hb_ot_map_t::stage_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_t::stage_map_t"*), %960 ], [ %965, %961 ]
  %968 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %967, i64 0, i32 0
  store i32 %912, i32* %968, align 8
  %969 = load i32, i32* %650, align 4
  %970 = icmp ugt i32 %969, %665
  br i1 %970, label %972, label %971, !prof !2

971:                                              ; preds = %966
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #6
  br label %976

972:                                              ; preds = %966
  %973 = load %"struct.hb_ot_map_builder_t::stage_info_t"*, %"struct.hb_ot_map_builder_t::stage_info_t"** %651, align 8
  %974 = zext i32 %665 to i64
  %975 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %973, i64 %974
  br label %976

976:                                              ; preds = %971, %972
  %977 = phi %"struct.hb_ot_map_builder_t::stage_info_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_ot_map_builder_t::stage_info_t"*), %971 ], [ %975, %972 ]
  %978 = getelementptr inbounds %"struct.hb_ot_map_builder_t::stage_info_t", %"struct.hb_ot_map_builder_t::stage_info_t"* %977, i64 0, i32 1
  %979 = bitcast void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)** %978 to i64*
  %980 = load i64, i64* %979, align 8
  %981 = getelementptr inbounds %"struct.hb_ot_map_t::stage_map_t", %"struct.hb_ot_map_t::stage_map_t"* %967, i64 0, i32 1
  %982 = bitcast void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)** %981 to i64*
  store i64 %980, i64* %982, align 8
  %983 = add i32 %665, 1
  br label %984

984:                                              ; preds = %911, %915, %976
  %985 = phi i32 [ %983, %976 ], [ %665, %915 ], [ %665, %911 ]
  %986 = add nuw i32 %663, 1
  %987 = load i32, i32* %641, align 4
  %988 = icmp ult i32 %986, %987
  br i1 %988, label %662, label %659

989:                                              ; preds = %486
  %990 = getelementptr inbounds %"struct.hb_ot_map_builder_t::feature_info_t", %"struct.hb_ot_map_builder_t::feature_info_t"* %457, i64 %455, i32 5, i64 1
  %991 = load i32, i32* %990, align 4
  br label %992

992:                                              ; preds = %989, %486
  %993 = phi i32 [ %991, %989 ], [ %452, %486 ]
  %994 = load %struct.hb_face_t*, %struct.hb_face_t** %16, align 8
  %995 = load i32, i32* %36, align 4
  %996 = load i32, i32* %38, align 4
  %997 = call i32 @hb_ot_layout_language_find_feature(%struct.hb_face_t* %994, i32 1196445523, i32 %995, i32 %996, i32 %493, i32* %307) #6
  %998 = or i32 %491, %997
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %495, label %513
}

declare i32 @hb_ot_layout_language_get_required_feature(%struct.hb_face_t*, i32, i32, i32, i32*, i32*) local_unnamed_addr #2

declare i32 @hb_ot_layout_language_find_feature(%struct.hb_face_t*, i32, i32, i32, i32, i32*) local_unnamed_addr #2

declare hidden zeroext i1 @_Z31hb_ot_layout_table_find_featureP9hb_face_tjjPj(%struct.hb_face_t*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = lshr i32 %1, 9
  %4 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 3, i32 0, i32 2
  %7 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %8 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = add nsw i32 %9, -1
  br label %13

13:                                               ; preds = %29, %11
  %14 = phi i32 [ %12, %11 ], [ %31, %29 ]
  %15 = phi i32 [ 0, %11 ], [ %30, %29 ]
  %16 = add i32 %15, %14
  %17 = lshr i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %7, i64 %18, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %3, %20
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %13
  %24 = add nsw i32 %17, -1
  br label %29

25:                                               ; preds = %13
  %26 = icmp eq i32 %21, 0
  br i1 %26, label %199, label %27

27:                                               ; preds = %25
  %28 = add nuw nsw i32 %17, 1
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i32 [ %15, %23 ], [ %28, %27 ]
  %31 = phi i32 [ %24, %23 ], [ %14, %27 ]
  %32 = icmp sgt i32 %30, %31
  br i1 %32, label %33, label %13

33:                                               ; preds = %29, %2
  %34 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %35 = add i32 %5, 1
  %36 = icmp eq i32 %5, -1
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 1
  %39 = load i8, i8* %38, align 8, !range !3
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %222, !prof !2

41:                                               ; preds = %33, %37
  %42 = icmp sgt i32 %35, 0
  %43 = select i1 %42, i32 %35, i32 0
  %44 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %159, label %47, !prof !5

47:                                               ; preds = %41
  %48 = icmp ult i32 %45, %43
  br i1 %48, label %49, label %70, !prof !5

49:                                               ; preds = %47, %49
  %50 = phi i32 [ %53, %49 ], [ %45, %47 ]
  %51 = lshr i32 %50, 1
  %52 = add i32 %50, 8
  %53 = add i32 %52, %51
  %54 = icmp ugt i32 %53, %43
  br i1 %54, label %55, label %49

55:                                               ; preds = %49
  %56 = icmp uge i32 %53, %45
  %57 = icmp ult i32 %53, 67108863
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %67, !prof !4

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %61 = bitcast %"struct.hb_set_t::page_t"** %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = zext i32 %53 to i64
  %64 = shl nuw nsw i64 %63, 6
  %65 = tail call i8* @realloc(i8* %62, i64 %64) #6
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %68, !prof !5

67:                                               ; preds = %59, %55
  store i32 -1, i32* %44, align 8
  br label %159

68:                                               ; preds = %59
  store i8* %65, i8** %61, align 8
  store i32 %53, i32* %44, align 8
  %69 = load i32, i32* %4, align 4
  br label %70

70:                                               ; preds = %68, %47
  %71 = phi i32 [ %69, %68 ], [ %5, %47 ]
  %72 = icmp ugt i32 %43, %71
  br i1 %72, label %73, label %82

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %75 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %74, align 8
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %75, i64 %76
  %78 = bitcast %"struct.hb_set_t::page_t"* %77 to i8*
  %79 = sub i32 %43, %71
  %80 = zext i32 %79 to i64
  %81 = shl nuw nsw i64 %80, 6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %81, i1 false) #6
  br label %82

82:                                               ; preds = %73, %70
  store i32 %43, i32* %4, align 4
  %83 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 3, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %118, label %86, !prof !5

86:                                               ; preds = %82
  %87 = icmp ult i32 %84, %43
  br i1 %87, label %88, label %107, !prof !5

88:                                               ; preds = %86, %88
  %89 = phi i32 [ %92, %88 ], [ %84, %86 ]
  %90 = lshr i32 %89, 1
  %91 = add i32 %89, 8
  %92 = add i32 %91, %90
  %93 = icmp ugt i32 %92, %43
  br i1 %93, label %94, label %88

94:                                               ; preds = %88
  %95 = icmp uge i32 %92, %84
  %96 = icmp ult i32 %92, 536870911
  %97 = and i1 %95, %96
  br i1 %97, label %98, label %105, !prof !4

98:                                               ; preds = %94
  %99 = bitcast %"struct.hb_set_t::page_map_t"** %6 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = zext i32 %92 to i64
  %102 = shl nuw nsw i64 %101, 3
  %103 = tail call i8* @realloc(i8* %100, i64 %102) #6
  %104 = icmp eq i8* %103, null
  br i1 %104, label %105, label %106, !prof !5

105:                                              ; preds = %98, %94
  store i32 -1, i32* %83, align 8
  br label %118

106:                                              ; preds = %98
  store i8* %103, i8** %99, align 8
  store i32 %92, i32* %83, align 8
  br label %107

107:                                              ; preds = %106, %86
  %108 = load i32, i32* %8, align 4
  %109 = icmp ugt i32 %43, %108
  br i1 %109, label %110, label %161

110:                                              ; preds = %107
  %111 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %112 = zext i32 %108 to i64
  %113 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %111, i64 %112
  %114 = bitcast %"struct.hb_set_t::page_map_t"* %113 to i8*
  %115 = sub i32 %43, %108
  %116 = zext i32 %115 to i64
  %117 = shl nuw nsw i64 %116, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 %117, i1 false) #6
  br label %161

118:                                              ; preds = %82, %105
  %119 = load i32, i32* %44, align 8
  %120 = load i32, i32* %8, align 4
  %121 = icmp sgt i32 %120, 0
  %122 = select i1 %121, i32 %120, i32 0
  %123 = icmp slt i32 %119, 0
  br i1 %123, label %159, label %124, !prof !5

124:                                              ; preds = %118
  %125 = icmp ult i32 %119, %122
  br i1 %125, label %126, label %146, !prof !5

126:                                              ; preds = %124, %126
  %127 = phi i32 [ %130, %126 ], [ %119, %124 ]
  %128 = lshr i32 %127, 1
  %129 = add i32 %127, 8
  %130 = add i32 %129, %128
  %131 = icmp ugt i32 %130, %122
  br i1 %131, label %132, label %126

132:                                              ; preds = %126
  %133 = icmp uge i32 %130, %119
  %134 = icmp ult i32 %130, 67108863
  %135 = and i1 %133, %134
  br i1 %135, label %136, label %144, !prof !4

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %138 = bitcast %"struct.hb_set_t::page_t"** %137 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = zext i32 %130 to i64
  %141 = shl nuw nsw i64 %140, 6
  %142 = tail call i8* @realloc(i8* %139, i64 %141) #6
  %143 = icmp eq i8* %142, null
  br i1 %143, label %144, label %145, !prof !5

144:                                              ; preds = %136, %132
  store i32 -1, i32* %44, align 8
  br label %159

145:                                              ; preds = %136
  store i8* %142, i8** %138, align 8
  store i32 %130, i32* %44, align 8
  br label %146

146:                                              ; preds = %145, %124
  %147 = load i32, i32* %4, align 4
  %148 = icmp ugt i32 %122, %147
  br i1 %148, label %149, label %158

149:                                              ; preds = %146
  %150 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %151 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %150, align 8
  %152 = zext i32 %147 to i64
  %153 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %151, i64 %152
  %154 = bitcast %"struct.hb_set_t::page_t"* %153 to i8*
  %155 = sub i32 %122, %147
  %156 = zext i32 %155 to i64
  %157 = shl nuw nsw i64 %156, 6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 %157, i1 false) #6
  br label %158

158:                                              ; preds = %149, %146
  store i32 %122, i32* %4, align 4
  br label %159

159:                                              ; preds = %67, %41, %118, %144, %158
  %160 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 1
  store i8 0, i8* %160, align 8
  br label %222

161:                                              ; preds = %107, %110
  store i32 %43, i32* %8, align 4
  %162 = load i32, i32* %4, align 4
  %163 = icmp ugt i32 %162, %5
  br i1 %163, label %165, label %164, !prof !2

164:                                              ; preds = %161
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 64, i1 false) #6
  br label %170

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %167 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %166, align 8
  %168 = zext i32 %5 to i64
  %169 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %167, i64 %168
  br label %170

170:                                              ; preds = %164, %165
  %171 = phi %"struct.hb_set_t::page_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_set_t::page_t"*), %164 ], [ %169, %165 ]
  %172 = bitcast %"struct.hb_set_t::page_t"* %171 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 64, i1 false) #6
  %173 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %174 = zext i32 %34 to i64
  %175 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %173, i64 %174
  %176 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %175, i64 1
  %177 = bitcast %"struct.hb_set_t::page_map_t"* %176 to i8*
  %178 = bitcast %"struct.hb_set_t::page_map_t"* %175 to i8*
  %179 = load i32, i32* %8, align 4
  %180 = xor i32 %34, 536870911
  %181 = add i32 %179, %180
  %182 = shl i32 %181, 3
  %183 = zext i32 %182 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %178, i64 %183, i1 false)
  %184 = load i32, i32* %8, align 4
  %185 = icmp ugt i32 %184, %34
  br i1 %185, label %188, label %186, !prof !2

186:                                              ; preds = %170
  %187 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %187, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %191

188:                                              ; preds = %170
  %189 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %190 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %189, i64 %174
  br label %191

191:                                              ; preds = %186, %188
  %192 = phi %"struct.hb_set_t::page_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_set_t::page_map_t"*), %186 ], [ %190, %188 ]
  %193 = bitcast %"struct.hb_set_t::page_map_t"* %192 to i64*
  %194 = zext i32 %5 to i64
  %195 = shl nuw i64 %194, 32
  %196 = zext i32 %3 to i64
  %197 = or i64 %195, %196
  store i64 %197, i64* %193, align 4
  %198 = load i32, i32* %8, align 4
  br label %199

199:                                              ; preds = %25, %191
  %200 = phi i32 [ %198, %191 ], [ %9, %25 ]
  %201 = phi i32 [ %34, %191 ], [ %17, %25 ]
  %202 = icmp ugt i32 %200, %201
  br i1 %202, label %207, label %203, !prof !2

203:                                              ; preds = %199
  %204 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %204, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %205 = lshr i64 %204, 32
  %206 = trunc i64 %205 to i32
  br label %212

207:                                              ; preds = %199
  %208 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %209 = zext i32 %201 to i64
  %210 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %208, i64 %209, i32 1
  %211 = load i32, i32* %210, align 4
  br label %212

212:                                              ; preds = %203, %207
  %213 = phi i32 [ %206, %203 ], [ %211, %207 ]
  %214 = load i32, i32* %4, align 4
  %215 = icmp ugt i32 %214, %213
  br i1 %215, label %217, label %216, !prof !2

216:                                              ; preds = %212
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 64, i1 false) #6
  br label %222

217:                                              ; preds = %212
  %218 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %219 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %218, align 8
  %220 = zext i32 %213 to i64
  %221 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %219, i64 %220
  br label %222

222:                                              ; preds = %37, %159, %217, %216
  %223 = phi %"struct.hb_set_t::page_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_set_t::page_t"*), %216 ], [ %221, %217 ], [ null, %159 ], [ null, %37 ]
  ret %"struct.hb_set_t::page_t"* %223
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN19hb_ot_map_builder_t14feature_info_t3cmpEPKvS2_(i8*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %0 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = bitcast i8* %1 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = icmp ult i32 %4, %6
  %10 = select i1 %9, i32 -1, i32 1
  br label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %0, i64 4
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i8, i8* %1, i64 4
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %14, %17
  br i1 %18, label %22, label %19

19:                                               ; preds = %11
  %20 = icmp ugt i32 %14, %17
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %19, %11, %8
  %23 = phi i32 [ %10, %8 ], [ %21, %19 ], [ -1, %11 ]
  ret i32 %23
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8*, i64, i64, i32 (i8*, i8*)*) unnamed_addr #4 {
  %5 = mul i64 %1, %2
  %6 = getelementptr inbounds i8, i8* %0, i64 %5
  %7 = icmp ult i64 %1, 10
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = sub i64 0, %2
  %10 = icmp sgt i64 %2, 0
  %11 = sub i64 1, %2
  br label %152

12:                                               ; preds = %1030, %4
  %13 = phi i8* [ %0, %4 ], [ %1033, %1030 ]
  %14 = phi i8* [ %6, %4 ], [ %1036, %1030 ]
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds i8, i8* %13, i64 %2
  %17 = icmp ult i8* %16, %14
  br i1 %17, label %18, label %1038

18:                                               ; preds = %12
  %19 = sub i64 0, %2
  %20 = icmp sgt i64 %2, 0
  br i1 %20, label %21, label %139

21:                                               ; preds = %18, %30
  %22 = phi i64 [ %33, %30 ], [ 0, %18 ]
  %23 = phi i8* [ %31, %30 ], [ %16, %18 ]
  %24 = mul i64 %22, %2
  %25 = add i64 %24, %2
  %26 = add i64 %24, 1
  %27 = mul i64 %22, %2
  %28 = add i64 %27, %15
  %29 = icmp ugt i8* %23, %13
  br i1 %29, label %34, label %30

30:                                               ; preds = %128, %34, %21
  %31 = getelementptr inbounds i8, i8* %23, i64 %2
  %32 = icmp ult i8* %31, %14
  %33 = add i64 %22, 1
  br i1 %32, label %21, label %1038

34:                                               ; preds = %21, %128
  %35 = phi i64 [ %130, %128 ], [ 0, %21 ]
  %36 = phi i8* [ %42, %128 ], [ %23, %21 ]
  %37 = mul i64 %35, %2
  %38 = sub i64 %25, %37
  %39 = getelementptr i8, i8* %13, i64 %38
  %40 = sub i64 %26, %37
  %41 = getelementptr i8, i8* %13, i64 %40
  %42 = getelementptr inbounds i8, i8* %36, i64 %19
  %43 = tail call i32 %3(i8* %42, i8* %36) #6, !callees !7
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %30

45:                                               ; preds = %34
  %46 = icmp ugt i8* %39, %41
  %47 = select i1 %46, i8* %39, i8* %41
  %48 = mul i64 %35, %2
  %49 = sub i64 %48, %28
  %50 = getelementptr i8, i8* %47, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = icmp ult i8* %50, inttoptr (i64 32 to i8*)
  br i1 %52, label %53, label %56

53:                                               ; preds = %126, %45
  %54 = phi i8* [ %42, %45 ], [ %58, %126 ]
  %55 = phi i8* [ %36, %45 ], [ %59, %126 ]
  br label %131

56:                                               ; preds = %45
  %57 = and i64 %51, -32
  %58 = getelementptr i8, i8* %42, i64 %57
  %59 = getelementptr i8, i8* %36, i64 %57
  %60 = add i64 %57, -32
  %61 = lshr exact i64 %60, 5
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %106, label %65

65:                                               ; preds = %56
  %66 = sub nuw nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %103, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %104, %67 ]
  %70 = getelementptr i8, i8* %42, i64 %68
  %71 = getelementptr i8, i8* %36, i64 %68
  %72 = bitcast i8* %70 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !8, !noalias !13
  %74 = getelementptr i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !8, !noalias !13
  %77 = bitcast i8* %71 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1, !alias.scope !13, !noalias !8
  %79 = getelementptr i8, i8* %71, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !13, !noalias !8
  %82 = bitcast i8* %70 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %82, align 1, !alias.scope !8, !noalias !13
  %83 = bitcast i8* %74 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %83, align 1, !alias.scope !8, !noalias !13
  %84 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %84, align 1, !alias.scope !13, !noalias !8
  %85 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %85, align 1, !alias.scope !13, !noalias !8
  %86 = or i64 %68, 32
  %87 = getelementptr i8, i8* %42, i64 %86
  %88 = getelementptr i8, i8* %36, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !8, !noalias !13
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !8, !noalias !13
  %94 = bitcast i8* %88 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !13, !noalias !8
  %96 = getelementptr i8, i8* %88, i64 16
  %97 = bitcast i8* %96 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1, !alias.scope !13, !noalias !8
  %99 = bitcast i8* %87 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %99, align 1, !alias.scope !8, !noalias !13
  %100 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> %98, <16 x i8>* %100, align 1, !alias.scope !8, !noalias !13
  %101 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %101, align 1, !alias.scope !13, !noalias !8
  %102 = bitcast i8* %96 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %102, align 1, !alias.scope !13, !noalias !8
  %103 = add i64 %68, 64
  %104 = add i64 %69, -2
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %67, !llvm.loop !16

106:                                              ; preds = %67, %56
  %107 = phi i64 [ 0, %56 ], [ %103, %67 ]
  %108 = icmp eq i64 %63, 0
  br i1 %108, label %126, label %109

109:                                              ; preds = %106
  %110 = getelementptr i8, i8* %42, i64 %107
  %111 = getelementptr i8, i8* %36, i64 %107
  %112 = bitcast i8* %110 to <16 x i8>*
  %113 = load <16 x i8>, <16 x i8>* %112, align 1, !alias.scope !8, !noalias !13
  %114 = getelementptr i8, i8* %110, i64 16
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1, !alias.scope !8, !noalias !13
  %117 = bitcast i8* %111 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !13, !noalias !8
  %119 = getelementptr i8, i8* %111, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !13, !noalias !8
  %122 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1, !alias.scope !8, !noalias !13
  %123 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %123, align 1, !alias.scope !8, !noalias !13
  %124 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %113, <16 x i8>* %124, align 1, !alias.scope !13, !noalias !8
  %125 = bitcast i8* %119 to <16 x i8>*
  store <16 x i8> %116, <16 x i8>* %125, align 1, !alias.scope !13, !noalias !8
  br label %126

126:                                              ; preds = %106, %109
  %127 = icmp eq i64 %57, %51
  br i1 %127, label %128, label %53

128:                                              ; preds = %131, %126
  %129 = icmp ugt i8* %42, %13
  %130 = add i64 %35, 1
  br i1 %129, label %34, label %30

131:                                              ; preds = %53, %131
  %132 = phi i8* [ %136, %131 ], [ %54, %53 ]
  %133 = phi i8* [ %137, %131 ], [ %55, %53 ]
  %134 = load i8, i8* %132, align 1, !alias.scope !8, !noalias !13
  %135 = load i8, i8* %133, align 1, !alias.scope !13, !noalias !8
  store i8 %135, i8* %132, align 1, !alias.scope !8, !noalias !13
  store i8 %134, i8* %133, align 1, !alias.scope !13, !noalias !8
  %136 = getelementptr inbounds i8, i8* %132, i64 1
  %137 = getelementptr inbounds i8, i8* %133, i64 1
  %138 = icmp ult i8* %136, %36
  br i1 %138, label %131, label %128, !llvm.loop !18

139:                                              ; preds = %18, %149
  %140 = phi i8* [ %150, %149 ], [ %16, %18 ]
  %141 = icmp ugt i8* %140, %13
  br i1 %141, label %142, label %149

142:                                              ; preds = %139, %142
  %143 = phi i8* [ %144, %142 ], [ %140, %139 ]
  %144 = getelementptr inbounds i8, i8* %143, i64 %19
  %145 = tail call i32 %3(i8* %144, i8* %143) #6, !callees !7
  %146 = icmp sgt i32 %145, 0
  %147 = icmp ugt i8* %144, %13
  %148 = and i1 %146, %147
  br i1 %148, label %142, label %149

149:                                              ; preds = %142, %139
  %150 = getelementptr inbounds i8, i8* %140, i64 %2
  %151 = icmp ult i8* %150, %14
  br i1 %151, label %139, label %1038

152:                                              ; preds = %8, %1030
  %153 = phi i8* [ %6, %8 ], [ %1036, %1030 ]
  %154 = phi i64 [ %1, %8 ], [ %1034, %1030 ]
  %155 = phi i8* [ %0, %8 ], [ %1033, %1030 ]
  %156 = ptrtoint i8* %155 to i64
  %157 = add i64 %154, -1
  %158 = mul i64 %157, %2
  %159 = getelementptr inbounds i8, i8* %155, i64 %158
  %160 = getelementptr inbounds i8, i8* %155, i64 %2
  %161 = lshr i64 %154, 1
  %162 = mul i64 %161, %2
  %163 = getelementptr inbounds i8, i8* %155, i64 %162
  %164 = getelementptr inbounds i8, i8* %159, i64 %9
  %165 = tail call i32 %3(i8* %160, i8* %163) #6, !callees !7
  %166 = icmp sgt i32 %165, 0
  %167 = select i1 %166, i8* %160, i8* %163
  %168 = select i1 %166, i8* %163, i8* %160
  %169 = tail call i32 %3(i8* %167, i8* %164) #6, !callees !7
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %175

171:                                              ; preds = %152
  %172 = tail call i32 %3(i8* %168, i8* %164) #6, !callees !7
  %173 = icmp sgt i32 %172, 0
  %174 = select i1 %173, i8* %168, i8* %164
  br label %175

175:                                              ; preds = %171, %152
  %176 = phi i8* [ %167, %152 ], [ %174, %171 ]
  %177 = ptrtoint i8* %176 to i64
  %178 = icmp eq i8* %176, %159
  br i1 %178, label %271, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds i8, i8* %176, i64 %2
  br i1 %10, label %181, label %271

181:                                              ; preds = %179
  %182 = getelementptr i8, i8* %176, i64 1
  %183 = icmp ugt i8* %180, %182
  %184 = select i1 %183, i8* %180, i8* %182
  %185 = ptrtoint i8* %184 to i64
  %186 = sub i64 %185, %177
  %187 = icmp ult i64 %186, 32
  br i1 %187, label %260, label %188

188:                                              ; preds = %181
  %189 = and i64 %186, -32
  %190 = getelementptr i8, i8* %176, i64 %189
  %191 = getelementptr i8, i8* %159, i64 %189
  %192 = add i64 %189, -32
  %193 = lshr exact i64 %192, 5
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 1
  %196 = icmp eq i64 %192, 0
  br i1 %196, label %238, label %197

197:                                              ; preds = %188
  %198 = sub nuw nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %235, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %236, %199 ]
  %202 = getelementptr i8, i8* %176, i64 %200
  %203 = getelementptr i8, i8* %159, i64 %200
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !20, !noalias !23
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !20, !noalias !23
  %209 = bitcast i8* %203 to <16 x i8>*
  %210 = load <16 x i8>, <16 x i8>* %209, align 1, !alias.scope !23, !noalias !20
  %211 = getelementptr i8, i8* %203, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !23, !noalias !20
  %214 = bitcast i8* %202 to <16 x i8>*
  store <16 x i8> %210, <16 x i8>* %214, align 1, !alias.scope !20, !noalias !23
  %215 = bitcast i8* %206 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %215, align 1, !alias.scope !20, !noalias !23
  %216 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %216, align 1, !alias.scope !23, !noalias !20
  %217 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %217, align 1, !alias.scope !23, !noalias !20
  %218 = or i64 %200, 32
  %219 = getelementptr i8, i8* %176, i64 %218
  %220 = getelementptr i8, i8* %159, i64 %218
  %221 = bitcast i8* %219 to <16 x i8>*
  %222 = load <16 x i8>, <16 x i8>* %221, align 1, !alias.scope !20, !noalias !23
  %223 = getelementptr i8, i8* %219, i64 16
  %224 = bitcast i8* %223 to <16 x i8>*
  %225 = load <16 x i8>, <16 x i8>* %224, align 1, !alias.scope !20, !noalias !23
  %226 = bitcast i8* %220 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !23, !noalias !20
  %228 = getelementptr i8, i8* %220, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !23, !noalias !20
  %231 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !20, !noalias !23
  %232 = bitcast i8* %223 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %232, align 1, !alias.scope !20, !noalias !23
  %233 = bitcast i8* %220 to <16 x i8>*
  store <16 x i8> %222, <16 x i8>* %233, align 1, !alias.scope !23, !noalias !20
  %234 = bitcast i8* %228 to <16 x i8>*
  store <16 x i8> %225, <16 x i8>* %234, align 1, !alias.scope !23, !noalias !20
  %235 = add i64 %200, 64
  %236 = add i64 %201, -2
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %199, !llvm.loop !25

238:                                              ; preds = %199, %188
  %239 = phi i64 [ 0, %188 ], [ %235, %199 ]
  %240 = icmp eq i64 %195, 0
  br i1 %240, label %258, label %241

241:                                              ; preds = %238
  %242 = getelementptr i8, i8* %176, i64 %239
  %243 = getelementptr i8, i8* %159, i64 %239
  %244 = bitcast i8* %242 to <16 x i8>*
  %245 = load <16 x i8>, <16 x i8>* %244, align 1, !alias.scope !20, !noalias !23
  %246 = getelementptr i8, i8* %242, i64 16
  %247 = bitcast i8* %246 to <16 x i8>*
  %248 = load <16 x i8>, <16 x i8>* %247, align 1, !alias.scope !20, !noalias !23
  %249 = bitcast i8* %243 to <16 x i8>*
  %250 = load <16 x i8>, <16 x i8>* %249, align 1, !alias.scope !23, !noalias !20
  %251 = getelementptr i8, i8* %243, i64 16
  %252 = bitcast i8* %251 to <16 x i8>*
  %253 = load <16 x i8>, <16 x i8>* %252, align 1, !alias.scope !23, !noalias !20
  %254 = bitcast i8* %242 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %254, align 1, !alias.scope !20, !noalias !23
  %255 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %253, <16 x i8>* %255, align 1, !alias.scope !20, !noalias !23
  %256 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %245, <16 x i8>* %256, align 1, !alias.scope !23, !noalias !20
  %257 = bitcast i8* %251 to <16 x i8>*
  store <16 x i8> %248, <16 x i8>* %257, align 1, !alias.scope !23, !noalias !20
  br label %258

258:                                              ; preds = %238, %241
  %259 = icmp eq i64 %186, %189
  br i1 %259, label %271, label %260

260:                                              ; preds = %258, %181
  %261 = phi i8* [ %176, %181 ], [ %190, %258 ]
  %262 = phi i8* [ %159, %181 ], [ %191, %258 ]
  br label %263

263:                                              ; preds = %260, %263
  %264 = phi i8* [ %268, %263 ], [ %261, %260 ]
  %265 = phi i8* [ %269, %263 ], [ %262, %260 ]
  %266 = load i8, i8* %264, align 1, !alias.scope !20, !noalias !23
  %267 = load i8, i8* %265, align 1, !alias.scope !23, !noalias !20
  store i8 %267, i8* %264, align 1, !alias.scope !20, !noalias !23
  store i8 %266, i8* %265, align 1, !alias.scope !23, !noalias !20
  %268 = getelementptr inbounds i8, i8* %264, i64 1
  %269 = getelementptr inbounds i8, i8* %265, i64 1
  %270 = icmp ult i8* %268, %180
  br i1 %270, label %263, label %271, !llvm.loop !26

271:                                              ; preds = %263, %258, %179, %175
  %272 = icmp sgt i64 %158, 0
  br i1 %272, label %273, label %635

273:                                              ; preds = %271, %630
  %274 = phi i8* [ %631, %630 ], [ %159, %271 ]
  %275 = phi i8* [ %633, %630 ], [ %159, %271 ]
  %276 = phi i8* [ %395, %630 ], [ %155, %271 ]
  %277 = phi i8* [ %632, %630 ], [ %155, %271 ]
  %278 = ptrtoint i8* %275 to i64
  %279 = icmp ult i8* %277, %275
  br i1 %279, label %280, label %635

280:                                              ; preds = %273
  br i1 %10, label %281, label %388

281:                                              ; preds = %280, %384
  %282 = phi i8* [ %385, %384 ], [ %276, %280 ]
  %283 = phi i8* [ %386, %384 ], [ %277, %280 ]
  %284 = ptrtoint i8* %282 to i64
  %285 = tail call i32 %3(i8* %283, i8* %159) #6, !callees !7
  %286 = icmp sgt i32 %285, 0
  br i1 %286, label %393, label %287

287:                                              ; preds = %281
  %288 = icmp eq i32 %285, 0
  br i1 %288, label %289, label %384

289:                                              ; preds = %287
  %290 = icmp ult i8* %282, %283
  br i1 %290, label %291, label %382

291:                                              ; preds = %289
  %292 = getelementptr inbounds i8, i8* %282, i64 %2
  %293 = getelementptr i8, i8* %282, i64 1
  %294 = icmp ugt i8* %292, %293
  %295 = select i1 %294, i8* %292, i8* %293
  %296 = ptrtoint i8* %295 to i64
  %297 = sub i64 %296, %284
  %298 = icmp ult i64 %297, 32
  br i1 %298, label %371, label %299

299:                                              ; preds = %291
  %300 = and i64 %297, -32
  %301 = getelementptr i8, i8* %282, i64 %300
  %302 = getelementptr i8, i8* %283, i64 %300
  %303 = add i64 %300, -32
  %304 = lshr exact i64 %303, 5
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 1
  %307 = icmp eq i64 %303, 0
  br i1 %307, label %349, label %308

308:                                              ; preds = %299
  %309 = sub nuw nsw i64 %305, %306
  br label %310

310:                                              ; preds = %310, %308
  %311 = phi i64 [ 0, %308 ], [ %346, %310 ]
  %312 = phi i64 [ %309, %308 ], [ %347, %310 ]
  %313 = getelementptr i8, i8* %282, i64 %311
  %314 = getelementptr i8, i8* %283, i64 %311
  %315 = bitcast i8* %313 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !27, !noalias !30
  %317 = getelementptr i8, i8* %313, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !27, !noalias !30
  %320 = bitcast i8* %314 to <16 x i8>*
  %321 = load <16 x i8>, <16 x i8>* %320, align 1, !alias.scope !30, !noalias !27
  %322 = getelementptr i8, i8* %314, i64 16
  %323 = bitcast i8* %322 to <16 x i8>*
  %324 = load <16 x i8>, <16 x i8>* %323, align 1, !alias.scope !30, !noalias !27
  %325 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %321, <16 x i8>* %325, align 1, !alias.scope !27, !noalias !30
  %326 = bitcast i8* %317 to <16 x i8>*
  store <16 x i8> %324, <16 x i8>* %326, align 1, !alias.scope !27, !noalias !30
  %327 = bitcast i8* %314 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %327, align 1, !alias.scope !30, !noalias !27
  %328 = bitcast i8* %322 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %328, align 1, !alias.scope !30, !noalias !27
  %329 = or i64 %311, 32
  %330 = getelementptr i8, i8* %282, i64 %329
  %331 = getelementptr i8, i8* %283, i64 %329
  %332 = bitcast i8* %330 to <16 x i8>*
  %333 = load <16 x i8>, <16 x i8>* %332, align 1, !alias.scope !27, !noalias !30
  %334 = getelementptr i8, i8* %330, i64 16
  %335 = bitcast i8* %334 to <16 x i8>*
  %336 = load <16 x i8>, <16 x i8>* %335, align 1, !alias.scope !27, !noalias !30
  %337 = bitcast i8* %331 to <16 x i8>*
  %338 = load <16 x i8>, <16 x i8>* %337, align 1, !alias.scope !30, !noalias !27
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  %341 = load <16 x i8>, <16 x i8>* %340, align 1, !alias.scope !30, !noalias !27
  %342 = bitcast i8* %330 to <16 x i8>*
  store <16 x i8> %338, <16 x i8>* %342, align 1, !alias.scope !27, !noalias !30
  %343 = bitcast i8* %334 to <16 x i8>*
  store <16 x i8> %341, <16 x i8>* %343, align 1, !alias.scope !27, !noalias !30
  %344 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %333, <16 x i8>* %344, align 1, !alias.scope !30, !noalias !27
  %345 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %336, <16 x i8>* %345, align 1, !alias.scope !30, !noalias !27
  %346 = add i64 %311, 64
  %347 = add i64 %312, -2
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %310, !llvm.loop !32

349:                                              ; preds = %310, %299
  %350 = phi i64 [ 0, %299 ], [ %346, %310 ]
  %351 = icmp eq i64 %306, 0
  br i1 %351, label %369, label %352

352:                                              ; preds = %349
  %353 = getelementptr i8, i8* %282, i64 %350
  %354 = getelementptr i8, i8* %283, i64 %350
  %355 = bitcast i8* %353 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !27, !noalias !30
  %357 = getelementptr i8, i8* %353, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !27, !noalias !30
  %360 = bitcast i8* %354 to <16 x i8>*
  %361 = load <16 x i8>, <16 x i8>* %360, align 1, !alias.scope !30, !noalias !27
  %362 = getelementptr i8, i8* %354, i64 16
  %363 = bitcast i8* %362 to <16 x i8>*
  %364 = load <16 x i8>, <16 x i8>* %363, align 1, !alias.scope !30, !noalias !27
  %365 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %361, <16 x i8>* %365, align 1, !alias.scope !27, !noalias !30
  %366 = bitcast i8* %357 to <16 x i8>*
  store <16 x i8> %364, <16 x i8>* %366, align 1, !alias.scope !27, !noalias !30
  %367 = bitcast i8* %354 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %367, align 1, !alias.scope !30, !noalias !27
  %368 = bitcast i8* %362 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %368, align 1, !alias.scope !30, !noalias !27
  br label %369

369:                                              ; preds = %349, %352
  %370 = icmp eq i64 %297, %300
  br i1 %370, label %382, label %371

371:                                              ; preds = %369, %291
  %372 = phi i8* [ %282, %291 ], [ %301, %369 ]
  %373 = phi i8* [ %283, %291 ], [ %302, %369 ]
  br label %374

374:                                              ; preds = %371, %374
  %375 = phi i8* [ %379, %374 ], [ %372, %371 ]
  %376 = phi i8* [ %380, %374 ], [ %373, %371 ]
  %377 = load i8, i8* %375, align 1, !alias.scope !27, !noalias !30
  %378 = load i8, i8* %376, align 1, !alias.scope !30, !noalias !27
  store i8 %378, i8* %375, align 1, !alias.scope !27, !noalias !30
  store i8 %377, i8* %376, align 1, !alias.scope !30, !noalias !27
  %379 = getelementptr inbounds i8, i8* %375, i64 1
  %380 = getelementptr inbounds i8, i8* %376, i64 1
  %381 = icmp ult i8* %379, %292
  br i1 %381, label %374, label %382, !llvm.loop !33

382:                                              ; preds = %374, %369, %289
  %383 = getelementptr inbounds i8, i8* %282, i64 %2
  br label %384

384:                                              ; preds = %382, %287
  %385 = phi i8* [ %383, %382 ], [ %282, %287 ]
  %386 = getelementptr inbounds i8, i8* %283, i64 %2
  %387 = icmp ult i8* %386, %275
  br i1 %387, label %281, label %635

388:                                              ; preds = %280, %513
  %389 = phi i8* [ %516, %513 ], [ %276, %280 ]
  %390 = phi i8* [ %517, %513 ], [ %277, %280 ]
  %391 = tail call i32 %3(i8* %390, i8* %159) #6, !callees !7
  %392 = icmp sgt i32 %391, 0
  br i1 %392, label %393, label %513

393:                                              ; preds = %388, %281
  %394 = phi i8* [ %283, %281 ], [ %390, %388 ]
  %395 = phi i8* [ %282, %281 ], [ %389, %388 ]
  %396 = ptrtoint i8* %394 to i64
  %397 = icmp ult i8* %394, %275
  br i1 %397, label %398, label %630

398:                                              ; preds = %393
  br i1 %10, label %399, label %519

399:                                              ; preds = %398
  %400 = sub i64 %2, %278
  br label %401

401:                                              ; preds = %399, %509
  %402 = phi i64 [ 0, %399 ], [ %512, %509 ]
  %403 = phi i8* [ %274, %399 ], [ %510, %509 ]
  %404 = phi i8* [ %275, %399 ], [ %415, %509 ]
  %405 = mul i64 %402, %2
  %406 = sub i64 0, %405
  %407 = getelementptr i8, i8* %275, i64 %406
  %408 = sub i64 %11, %405
  %409 = getelementptr i8, i8* %275, i64 %408
  %410 = icmp ugt i8* %407, %409
  %411 = select i1 %410, i8* %407, i8* %409
  %412 = mul i64 %402, %2
  %413 = add i64 %400, %412
  %414 = getelementptr i8, i8* %411, i64 %413
  %415 = getelementptr inbounds i8, i8* %404, i64 %9
  %416 = tail call i32 %3(i8* %415, i8* %159) #6, !callees !7
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %420, label %418

418:                                              ; preds = %401
  %419 = icmp slt i32 %416, 0
  br i1 %419, label %529, label %509

420:                                              ; preds = %401
  %421 = getelementptr inbounds i8, i8* %403, i64 %9
  %422 = icmp ult i8* %404, %403
  br i1 %422, label %423, label %509

423:                                              ; preds = %420
  %424 = ptrtoint i8* %414 to i64
  %425 = icmp ult i8* %414, inttoptr (i64 32 to i8*)
  br i1 %425, label %498, label %426

426:                                              ; preds = %423
  %427 = and i64 %424, -32
  %428 = getelementptr i8, i8* %415, i64 %427
  %429 = getelementptr i8, i8* %421, i64 %427
  %430 = add i64 %427, -32
  %431 = lshr exact i64 %430, 5
  %432 = add nuw nsw i64 %431, 1
  %433 = and i64 %432, 1
  %434 = icmp eq i64 %430, 0
  br i1 %434, label %476, label %435

435:                                              ; preds = %426
  %436 = sub nuw nsw i64 %432, %433
  br label %437

437:                                              ; preds = %437, %435
  %438 = phi i64 [ 0, %435 ], [ %473, %437 ]
  %439 = phi i64 [ %436, %435 ], [ %474, %437 ]
  %440 = getelementptr i8, i8* %415, i64 %438
  %441 = getelementptr i8, i8* %421, i64 %438
  %442 = bitcast i8* %440 to <16 x i8>*
  %443 = load <16 x i8>, <16 x i8>* %442, align 1, !alias.scope !34, !noalias !37
  %444 = getelementptr i8, i8* %440, i64 16
  %445 = bitcast i8* %444 to <16 x i8>*
  %446 = load <16 x i8>, <16 x i8>* %445, align 1, !alias.scope !34, !noalias !37
  %447 = bitcast i8* %441 to <16 x i8>*
  %448 = load <16 x i8>, <16 x i8>* %447, align 1, !alias.scope !37, !noalias !34
  %449 = getelementptr i8, i8* %441, i64 16
  %450 = bitcast i8* %449 to <16 x i8>*
  %451 = load <16 x i8>, <16 x i8>* %450, align 1, !alias.scope !37, !noalias !34
  %452 = bitcast i8* %440 to <16 x i8>*
  store <16 x i8> %448, <16 x i8>* %452, align 1, !alias.scope !34, !noalias !37
  %453 = bitcast i8* %444 to <16 x i8>*
  store <16 x i8> %451, <16 x i8>* %453, align 1, !alias.scope !34, !noalias !37
  %454 = bitcast i8* %441 to <16 x i8>*
  store <16 x i8> %443, <16 x i8>* %454, align 1, !alias.scope !37, !noalias !34
  %455 = bitcast i8* %449 to <16 x i8>*
  store <16 x i8> %446, <16 x i8>* %455, align 1, !alias.scope !37, !noalias !34
  %456 = or i64 %438, 32
  %457 = getelementptr i8, i8* %415, i64 %456
  %458 = getelementptr i8, i8* %421, i64 %456
  %459 = bitcast i8* %457 to <16 x i8>*
  %460 = load <16 x i8>, <16 x i8>* %459, align 1, !alias.scope !34, !noalias !37
  %461 = getelementptr i8, i8* %457, i64 16
  %462 = bitcast i8* %461 to <16 x i8>*
  %463 = load <16 x i8>, <16 x i8>* %462, align 1, !alias.scope !34, !noalias !37
  %464 = bitcast i8* %458 to <16 x i8>*
  %465 = load <16 x i8>, <16 x i8>* %464, align 1, !alias.scope !37, !noalias !34
  %466 = getelementptr i8, i8* %458, i64 16
  %467 = bitcast i8* %466 to <16 x i8>*
  %468 = load <16 x i8>, <16 x i8>* %467, align 1, !alias.scope !37, !noalias !34
  %469 = bitcast i8* %457 to <16 x i8>*
  store <16 x i8> %465, <16 x i8>* %469, align 1, !alias.scope !34, !noalias !37
  %470 = bitcast i8* %461 to <16 x i8>*
  store <16 x i8> %468, <16 x i8>* %470, align 1, !alias.scope !34, !noalias !37
  %471 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %460, <16 x i8>* %471, align 1, !alias.scope !37, !noalias !34
  %472 = bitcast i8* %466 to <16 x i8>*
  store <16 x i8> %463, <16 x i8>* %472, align 1, !alias.scope !37, !noalias !34
  %473 = add i64 %438, 64
  %474 = add i64 %439, -2
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %476, label %437, !llvm.loop !39

476:                                              ; preds = %437, %426
  %477 = phi i64 [ 0, %426 ], [ %473, %437 ]
  %478 = icmp eq i64 %433, 0
  br i1 %478, label %496, label %479

479:                                              ; preds = %476
  %480 = getelementptr i8, i8* %415, i64 %477
  %481 = getelementptr i8, i8* %421, i64 %477
  %482 = bitcast i8* %480 to <16 x i8>*
  %483 = load <16 x i8>, <16 x i8>* %482, align 1, !alias.scope !34, !noalias !37
  %484 = getelementptr i8, i8* %480, i64 16
  %485 = bitcast i8* %484 to <16 x i8>*
  %486 = load <16 x i8>, <16 x i8>* %485, align 1, !alias.scope !34, !noalias !37
  %487 = bitcast i8* %481 to <16 x i8>*
  %488 = load <16 x i8>, <16 x i8>* %487, align 1, !alias.scope !37, !noalias !34
  %489 = getelementptr i8, i8* %481, i64 16
  %490 = bitcast i8* %489 to <16 x i8>*
  %491 = load <16 x i8>, <16 x i8>* %490, align 1, !alias.scope !37, !noalias !34
  %492 = bitcast i8* %480 to <16 x i8>*
  store <16 x i8> %488, <16 x i8>* %492, align 1, !alias.scope !34, !noalias !37
  %493 = bitcast i8* %484 to <16 x i8>*
  store <16 x i8> %491, <16 x i8>* %493, align 1, !alias.scope !34, !noalias !37
  %494 = bitcast i8* %481 to <16 x i8>*
  store <16 x i8> %483, <16 x i8>* %494, align 1, !alias.scope !37, !noalias !34
  %495 = bitcast i8* %489 to <16 x i8>*
  store <16 x i8> %486, <16 x i8>* %495, align 1, !alias.scope !37, !noalias !34
  br label %496

496:                                              ; preds = %476, %479
  %497 = icmp eq i64 %427, %424
  br i1 %497, label %509, label %498

498:                                              ; preds = %496, %423
  %499 = phi i8* [ %415, %423 ], [ %428, %496 ]
  %500 = phi i8* [ %421, %423 ], [ %429, %496 ]
  br label %501

501:                                              ; preds = %498, %501
  %502 = phi i8* [ %506, %501 ], [ %499, %498 ]
  %503 = phi i8* [ %507, %501 ], [ %500, %498 ]
  %504 = load i8, i8* %502, align 1, !alias.scope !34, !noalias !37
  %505 = load i8, i8* %503, align 1, !alias.scope !37, !noalias !34
  store i8 %505, i8* %502, align 1, !alias.scope !34, !noalias !37
  store i8 %504, i8* %503, align 1, !alias.scope !37, !noalias !34
  %506 = getelementptr inbounds i8, i8* %502, i64 1
  %507 = getelementptr inbounds i8, i8* %503, i64 1
  %508 = icmp ult i8* %506, %404
  br i1 %508, label %501, label %509, !llvm.loop !40

509:                                              ; preds = %501, %496, %420, %418
  %510 = phi i8* [ %421, %420 ], [ %403, %418 ], [ %421, %496 ], [ %421, %501 ]
  %511 = icmp ult i8* %394, %415
  %512 = add i64 %402, 1
  br i1 %511, label %401, label %630

513:                                              ; preds = %388
  %514 = icmp eq i32 %391, 0
  %515 = getelementptr inbounds i8, i8* %389, i64 %2
  %516 = select i1 %514, i8* %515, i8* %389
  %517 = getelementptr inbounds i8, i8* %390, i64 %2
  %518 = icmp ult i8* %517, %275
  br i1 %518, label %388, label %635

519:                                              ; preds = %398, %627
  %520 = phi i8* [ %628, %627 ], [ %274, %398 ]
  %521 = phi i8* [ %522, %627 ], [ %275, %398 ]
  %522 = getelementptr inbounds i8, i8* %521, i64 %9
  %523 = tail call i32 %3(i8* %522, i8* %159) #6, !callees !7
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %527

525:                                              ; preds = %519
  %526 = getelementptr inbounds i8, i8* %520, i64 %9
  br label %627

527:                                              ; preds = %519
  %528 = icmp slt i32 %523, 0
  br i1 %528, label %529, label %627

529:                                              ; preds = %527, %418
  %530 = phi i8* [ %415, %418 ], [ %522, %527 ]
  %531 = phi i8* [ %403, %418 ], [ %520, %527 ]
  %532 = icmp ult i8* %394, %530
  br i1 %532, label %533, label %625

533:                                              ; preds = %529
  %534 = getelementptr inbounds i8, i8* %394, i64 %2
  br i1 %10, label %535, label %625

535:                                              ; preds = %533
  %536 = getelementptr i8, i8* %394, i64 1
  %537 = icmp ugt i8* %534, %536
  %538 = select i1 %537, i8* %534, i8* %536
  %539 = ptrtoint i8* %538 to i64
  %540 = sub i64 %539, %396
  %541 = icmp ult i64 %540, 32
  br i1 %541, label %614, label %542

542:                                              ; preds = %535
  %543 = and i64 %540, -32
  %544 = getelementptr i8, i8* %394, i64 %543
  %545 = getelementptr i8, i8* %530, i64 %543
  %546 = add i64 %543, -32
  %547 = lshr exact i64 %546, 5
  %548 = add nuw nsw i64 %547, 1
  %549 = and i64 %548, 1
  %550 = icmp eq i64 %546, 0
  br i1 %550, label %592, label %551

551:                                              ; preds = %542
  %552 = sub nuw nsw i64 %548, %549
  br label %553

553:                                              ; preds = %553, %551
  %554 = phi i64 [ 0, %551 ], [ %589, %553 ]
  %555 = phi i64 [ %552, %551 ], [ %590, %553 ]
  %556 = getelementptr i8, i8* %394, i64 %554
  %557 = getelementptr i8, i8* %530, i64 %554
  %558 = bitcast i8* %556 to <16 x i8>*
  %559 = load <16 x i8>, <16 x i8>* %558, align 1, !alias.scope !41, !noalias !44
  %560 = getelementptr i8, i8* %556, i64 16
  %561 = bitcast i8* %560 to <16 x i8>*
  %562 = load <16 x i8>, <16 x i8>* %561, align 1, !alias.scope !41, !noalias !44
  %563 = bitcast i8* %557 to <16 x i8>*
  %564 = load <16 x i8>, <16 x i8>* %563, align 1, !alias.scope !44, !noalias !41
  %565 = getelementptr i8, i8* %557, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  %567 = load <16 x i8>, <16 x i8>* %566, align 1, !alias.scope !44, !noalias !41
  %568 = bitcast i8* %556 to <16 x i8>*
  store <16 x i8> %564, <16 x i8>* %568, align 1, !alias.scope !41, !noalias !44
  %569 = bitcast i8* %560 to <16 x i8>*
  store <16 x i8> %567, <16 x i8>* %569, align 1, !alias.scope !41, !noalias !44
  %570 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %559, <16 x i8>* %570, align 1, !alias.scope !44, !noalias !41
  %571 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %562, <16 x i8>* %571, align 1, !alias.scope !44, !noalias !41
  %572 = or i64 %554, 32
  %573 = getelementptr i8, i8* %394, i64 %572
  %574 = getelementptr i8, i8* %530, i64 %572
  %575 = bitcast i8* %573 to <16 x i8>*
  %576 = load <16 x i8>, <16 x i8>* %575, align 1, !alias.scope !41, !noalias !44
  %577 = getelementptr i8, i8* %573, i64 16
  %578 = bitcast i8* %577 to <16 x i8>*
  %579 = load <16 x i8>, <16 x i8>* %578, align 1, !alias.scope !41, !noalias !44
  %580 = bitcast i8* %574 to <16 x i8>*
  %581 = load <16 x i8>, <16 x i8>* %580, align 1, !alias.scope !44, !noalias !41
  %582 = getelementptr i8, i8* %574, i64 16
  %583 = bitcast i8* %582 to <16 x i8>*
  %584 = load <16 x i8>, <16 x i8>* %583, align 1, !alias.scope !44, !noalias !41
  %585 = bitcast i8* %573 to <16 x i8>*
  store <16 x i8> %581, <16 x i8>* %585, align 1, !alias.scope !41, !noalias !44
  %586 = bitcast i8* %577 to <16 x i8>*
  store <16 x i8> %584, <16 x i8>* %586, align 1, !alias.scope !41, !noalias !44
  %587 = bitcast i8* %574 to <16 x i8>*
  store <16 x i8> %576, <16 x i8>* %587, align 1, !alias.scope !44, !noalias !41
  %588 = bitcast i8* %582 to <16 x i8>*
  store <16 x i8> %579, <16 x i8>* %588, align 1, !alias.scope !44, !noalias !41
  %589 = add i64 %554, 64
  %590 = add i64 %555, -2
  %591 = icmp eq i64 %590, 0
  br i1 %591, label %592, label %553, !llvm.loop !46

592:                                              ; preds = %553, %542
  %593 = phi i64 [ 0, %542 ], [ %589, %553 ]
  %594 = icmp eq i64 %549, 0
  br i1 %594, label %612, label %595

595:                                              ; preds = %592
  %596 = getelementptr i8, i8* %394, i64 %593
  %597 = getelementptr i8, i8* %530, i64 %593
  %598 = bitcast i8* %596 to <16 x i8>*
  %599 = load <16 x i8>, <16 x i8>* %598, align 1, !alias.scope !41, !noalias !44
  %600 = getelementptr i8, i8* %596, i64 16
  %601 = bitcast i8* %600 to <16 x i8>*
  %602 = load <16 x i8>, <16 x i8>* %601, align 1, !alias.scope !41, !noalias !44
  %603 = bitcast i8* %597 to <16 x i8>*
  %604 = load <16 x i8>, <16 x i8>* %603, align 1, !alias.scope !44, !noalias !41
  %605 = getelementptr i8, i8* %597, i64 16
  %606 = bitcast i8* %605 to <16 x i8>*
  %607 = load <16 x i8>, <16 x i8>* %606, align 1, !alias.scope !44, !noalias !41
  %608 = bitcast i8* %596 to <16 x i8>*
  store <16 x i8> %604, <16 x i8>* %608, align 1, !alias.scope !41, !noalias !44
  %609 = bitcast i8* %600 to <16 x i8>*
  store <16 x i8> %607, <16 x i8>* %609, align 1, !alias.scope !41, !noalias !44
  %610 = bitcast i8* %597 to <16 x i8>*
  store <16 x i8> %599, <16 x i8>* %610, align 1, !alias.scope !44, !noalias !41
  %611 = bitcast i8* %605 to <16 x i8>*
  store <16 x i8> %602, <16 x i8>* %611, align 1, !alias.scope !44, !noalias !41
  br label %612

612:                                              ; preds = %592, %595
  %613 = icmp eq i64 %540, %543
  br i1 %613, label %625, label %614

614:                                              ; preds = %612, %535
  %615 = phi i8* [ %394, %535 ], [ %544, %612 ]
  %616 = phi i8* [ %530, %535 ], [ %545, %612 ]
  br label %617

617:                                              ; preds = %614, %617
  %618 = phi i8* [ %622, %617 ], [ %615, %614 ]
  %619 = phi i8* [ %623, %617 ], [ %616, %614 ]
  %620 = load i8, i8* %618, align 1, !alias.scope !41, !noalias !44
  %621 = load i8, i8* %619, align 1, !alias.scope !44, !noalias !41
  store i8 %621, i8* %618, align 1, !alias.scope !41, !noalias !44
  store i8 %620, i8* %619, align 1, !alias.scope !44, !noalias !41
  %622 = getelementptr inbounds i8, i8* %618, i64 1
  %623 = getelementptr inbounds i8, i8* %619, i64 1
  %624 = icmp ult i8* %622, %534
  br i1 %624, label %617, label %625, !llvm.loop !47

625:                                              ; preds = %617, %612, %533, %529
  %626 = getelementptr inbounds i8, i8* %394, i64 %2
  br label %630

627:                                              ; preds = %525, %527
  %628 = phi i8* [ %526, %525 ], [ %520, %527 ]
  %629 = icmp ult i8* %394, %522
  br i1 %629, label %519, label %630

630:                                              ; preds = %627, %509, %393, %625
  %631 = phi i8* [ %531, %625 ], [ %274, %393 ], [ %510, %509 ], [ %628, %627 ]
  %632 = phi i8* [ %626, %625 ], [ %394, %393 ], [ %394, %509 ], [ %394, %627 ]
  %633 = phi i8* [ %530, %625 ], [ %275, %393 ], [ %415, %509 ], [ %522, %627 ]
  %634 = icmp ult i8* %632, %633
  br i1 %634, label %273, label %635

635:                                              ; preds = %630, %273, %513, %384, %271
  %636 = phi i8* [ %159, %271 ], [ %275, %384 ], [ %275, %513 ], [ %275, %273 ], [ %633, %630 ]
  %637 = phi i8* [ %159, %271 ], [ %274, %384 ], [ %274, %513 ], [ %274, %273 ], [ %631, %630 ]
  %638 = phi i8* [ %155, %271 ], [ %385, %384 ], [ %516, %513 ], [ %276, %273 ], [ %395, %630 ]
  %639 = ptrtoint i8* %636 to i64
  %640 = ptrtoint i8* %638 to i64
  %641 = sub i64 %640, %156
  %642 = sub i64 %639, %640
  %643 = icmp ne i64 %641, 0
  %644 = icmp ne i64 %642, 0
  %645 = and i1 %643, %644
  br i1 %645, label %646, label %834

646:                                              ; preds = %635
  %647 = icmp ugt i64 %641, %642
  br i1 %647, label %648, label %741

648:                                              ; preds = %646
  %649 = getelementptr inbounds i8, i8* %155, i64 %642
  %650 = icmp sgt i64 %642, 0
  br i1 %650, label %651, label %834

651:                                              ; preds = %648
  %652 = getelementptr i8, i8* %155, i64 1
  %653 = icmp ugt i8* %649, %652
  %654 = select i1 %653, i8* %649, i8* %652
  %655 = ptrtoint i8* %654 to i64
  %656 = sub i64 %655, %156
  %657 = icmp ult i64 %656, 32
  br i1 %657, label %730, label %658

658:                                              ; preds = %651
  %659 = and i64 %656, -32
  %660 = getelementptr i8, i8* %155, i64 %659
  %661 = getelementptr i8, i8* %638, i64 %659
  %662 = add i64 %659, -32
  %663 = lshr exact i64 %662, 5
  %664 = add nuw nsw i64 %663, 1
  %665 = and i64 %664, 1
  %666 = icmp eq i64 %662, 0
  br i1 %666, label %708, label %667

667:                                              ; preds = %658
  %668 = sub nuw nsw i64 %664, %665
  br label %669

669:                                              ; preds = %669, %667
  %670 = phi i64 [ 0, %667 ], [ %705, %669 ]
  %671 = phi i64 [ %668, %667 ], [ %706, %669 ]
  %672 = getelementptr i8, i8* %155, i64 %670
  %673 = getelementptr i8, i8* %638, i64 %670
  %674 = bitcast i8* %672 to <16 x i8>*
  %675 = load <16 x i8>, <16 x i8>* %674, align 1, !alias.scope !48, !noalias !51
  %676 = getelementptr i8, i8* %672, i64 16
  %677 = bitcast i8* %676 to <16 x i8>*
  %678 = load <16 x i8>, <16 x i8>* %677, align 1, !alias.scope !48, !noalias !51
  %679 = bitcast i8* %673 to <16 x i8>*
  %680 = load <16 x i8>, <16 x i8>* %679, align 1, !alias.scope !51, !noalias !48
  %681 = getelementptr i8, i8* %673, i64 16
  %682 = bitcast i8* %681 to <16 x i8>*
  %683 = load <16 x i8>, <16 x i8>* %682, align 1, !alias.scope !51, !noalias !48
  %684 = bitcast i8* %672 to <16 x i8>*
  store <16 x i8> %680, <16 x i8>* %684, align 1, !alias.scope !48, !noalias !51
  %685 = bitcast i8* %676 to <16 x i8>*
  store <16 x i8> %683, <16 x i8>* %685, align 1, !alias.scope !48, !noalias !51
  %686 = bitcast i8* %673 to <16 x i8>*
  store <16 x i8> %675, <16 x i8>* %686, align 1, !alias.scope !51, !noalias !48
  %687 = bitcast i8* %681 to <16 x i8>*
  store <16 x i8> %678, <16 x i8>* %687, align 1, !alias.scope !51, !noalias !48
  %688 = or i64 %670, 32
  %689 = getelementptr i8, i8* %155, i64 %688
  %690 = getelementptr i8, i8* %638, i64 %688
  %691 = bitcast i8* %689 to <16 x i8>*
  %692 = load <16 x i8>, <16 x i8>* %691, align 1, !alias.scope !48, !noalias !51
  %693 = getelementptr i8, i8* %689, i64 16
  %694 = bitcast i8* %693 to <16 x i8>*
  %695 = load <16 x i8>, <16 x i8>* %694, align 1, !alias.scope !48, !noalias !51
  %696 = bitcast i8* %690 to <16 x i8>*
  %697 = load <16 x i8>, <16 x i8>* %696, align 1, !alias.scope !51, !noalias !48
  %698 = getelementptr i8, i8* %690, i64 16
  %699 = bitcast i8* %698 to <16 x i8>*
  %700 = load <16 x i8>, <16 x i8>* %699, align 1, !alias.scope !51, !noalias !48
  %701 = bitcast i8* %689 to <16 x i8>*
  store <16 x i8> %697, <16 x i8>* %701, align 1, !alias.scope !48, !noalias !51
  %702 = bitcast i8* %693 to <16 x i8>*
  store <16 x i8> %700, <16 x i8>* %702, align 1, !alias.scope !48, !noalias !51
  %703 = bitcast i8* %690 to <16 x i8>*
  store <16 x i8> %692, <16 x i8>* %703, align 1, !alias.scope !51, !noalias !48
  %704 = bitcast i8* %698 to <16 x i8>*
  store <16 x i8> %695, <16 x i8>* %704, align 1, !alias.scope !51, !noalias !48
  %705 = add i64 %670, 64
  %706 = add i64 %671, -2
  %707 = icmp eq i64 %706, 0
  br i1 %707, label %708, label %669, !llvm.loop !53

708:                                              ; preds = %669, %658
  %709 = phi i64 [ 0, %658 ], [ %705, %669 ]
  %710 = icmp eq i64 %665, 0
  br i1 %710, label %728, label %711

711:                                              ; preds = %708
  %712 = getelementptr i8, i8* %155, i64 %709
  %713 = getelementptr i8, i8* %638, i64 %709
  %714 = bitcast i8* %712 to <16 x i8>*
  %715 = load <16 x i8>, <16 x i8>* %714, align 1, !alias.scope !48, !noalias !51
  %716 = getelementptr i8, i8* %712, i64 16
  %717 = bitcast i8* %716 to <16 x i8>*
  %718 = load <16 x i8>, <16 x i8>* %717, align 1, !alias.scope !48, !noalias !51
  %719 = bitcast i8* %713 to <16 x i8>*
  %720 = load <16 x i8>, <16 x i8>* %719, align 1, !alias.scope !51, !noalias !48
  %721 = getelementptr i8, i8* %713, i64 16
  %722 = bitcast i8* %721 to <16 x i8>*
  %723 = load <16 x i8>, <16 x i8>* %722, align 1, !alias.scope !51, !noalias !48
  %724 = bitcast i8* %712 to <16 x i8>*
  store <16 x i8> %720, <16 x i8>* %724, align 1, !alias.scope !48, !noalias !51
  %725 = bitcast i8* %716 to <16 x i8>*
  store <16 x i8> %723, <16 x i8>* %725, align 1, !alias.scope !48, !noalias !51
  %726 = bitcast i8* %713 to <16 x i8>*
  store <16 x i8> %715, <16 x i8>* %726, align 1, !alias.scope !51, !noalias !48
  %727 = bitcast i8* %721 to <16 x i8>*
  store <16 x i8> %718, <16 x i8>* %727, align 1, !alias.scope !51, !noalias !48
  br label %728

728:                                              ; preds = %708, %711
  %729 = icmp eq i64 %656, %659
  br i1 %729, label %834, label %730

730:                                              ; preds = %728, %651
  %731 = phi i8* [ %155, %651 ], [ %660, %728 ]
  %732 = phi i8* [ %638, %651 ], [ %661, %728 ]
  br label %733

733:                                              ; preds = %730, %733
  %734 = phi i8* [ %738, %733 ], [ %731, %730 ]
  %735 = phi i8* [ %739, %733 ], [ %732, %730 ]
  %736 = load i8, i8* %734, align 1, !alias.scope !48, !noalias !51
  %737 = load i8, i8* %735, align 1, !alias.scope !51, !noalias !48
  store i8 %737, i8* %734, align 1, !alias.scope !48, !noalias !51
  store i8 %736, i8* %735, align 1, !alias.scope !51, !noalias !48
  %738 = getelementptr inbounds i8, i8* %734, i64 1
  %739 = getelementptr inbounds i8, i8* %735, i64 1
  %740 = icmp ult i8* %738, %649
  br i1 %740, label %733, label %834, !llvm.loop !54

741:                                              ; preds = %646
  %742 = icmp sgt i64 %641, 0
  br i1 %742, label %743, label %834

743:                                              ; preds = %741
  %744 = getelementptr inbounds i8, i8* %155, i64 %642
  %745 = getelementptr i8, i8* %155, i64 1
  %746 = icmp ugt i8* %638, %745
  %747 = select i1 %746, i8* %638, i8* %745
  %748 = ptrtoint i8* %747 to i64
  %749 = sub i64 %748, %156
  %750 = icmp ult i64 %749, 32
  br i1 %750, label %823, label %751

751:                                              ; preds = %743
  %752 = and i64 %749, -32
  %753 = getelementptr i8, i8* %155, i64 %752
  %754 = getelementptr i8, i8* %744, i64 %752
  %755 = add i64 %752, -32
  %756 = lshr exact i64 %755, 5
  %757 = add nuw nsw i64 %756, 1
  %758 = and i64 %757, 1
  %759 = icmp eq i64 %755, 0
  br i1 %759, label %801, label %760

760:                                              ; preds = %751
  %761 = sub nuw nsw i64 %757, %758
  br label %762

762:                                              ; preds = %762, %760
  %763 = phi i64 [ 0, %760 ], [ %798, %762 ]
  %764 = phi i64 [ %761, %760 ], [ %799, %762 ]
  %765 = getelementptr i8, i8* %155, i64 %763
  %766 = getelementptr i8, i8* %744, i64 %763
  %767 = bitcast i8* %765 to <16 x i8>*
  %768 = load <16 x i8>, <16 x i8>* %767, align 1, !alias.scope !55, !noalias !58
  %769 = getelementptr i8, i8* %765, i64 16
  %770 = bitcast i8* %769 to <16 x i8>*
  %771 = load <16 x i8>, <16 x i8>* %770, align 1, !alias.scope !55, !noalias !58
  %772 = bitcast i8* %766 to <16 x i8>*
  %773 = load <16 x i8>, <16 x i8>* %772, align 1, !alias.scope !58, !noalias !55
  %774 = getelementptr i8, i8* %766, i64 16
  %775 = bitcast i8* %774 to <16 x i8>*
  %776 = load <16 x i8>, <16 x i8>* %775, align 1, !alias.scope !58, !noalias !55
  %777 = bitcast i8* %765 to <16 x i8>*
  store <16 x i8> %773, <16 x i8>* %777, align 1, !alias.scope !55, !noalias !58
  %778 = bitcast i8* %769 to <16 x i8>*
  store <16 x i8> %776, <16 x i8>* %778, align 1, !alias.scope !55, !noalias !58
  %779 = bitcast i8* %766 to <16 x i8>*
  store <16 x i8> %768, <16 x i8>* %779, align 1, !alias.scope !58, !noalias !55
  %780 = bitcast i8* %774 to <16 x i8>*
  store <16 x i8> %771, <16 x i8>* %780, align 1, !alias.scope !58, !noalias !55
  %781 = or i64 %763, 32
  %782 = getelementptr i8, i8* %155, i64 %781
  %783 = getelementptr i8, i8* %744, i64 %781
  %784 = bitcast i8* %782 to <16 x i8>*
  %785 = load <16 x i8>, <16 x i8>* %784, align 1, !alias.scope !55, !noalias !58
  %786 = getelementptr i8, i8* %782, i64 16
  %787 = bitcast i8* %786 to <16 x i8>*
  %788 = load <16 x i8>, <16 x i8>* %787, align 1, !alias.scope !55, !noalias !58
  %789 = bitcast i8* %783 to <16 x i8>*
  %790 = load <16 x i8>, <16 x i8>* %789, align 1, !alias.scope !58, !noalias !55
  %791 = getelementptr i8, i8* %783, i64 16
  %792 = bitcast i8* %791 to <16 x i8>*
  %793 = load <16 x i8>, <16 x i8>* %792, align 1, !alias.scope !58, !noalias !55
  %794 = bitcast i8* %782 to <16 x i8>*
  store <16 x i8> %790, <16 x i8>* %794, align 1, !alias.scope !55, !noalias !58
  %795 = bitcast i8* %786 to <16 x i8>*
  store <16 x i8> %793, <16 x i8>* %795, align 1, !alias.scope !55, !noalias !58
  %796 = bitcast i8* %783 to <16 x i8>*
  store <16 x i8> %785, <16 x i8>* %796, align 1, !alias.scope !58, !noalias !55
  %797 = bitcast i8* %791 to <16 x i8>*
  store <16 x i8> %788, <16 x i8>* %797, align 1, !alias.scope !58, !noalias !55
  %798 = add i64 %763, 64
  %799 = add i64 %764, -2
  %800 = icmp eq i64 %799, 0
  br i1 %800, label %801, label %762, !llvm.loop !60

801:                                              ; preds = %762, %751
  %802 = phi i64 [ 0, %751 ], [ %798, %762 ]
  %803 = icmp eq i64 %758, 0
  br i1 %803, label %821, label %804

804:                                              ; preds = %801
  %805 = getelementptr i8, i8* %155, i64 %802
  %806 = getelementptr i8, i8* %744, i64 %802
  %807 = bitcast i8* %805 to <16 x i8>*
  %808 = load <16 x i8>, <16 x i8>* %807, align 1, !alias.scope !55, !noalias !58
  %809 = getelementptr i8, i8* %805, i64 16
  %810 = bitcast i8* %809 to <16 x i8>*
  %811 = load <16 x i8>, <16 x i8>* %810, align 1, !alias.scope !55, !noalias !58
  %812 = bitcast i8* %806 to <16 x i8>*
  %813 = load <16 x i8>, <16 x i8>* %812, align 1, !alias.scope !58, !noalias !55
  %814 = getelementptr i8, i8* %806, i64 16
  %815 = bitcast i8* %814 to <16 x i8>*
  %816 = load <16 x i8>, <16 x i8>* %815, align 1, !alias.scope !58, !noalias !55
  %817 = bitcast i8* %805 to <16 x i8>*
  store <16 x i8> %813, <16 x i8>* %817, align 1, !alias.scope !55, !noalias !58
  %818 = bitcast i8* %809 to <16 x i8>*
  store <16 x i8> %816, <16 x i8>* %818, align 1, !alias.scope !55, !noalias !58
  %819 = bitcast i8* %806 to <16 x i8>*
  store <16 x i8> %808, <16 x i8>* %819, align 1, !alias.scope !58, !noalias !55
  %820 = bitcast i8* %814 to <16 x i8>*
  store <16 x i8> %811, <16 x i8>* %820, align 1, !alias.scope !58, !noalias !55
  br label %821

821:                                              ; preds = %801, %804
  %822 = icmp eq i64 %749, %752
  br i1 %822, label %834, label %823

823:                                              ; preds = %821, %743
  %824 = phi i8* [ %155, %743 ], [ %753, %821 ]
  %825 = phi i8* [ %744, %743 ], [ %754, %821 ]
  br label %826

826:                                              ; preds = %823, %826
  %827 = phi i8* [ %831, %826 ], [ %824, %823 ]
  %828 = phi i8* [ %832, %826 ], [ %825, %823 ]
  %829 = load i8, i8* %827, align 1, !alias.scope !55, !noalias !58
  %830 = load i8, i8* %828, align 1, !alias.scope !58, !noalias !55
  store i8 %830, i8* %827, align 1, !alias.scope !55, !noalias !58
  store i8 %829, i8* %828, align 1, !alias.scope !58, !noalias !55
  %831 = getelementptr inbounds i8, i8* %827, i64 1
  %832 = getelementptr inbounds i8, i8* %828, i64 1
  %833 = icmp ult i8* %831, %638
  br i1 %833, label %826, label %834, !llvm.loop !61

834:                                              ; preds = %826, %733, %821, %728, %635, %648, %741
  %835 = ptrtoint i8* %637 to i64
  %836 = sub i64 %835, %639
  %837 = ptrtoint i8* %153 to i64
  %838 = sub i64 %837, %835
  %839 = icmp ne i64 %836, 0
  %840 = icmp ne i64 %838, 0
  %841 = and i1 %839, %840
  br i1 %841, label %842, label %1030

842:                                              ; preds = %834
  %843 = icmp ugt i64 %836, %838
  br i1 %843, label %844, label %937

844:                                              ; preds = %842
  %845 = getelementptr inbounds i8, i8* %636, i64 %838
  %846 = icmp sgt i64 %838, 0
  br i1 %846, label %847, label %1030

847:                                              ; preds = %844
  %848 = getelementptr i8, i8* %636, i64 1
  %849 = icmp ugt i8* %845, %848
  %850 = select i1 %849, i8* %845, i8* %848
  %851 = ptrtoint i8* %850 to i64
  %852 = sub i64 %851, %639
  %853 = icmp ult i64 %852, 32
  br i1 %853, label %926, label %854

854:                                              ; preds = %847
  %855 = and i64 %852, -32
  %856 = getelementptr i8, i8* %636, i64 %855
  %857 = getelementptr i8, i8* %637, i64 %855
  %858 = add i64 %855, -32
  %859 = lshr exact i64 %858, 5
  %860 = add nuw nsw i64 %859, 1
  %861 = and i64 %860, 1
  %862 = icmp eq i64 %858, 0
  br i1 %862, label %904, label %863

863:                                              ; preds = %854
  %864 = sub nuw nsw i64 %860, %861
  br label %865

865:                                              ; preds = %865, %863
  %866 = phi i64 [ 0, %863 ], [ %901, %865 ]
  %867 = phi i64 [ %864, %863 ], [ %902, %865 ]
  %868 = getelementptr i8, i8* %636, i64 %866
  %869 = getelementptr i8, i8* %637, i64 %866
  %870 = bitcast i8* %868 to <16 x i8>*
  %871 = load <16 x i8>, <16 x i8>* %870, align 1, !alias.scope !62, !noalias !65
  %872 = getelementptr i8, i8* %868, i64 16
  %873 = bitcast i8* %872 to <16 x i8>*
  %874 = load <16 x i8>, <16 x i8>* %873, align 1, !alias.scope !62, !noalias !65
  %875 = bitcast i8* %869 to <16 x i8>*
  %876 = load <16 x i8>, <16 x i8>* %875, align 1, !alias.scope !65, !noalias !62
  %877 = getelementptr i8, i8* %869, i64 16
  %878 = bitcast i8* %877 to <16 x i8>*
  %879 = load <16 x i8>, <16 x i8>* %878, align 1, !alias.scope !65, !noalias !62
  %880 = bitcast i8* %868 to <16 x i8>*
  store <16 x i8> %876, <16 x i8>* %880, align 1, !alias.scope !62, !noalias !65
  %881 = bitcast i8* %872 to <16 x i8>*
  store <16 x i8> %879, <16 x i8>* %881, align 1, !alias.scope !62, !noalias !65
  %882 = bitcast i8* %869 to <16 x i8>*
  store <16 x i8> %871, <16 x i8>* %882, align 1, !alias.scope !65, !noalias !62
  %883 = bitcast i8* %877 to <16 x i8>*
  store <16 x i8> %874, <16 x i8>* %883, align 1, !alias.scope !65, !noalias !62
  %884 = or i64 %866, 32
  %885 = getelementptr i8, i8* %636, i64 %884
  %886 = getelementptr i8, i8* %637, i64 %884
  %887 = bitcast i8* %885 to <16 x i8>*
  %888 = load <16 x i8>, <16 x i8>* %887, align 1, !alias.scope !62, !noalias !65
  %889 = getelementptr i8, i8* %885, i64 16
  %890 = bitcast i8* %889 to <16 x i8>*
  %891 = load <16 x i8>, <16 x i8>* %890, align 1, !alias.scope !62, !noalias !65
  %892 = bitcast i8* %886 to <16 x i8>*
  %893 = load <16 x i8>, <16 x i8>* %892, align 1, !alias.scope !65, !noalias !62
  %894 = getelementptr i8, i8* %886, i64 16
  %895 = bitcast i8* %894 to <16 x i8>*
  %896 = load <16 x i8>, <16 x i8>* %895, align 1, !alias.scope !65, !noalias !62
  %897 = bitcast i8* %885 to <16 x i8>*
  store <16 x i8> %893, <16 x i8>* %897, align 1, !alias.scope !62, !noalias !65
  %898 = bitcast i8* %889 to <16 x i8>*
  store <16 x i8> %896, <16 x i8>* %898, align 1, !alias.scope !62, !noalias !65
  %899 = bitcast i8* %886 to <16 x i8>*
  store <16 x i8> %888, <16 x i8>* %899, align 1, !alias.scope !65, !noalias !62
  %900 = bitcast i8* %894 to <16 x i8>*
  store <16 x i8> %891, <16 x i8>* %900, align 1, !alias.scope !65, !noalias !62
  %901 = add i64 %866, 64
  %902 = add i64 %867, -2
  %903 = icmp eq i64 %902, 0
  br i1 %903, label %904, label %865, !llvm.loop !67

904:                                              ; preds = %865, %854
  %905 = phi i64 [ 0, %854 ], [ %901, %865 ]
  %906 = icmp eq i64 %861, 0
  br i1 %906, label %924, label %907

907:                                              ; preds = %904
  %908 = getelementptr i8, i8* %636, i64 %905
  %909 = getelementptr i8, i8* %637, i64 %905
  %910 = bitcast i8* %908 to <16 x i8>*
  %911 = load <16 x i8>, <16 x i8>* %910, align 1, !alias.scope !62, !noalias !65
  %912 = getelementptr i8, i8* %908, i64 16
  %913 = bitcast i8* %912 to <16 x i8>*
  %914 = load <16 x i8>, <16 x i8>* %913, align 1, !alias.scope !62, !noalias !65
  %915 = bitcast i8* %909 to <16 x i8>*
  %916 = load <16 x i8>, <16 x i8>* %915, align 1, !alias.scope !65, !noalias !62
  %917 = getelementptr i8, i8* %909, i64 16
  %918 = bitcast i8* %917 to <16 x i8>*
  %919 = load <16 x i8>, <16 x i8>* %918, align 1, !alias.scope !65, !noalias !62
  %920 = bitcast i8* %908 to <16 x i8>*
  store <16 x i8> %916, <16 x i8>* %920, align 1, !alias.scope !62, !noalias !65
  %921 = bitcast i8* %912 to <16 x i8>*
  store <16 x i8> %919, <16 x i8>* %921, align 1, !alias.scope !62, !noalias !65
  %922 = bitcast i8* %909 to <16 x i8>*
  store <16 x i8> %911, <16 x i8>* %922, align 1, !alias.scope !65, !noalias !62
  %923 = bitcast i8* %917 to <16 x i8>*
  store <16 x i8> %914, <16 x i8>* %923, align 1, !alias.scope !65, !noalias !62
  br label %924

924:                                              ; preds = %904, %907
  %925 = icmp eq i64 %852, %855
  br i1 %925, label %1030, label %926

926:                                              ; preds = %924, %847
  %927 = phi i8* [ %636, %847 ], [ %856, %924 ]
  %928 = phi i8* [ %637, %847 ], [ %857, %924 ]
  br label %929

929:                                              ; preds = %926, %929
  %930 = phi i8* [ %934, %929 ], [ %927, %926 ]
  %931 = phi i8* [ %935, %929 ], [ %928, %926 ]
  %932 = load i8, i8* %930, align 1, !alias.scope !62, !noalias !65
  %933 = load i8, i8* %931, align 1, !alias.scope !65, !noalias !62
  store i8 %933, i8* %930, align 1, !alias.scope !62, !noalias !65
  store i8 %932, i8* %931, align 1, !alias.scope !65, !noalias !62
  %934 = getelementptr inbounds i8, i8* %930, i64 1
  %935 = getelementptr inbounds i8, i8* %931, i64 1
  %936 = icmp ult i8* %934, %845
  br i1 %936, label %929, label %1030, !llvm.loop !68

937:                                              ; preds = %842
  %938 = icmp sgt i64 %836, 0
  br i1 %938, label %939, label %1030

939:                                              ; preds = %937
  %940 = getelementptr inbounds i8, i8* %636, i64 %838
  %941 = getelementptr i8, i8* %636, i64 1
  %942 = icmp ugt i8* %637, %941
  %943 = select i1 %942, i8* %637, i8* %941
  %944 = ptrtoint i8* %943 to i64
  %945 = sub i64 %944, %639
  %946 = icmp ult i64 %945, 32
  br i1 %946, label %1019, label %947

947:                                              ; preds = %939
  %948 = and i64 %945, -32
  %949 = getelementptr i8, i8* %636, i64 %948
  %950 = getelementptr i8, i8* %940, i64 %948
  %951 = add i64 %948, -32
  %952 = lshr exact i64 %951, 5
  %953 = add nuw nsw i64 %952, 1
  %954 = and i64 %953, 1
  %955 = icmp eq i64 %951, 0
  br i1 %955, label %997, label %956

956:                                              ; preds = %947
  %957 = sub nuw nsw i64 %953, %954
  br label %958

958:                                              ; preds = %958, %956
  %959 = phi i64 [ 0, %956 ], [ %994, %958 ]
  %960 = phi i64 [ %957, %956 ], [ %995, %958 ]
  %961 = getelementptr i8, i8* %636, i64 %959
  %962 = getelementptr i8, i8* %940, i64 %959
  %963 = bitcast i8* %961 to <16 x i8>*
  %964 = load <16 x i8>, <16 x i8>* %963, align 1, !alias.scope !69, !noalias !72
  %965 = getelementptr i8, i8* %961, i64 16
  %966 = bitcast i8* %965 to <16 x i8>*
  %967 = load <16 x i8>, <16 x i8>* %966, align 1, !alias.scope !69, !noalias !72
  %968 = bitcast i8* %962 to <16 x i8>*
  %969 = load <16 x i8>, <16 x i8>* %968, align 1, !alias.scope !72, !noalias !69
  %970 = getelementptr i8, i8* %962, i64 16
  %971 = bitcast i8* %970 to <16 x i8>*
  %972 = load <16 x i8>, <16 x i8>* %971, align 1, !alias.scope !72, !noalias !69
  %973 = bitcast i8* %961 to <16 x i8>*
  store <16 x i8> %969, <16 x i8>* %973, align 1, !alias.scope !69, !noalias !72
  %974 = bitcast i8* %965 to <16 x i8>*
  store <16 x i8> %972, <16 x i8>* %974, align 1, !alias.scope !69, !noalias !72
  %975 = bitcast i8* %962 to <16 x i8>*
  store <16 x i8> %964, <16 x i8>* %975, align 1, !alias.scope !72, !noalias !69
  %976 = bitcast i8* %970 to <16 x i8>*
  store <16 x i8> %967, <16 x i8>* %976, align 1, !alias.scope !72, !noalias !69
  %977 = or i64 %959, 32
  %978 = getelementptr i8, i8* %636, i64 %977
  %979 = getelementptr i8, i8* %940, i64 %977
  %980 = bitcast i8* %978 to <16 x i8>*
  %981 = load <16 x i8>, <16 x i8>* %980, align 1, !alias.scope !69, !noalias !72
  %982 = getelementptr i8, i8* %978, i64 16
  %983 = bitcast i8* %982 to <16 x i8>*
  %984 = load <16 x i8>, <16 x i8>* %983, align 1, !alias.scope !69, !noalias !72
  %985 = bitcast i8* %979 to <16 x i8>*
  %986 = load <16 x i8>, <16 x i8>* %985, align 1, !alias.scope !72, !noalias !69
  %987 = getelementptr i8, i8* %979, i64 16
  %988 = bitcast i8* %987 to <16 x i8>*
  %989 = load <16 x i8>, <16 x i8>* %988, align 1, !alias.scope !72, !noalias !69
  %990 = bitcast i8* %978 to <16 x i8>*
  store <16 x i8> %986, <16 x i8>* %990, align 1, !alias.scope !69, !noalias !72
  %991 = bitcast i8* %982 to <16 x i8>*
  store <16 x i8> %989, <16 x i8>* %991, align 1, !alias.scope !69, !noalias !72
  %992 = bitcast i8* %979 to <16 x i8>*
  store <16 x i8> %981, <16 x i8>* %992, align 1, !alias.scope !72, !noalias !69
  %993 = bitcast i8* %987 to <16 x i8>*
  store <16 x i8> %984, <16 x i8>* %993, align 1, !alias.scope !72, !noalias !69
  %994 = add i64 %959, 64
  %995 = add i64 %960, -2
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %958, !llvm.loop !74

997:                                              ; preds = %958, %947
  %998 = phi i64 [ 0, %947 ], [ %994, %958 ]
  %999 = icmp eq i64 %954, 0
  br i1 %999, label %1017, label %1000

1000:                                             ; preds = %997
  %1001 = getelementptr i8, i8* %636, i64 %998
  %1002 = getelementptr i8, i8* %940, i64 %998
  %1003 = bitcast i8* %1001 to <16 x i8>*
  %1004 = load <16 x i8>, <16 x i8>* %1003, align 1, !alias.scope !69, !noalias !72
  %1005 = getelementptr i8, i8* %1001, i64 16
  %1006 = bitcast i8* %1005 to <16 x i8>*
  %1007 = load <16 x i8>, <16 x i8>* %1006, align 1, !alias.scope !69, !noalias !72
  %1008 = bitcast i8* %1002 to <16 x i8>*
  %1009 = load <16 x i8>, <16 x i8>* %1008, align 1, !alias.scope !72, !noalias !69
  %1010 = getelementptr i8, i8* %1002, i64 16
  %1011 = bitcast i8* %1010 to <16 x i8>*
  %1012 = load <16 x i8>, <16 x i8>* %1011, align 1, !alias.scope !72, !noalias !69
  %1013 = bitcast i8* %1001 to <16 x i8>*
  store <16 x i8> %1009, <16 x i8>* %1013, align 1, !alias.scope !69, !noalias !72
  %1014 = bitcast i8* %1005 to <16 x i8>*
  store <16 x i8> %1012, <16 x i8>* %1014, align 1, !alias.scope !69, !noalias !72
  %1015 = bitcast i8* %1002 to <16 x i8>*
  store <16 x i8> %1004, <16 x i8>* %1015, align 1, !alias.scope !72, !noalias !69
  %1016 = bitcast i8* %1010 to <16 x i8>*
  store <16 x i8> %1007, <16 x i8>* %1016, align 1, !alias.scope !72, !noalias !69
  br label %1017

1017:                                             ; preds = %997, %1000
  %1018 = icmp eq i64 %945, %948
  br i1 %1018, label %1030, label %1019

1019:                                             ; preds = %1017, %939
  %1020 = phi i8* [ %636, %939 ], [ %949, %1017 ]
  %1021 = phi i8* [ %940, %939 ], [ %950, %1017 ]
  br label %1022

1022:                                             ; preds = %1019, %1022
  %1023 = phi i8* [ %1027, %1022 ], [ %1020, %1019 ]
  %1024 = phi i8* [ %1028, %1022 ], [ %1021, %1019 ]
  %1025 = load i8, i8* %1023, align 1, !alias.scope !69, !noalias !72
  %1026 = load i8, i8* %1024, align 1, !alias.scope !72, !noalias !69
  store i8 %1026, i8* %1023, align 1, !alias.scope !69, !noalias !72
  store i8 %1025, i8* %1024, align 1, !alias.scope !72, !noalias !69
  %1027 = getelementptr inbounds i8, i8* %1023, i64 1
  %1028 = getelementptr inbounds i8, i8* %1024, i64 1
  %1029 = icmp ult i8* %1027, %637
  br i1 %1029, label %1022, label %1030, !llvm.loop !75

1030:                                             ; preds = %1022, %929, %1017, %924, %834, %844, %937
  %1031 = udiv i64 %642, %2
  tail call fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8* %155, i64 %1031, i64 %2, i32 (i8*, i8*)* %3)
  %1032 = sub i64 0, %836
  %1033 = getelementptr inbounds i8, i8* %153, i64 %1032
  %1034 = udiv i64 %836, %2
  %1035 = mul i64 %1034, %2
  %1036 = getelementptr inbounds i8, i8* %1033, i64 %1035
  %1037 = icmp ult i64 %1034, 10
  br i1 %1037, label %12, label %152

1038:                                             ; preds = %149, %30, %12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11hb_ot_map_t12lookup_map_t3cmpEPKvS2_(i8*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %0 to i16*
  %4 = load i16, i16* %3, align 4
  %5 = bitcast i8* %1 to i16*
  %6 = load i16, i16* %5, align 4
  %7 = icmp ult i16 %4, %6
  %8 = icmp ugt i16 %4, %6
  %9 = zext i1 %8 to i32
  %10 = select i1 %7, i32 -1, i32 %9
  ret i32 %10
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 4000000, i32 4001}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i32 0, i32 33}
!7 = !{i32 (i8*, i8*)* @_ZN11hb_ot_map_t12lookup_map_t3cmpEPKvS2_, i32 (i8*, i8*)* @_ZN19hb_ot_map_builder_t14feature_info_t3cmpEPKvS2_}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZL11sort_r_swapPcS_m: argument 0"}
!10 = distinct !{!10, !"_ZL11sort_r_swapPcS_m"}
!11 = distinct !{!11, !12, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_: argument 0"}
!12 = distinct !{!12, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_"}
!13 = !{!14, !15}
!14 = distinct !{!14, !10, !"_ZL11sort_r_swapPcS_m: argument 1"}
!15 = distinct !{!15, !12, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_: argument 1"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !19, !17}
!19 = !{!"llvm.loop.unroll.runtime.disable"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZL11sort_r_swapPcS_m: argument 0"}
!22 = distinct !{!22, !"_ZL11sort_r_swapPcS_m"}
!23 = !{!24}
!24 = distinct !{!24, !22, !"_ZL11sort_r_swapPcS_m: argument 1"}
!25 = distinct !{!25, !17}
!26 = distinct !{!26, !19, !17}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZL11sort_r_swapPcS_m: argument 0"}
!29 = distinct !{!29, !"_ZL11sort_r_swapPcS_m"}
!30 = !{!31}
!31 = distinct !{!31, !29, !"_ZL11sort_r_swapPcS_m: argument 1"}
!32 = distinct !{!32, !17}
!33 = distinct !{!33, !19, !17}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZL11sort_r_swapPcS_m: argument 0"}
!36 = distinct !{!36, !"_ZL11sort_r_swapPcS_m"}
!37 = !{!38}
!38 = distinct !{!38, !36, !"_ZL11sort_r_swapPcS_m: argument 1"}
!39 = distinct !{!39, !17}
!40 = distinct !{!40, !19, !17}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZL11sort_r_swapPcS_m: argument 0"}
!43 = distinct !{!43, !"_ZL11sort_r_swapPcS_m"}
!44 = !{!45}
!45 = distinct !{!45, !43, !"_ZL11sort_r_swapPcS_m: argument 1"}
!46 = distinct !{!46, !17}
!47 = distinct !{!47, !19, !17}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZL11sort_r_swapPcS_m: argument 0"}
!50 = distinct !{!50, !"_ZL11sort_r_swapPcS_m"}
!51 = !{!52}
!52 = distinct !{!52, !50, !"_ZL11sort_r_swapPcS_m: argument 1"}
!53 = distinct !{!53, !17}
!54 = distinct !{!54, !19, !17}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZL11sort_r_swapPcS_m: argument 0"}
!57 = distinct !{!57, !"_ZL11sort_r_swapPcS_m"}
!58 = !{!59}
!59 = distinct !{!59, !57, !"_ZL11sort_r_swapPcS_m: argument 1"}
!60 = distinct !{!60, !17}
!61 = distinct !{!61, !19, !17}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZL11sort_r_swapPcS_m: argument 0"}
!64 = distinct !{!64, !"_ZL11sort_r_swapPcS_m"}
!65 = !{!66}
!66 = distinct !{!66, !64, !"_ZL11sort_r_swapPcS_m: argument 1"}
!67 = distinct !{!67, !17}
!68 = distinct !{!68, !19, !17}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZL11sort_r_swapPcS_m: argument 0"}
!71 = distinct !{!71, !"_ZL11sort_r_swapPcS_m"}
!72 = !{!73}
!73 = distinct !{!73, !71, !"_ZL11sort_r_swapPcS_m: argument 1"}
!74 = distinct !{!74, !17}
!75 = distinct !{!75, !19, !17}
