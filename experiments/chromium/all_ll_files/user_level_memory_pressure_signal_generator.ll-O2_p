; ModuleID = '../../third_party/blink/renderer/controller/user_level_memory_pressure_signal_generator.cc'
source_filename = "../../third_party/blink/renderer/controller/user_level_memory_pressure_signal_generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::UserLevelMemoryPressureSignalGenerator>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::UserLevelMemoryPressureSignalGenerator>::InstanceStorage" = type { %"class.blink::UserLevelMemoryPressureSignalGenerator"* }
%"class.blink::UserLevelMemoryPressureSignalGenerator" = type { %"class.blink::RAILModeObserver", %"class.blink::MemoryUsageMonitor::Observer", i8, %"class.base::TimeTicks", double, %"class.base::TimeDelta", %"class.blink::TaskRunnerTimer", %"class.base::TickClock"* }
%"class.blink::RAILModeObserver" = type { i32 (...)** }
%"class.blink::MemoryUsageMonitor::Observer" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::UserLevelMemoryPressureSignalGenerator"*, { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.6, %"class.base::WeakPtrFactory.8" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.6 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7" }>
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.8" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TickClock" = type { i32 (...)** }
%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, double }
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.blink::MemoryUsageMonitor" = type { i32 (...)**, %"class.base::RepeatingTimer", %"class.base::ObserverList" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.11, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.12" }
%class.scoped_refptr.11 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.12" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.14", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"struct.blink::MemoryUsage" = type { double, double, double, double, double, double, double }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.22", [4 x i8] }>
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr.27" = type { %"class.base::internal::WeakPtrBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink16RAILModeObserverD2Ev = comdat any

$_ZN5blink16RAILModeObserverD0Ev = comdat any

$_ZN5blink15TaskRunnerTimerINS_38UserLevelMemoryPressureSignalGeneratorEED0Ev = comdat any

$_ZN5blink15TaskRunnerTimerINS_38UserLevelMemoryPressureSignalGeneratorEE5FiredEv = comdat any

$_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZTVN5blink16RAILModeObserverE = comdat any

$_ZTVN5blink15TaskRunnerTimerINS_38UserLevelMemoryPressureSignalGeneratorEEE = comdat any

@_ZZN5blink38UserLevelMemoryPressureSignalGenerator8InstanceEvE11s_generator = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink38UserLevelMemoryPressureSignalGenerator8InstanceEvE11s_generator = internal global i64 0, align 8
@_ZN5blink8features30kUserLevelMemoryPressureSignalE = external global %"struct.base::Feature", align 8
@_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE = hidden unnamed_addr constant { [7 x i8*], [5 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*)* @_ZN5blink38UserLevelMemoryPressureSignalGeneratorD2Ev to i8*), i8* bitcast (void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*)* @_ZN5blink38UserLevelMemoryPressureSignalGeneratorD0Ev to i8*), i8* bitcast (void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, i32)* @_ZN5blink38UserLevelMemoryPressureSignalGenerator17OnRAILModeChangedENS_8RAILModeE to i8*), i8* bitcast (void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)* @_ZN5blink38UserLevelMemoryPressureSignalGenerator8GenerateENS_11MemoryUsageE to i8*), i8* bitcast (void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)* @_ZN5blink38UserLevelMemoryPressureSignalGenerator12OnMemoryPingENS_11MemoryUsageE to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*)* @_ZThn8_N5blink38UserLevelMemoryPressureSignalGeneratorD1Ev to i8*), i8* bitcast (void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*)* @_ZThn8_N5blink38UserLevelMemoryPressureSignalGeneratorD0Ev to i8*), i8* bitcast (void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)* @_ZThn8_N5blink38UserLevelMemoryPressureSignalGenerator12OnMemoryPingENS_11MemoryUsageE to i8*)] }, align 8
@.str = private unnamed_addr constant [87 x i8] c"Memory.Experimental.UserLevelMemoryPressureSignal.RendererPrivateMemoryFootprintBefore\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"Generate\00", align 1
@.str.2 = private unnamed_addr constant [91 x i8] c"../../third_party/blink/renderer/controller/user_level_memory_pressure_signal_generator.cc\00", align 1
@.str.3 = private unnamed_addr constant [86 x i8] c"Memory.Experimental.UserLevelMemoryPressureSignal.RendererPrivateMemoryFootprintAfter\00", align 1
@_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf4GbDevicesEvE30k4GBDeviceMemoryThresholdParam = internal constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN5blink8features30kUserLevelMemoryPressureSignalE, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i32 0, i32 0), double 0x7FF0000000000000 }, align 8
@.str.4 = private unnamed_addr constant [37 x i8] c"param_4gb_device_memory_threshold_mb\00", align 1
@_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf3GbDevicesEvE30k3GBDeviceMemoryThresholdParam = internal constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN5blink8features30kUserLevelMemoryPressureSignalE, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0), double 0x7FF0000000000000 }, align 8
@.str.5 = private unnamed_addr constant [37 x i8] c"param_3gb_device_memory_threshold_mb\00", align 1
@_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf2GbDevicesEvE30k2GBDeviceMemoryThresholdParam = internal constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN5blink8features30kUserLevelMemoryPressureSignalE, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i32 0, i32 0), double 0x7FF0000000000000 }, align 8
@.str.6 = private unnamed_addr constant [37 x i8] c"param_2gb_device_memory_threshold_mb\00", align 1
@_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf1GbDevicesEvE30k1GBDeviceMemoryThresholdParam = internal constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN5blink8features30kUserLevelMemoryPressureSignalE, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i32 0, i32 0), double 0x7FF0000000000000 }, align 8
@.str.7 = private unnamed_addr constant [37 x i8] c"param_1gb_device_memory_threshold_mb\00", align 1
@_ZZN5blink12_GLOBAL__N_134MemoryThresholdParamOf512MbDevicesEvE32k512MBDeviceMemoryThresholdParam = internal constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN5blink8features30kUserLevelMemoryPressureSignalE, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), double 0x7FF0000000000000 }, align 8
@.str.8 = private unnamed_addr constant [39 x i8] c"param_512mb_device_memory_threshold_mb\00", align 1
@_ZTVN5blink16RAILModeObserverE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::RAILModeObserver"*)* @_ZN5blink16RAILModeObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::RAILModeObserver"*)* @_ZN5blink16RAILModeObserverD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZZN5blink12_GLOBAL__N_122MinimumIntervalSecondsEvE23kMinimumIntervalSeconds = internal constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN5blink8features30kUserLevelMemoryPressureSignalE, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0), double 6.000000e+02 }, align 8
@.str.9 = private unnamed_addr constant [19 x i8] c"minimum_interval_s\00", align 1
@_ZTVN5blink15TaskRunnerTimerINS_38UserLevelMemoryPressureSignalGeneratorEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::TaskRunnerTimer"*)* @_ZN5blink15TaskRunnerTimerINS_38UserLevelMemoryPressureSignalGeneratorEED0Ev to i8*), i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase4StopEv to i8*), i8* bitcast (void (%"class.blink::TaskRunnerTimer"*)* @_ZN5blink15TaskRunnerTimerINS_38UserLevelMemoryPressureSignalGeneratorEE5FiredEv to i8*), i8* bitcast (void (%"class.base::OnceCallback"*, %"class.blink::TimerBase"*, %"class.base::WeakPtr.27"*)* @_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE to i8*)] }, comdat, align 8
@.str.10 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZZN5blink38UserLevelMemoryPressureSignalGenerator8GenerateENS_11MemoryUsageEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink38UserLevelMemoryPressureSignalGenerator12OnTimerFiredEPNS_9TimerBaseEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink38UserLevelMemoryPressureSignalGeneratorC1Ev = hidden unnamed_addr alias void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*), void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*)* @_ZN5blink38UserLevelMemoryPressureSignalGeneratorC2Ev
@_ZN5blink38UserLevelMemoryPressureSignalGeneratorD1Ev = hidden unnamed_addr alias void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*), void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*)* @_ZN5blink38UserLevelMemoryPressureSignalGeneratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(176) %"class.blink::UserLevelMemoryPressureSignalGenerator"* @_ZN5blink38UserLevelMemoryPressureSignalGenerator8InstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink38UserLevelMemoryPressureSignalGenerator8InstanceEvE11s_generator to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink38UserLevelMemoryPressureSignalGenerator8InstanceEvE11s_generator) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 176) #11
  %8 = bitcast i8* %7 to %"class.blink::UserLevelMemoryPressureSignalGenerator"*
  tail call void @_ZN5blink38UserLevelMemoryPressureSignalGeneratorC2Ev(%"class.blink::UserLevelMemoryPressureSignalGenerator"* %8) #11
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink38UserLevelMemoryPressureSignalGenerator8InstanceEvE11s_generator to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink38UserLevelMemoryPressureSignalGenerator8InstanceEvE11s_generator) #11
  br label %9

9:                                                ; preds = %3, %6, %0
  %10 = load %"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"class.blink::UserLevelMemoryPressureSignalGenerator"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink38UserLevelMemoryPressureSignalGenerator8InstanceEvE11s_generator, i64 0, i32 0, i32 0), align 8
  ret %"class.blink::UserLevelMemoryPressureSignalGenerator"* %10
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink38UserLevelMemoryPressureSignalGenerator7EnabledEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features30kUserLevelMemoryPressureSignalE) #11
  br i1 %1, label %2, label %17

2:                                                ; preds = %0
  %3 = tail call i64 @_ZN4base7SysInfo22AmountOfPhysicalMemoryEv() #11
  %4 = icmp sgt i64 %3, 3328599654
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = icmp sgt i64 %3, 2254857830
  br i1 %6, label %12, label %7

7:                                                ; preds = %5
  %8 = icmp sgt i64 %3, 1181116006
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = icmp sgt i64 %3, 629145600
  %11 = select i1 %10, %"struct.base::FeatureParam"* @_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf1GbDevicesEvE30k1GBDeviceMemoryThresholdParam, %"struct.base::FeatureParam"* @_ZZN5blink12_GLOBAL__N_134MemoryThresholdParamOf512MbDevicesEvE32k512MBDeviceMemoryThresholdParam
  br label %12

12:                                               ; preds = %9, %7, %5, %2
  %13 = phi %"struct.base::FeatureParam"* [ @_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf4GbDevicesEvE30k4GBDeviceMemoryThresholdParam, %2 ], [ @_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf3GbDevicesEvE30k3GBDeviceMemoryThresholdParam, %5 ], [ @_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf2GbDevicesEvE30k2GBDeviceMemoryThresholdParam, %7 ], [ %11, %9 ]
  %14 = tail call double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull %13) #11
  %15 = tail call double @llvm.fabs.f64(double %14) #12
  %16 = fcmp une double %15, 0x7FF0000000000000
  br label %17

17:                                               ; preds = %0, %12
  %18 = phi i1 [ %16, %12 ], [ false, %0 ]
  ret i1 %18
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink38UserLevelMemoryPressureSignalGeneratorC2Ev(%"class.blink::UserLevelMemoryPressureSignalGenerator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink16RAILModeObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::MemoryUsageMonitor::Observer", %"class.blink::MemoryUsageMonitor::Observer"* %4, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %5) #11
  %6 = bitcast %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 4
  %10 = tail call i64 @_ZN4base7SysInfo22AmountOfPhysicalMemoryEv() #11
  %11 = icmp sgt i64 %10, 3328599654
  br i1 %11, label %19, label %12

12:                                               ; preds = %1
  %13 = icmp sgt i64 %10, 2254857830
  br i1 %13, label %19, label %14

14:                                               ; preds = %12
  %15 = icmp sgt i64 %10, 1181116006
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = icmp sgt i64 %10, 629145600
  %18 = select i1 %17, %"struct.base::FeatureParam"* @_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf1GbDevicesEvE30k1GBDeviceMemoryThresholdParam, %"struct.base::FeatureParam"* @_ZZN5blink12_GLOBAL__N_134MemoryThresholdParamOf512MbDevicesEvE32k512MBDeviceMemoryThresholdParam
  br label %19

19:                                               ; preds = %16, %14, %12, %1
  %20 = phi %"struct.base::FeatureParam"* [ @_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf4GbDevicesEvE30k4GBDeviceMemoryThresholdParam, %1 ], [ @_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf3GbDevicesEvE30k3GBDeviceMemoryThresholdParam, %12 ], [ @_ZZN5blink12_GLOBAL__N_132MemoryThresholdParamOf2GbDevicesEvE30k2GBDeviceMemoryThresholdParam, %14 ], [ %18, %16 ]
  %21 = tail call double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull %20) #11
  store double %21, double* %9, align 8
  %22 = tail call double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZZN5blink12_GLOBAL__N_122MinimumIntervalSecondsEvE23kMinimumIntervalSeconds) #11
  %23 = fptosi double %22 to i64
  %24 = icmp slt i64 %23, 0
  %25 = select i1 %24, i64 -9223372036854775808, i64 9223372036854775807
  %26 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %23, i64 1000000) #11
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 %25, i64 %28, !prof !3
  %30 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 5, i32 0
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 6
  %32 = tail call %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() #11
  %33 = bitcast %"class.blink::Thread"* %32 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %34 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %34, i64 3
  %36 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %35, align 8
  %37 = tail call %"class.base::SingleThreadTaskRunner"* %36(%"class.blink::Thread"* %32) #11
  %38 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %31, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %38, %"class.base::SingleThreadTaskRunner"* %37) #11
  %39 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %31, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink15TaskRunnerTimerINS_38UserLevelMemoryPressureSignalGeneratorEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 6, i32 1
  store %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, %"class.blink::UserLevelMemoryPressureSignalGenerator"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 6, i32 2, i32 0
  %42 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"class.blink::TimerBase"*)* @_ZN5blink38UserLevelMemoryPressureSignalGenerator12OnTimerFiredEPNS_9TimerBaseE to i64), i64 0>, <2 x i64>* %42, align 8
  %43 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 7
  %44 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #11
  %45 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %44, i64 0, i32 0
  store %"class.base::TickClock"* %45, %"class.base::TickClock"** %43, align 8
  %46 = tail call dereferenceable(192) %"class.blink::MemoryUsageMonitor"* @_ZN5blink18MemoryUsageMonitor8InstanceEv() #11
  tail call void @_ZN5blink18MemoryUsageMonitor11AddObserverEPNS0_8ObserverE(%"class.blink::MemoryUsageMonitor"* %46, %"class.blink::MemoryUsageMonitor::Observer"* %4) #11
  %47 = tail call %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() #11
  %48 = bitcast %"class.blink::ThreadScheduler"* %47 to void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)***
  %49 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)**, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %49, i64 8
  %51 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %50, align 8
  tail call void %51(%"class.blink::ThreadScheduler"* %47, %"class.blink::RAILModeObserver"* %2) #11
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink38UserLevelMemoryPressureSignalGenerator12OnTimerFiredEPNS_9TimerBaseE(%"class.blink::UserLevelMemoryPressureSignalGenerator"* nocapture readnone, %"class.blink::TimerBase"* nocapture readnone) #0 align 2 {
  %3 = alloca %"struct.blink::MemoryUsage", align 8
  %4 = bitcast %"struct.blink::MemoryUsage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -1, i64 56, i1 false)
  %5 = tail call dereferenceable(192) %"class.blink::MemoryUsageMonitor"* @_ZN5blink18MemoryUsageMonitor8InstanceEv() #11
  %6 = bitcast %"class.blink::MemoryUsageMonitor"* %5 to void (%"struct.blink::MemoryUsage"*, %"class.blink::MemoryUsageMonitor"*)***
  %7 = load void (%"struct.blink::MemoryUsage"*, %"class.blink::MemoryUsageMonitor"*)**, void (%"struct.blink::MemoryUsage"*, %"class.blink::MemoryUsageMonitor"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"struct.blink::MemoryUsage"*, %"class.blink::MemoryUsageMonitor"*)*, void (%"struct.blink::MemoryUsage"*, %"class.blink::MemoryUsageMonitor"*)** %7, i64 2
  %9 = load void (%"struct.blink::MemoryUsage"*, %"class.blink::MemoryUsageMonitor"*)*, void (%"struct.blink::MemoryUsage"*, %"class.blink::MemoryUsageMonitor"*)** %8, align 8
  call void %9(%"struct.blink::MemoryUsage"* nonnull sret %3, %"class.blink::MemoryUsageMonitor"* %5) #11
  %10 = load atomic i64, i64* @_ZZN5blink38UserLevelMemoryPressureSignalGenerator12OnTimerFiredEPNS_9TimerBaseEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %11 = inttoptr i64 %10 to %"class.base::HistogramBase"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 64000, i32 100, i32 1) #11
  %15 = ptrtoint %"class.base::HistogramBase"* %14 to i64
  store atomic i64 %15, i64* @_ZZN5blink38UserLevelMemoryPressureSignalGenerator12OnTimerFiredEPNS_9TimerBaseEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %16

16:                                               ; preds = %2, %13
  %17 = phi %"class.base::HistogramBase"* [ %11, %2 ], [ %14, %13 ]
  %18 = getelementptr inbounds %"struct.blink::MemoryUsage", %"struct.blink::MemoryUsage"* %3, i64 0, i32 3
  %19 = load double, double* %18, align 8
  %20 = fmul double %19, 0x3F50000000000000
  %21 = fmul double %20, 0x3F50000000000000
  %22 = fcmp ult double %21, 0xC1E0000000000000
  %23 = fcmp ugt double %21, 0x41DFFFFFFFC00000
  %24 = fcmp ogt double %21, 0xC1E0000000000000
  %25 = select i1 %24, double %21, double 0xC1E0000000000000
  %26 = fptosi double %25 to i32
  %27 = select i1 %22, i32 0, i32 2147483647
  %28 = select i1 %23, i32 %27, i32 %26
  %29 = bitcast %"class.base::HistogramBase"* %17 to void (%"class.base::HistogramBase"*, i32)***
  %30 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %30, i64 6
  %32 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %31, align 8
  call void %32(%"class.base::HistogramBase"* %17, i32 %28) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #11
  ret void
}

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #3

declare dereferenceable(192) %"class.blink::MemoryUsageMonitor"* @_ZN5blink18MemoryUsageMonitor8InstanceEv() local_unnamed_addr #3

declare void @_ZN5blink18MemoryUsageMonitor11AddObserverEPNS0_8ObserverE(%"class.blink::MemoryUsageMonitor"*, %"class.blink::MemoryUsageMonitor::Observer"*) local_unnamed_addr #3

declare %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink38UserLevelMemoryPressureSignalGeneratorD2Ev(%"class.blink::UserLevelMemoryPressureSignalGenerator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = tail call dereferenceable(192) %"class.blink::MemoryUsageMonitor"* @_ZN5blink18MemoryUsageMonitor8InstanceEv() #11
  tail call void @_ZN5blink18MemoryUsageMonitor14RemoveObserverEPNS0_8ObserverE(%"class.blink::MemoryUsageMonitor"* %4, %"class.blink::MemoryUsageMonitor::Observer"* %2) #11
  %5 = tail call %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() #11
  %6 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::ThreadScheduler"* %5 to void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)***
  %8 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)**, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %8, i64 9
  %10 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %9, align 8
  tail call void %10(%"class.blink::ThreadScheduler"* %5, %"class.blink::RAILModeObserver"* %6) #11
  %11 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %11) #11
  %12 = getelementptr inbounds %"class.blink::MemoryUsageMonitor::Observer", %"class.blink::MemoryUsageMonitor::Observer"* %2, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %12) #11
  ret void
}

declare void @_ZN5blink18MemoryUsageMonitor14RemoveObserverEPNS0_8ObserverE(%"class.blink::MemoryUsageMonitor"*, %"class.blink::MemoryUsageMonitor::Observer"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink38UserLevelMemoryPressureSignalGeneratorD1Ev(%"class.blink::UserLevelMemoryPressureSignalGenerator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.base::TickClock"*, %"class.base::TickClock"** %2, i64 1
  %4 = bitcast %"class.base::TickClock"** %3 to %"class.blink::MemoryUsageMonitor::Observer"*
  %5 = bitcast %"class.base::TickClock"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = tail call dereferenceable(192) %"class.blink::MemoryUsageMonitor"* @_ZN5blink18MemoryUsageMonitor8InstanceEv() #11
  tail call void @_ZN5blink18MemoryUsageMonitor14RemoveObserverEPNS0_8ObserverE(%"class.blink::MemoryUsageMonitor"* %6, %"class.blink::MemoryUsageMonitor::Observer"* %4) #11
  %7 = tail call %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() #11
  %8 = bitcast %"class.base::TickClock"** %2 to %"class.blink::RAILModeObserver"*
  %9 = bitcast %"class.blink::ThreadScheduler"* %7 to void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)***
  %10 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)**, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %10, i64 9
  %12 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %11, align 8
  tail call void %12(%"class.blink::ThreadScheduler"* %7, %"class.blink::RAILModeObserver"* %8) #11
  %13 = getelementptr inbounds %"class.base::TickClock"*, %"class.base::TickClock"** %2, i64 8
  %14 = bitcast %"class.base::TickClock"** %13 to %"class.blink::TimerBase"*
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %14) #11
  %15 = bitcast %"class.base::TickClock"** %3 to %"class.base::CheckedObserver"*
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink38UserLevelMemoryPressureSignalGeneratorD0Ev(%"class.blink::UserLevelMemoryPressureSignalGenerator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = tail call dereferenceable(192) %"class.blink::MemoryUsageMonitor"* @_ZN5blink18MemoryUsageMonitor8InstanceEv() #11
  tail call void @_ZN5blink18MemoryUsageMonitor14RemoveObserverEPNS0_8ObserverE(%"class.blink::MemoryUsageMonitor"* %4, %"class.blink::MemoryUsageMonitor::Observer"* %2) #11
  %5 = tail call %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() #11
  %6 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::ThreadScheduler"* %5 to void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)***
  %8 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)**, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %8, i64 9
  %10 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %9, align 8
  tail call void %10(%"class.blink::ThreadScheduler"* %5, %"class.blink::RAILModeObserver"* %6) #11
  %11 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %11) #11
  %12 = getelementptr inbounds %"class.blink::MemoryUsageMonitor::Observer", %"class.blink::MemoryUsageMonitor::Observer"* %2, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %12) #11
  %13 = bitcast %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0 to i8*
  tail call void @free(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink38UserLevelMemoryPressureSignalGeneratorD0Ev(%"class.blink::UserLevelMemoryPressureSignalGenerator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.base::TickClock"*, %"class.base::TickClock"** %2, i64 1
  %4 = bitcast %"class.base::TickClock"** %3 to %"class.blink::MemoryUsageMonitor::Observer"*
  %5 = bitcast %"class.base::TickClock"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN5blink38UserLevelMemoryPressureSignalGeneratorE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = tail call dereferenceable(192) %"class.blink::MemoryUsageMonitor"* @_ZN5blink18MemoryUsageMonitor8InstanceEv() #11
  tail call void @_ZN5blink18MemoryUsageMonitor14RemoveObserverEPNS0_8ObserverE(%"class.blink::MemoryUsageMonitor"* %6, %"class.blink::MemoryUsageMonitor::Observer"* %4) #11
  %7 = tail call %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() #11
  %8 = bitcast %"class.base::TickClock"** %2 to %"class.blink::RAILModeObserver"*
  %9 = bitcast %"class.blink::ThreadScheduler"* %7 to void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)***
  %10 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)**, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %10, i64 9
  %12 = load void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)*, void (%"class.blink::ThreadScheduler"*, %"class.blink::RAILModeObserver"*)** %11, align 8
  tail call void %12(%"class.blink::ThreadScheduler"* %7, %"class.blink::RAILModeObserver"* %8) #11
  %13 = getelementptr inbounds %"class.base::TickClock"*, %"class.base::TickClock"** %2, i64 8
  %14 = bitcast %"class.base::TickClock"** %13 to %"class.blink::TimerBase"*
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %14) #11
  %15 = bitcast %"class.base::TickClock"** %3 to %"class.base::CheckedObserver"*
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %15) #11
  %16 = bitcast %"class.base::TickClock"** %2 to i8*
  tail call void @free(i8* %16) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink38UserLevelMemoryPressureSignalGenerator22SetTickClockForTestingEPKN4base9TickClockE(%"class.blink::UserLevelMemoryPressureSignalGenerator"* nocapture, %"class.base::TickClock"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 7
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink38UserLevelMemoryPressureSignalGenerator17OnRAILModeChangedENS_8RAILModeE(%"class.blink::UserLevelMemoryPressureSignalGenerator"* nocapture, i32) unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 3
  %4 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 2
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink38UserLevelMemoryPressureSignalGenerator12OnMemoryPingENS_11MemoryUsageE(%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"* nocapture readonly byval(%"struct.blink::MemoryUsage") align 8) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %39

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::MemoryUsage", %"struct.blink::MemoryUsage"* %1, i64 0, i32 3
  %8 = load double, double* %7, align 8
  %9 = fmul double %8, 0x3F50000000000000
  %10 = fmul double %9, 0x3F50000000000000
  %11 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 4
  %12 = load double, double* %11, align 8
  %13 = fcmp olt double %10, %12
  br i1 %13, label %39, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 7
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #11
  %22 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = sub nsw i64 %21, %23
  %25 = tail call double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZZN5blink12_GLOBAL__N_122MinimumIntervalSecondsEvE23kMinimumIntervalSeconds) #11
  %26 = fptosi double %25 to i64
  %27 = icmp slt i64 %26, 0
  %28 = select i1 %27, i64 -9223372036854775808, i64 9223372036854775807
  %29 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %26, i64 1000000) #11
  %30 = extractvalue { i64, i1 } %29, 1
  %31 = extractvalue { i64, i1 } %29, 0
  %32 = select i1 %30, i64 %28, i64 %31, !prof !3
  %33 = icmp slt i64 %24, %32
  br i1 %33, label %39, label %34

34:                                               ; preds = %14
  %35 = bitcast %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0 to void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)***
  %36 = load void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)**, void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)*, void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)** %36, i64 3
  %38 = load void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)*, void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)** %37, align 8
  tail call void %38(%"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, %"struct.blink::MemoryUsage"* nonnull byval(%"struct.blink::MemoryUsage") align 8 %1) #11
  br label %39

39:                                               ; preds = %14, %34, %2, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink38UserLevelMemoryPressureSignalGenerator12OnMemoryPingENS_11MemoryUsageE(%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"* nocapture readonly byval(%"struct.blink::MemoryUsage") align 8) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::MemoryUsage", align 8
  %4 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 -1, i32 7
  %5 = bitcast %"class.base::TickClock"** %4 to %"class.blink::UserLevelMemoryPressureSignalGenerator"*
  %6 = bitcast %"struct.blink::MemoryUsage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6)
  %7 = bitcast %"struct.blink::MemoryUsage"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %7, i64 56, i1 false) #11
  %8 = getelementptr inbounds %"class.base::TickClock"*, %"class.base::TickClock"** %4, i64 4
  %9 = bitcast %"class.base::TickClock"** %8 to i8*
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %47

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::MemoryUsage", %"struct.blink::MemoryUsage"* %3, i64 0, i32 3
  %14 = load double, double* %13, align 8
  %15 = fmul double %14, 0x3F50000000000000
  %16 = fmul double %15, 0x3F50000000000000
  %17 = getelementptr inbounds %"class.base::TickClock"*, %"class.base::TickClock"** %4, i64 6
  %18 = bitcast %"class.base::TickClock"** %17 to double*
  %19 = load double, double* %18, align 8
  %20 = fcmp olt double %16, %19
  br i1 %20, label %47, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::TickClock"*, %"class.base::TickClock"** %4, i64 21
  %23 = load %"class.base::TickClock"*, %"class.base::TickClock"** %22, align 8
  %24 = bitcast %"class.base::TickClock"* %23 to i64 (%"class.base::TickClock"*)***
  %25 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %25, i64 2
  %27 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %26, align 8
  %28 = tail call i64 %27(%"class.base::TickClock"* %23) #11
  %29 = getelementptr inbounds %"class.base::TickClock"*, %"class.base::TickClock"** %4, i64 5
  %30 = bitcast %"class.base::TickClock"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub nsw i64 %28, %31
  %33 = tail call double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZZN5blink12_GLOBAL__N_122MinimumIntervalSecondsEvE23kMinimumIntervalSeconds) #11
  %34 = fptosi double %33 to i64
  %35 = icmp slt i64 %34, 0
  %36 = select i1 %35, i64 -9223372036854775808, i64 9223372036854775807
  %37 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %34, i64 1000000) #11
  %38 = extractvalue { i64, i1 } %37, 1
  %39 = extractvalue { i64, i1 } %37, 0
  %40 = select i1 %38, i64 %36, i64 %39, !prof !3
  %41 = icmp slt i64 %32, %40
  br i1 %41, label %47, label %42

42:                                               ; preds = %21
  %43 = bitcast %"class.base::TickClock"** %4 to void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)***
  %44 = load void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)**, void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)*, void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)** %44, i64 3
  %46 = load void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)*, void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"*)** %45, align 8
  tail call void %46(%"class.blink::UserLevelMemoryPressureSignalGenerator"* %5, %"struct.blink::MemoryUsage"* nonnull byval(%"struct.blink::MemoryUsage") align 8 %3) #11
  br label %47

47:                                               ; preds = %2, %12, %21, %42
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink38UserLevelMemoryPressureSignalGenerator8GenerateENS_11MemoryUsageE(%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"struct.blink::MemoryUsage"* nocapture readonly byval(%"struct.blink::MemoryUsage") align 8) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = load atomic i64, i64* @_ZZN5blink38UserLevelMemoryPressureSignalGenerator8GenerateENS_11MemoryUsageEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %5 = inttoptr i64 %4 to %"class.base::HistogramBase"*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str, i64 0, i64 0), i32 1, i32 64000, i32 100, i32 1) #11
  %9 = ptrtoint %"class.base::HistogramBase"* %8 to i64
  store atomic i64 %9, i64* @_ZZN5blink38UserLevelMemoryPressureSignalGenerator8GenerateENS_11MemoryUsageEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.base::HistogramBase"* [ %5, %2 ], [ %8, %7 ]
  %12 = getelementptr inbounds %"struct.blink::MemoryUsage", %"struct.blink::MemoryUsage"* %1, i64 0, i32 3
  %13 = load double, double* %12, align 8
  %14 = fmul double %13, 0x3F50000000000000
  %15 = fmul double %14, 0x3F50000000000000
  %16 = fcmp ult double %15, 0xC1E0000000000000
  %17 = fcmp ugt double %15, 0x41DFFFFFFFC00000
  %18 = fcmp ogt double %15, 0xC1E0000000000000
  %19 = select i1 %18, double %15, double 0xC1E0000000000000
  %20 = fptosi double %19 to i32
  %21 = select i1 %16, i32 0, i32 2147483647
  %22 = select i1 %17, i32 %21, i32 %20
  %23 = bitcast %"class.base::HistogramBase"* %11 to void (%"class.base::HistogramBase"*, i32)***
  %24 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %24, i64 6
  %26 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %25, align 8
  tail call void %26(%"class.base::HistogramBase"* %11, i32 %22) #11
  tail call void @_ZN4base22MemoryPressureListener20NotifyMemoryPressureENS0_19MemoryPressureLevelE(i32 2) #11
  %27 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 7
  %28 = load %"class.base::TickClock"*, %"class.base::TickClock"** %27, align 8
  %29 = bitcast %"class.base::TickClock"* %28 to i64 (%"class.base::TickClock"*)***
  %30 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %30, i64 2
  %32 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %31, align 8
  %33 = tail call i64 %32(%"class.base::TickClock"* %28) #11
  %34 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::UserLevelMemoryPressureSignalGenerator", %"class.blink::UserLevelMemoryPressureSignalGenerator"* %0, i64 0, i32 6, i32 0
  %36 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.2, i64 0, i64 0), i32 165) #11
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %35, i64 10000000, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #11
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

declare void @_ZN4base22MemoryPressureListener20NotifyMemoryPressureENS0_19MemoryPressureLevelE(i32) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

declare i64 @_ZN4base7SysInfo22AmountOfPhysicalMemoryEv() local_unnamed_addr #3

declare double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16RAILModeObserverD2Ev(%"class.blink::RAILModeObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16RAILModeObserverD0Ev(%"class.blink::RAILModeObserver"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"*, i64, i64, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15TaskRunnerTimerINS_38UserLevelMemoryPressureSignalGeneratorEED0Ev(%"class.blink::TaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %2) #11
  %3 = bitcast %"class.blink::TaskRunnerTimer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

declare void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15TaskRunnerTimerINS_38UserLevelMemoryPressureSignalGeneratorEE5FiredEv(%"class.blink::TaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::UserLevelMemoryPressureSignalGenerator"** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 2, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = bitcast i8* %9 to %"class.blink::UserLevelMemoryPressureSignalGenerator"*
  %11 = and i64 %6, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast i8* %9 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = add i64 %6, -1
  %17 = getelementptr i8, i8* %15, i64 %16
  %18 = bitcast i8* %17 to void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"class.blink::TimerBase"*)**
  %19 = load void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"class.blink::TimerBase"*)*, void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"class.blink::TimerBase"*)** %18, align 8
  br label %22

20:                                               ; preds = %1
  %21 = inttoptr i64 %6 to void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"class.blink::TimerBase"*)*
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi void (%"class.blink::UserLevelMemoryPressureSignalGenerator"*, %"class.blink::TimerBase"*)* [ %19, %13 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 0
  tail call void %23(%"class.blink::UserLevelMemoryPressureSignalGenerator"* %10, %"class.blink::TimerBase"* %24) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE(%"class.base::OnceCallback"* noalias sret, %"class.blink::TimerBase"*, %"class.base::WeakPtr.27"*) unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #14, !noalias !5
  %5 = bitcast i8* %4 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %5, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #11, !noalias !5
  %6 = getelementptr inbounds i8, i8* %4, i64 32
  %7 = bitcast i8* %6 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase11RunInternalEv to i64), i64 0>, <2 x i64>* %7, align 8, !noalias !5
  %8 = getelementptr inbounds i8, i8* %4, i64 48
  %9 = bitcast i8* %8 to %"class.base::internal::WeakReference"*
  %10 = getelementptr inbounds %"class.base::WeakPtr.27", %"class.base::WeakPtr.27"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #11, !noalias !5
  %11 = getelementptr inbounds i8, i8* %4, i64 56
  %12 = bitcast i8* %11 to i64*
  %13 = getelementptr inbounds %"class.base::WeakPtr.27", %"class.base::WeakPtr.27"* %2, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !5
  store i64 %14, i64* %12, align 8, !noalias !5
  %15 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %4, i8** %15, align 8, !alias.scope !5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"*) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::TimerBase"**
  %10 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %9, align 8
  %11 = icmp eq %"class.blink::TimerBase"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0)) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::TimerBase"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::TimerBase"*)**
  %37 = load void (%"class.blink::TimerBase"*)*, void (%"class.blink::TimerBase"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::TimerBase"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::TimerBase"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.blink::TimerBase"* %28) #11
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::TimerBase"**
  %9 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %8, align 8
  %10 = icmp ne %"class.blink::TimerBase"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #11
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8, !10}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!10 = distinct !{!10, !11, !"_ZN3WTF4BindIMN5blink9TimerBaseEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF4BindIMN5blink9TimerBaseEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_"}
