; ModuleID = '../../ui/base/ime/linux/composition_text_util_pango.cc'
source_filename = "../../ui/base/ime/linux/composition_text_util_pango.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._PangoAttrList = type opaque
%"struct.ui::CompositionText" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.gfx::Range" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"*, %"class.std::__1::__compressed_pair.17" }
%"struct.ui::ImeTextSpan" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::basic_string.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::basic_string.3"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.ui::ImeTextSpan"* }
%"class.gfx::Range" = type { i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { i64*, i64*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64* }
%"class.base::i18n::UTF16CharIterator" = type { %"class.base::BasicStringPiece.29", i64, i64, i32, i32 }
%"class.base::BasicStringPiece.29" = type { i16*, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct._PangoAttrIterator = type opaque
%struct._PangoAttribute = type { %struct._PangoAttrClass*, i32, i32 }
%struct._PangoAttrClass = type { i32, %struct._PangoAttribute* (%struct._PangoAttribute*)*, void (%struct._PangoAttribute*)*, i32 (%struct._PangoAttribute*, %struct._PangoAttribute*)* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.7 }
%struct.anon.7 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str.1 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui36ExtractCompositionTextFromGtkPreeditEPKcP14_PangoAttrListiPNS_15CompositionTextE(i8*, %struct._PangoAttrList*, i32, %"struct.ui::CompositionText"*) local_unnamed_addr #0 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"struct.ui::CompositionText", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector.22", align 8
  %9 = alloca %"class.base::i18n::UTF16CharIterator", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"struct.ui::ImeTextSpan", align 8
  %13 = alloca %"class.std::__1::vector.1", align 8
  %14 = alloca %"struct.ui::ImeTextSpan", align 8
  %15 = alloca %"class.std::__1::vector.1", align 8
  %16 = bitcast %"struct.ui::CompositionText"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #11
  call void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"* nonnull %6) #11
  %17 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %6, i64 0, i32 0
  %19 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #11
  %20 = icmp eq %"struct.ui::CompositionText"* %6, %3
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %6, i64 0, i32 1, i32 0, i32 0
  %24 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %23, align 8
  %25 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %6, i64 0, i32 1, i32 0, i32 1
  %26 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %25, align 8
  call void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %22, %"struct.ui::ImeTextSpan"* %24, %"struct.ui::ImeTextSpan"* %26) #11
  br label %27

27:                                               ; preds = %4, %21
  %28 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %6, i64 0, i32 2
  %30 = bitcast %"class.gfx::Range"* %29 to i64*
  %31 = bitcast %"class.gfx::Range"* %28 to i64*
  %32 = load i64, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  call void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #11
  %33 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = icmp eq i8* %0, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %27
  %36 = call i64 @strlen(i8* nonnull %0) #11
  br label %40

37:                                               ; preds = %27
  %38 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  br label %40

40:                                               ; preds = %35, %37
  %41 = phi i64 [ 0, %37 ], [ %36, %35 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %0, i64 %41) #11
  %42 = bitcast %"struct.ui::CompositionText"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = bitcast %"struct.ui::CompositionText"* %3 to i8**
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %46, %40
  %50 = bitcast %"struct.ui::CompositionText"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %33, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  %51 = load i8, i8* %43, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  br label %58

56:                                               ; preds = %49
  %57 = zext i8 %51 to i64
  br label %58

58:                                               ; preds = %53, %56
  %59 = phi i64 [ %55, %53 ], [ %57, %56 ]
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %396, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.std::__1::vector.22"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %8, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %8, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 24, i1 false) #11
  br i1 %52, label %66, label %70

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %51 to i64
  br label %74

70:                                               ; preds = %61
  %71 = zext i8 %51 to i64
  %72 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  br label %74

74:                                               ; preds = %66, %70
  %75 = phi i64 [ %69, %66 ], [ %71, %70 ]
  %76 = phi i64 [ %68, %66 ], [ %73, %70 ]
  %77 = phi i64 [ %68, %66 ], [ %71, %70 ]
  %78 = bitcast %"class.base::i18n::UTF16CharIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78) #11
  %79 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %9, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %9, i64 0, i32 1
  %81 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::i18n::UTF16CharIterator"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 40, i1 false)
  %83 = load i16*, i16** %81, align 8
  %84 = bitcast %"struct.ui::CompositionText"* %3 to i16*
  %85 = select i1 %52, i16* %83, i16* %84
  %86 = select i1 %52, i64 %76, i64 %75
  call void @_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"* nonnull %9, i16* %85, i64 %86) #11
  %87 = load i64, i64* %80, align 8
  %88 = load i64, i64* %79, align 8
  %89 = icmp eq i64 %87, %88
  %90 = bitcast i64** %64 to i64*
  %91 = bitcast %"class.std::__1::vector.22"* %8 to i64*
  br i1 %89, label %94, label %92

92:                                               ; preds = %74
  %93 = bitcast i64** %65 to i64*
  br label %162

94:                                               ; preds = %219, %74
  call void @_ZN4base4i18n17UTF16CharIteratorD1Ev(%"class.base::i18n::UTF16CharIterator"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %78) #11
  %95 = load i64, i64* %90, align 8
  %96 = load i64, i64* %91, align 8
  %97 = sub i64 %95, %96
  %98 = lshr exact i64 %97, 3
  %99 = trunc i64 %98 to i32
  %100 = inttoptr i64 %95 to i64*
  %101 = load i64*, i64** %65, align 8
  %102 = icmp eq i64* %101, %100
  %103 = ptrtoint i64* %101 to i64
  br i1 %102, label %107, label %104

104:                                              ; preds = %94
  store i64 %77, i64* %100, align 8
  %105 = getelementptr inbounds i64, i64* %100, i64 1
  %106 = ptrtoint i64* %105 to i64
  store i64 %106, i64* %90, align 8
  br label %148

107:                                              ; preds = %94
  %108 = ashr exact i64 %97, 3
  %109 = add nsw i64 %108, 1
  %110 = icmp ugt i64 %109, 2305843009213693951
  br i1 %110, label %111, label %113

111:                                              ; preds = %107
  %112 = bitcast %"class.std::__1::vector.22"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %112) #13
  unreachable

113:                                              ; preds = %107
  %114 = bitcast i64** %65 to i64*
  %115 = sub i64 %103, %96
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, 1152921504606846975
  br i1 %117, label %118, label %126

118:                                              ; preds = %113
  %119 = ashr exact i64 %115, 2
  %120 = icmp ult i64 %119, %109
  %121 = select i1 %120, i64 %109, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 2305843009213693951
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  call void @abort() #13
  unreachable

126:                                              ; preds = %123, %113
  %127 = phi i64 [ %121, %123 ], [ 2305843009213693951, %113 ]
  %128 = shl i64 %127, 3
  %129 = call i8* @_Znwm(i64 %128) #12
  %130 = bitcast i8* %129 to i64*
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi i8* [ %129, %126 ], [ null, %118 ]
  %134 = phi i64* [ %130, %126 ], [ null, %118 ]
  %135 = getelementptr inbounds i64, i64* %134, i64 %108
  %136 = getelementptr inbounds i64, i64* %134, i64 %132
  %137 = ptrtoint i64* %136 to i64
  store i64 %77, i64* %135, align 8
  %138 = getelementptr inbounds i64, i64* %135, i64 1
  %139 = ptrtoint i64* %138 to i64
  %140 = ptrtoint i64* %134 to i64
  %141 = icmp sgt i64 %97, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %131
  %143 = inttoptr i64 %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %143, i64 %97, i1 false) #11
  br label %144

144:                                              ; preds = %142, %131
  store i64 %140, i64* %91, align 8
  store i64 %139, i64* %90, align 8
  store i64 %137, i64* %114, align 8
  %145 = icmp eq i64 %96, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %96 to i8*
  call void @_ZdlPv(i8* %147) #12
  br label %148

148:                                              ; preds = %104, %144, %146
  %149 = icmp sgt i32 %2, 0
  %150 = select i1 %149, i32 %2, i32 0
  %151 = icmp sgt i32 %150, %99
  %152 = select i1 %151, i32 %99, i32 %150
  %153 = sext i32 %152 to i64
  %154 = load i64*, i64** %63, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 %153
  %156 = load i64, i64* %155, align 8
  %157 = trunc i64 %156 to i32
  %158 = and i64 %156, 4294967295
  %159 = shl i64 %156, 32
  %160 = or i64 %159, %158
  store i64 %160, i64* %31, align 8
  %161 = icmp eq %struct._PangoAttrList* %1, null
  br i1 %161, label %342, label %228

162:                                              ; preds = %224, %92
  %163 = phi i64 [ 0, %92 ], [ %227, %224 ]
  %164 = phi i64* [ null, %92 ], [ %226, %224 ]
  %165 = phi i64* [ null, %92 ], [ %225, %224 ]
  %166 = phi i64 [ %87, %92 ], [ %221, %224 ]
  %167 = icmp ult i64* %165, %164
  %168 = ptrtoint i64* %164 to i64
  br i1 %167, label %169, label %172

169:                                              ; preds = %162
  store i64 %166, i64* %165, align 8
  %170 = getelementptr inbounds i64, i64* %165, i64 1
  %171 = ptrtoint i64* %170 to i64
  store i64 %171, i64* %90, align 8
  br label %219

172:                                              ; preds = %162
  %173 = ptrtoint i64* %165 to i64
  %174 = load i64, i64* %91, align 8
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %172
  %180 = bitcast %"class.std::__1::vector.22"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %180) #13
  unreachable

181:                                              ; preds = %172
  %182 = sub i64 %168, %174
  %183 = ashr exact i64 %182, 3
  %184 = icmp ult i64 %183, 1152921504606846975
  br i1 %184, label %185, label %193

185:                                              ; preds = %181
  %186 = ashr exact i64 %182, 2
  %187 = icmp ult i64 %186, %177
  %188 = select i1 %187, i64 %177, i64 %186
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %198, label %190

190:                                              ; preds = %185
  %191 = icmp ugt i64 %188, 2305843009213693951
  br i1 %191, label %192, label %193

192:                                              ; preds = %190
  call void @abort() #13
  unreachable

193:                                              ; preds = %190, %181
  %194 = phi i64 [ %188, %190 ], [ 2305843009213693951, %181 ]
  %195 = shl i64 %194, 3
  %196 = call i8* @_Znwm(i64 %195) #12
  %197 = bitcast i8* %196 to i64*
  br label %198

198:                                              ; preds = %193, %185
  %199 = phi i64 [ %194, %193 ], [ 0, %185 ]
  %200 = phi i64* [ %197, %193 ], [ null, %185 ]
  %201 = getelementptr inbounds i64, i64* %200, i64 %176
  %202 = getelementptr inbounds i64, i64* %200, i64 %199
  %203 = ptrtoint i64* %202 to i64
  store i64 %166, i64* %201, align 8
  %204 = getelementptr inbounds i64, i64* %201, i64 1
  %205 = ptrtoint i64* %204 to i64
  %206 = sub i64 %163, %174
  %207 = ashr exact i64 %206, 3
  %208 = sub nsw i64 0, %207
  %209 = getelementptr inbounds i64, i64* %201, i64 %208
  %210 = ptrtoint i64* %209 to i64
  %211 = icmp sgt i64 %206, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %198
  %213 = bitcast i64* %209 to i8*
  %214 = inttoptr i64 %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* align 8 %214, i64 %206, i1 false) #11
  br label %215

215:                                              ; preds = %212, %198
  store i64 %210, i64* %91, align 8
  store i64 %205, i64* %90, align 8
  store i64 %203, i64* %93, align 8
  %216 = icmp eq i64 %174, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %215
  %218 = inttoptr i64 %174 to i8*
  call void @_ZdlPv(i8* %218) #12
  br label %219

219:                                              ; preds = %169, %215, %217
  %220 = call zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"* nonnull %9) #11
  %221 = load i64, i64* %80, align 8
  %222 = load i64, i64* %79, align 8
  %223 = icmp eq i64 %221, %222
  br i1 %223, label %94, label %224

224:                                              ; preds = %219
  %225 = load i64*, i64** %64, align 8
  %226 = load i64*, i64** %65, align 8
  %227 = ptrtoint i64* %225 to i64
  br label %162

228:                                              ; preds = %148
  %229 = call i64 @strlen(i8* %0) #14
  %230 = trunc i64 %229 to i32
  %231 = call %struct._PangoAttrIterator* @pango_attr_list_get_iterator(%struct._PangoAttrList* nonnull %1) #11
  %232 = bitcast i32* %10 to i8*
  %233 = bitcast i32* %11 to i8*
  %234 = bitcast %"struct.ui::ImeTextSpan"* %12 to i8*
  %235 = bitcast %"class.std::__1::vector.1"* %13 to i8*
  %236 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %13, i64 0, i32 0, i32 0
  %237 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %13, i64 0, i32 0, i32 1
  %238 = bitcast %"class.std::__1::vector.1"* %13 to i8**
  %239 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %12, i64 0, i32 4
  %240 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %12, i64 0, i32 1
  %241 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %12, i64 0, i32 2
  %242 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %28, i64 0, i32 0
  %243 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 2, i32 1
  %244 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %12, i64 0, i32 3
  %245 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1, i32 0, i32 1
  %246 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %247 = bitcast %"struct.ui::ImeTextSpan"** %245 to i64*
  %248 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1
  br label %249

249:                                              ; preds = %338, %228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %232) #11
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %233) #11
  store i32 -1431655766, i32* %11, align 4
  call void @pango_attr_iterator_range(%struct._PangoAttrIterator* %231, i32* nonnull %10, i32* nonnull %11) #11
  %250 = load i32, i32* %10, align 4
  %251 = icmp sgt i32 %250, %230
  %252 = select i1 %251, i32 %230, i32 %250
  store i32 %252, i32* %10, align 4
  %253 = load i32, i32* %11, align 4
  %254 = icmp sgt i32 %253, %230
  %255 = select i1 %254, i32 %230, i32 %253
  store i32 %255, i32* %11, align 4
  %256 = icmp slt i32 %252, %255
  br i1 %256, label %257, label %338

257:                                              ; preds = %249
  %258 = sext i32 %252 to i64
  %259 = getelementptr inbounds i8, i8* %0, i64 %258
  %260 = call i64 @g_utf8_pointer_to_offset(i8* %0, i8* %259) #14
  %261 = trunc i64 %260 to i32
  store i32 %261, i32* %10, align 4
  %262 = sext i32 %255 to i64
  %263 = getelementptr inbounds i8, i8* %0, i64 %262
  %264 = call i64 @g_utf8_pointer_to_offset(i8* %0, i8* %263) #14
  %265 = trunc i64 %264 to i32
  %266 = icmp slt i32 %99, %261
  %267 = select i1 %266, i32 %99, i32 %261
  store i32 %267, i32* %10, align 4
  %268 = icmp slt i32 %99, %265
  %269 = select i1 %268, i32 %99, i32 %265
  store i32 %269, i32* %11, align 4
  %270 = icmp slt i32 %267, %269
  br i1 %270, label %271, label %338

271:                                              ; preds = %257
  %272 = call %struct._PangoAttribute* @pango_attr_iterator_get(%struct._PangoAttrIterator* %231, i32 10) #11
  %273 = call %struct._PangoAttribute* @pango_attr_iterator_get(%struct._PangoAttrIterator* %231, i32 11) #11
  %274 = icmp ne %struct._PangoAttribute* %272, null
  %275 = icmp ne %struct._PangoAttribute* %273, null
  %276 = or i1 %274, %275
  br i1 %276, label %277, label %338

277:                                              ; preds = %271
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %234) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -86, i64 64, i1 false)
  %278 = load i32, i32* %10, align 4
  %279 = sext i32 %278 to i64
  %280 = load i64*, i64** %63, align 8
  %281 = getelementptr inbounds i64, i64* %280, i64 %279
  %282 = load i64, i64* %281, align 8
  %283 = trunc i64 %282 to i32
  %284 = load i32, i32* %11, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i64, i64* %280, i64 %285
  %287 = load i64, i64* %286, align 8
  %288 = trunc i64 %287 to i32
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %235, i8 0, i64 24, i1 false) #11
  call void @_ZN2ui11ImeTextSpanC1ENS0_4TypeEjjNS0_9ThicknessENS0_14UnderlineStyleEjjRKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"struct.ui::ImeTextSpan"* nonnull %12, i32 0, i32 %283, i32 %288, i32 1, i32 1, i32 0, i32 0, %"class.std::__1::vector.1"* nonnull dereferenceable(24) %13) #11
  %289 = load %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"** %236, align 8
  %290 = icmp eq %"class.std::__1::basic_string.3"* %289, null
  br i1 %290, label %311, label %291

291:                                              ; preds = %277
  %292 = bitcast %"class.std::__1::basic_string.3"* %289 to i8*
  %293 = load %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"** %237, align 8
  %294 = icmp eq %"class.std::__1::basic_string.3"* %293, %289
  br i1 %294, label %309, label %295

295:                                              ; preds = %291, %305
  %296 = phi %"class.std::__1::basic_string.3"* [ %297, %305 ], [ %293, %291 ]
  %297 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %296, i64 -1
  %298 = bitcast %"class.std::__1::basic_string.3"* %297 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %299 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %298, i64 0, i32 1, i32 0
  %300 = load i8, i8* %299, align 1
  %301 = icmp slt i8 %300, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %295
  %303 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %297, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load i8*, i8** %303, align 8
  call void @_ZdlPv(i8* %304) #12
  br label %305

305:                                              ; preds = %302, %295
  %306 = icmp eq %"class.std::__1::basic_string.3"* %297, %289
  br i1 %306, label %307, label %295

307:                                              ; preds = %305
  %308 = load i8*, i8** %238, align 8
  br label %309

309:                                              ; preds = %307, %291
  %310 = phi i8* [ %308, %307 ], [ %292, %291 ]
  store %"class.std::__1::basic_string.3"* %289, %"class.std::__1::basic_string.3"** %237, align 8
  call void @_ZdlPv(i8* %310) #12
  br label %311

311:                                              ; preds = %277, %309
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #11
  br i1 %274, label %312, label %322

312:                                              ; preds = %311
  store i32 2, i32* %239, align 8
  %313 = load i32, i32* %240, align 4
  %314 = zext i32 %313 to i64
  %315 = icmp eq i64 %156, %314
  %316 = load i32, i32* %241, align 8
  br i1 %315, label %317, label %318

317:                                              ; preds = %312
  store i32 %316, i32* %242, align 4
  store i32 %157, i32* %243, align 4
  br label %322

318:                                              ; preds = %312
  %319 = zext i32 %316 to i64
  %320 = icmp eq i64 %156, %319
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  store i32 %313, i32* %242, align 4
  store i32 %157, i32* %243, align 4
  br label %322

322:                                              ; preds = %317, %321, %318, %311
  br i1 %275, label %323, label %329

323:                                              ; preds = %322
  %324 = getelementptr inbounds %struct._PangoAttribute, %struct._PangoAttribute* %273, i64 1
  %325 = bitcast %struct._PangoAttribute* %324 to i32*
  %326 = load i32, i32* %325, align 8
  switch i32 %326, label %329 [
    i32 2, label %327
    i32 4, label %328
  ]

327:                                              ; preds = %323
  store i32 2, i32* %239, align 8
  br label %329

328:                                              ; preds = %323
  store i32 -65536, i32* %244, align 4
  br label %329

329:                                              ; preds = %327, %328, %323, %322
  %330 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %245, align 8
  %331 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %246, align 8
  %332 = icmp eq %"struct.ui::ImeTextSpan"* %330, %331
  br i1 %332, label %336, label %333

333:                                              ; preds = %329
  call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %330, %"struct.ui::ImeTextSpan"* nonnull dereferenceable(64) %12) #11
  %334 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %330, i64 1
  %335 = ptrtoint %"struct.ui::ImeTextSpan"* %334 to i64
  store i64 %335, i64* %247, align 8
  br label %337

336:                                              ; preds = %329
  call void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %248, %"struct.ui::ImeTextSpan"* nonnull dereferenceable(64) %12) #11
  br label %337

337:                                              ; preds = %333, %336
  call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %234) #11
  br label %338

338:                                              ; preds = %337, %271, %257, %249
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %233) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %232) #11
  %339 = call i32 @pango_attr_iterator_next(%struct._PangoAttrIterator* %231) #11
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %249

341:                                              ; preds = %338
  call void @pango_attr_iterator_destroy(%struct._PangoAttrIterator* %231) #11
  br label %342

342:                                              ; preds = %148, %341
  %343 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1
  %344 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %343, i64 0, i32 0, i32 0
  %345 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %344, align 8
  %346 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1, i32 0, i32 1
  %347 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %346, align 8
  %348 = icmp eq %"struct.ui::ImeTextSpan"* %345, %347
  br i1 %348, label %349, label %389

349:                                              ; preds = %342
  %350 = bitcast %"struct.ui::ImeTextSpan"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %350) #11
  %351 = trunc i64 %77 to i32
  %352 = bitcast %"class.std::__1::vector.1"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %352) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %352, i8 0, i64 24, i1 false) #11
  call void @_ZN2ui11ImeTextSpanC1ENS0_4TypeEjjNS0_9ThicknessENS0_14UnderlineStyleEjjRKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"struct.ui::ImeTextSpan"* nonnull %14, i32 0, i32 0, i32 %351, i32 1, i32 1, i32 0, i32 0, %"class.std::__1::vector.1"* nonnull dereferenceable(24) %15) #11
  %353 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %346, align 8
  %354 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %355 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %354, align 8
  %356 = icmp ult %"struct.ui::ImeTextSpan"* %353, %355
  br i1 %356, label %357, label %361

357:                                              ; preds = %349
  call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %353, %"struct.ui::ImeTextSpan"* nonnull dereferenceable(64) %14) #11
  %358 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %353, i64 1
  %359 = ptrtoint %"struct.ui::ImeTextSpan"* %358 to i64
  %360 = bitcast %"struct.ui::ImeTextSpan"** %346 to i64*
  store i64 %359, i64* %360, align 8
  br label %362

361:                                              ; preds = %349
  call void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %343, %"struct.ui::ImeTextSpan"* nonnull dereferenceable(64) %14) #11
  br label %362

362:                                              ; preds = %357, %361
  call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* nonnull %14) #11
  %363 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %15, i64 0, i32 0, i32 0
  %364 = load %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"** %363, align 8
  %365 = icmp eq %"class.std::__1::basic_string.3"* %364, null
  br i1 %365, label %388, label %366

366:                                              ; preds = %362
  %367 = bitcast %"class.std::__1::basic_string.3"* %364 to i8*
  %368 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %15, i64 0, i32 0, i32 1
  %369 = load %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"** %368, align 8
  %370 = icmp eq %"class.std::__1::basic_string.3"* %369, %364
  br i1 %370, label %386, label %371

371:                                              ; preds = %366, %381
  %372 = phi %"class.std::__1::basic_string.3"* [ %373, %381 ], [ %369, %366 ]
  %373 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %372, i64 -1
  %374 = bitcast %"class.std::__1::basic_string.3"* %373 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %375 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %374, i64 0, i32 1, i32 0
  %376 = load i8, i8* %375, align 1
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %381

378:                                              ; preds = %371
  %379 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %373, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load i8*, i8** %379, align 8
  call void @_ZdlPv(i8* %380) #12
  br label %381

381:                                              ; preds = %378, %371
  %382 = icmp eq %"class.std::__1::basic_string.3"* %373, %364
  br i1 %382, label %383, label %371

383:                                              ; preds = %381
  %384 = bitcast %"class.std::__1::vector.1"* %15 to i8**
  %385 = load i8*, i8** %384, align 8
  br label %386

386:                                              ; preds = %383, %366
  %387 = phi i8* [ %385, %383 ], [ %367, %366 ]
  store %"class.std::__1::basic_string.3"* %364, %"class.std::__1::basic_string.3"** %368, align 8
  call void @_ZdlPv(i8* %387) #12
  br label %388

388:                                              ; preds = %362, %386
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %352) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %350) #11
  br label %389

389:                                              ; preds = %388, %342
  %390 = load i64*, i64** %63, align 8
  %391 = icmp eq i64* %390, null
  br i1 %391, label %395, label %392

392:                                              ; preds = %389
  %393 = ptrtoint i64* %390 to i64
  store i64 %393, i64* %90, align 8
  %394 = bitcast i64* %390 to i8*
  call void @_ZdlPv(i8* %394) #12
  br label %395

395:                                              ; preds = %389, %392
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #11
  br label %396

396:                                              ; preds = %58, %395
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"*, i16*, i64) unnamed_addr #2

declare zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4i18n17UTF16CharIteratorD1Ev(%"class.base::i18n::UTF16CharIterator"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare %struct._PangoAttrIterator* @pango_attr_list_get_iterator(%struct._PangoAttrList*) local_unnamed_addr #2

declare void @pango_attr_iterator_range(%struct._PangoAttrIterator*, i32*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i64 @g_utf8_pointer_to_offset(i8*, i8*) local_unnamed_addr #5

declare %struct._PangoAttribute* @pango_attr_iterator_get(%struct._PangoAttrIterator*, i32) local_unnamed_addr #2

declare void @_ZN2ui11ImeTextSpanC1ENS0_4TypeEjjNS0_9ThicknessENS0_14UnderlineStyleEjjRKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"struct.ui::ImeTextSpan"*, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.1"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"*) unnamed_addr #3

declare i32 @pango_attr_iterator_next(%struct._PangoAttrIterator*) local_unnamed_addr #2

declare void @pango_attr_iterator_destroy(%struct._PangoAttrIterator*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !2
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !2
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !5, !noalias !2
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !5, !noalias !2
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !2
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !2
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !5, !noalias !2
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !5, !noalias !2
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !2
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !2
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !5, !noalias !2
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !5, !noalias !2
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !2
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !5, !noalias !2
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !5, !noalias !2
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !7

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !2
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !2
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !5, !noalias !2
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !5, !noalias !2
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !9

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !11

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !12

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !13
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !13
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !16, !noalias !13
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !16, !noalias !13
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !13
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !13
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !16, !noalias !13
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !16, !noalias !13
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !13
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !13
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !16, !noalias !13
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !16, !noalias !13
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !13
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !13
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !16, !noalias !13
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !16, !noalias !13
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !18

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !13
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !13
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !16, !noalias !13
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !16, !noalias !13
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !19

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !20

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !21

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !22
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !22
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !25, !noalias !22
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !25, !noalias !22
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !22
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !22
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !25, !noalias !22
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !25, !noalias !22
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !22
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !22
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !25, !noalias !22
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !25, !noalias !22
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !22
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !22
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !25, !noalias !22
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !25, !noalias !22
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !27

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !22
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !22
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !25, !noalias !22
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !25, !noalias !22
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !28

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !29

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !30

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !31
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !31
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !34, !noalias !31
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !34, !noalias !31
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !31
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !31
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !34, !noalias !31
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !34, !noalias !31
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !31
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !31
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !34, !noalias !31
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !34, !noalias !31
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !31
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !31
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !34, !noalias !31
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !34, !noalias !31
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !36

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !31
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !31
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !34, !noalias !31
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !34, !noalias !31
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !37

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !38

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !39

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !40

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !41

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !42

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !44
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !44
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !47, !noalias !44
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !47, !noalias !44
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !44
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !44
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !47, !noalias !44
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !47, !noalias !44
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !44
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !44
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !47, !noalias !44
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !47, !noalias !44
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !44
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !44
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !47, !noalias !44
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !47, !noalias !44
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !49

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !44
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !44
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !47, !noalias !44
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !47, !noalias !44
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !50

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !51

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !52

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.ui::ImeTextSpan"* %2 to i64
  %5 = ptrtoint %"struct.ui::ImeTextSpan"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 6
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.ui::ImeTextSpan"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 6
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.ui::ImeTextSpan"*
  br i1 %15, label %68, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.ui::ImeTextSpan"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 6
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 %22
  %25 = select i1 %23, %"struct.ui::ImeTextSpan"* %24, %"struct.ui::ImeTextSpan"* %2
  %26 = icmp eq %"struct.ui::ImeTextSpan"* %25, %1
  br i1 %26, label %43, label %27

27:                                               ; preds = %17, %39
  %28 = phi %"struct.ui::ImeTextSpan"* [ %41, %39 ], [ %16, %17 ]
  %29 = phi %"struct.ui::ImeTextSpan"* [ %40, %39 ], [ %1, %17 ]
  %30 = bitcast %"struct.ui::ImeTextSpan"* %28 to i8*
  %31 = bitcast %"struct.ui::ImeTextSpan"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 38, i1 false) #11
  %32 = icmp eq %"struct.ui::ImeTextSpan"* %28, %29
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %28, i64 0, i32 11
  %35 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %29, i64 0, i32 11, i32 0, i32 0
  %36 = load %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"** %35, align 8
  %37 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %29, i64 0, i32 11, i32 0, i32 1
  %38 = load %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"** %37, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.1"* %34, %"class.std::__1::basic_string.3"* %36, %"class.std::__1::basic_string.3"* %38) #11
  br label %39

39:                                               ; preds = %33, %27
  %40 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %29, i64 1
  %41 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %28, i64 1
  %42 = icmp eq %"struct.ui::ImeTextSpan"* %40, %25
  br i1 %42, label %43, label %27

43:                                               ; preds = %39, %17
  %44 = phi %"struct.ui::ImeTextSpan"* [ %16, %17 ], [ %41, %39 ]
  br i1 %23, label %45, label %60

45:                                               ; preds = %43
  %46 = load i64, i64* %19, align 8
  %47 = icmp eq %"struct.ui::ImeTextSpan"* %25, %2
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to %"struct.ui::ImeTextSpan"*
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi %"struct.ui::ImeTextSpan"* [ %54, %50 ], [ %49, %48 ]
  %52 = phi %"struct.ui::ImeTextSpan"* [ %53, %50 ], [ %24, %48 ]
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %51, %"struct.ui::ImeTextSpan"* dereferenceable(64) %52) #11
  %53 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %52, i64 1
  %54 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %51, i64 1
  %55 = icmp eq %"struct.ui::ImeTextSpan"* %53, %2
  br i1 %55, label %56, label %50

56:                                               ; preds = %50
  %57 = ptrtoint %"struct.ui::ImeTextSpan"* %54 to i64
  br label %58

58:                                               ; preds = %45, %56
  %59 = phi i64 [ %46, %45 ], [ %57, %56 ]
  store i64 %59, i64* %19, align 8
  br label %122

60:                                               ; preds = %43
  %61 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %18, align 8
  %62 = icmp eq %"struct.ui::ImeTextSpan"* %61, %44
  br i1 %62, label %67, label %63

63:                                               ; preds = %60, %63
  %64 = phi %"struct.ui::ImeTextSpan"* [ %65, %63 ], [ %61, %60 ]
  %65 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %64, i64 -1
  tail call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* %65) #11
  %66 = icmp eq %"struct.ui::ImeTextSpan"* %65, %44
  br i1 %66, label %67, label %63

67:                                               ; preds = %63, %60
  store %"struct.ui::ImeTextSpan"* %44, %"struct.ui::ImeTextSpan"** %18, align 8
  br label %122

68:                                               ; preds = %3
  %69 = icmp eq i64 %12, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %12 to i8*
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %73 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %72, align 8
  %74 = icmp eq %"struct.ui::ImeTextSpan"* %73, %16
  br i1 %74, label %82, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"struct.ui::ImeTextSpan"* [ %77, %75 ], [ %73, %70 ]
  %77 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %76, i64 -1
  tail call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* %77) #11
  %78 = icmp eq %"struct.ui::ImeTextSpan"* %77, %16
  br i1 %78, label %79, label %75

79:                                               ; preds = %75
  %80 = bitcast %"class.std::__1::vector"* %0 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %70
  %83 = phi i8* [ %81, %79 ], [ %71, %70 ]
  store %"struct.ui::ImeTextSpan"* %16, %"struct.ui::ImeTextSpan"** %72, align 8
  tail call void @_ZdlPv(i8* %83) #12
  %84 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #11
  br label %85

85:                                               ; preds = %68, %82
  %86 = phi i64 [ %10, %68 ], [ 0, %82 ]
  %87 = icmp ugt i64 %7, 288230376151711743
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #13
  unreachable

90:                                               ; preds = %85
  %91 = ashr exact i64 %86, 6
  %92 = icmp ult i64 %91, 144115188075855871
  br i1 %92, label %93, label %100

93:                                               ; preds = %90
  %94 = ashr exact i64 %86, 5
  %95 = icmp ult i64 %94, %7
  br i1 %95, label %100, label %96

96:                                               ; preds = %93
  %97 = icmp ugt i64 %94, 288230376151711743
  br i1 %97, label %98, label %100

98:                                               ; preds = %96
  %99 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %99) #13
  unreachable

100:                                              ; preds = %93, %90, %96
  %101 = phi i64 [ %94, %96 ], [ 288230376151711743, %90 ], [ %7, %93 ]
  %102 = shl i64 %101, 6
  %103 = tail call i8* @_Znwm(i64 %102) #12
  %104 = bitcast i8* %103 to %"struct.ui::ImeTextSpan"*
  %105 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %106 = bitcast %"struct.ui::ImeTextSpan"** %105 to i8**
  store i8* %103, i8** %106, align 8
  %107 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %103, i8** %107, align 8
  %108 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %104, i64 %101
  store %"struct.ui::ImeTextSpan"* %108, %"struct.ui::ImeTextSpan"** %8, align 8
  %109 = bitcast %"struct.ui::ImeTextSpan"** %105 to i64*
  %110 = ptrtoint i8* %103 to i64
  %111 = icmp eq %"struct.ui::ImeTextSpan"* %1, %2
  br i1 %111, label %120, label %112

112:                                              ; preds = %100, %112
  %113 = phi %"struct.ui::ImeTextSpan"* [ %116, %112 ], [ %104, %100 ]
  %114 = phi %"struct.ui::ImeTextSpan"* [ %115, %112 ], [ %1, %100 ]
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %113, %"struct.ui::ImeTextSpan"* dereferenceable(64) %114) #11
  %115 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %114, i64 1
  %116 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %113, i64 1
  %117 = icmp eq %"struct.ui::ImeTextSpan"* %115, %2
  br i1 %117, label %118, label %112

118:                                              ; preds = %112
  %119 = ptrtoint %"struct.ui::ImeTextSpan"* %116 to i64
  br label %120

120:                                              ; preds = %100, %118
  %121 = phi i64 [ %110, %100 ], [ %119, %118 ]
  store i64 %121, i64* %109, align 8
  br label %122

122:                                              ; preds = %58, %67, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.1"*, %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string.3"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string.3"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string.3"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string.3"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string.3"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string.3"* %24, %"class.std::__1::basic_string.3"* %2
  %26 = icmp eq %"class.std::__1::basic_string.3"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string.3"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string.3"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string.3"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string.3"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string.3"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string.3"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string.3"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string.3"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.3"* %28, i8* %46, i64 %48) #11
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string.3"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string.3"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.3"* %28, i8* %57, i64 %58) #11
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string.3"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string.3"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string.3"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string.3"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string.3"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string.3"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string.3"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string.3"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string.3"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #11
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.3"* %72, i8* %83, i64 %85) #11
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string.3"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string.3"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string.3"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string.3"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string.3"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string.3"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string.3"* %65, %"class.std::__1::basic_string.3"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string.3"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string.3"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string.3"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string.3"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.1"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string.3"* %16, %"class.std::__1::basic_string.3"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #12
  %134 = bitcast %"class.std::__1::vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #11
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #13
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #12
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string.3"*
  %152 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string.3"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector.1"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %151, i64 %148
  store %"class.std::__1::basic_string.3"* %155, %"class.std::__1::basic_string.3"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string.3"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string.3"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string.3"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string.3"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string.3"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string.3"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string.3"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #11
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.3"* %160, i8* %171, i64 %173) #11
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string.3"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string.3"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string.3"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.3"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string.3"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.3"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.3"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"* dereferenceable(64)) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"struct.ui::ImeTextSpan"* dereferenceable(64)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ui::ImeTextSpan"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ui::ImeTextSpan"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"struct.ui::ImeTextSpan"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.ui::ImeTextSpan"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %36, i64 %35
  %39 = ptrtoint %"struct.ui::ImeTextSpan"* %38 to i64
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %37, %"struct.ui::ImeTextSpan"* dereferenceable(64) %1) #11
  %40 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %37, i64 1
  %41 = ptrtoint %"struct.ui::ImeTextSpan"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %42, align 8
  %44 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %3, align 8
  %45 = icmp eq %"struct.ui::ImeTextSpan"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.ui::ImeTextSpan"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.ui::ImeTextSpan"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.ui::ImeTextSpan"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %50, i64 -1
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %51, %"struct.ui::ImeTextSpan"* dereferenceable(64) %52) #11
  %53 = icmp eq %"struct.ui::ImeTextSpan"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.ui::ImeTextSpan"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.ui::ImeTextSpan"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.ui::ImeTextSpan"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.ui::ImeTextSpan"*
  %63 = icmp eq %"struct.ui::ImeTextSpan"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.ui::ImeTextSpan"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %65, i64 -1
  tail call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* %66) #11
  %67 = icmp eq %"struct.ui::ImeTextSpan"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.ui::ImeTextSpan"* dereferenceable(64)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ui::ImeTextSpan"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ui::ImeTextSpan"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"struct.ui::ImeTextSpan"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.ui::ImeTextSpan"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %36, i64 %35
  %39 = ptrtoint %"struct.ui::ImeTextSpan"* %38 to i64
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %37, %"struct.ui::ImeTextSpan"* dereferenceable(64) %1) #11
  %40 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %37, i64 1
  %41 = ptrtoint %"struct.ui::ImeTextSpan"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %42, align 8
  %44 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %3, align 8
  %45 = icmp eq %"struct.ui::ImeTextSpan"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.ui::ImeTextSpan"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.ui::ImeTextSpan"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.ui::ImeTextSpan"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %50, i64 -1
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %51, %"struct.ui::ImeTextSpan"* dereferenceable(64) %52) #11
  %53 = icmp eq %"struct.ui::ImeTextSpan"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.ui::ImeTextSpan"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.ui::ImeTextSpan"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.ui::ImeTextSpan"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.ui::ImeTextSpan"*
  %63 = icmp eq %"struct.ui::ImeTextSpan"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.ui::ImeTextSpan"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %65, i64 -1
  tail call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* %66) #11
  %67 = icmp eq %"struct.ui::ImeTextSpan"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = distinct !{!40, !8}
!41 = distinct !{!41, !10}
!42 = distinct !{!42, !43, !8}
!43 = !{!"llvm.loop.unroll.runtime.disable"}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !8}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !10}
!52 = distinct !{!52, !8}
