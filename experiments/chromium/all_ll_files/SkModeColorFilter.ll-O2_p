; ModuleID = '../../third_party/skia/src/core/SkModeColorFilter.cpp'
source_filename = "../../third_party/skia/src/core/SkModeColorFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkModeColorFilter = type { %class.SkColorFilterBase.base, i32, i32, [4 x i8] }
%class.SkColorFilterBase.base = type { %class.SkColorFilter.base }
%class.SkColorFilter.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1", [7 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.5, i32, i32 }
%class.sk_sp.5 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.6, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.6 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.sk_sp.16 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.13*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.16*, %class.SkReadBuffer*)* }
%class.sk_sp.13 = type { %class.SkTypeface* }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8* }
%class.sk_sp.17 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkPaint = type <{ %class.sk_sp.18, %class.sk_sp.19, %class.sk_sp.20, %class.sk_sp.17, %class.sk_sp.21, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.18 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.19 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.20 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.21 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkMatrixProvider = type opaque
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%"class.skvm::Builder" = type <{ %class.SkTHashMap.23, %"class.std::__1::vector", %"class.std::__1::vector.35", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.23 = type { %class.SkTHashTable.24 }
%class.SkTHashTable.24 = type { i32, i32, %class.SkAutoTArray.25 }
%class.SkAutoTArray.25 = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.32" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { i32*, i32*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.35" }
%"struct.skvm::Ptr" = type { i32 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.43"*, i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.50", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.49 }
%class.sk_sp.49 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.53, %class.SkTHashMap.55, %class.SkTHashMap.64, %class.SkTArray.73, %class.SkTArray.75, i32, i8, [3 x i8] }>
%class.SkTArray.53 = type { %"class.std::__1::unique_ptr.54"*, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.75, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.76 }
%class.sk_sp.76 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.55 = type { %class.SkTHashTable.56 }
%class.SkTHashTable.56 = type { i32, i32, %class.SkAutoTArray.57 }
%class.SkAutoTArray.57 = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.110" }
%"struct.std::__1::pair.110" = type { i32, i32 }
%class.SkTHashMap.64 = type { %class.SkTHashTable.65 }
%class.SkTHashTable.65 = type { i32, i32, %class.SkAutoTArray.66 }
%class.SkAutoTArray.66 = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.111" }
%"struct.std::__1::pair.111" = type { i32, %class.SkTArray.112* }
%class.SkTArray.112 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.73 = type { %"class.std::__1::unique_ptr.74"*, i64 }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.112, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.75 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.89 }
%class.SkFibBlockSizes.89 = type { i32 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrColorInfo = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkColorFilterBase = type { %class.SkColorFilter.base, [4 x i8] }
%struct.SkRGBA4f.22 = type { float, float, float, float }

$_ZN17SkModeColorFilterD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK17SkModeColorFilter10getFactoryEv = comdat any

$_ZNK17SkModeColorFilter11getTypeNameEv = comdat any

$_ZNK17SkColorFilterBase18getFlattenableTypeEv = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

@_ZTV17SkModeColorFilter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkModeColorFilter*)* @_ZN17SkModeColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.16*, %class.SkReadBuffer*)* (%class.SkModeColorFilter*)* @_ZNK17SkModeColorFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkModeColorFilter*)* @_ZNK17SkModeColorFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkModeColorFilter*, %class.SkWriteBuffer*)* @_ZNK17SkModeColorFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkModeColorFilter*)* @_ZNK17SkModeColorFilter18onIsAlphaUnchangedEv to i8*), i8* bitcast ({ i8, %class.GrFragmentProcessor* } (%class.SkModeColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)* @_ZNK17SkModeColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.22*, %class.SkColorSpace*)* @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, float*)* @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf to i8*), i8* bitcast (i1 (%class.SkModeColorFilter*, i32*, i32*)* @_ZNK17SkModeColorFilter14onAsAColorModeEPjP11SkBlendMode to i8*), i8* bitcast (i1 (%class.SkModeColorFilter*, %struct.SkStageRec*, i1)* @_ZNK17SkModeColorFilter14onAppendStagesERK10SkStageRecb to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkModeColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK17SkModeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"SkModeColorFilter\00", align 1

@_ZN17SkModeColorFilterC1Ej11SkBlendMode = hidden unnamed_addr alias void (%class.SkModeColorFilter*, i32, i32), void (%class.SkModeColorFilter*, i32, i32)* @_ZN17SkModeColorFilterC2Ej11SkBlendMode

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17SkModeColorFilterC2Ej11SkBlendMode(%class.SkModeColorFilter* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17SkModeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 1
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 2
  store i32 %2, i32* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17SkModeColorFilter14onAsAColorModeEPjP11SkBlendMode(%class.SkModeColorFilter* nocapture readonly, i32*, i32*) unnamed_addr #1 align 2 {
  %4 = icmp eq i32* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %1, align 4
  br label %8

8:                                                ; preds = %3, %5
  %9 = icmp eq i32* %2, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %2, align 4
  br label %13

13:                                               ; preds = %8, %10
  ret i1 true
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17SkModeColorFilter18onIsAlphaUnchangedEv(%class.SkModeColorFilter* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %4 [
    i32 2, label %5
    i32 9, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17SkModeColorFilter7flattenER13SkWriteBuffer(%class.SkModeColorFilter* nocapture readonly, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %6 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %6, i64 12
  %8 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, i32 %4) #11
  %9 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %5, align 8
  %12 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %11, i64 9
  %13 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %12, align 8
  tail call void %13(%class.SkWriteBuffer* %1, i32 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkModeColorFilter10CreateProcER12SkReadBuffer(%class.sk_sp.16* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #3 align 2 {
  %3 = tail call i32 @_ZN12SkReadBuffer9readColorEv(%class.SkReadBuffer* %1) #11
  %4 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #11
  %5 = icmp ult i32 %4, 29
  br i1 %5, label %6, label %39

6:                                                ; preds = %2
  %7 = lshr i32 %3, 24
  switch i32 %4, label %10 [
    i32 0, label %11
    i32 3, label %8
    i32 2, label %39
  ]

8:                                                ; preds = %6
  %9 = trunc i32 %7 to i8
  switch i8 %9, label %11 [
    i8 0, label %39
    i8 -1, label %22
  ]

10:                                               ; preds = %6
  br label %11

11:                                               ; preds = %10, %8, %6
  %12 = phi i32 [ 1, %6 ], [ 3, %8 ], [ %4, %10 ]
  %13 = phi i32 [ %4, %6 ], [ %3, %8 ], [ %3, %10 ]
  %14 = icmp eq i32 %7, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = add i32 %12, -3
  %17 = icmp ult i32 %16, 14
  br i1 %17, label %34, label %22

18:                                               ; preds = %11
  %19 = icmp eq i32 %7, 255
  %20 = icmp eq i32 %12, 6
  %21 = and i1 %19, %20
  br i1 %21, label %39, label %22

22:                                               ; preds = %34, %15, %18, %8
  %23 = phi i32 [ %13, %18 ], [ %13, %15 ], [ %3, %8 ], [ %13, %34 ]
  %24 = phi i32 [ %12, %18 ], [ %12, %15 ], [ 1, %8 ], [ %12, %34 ]
  %25 = tail call i8* @_Znwm(i64 24) #12, !noalias !2
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4, !noalias !2
  %28 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17SkModeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !noalias !2
  %29 = getelementptr inbounds i8, i8* %25, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %23, i32* %30, align 4, !noalias !2
  %31 = getelementptr inbounds i8, i8* %25, i64 16
  %32 = bitcast i8* %31 to i32*
  store i32 %24, i32* %32, align 8, !noalias !2
  %33 = ptrtoint i8* %25 to i64
  br label %39

34:                                               ; preds = %15
  %35 = trunc i32 %16 to i16
  %36 = lshr i16 8547, %35
  %37 = and i16 %36, 1
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %22, label %39

39:                                               ; preds = %34, %22, %2, %18, %8, %6
  %40 = phi i64 [ %33, %22 ], [ 0, %2 ], [ 0, %18 ], [ 0, %8 ], [ 0, %6 ], [ 0, %34 ]
  %41 = bitcast %class.sk_sp.16* %0 to i64*
  store i64 %40, i64* %41, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZN12SkReadBuffer9readColorEv(%class.SkReadBuffer*) local_unnamed_addr #5

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #5

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.17* noalias nocapture sret, i32, i32) local_unnamed_addr #6 align 2 {
  %4 = icmp ult i32 %2, 29
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %6, align 8
  br label %35

7:                                                ; preds = %3
  %8 = lshr i32 %1, 24
  switch i32 %2, label %11 [
    i32 0, label %12
    i32 3, label %9
    i32 2, label %21
  ]

9:                                                ; preds = %7
  %10 = trunc i32 %8 to i8
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 -1, label %23
  ]

11:                                               ; preds = %7
  br label %12

12:                                               ; preds = %7, %11, %9
  %13 = phi i32 [ 1, %7 ], [ 3, %9 ], [ %2, %11 ]
  %14 = phi i32 [ %2, %7 ], [ %1, %9 ], [ %1, %11 ]
  %15 = icmp eq i32 %8, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  switch i32 %13, label %23 [
    i32 16, label %21
    i32 11, label %21
    i32 9, label %21
    i32 8, label %21
    i32 4, label %21
    i32 3, label %21
  ]

17:                                               ; preds = %12
  %18 = icmp eq i32 %8, 255
  %19 = icmp eq i32 %13, 6
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %7, %9, %16, %16, %16, %16, %16, %16, %17
  %22 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %22, align 8
  br label %35

23:                                               ; preds = %9, %16, %17
  %24 = phi i32 [ %14, %17 ], [ %14, %16 ], [ %1, %9 ]
  %25 = phi i32 [ %13, %17 ], [ %13, %16 ], [ 1, %9 ]
  %26 = tail call i8* @_Znwm(i64 24) #12, !noalias !7
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 4, !noalias !7
  %29 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17SkModeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8, !noalias !7
  %30 = getelementptr inbounds i8, i8* %26, i64 12
  %31 = bitcast i8* %30 to i32*
  store i32 %24, i32* %31, align 4, !noalias !7
  %32 = getelementptr inbounds i8, i8* %26, i64 16
  %33 = bitcast i8* %32 to i32*
  store i32 %25, i32* %33, align 8, !noalias !7
  %34 = bitcast %class.sk_sp.17* %0 to i8**
  store i8* %26, i8** %34, align 8, !alias.scope !7
  br label %35

35:                                               ; preds = %21, %23, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17SkModeColorFilter14onAppendStagesERK10SkStageRecb(%class.SkModeColorFilter* nocapture readonly, %struct.SkStageRec* nocapture readonly dereferenceable(56), i1 zeroext) unnamed_addr #3 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRGBA4f*
  %6 = alloca %struct.SkColorSpaceXformSteps, align 4
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 0
  %9 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %8, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %9, i32 1, i8* null) #11
  %10 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0, i64 0
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 0
  %13 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %5, i64 0, i32 3
  %14 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %15) #11
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 0
  store <2 x float> %18, <2 x float>* %17, align 8
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %20 = extractvalue { <2 x float>, <2 x float> } %16, 1
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %21) #11
  %22 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #11
  %23 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 3
  %24 = load %class.SkColorSpace*, %class.SkColorSpace** %23, align 8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %6, %class.SkColorSpace* %22, i32 3, %class.SkColorSpace* %24, i32 3) #11
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %6, float* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %21) #11
  %25 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %8, align 8
  %26 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 1
  %27 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %26, align 8
  %28 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = load float, float* %13, align 4
  %30 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %31 = load <2 x float>, <2 x float>* %30, align 8
  %32 = insertelement <2 x float> undef, float %29, i32 0
  %33 = shufflevector <2 x float> %32, <2 x float> undef, <2 x i32> zeroinitializer
  %34 = fmul <2 x float> %31, %33
  %35 = load float, float* %12, align 8
  %36 = fmul float %29, %35
  %37 = insertelement <2 x float> undef, float %36, i32 0
  %38 = insertelement <2 x float> %37, float %29, i32 1
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %34, <2 x float>* %39, align 8
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %38, <2 x float>* %40, align 8
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0, i64 0
  call void @_ZN16SkRasterPipeline21append_constant_colorEP12SkArenaAllocPKf(%class.SkRasterPipeline* %25, %class.SkArenaAlloc* %27, float* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  %42 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %8, align 8
  call void @_Z24SkBlendMode_AppendStages11SkBlendModeP16SkRasterPipeline(i32 %43, %class.SkRasterPipeline* %44) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i1 true
}

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #5

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #5

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #5

declare void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps*, float*) local_unnamed_addr #5

declare void @_ZN16SkRasterPipeline21append_constant_colorEP12SkArenaAllocPKf(%class.SkRasterPipeline*, %class.SkArenaAlloc*, float*) local_unnamed_addr #5

declare void @_Z24SkBlendMode_AppendStages11SkBlendModeP16SkRasterPipeline(i32, %class.SkRasterPipeline*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17SkModeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkModeColorFilter* nocapture readonly, %"class.skvm::Builder"*, %"struct.skvm::Color"* nocapture readonly byval(%"struct.skvm::Color") align 8, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc* nocapture readnone) unnamed_addr #7 align 2 {
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %struct.SkColorSpaceXformSteps, align 4
  %10 = alloca %"struct.skvm::Color", align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0, i64 0
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1, i64 0
  %14 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %15) #11
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 0
  store <2 x float> %18, <2 x float>* %17, align 8
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %20 = extractvalue { <2 x float>, <2 x float> } %16, 1
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %21) #11
  %22 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #11
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %9, %class.SkColorSpace* %22, i32 3, %class.SkColorSpace* %4, i32 2) #11
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %9, float* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %21) #11
  %23 = bitcast %"struct.skvm::Color"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 64, i1 false)
  %24 = load <2 x float>, <2 x float>* %17, align 8
  %25 = bitcast float* %13 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 8
  call void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* nonnull sret %10, %"class.skvm::Builder"* %2, <2 x float> %24, <2 x float> %26, %"struct.skvm::Uniforms"* %5) #11
  %27 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %1, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  call void @_ZN4skvm7Builder5blendE11SkBlendModeNS_5ColorES2_(%"struct.skvm::Color"* sret %0, %"class.skvm::Builder"* %2, i32 %28, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %10, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %3) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, <2 x float>, <2 x float>, %"struct.skvm::Uniforms"*) local_unnamed_addr #5

declare void @_ZN4skvm7Builder5blendE11SkBlendModeNS_5ColorES2_(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, i32, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i8, %class.GrFragmentProcessor* } @_ZNK17SkModeColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo(%class.SkModeColorFilter* nocapture readonly, %class.GrFragmentProcessor*, %class.GrRecordingContext* nocapture readnone, %class.GrColorInfo*) unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %19, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkModeColorFilter, %class.SkModeColorFilter* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = tail call { <2 x float>, <2 x float> } @_Z18SkColorToPMColor4fjRK11GrColorInfo(i32 %10, %class.GrColorInfo* %3) #11
  %12 = extractvalue { <2 x float>, <2 x float> } %11, 0
  %13 = extractvalue { <2 x float>, <2 x float> } %11, 1
  %14 = tail call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor9MakeColorE8SkRGBA4fIL11SkAlphaType2EE(<2 x float> %12, <2 x float> %13) #11
  %15 = load i32, i32* %5, align 8
  %16 = tail call %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor* %14, %class.GrFragmentProcessor* %1, i32 %15, i32 3) #11
  %17 = icmp ne %class.GrFragmentProcessor* %16, null
  %18 = zext i1 %17 to i8
  br label %19

19:                                               ; preds = %8, %4
  %20 = phi i8 [ 1, %4 ], [ %18, %8 ]
  %21 = phi %class.GrFragmentProcessor* [ %1, %4 ], [ %16, %8 ]
  %22 = insertvalue { i8, %class.GrFragmentProcessor* } undef, i8 %20, 0
  %23 = insertvalue { i8, %class.GrFragmentProcessor* } %22, %class.GrFragmentProcessor* %21, 1
  ret { i8, %class.GrFragmentProcessor* } %23
}

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor9MakeColorE8SkRGBA4fIL11SkAlphaType2EE(<2 x float>, <2 x float>) local_unnamed_addr #5

declare { <2 x float>, <2 x float> } @_Z18SkColorToPMColor4fjRK11GrColorInfo(i32, %class.GrColorInfo*) local_unnamed_addr #5

declare %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i32, i32) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkModeColorFilterD0Ev(%class.SkModeColorFilter*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %class.SkModeColorFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #3 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.16*, %class.SkReadBuffer*)* @_ZNK17SkModeColorFilter10getFactoryEv(%class.SkModeColorFilter*) unnamed_addr #3 comdat align 2 {
  ret void (%class.sk_sp.16*, %class.SkReadBuffer*)* @_ZN17SkModeColorFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK17SkModeColorFilter11getTypeNameEv(%class.SkModeColorFilter*) unnamed_addr #3 comdat align 2 {
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK17SkColorFilterBase18getFlattenableTypeEv(%class.SkColorFilterBase*) unnamed_addr #3 comdat align 2 {
  ret i32 0
}

declare { <2 x float>, <2 x float> } @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace(%class.SkColorFilterBase*, %struct.SkRGBA4f.22* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #5

declare zeroext i1 @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf(%class.SkColorFilterBase*, float*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN17SkModeColorFilter4MakeEj11SkBlendMode: argument 0"}
!4 = distinct !{!4, !"_ZN17SkModeColorFilter4MakeEj11SkBlendMode"}
!5 = distinct !{!5, !6, !"_ZN14SkColorFilters5BlendEj11SkBlendMode: argument 0"}
!6 = distinct !{!6, !"_ZN14SkColorFilters5BlendEj11SkBlendMode"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN17SkModeColorFilter4MakeEj11SkBlendMode: argument 0"}
!9 = distinct !{!9, !"_ZN17SkModeColorFilter4MakeEj11SkBlendMode"}
