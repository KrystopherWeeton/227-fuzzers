; ModuleID = '../../v8/src/codegen/compilation-cache.cc'
source_filename = "../../v8/src/codegen/compilation-cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::CompilationCache" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheRegExp", [4 x %"class.v8::internal::CompilationSubCache"*], i8, [7 x i8] }>
%"class.v8::internal::CompilationCacheScript" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationSubCache" = type { i32 (...)**, %"class.v8::internal::Isolate"*, i32, [2 x %"class.v8::internal::Object"] }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::CompilationCacheEval" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationCacheRegExp" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::CompilationCacheTable" = type { %"class.v8::internal::HashTable" }
%"class.v8::internal::HashTable" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef" = type { %"class.v8::internal::CompilationCacheTable" }
%"class.v8::internal::InfoCellPair" = type { %"class.v8::internal::IsCompiledScope", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::FeedbackCell" }
%"class.v8::internal::IsCompiledScope" = type <{ %"class.v8::internal::MaybeHandle.1135", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle.1135" = type { i64* }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackCell" = type { %"class.v8::internal::TorqueGeneratedFeedbackCell" }
%"class.v8::internal::TorqueGeneratedFeedbackCell" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Factory" = type { i8 }

@_ZN2v88internal32FLAG_isolate_script_cache_ageingE = external local_unnamed_addr global i8, align 1
@_ZTVN2v88internal22CompilationCacheScriptE = hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::CompilationCacheScript"*)* @_ZN2v88internal22CompilationCacheScript3AgeEv to i8*)] }, align 8
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [4 x i8] c"hit\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"eval-global\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"eval-contextual\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"put\00", align 1
@_ZTVN2v88internal20CompilationCacheEvalE = hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::CompilationCacheEval"*)* @_ZN2v88internal20CompilationCacheEval3AgeEv to i8*)] }, align 8
@_ZTVN2v88internal22CompilationCacheRegExpE = hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::CompilationCacheRegExp"*)* @_ZN2v88internal22CompilationCacheRegExp3AgeEv to i8*)] }, align 8
@_ZN2v88internal22FLAG_compilation_cacheE = external local_unnamed_addr global i8, align 1

@_ZN2v88internal16CompilationCacheC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::CompilationCache"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::CompilationCache"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal16CompilationCacheC2EPNS0_7IsolateE
@_ZN2v88internal22CompilationCacheScriptC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::CompilationCacheScript"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::CompilationCacheScript"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal22CompilationCacheScriptC2EPNS0_7IsolateE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCacheC2EPNS0_7IsolateE(%"class.v8::internal::CompilationCache"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %3 = alloca [4 x %"class.v8::internal::CompilationSubCache"*], align 16
  %4 = bitcast [4 x %"class.v8::internal::CompilationSubCache"*]* %3 to i8*
  %5 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %6, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 1, i32 0, i32 1
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 1, i32 0, i32 2
  store i32 1, i32* %9, align 8
  %10 = getelementptr %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 1, i32 0, i32 3, i64 0
  %11 = bitcast %"class.v8::internal::Object"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal22CompilationCacheScriptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %12 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %12, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 2, i32 0, i32 1
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 2, i32 0, i32 2
  store i32 1, i32* %15, align 8
  %16 = getelementptr %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 2, i32 0, i32 3, i64 0
  %17 = bitcast %"class.v8::internal::Object"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal20CompilationCacheEvalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %18 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 3, i32 0, i32 1
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 3, i32 0, i32 2
  store i32 1, i32* %21, align 8
  %22 = getelementptr %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 3, i32 0, i32 3, i64 0
  %23 = bitcast %"class.v8::internal::Object"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal20CompilationCacheEvalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %24 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 4
  %25 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %24, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 4, i32 0, i32 1
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 4, i32 0, i32 2
  store i32 2, i32* %27, align 8
  %28 = getelementptr %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 4, i32 0, i32 3, i64 0
  %29 = bitcast %"class.v8::internal::Object"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal22CompilationCacheRegExpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %30 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 6
  store i8 1, i8* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #6
  %31 = getelementptr inbounds [4 x %"class.v8::internal::CompilationSubCache"*], [4 x %"class.v8::internal::CompilationSubCache"*]* %3, i64 0, i64 0
  %32 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %6, i64 0, i32 0
  store %"class.v8::internal::CompilationSubCache"* %32, %"class.v8::internal::CompilationSubCache"** %31, align 16
  %33 = getelementptr inbounds [4 x %"class.v8::internal::CompilationSubCache"*], [4 x %"class.v8::internal::CompilationSubCache"*]* %3, i64 0, i64 1
  %34 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %12, i64 0, i32 0
  store %"class.v8::internal::CompilationSubCache"* %34, %"class.v8::internal::CompilationSubCache"** %33, align 8
  %35 = getelementptr inbounds [4 x %"class.v8::internal::CompilationSubCache"*], [4 x %"class.v8::internal::CompilationSubCache"*]* %3, i64 0, i64 2
  %36 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %18, i64 0, i32 0
  store %"class.v8::internal::CompilationSubCache"* %36, %"class.v8::internal::CompilationSubCache"** %35, align 16
  %37 = getelementptr inbounds [4 x %"class.v8::internal::CompilationSubCache"*], [4 x %"class.v8::internal::CompilationSubCache"*]* %3, i64 0, i64 3
  %38 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %24, i64 0, i32 0
  store %"class.v8::internal::CompilationSubCache"* %38, %"class.v8::internal::CompilationSubCache"** %37, align 8
  %39 = getelementptr %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 0
  %40 = bitcast %"class.v8::internal::CompilationSubCache"** %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 16 %4, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal19CompilationSubCache8GetTableEi(%"class.v8::internal::CompilationSubCache"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 4
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %3, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = trunc i64 %7 to i32
  %12 = icmp eq i32 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = tail call i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %5, i32 64, i8 zeroext 0, i32 0) #6
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %8, align 8
  br label %35

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 4
  %18 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %19 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %18, i64 %9) #6
  br label %35

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = icmp eq i64* %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #6
  br label %30

30:                                               ; preds = %28, %22
  %31 = phi i64* [ %29, %28 ], [ %24, %22 ]
  %32 = ptrtoint i64* %31 to i64
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  store i64* %34, i64** %23, align 8
  store i64 %9, i64* %31, align 8
  br label %35

35:                                               ; preds = %30, %20, %13
  %36 = phi i64* [ %14, %13 ], [ %21, %20 ], [ %31, %30 ]
  ret i64* %36
}

declare i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19CompilationSubCache15AgeByGenerationEPS1_(%"class.v8::internal::CompilationSubCache"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::internal::CompilationSubCache"* %0 to i8*
  %3 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -1
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %134

7:                                                ; preds = %1
  %8 = sext i32 %5 to i64
  %9 = icmp ult i32 %5, 4
  br i1 %9, label %10, label %13

10:                                               ; preds = %132, %42, %13, %7
  %11 = phi i64 [ %8, %42 ], [ %8, %13 ], [ %8, %7 ], [ %60, %132 ]
  %12 = phi i32 [ %4, %42 ], [ %4, %13 ], [ %4, %7 ], [ %62, %132 ]
  br label %140

13:                                               ; preds = %7
  %14 = add nsw i64 %8, -1
  %15 = add nsw i32 %4, -2
  %16 = trunc i64 %14 to i32
  %17 = sub i32 %15, %16
  %18 = icmp sgt i32 %17, %15
  %19 = icmp ugt i64 %14, 4294967295
  %20 = or i1 %18, %19
  %21 = shl nsw i64 %8, 3
  %22 = add nsw i64 %21, 24
  %23 = getelementptr i8, i8* %2, i64 %22
  %24 = ptrtoint i8* %23 to i64
  %25 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %14, i64 8)
  %26 = extractvalue { i64, i1 } %25, 0
  %27 = extractvalue { i64, i1 } %25, 1
  %28 = icmp ugt i64 %26, %24
  %29 = or i1 %28, %27
  %30 = or i1 %20, %29
  %31 = sext i32 %4 to i64
  %32 = shl nsw i64 %31, 3
  %33 = add nsw i64 %32, 8
  %34 = getelementptr i8, i8* %2, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %14, i64 8)
  %37 = extractvalue { i64, i1 } %36, 0
  %38 = extractvalue { i64, i1 } %36, 1
  %39 = icmp ugt i64 %37, %35
  %40 = or i1 %39, %38
  %41 = or i1 %30, %40
  br i1 %41, label %10, label %42

42:                                               ; preds = %13
  %43 = getelementptr %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 1
  %44 = bitcast %"class.v8::internal::Object"* %43 to i8*
  %45 = shl nsw i64 %8, 3
  %46 = add nsw i64 %45, 32
  %47 = getelementptr i8, i8* %2, i64 %46
  %48 = sext i32 %4 to i64
  %49 = shl nsw i64 %48, 3
  %50 = add nsw i64 %49, 16
  %51 = sub nsw i64 %50, %45
  %52 = getelementptr i8, i8* %2, i64 %51
  %53 = add nsw i64 %49, 16
  %54 = getelementptr i8, i8* %2, i64 %53
  %55 = icmp ugt i8* %54, %44
  %56 = icmp ult i8* %52, %47
  %57 = and i1 %55, %56
  br i1 %57, label %10, label %58

58:                                               ; preds = %42
  %59 = and i64 %8, -4
  %60 = sub nsw i64 %8, %59
  %61 = trunc i64 %59 to i32
  %62 = sub i32 %4, %61
  %63 = add nsw i64 %59, -4
  %64 = lshr exact i64 %63, 2
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %63, 0
  br i1 %67, label %111, label %68

68:                                               ; preds = %58
  %69 = sub nuw nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %108, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %109, %70 ]
  %73 = sub i64 %8, %71
  %74 = trunc i64 %71 to i32
  %75 = sub i32 %4, %74
  %76 = add nsw i32 %75, -2
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %77, i32 0, i32 0
  %79 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %73, i32 0, i32 0
  %80 = getelementptr inbounds i64, i64* %78, i64 -1
  %81 = bitcast i64* %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !2
  %83 = getelementptr inbounds i64, i64* %78, i64 -3
  %84 = bitcast i64* %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !2
  %86 = getelementptr inbounds i64, i64* %79, i64 -1
  %87 = bitcast i64* %86 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %87, align 8, !alias.scope !5, !noalias !2
  %88 = getelementptr inbounds i64, i64* %79, i64 -3
  %89 = bitcast i64* %88 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %89, align 8, !alias.scope !5, !noalias !2
  %90 = or i64 %71, 4
  %91 = sub i64 %8, %90
  %92 = trunc i64 %90 to i32
  %93 = sub i32 %4, %92
  %94 = add nsw i32 %93, -2
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %95, i32 0, i32 0
  %97 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %91, i32 0, i32 0
  %98 = getelementptr inbounds i64, i64* %96, i64 -1
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !2
  %101 = getelementptr inbounds i64, i64* %96, i64 -3
  %102 = bitcast i64* %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !2
  %104 = getelementptr inbounds i64, i64* %97, i64 -1
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %105, align 8, !alias.scope !5, !noalias !2
  %106 = getelementptr inbounds i64, i64* %97, i64 -3
  %107 = bitcast i64* %106 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 8, !alias.scope !5, !noalias !2
  %108 = add i64 %71, 8
  %109 = add i64 %72, -2
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %70, !llvm.loop !7

111:                                              ; preds = %70, %58
  %112 = phi i64 [ 0, %58 ], [ %108, %70 ]
  %113 = icmp eq i64 %66, 0
  br i1 %113, label %132, label %114

114:                                              ; preds = %111
  %115 = sub i64 %8, %112
  %116 = trunc i64 %112 to i32
  %117 = sub i32 %4, %116
  %118 = add nsw i32 %117, -2
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %119, i32 0, i32 0
  %121 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %115, i32 0, i32 0
  %122 = getelementptr inbounds i64, i64* %120, i64 -1
  %123 = bitcast i64* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !2
  %125 = getelementptr inbounds i64, i64* %120, i64 -3
  %126 = bitcast i64* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !2
  %128 = getelementptr inbounds i64, i64* %121, i64 -1
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %129, align 8, !alias.scope !5, !noalias !2
  %130 = getelementptr inbounds i64, i64* %121, i64 -3
  %131 = bitcast i64* %130 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !5, !noalias !2
  br label %132

132:                                              ; preds = %111, %114
  %133 = icmp eq i64 %59, %8
  br i1 %133, label %134, label %10

134:                                              ; preds = %140, %132, %1
  %135 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 1
  %136 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %136, i64 0, i32 0, i32 7, i32 0, i64 4
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  store i64 %138, i64* %139, align 8
  ret void

140:                                              ; preds = %10, %140
  %141 = phi i64 [ %148, %140 ], [ %11, %10 ]
  %142 = phi i32 [ %150, %140 ], [ %12, %10 ]
  %143 = add nsw i32 %142, -2
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %144, i32 0, i32 0
  %146 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %141, i32 0, i32 0
  %147 = load i64, i64* %145, align 8
  store i64 %147, i64* %146, align 8
  %148 = add nsw i64 %141, -1
  %149 = icmp sgt i64 %148, 0
  %150 = trunc i64 %141 to i32
  br i1 %149, label %140, label %134, !llvm.loop !9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19CompilationSubCache9AgeCustomEPS1_(%"class.v8::internal::CompilationSubCache"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::CompilationCacheTable", align 8
  %3 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 4
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.v8::internal::CompilationCacheTable"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6
  %14 = getelementptr inbounds %"class.v8::internal::CompilationCacheTable", %"class.v8::internal::CompilationCacheTable"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %14, align 8
  call void @_ZN2v88internal21CompilationCacheTable3AgeEPNS0_7IsolateE(%"class.v8::internal::CompilationCacheTable"* nonnull %2, %"class.v8::internal::Isolate"* %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6
  br label %15

15:                                               ; preds = %1, %12
  ret void
}

declare void @_ZN2v88internal21CompilationCacheTable3AgeEPNS0_7IsolateE(%"class.v8::internal::CompilationCacheTable"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22CompilationCacheScript3AgeEv(%"class.v8::internal::CompilationCacheScript"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::CompilationCacheTable", align 8
  %3 = load i8, i8* @_ZN2v88internal32FLAG_isolate_script_cache_ageingE, align 1, !range !10
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = trunc i64 %9 to i32
  %14 = icmp eq i32 %12, %13
  br i1 %14, label %18, label %15

15:                                               ; preds = %5
  %16 = bitcast %"class.v8::internal::CompilationCacheTable"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.v8::internal::CompilationCacheTable", %"class.v8::internal::CompilationCacheTable"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %17, align 8
  call void @_ZN2v88internal21CompilationCacheTable3AgeEPNS0_7IsolateE(%"class.v8::internal::CompilationCacheTable"* nonnull %2, %"class.v8::internal::Isolate"* %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %18

18:                                               ; preds = %15, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal20CompilationCacheEval3AgeEv(%"class.v8::internal::CompilationCacheEval"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::CompilationCacheTable", align 8
  %3 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 4
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %0, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.v8::internal::CompilationCacheTable"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6
  %14 = getelementptr inbounds %"class.v8::internal::CompilationCacheTable", %"class.v8::internal::CompilationCacheTable"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %14, align 8
  call void @_ZN2v88internal21CompilationCacheTable3AgeEPNS0_7IsolateE(%"class.v8::internal::CompilationCacheTable"* nonnull %2, %"class.v8::internal::Isolate"* %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6
  br label %15

15:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal22CompilationCacheRegExp3AgeEv(%"class.v8::internal::CompilationCacheRegExp"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.v8::internal::CompilationCacheRegExp"* %0 to i8*
  %3 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -1
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %145

7:                                                ; preds = %1
  %8 = sext i32 %5 to i64
  %9 = icmp ult i32 %5, 4
  br i1 %9, label %131, label %10

10:                                               ; preds = %7
  %11 = add nsw i64 %8, -1
  %12 = add nsw i32 %4, -2
  %13 = trunc i64 %11 to i32
  %14 = sub i32 %12, %13
  %15 = icmp sgt i32 %14, %12
  %16 = icmp ugt i64 %11, 4294967295
  %17 = or i1 %15, %16
  %18 = shl nsw i64 %8, 3
  %19 = add nsw i64 %18, 24
  %20 = getelementptr i8, i8* %2, i64 %19
  %21 = ptrtoint i8* %20 to i64
  %22 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %23 = extractvalue { i64, i1 } %22, 0
  %24 = extractvalue { i64, i1 } %22, 1
  %25 = icmp ugt i64 %23, %21
  %26 = or i1 %25, %24
  %27 = or i1 %17, %26
  %28 = sext i32 %4 to i64
  %29 = shl nsw i64 %28, 3
  %30 = add nsw i64 %29, 8
  %31 = getelementptr i8, i8* %2, i64 %30
  %32 = ptrtoint i8* %31 to i64
  %33 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 8)
  %34 = extractvalue { i64, i1 } %33, 0
  %35 = extractvalue { i64, i1 } %33, 1
  %36 = icmp ugt i64 %34, %32
  %37 = or i1 %36, %35
  %38 = or i1 %27, %37
  br i1 %38, label %131, label %39

39:                                               ; preds = %10
  %40 = getelementptr %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 1
  %41 = bitcast %"class.v8::internal::Object"* %40 to i8*
  %42 = shl nsw i64 %8, 3
  %43 = add nsw i64 %42, 32
  %44 = getelementptr i8, i8* %2, i64 %43
  %45 = sext i32 %4 to i64
  %46 = shl nsw i64 %45, 3
  %47 = add nsw i64 %46, 16
  %48 = sub nsw i64 %47, %42
  %49 = getelementptr i8, i8* %2, i64 %48
  %50 = add nsw i64 %46, 16
  %51 = getelementptr i8, i8* %2, i64 %50
  %52 = icmp ugt i8* %51, %41
  %53 = icmp ult i8* %49, %44
  %54 = and i1 %52, %53
  br i1 %54, label %131, label %55

55:                                               ; preds = %39
  %56 = and i64 %8, -4
  %57 = sub nsw i64 %8, %56
  %58 = trunc i64 %56 to i32
  %59 = sub i32 %4, %58
  %60 = add nsw i64 %56, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %108, label %65

65:                                               ; preds = %55
  %66 = sub nuw nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %105, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %106, %67 ]
  %70 = sub i64 %8, %68
  %71 = trunc i64 %68 to i32
  %72 = sub i32 %4, %71
  %73 = add nsw i32 %72, -2
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 %74, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 %70, i32 0, i32 0
  %77 = getelementptr inbounds i64, i64* %75, i64 -1
  %78 = bitcast i64* %77 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8, !alias.scope !11
  %80 = getelementptr inbounds i64, i64* %75, i64 -3
  %81 = bitcast i64* %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !11
  %83 = getelementptr inbounds i64, i64* %76, i64 -1
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %84, align 8, !alias.scope !14, !noalias !11
  %85 = getelementptr inbounds i64, i64* %76, i64 -3
  %86 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !14, !noalias !11
  %87 = or i64 %68, 4
  %88 = sub i64 %8, %87
  %89 = trunc i64 %87 to i32
  %90 = sub i32 %4, %89
  %91 = add nsw i32 %90, -2
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 %92, i32 0, i32 0
  %94 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 %88, i32 0, i32 0
  %95 = getelementptr inbounds i64, i64* %93, i64 -1
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !11
  %98 = getelementptr inbounds i64, i64* %93, i64 -3
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !11
  %101 = getelementptr inbounds i64, i64* %94, i64 -1
  %102 = bitcast i64* %101 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %102, align 8, !alias.scope !14, !noalias !11
  %103 = getelementptr inbounds i64, i64* %94, i64 -3
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %104, align 8, !alias.scope !14, !noalias !11
  %105 = add i64 %68, 8
  %106 = add i64 %69, -2
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %67, !llvm.loop !16

108:                                              ; preds = %67, %55
  %109 = phi i64 [ 0, %55 ], [ %105, %67 ]
  %110 = icmp eq i64 %63, 0
  br i1 %110, label %129, label %111

111:                                              ; preds = %108
  %112 = sub i64 %8, %109
  %113 = trunc i64 %109 to i32
  %114 = sub i32 %4, %113
  %115 = add nsw i32 %114, -2
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 %116, i32 0, i32 0
  %118 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 %112, i32 0, i32 0
  %119 = getelementptr inbounds i64, i64* %117, i64 -1
  %120 = bitcast i64* %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !11
  %122 = getelementptr inbounds i64, i64* %117, i64 -3
  %123 = bitcast i64* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !11
  %125 = getelementptr inbounds i64, i64* %118, i64 -1
  %126 = bitcast i64* %125 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %126, align 8, !alias.scope !14, !noalias !11
  %127 = getelementptr inbounds i64, i64* %118, i64 -3
  %128 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %128, align 8, !alias.scope !14, !noalias !11
  br label %129

129:                                              ; preds = %108, %111
  %130 = icmp eq i64 %56, %8
  br i1 %130, label %145, label %131

131:                                              ; preds = %129, %39, %10, %7
  %132 = phi i64 [ %8, %39 ], [ %8, %10 ], [ %8, %7 ], [ %57, %129 ]
  %133 = phi i32 [ %4, %39 ], [ %4, %10 ], [ %4, %7 ], [ %59, %129 ]
  br label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %142, %134 ], [ %132, %131 ]
  %136 = phi i32 [ %144, %134 ], [ %133, %131 ]
  %137 = add nsw i32 %136, -2
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 %138, i32 0, i32 0
  %140 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 %135, i32 0, i32 0
  %141 = load i64, i64* %139, align 8
  store i64 %141, i64* %140, align 8
  %142 = add nsw i64 %135, -1
  %143 = icmp sgt i64 %142, 0
  %144 = trunc i64 %135 to i32
  br i1 %143, label %134, label %145, !llvm.loop !17

145:                                              ; preds = %134, %129, %1
  %146 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 1
  %147 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %147, i64 0, i32 0, i32 7, i32 0, i64 4
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  store i64 %149, i64* %150, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19CompilationSubCache7IterateEPNS0_11RootVisitorE(%"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 0
  %4 = ptrtoint %"class.v8::internal::Object"* %3 to i64
  %5 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %7
  %9 = ptrtoint %"class.v8::internal::Object"* %8 to i64
  %10 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %11 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %11, i64 2
  %13 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %12, align 8
  tail call void %13(%"class.v8::internal::RootVisitor"* %1, i32 9, i8* null, i64 %4, i64 %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19CompilationSubCache5ClearEv(%"class.v8::internal::CompilationSubCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 4
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %6, i64 %9, i64* %2) #6, !srcloc !18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19CompilationSubCache6RemoveENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationSubCache"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", align 8
  %4 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31
  %7 = bitcast %"struct.v8::internal::HandleScopeData"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = bitcast %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %3 to i8*
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %3, i64 0, i32 0
  br label %37

21:                                               ; preds = %69, %2
  %22 = icmp eq %"class.v8::internal::Isolate"* %5, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %21
  %24 = inttoptr i64 %8 to i64*
  %25 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %6, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  store i64 %8, i64* %7, align 8
  %27 = load i32, i32* %11, align 8
  %28 = add nsw i32 %27, -1
  store i32 %28, i32* %11, align 8
  %29 = load i64*, i64** %9, align 8
  %30 = icmp eq i64* %29, %10
  br i1 %30, label %33, label %31

31:                                               ; preds = %23
  store i64* %10, i64** %9, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %5) #6
  %32 = load i64*, i64** %25, align 8
  br label %33

33:                                               ; preds = %31, %23
  %34 = phi i64* [ %32, %31 ], [ %24, %23 ]
  %35 = phi i64* [ %10, %31 ], [ %26, %23 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %34, i64* %35) #6
  br label %36

36:                                               ; preds = %21, %33
  ret void

37:                                               ; preds = %17, %69
  %38 = phi i64 [ 0, %17 ], [ %73, %69 ]
  %39 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 0, i32 7, i32 0, i64 4
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %0, i64 0, i32 3, i64 %38, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = trunc i64 %41 to i32
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %37
  %48 = call i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %39, i32 64, i8 zeroext 0, i32 0) #6
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %42, align 8
  br label %69

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %43) #6
  br label %69

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 31, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 31, i32 1
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %58, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %56
  %63 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %39) #6
  br label %64

64:                                               ; preds = %62, %56
  %65 = phi i64* [ %63, %62 ], [ %58, %56 ]
  %66 = ptrtoint i64* %65 to i64
  %67 = add i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  store i64* %68, i64** %57, align 8
  store i64 %43, i64* %65, align 8
  br label %69

69:                                               ; preds = %47, %54, %64
  %70 = phi i64* [ %48, %47 ], [ %55, %54 ], [ %65, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %19, align 8
  %72 = load i64, i64* %1, align 8
  call void @_ZN2v88internal21CompilationCacheTable6RemoveENS0_6ObjectE(%"class.v8::internal::CompilationCacheTable"* nonnull %20, i64 %72) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %73 = add nuw nsw i64 %38, 1
  %74 = load i32, i32* %14, align 8
  %75 = sext i32 %74 to i64
  %76 = icmp slt i64 %73, %75
  br i1 %76, label %37, label %21
}

declare void @_ZN2v88internal21CompilationCacheTable6RemoveENS0_6ObjectE(%"class.v8::internal::CompilationCacheTable"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22CompilationCacheScriptC2EPNS0_7IsolateE(%"class.v8::internal::CompilationCacheScript"* nocapture, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 2
  store i32 1, i32* %5, align 8
  %6 = getelementptr %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 3, i64 0
  %7 = bitcast %"class.v8::internal::Object"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal22CompilationCacheScriptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal22CompilationCacheScript9HasOriginENS0_6HandleINS0_18SharedFunctionInfoEEENS0_11MaybeHandleINS0_6ObjectEEEiiNS_19ScriptOriginOptionsE(%"class.v8::internal::CompilationCacheScript"* nocapture readonly, i64*, i64*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 15
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %8, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 100
  br i1 %22, label %23, label %29

23:                                               ; preds = %6
  %24 = add i64 %13, 11
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %8, %27
  br label %29

29:                                               ; preds = %6, %23
  %30 = phi i64 [ %28, %23 ], [ %13, %6 ]
  %31 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 1
  %32 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %30) #6
  %38 = load i64, i64* %37, align 8
  br label %52

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %32) #6
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %30, i64* %48, align 8
  br label %52

52:                                               ; preds = %36, %47
  %53 = phi i64 [ %38, %36 ], [ %30, %47 ]
  %54 = icmp eq i64* %2, null
  br i1 %54, label %55, label %64

55:                                               ; preds = %52
  %56 = add i64 %53, 7
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 0, i32 7, i32 0, i64 4
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %58, %62
  br label %173

64:                                               ; preds = %52
  %65 = add i64 %53, 11
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = ashr i32 %67, 1
  %69 = icmp eq i32 %68, %3
  br i1 %69, label %70, label %173

70:                                               ; preds = %64
  %71 = add i64 %53, 15
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = ashr i32 %73, 1
  %75 = icmp eq i32 %74, %4
  br i1 %75, label %76, label %173

76:                                               ; preds = %70
  %77 = load i64, i64* %2, align 8
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %173, label %80

80:                                               ; preds = %76
  %81 = and i64 %77, -4294967296
  %82 = add i64 %77, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = icmp ult i16 %89, 64
  br i1 %90, label %91, label %173

91:                                               ; preds = %80
  %92 = and i64 %53, -4294967296
  %93 = add i64 %53, 7
  %94 = inttoptr i64 %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %92, %96
  %98 = and i64 %96, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %173, label %100

100:                                              ; preds = %91
  %101 = add i64 %97, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %92, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = icmp ult i16 %108, 64
  br i1 %109, label %110, label %173

110:                                              ; preds = %100
  %111 = add i64 %53, 47
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = lshr i32 %113, 4
  %115 = and i32 %114, 15
  %116 = icmp eq i32 %115, %5
  br i1 %116, label %117, label %173

117:                                              ; preds = %110
  %118 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 31, i32 4
  %120 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %119, align 8
  %121 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %117
  %123 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %120, i64 %97) #6
  br label %137

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 31, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 31, i32 1
  %128 = load i64*, i64** %127, align 8
  %129 = icmp eq i64* %126, %128
  br i1 %129, label %130, label %132

130:                                              ; preds = %124
  %131 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %118) #6
  br label %132

132:                                              ; preds = %130, %124
  %133 = phi i64* [ %131, %130 ], [ %126, %124 ]
  %134 = ptrtoint i64* %133 to i64
  %135 = add i64 %134, 8
  %136 = inttoptr i64 %135 to i64*
  store i64* %136, i64** %125, align 8
  store i64 %97, i64* %133, align 8
  br label %137

137:                                              ; preds = %122, %132
  %138 = phi i64* [ %123, %122 ], [ %133, %132 ]
  %139 = icmp eq i64* %138, %2
  br i1 %139, label %173, label %140

140:                                              ; preds = %137
  %141 = icmp eq i64* %138, null
  %142 = load i64, i64* %2, align 8
  br i1 %141, label %148, label %143

143:                                              ; preds = %140
  %144 = load i64, i64* %138, align 8
  %145 = trunc i64 %142 to i32
  %146 = trunc i64 %144 to i32
  %147 = icmp eq i32 %145, %146
  br i1 %147, label %173, label %148

148:                                              ; preds = %143, %140
  %149 = and i64 %142, -4294967296
  %150 = add i64 %142, -1
  %151 = inttoptr i64 %150 to i32*
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %149, %153
  %155 = add i64 %154, 7
  %156 = inttoptr i64 %155 to i16*
  %157 = load atomic i16, i16* %156 monotonic, align 2
  %158 = icmp ult i16 %157, 32
  br i1 %158, label %159, label %171

159:                                              ; preds = %148
  %160 = load i64, i64* %138, align 8
  %161 = and i64 %160, -4294967296
  %162 = add i64 %160, -1
  %163 = inttoptr i64 %162 to i32*
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = zext i32 %164 to i64
  %166 = or i64 %161, %165
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i16*
  %169 = load atomic i16, i16* %168 monotonic, align 2
  %170 = icmp ult i16 %169, 32
  br i1 %170, label %173, label %171

171:                                              ; preds = %159, %148
  %172 = tail call zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %118, i64* nonnull %2, i64* %138) #6
  br label %173

173:                                              ; preds = %91, %76, %171, %159, %143, %137, %80, %110, %100, %70, %64, %55
  %174 = phi i1 [ %63, %55 ], [ false, %64 ], [ false, %70 ], [ false, %100 ], [ false, %110 ], [ false, %80 ], [ %172, %171 ], [ true, %143 ], [ false, %159 ], [ true, %137 ], [ false, %76 ], [ false, %91 ]
  ret i1 %174
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal22CompilationCacheScript6LookupENS0_6HandleINS0_6StringEEENS0_11MaybeHandleINS0_6ObjectEEEiiNS_19ScriptOriginOptionsENS0_12LanguageModeE(%"class.v8::internal::CompilationCacheScript"* nocapture, i64*, i64*, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = bitcast i64** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = trunc i64 %21 to i32
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %7
  %28 = tail call i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %19, i32 64, i8 zeroext 0, i32 0) #6
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %22, align 8
  br label %49

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 4
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %23) #6
  br label %49

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %19) #6
  br label %44

44:                                               ; preds = %42, %36
  %45 = phi i64* [ %43, %42 ], [ %38, %36 ]
  %46 = ptrtoint i64* %45 to i64
  %47 = add i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  store i64* %48, i64** %37, align 8
  store i64 %23, i64* %45, align 8
  br label %49

49:                                               ; preds = %27, %34, %44
  %50 = phi i64* [ %28, %27 ], [ %35, %34 ], [ %45, %44 ]
  %51 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %52 = tail call i64* @_ZN2v88internal21CompilationCacheTable12LookupScriptENS0_6HandleIS1_EENS2_INS0_6StringEEENS0_12LanguageModeEPNS0_7IsolateE(i64* %50, i64* %1, i1 zeroext %6, %"class.v8::internal::Isolate"* %51) #6
  %53 = icmp eq i64* %52, null
  br i1 %53, label %94, label %54

54:                                               ; preds = %49
  %55 = tail call zeroext i1 @_ZN2v88internal22CompilationCacheScript9HasOriginENS0_6HandleINS0_18SharedFunctionInfoEEENS0_11MaybeHandleINS0_6ObjectEEEiiNS_19ScriptOriginOptionsE(%"class.v8::internal::CompilationCacheScript"* %0, i64* nonnull %52, i64* %2, i32 %3, i32 %4, i32 %5)
  br i1 %55, label %56, label %94

56:                                               ; preds = %54
  %57 = load i64, i64* %52, align 8
  %58 = inttoptr i64 %12 to i64*
  %59 = inttoptr i64 %15 to i64*
  %60 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %61 = load i64*, i64** %60, align 8
  store i64 %12, i64* %11, align 8
  %62 = load i32, i32* %16, align 8
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %16, align 8
  %64 = load i64*, i64** %13, align 8
  %65 = icmp eq i64* %64, %59
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  store i64* %59, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #6
  %67 = load i64*, i64** %60, align 8
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64* [ %67, %66 ], [ %58, %56 ]
  %70 = phi i64* [ %59, %66 ], [ %61, %56 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %69, i64* %70) #6
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %72 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %71, align 8
  %73 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %72, i64 %57) #6
  br label %88

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = load i64*, i64** %13, align 8
  %80 = icmp eq i64* %78, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #6
  br label %83

83:                                               ; preds = %81, %76
  %84 = phi i64* [ %82, %81 ], [ %78, %76 ]
  %85 = ptrtoint i64* %84 to i64
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  store i64* %87, i64** %77, align 8
  store i64 %57, i64* %84, align 8
  br label %88

88:                                               ; preds = %74, %83
  %89 = phi i64* [ %75, %74 ], [ %84, %83 ]
  %90 = load i64, i64* %11, align 8
  %91 = load i64, i64* %14, align 8
  %92 = load i32, i32* %16, align 8
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %16, align 8
  br label %94

94:                                               ; preds = %49, %54, %88
  %95 = phi i64 [ %90, %88 ], [ %12, %54 ], [ %12, %49 ]
  %96 = phi i64 [ %91, %88 ], [ %15, %54 ], [ %15, %49 ]
  %97 = phi i64* [ %89, %88 ], [ null, %54 ], [ null, %49 ]
  %98 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %98, label %113, label %99

99:                                               ; preds = %94
  %100 = inttoptr i64 %95 to i64*
  %101 = inttoptr i64 %96 to i64*
  %102 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %103 = load i64*, i64** %102, align 8
  store i64 %95, i64* %11, align 8
  %104 = load i32, i32* %16, align 8
  %105 = add nsw i32 %104, -1
  store i32 %105, i32* %16, align 8
  %106 = load i64*, i64** %13, align 8
  %107 = icmp eq i64* %106, %101
  br i1 %107, label %110, label %108

108:                                              ; preds = %99
  store i64* %101, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #6
  %109 = load i64*, i64** %102, align 8
  br label %110

110:                                              ; preds = %108, %99
  %111 = phi i64* [ %109, %108 ], [ %100, %99 ]
  %112 = phi i64* [ %101, %108 ], [ %103, %99 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %111, i64* %112) #6
  br label %113

113:                                              ; preds = %94, %110
  %114 = icmp eq i64* %97, null
  %115 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 14, i32 0
  %117 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %116, align 8
  br i1 %114, label %143, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %117, i64 0, i32 143, i32 1
  %120 = load i8, i8* %119, align 8, !range !10
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %117, i64 0, i32 143, i32 0, i32 2
  %124 = load i32*, i32** %123, align 8
  br label %129

125:                                              ; preds = %118
  store i8 1, i8* %119, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %117, i64 0, i32 143, i32 0
  %127 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %126) #6
  %128 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %117, i64 0, i32 143, i32 0, i32 2
  store i32* %127, i32** %128, align 8
  br label %129

129:                                              ; preds = %125, %122
  %130 = phi i32* [ %124, %122 ], [ %127, %125 ]
  %131 = icmp eq i32* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %129
  %133 = load i32, i32* %130, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %130, align 4
  br label %135

135:                                              ; preds = %129, %132
  %136 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !10
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %160, label %138

138:                                              ; preds = %135
  %139 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %139, i64 0, i32 21
  %141 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %140, align 8
  %142 = load i64, i64* %97, align 8
  tail call void @_ZN2v88internal6Logger21CompilationCacheEventEPKcS3_NS0_18SharedFunctionInfoE(%"class.v8::internal::Logger"* %141, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 %142) #6
  br label %160

143:                                              ; preds = %113
  %144 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %117, i64 0, i32 144, i32 1
  %145 = load i8, i8* %144, align 8, !range !10
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %117, i64 0, i32 144, i32 0, i32 2
  %149 = load i32*, i32** %148, align 8
  br label %154

150:                                              ; preds = %143
  store i8 1, i8* %144, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %117, i64 0, i32 144, i32 0
  %152 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %151) #6
  %153 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %117, i64 0, i32 144, i32 0, i32 2
  store i32* %152, i32** %153, align 8
  br label %154

154:                                              ; preds = %150, %147
  %155 = phi i32* [ %149, %147 ], [ %152, %150 ]
  %156 = icmp eq i32* %155, null
  br i1 %156, label %160, label %157

157:                                              ; preds = %154
  %158 = load i32, i32* %155, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %155, align 4
  br label %160

160:                                              ; preds = %157, %154, %135, %138
  ret i64* %97
}

declare i64* @_ZN2v88internal21CompilationCacheTable12LookupScriptENS0_6HandleIS1_EENS2_INS0_6StringEEENS0_12LanguageModeEPNS0_7IsolateE(i64*, i64*, i1 zeroext, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal6Logger21CompilationCacheEventEPKcS3_NS0_18SharedFunctionInfoE(%"class.v8::internal::Logger"*, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22CompilationCacheScript3PutENS0_6HandleINS0_6StringEEENS0_12LanguageModeENS2_INS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationCacheScript"* nocapture, i64*, i1 zeroext, i64*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheScript"* %0, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = trunc i64 %17 to i32
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %4
  %24 = tail call i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %15, i32 64, i8 zeroext 0, i32 0) #6
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %18, align 8
  br label %45

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %19) #6
  br label %45

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #6
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i64* [ %39, %38 ], [ %34, %32 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %33, align 8
  store i64 %19, i64* %41, align 8
  br label %45

45:                                               ; preds = %23, %30, %40
  %46 = phi i64* [ %24, %23 ], [ %31, %30 ], [ %41, %40 ]
  %47 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %48 = tail call i64* @_ZN2v88internal21CompilationCacheTable9PutScriptENS0_6HandleIS1_EENS2_INS0_6StringEEENS0_12LanguageModeENS2_INS0_18SharedFunctionInfoEEEPNS0_7IsolateE(i64* %46, i64* %1, i1 zeroext %2, i64* %3, %"class.v8::internal::Isolate"* %47) #6
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %18, align 8
  %50 = icmp eq %"class.v8::internal::Isolate"* %6, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %45
  %52 = inttoptr i64 %9 to i64*
  %53 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %54 = load i64*, i64** %53, align 8
  store i64 %9, i64* %8, align 8
  %55 = load i32, i32* %12, align 8
  %56 = add nsw i32 %55, -1
  store i32 %56, i32* %12, align 8
  %57 = load i64*, i64** %10, align 8
  %58 = icmp eq i64* %57, %11
  br i1 %58, label %61, label %59

59:                                               ; preds = %51
  store i64* %11, i64** %10, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %6) #6
  %60 = load i64*, i64** %53, align 8
  br label %61

61:                                               ; preds = %59, %51
  %62 = phi i64* [ %60, %59 ], [ %52, %51 ]
  %63 = phi i64* [ %11, %59 ], [ %54, %51 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %62, i64* %63) #6
  br label %64

64:                                               ; preds = %45, %61
  ret void
}

declare i64* @_ZN2v88internal21CompilationCacheTable9PutScriptENS0_6HandleIS1_EENS2_INS0_6StringEEENS0_12LanguageModeENS2_INS0_18SharedFunctionInfoEEEPNS0_7IsolateE(i64*, i64*, i1 zeroext, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal20CompilationCacheEval6LookupENS0_6HandleINS0_6StringEEENS2_INS0_18SharedFunctionInfoEEENS2_INS0_7ContextEEENS0_12LanguageModeEi(%"class.v8::internal::InfoCellPair"* noalias nocapture sret, %"class.v8::internal::CompilationCacheEval"* nocapture, i64*, i64*, i64*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::InfoCellPair", align 8
  %9 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31
  %12 = bitcast %"struct.v8::internal::HandleScopeData"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = bitcast %"class.v8::internal::InfoCellPair"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 9, i1 false) #6
  %20 = getelementptr inbounds %"class.v8::internal::InfoCellPair", %"class.v8::internal::InfoCellPair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast i64* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #6
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 7, i32 0, i64 4
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %1, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = trunc i64 %24 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %7
  %31 = tail call i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %22, i32 64, i8 zeroext 0, i32 0) #6
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %25, align 8
  br label %52

33:                                               ; preds = %7
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 4
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %26) #6
  br label %52

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %22) #6
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %26, i64* %48, align 8
  br label %52

52:                                               ; preds = %30, %37, %47
  %53 = phi i64* [ %31, %30 ], [ %38, %37 ], [ %48, %47 ]
  %54 = bitcast %"class.v8::internal::InfoCellPair"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #6
  call void @_ZN2v88internal21CompilationCacheTable10LookupEvalENS0_6HandleIS1_EENS2_INS0_6StringEEENS2_INS0_18SharedFunctionInfoEEENS2_INS0_7ContextEEENS0_12LanguageModeEi(%"class.v8::internal::InfoCellPair"* nonnull sret %8, i64* %53, i64* %2, i64* %3, i64* %4, i1 zeroext %5, i32 %6) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %54, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #6
  %55 = load i64, i64* %20, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %52
  %59 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 14, i32 0
  %61 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %60, align 8
  br label %86

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.v8::internal::InfoCellPair", %"class.v8::internal::InfoCellPair"* %0, i64 0, i32 0, i32 1
  %64 = load i8, i8* %63, align 8, !range !10
  %65 = icmp eq i8 %64, 0
  %66 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 14, i32 0
  %68 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %67, align 8
  br i1 %65, label %86, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %68, i64 0, i32 143, i32 1
  %71 = load i8, i8* %70, align 8, !range !10
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %68, i64 0, i32 143, i32 0, i32 2
  %75 = load i32*, i32** %74, align 8
  br label %80

76:                                               ; preds = %69
  store i8 1, i8* %70, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %68, i64 0, i32 143, i32 0
  %78 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %77) #6
  %79 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %68, i64 0, i32 143, i32 0, i32 2
  store i32* %78, i32** %79, align 8
  br label %80

80:                                               ; preds = %76, %73
  %81 = phi i32* [ %75, %73 ], [ %78, %76 ]
  %82 = icmp eq i32* %81, null
  br i1 %82, label %104, label %83

83:                                               ; preds = %80
  %84 = load i32, i32* %81, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %81, align 4
  br label %104

86:                                               ; preds = %62, %58
  %87 = phi %"class.v8::internal::Counters"* [ %61, %58 ], [ %68, %62 ]
  %88 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %87, i64 0, i32 144, i32 1
  %89 = load i8, i8* %88, align 8, !range !10
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %87, i64 0, i32 144, i32 0, i32 2
  %93 = load i32*, i32** %92, align 8
  br label %98

94:                                               ; preds = %86
  store i8 1, i8* %88, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %87, i64 0, i32 144, i32 0
  %96 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %95) #6
  %97 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %87, i64 0, i32 144, i32 0, i32 2
  store i32* %96, i32** %97, align 8
  br label %98

98:                                               ; preds = %94, %91
  %99 = phi i32* [ %93, %91 ], [ %96, %94 ]
  %100 = icmp eq i32* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = load i32, i32* %99, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %99, align 4
  br label %104

104:                                              ; preds = %101, %98, %83, %80
  %105 = icmp eq %"class.v8::internal::Isolate"* %10, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %13 to i64*
  %108 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %11, i64 0, i32 0
  %109 = load i64*, i64** %108, align 8
  store i64 %13, i64* %12, align 8
  %110 = load i32, i32* %16, align 8
  %111 = add nsw i32 %110, -1
  store i32 %111, i32* %16, align 8
  %112 = load i64*, i64** %14, align 8
  %113 = icmp eq i64* %112, %15
  br i1 %113, label %116, label %114

114:                                              ; preds = %106
  store i64* %15, i64** %14, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %10) #6
  %115 = load i64*, i64** %108, align 8
  br label %116

116:                                              ; preds = %114, %106
  %117 = phi i64* [ %115, %114 ], [ %107, %106 ]
  %118 = phi i64* [ %15, %114 ], [ %109, %106 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %117, i64* %118) #6
  br label %119

119:                                              ; preds = %104, %116
  ret void
}

declare void @_ZN2v88internal21CompilationCacheTable10LookupEvalENS0_6HandleIS1_EENS2_INS0_6StringEEENS2_INS0_18SharedFunctionInfoEEENS2_INS0_7ContextEEENS0_12LanguageModeEi(%"class.v8::internal::InfoCellPair"* sret, i64*, i64*, i64*, i64*, i1 zeroext, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal20CompilationCacheEval3PutENS0_6HandleINS0_6StringEEENS2_INS0_18SharedFunctionInfoEEES6_NS2_INS0_7ContextEEENS2_INS0_12FeedbackCellEEEi(%"class.v8::internal::CompilationCacheEval"* nocapture, i64*, i64*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 4
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval"* %0, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = trunc i64 %20 to i32
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %26, label %29

26:                                               ; preds = %7
  %27 = tail call i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %18, i32 64, i8 zeroext 0, i32 0) #6
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %21, align 8
  br label %48

29:                                               ; preds = %7
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 4
  %31 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %31, i64 %22) #6
  br label %48

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %18) #6
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i64* [ %42, %41 ], [ %37, %35 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %36, align 8
  store i64 %22, i64* %44, align 8
  br label %48

48:                                               ; preds = %26, %33, %43
  %49 = phi i64* [ %27, %26 ], [ %34, %33 ], [ %44, %43 ]
  %50 = tail call i64* @_ZN2v88internal21CompilationCacheTable7PutEvalENS0_6HandleIS1_EENS2_INS0_6StringEEENS2_INS0_18SharedFunctionInfoEEES7_NS2_INS0_7ContextEEENS2_INS0_12FeedbackCellEEEi(i64* %49, i64* %1, i64* %2, i64* %3, i64* %4, i64* %5, i32 %6) #6
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %21, align 8
  %52 = icmp eq %"class.v8::internal::Isolate"* %9, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %48
  %54 = inttoptr i64 %12 to i64*
  %55 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %56 = load i64*, i64** %55, align 8
  store i64 %12, i64* %11, align 8
  %57 = load i32, i32* %15, align 8
  %58 = add nsw i32 %57, -1
  store i32 %58, i32* %15, align 8
  %59 = load i64*, i64** %13, align 8
  %60 = icmp eq i64* %59, %14
  br i1 %60, label %63, label %61

61:                                               ; preds = %53
  store i64* %14, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #6
  %62 = load i64*, i64** %55, align 8
  br label %63

63:                                               ; preds = %61, %53
  %64 = phi i64* [ %62, %61 ], [ %54, %53 ]
  %65 = phi i64* [ %14, %61 ], [ %56, %53 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %64, i64* %65) #6
  br label %66

66:                                               ; preds = %48, %63
  ret void
}

declare i64* @_ZN2v88internal21CompilationCacheTable7PutEvalENS0_6HandleIS1_EENS2_INS0_6StringEEENS2_INS0_18SharedFunctionInfoEEES7_NS2_INS0_7ContextEEENS2_INS0_12FeedbackCellEEEi(i64*, i64*, i64*, i64*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal22CompilationCacheRegExp6LookupENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEE(%"class.v8::internal::CompilationCacheRegExp"* nocapture, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %11 = bitcast i64** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = bitcast %"class.v8::internal::Isolate"** %5 to %"class.v8::internal::Factory"**
  %17 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %17, i64 160
  %19 = bitcast %"class.v8::internal::Factory"* %18 to i64*
  %20 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %3
  %24 = load i64, i64* %19, align 8
  %25 = and i64 %24, 1
  br label %89

26:                                               ; preds = %3
  %27 = bitcast %"class.v8::internal::Factory"* %17 to %"class.v8::internal::Isolate"*
  %28 = bitcast %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %4 to i8*
  %29 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %4, i64 0, i32 0
  br label %31

31:                                               ; preds = %87, %26
  %32 = phi %"class.v8::internal::Isolate"* [ %27, %26 ], [ %88, %87 ]
  %33 = phi i64 [ 0, %26 ], [ %83, %87 ]
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 4
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 %33, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = trunc i64 %35 to i32
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %31
  %42 = call i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %32, i32 64, i8 zeroext 0, i32 0) #6
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %36, align 8
  br label %63

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %37) #6
  br label %63

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %32) #6
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %37, i64* %59, align 8
  br label %63

63:                                               ; preds = %41, %48, %58
  %64 = phi i64* [ %42, %41 ], [ %49, %48 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %29, align 8
  %66 = call i64* @_ZN2v88internal21CompilationCacheTable12LookupRegExpENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEE(%"class.v8::internal::CompilationCacheTable"* nonnull %30, i64* %1, i32 %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %82, label %70

70:                                               ; preds = %63
  %71 = and i64 %67, -4294967296
  %72 = add i64 %67, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %71, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = add i16 %79, -119
  %81 = icmp ult i16 %80, 13
  br i1 %81, label %95, label %82

82:                                               ; preds = %63, %70
  %83 = add nuw nsw i64 %33, 1
  %84 = load i32, i32* %20, align 8
  %85 = sext i32 %84 to i64
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  br label %31

89:                                               ; preds = %82, %23
  %90 = phi i64 [ %25, %23 ], [ %68, %82 ]
  %91 = phi i64 [ %24, %23 ], [ %67, %82 ]
  %92 = phi i32 [ 0, %23 ], [ 1, %82 ]
  %93 = phi i64* [ %19, %23 ], [ %66, %82 ]
  %94 = icmp eq i64 %90, 0
  br i1 %94, label %173, label %97

95:                                               ; preds = %70
  %96 = trunc i64 %33 to i32
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i64* [ %93, %89 ], [ %66, %95 ]
  %99 = phi i32 [ %92, %89 ], [ %96, %95 ]
  %100 = phi i64 [ %91, %89 ], [ %67, %95 ]
  %101 = and i64 %100, -4294967296
  %102 = add i64 %100, -1
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %101, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = add i16 %109, -119
  %111 = icmp ult i16 %110, 13
  br i1 %111, label %112, label %173

112:                                              ; preds = %97
  %113 = icmp eq i32 %99, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %112
  call void @_ZN2v88internal22CompilationCacheRegExp3PutENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::CompilationCacheRegExp"* %0, i64* %1, i32 %2, i64* %98)
  br label %115

115:                                              ; preds = %112, %114
  %116 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %116, i64 0, i32 14, i32 0
  %118 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %118, i64 0, i32 143, i32 1
  %120 = load i8, i8* %119, align 8, !range !10
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %118, i64 0, i32 143, i32 0, i32 2
  %124 = load i32*, i32** %123, align 8
  br label %129

125:                                              ; preds = %115
  store i8 1, i8* %119, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %118, i64 0, i32 143, i32 0
  %127 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %126) #6
  %128 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %118, i64 0, i32 143, i32 0, i32 2
  store i32* %127, i32** %128, align 8
  br label %129

129:                                              ; preds = %125, %122
  %130 = phi i32* [ %124, %122 ], [ %127, %125 ]
  %131 = icmp eq i32* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %129
  %133 = load i32, i32* %130, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %130, align 4
  br label %135

135:                                              ; preds = %129, %132
  %136 = load i64, i64* %98, align 8
  %137 = inttoptr i64 %9 to i64*
  %138 = inttoptr i64 %12 to i64*
  %139 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %140 = load i64*, i64** %139, align 8
  store i64 %9, i64* %8, align 8
  %141 = load i32, i32* %13, align 8
  %142 = add nsw i32 %141, -1
  store i32 %142, i32* %13, align 8
  %143 = load i64*, i64** %10, align 8
  %144 = icmp eq i64* %143, %138
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  store i64* %138, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %6) #6
  %146 = load i64*, i64** %139, align 8
  br label %147

147:                                              ; preds = %145, %135
  %148 = phi i64* [ %146, %145 ], [ %137, %135 ]
  %149 = phi i64* [ %138, %145 ], [ %140, %135 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %148, i64* %149) #6
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 4
  %151 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %150, align 8
  %152 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %147
  %154 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %151, i64 %136) #6
  br label %167

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 0
  %157 = load i64*, i64** %156, align 8
  %158 = load i64*, i64** %10, align 8
  %159 = icmp eq i64* %157, %158
  br i1 %159, label %160, label %162

160:                                              ; preds = %155
  %161 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %6) #6
  br label %162

162:                                              ; preds = %160, %155
  %163 = phi i64* [ %161, %160 ], [ %157, %155 ]
  %164 = ptrtoint i64* %163 to i64
  %165 = add i64 %164, 8
  %166 = inttoptr i64 %165 to i64*
  store i64* %166, i64** %156, align 8
  store i64 %136, i64* %163, align 8
  br label %167

167:                                              ; preds = %153, %162
  %168 = phi i64* [ %154, %153 ], [ %163, %162 ]
  %169 = load i64, i64* %8, align 8
  %170 = load i64, i64* %11, align 8
  %171 = load i32, i32* %13, align 8
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %13, align 8
  br label %193

173:                                              ; preds = %89, %97
  %174 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %174, i64 0, i32 14, i32 0
  %176 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %176, i64 0, i32 144, i32 1
  %178 = load i8, i8* %177, align 8, !range !10
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %176, i64 0, i32 144, i32 0, i32 2
  %182 = load i32*, i32** %181, align 8
  br label %187

183:                                              ; preds = %173
  store i8 1, i8* %177, align 8
  %184 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %176, i64 0, i32 144, i32 0
  %185 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %184) #6
  %186 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %176, i64 0, i32 144, i32 0, i32 2
  store i32* %185, i32** %186, align 8
  br label %187

187:                                              ; preds = %183, %180
  %188 = phi i32* [ %182, %180 ], [ %185, %183 ]
  %189 = icmp eq i32* %188, null
  br i1 %189, label %193, label %190

190:                                              ; preds = %187
  %191 = load i32, i32* %188, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %190, %187, %167
  %194 = phi i64 [ %169, %167 ], [ %9, %187 ], [ %9, %190 ]
  %195 = phi i64 [ %170, %167 ], [ %12, %187 ], [ %12, %190 ]
  %196 = phi i64* [ %168, %167 ], [ null, %187 ], [ null, %190 ]
  %197 = icmp eq %"class.v8::internal::Isolate"* %6, null
  br i1 %197, label %212, label %198

198:                                              ; preds = %193
  %199 = inttoptr i64 %194 to i64*
  %200 = inttoptr i64 %195 to i64*
  %201 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %202 = load i64*, i64** %201, align 8
  store i64 %194, i64* %8, align 8
  %203 = load i32, i32* %13, align 8
  %204 = add nsw i32 %203, -1
  store i32 %204, i32* %13, align 8
  %205 = load i64*, i64** %10, align 8
  %206 = icmp eq i64* %205, %200
  br i1 %206, label %209, label %207

207:                                              ; preds = %198
  store i64* %200, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %6) #6
  %208 = load i64*, i64** %201, align 8
  br label %209

209:                                              ; preds = %207, %198
  %210 = phi i64* [ %208, %207 ], [ %199, %198 ]
  %211 = phi i64* [ %200, %207 ], [ %202, %198 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %210, i64* %211) #6
  br label %212

212:                                              ; preds = %193, %209
  ret i64* %196
}

declare i64* @_ZN2v88internal21CompilationCacheTable12LookupRegExpENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEE(%"class.v8::internal::CompilationCacheTable"*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22CompilationCacheRegExp3PutENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::CompilationCacheRegExp"* nocapture, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::CompilationCacheRegExp", %"class.v8::internal::CompilationCacheRegExp"* %0, i64 0, i32 0, i32 3, i64 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = trunc i64 %17 to i32
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %4
  %24 = tail call i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %15, i32 64, i8 zeroext 0, i32 0) #6
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %18, align 8
  br label %45

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %19) #6
  br label %45

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #6
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i64* [ %39, %38 ], [ %34, %32 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %33, align 8
  store i64 %19, i64* %41, align 8
  br label %45

45:                                               ; preds = %23, %30, %40
  %46 = phi i64* [ %24, %23 ], [ %31, %30 ], [ %41, %40 ]
  %47 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %48 = tail call i64* @_ZN2v88internal21CompilationCacheTable9PutRegExpEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS4_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %47, i64* %46, i64* %1, i32 %2, i64* %3) #6
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %18, align 8
  %50 = icmp eq %"class.v8::internal::Isolate"* %6, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %45
  %52 = inttoptr i64 %9 to i64*
  %53 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %54 = load i64*, i64** %53, align 8
  store i64 %9, i64* %8, align 8
  %55 = load i32, i32* %12, align 8
  %56 = add nsw i32 %55, -1
  store i32 %56, i32* %12, align 8
  %57 = load i64*, i64** %10, align 8
  %58 = icmp eq i64* %57, %11
  br i1 %58, label %61, label %59

59:                                               ; preds = %51
  store i64* %11, i64** %10, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %6) #6
  %60 = load i64*, i64** %53, align 8
  br label %61

61:                                               ; preds = %59, %51
  %62 = phi i64* [ %60, %59 ], [ %52, %51 ]
  %63 = phi i64* [ %11, %59 ], [ %54, %51 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %62, i64* %63) #6
  br label %64

64:                                               ; preds = %45, %61
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64* @_ZN2v88internal21CompilationCacheTable9PutRegExpEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS4_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCache6RemoveENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationCache"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal22FLAG_compilation_cacheE, align 1, !range !10
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !10
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN2v88internal19CompilationSubCache6RemoveENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationSubCache"* %10, i64* %1)
  %11 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN2v88internal19CompilationSubCache6RemoveENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationSubCache"* %11, i64* %1)
  %12 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v88internal19CompilationSubCache6RemoveENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationSubCache"* %12, i64* %1)
  br label %13

13:                                               ; preds = %5, %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16CompilationCache12LookupScriptENS0_6HandleINS0_6StringEEENS0_11MaybeHandleINS0_6ObjectEEEiiNS_19ScriptOriginOptionsENS0_12LanguageModeE(%"class.v8::internal::CompilationCache"* nocapture, i64*, i64*, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = load i8, i8* @_ZN2v88internal22FLAG_compilation_cacheE, align 1, !range !10
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 6
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 1
  %16 = tail call i64* @_ZN2v88internal22CompilationCacheScript6LookupENS0_6HandleINS0_6StringEEENS0_11MaybeHandleINS0_6ObjectEEEiiNS_19ScriptOriginOptionsENS0_12LanguageModeE(%"class.v8::internal::CompilationCacheScript"* %15, i64* %1, i64* %2, i32 %3, i32 %4, i32 %5, i1 zeroext %6)
  br label %17

17:                                               ; preds = %10, %7, %14
  %18 = phi i64* [ %16, %14 ], [ null, %10 ], [ null, %7 ]
  ret i64* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCache10LookupEvalENS0_6HandleINS0_6StringEEENS2_INS0_18SharedFunctionInfoEEENS2_INS0_7ContextEEENS0_12LanguageModeEi(%"class.v8::internal::InfoCellPair"* noalias nocapture sret, %"class.v8::internal::CompilationCache"* nocapture, i64*, i64*, i64*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %8 = bitcast %"class.v8::internal::InfoCellPair"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 9, i1 false) #6
  %9 = getelementptr inbounds %"class.v8::internal::InfoCellPair", %"class.v8::internal::InfoCellPair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast i64* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #6
  %11 = load i8, i8* @_ZN2v88internal22FLAG_compilation_cacheE, align 1, !range !10
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %80, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %1, i64 0, i32 6
  %15 = load i8, i8* %14, align 8, !range !10
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %80, label %17

17:                                               ; preds = %13
  %18 = load i64, i64* %4, align 8
  %19 = and i64 %18, -4294967296
  %20 = add i64 %18, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %19, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 144
  br i1 %28, label %29, label %31

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %1, i64 0, i32 2
  call void @_ZN2v88internal20CompilationCacheEval6LookupENS0_6HandleINS0_6StringEEENS2_INS0_18SharedFunctionInfoEEENS2_INS0_7ContextEEENS0_12LanguageModeEi(%"class.v8::internal::InfoCellPair"* nonnull sret %0, %"class.v8::internal::CompilationCacheEval"* %30, i64* %2, i64* %3, i64* %4, i1 zeroext %5, i32 %6)
  br label %63

31:                                               ; preds = %17
  %32 = load atomic i32, i32* %21 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %19, %33
  %35 = add i64 %34, 19
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %19, %38
  %40 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %1, i64 0, i32 0
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 31, i32 4
  %43 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %42, align 8
  %44 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %31
  %46 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %43, i64 %39) #6
  br label %60

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 31, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 31, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %49, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %41) #6
  br label %55

55:                                               ; preds = %53, %47
  %56 = phi i64* [ %54, %53 ], [ %49, %47 ]
  %57 = ptrtoint i64* %56 to i64
  %58 = add i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  store i64* %59, i64** %48, align 8
  store i64 %39, i64* %56, align 8
  br label %60

60:                                               ; preds = %45, %55
  %61 = phi i64* [ %46, %45 ], [ %56, %55 ]
  %62 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %1, i64 0, i32 3
  call void @_ZN2v88internal20CompilationCacheEval6LookupENS0_6HandleINS0_6StringEEENS2_INS0_18SharedFunctionInfoEEENS2_INS0_7ContextEEENS0_12LanguageModeEi(%"class.v8::internal::InfoCellPair"* nonnull sret %0, %"class.v8::internal::CompilationCacheEval"* %62, i64* %2, i64* %3, i64* %61, i1 zeroext %5, i32 %6)
  br label %63

63:                                               ; preds = %60, %29
  %64 = phi i8* [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), %29 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), %60 ]
  %65 = load i64, i64* %9, align 8
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %80, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.v8::internal::InfoCellPair", %"class.v8::internal::InfoCellPair"* %0, i64 0, i32 0, i32 1
  %70 = load i8, i8* %69, align 8, !range !10
  %71 = icmp eq i8 %70, 0
  %72 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1
  %73 = icmp eq i8 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %80, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %1, i64 0, i32 0
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 21
  %79 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %78, align 8
  tail call void @_ZN2v88internal6Logger21CompilationCacheEventEPKcS3_NS0_18SharedFunctionInfoE(%"class.v8::internal::Logger"* %79, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8* %64, i64 %65) #6
  br label %80

80:                                               ; preds = %13, %63, %7, %75, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16CompilationCache12LookupRegExpENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEE(%"class.v8::internal::CompilationCache"* nocapture, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 4
  %5 = tail call i64* @_ZN2v88internal22CompilationCacheRegExp6LookupENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEE(%"class.v8::internal::CompilationCacheRegExp"* %4, i64* %1, i32 %2)
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCache9PutScriptENS0_6HandleINS0_6StringEEENS0_12LanguageModeENS2_INS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationCache"* nocapture, i64*, i1 zeroext, i64*) local_unnamed_addr #0 align 2 {
  %5 = load i8, i8* @_ZN2v88internal22FLAG_compilation_cacheE, align 1, !range !10
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !10
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %7
  %12 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 0
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 21
  %18 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %17, align 8
  %19 = load i64, i64* %3, align 8
  tail call void @_ZN2v88internal6Logger21CompilationCacheEventEPKcS3_NS0_18SharedFunctionInfoE(%"class.v8::internal::Logger"* %18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 %19) #6
  br label %20

20:                                               ; preds = %11, %14
  %21 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal22CompilationCacheScript3PutENS0_6HandleINS0_6StringEEENS0_12LanguageModeENS2_INS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationCacheScript"* %21, i64* %1, i1 zeroext %2, i64* %3)
  br label %22

22:                                               ; preds = %7, %4, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCache7PutEvalENS0_6HandleINS0_6StringEEENS2_INS0_18SharedFunctionInfoEEENS2_INS0_7ContextEEES6_NS2_INS0_12FeedbackCellEEEi(%"class.v8::internal::CompilationCache"* nocapture, i64*, i64*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %8 = load i8, i8* @_ZN2v88internal22FLAG_compilation_cacheE, align 1, !range !10
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %93, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 6
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %93, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 0
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31
  %18 = bitcast %"struct.v8::internal::HandleScopeData"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %22, align 8
  %25 = load i64, i64* %3, align 8
  %26 = and i64 %25, -4294967296
  %27 = add i64 %25, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = icmp eq i16 %34, 144
  br i1 %35, label %36, label %38

36:                                               ; preds = %14
  %37 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal20CompilationCacheEval3PutENS0_6HandleINS0_6StringEEENS2_INS0_18SharedFunctionInfoEEES6_NS2_INS0_7ContextEEENS2_INS0_12FeedbackCellEEEi(%"class.v8::internal::CompilationCacheEval"* %37, i64* %1, i64* %2, i64* %4, i64* %3, i64* %5, i32 %6)
  br label %69

38:                                               ; preds = %14
  %39 = load atomic i32, i32* %28 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %26, %40
  %42 = add i64 %41, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %26, %45
  %47 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 31, i32 4
  %49 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %48, align 8
  %50 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %38
  %52 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %49, i64 %46) #6
  br label %66

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 31, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 31, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = icmp eq i64* %55, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %53
  %60 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %47) #6
  br label %61

61:                                               ; preds = %59, %53
  %62 = phi i64* [ %60, %59 ], [ %55, %53 ]
  %63 = ptrtoint i64* %62 to i64
  %64 = add i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  store i64* %65, i64** %54, align 8
  store i64 %46, i64* %62, align 8
  br label %66

66:                                               ; preds = %51, %61
  %67 = phi i64* [ %52, %51 ], [ %62, %61 ]
  %68 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 3
  tail call void @_ZN2v88internal20CompilationCacheEval3PutENS0_6HandleINS0_6StringEEENS2_INS0_18SharedFunctionInfoEEES6_NS2_INS0_7ContextEEENS2_INS0_12FeedbackCellEEEi(%"class.v8::internal::CompilationCacheEval"* %68, i64* %1, i64* %2, i64* %4, i64* %67, i64* %5, i32 %6)
  br label %69

69:                                               ; preds = %36, %66
  %70 = phi i8* [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), %36 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), %66 ]
  %71 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !10
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 21
  %76 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %75, align 8
  %77 = load i64, i64* %4, align 8
  tail call void @_ZN2v88internal6Logger21CompilationCacheEventEPKcS3_NS0_18SharedFunctionInfoE(%"class.v8::internal::Logger"* %76, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %70, i64 %77) #6
  br label %78

78:                                               ; preds = %69, %73
  %79 = icmp eq %"class.v8::internal::Isolate"* %16, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %78
  %81 = inttoptr i64 %19 to i64*
  %82 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %17, i64 0, i32 0
  %83 = load i64*, i64** %82, align 8
  store i64 %19, i64* %18, align 8
  %84 = load i32, i32* %22, align 8
  %85 = add nsw i32 %84, -1
  store i32 %85, i32* %22, align 8
  %86 = load i64*, i64** %20, align 8
  %87 = icmp eq i64* %86, %21
  br i1 %87, label %90, label %88

88:                                               ; preds = %80
  store i64* %21, i64** %20, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %16) #6
  %89 = load i64*, i64** %82, align 8
  br label %90

90:                                               ; preds = %88, %80
  %91 = phi i64* [ %89, %88 ], [ %81, %80 ]
  %92 = phi i64* [ %21, %88 ], [ %83, %80 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %91, i64* %92) #6
  br label %93

93:                                               ; preds = %10, %7, %90, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCache9PutRegExpENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::CompilationCache"* nocapture, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 4
  tail call void @_ZN2v88internal22CompilationCacheRegExp3PutENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::CompilationCacheRegExp"* %5, i64* %1, i32 %2, i64* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCache5ClearEv(%"class.v8::internal::CompilationCache"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 0
  %3 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %3, i64 0, i32 3, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %3, i64 0, i32 1
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 7, i32 0, i64 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %3, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %8, i64 %11, i64* %4) #6, !srcloc !18
  %13 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 1
  %14 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %14, i64 0, i32 3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %14, i64 0, i32 1
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %14, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %19, i64 %22, i64* %15) #6, !srcloc !18
  %24 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 2
  %25 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %25, i64 0, i32 3, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %25, i64 0, i32 1
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 7, i32 0, i64 4
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %25, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %30, i64 %33, i64* %26) #6, !srcloc !18
  %35 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 3
  %36 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %36, i64 0, i32 3, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %36, i64 0, i32 1
  %39 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 0, i32 7, i32 0, i64 4
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %36, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %41, i64 %44, i64* %37) #6, !srcloc !18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCache7IterateEPNS0_11RootVisitorE(%"class.v8::internal::CompilationCache"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %4 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 0
  %5 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %5, i64 0, i32 3, i64 0
  %7 = ptrtoint %"class.v8::internal::Object"* %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %5, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %5, i64 0, i32 3, i64 %10
  %12 = ptrtoint %"class.v8::internal::Object"* %11 to i64
  %13 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %3, align 8
  %14 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %13, i64 2
  %15 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %14, align 8
  tail call void %15(%"class.v8::internal::RootVisitor"* %1, i32 9, i8* null, i64 %7, i64 %12) #6
  %16 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 1
  %17 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %17, i64 0, i32 3, i64 0
  %19 = ptrtoint %"class.v8::internal::Object"* %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %17, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %17, i64 0, i32 3, i64 %22
  %24 = ptrtoint %"class.v8::internal::Object"* %23 to i64
  %25 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %3, align 8
  %26 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %25, i64 2
  %27 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %26, align 8
  tail call void %27(%"class.v8::internal::RootVisitor"* %1, i32 9, i8* null, i64 %19, i64 %24) #6
  %28 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 2
  %29 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %29, i64 0, i32 3, i64 0
  %31 = ptrtoint %"class.v8::internal::Object"* %30 to i64
  %32 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %29, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %29, i64 0, i32 3, i64 %34
  %36 = ptrtoint %"class.v8::internal::Object"* %35 to i64
  %37 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %3, align 8
  %38 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %37, i64 2
  %39 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %38, align 8
  tail call void %39(%"class.v8::internal::RootVisitor"* %1, i32 9, i8* null, i64 %31, i64 %36) #6
  %40 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 3
  %41 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %41, i64 0, i32 3, i64 0
  %43 = ptrtoint %"class.v8::internal::Object"* %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %41, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %41, i64 0, i32 3, i64 %46
  %48 = ptrtoint %"class.v8::internal::Object"* %47 to i64
  %49 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %3, align 8
  %50 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %49, i64 2
  %51 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %50, align 8
  tail call void %51(%"class.v8::internal::RootVisitor"* %1, i32 9, i8* null, i64 %43, i64 %48) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCache19MarkCompactPrologueEv(%"class.v8::internal::CompilationCache"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 0
  %3 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %2, align 8
  %4 = bitcast %"class.v8::internal::CompilationSubCache"* %3 to void (%"class.v8::internal::CompilationSubCache"*)***
  %5 = load void (%"class.v8::internal::CompilationSubCache"*)**, void (%"class.v8::internal::CompilationSubCache"*)*** %4, align 8
  %6 = load void (%"class.v8::internal::CompilationSubCache"*)*, void (%"class.v8::internal::CompilationSubCache"*)** %5, align 8
  tail call void %6(%"class.v8::internal::CompilationSubCache"* %3) #6
  %7 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 1
  %8 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %7, align 8
  %9 = bitcast %"class.v8::internal::CompilationSubCache"* %8 to void (%"class.v8::internal::CompilationSubCache"*)***
  %10 = load void (%"class.v8::internal::CompilationSubCache"*)**, void (%"class.v8::internal::CompilationSubCache"*)*** %9, align 8
  %11 = load void (%"class.v8::internal::CompilationSubCache"*)*, void (%"class.v8::internal::CompilationSubCache"*)** %10, align 8
  tail call void %11(%"class.v8::internal::CompilationSubCache"* %8) #6
  %12 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 2
  %13 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %12, align 8
  %14 = bitcast %"class.v8::internal::CompilationSubCache"* %13 to void (%"class.v8::internal::CompilationSubCache"*)***
  %15 = load void (%"class.v8::internal::CompilationSubCache"*)**, void (%"class.v8::internal::CompilationSubCache"*)*** %14, align 8
  %16 = load void (%"class.v8::internal::CompilationSubCache"*)*, void (%"class.v8::internal::CompilationSubCache"*)** %15, align 8
  tail call void %16(%"class.v8::internal::CompilationSubCache"* %13) #6
  %17 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 3
  %18 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %17, align 8
  %19 = bitcast %"class.v8::internal::CompilationSubCache"* %18 to void (%"class.v8::internal::CompilationSubCache"*)***
  %20 = load void (%"class.v8::internal::CompilationSubCache"*)**, void (%"class.v8::internal::CompilationSubCache"*)*** %19, align 8
  %21 = load void (%"class.v8::internal::CompilationSubCache"*)*, void (%"class.v8::internal::CompilationSubCache"*)** %20, align 8
  tail call void %21(%"class.v8::internal::CompilationSubCache"* %18) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal16CompilationCache19EnableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 6
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16CompilationCache20DisableScriptAndEvalEv(%"class.v8::internal::CompilationCache"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 6
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 0
  %4 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %4, i64 0, i32 3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %4, i64 0, i32 1
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %4, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %9, i64 %12, i64* %5) #6, !srcloc !18
  %14 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 1
  %15 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %15, i64 0, i32 3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %15, i64 0, i32 1
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 4
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %15, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %20, i64 %23, i64* %16) #6, !srcloc !18
  %25 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 2
  %26 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %26, i64 0, i32 3, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %26, i64 0, i32 1
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 7, i32 0, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %26, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %31, i64 %34, i64* %27) #6, !srcloc !18
  %36 = getelementptr inbounds %"class.v8::internal::CompilationCache", %"class.v8::internal::CompilationCache"* %0, i64 0, i32 5, i64 3
  %37 = load %"class.v8::internal::CompilationSubCache"*, %"class.v8::internal::CompilationSubCache"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %37, i64 0, i32 3, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %37, i64 0, i32 1
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 7, i32 0, i64 4
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::CompilationSubCache", %"class.v8::internal::CompilationSubCache"* %37, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = sext i32 %44 to i64
  %46 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %42, i64 %45, i64* %38) #6, !srcloc !18
  ret void
}

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !8}
!17 = distinct !{!17, !8}
!18 = !{i32 18856783}
