; ModuleID = '../../third_party/skia/src/c/sk_surface.cpp'
source_filename = "../../third_party/skia/src/c/sk_surface.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkCubicResampler = type { float, float }
%struct.anon.48 = type { i32, i32 }
%struct.anon.49 = type { i32, i32 }
%struct.sk_image_t = type opaque
%struct.sk_imageinfo_t = type opaque
%class.sk_sp.6 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.sk_data_t = type opaque
%class.sk_sp.7 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.8, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.sk_pathbuilder_t = type opaque
%class.SkPathBuilder = type { %class.SkTDArray, %class.SkTDArray.9, %class.SkTDArray.10, i32, i8, i32, %struct.SkPoint, i8, i32, i32, i8, i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.9 = type { i8*, i32, i32 }
%class.SkTDArray.10 = type { float*, i32, i32 }
%struct.SkPoint = type { float, float }
%struct.sk_rect_t = type { float, float, float, float }
%struct.SkRect = type { float, float, float, float }
%struct.sk_path_t = type opaque
%class.SkPath = type <{ %class.sk_sp.11, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.11 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.12, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.9, %class.SkTDArray.10, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.12 = type { %"struct.std::__1::atomic" }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.13 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.13 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.14", [3 x i8] }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%struct.sk_canvas_t = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.18, [384 x i64], %class.sk_sp.19, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.21" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.18 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.19 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.sk_paint_t = type opaque
%class.SkPaint = type <{ %class.sk_sp.27, %class.sk_sp.28, %class.sk_sp.29, %class.sk_sp.30, %class.sk_sp.31, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.27 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.28 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.29 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.30 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.31 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%struct.sk_matrix_t = type { [9 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%struct.sk_sampling_options_t = type { i8, %struct.sk_cubic_resampler_t, i32, i32 }
%struct.sk_cubic_resampler_t = type { float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.sk_picture_t = type opaque
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.14", [7 x i8] }>
%struct.sk_surface_t = type opaque
%struct.sk_surfaceprops_t = type { i32 }
%class.sk_sp.32 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%struct.sk_picture_recorder_t = type opaque
%class.SkPictureRecorder = type { i8, %struct.SkRect, %class.sk_sp.33, %"class.std::__1::unique_ptr.34", %class.sk_sp.40, %"class.std::__1::unique_ptr.41" }
%class.sk_sp.33 = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.SkRecorder* }
%class.SkRecorder = type opaque
%class.sk_sp.40 = type { %class.SkRecord* }
%class.SkRecord = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.SkMiniRecorder* }
%class.SkMiniRecorder = type opaque
%class.SkBBHFactory = type { i32 (...)** }
%class.sk_sp.47 = type { %class.SkPicture* }

@__const.sk_canvas_draw_image_rect.sampling = private unnamed_addr constant { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkCubicResampler { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 }, align 4
@_ZL11gPathDirMap = internal unnamed_addr constant [2 x %struct.anon.48] [%struct.anon.48 zeroinitializer, %struct.anon.48 { i32 1, i32 1 }], align 16
@_ZL17gPixelGeometryMap = internal unnamed_addr constant [5 x %struct.anon.49] [%struct.anon.49 zeroinitializer, %struct.anon.49 { i32 1, i32 1 }, %struct.anon.49 { i32 2, i32 2 }, %struct.anon.49 { i32 3, i32 3 }, %struct.anon.49 { i32 4, i32 4 }], align 16

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_image_t* @sk_image_new_raster_copy(%struct.sk_imageinfo_t* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %class.sk_sp.6, align 8
  %5 = alloca %class.SkPixmap, align 8
  %6 = bitcast %struct.sk_imageinfo_t* %0 to %struct.SkImageInfo*
  %7 = bitcast %class.sk_sp.6* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #9
  %9 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = bitcast %struct.sk_imageinfo_t* %0 to %class.SkColorSpace**
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %15, %3
  store %class.SkColorSpace* %13, %class.SkColorSpace** %11, align 8
  %19 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 1
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %21 = bitcast i32* %20 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8
  %23 = bitcast i32* %19 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 8
  call void @_ZN7SkImage14MakeRasterCopyERK8SkPixmap(%class.sk_sp.6* nonnull sret %4, %class.SkPixmap* nonnull dereferenceable(40) %5) #9
  %24 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %4, i64 0, i32 0
  %25 = bitcast %class.sk_sp.6* %4 to %struct.sk_image_t**
  %26 = load %struct.sk_image_t*, %struct.sk_image_t** %25, align 8
  store %class.SkImage* null, %class.SkImage** %24, align 8
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %28 = icmp eq %class.SkColorSpace* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  %34 = bitcast %class.SkColorSpace* %27 to i8*
  call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %18, %29, %33
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret %struct.sk_image_t* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7SkImage14MakeRasterCopyERK8SkPixmap(%class.sk_sp.6* sret, %class.SkPixmap* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_image_t* @sk_image_new_from_encoded(%struct.sk_data_t*) local_unnamed_addr #0 {
  %2 = alloca %class.sk_sp.6, align 8
  %3 = alloca %class.sk_sp.7, align 8
  %4 = bitcast %class.sk_sp.6* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = icmp eq %struct.sk_data_t* %0, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %struct.sk_data_t* %0 to i32*
  %8 = atomicrmw add i32* %7, i32 1 monotonic, !noalias !2
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %3, i64 0, i32 0
  %11 = bitcast %class.sk_sp.7* %3 to %struct.sk_data_t**
  store %struct.sk_data_t* %0, %struct.sk_data_t** %11, align 8, !alias.scope !2
  call void @_ZN7SkImage15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp.6* nonnull sret %2, %class.sk_sp.7* nonnull %3) #9
  %12 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %2, i64 0, i32 0
  %13 = bitcast %class.sk_sp.6* %2 to %struct.sk_image_t**
  %14 = load %struct.sk_image_t*, %struct.sk_image_t** %13, align 8
  store %class.SkImage* null, %class.SkImage** %12, align 8
  %15 = load %class.SkData*, %class.SkData** %10, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %15) #9
  %22 = bitcast %class.SkData* %15 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %22) #9
  br label %23

23:                                               ; preds = %9, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret %struct.sk_image_t* %14
}

declare void @_ZN7SkImage15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp.6* sret, %class.sk_sp.7*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_data_t* @sk_image_encode(%struct.sk_image_t*) local_unnamed_addr #0 {
  %2 = alloca %class.sk_sp.7, align 8
  %3 = bitcast %class.sk_sp.7* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #9
  %4 = bitcast %struct.sk_image_t* %0 to %class.SkImage*
  call void @_ZNK7SkImage12encodeToDataEv(%class.sk_sp.7* nonnull sret %2, %class.SkImage* %4) #9
  %5 = bitcast %class.sk_sp.7* %2 to %struct.sk_data_t**
  %6 = load %struct.sk_data_t*, %struct.sk_data_t** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #9
  ret %struct.sk_data_t* %6
}

declare void @_ZNK7SkImage12encodeToDataEv(%class.sk_sp.7* sret, %class.SkImage*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sk_image_ref(%struct.sk_image_t* nocapture) local_unnamed_addr #3 {
  %2 = bitcast %struct.sk_image_t* %0 to %class.SkRefCntBase*
  %3 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i32* %3, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_image_unref(%struct.sk_image_t*) local_unnamed_addr #0 {
  %2 = bitcast %struct.sk_image_t* %0 to %class.SkRefCntBase*
  %3 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i32* %3, i32 -1 acq_rel
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = bitcast %struct.sk_image_t* %0 to void (%class.SkRefCntBase*)***
  %8 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %8, i64 2
  %10 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %9, align 8
  tail call void %10(%class.SkRefCntBase* %2) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sk_image_get_width(%struct.sk_image_t* nocapture readonly) local_unnamed_addr #4 {
  %2 = bitcast %struct.sk_image_t* %0 to %class.SkImage*
  %3 = getelementptr inbounds %class.SkImage, %class.SkImage* %2, i64 0, i32 2, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sk_image_get_height(%struct.sk_image_t* nocapture readonly) local_unnamed_addr #4 {
  %2 = bitcast %struct.sk_image_t* %0 to %class.SkImage*
  %3 = getelementptr inbounds %class.SkImage, %class.SkImage* %2, i64 0, i32 2, i32 1, i32 1
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sk_image_get_unique_id(%struct.sk_image_t* nocapture readonly) local_unnamed_addr #4 {
  %2 = bitcast %struct.sk_image_t* %0 to %class.SkImage*
  %3 = getelementptr inbounds %class.SkImage, %class.SkImage* %2, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %struct.sk_pathbuilder_t* @sk_pathbuilder_new() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 88) #10
  %2 = bitcast i8* %1 to %class.SkPathBuilder*
  tail call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %2) #9
  %3 = bitcast i8* %1 to %struct.sk_pathbuilder_t*
  ret %struct.sk_pathbuilder_t* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_pathbuilder_delete(%struct.sk_pathbuilder_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sk_pathbuilder_t* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  tail call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %4) #9
  %5 = bitcast %struct.sk_pathbuilder_t* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  br label %6

6:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_pathbuilder_move_to(%struct.sk_pathbuilder_t*, float, float) local_unnamed_addr #8 {
  %4 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  %5 = insertelement <2 x float> undef, float %1, i32 0
  %6 = insertelement <2 x float> %5, float %2, i32 1
  %7 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %4, <2 x float> %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_pathbuilder_line_to(%struct.sk_pathbuilder_t*, float, float) local_unnamed_addr #8 {
  %4 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  %5 = insertelement <2 x float> undef, float %1, i32 0
  %6 = insertelement <2 x float> %5, float %2, i32 1
  %7 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %4, <2 x float> %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_pathbuilder_quad_to(%struct.sk_pathbuilder_t*, float, float, float, float) local_unnamed_addr #8 {
  %6 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  %7 = insertelement <2 x float> undef, float %1, i32 0
  %8 = insertelement <2 x float> %7, float %2, i32 1
  %9 = insertelement <2 x float> undef, float %3, i32 0
  %10 = insertelement <2 x float> %9, float %4, i32 1
  %11 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder* %6, <2 x float> %8, <2 x float> %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_pathbuilder_conic_to(%struct.sk_pathbuilder_t*, float, float, float, float, float) local_unnamed_addr #8 {
  %7 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  %8 = insertelement <2 x float> undef, float %1, i32 0
  %9 = insertelement <2 x float> %8, float %2, i32 1
  %10 = insertelement <2 x float> undef, float %3, i32 0
  %11 = insertelement <2 x float> %10, float %4, i32 1
  %12 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %7, <2 x float> %9, <2 x float> %11, float %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_pathbuilder_cubic_to(%struct.sk_pathbuilder_t*, float, float, float, float, float, float) local_unnamed_addr #8 {
  %8 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  %9 = insertelement <2 x float> undef, float %1, i32 0
  %10 = insertelement <2 x float> %9, float %2, i32 1
  %11 = insertelement <2 x float> undef, float %3, i32 0
  %12 = insertelement <2 x float> %11, float %4, i32 1
  %13 = insertelement <2 x float> undef, float %5, i32 0
  %14 = insertelement <2 x float> %13, float %6, i32 1
  %15 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* %8, <2 x float> %10, <2 x float> %12, <2 x float> %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_pathbuilder_close(%struct.sk_pathbuilder_t*) local_unnamed_addr #0 {
  %2 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  %3 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* %2) #9
  ret void
}

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_pathbuilder_add_rect(%struct.sk_pathbuilder_t*, %struct.sk_rect_t*, i32) local_unnamed_addr #0 {
  switch i32 %2, label %12 [
    i32 0, label %5
    i32 1, label %4
  ]

4:                                                ; preds = %3
  br label %5

5:                                                ; preds = %3, %4
  %6 = phi i64 [ 0, %3 ], [ 1, %4 ]
  %7 = getelementptr inbounds [2 x %struct.anon.48], [2 x %struct.anon.48]* @_ZL11gPathDirMap, i64 0, i64 %6, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  %10 = bitcast %struct.sk_rect_t* %1 to %struct.SkRect*
  %11 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addRectERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* %9, %struct.SkRect* dereferenceable(16) %10, i32 %8, i32 0) #9
  br label %12

12:                                               ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_pathbuilder_add_oval(%struct.sk_pathbuilder_t*, %struct.sk_rect_t*, i32) local_unnamed_addr #0 {
  switch i32 %2, label %12 [
    i32 0, label %5
    i32 1, label %4
  ]

4:                                                ; preds = %3
  br label %5

5:                                                ; preds = %3, %4
  %6 = phi i64 [ 0, %3 ], [ 1, %4 ]
  %7 = getelementptr inbounds [2 x %struct.anon.48], [2 x %struct.anon.48]* @_ZL11gPathDirMap, i64 0, i64 %6, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  %10 = bitcast %struct.sk_rect_t* %1 to %struct.SkRect*
  %11 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addOvalERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* %9, %struct.SkRect* dereferenceable(16) %10, i32 %8, i32 1) #9
  br label %12

12:                                               ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %struct.sk_path_t* @sk_pathbuilder_detach_path(%struct.sk_pathbuilder_t*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 16) #10
  %3 = bitcast i8* %2 to %class.SkPath*
  %4 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  tail call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* nonnull sret %3, %class.SkPathBuilder* %4) #9
  %5 = bitcast i8* %2 to %struct.sk_path_t*
  ret %struct.sk_path_t* %5
}

declare void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret, %class.SkPathBuilder*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %struct.sk_path_t* @sk_pathbuilder_snapshot_path(%struct.sk_pathbuilder_t*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 16) #10
  %3 = bitcast i8* %2 to %class.SkPath*
  %4 = bitcast %struct.sk_pathbuilder_t* %0 to %class.SkPathBuilder*
  tail call void @_ZNK13SkPathBuilder8snapshotEv(%class.SkPath* nonnull sret %3, %class.SkPathBuilder* %4) #9
  %5 = bitcast i8* %2 to %struct.sk_path_t*
  ret %struct.sk_path_t* %5
}

declare void @_ZNK13SkPathBuilder8snapshotEv(%class.SkPath* sret, %class.SkPathBuilder*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_path_delete(%struct.sk_path_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sk_path_t* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_path_t* %0 to %class.SkPath*
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #9
  %5 = bitcast %struct.sk_path_t* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  br label %6

6:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @sk_path_get_bounds(%struct.sk_path_t* nocapture readonly, %struct.sk_rect_t*) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_path_t* %0 to %class.SkPathRef**
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = icmp ne %struct.sk_rect_t* %1, null
  br i1 %7, label %9, label %12

9:                                                ; preds = %2
  br i1 %8, label %10, label %31

10:                                               ; preds = %9
  %11 = bitcast %struct.sk_rect_t* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 16, i1 false)
  br label %31

12:                                               ; preds = %2
  br i1 %8, label %13, label %31

13:                                               ; preds = %12
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 9
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 1
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %20 = load %struct.SkPoint*, %struct.SkPoint** %19, align 8
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %18, %struct.SkPoint* %20, i32 %22) #9
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 10
  %25 = zext i1 %23 to i8
  store i8 %25, i8* %24, align 1
  store i8 0, i8* %14, align 8
  br label %26

26:                                               ; preds = %13, %17
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 1
  %28 = bitcast %struct.SkRect* %27 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 4
  %30 = bitcast %struct.sk_rect_t* %1 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %30, align 4
  br label %31

31:                                               ; preds = %12, %26, %9, %10
  %32 = phi i1 [ false, %10 ], [ false, %9 ], [ true, %26 ], [ true, %12 ]
  ret i1 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_save(%struct.sk_canvas_t*) local_unnamed_addr #0 {
  %2 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %3 = tail call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* %2) #9
  ret void
}

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_save_layer(%struct.sk_canvas_t*, %struct.sk_rect_t*, %struct.sk_paint_t*) local_unnamed_addr #0 {
  %4 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %5 = bitcast %struct.sk_rect_t* %1 to %struct.SkRect*
  %6 = bitcast %struct.sk_paint_t* %2 to %class.SkPaint*
  tail call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %4, %struct.SkRect* dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %6) #9
  ret void
}

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_restore(%struct.sk_canvas_t*) local_unnamed_addr #0 {
  %2 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  tail call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* %2) #9
  ret void
}

declare void @_ZN8SkCanvas7restoreEv(%class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_translate(%struct.sk_canvas_t*, float, float) local_unnamed_addr #0 {
  %4 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  tail call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %4, float %1, float %2) #9
  ret void
}

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_scale(%struct.sk_canvas_t*, float, float) local_unnamed_addr #0 {
  %4 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  tail call void @_ZN8SkCanvas5scaleEff(%class.SkCanvas* %4, float %1, float %2) #9
  ret void
}

declare void @_ZN8SkCanvas5scaleEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_rotate_degrees(%struct.sk_canvas_t*, float) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  tail call void @_ZN8SkCanvas6rotateEf(%class.SkCanvas* %3, float %1) #9
  ret void
}

declare void @_ZN8SkCanvas6rotateEf(%class.SkCanvas*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_rotate_radians(%struct.sk_canvas_t*, float) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %4 = fmul float %1, 0x404CA5DC00000000
  tail call void @_ZN8SkCanvas6rotateEf(%class.SkCanvas* %3, float %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_skew(%struct.sk_canvas_t*, float, float) local_unnamed_addr #0 {
  %4 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  tail call void @_ZN8SkCanvas4skewEff(%class.SkCanvas* %4, float %1, float %2) #9
  ret void
}

declare void @_ZN8SkCanvas4skewEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_concat(%struct.sk_canvas_t*, %struct.sk_matrix_t* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #9
  %5 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  %8 = bitcast %struct.sk_matrix_t* %1 to <4 x i32>*
  %9 = load <4 x i32>, <4 x i32>* %8, align 4
  %10 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %1, i64 0, i32 0, i64 4
  %11 = bitcast float* %10 to <4 x i32>*
  %12 = load <4 x i32>, <4 x i32>* %11, align 4
  %13 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %1, i64 0, i32 0, i64 8
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %class.SkMatrix* %3 to <4 x i32>*
  store <4 x i32> %9, <4 x i32>* %16, align 16
  %17 = bitcast float* %6 to <4 x i32>*
  store <4 x i32> %12, <4 x i32>* %17, align 16
  %18 = bitcast float* %7 to i32*
  store i32 %15, i32* %18, align 16
  store i32 128, i32* %5, align 4
  %19 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %19, %class.SkMatrix* nonnull dereferenceable(40) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_clip_rect(%struct.sk_canvas_t*, %struct.sk_rect_t*) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %4 = bitcast %struct.sk_rect_t* %1 to %struct.SkRect*
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %3, %struct.SkRect* dereferenceable(16) %4, i32 1, i1 zeroext false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_clip_path(%struct.sk_canvas_t*, %struct.sk_path_t*) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %4 = bitcast %struct.sk_path_t* %1 to %class.SkPath*
  tail call void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas* %3, %class.SkPath* dereferenceable(16) %4, i32 1, i1 zeroext false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_draw_paint(%struct.sk_canvas_t*, %struct.sk_paint_t*) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %4 = bitcast %struct.sk_paint_t* %1 to %class.SkPaint*
  tail call void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas* %3, %class.SkPaint* dereferenceable(72) %4) #9
  ret void
}

declare void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_draw_rect(%struct.sk_canvas_t*, %struct.sk_rect_t*, %struct.sk_paint_t*) local_unnamed_addr #0 {
  %4 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %5 = bitcast %struct.sk_rect_t* %1 to %struct.SkRect*
  %6 = bitcast %struct.sk_paint_t* %2 to %class.SkPaint*
  tail call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %4, %struct.SkRect* dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_draw_circle(%struct.sk_canvas_t*, float, float, float, %struct.sk_paint_t*) local_unnamed_addr #0 {
  %6 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %7 = bitcast %struct.sk_paint_t* %4 to %class.SkPaint*
  tail call void @_ZN8SkCanvas10drawCircleEfffRK7SkPaint(%class.SkCanvas* %6, float %1, float %2, float %3, %class.SkPaint* dereferenceable(72) %7) #9
  ret void
}

declare void @_ZN8SkCanvas10drawCircleEfffRK7SkPaint(%class.SkCanvas*, float, float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_draw_oval(%struct.sk_canvas_t*, %struct.sk_rect_t*, %struct.sk_paint_t*) local_unnamed_addr #0 {
  %4 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %5 = bitcast %struct.sk_rect_t* %1 to %struct.SkRect*
  %6 = bitcast %struct.sk_paint_t* %2 to %class.SkPaint*
  tail call void @_ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint(%class.SkCanvas* %4, %struct.SkRect* dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %6) #9
  ret void
}

declare void @_ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_draw_path(%struct.sk_canvas_t*, %struct.sk_path_t*, %struct.sk_paint_t*) local_unnamed_addr #0 {
  %4 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %5 = bitcast %struct.sk_path_t* %1 to %class.SkPath*
  %6 = bitcast %struct.sk_paint_t* %2 to %class.SkPaint*
  tail call void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas* %4, %class.SkPath* dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %6) #9
  ret void
}

declare void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_draw_image(%struct.sk_canvas_t*, %struct.sk_image_t*, float, float, %struct.sk_sampling_options_t* readonly, %struct.sk_paint_t*) local_unnamed_addr #0 {
  %7 = alloca %struct.SkSamplingOptions, align 4
  %8 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %9 = bitcast %struct.sk_image_t* %1 to %class.SkImage*
  %10 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %10) #9
  %11 = icmp eq %struct.sk_sampling_options_t* %4, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 0
  %14 = load i8, i8* %13, align 4, !range !5, !noalias !6
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 1
  %18 = bitcast %struct.sk_cubic_resampler_t* %17 to i32*
  %19 = load i32, i32* %18, align 4, !noalias !6
  %20 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 1, i32 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4, !noalias !6
  store i8 1, i8* %10, align 4, !alias.scope !6
  %23 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 1
  %24 = bitcast %struct.SkCubicResampler* %23 to i64*
  %25 = zext i32 %22 to i64
  %26 = shl nuw i64 %25, 32
  %27 = zext i32 %19 to i64
  %28 = or i64 %26, %27
  store i64 %28, i64* %24, align 4, !alias.scope !6
  %29 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 2
  store i32 0, i32* %29, align 4, !alias.scope !6
  %30 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 3
  store i32 0, i32* %30, align 4, !alias.scope !6
  br label %41

31:                                               ; preds = %12
  %32 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 2
  %33 = load i32, i32* %32, align 4, !noalias !6
  %34 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 3
  %35 = load i32, i32* %34, align 4, !noalias !6
  store i8 0, i8* %10, align 4, !alias.scope !6
  %36 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %36, align 4, !alias.scope !6
  %37 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %37, align 4, !alias.scope !6
  %38 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 2
  store i32 %33, i32* %38, align 4, !alias.scope !6
  %39 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 3
  store i32 %35, i32* %39, align 4, !alias.scope !6
  br label %41

40:                                               ; preds = %6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 0, i64 20, i1 false) #9, !alias.scope !6
  br label %41

41:                                               ; preds = %16, %31, %40
  %42 = bitcast %struct.sk_paint_t* %5 to %class.SkPaint*
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %8, %class.SkImage* %9, float %2, float %3, %struct.SkSamplingOptions* nonnull dereferenceable(20) %7, %class.SkPaint* %42) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %10) #9
  ret void
}

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_draw_image_rect(%struct.sk_canvas_t*, %struct.sk_image_t*, %struct.sk_rect_t*, %struct.sk_rect_t*, %struct.sk_sampling_options_t* readonly, %struct.sk_paint_t*) local_unnamed_addr #0 {
  %7 = alloca %struct.SkSamplingOptions, align 4
  %8 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %9 = bitcast %struct.sk_image_t* %1 to %class.SkImage*
  %10 = bitcast %struct.sk_rect_t* %3 to %struct.SkRect*
  %11 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const.sk_canvas_draw_image_rect.sampling, i64 0, i32 0), i64 20, i1 false)
  %12 = icmp eq %struct.sk_sampling_options_t* %4, null
  br i1 %12, label %41, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 0
  %15 = load i8, i8* %14, align 4, !range !5, !noalias !9
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 1
  %19 = bitcast %struct.sk_cubic_resampler_t* %18 to i32*
  %20 = load i32, i32* %19, align 4, !noalias !9
  %21 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 1, i32 1
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4, !noalias !9
  store i8 1, i8* %11, align 4, !alias.scope !9
  %24 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 1
  %25 = bitcast %struct.SkCubicResampler* %24 to i64*
  %26 = zext i32 %23 to i64
  %27 = shl nuw i64 %26, 32
  %28 = zext i32 %20 to i64
  %29 = or i64 %27, %28
  store i64 %29, i64* %25, align 4, !alias.scope !9
  %30 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 2
  store i32 0, i32* %30, align 4, !alias.scope !9
  %31 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 3
  store i32 0, i32* %31, align 4, !alias.scope !9
  br label %42

32:                                               ; preds = %13
  %33 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 2
  %34 = load i32, i32* %33, align 4, !noalias !9
  %35 = getelementptr inbounds %struct.sk_sampling_options_t, %struct.sk_sampling_options_t* %4, i64 0, i32 3
  %36 = load i32, i32* %35, align 4, !noalias !9
  store i8 0, i8* %11, align 4, !alias.scope !9
  %37 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %37, align 4, !alias.scope !9
  %38 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %38, align 4, !alias.scope !9
  %39 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 2
  store i32 %34, i32* %39, align 4, !alias.scope !9
  %40 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 3
  store i32 %36, i32* %40, align 4, !alias.scope !9
  br label %42

41:                                               ; preds = %6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 20, i1 false) #9, !alias.scope !9
  br label %42

42:                                               ; preds = %17, %32, %41
  %43 = bitcast %struct.sk_paint_t* %5 to %class.SkPaint*
  %44 = icmp eq %struct.sk_rect_t* %2, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = bitcast %struct.sk_rect_t* %2 to %struct.SkRect*
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* %8, %class.SkImage* %9, %struct.SkRect* nonnull dereferenceable(16) %46, %struct.SkRect* dereferenceable(16) %10, %struct.SkSamplingOptions* nonnull dereferenceable(20) %7, %class.SkPaint* %43, i32 0) #9
  br label %48

47:                                               ; preds = %42
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %8, %class.SkImage* %9, %struct.SkRect* dereferenceable(16) %10, %struct.SkSamplingOptions* nonnull dereferenceable(20) %7, %class.SkPaint* %43) #9
  br label %48

48:                                               ; preds = %47, %45
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11) #9
  ret void
}

declare void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_canvas_draw_picture(%struct.sk_canvas_t*, %struct.sk_picture_t*, %struct.sk_matrix_t* readonly, %struct.sk_paint_t*) local_unnamed_addr #0 {
  %5 = alloca %class.SkMatrix, align 16
  %6 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %8 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %8, align 16
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %10, align 16
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %11, align 16
  store i32 16, i32* %7, align 4
  %12 = icmp eq %struct.sk_matrix_t* %2, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %4
  %14 = bitcast %struct.sk_matrix_t* %2 to <4 x i32>*
  %15 = load <4 x i32>, <4 x i32>* %14, align 4
  %16 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %2, i64 0, i32 0, i64 4
  %17 = bitcast float* %16 to <4 x i32>*
  %18 = load <4 x i32>, <4 x i32>* %17, align 4
  %19 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %2, i64 0, i32 0, i64 8
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %class.SkMatrix* %5 to <4 x i32>*
  store <4 x i32> %15, <4 x i32>* %22, align 16
  %23 = bitcast float* %9 to <4 x i32>*
  store <4 x i32> %18, <4 x i32>* %23, align 16
  %24 = bitcast float* %11 to i32*
  store i32 %21, i32* %24, align 16
  store i32 128, i32* %7, align 4
  br label %25

25:                                               ; preds = %4, %13
  %26 = phi %class.SkMatrix* [ %5, %13 ], [ null, %4 ]
  %27 = bitcast %struct.sk_canvas_t* %0 to %class.SkCanvas*
  %28 = bitcast %struct.sk_picture_t* %1 to %class.SkPicture*
  %29 = bitcast %struct.sk_paint_t* %3 to %class.SkPaint*
  call void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas* %27, %class.SkPicture* %28, %class.SkMatrix* %26, %class.SkPaint* %29) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  ret void
}

declare void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_surface_t* @sk_surface_new_raster(%struct.sk_imageinfo_t*, %struct.sk_surfaceprops_t* readonly) local_unnamed_addr #0 {
  %3 = alloca %class.SkSurfaceProps, align 4
  %4 = alloca %class.sk_sp.32, align 8
  %5 = bitcast %struct.sk_imageinfo_t* %0 to %struct.SkImageInfo*
  %6 = icmp eq %struct.sk_surfaceprops_t* %1, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.sk_surfaceprops_t, %struct.sk_surfaceprops_t* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, 5
  br i1 %10, label %11, label %23

11:                                               ; preds = %7
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds [5 x %struct.anon.49], [5 x %struct.anon.49]* @_ZL17gPixelGeometryMap, i64 0, i64 %12, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i32 [ 0, %2 ], [ %14, %11 ]
  %17 = bitcast %class.SkSurfaceProps* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %3, i64 0, i32 0
  store i32 -1431655766, i32* %18, align 4
  %19 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %3, i64 0, i32 1
  store i32 -1431655766, i32* %19, align 4
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %3, i32 0, i32 %16) #9
  %20 = bitcast %class.sk_sp.32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.32* nonnull sret %4, %struct.SkImageInfo* dereferenceable(24) %5, i64 0, %class.SkSurfaceProps* nonnull %3) #9
  %21 = bitcast %class.sk_sp.32* %4 to %struct.sk_surface_t**
  %22 = load %struct.sk_surface_t*, %struct.sk_surface_t** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %23

23:                                               ; preds = %7, %15
  %24 = phi %struct.sk_surface_t* [ %22, %15 ], [ null, %7 ]
  ret %struct.sk_surface_t* %24
}

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_surface_t* @sk_surface_new_raster_direct(%struct.sk_imageinfo_t*, i8*, i64, %struct.sk_surfaceprops_t* readonly) local_unnamed_addr #0 {
  %5 = alloca %class.SkSurfaceProps, align 4
  %6 = alloca %class.sk_sp.32, align 8
  %7 = bitcast %struct.sk_imageinfo_t* %0 to %struct.SkImageInfo*
  %8 = icmp eq %struct.sk_surfaceprops_t* %3, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.sk_surfaceprops_t, %struct.sk_surfaceprops_t* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, 5
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds [5 x %struct.anon.49], [5 x %struct.anon.49]* @_ZL17gPixelGeometryMap, i64 0, i64 %14, i32 1
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %4, %13
  %18 = phi i32 [ 0, %4 ], [ %16, %13 ]
  %19 = bitcast %class.SkSurfaceProps* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %5, i64 0, i32 0
  store i32 -1431655766, i32* %20, align 4
  %21 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %5, i64 0, i32 1
  store i32 -1431655766, i32* %21, align 4
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %5, i32 0, i32 %18) #9
  %22 = bitcast %class.sk_sp.32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN9SkSurface16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%class.sk_sp.32* nonnull sret %6, %struct.SkImageInfo* dereferenceable(24) %7, i8* %1, i64 %2, %class.SkSurfaceProps* nonnull %5) #9
  %23 = bitcast %class.sk_sp.32* %6 to %struct.sk_surface_t**
  %24 = load %struct.sk_surface_t*, %struct.sk_surface_t** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %25

25:                                               ; preds = %9, %17
  %26 = phi %struct.sk_surface_t* [ %24, %17 ], [ null, %9 ]
  ret %struct.sk_surface_t* %26
}

declare void @_ZN9SkSurface16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%class.sk_sp.32* sret, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %class.SkSurfaceProps*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_surface_unref(%struct.sk_surface_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sk_surface_t* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_surface_t* %0 to %class.SkSurface*
  %5 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 -1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %struct.sk_surface_t* %0 to %class.SkRefCntBase*
  %10 = bitcast %struct.sk_surface_t* %0 to void (%class.SkRefCntBase*)***
  %11 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %11, i64 2
  %13 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, align 8
  tail call void %13(%class.SkRefCntBase* nonnull %9) #9
  br label %14

14:                                               ; preds = %1, %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_canvas_t* @sk_surface_get_canvas(%struct.sk_surface_t*) local_unnamed_addr #0 {
  %2 = bitcast %struct.sk_surface_t* %0 to %class.SkSurface*
  %3 = tail call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %2) #9
  %4 = bitcast %class.SkCanvas* %3 to %struct.sk_canvas_t*
  ret %struct.sk_canvas_t* %4
}

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_image_t* @sk_surface_new_image_snapshot(%struct.sk_surface_t*) local_unnamed_addr #0 {
  %2 = alloca %class.sk_sp.6, align 8
  %3 = bitcast %struct.sk_surface_t* %0 to %class.SkSurface*
  %4 = bitcast %class.sk_sp.6* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.6* nonnull sret %2, %class.SkSurface* %3) #9
  %5 = bitcast %class.sk_sp.6* %2 to %struct.sk_image_t**
  %6 = load %struct.sk_image_t*, %struct.sk_image_t** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret %struct.sk_image_t* %6
}

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.6* sret, %class.SkSurface*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %struct.sk_picture_recorder_t* @sk_picture_recorder_new() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 56) #10
  %2 = bitcast i8* %1 to %class.SkPictureRecorder*
  tail call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %2) #9
  %3 = bitcast i8* %1 to %struct.sk_picture_recorder_t*
  ret %struct.sk_picture_recorder_t* %3
}

declare void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_picture_recorder_delete(%struct.sk_picture_recorder_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sk_picture_recorder_t* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_picture_recorder_t* %0 to %class.SkPictureRecorder*
  tail call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %4) #9
  %5 = bitcast %struct.sk_picture_recorder_t* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  br label %6

6:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_canvas_t* @sk_picture_recorder_begin_recording(%struct.sk_picture_recorder_t*, %struct.sk_rect_t*) local_unnamed_addr #0 {
  %3 = bitcast %struct.sk_picture_recorder_t* %0 to %class.SkPictureRecorder*
  %4 = bitcast %struct.sk_rect_t* %1 to %struct.SkRect*
  %5 = tail call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* %3, %struct.SkRect* dereferenceable(16) %4, %class.SkBBHFactory* null) #9
  %6 = bitcast %class.SkCanvas* %5 to %struct.sk_canvas_t*
  ret %struct.sk_canvas_t* %6
}

declare %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder*, %struct.SkRect* dereferenceable(16), %class.SkBBHFactory*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_picture_t* @sk_picture_recorder_end_recording(%struct.sk_picture_recorder_t*) local_unnamed_addr #0 {
  %2 = alloca %class.sk_sp.47, align 8
  %3 = bitcast %class.sk_sp.47* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #9
  %4 = bitcast %struct.sk_picture_recorder_t* %0 to %class.SkPictureRecorder*
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.47* nonnull sret %2, %class.SkPictureRecorder* %4) #9
  %5 = bitcast %class.sk_sp.47* %2 to %struct.sk_picture_t**
  %6 = load %struct.sk_picture_t*, %struct.sk_picture_t** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #9
  ret %struct.sk_picture_t* %6
}

declare void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.47* sret, %class.SkPictureRecorder*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sk_picture_ref(%struct.sk_picture_t*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.sk_picture_t* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_picture_t* %0 to %class.SkPicture*
  %5 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_picture_unref(%struct.sk_picture_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sk_picture_t* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_picture_t* %0 to %class.SkPicture*
  %5 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 -1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %struct.sk_picture_t* %0 to %class.SkRefCntBase*
  %10 = bitcast %struct.sk_picture_t* %0 to void (%class.SkRefCntBase*)***
  %11 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %11, i64 2
  %13 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, align 8
  tail call void %13(%class.SkRefCntBase* nonnull %9) #9
  br label %14

14:                                               ; preds = %1, %3, %8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sk_picture_get_unique_id(%struct.sk_picture_t* nocapture readonly) local_unnamed_addr #4 {
  %2 = bitcast %struct.sk_picture_t* %0 to %class.SkPicture*
  %3 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %2, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @sk_picture_get_bounds(%struct.sk_picture_t*) local_unnamed_addr #0 {
  %2 = bitcast %struct.sk_picture_t* %0 to %class.SkPicture*
  %3 = bitcast %struct.sk_picture_t* %0 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %4 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %3, align 8
  %5 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %4, i64 4
  %6 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %5, align 8
  %7 = tail call { <2 x float>, <2 x float> } %6(%class.SkPicture* %2) #9
  ret { <2 x float>, <2 x float> } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_data_t* @sk_data_new_with_copy(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %class.sk_sp.7, align 8
  %4 = bitcast %class.sk_sp.7* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.7* nonnull sret %3, i8* %0, i64 %1) #9
  %5 = bitcast %class.sk_sp.7* %3 to %struct.sk_data_t**
  %6 = load %struct.sk_data_t*, %struct.sk_data_t** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret %struct.sk_data_t* %6
}

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.7* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_data_t* @sk_data_new_from_malloc(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %class.sk_sp.7, align 8
  %4 = bitcast %class.sk_sp.7* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  call void @_ZN6SkData14MakeFromMallocEPKvm(%class.sk_sp.7* nonnull sret %3, i8* %0, i64 %1) #9
  %5 = bitcast %class.sk_sp.7* %3 to %struct.sk_data_t**
  %6 = load %struct.sk_data_t*, %struct.sk_data_t** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret %struct.sk_data_t* %6
}

declare void @_ZN6SkData14MakeFromMallocEPKvm(%class.sk_sp.7* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_data_t* @sk_data_new_subset(%struct.sk_data_t*, i64, i64) local_unnamed_addr #0 {
  %4 = alloca %class.sk_sp.7, align 8
  %5 = bitcast %class.sk_sp.7* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = bitcast %struct.sk_data_t* %0 to %class.SkData*
  call void @_ZN6SkData10MakeSubsetEPKS_mm(%class.sk_sp.7* nonnull sret %4, %class.SkData* %6, i64 %1, i64 %2) #9
  %7 = bitcast %class.sk_sp.7* %4 to %struct.sk_data_t**
  %8 = load %struct.sk_data_t*, %struct.sk_data_t** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret %struct.sk_data_t* %8
}

declare void @_ZN6SkData10MakeSubsetEPKS_mm(%class.sk_sp.7* sret, %class.SkData*, i64, i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sk_data_ref(%struct.sk_data_t*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.sk_data_t* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_data_t* %0 to i32*
  %5 = atomicrmw add i32* %4, i32 1 monotonic
  br label %6

6:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_data_unref(%struct.sk_data_t*) local_unnamed_addr #0 {
  %2 = bitcast %struct.sk_data_t* %0 to %class.SkData*
  %3 = icmp eq %struct.sk_data_t* %0, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = bitcast %struct.sk_data_t* %0 to i32*
  %6 = atomicrmw add i32* %5, i32 -1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %2) #9
  %9 = bitcast %struct.sk_data_t* %0 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %9) #9
  br label %10

10:                                               ; preds = %1, %4, %8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @sk_data_get_size(%struct.sk_data_t* nocapture readonly) local_unnamed_addr #4 {
  %2 = bitcast %struct.sk_data_t* %0 to %class.SkData*
  %3 = getelementptr inbounds %class.SkData, %class.SkData* %2, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @sk_data_get_data(%struct.sk_data_t* nocapture readonly) local_unnamed_addr #4 {
  %2 = bitcast %struct.sk_data_t* %0 to %class.SkData*
  %3 = getelementptr inbounds %class.SkData, %class.SkData* %2, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  ret i8* %4
}

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder*, <2 x float>, <2 x float>) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder*, <2 x float>, <2 x float>, float) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder*, <2 x float>, <2 x float>, <2 x float>) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addRectERK6SkRect15SkPathDirectionj(%class.SkPathBuilder*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addOvalERK6SkRect15SkPathDirectionj(%class.SkPathBuilder*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.32* sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZL11to_samplingPK21sk_sampling_options_t: argument 0"}
!8 = distinct !{!8, !"_ZL11to_samplingPK21sk_sampling_options_t"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZL11to_samplingPK21sk_sampling_options_t: argument 0"}
!11 = distinct !{!11, !"_ZL11to_samplingPK21sk_sampling_options_t"}
