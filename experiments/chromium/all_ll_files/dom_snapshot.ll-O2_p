; ModuleID = 'gen/headless/public/devtools/domains/dom_snapshot.cc'
source_filename = "gen/headless/public/devtools/domains/dom_snapshot.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::dom_snapshot::Domain" = type { %"class.headless::internal::MessageDispatcher"* }
%"class.headless::internal::MessageDispatcher" = type { i32 (...)** }
%"class.headless::dom_snapshot::ExperimentalDomain" = type { %"class.headless::dom_snapshot::Domain" }
%"class.headless::dom_snapshot::DisableParams" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.37" = type { %"class.base::internal::CallbackBase" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"union.absl::variant_internal::DestructibleUnionImpl.11" }
%"union.absl::variant_internal::DestructibleUnionImpl.11" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.headless::dom_snapshot::DisableResult"* }
%"class.headless::dom_snapshot::DisableResult" = type { i8 }
%"class.headless::ErrorReporter" = type { %"class.std::__1::vector.73", %"class.std::__1::vector.48" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { i8**, i8**, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { i8** }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::basic_string"* }
%"class.headless::dom_snapshot::EnableParams" = type { i8 }
%"class.base::OnceCallback.44" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.headless::dom_snapshot::EnableResult"* }
%"class.headless::dom_snapshot::EnableResult" = type { i8 }
%"class.headless::dom_snapshot::GetSnapshotParams" = type <{ %"class.std::__1::vector.48", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.55 }
%union.anon.55 = type { i8 }
%"class.base::OnceCallback.59" = type { %"class.base::internal::CallbackBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.headless::dom_snapshot::GetSnapshotResult"* }
%"class.headless::dom_snapshot::GetSnapshotResult" = type { %"class.std::__1::vector.89", %"class.std::__1::vector.258", %"class.std::__1::vector.295" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.std::__1::unique_ptr.91"*, %"class.std::__1::unique_ptr.91"*, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.headless::dom_snapshot::DOMNode"* }
%"class.headless::dom_snapshot::DOMNode" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional", %"class.absl::optional", i32, %"class.absl::optional.99", %"class.absl::optional.111", %"class.absl::optional.99", %"class.absl::optional.129", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional.129", %"class.absl::optional.134", %"class.absl::optional.139", %"class.absl::optional", %"class.absl::optional.144", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional.245", %"class.absl::optional.245" }
%"class.absl::optional.111" = type { %"class.absl::optional_internal::optional_data.112" }
%"class.absl::optional_internal::optional_data.112" = type { %"class.absl::optional_internal::optional_data_base.113" }
%"class.absl::optional_internal::optional_data_base.113" = type { %"class.absl::optional_internal::optional_data_dtor_base.114" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { %"class.std::__1::vector.116" }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"class.std::__1::unique_ptr.118"*, %"class.std::__1::unique_ptr.118"*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.headless::dom_snapshot::NameValue"* }
%"class.headless::dom_snapshot::NameValue" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::unique_ptr.118"* }
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, %union.anon.103 }
%union.anon.103 = type { %"class.std::__1::vector.104" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { i32*, i32*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i32* }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { i32 }
%"class.absl::optional.134" = type { %"class.absl::optional_internal::optional_data.135" }
%"class.absl::optional_internal::optional_data.135" = type { %"class.absl::optional_internal::optional_data_base.136" }
%"class.absl::optional_internal::optional_data_base.136" = type { %"class.absl::optional_internal::optional_data_dtor_base.137" }
%"class.absl::optional_internal::optional_data_dtor_base.137" = type { i8, %union.anon.138 }
%union.anon.138 = type { i32 }
%"class.absl::optional.139" = type { %"class.absl::optional_internal::optional_data.140" }
%"class.absl::optional_internal::optional_data.140" = type { %"class.absl::optional_internal::optional_data_base.141" }
%"class.absl::optional_internal::optional_data_base.141" = type { %"class.absl::optional_internal::optional_data_dtor_base.142" }
%"class.absl::optional_internal::optional_data_dtor_base.142" = type { i8, %union.anon.143 }
%union.anon.143 = type { i32 }
%"class.absl::optional.144" = type { %"class.absl::optional_internal::optional_data.145" }
%"class.absl::optional_internal::optional_data.145" = type { %"class.absl::optional_internal::optional_data_base.146" }
%"class.absl::optional_internal::optional_data_base.146" = type { %"class.absl::optional_internal::optional_data_dtor_base.147" }
%"class.absl::optional_internal::optional_data_dtor_base.147" = type { i8, %union.anon.148 }
%union.anon.148 = type { %"class.std::__1::vector.149" }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"class.std::__1::unique_ptr.151"*, %"class.std::__1::unique_ptr.151"*, %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.headless::dom_debugger::EventListener"* }
%"class.headless::dom_debugger::EventListener" = type { %"class.std::__1::basic_string", i8, i8, i8, %"class.std::__1::basic_string", i32, i32, %"class.absl::optional.154", %"class.absl::optional.154", %"class.absl::optional.129" }
%"class.absl::optional.154" = type { %"class.absl::optional_internal::optional_data.155" }
%"class.absl::optional_internal::optional_data.155" = type { %"class.absl::optional_internal::optional_data_base.156" }
%"class.absl::optional_internal::optional_data_base.156" = type { %"class.absl::optional_internal::optional_data_dtor_base.157" }
%"class.absl::optional_internal::optional_data_dtor_base.157" = type { i8, %union.anon.158 }
%union.anon.158 = type { %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.headless::runtime::RemoteObject"* }
%"class.headless::runtime::RemoteObject" = type { i32, %"class.absl::optional.162", %"class.absl::optional.94", %"class.absl::optional.167", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional.94", %"class.absl::optional.176", %"class.absl::optional.223" }
%"class.absl::optional.162" = type { %"class.absl::optional_internal::optional_data.163" }
%"class.absl::optional_internal::optional_data.163" = type { %"class.absl::optional_internal::optional_data_base.164" }
%"class.absl::optional_internal::optional_data_base.164" = type { %"class.absl::optional_internal::optional_data_dtor_base.165" }
%"class.absl::optional_internal::optional_data_dtor_base.165" = type { i8, %union.anon.166 }
%union.anon.166 = type { i32 }
%"class.absl::optional.167" = type { %"class.absl::optional_internal::optional_data.168" }
%"class.absl::optional_internal::optional_data.168" = type { %"class.absl::optional_internal::optional_data_base.169" }
%"class.absl::optional_internal::optional_data_base.169" = type { %"class.absl::optional_internal::optional_data_dtor_base.170" }
%"class.absl::optional_internal::optional_data_dtor_base.170" = type { i8, %union.anon.171 }
%union.anon.171 = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::Value"* }
%"class.absl::optional.176" = type { %"class.absl::optional_internal::optional_data.177" }
%"class.absl::optional_internal::optional_data.177" = type { %"class.absl::optional_internal::optional_data_base.178" }
%"class.absl::optional_internal::optional_data_base.178" = type { %"class.absl::optional_internal::optional_data_dtor_base.179" }
%"class.absl::optional_internal::optional_data_dtor_base.179" = type { i8, %union.anon.180 }
%union.anon.180 = type { %"class.std::__1::unique_ptr.181" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.headless::runtime::ObjectPreview"* }
%"class.headless::runtime::ObjectPreview" = type { i32, %"class.absl::optional.184", %"class.absl::optional.94", i8, %"class.std::__1::vector.189", %"class.absl::optional.202" }
%"class.absl::optional.184" = type { %"class.absl::optional_internal::optional_data.185" }
%"class.absl::optional_internal::optional_data.185" = type { %"class.absl::optional_internal::optional_data_base.186" }
%"class.absl::optional_internal::optional_data_base.186" = type { %"class.absl::optional_internal::optional_data_dtor_base.187" }
%"class.absl::optional_internal::optional_data_dtor_base.187" = type { i8, %union.anon.188 }
%union.anon.188 = type { i32 }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.headless::runtime::PropertyPreview"* }
%"class.headless::runtime::PropertyPreview" = type { %"class.std::__1::basic_string", i32, %"class.absl::optional.94", %"class.absl::optional.176", %"class.absl::optional.311" }
%"class.absl::optional.311" = type { %"class.absl::optional_internal::optional_data.312" }
%"class.absl::optional_internal::optional_data.312" = type { %"class.absl::optional_internal::optional_data_base.313" }
%"class.absl::optional_internal::optional_data_base.313" = type { %"class.absl::optional_internal::optional_data_dtor_base.314" }
%"class.absl::optional_internal::optional_data_dtor_base.314" = type { i8, %union.anon.315 }
%union.anon.315 = type { i32 }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.std::__1::unique_ptr.191"* }
%"class.absl::optional.202" = type { %"class.absl::optional_internal::optional_data.203" }
%"class.absl::optional_internal::optional_data.203" = type { %"class.absl::optional_internal::optional_data_base.204" }
%"class.absl::optional_internal::optional_data_base.204" = type { %"class.absl::optional_internal::optional_data_dtor_base.205" }
%"class.absl::optional_internal::optional_data_dtor_base.205" = type { i8, %union.anon.206 }
%union.anon.206 = type { %"class.std::__1::vector.207" }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.headless::runtime::EntryPreview"* }
%"class.headless::runtime::EntryPreview" = type { %"class.absl::optional.176", %"class.std::__1::unique_ptr.181" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.std::__1::unique_ptr.209"* }
%"class.absl::optional.223" = type { %"class.absl::optional_internal::optional_data.224" }
%"class.absl::optional_internal::optional_data.224" = type { %"class.absl::optional_internal::optional_data_base.225" }
%"class.absl::optional_internal::optional_data_base.225" = type { %"class.absl::optional_internal::optional_data_dtor_base.226" }
%"class.absl::optional_internal::optional_data_dtor_base.226" = type { i8, %union.anon.227 }
%union.anon.227 = type { %"class.std::__1::unique_ptr.228" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.headless::runtime::CustomPreview"* }
%"class.headless::runtime::CustomPreview" = type { %"class.std::__1::basic_string", %"class.absl::optional.94" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.std::__1::unique_ptr.151"* }
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.245" = type { %"class.absl::optional_internal::optional_data.246" }
%"class.absl::optional_internal::optional_data.246" = type { %"class.absl::optional_internal::optional_data_base.247" }
%"class.absl::optional_internal::optional_data_base.247" = type { %"class.absl::optional_internal::optional_data_dtor_base.248" }
%"class.absl::optional_internal::optional_data_dtor_base.248" = type { i8, %union.anon.249 }
%union.anon.249 = type { double }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.std::__1::unique_ptr.91"* }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"*, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.headless::dom_snapshot::LayoutTreeNode"* }
%"class.headless::dom_snapshot::LayoutTreeNode" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr.263", %"class.absl::optional.94", %"class.absl::optional.269", %"class.absl::optional.129", %"class.absl::optional.129", %"class.absl::optional", [6 x i8] }>
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.headless::dom::Rect"* }
%"class.headless::dom::Rect" = type { double, double, double, double }
%"class.absl::optional.269" = type { %"class.absl::optional_internal::optional_data.270" }
%"class.absl::optional_internal::optional_data.270" = type { %"class.absl::optional_internal::optional_data_base.271" }
%"class.absl::optional_internal::optional_data_base.271" = type { %"class.absl::optional_internal::optional_data_dtor_base.272" }
%"class.absl::optional_internal::optional_data_dtor_base.272" = type { i8, %union.anon.273 }
%union.anon.273 = type { %"class.std::__1::vector.274" }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"class.std::__1::unique_ptr.276"*, %"class.std::__1::unique_ptr.276"*, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.headless::dom_snapshot::InlineTextBox"* }
%"class.headless::dom_snapshot::InlineTextBox" = type { %"class.std::__1::unique_ptr.263", i32, i32 }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.std::__1::unique_ptr.276"* }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::unique_ptr.260"* }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"class.std::__1::unique_ptr.297"*, %"class.std::__1::unique_ptr.297"*, %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.headless::dom_snapshot::ComputedStyle"* }
%"class.headless::dom_snapshot::ComputedStyle" = type { %"class.std::__1::vector.116" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.std::__1::unique_ptr.297"* }
%"class.headless::dom_snapshot::CaptureSnapshotParams" = type { %"class.std::__1::vector.48", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.base::OnceCallback.66" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.headless::dom_snapshot::CaptureSnapshotResult"* }
%"class.headless::dom_snapshot::CaptureSnapshotResult" = type { %"class.std::__1::vector.319", %"class.std::__1::vector.48" }
%"class.std::__1::vector.319" = type { %"class.std::__1::__vector_base.320" }
%"class.std::__1::__vector_base.320" = type { %"class.std::__1::unique_ptr.321"*, %"class.std::__1::unique_ptr.321"*, %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.headless::dom_snapshot::DocumentSnapshot"* }
%"class.headless::dom_snapshot::DocumentSnapshot" = type { i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.375", %"class.std::__1::unique_ptr.405", %"class.absl::optional.245", %"class.absl::optional.245", %"class.absl::optional.245", %"class.absl::optional.245" }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.headless::dom_snapshot::NodeTreeSnapshot"* }
%"class.headless::dom_snapshot::NodeTreeSnapshot" = type { %"class.absl::optional.99", %"class.absl::optional.99", %"class.absl::optional.99", %"class.absl::optional.99", %"class.absl::optional.99", %"class.absl::optional.327", %"class.absl::optional.339", %"class.absl::optional.339", %"class.absl::optional.350", %"class.absl::optional.350", %"class.absl::optional.361", %"class.absl::optional.339", %"class.absl::optional.350", %"class.absl::optional.339", %"class.absl::optional.339" }
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"class.std::__1::vector.332" }
%"class.std::__1::vector.332" = type { %"class.std::__1::__vector_base.333" }
%"class.std::__1::__vector_base.333" = type { %"class.std::__1::vector.104"*, %"class.std::__1::vector.104"*, %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.std::__1::vector.104"* }
%"class.absl::optional.361" = type { %"class.absl::optional_internal::optional_data.362" }
%"class.absl::optional_internal::optional_data.362" = type { %"class.absl::optional_internal::optional_data_base.363" }
%"class.absl::optional_internal::optional_data_base.363" = type { %"class.absl::optional_internal::optional_data_dtor_base.364" }
%"class.absl::optional_internal::optional_data_dtor_base.364" = type { i8, %union.anon.365 }
%union.anon.365 = type { %"class.std::__1::unique_ptr.366" }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.headless::dom_snapshot::RareIntegerData"* }
%"class.headless::dom_snapshot::RareIntegerData" = type { %"class.std::__1::vector.104", %"class.std::__1::vector.104" }
%"class.absl::optional.350" = type { %"class.absl::optional_internal::optional_data.351" }
%"class.absl::optional_internal::optional_data.351" = type { %"class.absl::optional_internal::optional_data_base.352" }
%"class.absl::optional_internal::optional_data_base.352" = type { %"class.absl::optional_internal::optional_data_dtor_base.353" }
%"class.absl::optional_internal::optional_data_dtor_base.353" = type { i8, %union.anon.354 }
%union.anon.354 = type { %"class.std::__1::unique_ptr.355" }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.headless::dom_snapshot::RareBooleanData"* }
%"class.headless::dom_snapshot::RareBooleanData" = type { %"class.std::__1::vector.104" }
%"class.absl::optional.339" = type { %"class.absl::optional_internal::optional_data.340" }
%"class.absl::optional_internal::optional_data.340" = type { %"class.absl::optional_internal::optional_data_base.341" }
%"class.absl::optional_internal::optional_data_base.341" = type { %"class.absl::optional_internal::optional_data_dtor_base.342" }
%"class.absl::optional_internal::optional_data_dtor_base.342" = type { i8, %union.anon.343 }
%union.anon.343 = type { %"class.std::__1::unique_ptr.344" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.headless::dom_snapshot::RareStringData"* }
%"class.headless::dom_snapshot::RareStringData" = type { %"class.std::__1::vector.104", %"class.std::__1::vector.104" }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.headless::dom_snapshot::LayoutTreeSnapshot"* }
%"class.headless::dom_snapshot::LayoutTreeSnapshot" = type { %"class.std::__1::vector.104", %"class.std::__1::vector.332", %"class.std::__1::vector.378", %"class.std::__1::vector.104", %"class.std::__1::unique_ptr.355", %"class.absl::optional.99", %"class.absl::optional.392", %"class.absl::optional.392", %"class.absl::optional.392", %"class.absl::optional.99", %"class.absl::optional.397" }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"*, %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::vector.380" = type { %"class.std::__1::__vector_base.381" }
%"class.std::__1::__vector_base.381" = type { double*, double*, %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { double* }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.std::__1::vector.380"* }
%"class.absl::optional.392" = type { %"class.absl::optional_internal::optional_data.393" }
%"class.absl::optional_internal::optional_data.393" = type { %"class.absl::optional_internal::optional_data_base.394" }
%"class.absl::optional_internal::optional_data_base.394" = type { %"class.absl::optional_internal::optional_data_dtor_base.395" }
%"class.absl::optional_internal::optional_data_dtor_base.395" = type { i8, %union.anon.396 }
%union.anon.396 = type { %"class.std::__1::vector.378" }
%"class.absl::optional.397" = type { %"class.absl::optional_internal::optional_data.398" }
%"class.absl::optional_internal::optional_data.398" = type { %"class.absl::optional_internal::optional_data_base.399" }
%"class.absl::optional_internal::optional_data_base.399" = type { %"class.absl::optional_internal::optional_data_dtor_base.400" }
%"class.absl::optional_internal::optional_data_dtor_base.400" = type { i8, %union.anon.401 }
%union.anon.401 = type { %"class.std::__1::vector.380" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.headless::dom_snapshot::TextBoxSnapshot"* }
%"class.headless::dom_snapshot::TextBoxSnapshot" = type { %"class.std::__1::vector.104", %"class.std::__1::vector.378", %"class.std::__1::vector.104", %"class.std::__1::vector.104" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.std::__1::unique_ptr.321"* }
%"struct.std::__1::default_delete.301" = type { i8 }
%"struct.std::__1::default_delete.221" = type { i8 }

$_ZN8headless12dom_snapshot17GetSnapshotResultD2Ev = comdat any

$_ZNKSt3__114default_deleteIN8headless12dom_snapshot13ComputedStyleEEclEPS3_ = comdat any

$_ZN8headless12dom_snapshot14LayoutTreeNodeD2Ev = comdat any

$_ZN8headless12dom_snapshot7DOMNodeD2Ev = comdat any

$_ZN8headless12dom_debugger13EventListenerD2Ev = comdat any

$_ZN8headless7runtime12RemoteObjectD2Ev = comdat any

$_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_ = comdat any

$_ZN4absl17optional_internal23optional_data_dtor_baseINSt3__16vectorINS2_10unique_ptrIN8headless7runtime12EntryPreviewENS2_14default_deleteIS7_EEEENS2_9allocatorISA_EEEELb0EED2Ev = comdat any

$_ZN8headless12dom_snapshot21CaptureSnapshotResultD2Ev = comdat any

$_ZN8headless12dom_snapshot16DocumentSnapshotD2Ev = comdat any

$_ZN8headless12dom_snapshot15TextBoxSnapshotD2Ev = comdat any

$_ZN8headless12dom_snapshot18LayoutTreeSnapshotD2Ev = comdat any

$_ZN8headless12dom_snapshot16NodeTreeSnapshotD2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [20 x i8] c"DOMSnapshot.disable\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"DOMSnapshot.enable\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"DOMSnapshot.getSnapshot\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"DOMSnapshot.captureSnapshot\00", align 1

@_ZN8headless12dom_snapshot6DomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::dom_snapshot::Domain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::dom_snapshot::Domain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless12dom_snapshot6DomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless12dom_snapshot6DomainD1Ev = hidden unnamed_addr alias void (%"class.headless::dom_snapshot::Domain"*), void (%"class.headless::dom_snapshot::Domain"*)* @_ZN8headless12dom_snapshot6DomainD2Ev
@_ZN8headless12dom_snapshot18ExperimentalDomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::dom_snapshot::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::dom_snapshot::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless12dom_snapshot18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless12dom_snapshot18ExperimentalDomainD2Ev = hidden unnamed_addr alias void (%"class.headless::dom_snapshot::ExperimentalDomain"*), bitcast (void (%"class.headless::dom_snapshot::Domain"*)* @_ZN8headless12dom_snapshot6DomainD2Ev to void (%"class.headless::dom_snapshot::ExperimentalDomain"*)*)
@_ZN8headless12dom_snapshot18ExperimentalDomainD1Ev = hidden unnamed_addr alias void (%"class.headless::dom_snapshot::ExperimentalDomain"*), bitcast (void (%"class.headless::dom_snapshot::Domain"*)* @_ZN8headless12dom_snapshot6DomainD2Ev to void (%"class.headless::dom_snapshot::ExperimentalDomain"*)*)

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.headless::dom_snapshot::ExperimentalDomain"* @_ZN8headless12dom_snapshot6Domain15GetExperimentalEv(%"class.headless::dom_snapshot::Domain"* readnone) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.headless::dom_snapshot::Domain"* %0 to %"class.headless::dom_snapshot::ExperimentalDomain"*
  ret %"class.headless::dom_snapshot::ExperimentalDomain"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless12dom_snapshot18ExperimentalDomain7DisableENSt3__110unique_ptrINS0_13DisableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_13DisableResultENS5_ISA_EEEEEEE(%"class.headless::dom_snapshot::ExperimentalDomain"* nocapture readonly, %"class.headless::dom_snapshot::DisableParams"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::dom_snapshot::ExperimentalDomain", %"class.headless::dom_snapshot::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless12dom_snapshot13DisableParams9SerializeEv(%"class.headless::dom_snapshot::DisableParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !2
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !2
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*, %"class.base::Value"*)* @_ZN8headless12dom_snapshot6Domain21HandleDisableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_13DisableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !2
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !2
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !2
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !2
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::dom_snapshot::DisableParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::dom_snapshot::DisableParams", %"class.headless::dom_snapshot::DisableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless12dom_snapshot13DisableParams9SerializeEv(%"class.headless::dom_snapshot::DisableParams"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless12dom_snapshot6Domain21HandleDisableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_13DisableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.67", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.std::__1::unique_ptr.67", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.67"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::dom_snapshot::DisableResult"* null, %"class.headless::dom_snapshot::DisableResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.67"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.67"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.67"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.67"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %26 = load %"class.headless::dom_snapshot::DisableResult"*, %"class.headless::dom_snapshot::DisableResult"** %19, align 8
  store %"class.headless::dom_snapshot::DisableResult"* null, %"class.headless::dom_snapshot::DisableResult"** %19, align 8
  %27 = icmp eq %"class.headless::dom_snapshot::DisableResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::dom_snapshot::DisableResult", %"class.headless::dom_snapshot::DisableResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #8
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  %34 = call %"class.headless::dom_snapshot::DisableResult"* @_ZN8headless12dom_snapshot13DisableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #8
  %35 = bitcast %"class.std::__1::unique_ptr.67"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::dom_snapshot::DisableResult"* %34, %"class.headless::dom_snapshot::DisableResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.67"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.67"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.67"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.67"* nonnull dereferenceable(8) %5) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %46 = load %"class.headless::dom_snapshot::DisableResult"*, %"class.headless::dom_snapshot::DisableResult"** %36, align 8
  store %"class.headless::dom_snapshot::DisableResult"* null, %"class.headless::dom_snapshot::DisableResult"** %36, align 8
  %47 = icmp eq %"class.headless::dom_snapshot::DisableResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::dom_snapshot::DisableResult", %"class.headless::dom_snapshot::DisableResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #8
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless12dom_snapshot18ExperimentalDomain6EnableENSt3__110unique_ptrINS0_12EnableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_12EnableResultENS5_ISA_EEEEEEE(%"class.headless::dom_snapshot::ExperimentalDomain"* nocapture readonly, %"class.headless::dom_snapshot::EnableParams"*, %"class.base::OnceCallback.44"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::dom_snapshot::ExperimentalDomain", %"class.headless::dom_snapshot::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless12dom_snapshot12EnableParams9SerializeEv(%"class.headless::dom_snapshot::EnableParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !7
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !7
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.44"*, %"class.base::Value"*)* @_ZN8headless12dom_snapshot6Domain20HandleEnableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_12EnableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !7
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.44"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !7
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !7
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !7
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !7
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::dom_snapshot::EnableParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::dom_snapshot::EnableParams", %"class.headless::dom_snapshot::EnableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless12dom_snapshot12EnableParams9SerializeEv(%"class.headless::dom_snapshot::EnableParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless12dom_snapshot6Domain20HandleEnableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_12EnableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.44"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.80", align 8
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = alloca %"class.std::__1::unique_ptr.80", align 8
  %6 = alloca %"class.base::OnceCallback.44", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.80"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::dom_snapshot::EnableResult"* null, %"class.headless::dom_snapshot::EnableResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.44"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = bitcast %"class.base::OnceCallback.44"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.80"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.80"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.80"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.80"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %26 = load %"class.headless::dom_snapshot::EnableResult"*, %"class.headless::dom_snapshot::EnableResult"** %19, align 8
  store %"class.headless::dom_snapshot::EnableResult"* null, %"class.headless::dom_snapshot::EnableResult"** %19, align 8
  %27 = icmp eq %"class.headless::dom_snapshot::EnableResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::dom_snapshot::EnableResult", %"class.headless::dom_snapshot::EnableResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #8
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  %34 = call %"class.headless::dom_snapshot::EnableResult"* @_ZN8headless12dom_snapshot12EnableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #8
  %35 = bitcast %"class.std::__1::unique_ptr.80"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::dom_snapshot::EnableResult"* %34, %"class.headless::dom_snapshot::EnableResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.44"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = bitcast %"class.base::OnceCallback.44"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.44"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.80"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.80"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.80"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.80"* nonnull dereferenceable(8) %5) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %46 = load %"class.headless::dom_snapshot::EnableResult"*, %"class.headless::dom_snapshot::EnableResult"** %36, align 8
  store %"class.headless::dom_snapshot::EnableResult"* null, %"class.headless::dom_snapshot::EnableResult"** %36, align 8
  %47 = icmp eq %"class.headless::dom_snapshot::EnableResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::dom_snapshot::EnableResult", %"class.headless::dom_snapshot::EnableResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #8
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless12dom_snapshot18ExperimentalDomain11GetSnapshotENSt3__110unique_ptrINS0_17GetSnapshotParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_17GetSnapshotResultENS5_ISA_EEEEEEE(%"class.headless::dom_snapshot::ExperimentalDomain"* nocapture readonly, %"class.headless::dom_snapshot::GetSnapshotParams"*, %"class.base::OnceCallback.59"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::dom_snapshot::ExperimentalDomain", %"class.headless::dom_snapshot::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless12dom_snapshot17GetSnapshotParams9SerializeEv(%"class.headless::dom_snapshot::GetSnapshotParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !12
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !12
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.59"*, %"class.base::Value"*)* @_ZN8headless12dom_snapshot6Domain25HandleGetSnapshotResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_17GetSnapshotResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !12
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.59"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !12
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !12
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !12
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !12
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::dom_snapshot::GetSnapshotParams"* %1, null
  br i1 %22, label %51, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::dom_snapshot::GetSnapshotParams", %"class.headless::dom_snapshot::GetSnapshotParams"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = icmp eq %"class.std::__1::basic_string"* %25, null
  br i1 %26, label %49, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %29 = getelementptr inbounds %"class.headless::dom_snapshot::GetSnapshotParams", %"class.headless::dom_snapshot::GetSnapshotParams"* %1, i64 0, i32 0, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %30, %25
  br i1 %31, label %47, label %32

32:                                               ; preds = %27, %42
  %33 = phi %"class.std::__1::basic_string"* [ %34, %42 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %39, %32
  %43 = icmp eq %"class.std::__1::basic_string"* %34, %25
  br i1 %43, label %44, label %32

44:                                               ; preds = %42
  %45 = bitcast %"class.headless::dom_snapshot::GetSnapshotParams"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %27
  %48 = phi i8* [ %46, %44 ], [ %28, %27 ]
  store %"class.std::__1::basic_string"* %25, %"class.std::__1::basic_string"** %29, align 8
  call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %47, %23
  %50 = bitcast %"class.headless::dom_snapshot::GetSnapshotParams"* %1 to i8*
  call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %3, %49
  ret void
}

declare %"class.base::Value"* @_ZNK8headless12dom_snapshot17GetSnapshotParams9SerializeEv(%"class.headless::dom_snapshot::GetSnapshotParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless12dom_snapshot6Domain25HandleGetSnapshotResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_17GetSnapshotResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.59"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.86", align 8
  %4 = alloca %"class.base::OnceCallback.59", align 8
  %5 = alloca %"class.std::__1::unique_ptr.86", align 8
  %6 = alloca %"class.base::OnceCallback.59", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.86"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::dom_snapshot::GetSnapshotResult"* null, %"class.headless::dom_snapshot::GetSnapshotResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.59"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = bitcast %"class.base::OnceCallback.59"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.86"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.86"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.86"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.86"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %26 = load %"class.headless::dom_snapshot::GetSnapshotResult"*, %"class.headless::dom_snapshot::GetSnapshotResult"** %19, align 8
  store %"class.headless::dom_snapshot::GetSnapshotResult"* null, %"class.headless::dom_snapshot::GetSnapshotResult"** %19, align 8
  %27 = icmp eq %"class.headless::dom_snapshot::GetSnapshotResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  call void @_ZN8headless12dom_snapshot17GetSnapshotResultD2Ev(%"class.headless::dom_snapshot::GetSnapshotResult"* nonnull %26) #8
  %29 = bitcast %"class.headless::dom_snapshot::GetSnapshotResult"* %26 to i8*
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #8
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  %34 = call %"class.headless::dom_snapshot::GetSnapshotResult"* @_ZN8headless12dom_snapshot17GetSnapshotResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #8
  %35 = bitcast %"class.std::__1::unique_ptr.86"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::dom_snapshot::GetSnapshotResult"* %34, %"class.headless::dom_snapshot::GetSnapshotResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.59"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = bitcast %"class.base::OnceCallback.59"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.59"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.86"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.86"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.86"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.86"* nonnull dereferenceable(8) %5) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %46 = load %"class.headless::dom_snapshot::GetSnapshotResult"*, %"class.headless::dom_snapshot::GetSnapshotResult"** %36, align 8
  store %"class.headless::dom_snapshot::GetSnapshotResult"* null, %"class.headless::dom_snapshot::GetSnapshotResult"** %36, align 8
  %47 = icmp eq %"class.headless::dom_snapshot::GetSnapshotResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  call void @_ZN8headless12dom_snapshot17GetSnapshotResultD2Ev(%"class.headless::dom_snapshot::GetSnapshotResult"* nonnull %46) #8
  %49 = bitcast %"class.headless::dom_snapshot::GetSnapshotResult"* %46 to i8*
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #8
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless12dom_snapshot18ExperimentalDomain15CaptureSnapshotENSt3__110unique_ptrINS0_21CaptureSnapshotParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_21CaptureSnapshotResultENS5_ISA_EEEEEEE(%"class.headless::dom_snapshot::ExperimentalDomain"* nocapture readonly, %"class.headless::dom_snapshot::CaptureSnapshotParams"*, %"class.base::OnceCallback.66"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::dom_snapshot::ExperimentalDomain", %"class.headless::dom_snapshot::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless12dom_snapshot21CaptureSnapshotParams9SerializeEv(%"class.headless::dom_snapshot::CaptureSnapshotParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !17
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !17
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.66"*, %"class.base::Value"*)* @_ZN8headless12dom_snapshot6Domain29HandleCaptureSnapshotResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_21CaptureSnapshotResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !17
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.66", %"class.base::OnceCallback.66"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.66"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !17
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !17
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !17
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !17
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::dom_snapshot::CaptureSnapshotParams"* %1, null
  br i1 %22, label %51, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::dom_snapshot::CaptureSnapshotParams", %"class.headless::dom_snapshot::CaptureSnapshotParams"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = icmp eq %"class.std::__1::basic_string"* %25, null
  br i1 %26, label %49, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %29 = getelementptr inbounds %"class.headless::dom_snapshot::CaptureSnapshotParams", %"class.headless::dom_snapshot::CaptureSnapshotParams"* %1, i64 0, i32 0, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %30, %25
  br i1 %31, label %47, label %32

32:                                               ; preds = %27, %42
  %33 = phi %"class.std::__1::basic_string"* [ %34, %42 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %39, %32
  %43 = icmp eq %"class.std::__1::basic_string"* %34, %25
  br i1 %43, label %44, label %32

44:                                               ; preds = %42
  %45 = bitcast %"class.headless::dom_snapshot::CaptureSnapshotParams"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %27
  %48 = phi i8* [ %46, %44 ], [ %28, %27 ]
  store %"class.std::__1::basic_string"* %25, %"class.std::__1::basic_string"** %29, align 8
  call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %47, %23
  %50 = bitcast %"class.headless::dom_snapshot::CaptureSnapshotParams"* %1 to i8*
  call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %3, %49
  ret void
}

declare %"class.base::Value"* @_ZNK8headless12dom_snapshot21CaptureSnapshotParams9SerializeEv(%"class.headless::dom_snapshot::CaptureSnapshotParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless12dom_snapshot6Domain29HandleCaptureSnapshotResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_21CaptureSnapshotResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.66"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.316", align 8
  %4 = alloca %"class.base::OnceCallback.66", align 8
  %5 = alloca %"class.std::__1::unique_ptr.316", align 8
  %6 = alloca %"class.base::OnceCallback.66", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.66", %"class.base::OnceCallback.66"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.316"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.316"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::dom_snapshot::CaptureSnapshotResult"* null, %"class.headless::dom_snapshot::CaptureSnapshotResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.66"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = bitcast %"class.base::OnceCallback.66"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.66", %"class.base::OnceCallback.66"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.316"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.316"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.316"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.316"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %26 = load %"class.headless::dom_snapshot::CaptureSnapshotResult"*, %"class.headless::dom_snapshot::CaptureSnapshotResult"** %19, align 8
  store %"class.headless::dom_snapshot::CaptureSnapshotResult"* null, %"class.headless::dom_snapshot::CaptureSnapshotResult"** %19, align 8
  %27 = icmp eq %"class.headless::dom_snapshot::CaptureSnapshotResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  call void @_ZN8headless12dom_snapshot21CaptureSnapshotResultD2Ev(%"class.headless::dom_snapshot::CaptureSnapshotResult"* nonnull %26) #8
  %29 = bitcast %"class.headless::dom_snapshot::CaptureSnapshotResult"* %26 to i8*
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #8
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  %34 = call %"class.headless::dom_snapshot::CaptureSnapshotResult"* @_ZN8headless12dom_snapshot21CaptureSnapshotResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #8
  %35 = bitcast %"class.std::__1::unique_ptr.316"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.316"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::dom_snapshot::CaptureSnapshotResult"* %34, %"class.headless::dom_snapshot::CaptureSnapshotResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.66"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = bitcast %"class.base::OnceCallback.66"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.66"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.66", %"class.base::OnceCallback.66"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.316"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.316"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.316"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.316"* nonnull dereferenceable(8) %5) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %46 = load %"class.headless::dom_snapshot::CaptureSnapshotResult"*, %"class.headless::dom_snapshot::CaptureSnapshotResult"** %36, align 8
  store %"class.headless::dom_snapshot::CaptureSnapshotResult"* null, %"class.headless::dom_snapshot::CaptureSnapshotResult"** %36, align 8
  %47 = icmp eq %"class.headless::dom_snapshot::CaptureSnapshotResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  call void @_ZN8headless12dom_snapshot21CaptureSnapshotResultD2Ev(%"class.headless::dom_snapshot::CaptureSnapshotResult"* nonnull %46) #8
  %49 = bitcast %"class.headless::dom_snapshot::CaptureSnapshotResult"* %46 to i8*
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #8
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #2

declare %"class.headless::dom_snapshot::DisableResult"* @_ZN8headless12dom_snapshot13DisableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #4

declare %"class.headless::dom_snapshot::EnableResult"* @_ZN8headless12dom_snapshot12EnableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

declare %"class.headless::dom_snapshot::GetSnapshotResult"* @_ZN8headless12dom_snapshot17GetSnapshotResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

declare %"class.headless::dom_snapshot::CaptureSnapshotResult"* @_ZN8headless12dom_snapshot21CaptureSnapshotResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8headless12dom_snapshot6DomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::dom_snapshot::Domain"* nocapture, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.headless::dom_snapshot::Domain", %"class.headless::dom_snapshot::Domain"* %0, i64 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8headless12dom_snapshot6DomainD2Ev(%"class.headless::dom_snapshot::Domain"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8headless12dom_snapshot18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::dom_snapshot::ExperimentalDomain"* nocapture, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.headless::dom_snapshot::ExperimentalDomain", %"class.headless::dom_snapshot::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless12dom_snapshot17GetSnapshotResultD2Ev(%"class.headless::dom_snapshot::GetSnapshotResult"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::dom_snapshot::GetSnapshotResult", %"class.headless::dom_snapshot::GetSnapshotResult"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.295", %"class.std::__1::vector.295"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.297"*, %"class.std::__1::unique_ptr.297"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.297"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.297"* %4 to i8*
  %8 = getelementptr inbounds %"class.headless::dom_snapshot::GetSnapshotResult", %"class.headless::dom_snapshot::GetSnapshotResult"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.297"*, %"class.std::__1::unique_ptr.297"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.297"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr.297"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.297"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.297"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.headless::dom_snapshot::ComputedStyle"*, %"class.headless::dom_snapshot::ComputedStyle"** %14, align 8
  store %"class.headless::dom_snapshot::ComputedStyle"* null, %"class.headless::dom_snapshot::ComputedStyle"** %14, align 8
  %16 = icmp eq %"class.headless::dom_snapshot::ComputedStyle"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::unique_ptr.297"* %13 to %"struct.std::__1::default_delete.301"*
  tail call void @_ZNKSt3__114default_deleteIN8headless12dom_snapshot13ComputedStyleEEclEPS3_(%"struct.std::__1::default_delete.301"* %18, %"class.headless::dom_snapshot::ComputedStyle"* nonnull %15) #8
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr.297"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.295"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.297"* %4, %"class.std::__1::unique_ptr.297"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #9
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"class.headless::dom_snapshot::GetSnapshotResult", %"class.headless::dom_snapshot::GetSnapshotResult"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.260"* %29, null
  br i1 %30, label %51, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.std::__1::unique_ptr.260"* %29 to i8*
  %33 = getelementptr inbounds %"class.headless::dom_snapshot::GetSnapshotResult", %"class.headless::dom_snapshot::GetSnapshotResult"* %0, i64 0, i32 1, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.260"* %34, %29
  br i1 %35, label %49, label %36

36:                                               ; preds = %31, %44
  %37 = phi %"class.std::__1::unique_ptr.260"* [ %38, %44 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %37, i64 -1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.headless::dom_snapshot::LayoutTreeNode"*, %"class.headless::dom_snapshot::LayoutTreeNode"** %39, align 8
  store %"class.headless::dom_snapshot::LayoutTreeNode"* null, %"class.headless::dom_snapshot::LayoutTreeNode"** %39, align 8
  %41 = icmp eq %"class.headless::dom_snapshot::LayoutTreeNode"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  tail call void @_ZN8headless12dom_snapshot14LayoutTreeNodeD2Ev(%"class.headless::dom_snapshot::LayoutTreeNode"* nonnull %40) #8
  %43 = bitcast %"class.headless::dom_snapshot::LayoutTreeNode"* %40 to i8*
  tail call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %42, %36
  %45 = icmp eq %"class.std::__1::unique_ptr.260"* %38, %29
  br i1 %45, label %46, label %36

46:                                               ; preds = %44
  %47 = bitcast %"class.std::__1::vector.258"* %27 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %31
  %50 = phi i8* [ %48, %46 ], [ %32, %31 ]
  store %"class.std::__1::unique_ptr.260"* %29, %"class.std::__1::unique_ptr.260"** %33, align 8
  tail call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %26, %49
  %52 = getelementptr inbounds %"class.headless::dom_snapshot::GetSnapshotResult", %"class.headless::dom_snapshot::GetSnapshotResult"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::unique_ptr.91"*, %"class.std::__1::unique_ptr.91"** %52, align 8
  %54 = icmp eq %"class.std::__1::unique_ptr.91"* %53, null
  br i1 %54, label %75, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.std::__1::unique_ptr.91"* %53 to i8*
  %57 = getelementptr inbounds %"class.headless::dom_snapshot::GetSnapshotResult", %"class.headless::dom_snapshot::GetSnapshotResult"* %0, i64 0, i32 0, i32 0, i32 1
  %58 = load %"class.std::__1::unique_ptr.91"*, %"class.std::__1::unique_ptr.91"** %57, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr.91"* %58, %53
  br i1 %59, label %73, label %60

60:                                               ; preds = %55, %68
  %61 = phi %"class.std::__1::unique_ptr.91"* [ %62, %68 ], [ %58, %55 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91"* %61, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.headless::dom_snapshot::DOMNode"*, %"class.headless::dom_snapshot::DOMNode"** %63, align 8
  store %"class.headless::dom_snapshot::DOMNode"* null, %"class.headless::dom_snapshot::DOMNode"** %63, align 8
  %65 = icmp eq %"class.headless::dom_snapshot::DOMNode"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %60
  tail call void @_ZN8headless12dom_snapshot7DOMNodeD2Ev(%"class.headless::dom_snapshot::DOMNode"* nonnull %64) #8
  %67 = bitcast %"class.headless::dom_snapshot::DOMNode"* %64 to i8*
  tail call void @_ZdlPv(i8* %67) #9
  br label %68

68:                                               ; preds = %66, %60
  %69 = icmp eq %"class.std::__1::unique_ptr.91"* %62, %53
  br i1 %69, label %70, label %60

70:                                               ; preds = %68
  %71 = bitcast %"class.headless::dom_snapshot::GetSnapshotResult"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %55
  %74 = phi i8* [ %72, %70 ], [ %56, %55 ]
  store %"class.std::__1::unique_ptr.91"* %53, %"class.std::__1::unique_ptr.91"** %57, align 8
  tail call void @_ZdlPv(i8* %74) #9
  br label %75

75:                                               ; preds = %51, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8headless12dom_snapshot13ComputedStyleEEclEPS3_(%"struct.std::__1::default_delete.301"*, %"class.headless::dom_snapshot::ComputedStyle"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.headless::dom_snapshot::ComputedStyle"* %1, null
  br i1 %3, label %47, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.headless::dom_snapshot::ComputedStyle", %"class.headless::dom_snapshot::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.118"*, %"class.std::__1::unique_ptr.118"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.118"* %6, null
  br i1 %7, label %45, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::unique_ptr.118"* %6 to i8*
  %10 = getelementptr inbounds %"class.headless::dom_snapshot::ComputedStyle", %"class.headless::dom_snapshot::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.118"*, %"class.std::__1::unique_ptr.118"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.118"* %11, %6
  br i1 %12, label %43, label %13

13:                                               ; preds = %8, %38
  %14 = phi %"class.std::__1::unique_ptr.118"* [ %15, %38 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.118"* %14, i64 -1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.118"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.headless::dom_snapshot::NameValue"*, %"class.headless::dom_snapshot::NameValue"** %16, align 8
  store %"class.headless::dom_snapshot::NameValue"* null, %"class.headless::dom_snapshot::NameValue"** %16, align 8
  %18 = icmp eq %"class.headless::dom_snapshot::NameValue"* %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.headless::dom_snapshot::NameValue", %"class.headless::dom_snapshot::NameValue"* %17, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %25, %19
  %29 = bitcast %"class.headless::dom_snapshot::NameValue"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.headless::dom_snapshot::NameValue", %"class.headless::dom_snapshot::NameValue"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %33, %28
  %37 = bitcast %"class.headless::dom_snapshot::NameValue"* %17 to i8*
  tail call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %36, %13
  %39 = icmp eq %"class.std::__1::unique_ptr.118"* %15, %6
  br i1 %39, label %40, label %13

40:                                               ; preds = %38
  %41 = bitcast %"class.headless::dom_snapshot::ComputedStyle"* %1 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %8
  %44 = phi i8* [ %42, %40 ], [ %9, %8 ]
  store %"class.std::__1::unique_ptr.118"* %6, %"class.std::__1::unique_ptr.118"** %10, align 8
  tail call void @_ZdlPv(i8* %44) #9
  br label %45

45:                                               ; preds = %4, %43
  %46 = bitcast %"class.headless::dom_snapshot::ComputedStyle"* %1 to i8*
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %45, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless12dom_snapshot14LayoutTreeNodeD2Ev(%"class.headless::dom_snapshot::LayoutTreeNode"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeNode", %"class.headless::dom_snapshot::LayoutTreeNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeNode", %"class.headless::dom_snapshot::LayoutTreeNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.274", %"class.std::__1::vector.274"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.276"*, %"class.std::__1::unique_ptr.276"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.276"* %8, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.276"* %8 to i8*
  %12 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeNode", %"class.headless::dom_snapshot::LayoutTreeNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.276"*, %"class.std::__1::unique_ptr.276"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.276"* %13, %8
  br i1 %14, label %34, label %15

15:                                               ; preds = %10, %29
  %16 = phi %"class.std::__1::unique_ptr.276"* [ %17, %29 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276"* %16, i64 -1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.headless::dom_snapshot::InlineTextBox"*, %"class.headless::dom_snapshot::InlineTextBox"** %18, align 8
  store %"class.headless::dom_snapshot::InlineTextBox"* null, %"class.headless::dom_snapshot::InlineTextBox"** %18, align 8
  %20 = icmp eq %"class.headless::dom_snapshot::InlineTextBox"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.headless::dom_snapshot::InlineTextBox", %"class.headless::dom_snapshot::InlineTextBox"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.headless::dom::Rect"*, %"class.headless::dom::Rect"** %22, align 8
  store %"class.headless::dom::Rect"* null, %"class.headless::dom::Rect"** %22, align 8
  %24 = icmp eq %"class.headless::dom::Rect"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.headless::dom::Rect"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #9
  br label %27

27:                                               ; preds = %25, %21
  %28 = bitcast %"class.headless::dom_snapshot::InlineTextBox"* %19 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %27, %15
  %30 = icmp eq %"class.std::__1::unique_ptr.276"* %17, %8
  br i1 %30, label %31, label %15

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector.274"* %6 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %10
  %35 = phi i8* [ %33, %31 ], [ %11, %10 ]
  store %"class.std::__1::unique_ptr.276"* %8, %"class.std::__1::unique_ptr.276"** %12, align 8
  tail call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %34, %5
  store i8 0, i8* %2, align 8
  br label %37

37:                                               ; preds = %1, %36
  %38 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeNode", %"class.headless::dom_snapshot::LayoutTreeNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !22
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeNode", %"class.headless::dom_snapshot::LayoutTreeNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  tail call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %47, %41
  store i8 0, i8* %38, align 8
  br label %51

51:                                               ; preds = %37, %50
  %52 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeNode", %"class.headless::dom_snapshot::LayoutTreeNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = load %"class.headless::dom::Rect"*, %"class.headless::dom::Rect"** %52, align 8
  store %"class.headless::dom::Rect"* null, %"class.headless::dom::Rect"** %52, align 8
  %54 = icmp eq %"class.headless::dom::Rect"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.headless::dom::Rect"* %53 to i8*
  tail call void @_ZdlPv(i8* %56) #9
  br label %57

57:                                               ; preds = %51, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless12dom_snapshot7DOMNodeD2Ev(%"class.headless::dom_snapshot::DOMNode"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !22
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %25, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  %30 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !22
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.151"*, %"class.std::__1::unique_ptr.151"** %35, align 8
  %37 = icmp eq %"class.std::__1::unique_ptr.151"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.std::__1::unique_ptr.151"* %36 to i8*
  %40 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %41 = load %"class.std::__1::unique_ptr.151"*, %"class.std::__1::unique_ptr.151"** %40, align 8
  %42 = icmp eq %"class.std::__1::unique_ptr.151"* %41, %36
  br i1 %42, label %56, label %43

43:                                               ; preds = %38, %51
  %44 = phi %"class.std::__1::unique_ptr.151"* [ %45, %51 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151"* %44, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.headless::dom_debugger::EventListener"*, %"class.headless::dom_debugger::EventListener"** %46, align 8
  store %"class.headless::dom_debugger::EventListener"* null, %"class.headless::dom_debugger::EventListener"** %46, align 8
  %48 = icmp eq %"class.headless::dom_debugger::EventListener"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  tail call void @_ZN8headless12dom_debugger13EventListenerD2Ev(%"class.headless::dom_debugger::EventListener"* nonnull %47) #8
  %50 = bitcast %"class.headless::dom_debugger::EventListener"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %49, %43
  %52 = icmp eq %"class.std::__1::unique_ptr.151"* %45, %36
  br i1 %52, label %53, label %43

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector.149"* %34 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %38
  %57 = phi i8* [ %55, %53 ], [ %39, %38 ]
  store %"class.std::__1::unique_ptr.151"* %36, %"class.std::__1::unique_ptr.151"** %40, align 8
  tail call void @_ZdlPv(i8* %57) #9
  br label %58

58:                                               ; preds = %56, %33
  store i8 0, i8* %30, align 8
  br label %59

59:                                               ; preds = %29, %58
  %60 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !22
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #9
  br label %72

72:                                               ; preds = %69, %63
  store i8 0, i8* %60, align 8
  br label %73

73:                                               ; preds = %59, %72
  %74 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !22
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #9
  br label %86

86:                                               ; preds = %83, %77
  store i8 0, i8* %74, align 8
  br label %87

87:                                               ; preds = %73, %86
  %88 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %89 = load i8, i8* %88, align 8, !range !22
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %93 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  tail call void @_ZdlPv(i8* %99) #9
  br label %100

100:                                              ; preds = %97, %91
  store i8 0, i8* %88, align 8
  br label %101

101:                                              ; preds = %87, %100
  %102 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %103 = load i8, i8* %102, align 8, !range !22
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %115, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZdlPv(i8* %113) #9
  br label %114

114:                                              ; preds = %111, %105
  store i8 0, i8* %102, align 8
  br label %115

115:                                              ; preds = %101, %114
  %116 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %117 = load i8, i8* %116, align 8, !range !22
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %129, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %121 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  tail call void @_ZdlPv(i8* %127) #9
  br label %128

128:                                              ; preds = %125, %119
  store i8 0, i8* %116, align 8
  br label %129

129:                                              ; preds = %115, %128
  %130 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %131 = load i8, i8* %130, align 8, !range !22
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %143, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  tail call void @_ZdlPv(i8* %141) #9
  br label %142

142:                                              ; preds = %139, %133
  store i8 0, i8* %130, align 8
  br label %143

143:                                              ; preds = %129, %142
  %144 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %145 = load i8, i8* %144, align 8, !range !22
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %157, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %149 = bitcast %"class.std::__1::basic_string"* %148 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  tail call void @_ZdlPv(i8* %155) #9
  br label %156

156:                                              ; preds = %153, %147
  store i8 0, i8* %144, align 8
  br label %157

157:                                              ; preds = %143, %156
  %158 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %159 = load i8, i8* %158, align 8, !range !22
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %171, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = icmp eq i32* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %161
  %166 = ptrtoint i32* %163 to i64
  %167 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %168 = bitcast i32** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = bitcast i32* %163 to i8*
  tail call void @_ZdlPv(i8* %169) #9
  br label %170

170:                                              ; preds = %165, %161
  store i8 0, i8* %158, align 8
  br label %171

171:                                              ; preds = %157, %170
  %172 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %173 = load i8, i8* %172, align 8, !range !22
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %218, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %177 = getelementptr inbounds %"class.std::__1::vector.116", %"class.std::__1::vector.116"* %176, i64 0, i32 0, i32 0
  %178 = load %"class.std::__1::unique_ptr.118"*, %"class.std::__1::unique_ptr.118"** %177, align 8
  %179 = icmp eq %"class.std::__1::unique_ptr.118"* %178, null
  br i1 %179, label %217, label %180

180:                                              ; preds = %175
  %181 = bitcast %"class.std::__1::unique_ptr.118"* %178 to i8*
  %182 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %183 = load %"class.std::__1::unique_ptr.118"*, %"class.std::__1::unique_ptr.118"** %182, align 8
  %184 = icmp eq %"class.std::__1::unique_ptr.118"* %183, %178
  br i1 %184, label %215, label %185

185:                                              ; preds = %180, %210
  %186 = phi %"class.std::__1::unique_ptr.118"* [ %187, %210 ], [ %183, %180 ]
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.118"* %186, i64 -1
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.118"* %187, i64 0, i32 0, i32 0, i32 0
  %189 = load %"class.headless::dom_snapshot::NameValue"*, %"class.headless::dom_snapshot::NameValue"** %188, align 8
  store %"class.headless::dom_snapshot::NameValue"* null, %"class.headless::dom_snapshot::NameValue"** %188, align 8
  %190 = icmp eq %"class.headless::dom_snapshot::NameValue"* %189, null
  br i1 %190, label %210, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.headless::dom_snapshot::NameValue", %"class.headless::dom_snapshot::NameValue"* %189, i64 0, i32 1
  %193 = bitcast %"class.std::__1::basic_string"* %192 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i8*, i8** %198, align 8
  tail call void @_ZdlPv(i8* %199) #9
  br label %200

200:                                              ; preds = %197, %191
  %201 = bitcast %"class.headless::dom_snapshot::NameValue"* %189 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.headless::dom_snapshot::NameValue", %"class.headless::dom_snapshot::NameValue"* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  tail call void @_ZdlPv(i8* %207) #9
  br label %208

208:                                              ; preds = %205, %200
  %209 = bitcast %"class.headless::dom_snapshot::NameValue"* %189 to i8*
  tail call void @_ZdlPv(i8* %209) #9
  br label %210

210:                                              ; preds = %208, %185
  %211 = icmp eq %"class.std::__1::unique_ptr.118"* %187, %178
  br i1 %211, label %212, label %185

212:                                              ; preds = %210
  %213 = bitcast %"class.std::__1::vector.116"* %176 to i8**
  %214 = load i8*, i8** %213, align 8
  br label %215

215:                                              ; preds = %212, %180
  %216 = phi i8* [ %214, %212 ], [ %181, %180 ]
  store %"class.std::__1::unique_ptr.118"* %178, %"class.std::__1::unique_ptr.118"** %182, align 8
  tail call void @_ZdlPv(i8* %216) #9
  br label %217

217:                                              ; preds = %175, %215
  store i8 0, i8* %172, align 8
  br label %218

218:                                              ; preds = %171, %217
  %219 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %220 = load i8, i8* %219, align 8, !range !22
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %232, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %224 = load i32*, i32** %223, align 8
  %225 = icmp eq i32* %224, null
  br i1 %225, label %231, label %226

226:                                              ; preds = %222
  %227 = ptrtoint i32* %224 to i64
  %228 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %229 = bitcast i32** %228 to i64*
  store i64 %227, i64* %229, align 8
  %230 = bitcast i32* %224 to i8*
  tail call void @_ZdlPv(i8* %230) #9
  br label %231

231:                                              ; preds = %226, %222
  store i8 0, i8* %219, align 8
  br label %232

232:                                              ; preds = %218, %231
  %233 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %234 = load i8, i8* %233, align 8, !range !22
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %246, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %238 = bitcast %"class.std::__1::basic_string"* %237 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %245

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  tail call void @_ZdlPv(i8* %244) #9
  br label %245

245:                                              ; preds = %242, %236
  store i8 0, i8* %233, align 8
  br label %246

246:                                              ; preds = %232, %245
  %247 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %248 = load i8, i8* %247, align 8, !range !22
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %260, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %252 = bitcast %"class.std::__1::basic_string"* %251 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  %254 = load i8, i8* %253, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  tail call void @_ZdlPv(i8* %258) #9
  br label %259

259:                                              ; preds = %256, %250
  store i8 0, i8* %247, align 8
  br label %260

260:                                              ; preds = %246, %259
  %261 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 2
  %262 = bitcast %"class.std::__1::basic_string"* %261 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %262, i64 0, i32 1, i32 0
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  tail call void @_ZdlPv(i8* %268) #9
  br label %269

269:                                              ; preds = %260, %266
  %270 = getelementptr inbounds %"class.headless::dom_snapshot::DOMNode", %"class.headless::dom_snapshot::DOMNode"* %0, i64 0, i32 1
  %271 = bitcast %"class.std::__1::basic_string"* %270 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  %273 = load i8, i8* %272, align 1
  %274 = icmp slt i8 %273, 0
  br i1 %274, label %275, label %278

275:                                              ; preds = %269
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load i8*, i8** %276, align 8
  tail call void @_ZdlPv(i8* %277) #9
  br label %278

278:                                              ; preds = %269, %275
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless12dom_debugger13EventListenerD2Ev(%"class.headless::dom_debugger::EventListener"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::dom_debugger::EventListener", %"class.headless::dom_debugger::EventListener"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::dom_debugger::EventListener", %"class.headless::dom_debugger::EventListener"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.headless::runtime::RemoteObject"*, %"class.headless::runtime::RemoteObject"** %6, align 8
  store %"class.headless::runtime::RemoteObject"* null, %"class.headless::runtime::RemoteObject"** %6, align 8
  %8 = icmp eq %"class.headless::runtime::RemoteObject"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN8headless7runtime12RemoteObjectD2Ev(%"class.headless::runtime::RemoteObject"* nonnull %7) #8
  %10 = bitcast %"class.headless::runtime::RemoteObject"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.headless::dom_debugger::EventListener", %"class.headless::dom_debugger::EventListener"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !22
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.headless::dom_debugger::EventListener", %"class.headless::dom_debugger::EventListener"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.headless::runtime::RemoteObject"*, %"class.headless::runtime::RemoteObject"** %17, align 8
  store %"class.headless::runtime::RemoteObject"* null, %"class.headless::runtime::RemoteObject"** %17, align 8
  %19 = icmp eq %"class.headless::runtime::RemoteObject"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  tail call void @_ZN8headless7runtime12RemoteObjectD2Ev(%"class.headless::runtime::RemoteObject"* nonnull %18) #8
  %21 = bitcast %"class.headless::runtime::RemoteObject"* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %20, %16
  store i8 0, i8* %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.headless::dom_debugger::EventListener", %"class.headless::dom_debugger::EventListener"* %0, i64 0, i32 4
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #9
  br label %32

32:                                               ; preds = %23, %29
  %33 = bitcast %"class.headless::dom_debugger::EventListener"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.headless::dom_debugger::EventListener", %"class.headless::dom_debugger::EventListener"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %32, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless7runtime12RemoteObjectD2Ev(%"class.headless::runtime::RemoteObject"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.headless::runtime::CustomPreview"*, %"class.headless::runtime::CustomPreview"** %6, align 8
  store %"class.headless::runtime::CustomPreview"* null, %"class.headless::runtime::CustomPreview"** %6, align 8
  %8 = icmp eq %"class.headless::runtime::CustomPreview"* %7, null
  br i1 %8, label %33, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.headless::runtime::CustomPreview", %"class.headless::runtime::CustomPreview"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !22
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.headless::runtime::CustomPreview", %"class.headless::runtime::CustomPreview"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %19, %13
  store i8 0, i8* %10, align 8
  br label %23

23:                                               ; preds = %22, %9
  %24 = bitcast %"class.headless::runtime::CustomPreview"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.headless::runtime::CustomPreview", %"class.headless::runtime::CustomPreview"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %28, %23
  %32 = bitcast %"class.headless::runtime::CustomPreview"* %7 to i8*
  tail call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %31, %5
  store i8 0, i8* %2, align 8
  br label %34

34:                                               ; preds = %1, %33
  %35 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !22
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.182"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.headless::runtime::ObjectPreview"*, %"class.headless::runtime::ObjectPreview"** %40, align 8
  store %"class.headless::runtime::ObjectPreview"* null, %"class.headless::runtime::ObjectPreview"** %40, align 8
  %42 = icmp eq %"class.headless::runtime::ObjectPreview"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::__compressed_pair.182"* %39 to %"struct.std::__1::default_delete.221"*
  tail call void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.221"* %44, %"class.headless::runtime::ObjectPreview"* nonnull %41) #8
  br label %45

45:                                               ; preds = %43, %38
  store i8 0, i8* %35, align 8
  br label %46

46:                                               ; preds = %34, %45
  %47 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %48 = load i8, i8* %47, align 8, !range !22
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #9
  br label %59

59:                                               ; preds = %56, %50
  store i8 0, i8* %47, align 8
  br label %60

60:                                               ; preds = %46, %59
  %61 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !22
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #9
  br label %73

73:                                               ; preds = %70, %64
  store i8 0, i8* %61, align 8
  br label %74

74:                                               ; preds = %60, %73
  %75 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !22
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  tail call void @_ZdlPv(i8* %86) #9
  br label %87

87:                                               ; preds = %84, %78
  store i8 0, i8* %75, align 8
  br label %88

88:                                               ; preds = %74, %87
  %89 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %90 = load i8, i8* %89, align 8, !range !22
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.base::Value"*, %"class.base::Value"** %93, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %93, align 8
  %95 = icmp eq %"class.base::Value"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %94) #8
  %97 = bitcast %"class.base::Value"* %94 to i8*
  tail call void @_ZdlPv(i8* %97) #9
  br label %98

98:                                               ; preds = %96, %92
  store i8 0, i8* %89, align 8
  br label %99

99:                                               ; preds = %88, %98
  %100 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %101 = load i8, i8* %100, align 8, !range !22
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %105 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  tail call void @_ZdlPv(i8* %111) #9
  br label %112

112:                                              ; preds = %109, %103
  store i8 0, i8* %100, align 8
  br label %113

113:                                              ; preds = %99, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.221"*, %"class.headless::runtime::ObjectPreview"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.headless::runtime::ObjectPreview"* %1, null
  br i1 %3, label %79, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  tail call void @_ZN4absl17optional_internal23optional_data_dtor_baseINSt3__16vectorINS2_10unique_ptrIN8headless7runtime12EntryPreviewENS2_14default_deleteIS7_EEEENS2_9allocatorISA_EEEELb0EED2Ev(%"class.absl::optional_internal::optional_data_dtor_base.205"* %5) #8
  %6 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.190", %"class.std::__1::__vector_base.190"* %6, i64 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.191"* %8, null
  br i1 %9, label %64, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::unique_ptr.191"* %8 to i8*
  %12 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 4, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.191"* %13, %8
  br i1 %14, label %62, label %15

15:                                               ; preds = %10, %57
  %16 = phi %"class.std::__1::unique_ptr.191"* [ %17, %57 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191"* %16, i64 -1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.headless::runtime::PropertyPreview"*, %"class.headless::runtime::PropertyPreview"** %18, align 8
  store %"class.headless::runtime::PropertyPreview"* null, %"class.headless::runtime::PropertyPreview"** %18, align 8
  %20 = icmp eq %"class.headless::runtime::PropertyPreview"* %19, null
  br i1 %20, label %57, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !22
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.182"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.headless::runtime::ObjectPreview"*, %"class.headless::runtime::ObjectPreview"** %27, align 8
  store %"class.headless::runtime::ObjectPreview"* null, %"class.headless::runtime::ObjectPreview"** %27, align 8
  %29 = icmp eq %"class.headless::runtime::ObjectPreview"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::__compressed_pair.182"* %26 to %"struct.std::__1::default_delete.221"*
  tail call void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.221"* %31, %"class.headless::runtime::ObjectPreview"* nonnull %28) #8
  br label %32

32:                                               ; preds = %30, %25
  store i8 0, i8* %22, align 8
  br label %33

33:                                               ; preds = %21, %32
  %34 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !22
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #9
  br label %46

46:                                               ; preds = %43, %37
  store i8 0, i8* %34, align 8
  br label %47

47:                                               ; preds = %46, %33
  %48 = bitcast %"class.headless::runtime::PropertyPreview"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #9
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"class.headless::runtime::PropertyPreview"* %19 to i8*
  tail call void @_ZdlPv(i8* %56) #9
  br label %57

57:                                               ; preds = %15, %55
  %58 = icmp eq %"class.std::__1::unique_ptr.191"* %17, %8
  br i1 %58, label %59, label %15

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::__vector_base.190"* %6 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %10, %59
  %63 = phi i8* [ %61, %59 ], [ %11, %10 ]
  store %"class.std::__1::unique_ptr.191"* %8, %"class.std::__1::unique_ptr.191"** %12, align 8
  tail call void @_ZdlPv(i8* %63) #9
  br label %64

64:                                               ; preds = %62, %4
  %65 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !22
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #9
  br label %77

77:                                               ; preds = %68, %74, %64
  %78 = bitcast %"class.headless::runtime::ObjectPreview"* %1 to i8*
  tail call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %77, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl17optional_internal23optional_data_dtor_baseINSt3__16vectorINS2_10unique_ptrIN8headless7runtime12EntryPreviewENS2_14default_deleteIS7_EEEENS2_9allocatorISA_EEEELb0EED2Ev(%"class.absl::optional_internal::optional_data_dtor_base.205"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.205", %"class.absl::optional_internal::optional_data_dtor_base.205"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %48, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.205", %"class.absl::optional_internal::optional_data_dtor_base.205"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.208", %"class.std::__1::__vector_base.208"* %6, i64 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.209"* %8, null
  br i1 %9, label %47, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.209"* %8 to i8*
  %12 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.205", %"class.absl::optional_internal::optional_data_dtor_base.205"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.209"*, %"class.std::__1::unique_ptr.209"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.209"* %13, %8
  br i1 %14, label %45, label %15

15:                                               ; preds = %10, %40
  %16 = phi %"class.std::__1::unique_ptr.209"* [ %17, %40 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %16, i64 -1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.headless::runtime::EntryPreview"*, %"class.headless::runtime::EntryPreview"** %18, align 8
  store %"class.headless::runtime::EntryPreview"* null, %"class.headless::runtime::EntryPreview"** %18, align 8
  %20 = icmp eq %"class.headless::runtime::EntryPreview"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.headless::runtime::EntryPreview", %"class.headless::runtime::EntryPreview"* %19, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.182"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.headless::runtime::ObjectPreview"*, %"class.headless::runtime::ObjectPreview"** %23, align 8
  store %"class.headless::runtime::ObjectPreview"* null, %"class.headless::runtime::ObjectPreview"** %23, align 8
  %25 = icmp eq %"class.headless::runtime::ObjectPreview"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::__compressed_pair.182"* %22 to %"struct.std::__1::default_delete.221"*
  tail call void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.221"* %27, %"class.headless::runtime::ObjectPreview"* nonnull %24) #8
  br label %28

28:                                               ; preds = %21, %26
  %29 = getelementptr inbounds %"class.headless::runtime::EntryPreview", %"class.headless::runtime::EntryPreview"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !22
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.headless::runtime::EntryPreview", %"class.headless::runtime::EntryPreview"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.182"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.headless::runtime::ObjectPreview"*, %"class.headless::runtime::ObjectPreview"** %34, align 8
  store %"class.headless::runtime::ObjectPreview"* null, %"class.headless::runtime::ObjectPreview"** %34, align 8
  %36 = icmp eq %"class.headless::runtime::ObjectPreview"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.std::__1::__compressed_pair.182"* %33 to %"struct.std::__1::default_delete.221"*
  tail call void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.221"* %38, %"class.headless::runtime::ObjectPreview"* nonnull %35) #8
  br label %39

39:                                               ; preds = %32, %37, %28
  tail call void @_ZdlPv(i8* %29) #9
  br label %40

40:                                               ; preds = %39, %15
  %41 = icmp eq %"class.std::__1::unique_ptr.209"* %17, %8
  br i1 %41, label %42, label %15

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::__vector_base.208"* %6 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %10, %42
  %46 = phi i8* [ %44, %42 ], [ %11, %10 ]
  store %"class.std::__1::unique_ptr.209"* %8, %"class.std::__1::unique_ptr.209"** %12, align 8
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %45, %5
  store i8 0, i8* %2, align 8
  br label %48

48:                                               ; preds = %1, %47
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless12dom_snapshot21CaptureSnapshotResultD2Ev(%"class.headless::dom_snapshot::CaptureSnapshotResult"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::dom_snapshot::CaptureSnapshotResult", %"class.headless::dom_snapshot::CaptureSnapshotResult"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"class.headless::dom_snapshot::CaptureSnapshotResult", %"class.headless::dom_snapshot::CaptureSnapshotResult"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.48"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"class.headless::dom_snapshot::CaptureSnapshotResult", %"class.headless::dom_snapshot::CaptureSnapshotResult"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::unique_ptr.321"*, %"class.std::__1::unique_ptr.321"** %29, align 8
  %31 = icmp eq %"class.std::__1::unique_ptr.321"* %30, null
  br i1 %31, label %52, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.std::__1::unique_ptr.321"* %30 to i8*
  %34 = getelementptr inbounds %"class.headless::dom_snapshot::CaptureSnapshotResult", %"class.headless::dom_snapshot::CaptureSnapshotResult"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load %"class.std::__1::unique_ptr.321"*, %"class.std::__1::unique_ptr.321"** %34, align 8
  %36 = icmp eq %"class.std::__1::unique_ptr.321"* %35, %30
  br i1 %36, label %50, label %37

37:                                               ; preds = %32, %45
  %38 = phi %"class.std::__1::unique_ptr.321"* [ %39, %45 ], [ %35, %32 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %38, i64 -1
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.headless::dom_snapshot::DocumentSnapshot"*, %"class.headless::dom_snapshot::DocumentSnapshot"** %40, align 8
  store %"class.headless::dom_snapshot::DocumentSnapshot"* null, %"class.headless::dom_snapshot::DocumentSnapshot"** %40, align 8
  %42 = icmp eq %"class.headless::dom_snapshot::DocumentSnapshot"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  tail call void @_ZN8headless12dom_snapshot16DocumentSnapshotD2Ev(%"class.headless::dom_snapshot::DocumentSnapshot"* nonnull %41) #8
  %44 = bitcast %"class.headless::dom_snapshot::DocumentSnapshot"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #9
  br label %45

45:                                               ; preds = %43, %37
  %46 = icmp eq %"class.std::__1::unique_ptr.321"* %39, %30
  br i1 %46, label %47, label %37

47:                                               ; preds = %45
  %48 = bitcast %"class.headless::dom_snapshot::CaptureSnapshotResult"* %0 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %32
  %51 = phi i8* [ %49, %47 ], [ %33, %32 ]
  store %"class.std::__1::unique_ptr.321"* %30, %"class.std::__1::unique_ptr.321"** %34, align 8
  tail call void @_ZdlPv(i8* %51) #9
  br label %52

52:                                               ; preds = %28, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless12dom_snapshot16DocumentSnapshotD2Ev(%"class.headless::dom_snapshot::DocumentSnapshot"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::dom_snapshot::DocumentSnapshot", %"class.headless::dom_snapshot::DocumentSnapshot"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.headless::dom_snapshot::TextBoxSnapshot"*, %"class.headless::dom_snapshot::TextBoxSnapshot"** %2, align 8
  store %"class.headless::dom_snapshot::TextBoxSnapshot"* null, %"class.headless::dom_snapshot::TextBoxSnapshot"** %2, align 8
  %4 = icmp eq %"class.headless::dom_snapshot::TextBoxSnapshot"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN8headless12dom_snapshot15TextBoxSnapshotD2Ev(%"class.headless::dom_snapshot::TextBoxSnapshot"* nonnull %3) #8
  %6 = bitcast %"class.headless::dom_snapshot::TextBoxSnapshot"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.headless::dom_snapshot::DocumentSnapshot", %"class.headless::dom_snapshot::DocumentSnapshot"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %9 = load %"class.headless::dom_snapshot::LayoutTreeSnapshot"*, %"class.headless::dom_snapshot::LayoutTreeSnapshot"** %8, align 8
  store %"class.headless::dom_snapshot::LayoutTreeSnapshot"* null, %"class.headless::dom_snapshot::LayoutTreeSnapshot"** %8, align 8
  %10 = icmp eq %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN8headless12dom_snapshot18LayoutTreeSnapshotD2Ev(%"class.headless::dom_snapshot::LayoutTreeSnapshot"* nonnull %9) #8
  %12 = bitcast %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.headless::dom_snapshot::DocumentSnapshot", %"class.headless::dom_snapshot::DocumentSnapshot"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.headless::dom_snapshot::NodeTreeSnapshot"*, %"class.headless::dom_snapshot::NodeTreeSnapshot"** %14, align 8
  store %"class.headless::dom_snapshot::NodeTreeSnapshot"* null, %"class.headless::dom_snapshot::NodeTreeSnapshot"** %14, align 8
  %16 = icmp eq %"class.headless::dom_snapshot::NodeTreeSnapshot"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN8headless12dom_snapshot16NodeTreeSnapshotD2Ev(%"class.headless::dom_snapshot::NodeTreeSnapshot"* nonnull %15) #8
  %18 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %13, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless12dom_snapshot15TextBoxSnapshotD2Ev(%"class.headless::dom_snapshot::TextBoxSnapshot"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::dom_snapshot::TextBoxSnapshot", %"class.headless::dom_snapshot::TextBoxSnapshot"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.headless::dom_snapshot::TextBoxSnapshot", %"class.headless::dom_snapshot::TextBoxSnapshot"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.headless::dom_snapshot::TextBoxSnapshot", %"class.headless::dom_snapshot::TextBoxSnapshot"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"class.headless::dom_snapshot::TextBoxSnapshot", %"class.headless::dom_snapshot::TextBoxSnapshot"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.headless::dom_snapshot::TextBoxSnapshot", %"class.headless::dom_snapshot::TextBoxSnapshot"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.378", %"class.std::__1::vector.378"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %21, align 8
  %23 = icmp eq %"class.std::__1::vector.380"* %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::vector.380"* %22 to i8*
  %26 = getelementptr inbounds %"class.headless::dom_snapshot::TextBoxSnapshot", %"class.headless::dom_snapshot::TextBoxSnapshot"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %26, align 8
  %28 = icmp eq %"class.std::__1::vector.380"* %27, %22
  br i1 %28, label %45, label %29

29:                                               ; preds = %24, %40
  %30 = phi %"class.std::__1::vector.380"* [ %31, %40 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %31, i64 0, i32 0, i32 0
  %33 = load double*, double** %32, align 8
  %34 = icmp eq double* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = ptrtoint double* %33 to i64
  %37 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %30, i64 -1, i32 0, i32 1
  %38 = bitcast double** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast double* %33 to i8*
  tail call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %35, %29
  %41 = icmp eq %"class.std::__1::vector.380"* %31, %22
  br i1 %41, label %42, label %29

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.378"* %20 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %24
  %46 = phi i8* [ %44, %42 ], [ %25, %24 ]
  store %"class.std::__1::vector.380"* %22, %"class.std::__1::vector.380"** %26, align 8
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %19, %45
  %48 = getelementptr inbounds %"class.headless::dom_snapshot::TextBoxSnapshot", %"class.headless::dom_snapshot::TextBoxSnapshot"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"class.headless::dom_snapshot::TextBoxSnapshot", %"class.headless::dom_snapshot::TextBoxSnapshot"* %0, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %47, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless12dom_snapshot18LayoutTreeSnapshotD2Ev(%"class.headless::dom_snapshot::LayoutTreeSnapshot"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load double*, double** %6, align 8
  %8 = icmp eq double* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = ptrtoint double* %7 to i64
  %11 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast double** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast double* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !22
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i32* %21 to i64
  %25 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast i32* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %23, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  %30 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !22
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %62, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector.378", %"class.std::__1::vector.378"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %35, align 8
  %37 = icmp eq %"class.std::__1::vector.380"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.std::__1::vector.380"* %36 to i8*
  %40 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %41 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %40, align 8
  %42 = icmp eq %"class.std::__1::vector.380"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.std::__1::vector.380"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %44, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %45, i64 0, i32 0, i32 0
  %47 = load double*, double** %46, align 8
  %48 = icmp eq double* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = ptrtoint double* %47 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %44, i64 -1, i32 0, i32 1
  %52 = bitcast double** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast double* %47 to i8*
  tail call void @_ZdlPv(i8* %53) #9
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.std::__1::vector.380"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.378"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.std::__1::vector.380"* %36, %"class.std::__1::vector.380"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %33
  store i8 0, i8* %30, align 8
  br label %62

62:                                               ; preds = %29, %61
  %63 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %64 = load i8, i8* %63, align 8, !range !22
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %95, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.std::__1::vector.378", %"class.std::__1::vector.378"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %68, align 8
  %70 = icmp eq %"class.std::__1::vector.380"* %69, null
  br i1 %70, label %94, label %71

71:                                               ; preds = %66
  %72 = bitcast %"class.std::__1::vector.380"* %69 to i8*
  %73 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %74 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %73, align 8
  %75 = icmp eq %"class.std::__1::vector.380"* %74, %69
  br i1 %75, label %92, label %76

76:                                               ; preds = %71, %87
  %77 = phi %"class.std::__1::vector.380"* [ %78, %87 ], [ %74, %71 ]
  %78 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %77, i64 -1
  %79 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %78, i64 0, i32 0, i32 0
  %80 = load double*, double** %79, align 8
  %81 = icmp eq double* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %76
  %83 = ptrtoint double* %80 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %77, i64 -1, i32 0, i32 1
  %85 = bitcast double** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = bitcast double* %80 to i8*
  tail call void @_ZdlPv(i8* %86) #9
  br label %87

87:                                               ; preds = %82, %76
  %88 = icmp eq %"class.std::__1::vector.380"* %78, %69
  br i1 %88, label %89, label %76

89:                                               ; preds = %87
  %90 = bitcast %"class.std::__1::vector.378"* %67 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %71
  %93 = phi i8* [ %91, %89 ], [ %72, %71 ]
  store %"class.std::__1::vector.380"* %69, %"class.std::__1::vector.380"** %73, align 8
  tail call void @_ZdlPv(i8* %93) #9
  br label %94

94:                                               ; preds = %92, %66
  store i8 0, i8* %63, align 8
  br label %95

95:                                               ; preds = %62, %94
  %96 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i8, i8* %96, align 8, !range !22
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %128, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %101 = getelementptr inbounds %"class.std::__1::vector.378", %"class.std::__1::vector.378"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %101, align 8
  %103 = icmp eq %"class.std::__1::vector.380"* %102, null
  br i1 %103, label %127, label %104

104:                                              ; preds = %99
  %105 = bitcast %"class.std::__1::vector.380"* %102 to i8*
  %106 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %107 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %106, align 8
  %108 = icmp eq %"class.std::__1::vector.380"* %107, %102
  br i1 %108, label %125, label %109

109:                                              ; preds = %104, %120
  %110 = phi %"class.std::__1::vector.380"* [ %111, %120 ], [ %107, %104 ]
  %111 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %110, i64 -1
  %112 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %111, i64 0, i32 0, i32 0
  %113 = load double*, double** %112, align 8
  %114 = icmp eq double* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %109
  %116 = ptrtoint double* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %110, i64 -1, i32 0, i32 1
  %118 = bitcast double** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast double* %113 to i8*
  tail call void @_ZdlPv(i8* %119) #9
  br label %120

120:                                              ; preds = %115, %109
  %121 = icmp eq %"class.std::__1::vector.380"* %111, %102
  br i1 %121, label %122, label %109

122:                                              ; preds = %120
  %123 = bitcast %"class.std::__1::vector.378"* %100 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %122, %104
  %126 = phi i8* [ %124, %122 ], [ %105, %104 ]
  store %"class.std::__1::vector.380"* %102, %"class.std::__1::vector.380"** %106, align 8
  tail call void @_ZdlPv(i8* %126) #9
  br label %127

127:                                              ; preds = %125, %99
  store i8 0, i8* %96, align 8
  br label %128

128:                                              ; preds = %95, %127
  %129 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %130 = load i8, i8* %129, align 8, !range !22
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %142, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = icmp eq i32* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = ptrtoint i32* %134 to i64
  %138 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %139 = bitcast i32** %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = bitcast i32* %134 to i8*
  tail call void @_ZdlPv(i8* %140) #9
  br label %141

141:                                              ; preds = %136, %132
  store i8 0, i8* %129, align 8
  br label %142

142:                                              ; preds = %128, %141
  %143 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %144 = load %"class.headless::dom_snapshot::RareBooleanData"*, %"class.headless::dom_snapshot::RareBooleanData"** %143, align 8
  store %"class.headless::dom_snapshot::RareBooleanData"* null, %"class.headless::dom_snapshot::RareBooleanData"** %143, align 8
  %145 = icmp eq %"class.headless::dom_snapshot::RareBooleanData"* %144, null
  br i1 %145, label %157, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.headless::dom_snapshot::RareBooleanData", %"class.headless::dom_snapshot::RareBooleanData"* %144, i64 0, i32 0, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = icmp eq i32* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %146
  %151 = ptrtoint i32* %148 to i64
  %152 = getelementptr inbounds %"class.headless::dom_snapshot::RareBooleanData", %"class.headless::dom_snapshot::RareBooleanData"* %144, i64 0, i32 0, i32 0, i32 1
  %153 = bitcast i32** %152 to i64*
  store i64 %151, i64* %153, align 8
  %154 = bitcast i32* %148 to i8*
  tail call void @_ZdlPv(i8* %154) #9
  br label %155

155:                                              ; preds = %150, %146
  %156 = bitcast %"class.headless::dom_snapshot::RareBooleanData"* %144 to i8*
  tail call void @_ZdlPv(i8* %156) #9
  br label %157

157:                                              ; preds = %142, %155
  %158 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 3, i32 0, i32 0
  %159 = load i32*, i32** %158, align 8
  %160 = icmp eq i32* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %157
  %162 = ptrtoint i32* %159 to i64
  %163 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 3, i32 0, i32 1
  %164 = bitcast i32** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = bitcast i32* %159 to i8*
  tail call void @_ZdlPv(i8* %165) #9
  br label %166

166:                                              ; preds = %157, %161
  %167 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 2
  %168 = getelementptr inbounds %"class.std::__1::vector.378", %"class.std::__1::vector.378"* %167, i64 0, i32 0, i32 0
  %169 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %168, align 8
  %170 = icmp eq %"class.std::__1::vector.380"* %169, null
  br i1 %170, label %194, label %171

171:                                              ; preds = %166
  %172 = bitcast %"class.std::__1::vector.380"* %169 to i8*
  %173 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 2, i32 0, i32 1
  %174 = load %"class.std::__1::vector.380"*, %"class.std::__1::vector.380"** %173, align 8
  %175 = icmp eq %"class.std::__1::vector.380"* %174, %169
  br i1 %175, label %192, label %176

176:                                              ; preds = %171, %187
  %177 = phi %"class.std::__1::vector.380"* [ %178, %187 ], [ %174, %171 ]
  %178 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %177, i64 -1
  %179 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %178, i64 0, i32 0, i32 0
  %180 = load double*, double** %179, align 8
  %181 = icmp eq double* %180, null
  br i1 %181, label %187, label %182

182:                                              ; preds = %176
  %183 = ptrtoint double* %180 to i64
  %184 = getelementptr inbounds %"class.std::__1::vector.380", %"class.std::__1::vector.380"* %177, i64 -1, i32 0, i32 1
  %185 = bitcast double** %184 to i64*
  store i64 %183, i64* %185, align 8
  %186 = bitcast double* %180 to i8*
  tail call void @_ZdlPv(i8* %186) #9
  br label %187

187:                                              ; preds = %182, %176
  %188 = icmp eq %"class.std::__1::vector.380"* %178, %169
  br i1 %188, label %189, label %176

189:                                              ; preds = %187
  %190 = bitcast %"class.std::__1::vector.378"* %167 to i8**
  %191 = load i8*, i8** %190, align 8
  br label %192

192:                                              ; preds = %189, %171
  %193 = phi i8* [ %191, %189 ], [ %172, %171 ]
  store %"class.std::__1::vector.380"* %169, %"class.std::__1::vector.380"** %173, align 8
  tail call void @_ZdlPv(i8* %193) #9
  br label %194

194:                                              ; preds = %166, %192
  %195 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 1
  %196 = getelementptr inbounds %"class.std::__1::vector.332", %"class.std::__1::vector.332"* %195, i64 0, i32 0, i32 0
  %197 = load %"class.std::__1::vector.104"*, %"class.std::__1::vector.104"** %196, align 8
  %198 = icmp eq %"class.std::__1::vector.104"* %197, null
  br i1 %198, label %222, label %199

199:                                              ; preds = %194
  %200 = bitcast %"class.std::__1::vector.104"* %197 to i8*
  %201 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 1, i32 0, i32 1
  %202 = load %"class.std::__1::vector.104"*, %"class.std::__1::vector.104"** %201, align 8
  %203 = icmp eq %"class.std::__1::vector.104"* %202, %197
  br i1 %203, label %220, label %204

204:                                              ; preds = %199, %215
  %205 = phi %"class.std::__1::vector.104"* [ %206, %215 ], [ %202, %199 ]
  %206 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %205, i64 -1
  %207 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %206, i64 0, i32 0, i32 0
  %208 = load i32*, i32** %207, align 8
  %209 = icmp eq i32* %208, null
  br i1 %209, label %215, label %210

210:                                              ; preds = %204
  %211 = ptrtoint i32* %208 to i64
  %212 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %205, i64 -1, i32 0, i32 1
  %213 = bitcast i32** %212 to i64*
  store i64 %211, i64* %213, align 8
  %214 = bitcast i32* %208 to i8*
  tail call void @_ZdlPv(i8* %214) #9
  br label %215

215:                                              ; preds = %210, %204
  %216 = icmp eq %"class.std::__1::vector.104"* %206, %197
  br i1 %216, label %217, label %204

217:                                              ; preds = %215
  %218 = bitcast %"class.std::__1::vector.332"* %195 to i8**
  %219 = load i8*, i8** %218, align 8
  br label %220

220:                                              ; preds = %217, %199
  %221 = phi i8* [ %219, %217 ], [ %200, %199 ]
  store %"class.std::__1::vector.104"* %197, %"class.std::__1::vector.104"** %201, align 8
  tail call void @_ZdlPv(i8* %221) #9
  br label %222

222:                                              ; preds = %194, %220
  %223 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 0, i32 0, i32 0
  %224 = load i32*, i32** %223, align 8
  %225 = icmp eq i32* %224, null
  br i1 %225, label %231, label %226

226:                                              ; preds = %222
  %227 = ptrtoint i32* %224 to i64
  %228 = getelementptr inbounds %"class.headless::dom_snapshot::LayoutTreeSnapshot", %"class.headless::dom_snapshot::LayoutTreeSnapshot"* %0, i64 0, i32 0, i32 0, i32 1
  %229 = bitcast i32** %228 to i64*
  store i64 %227, i64* %229, align 8
  %230 = bitcast i32* %224 to i8*
  tail call void @_ZdlPv(i8* %230) #9
  br label %231

231:                                              ; preds = %222, %226
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless12dom_snapshot16NodeTreeSnapshotD2Ev(%"class.headless::dom_snapshot::NodeTreeSnapshot"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.headless::dom_snapshot::RareStringData"*, %"class.headless::dom_snapshot::RareStringData"** %6, align 8
  store %"class.headless::dom_snapshot::RareStringData"* null, %"class.headless::dom_snapshot::RareStringData"** %6, align 8
  %8 = icmp eq %"class.headless::dom_snapshot::RareStringData"* %7, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %7, i64 0, i32 1, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %7, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %13, %9
  %19 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %7, i64 0, i32 0, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = icmp eq i32* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = ptrtoint i32* %20 to i64
  %24 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %7, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast i32** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast i32* %20 to i8*
  tail call void @_ZdlPv(i8* %26) #9
  br label %27

27:                                               ; preds = %22, %18
  %28 = bitcast %"class.headless::dom_snapshot::RareStringData"* %7 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %27, %5
  store i8 0, i8* %2, align 8
  br label %30

30:                                               ; preds = %1, %29
  %31 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !22
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %59, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.headless::dom_snapshot::RareStringData"*, %"class.headless::dom_snapshot::RareStringData"** %35, align 8
  store %"class.headless::dom_snapshot::RareStringData"* null, %"class.headless::dom_snapshot::RareStringData"** %35, align 8
  %37 = icmp eq %"class.headless::dom_snapshot::RareStringData"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %36, i64 0, i32 1, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = icmp eq i32* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = ptrtoint i32* %40 to i64
  %44 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %36, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast i32* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %42, %38
  %48 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %36, i64 0, i32 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %36, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %51, %47
  %57 = bitcast %"class.headless::dom_snapshot::RareStringData"* %36 to i8*
  tail call void @_ZdlPv(i8* %57) #9
  br label %58

58:                                               ; preds = %56, %34
  store i8 0, i8* %31, align 8
  br label %59

59:                                               ; preds = %30, %58
  %60 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !22
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %79, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.headless::dom_snapshot::RareBooleanData"*, %"class.headless::dom_snapshot::RareBooleanData"** %64, align 8
  store %"class.headless::dom_snapshot::RareBooleanData"* null, %"class.headless::dom_snapshot::RareBooleanData"** %64, align 8
  %66 = icmp eq %"class.headless::dom_snapshot::RareBooleanData"* %65, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.headless::dom_snapshot::RareBooleanData", %"class.headless::dom_snapshot::RareBooleanData"* %65, i64 0, i32 0, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = ptrtoint i32* %69 to i64
  %73 = getelementptr inbounds %"class.headless::dom_snapshot::RareBooleanData", %"class.headless::dom_snapshot::RareBooleanData"* %65, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast i32** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast i32* %69 to i8*
  tail call void @_ZdlPv(i8* %75) #9
  br label %76

76:                                               ; preds = %71, %67
  %77 = bitcast %"class.headless::dom_snapshot::RareBooleanData"* %65 to i8*
  tail call void @_ZdlPv(i8* %77) #9
  br label %78

78:                                               ; preds = %76, %63
  store i8 0, i8* %60, align 8
  br label %79

79:                                               ; preds = %59, %78
  %80 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %81 = load i8, i8* %80, align 8, !range !22
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %108, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.headless::dom_snapshot::RareStringData"*, %"class.headless::dom_snapshot::RareStringData"** %84, align 8
  store %"class.headless::dom_snapshot::RareStringData"* null, %"class.headless::dom_snapshot::RareStringData"** %84, align 8
  %86 = icmp eq %"class.headless::dom_snapshot::RareStringData"* %85, null
  br i1 %86, label %107, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %85, i64 0, i32 1, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = icmp eq i32* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = ptrtoint i32* %89 to i64
  %93 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %85, i64 0, i32 1, i32 0, i32 1
  %94 = bitcast i32** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast i32* %89 to i8*
  tail call void @_ZdlPv(i8* %95) #9
  br label %96

96:                                               ; preds = %91, %87
  %97 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %85, i64 0, i32 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %85, i64 0, i32 0, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i32* %98 to i8*
  tail call void @_ZdlPv(i8* %104) #9
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.headless::dom_snapshot::RareStringData"* %85 to i8*
  tail call void @_ZdlPv(i8* %106) #9
  br label %107

107:                                              ; preds = %105, %83
  store i8 0, i8* %80, align 8
  br label %108

108:                                              ; preds = %79, %107
  %109 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %110 = load i8, i8* %109, align 8, !range !22
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %137, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %114 = load %"class.headless::dom_snapshot::RareIntegerData"*, %"class.headless::dom_snapshot::RareIntegerData"** %113, align 8
  store %"class.headless::dom_snapshot::RareIntegerData"* null, %"class.headless::dom_snapshot::RareIntegerData"** %113, align 8
  %115 = icmp eq %"class.headless::dom_snapshot::RareIntegerData"* %114, null
  br i1 %115, label %136, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.headless::dom_snapshot::RareIntegerData", %"class.headless::dom_snapshot::RareIntegerData"* %114, i64 0, i32 1, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = icmp eq i32* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %116
  %121 = ptrtoint i32* %118 to i64
  %122 = getelementptr inbounds %"class.headless::dom_snapshot::RareIntegerData", %"class.headless::dom_snapshot::RareIntegerData"* %114, i64 0, i32 1, i32 0, i32 1
  %123 = bitcast i32** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast i32* %118 to i8*
  tail call void @_ZdlPv(i8* %124) #9
  br label %125

125:                                              ; preds = %120, %116
  %126 = getelementptr inbounds %"class.headless::dom_snapshot::RareIntegerData", %"class.headless::dom_snapshot::RareIntegerData"* %114, i64 0, i32 0, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint i32* %127 to i64
  %131 = getelementptr inbounds %"class.headless::dom_snapshot::RareIntegerData", %"class.headless::dom_snapshot::RareIntegerData"* %114, i64 0, i32 0, i32 0, i32 1
  %132 = bitcast i32** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast i32* %127 to i8*
  tail call void @_ZdlPv(i8* %133) #9
  br label %134

134:                                              ; preds = %129, %125
  %135 = bitcast %"class.headless::dom_snapshot::RareIntegerData"* %114 to i8*
  tail call void @_ZdlPv(i8* %135) #9
  br label %136

136:                                              ; preds = %134, %112
  store i8 0, i8* %109, align 8
  br label %137

137:                                              ; preds = %108, %136
  %138 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %139 = load i8, i8* %138, align 8, !range !22
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %157, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %143 = load %"class.headless::dom_snapshot::RareBooleanData"*, %"class.headless::dom_snapshot::RareBooleanData"** %142, align 8
  store %"class.headless::dom_snapshot::RareBooleanData"* null, %"class.headless::dom_snapshot::RareBooleanData"** %142, align 8
  %144 = icmp eq %"class.headless::dom_snapshot::RareBooleanData"* %143, null
  br i1 %144, label %156, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.headless::dom_snapshot::RareBooleanData", %"class.headless::dom_snapshot::RareBooleanData"* %143, i64 0, i32 0, i32 0, i32 0
  %147 = load i32*, i32** %146, align 8
  %148 = icmp eq i32* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %145
  %150 = ptrtoint i32* %147 to i64
  %151 = getelementptr inbounds %"class.headless::dom_snapshot::RareBooleanData", %"class.headless::dom_snapshot::RareBooleanData"* %143, i64 0, i32 0, i32 0, i32 1
  %152 = bitcast i32** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast i32* %147 to i8*
  tail call void @_ZdlPv(i8* %153) #9
  br label %154

154:                                              ; preds = %149, %145
  %155 = bitcast %"class.headless::dom_snapshot::RareBooleanData"* %143 to i8*
  tail call void @_ZdlPv(i8* %155) #9
  br label %156

156:                                              ; preds = %154, %141
  store i8 0, i8* %138, align 8
  br label %157

157:                                              ; preds = %137, %156
  %158 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %159 = load i8, i8* %158, align 8, !range !22
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %177, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %163 = load %"class.headless::dom_snapshot::RareBooleanData"*, %"class.headless::dom_snapshot::RareBooleanData"** %162, align 8
  store %"class.headless::dom_snapshot::RareBooleanData"* null, %"class.headless::dom_snapshot::RareBooleanData"** %162, align 8
  %164 = icmp eq %"class.headless::dom_snapshot::RareBooleanData"* %163, null
  br i1 %164, label %176, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.headless::dom_snapshot::RareBooleanData", %"class.headless::dom_snapshot::RareBooleanData"* %163, i64 0, i32 0, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = icmp eq i32* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %165
  %170 = ptrtoint i32* %167 to i64
  %171 = getelementptr inbounds %"class.headless::dom_snapshot::RareBooleanData", %"class.headless::dom_snapshot::RareBooleanData"* %163, i64 0, i32 0, i32 0, i32 1
  %172 = bitcast i32** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast i32* %167 to i8*
  tail call void @_ZdlPv(i8* %173) #9
  br label %174

174:                                              ; preds = %169, %165
  %175 = bitcast %"class.headless::dom_snapshot::RareBooleanData"* %163 to i8*
  tail call void @_ZdlPv(i8* %175) #9
  br label %176

176:                                              ; preds = %174, %161
  store i8 0, i8* %158, align 8
  br label %177

177:                                              ; preds = %157, %176
  %178 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %179 = load i8, i8* %178, align 8, !range !22
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %206, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %183 = load %"class.headless::dom_snapshot::RareStringData"*, %"class.headless::dom_snapshot::RareStringData"** %182, align 8
  store %"class.headless::dom_snapshot::RareStringData"* null, %"class.headless::dom_snapshot::RareStringData"** %182, align 8
  %184 = icmp eq %"class.headless::dom_snapshot::RareStringData"* %183, null
  br i1 %184, label %205, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %183, i64 0, i32 1, i32 0, i32 0
  %187 = load i32*, i32** %186, align 8
  %188 = icmp eq i32* %187, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = ptrtoint i32* %187 to i64
  %191 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %183, i64 0, i32 1, i32 0, i32 1
  %192 = bitcast i32** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast i32* %187 to i8*
  tail call void @_ZdlPv(i8* %193) #9
  br label %194

194:                                              ; preds = %189, %185
  %195 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %183, i64 0, i32 0, i32 0, i32 0
  %196 = load i32*, i32** %195, align 8
  %197 = icmp eq i32* %196, null
  br i1 %197, label %203, label %198

198:                                              ; preds = %194
  %199 = ptrtoint i32* %196 to i64
  %200 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %183, i64 0, i32 0, i32 0, i32 1
  %201 = bitcast i32** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = bitcast i32* %196 to i8*
  tail call void @_ZdlPv(i8* %202) #9
  br label %203

203:                                              ; preds = %198, %194
  %204 = bitcast %"class.headless::dom_snapshot::RareStringData"* %183 to i8*
  tail call void @_ZdlPv(i8* %204) #9
  br label %205

205:                                              ; preds = %203, %181
  store i8 0, i8* %178, align 8
  br label %206

206:                                              ; preds = %177, %205
  %207 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %208 = load i8, i8* %207, align 8, !range !22
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %235, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %212 = load %"class.headless::dom_snapshot::RareStringData"*, %"class.headless::dom_snapshot::RareStringData"** %211, align 8
  store %"class.headless::dom_snapshot::RareStringData"* null, %"class.headless::dom_snapshot::RareStringData"** %211, align 8
  %213 = icmp eq %"class.headless::dom_snapshot::RareStringData"* %212, null
  br i1 %213, label %234, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %212, i64 0, i32 1, i32 0, i32 0
  %216 = load i32*, i32** %215, align 8
  %217 = icmp eq i32* %216, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %214
  %219 = ptrtoint i32* %216 to i64
  %220 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %212, i64 0, i32 1, i32 0, i32 1
  %221 = bitcast i32** %220 to i64*
  store i64 %219, i64* %221, align 8
  %222 = bitcast i32* %216 to i8*
  tail call void @_ZdlPv(i8* %222) #9
  br label %223

223:                                              ; preds = %218, %214
  %224 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %212, i64 0, i32 0, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"class.headless::dom_snapshot::RareStringData", %"class.headless::dom_snapshot::RareStringData"* %212, i64 0, i32 0, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  tail call void @_ZdlPv(i8* %231) #9
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"class.headless::dom_snapshot::RareStringData"* %212 to i8*
  tail call void @_ZdlPv(i8* %233) #9
  br label %234

234:                                              ; preds = %232, %210
  store i8 0, i8* %207, align 8
  br label %235

235:                                              ; preds = %206, %234
  %236 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %237 = load i8, i8* %236, align 8, !range !22
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %268, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %241 = getelementptr inbounds %"class.std::__1::vector.332", %"class.std::__1::vector.332"* %240, i64 0, i32 0, i32 0
  %242 = load %"class.std::__1::vector.104"*, %"class.std::__1::vector.104"** %241, align 8
  %243 = icmp eq %"class.std::__1::vector.104"* %242, null
  br i1 %243, label %267, label %244

244:                                              ; preds = %239
  %245 = bitcast %"class.std::__1::vector.104"* %242 to i8*
  %246 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %247 = load %"class.std::__1::vector.104"*, %"class.std::__1::vector.104"** %246, align 8
  %248 = icmp eq %"class.std::__1::vector.104"* %247, %242
  br i1 %248, label %265, label %249

249:                                              ; preds = %244, %260
  %250 = phi %"class.std::__1::vector.104"* [ %251, %260 ], [ %247, %244 ]
  %251 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %250, i64 -1
  %252 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %251, i64 0, i32 0, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = icmp eq i32* %253, null
  br i1 %254, label %260, label %255

255:                                              ; preds = %249
  %256 = ptrtoint i32* %253 to i64
  %257 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %250, i64 -1, i32 0, i32 1
  %258 = bitcast i32** %257 to i64*
  store i64 %256, i64* %258, align 8
  %259 = bitcast i32* %253 to i8*
  tail call void @_ZdlPv(i8* %259) #9
  br label %260

260:                                              ; preds = %255, %249
  %261 = icmp eq %"class.std::__1::vector.104"* %251, %242
  br i1 %261, label %262, label %249

262:                                              ; preds = %260
  %263 = bitcast %"class.std::__1::vector.332"* %240 to i8**
  %264 = load i8*, i8** %263, align 8
  br label %265

265:                                              ; preds = %262, %244
  %266 = phi i8* [ %264, %262 ], [ %245, %244 ]
  store %"class.std::__1::vector.104"* %242, %"class.std::__1::vector.104"** %246, align 8
  tail call void @_ZdlPv(i8* %266) #9
  br label %267

267:                                              ; preds = %265, %239
  store i8 0, i8* %236, align 8
  br label %268

268:                                              ; preds = %235, %267
  %269 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %270 = load i8, i8* %269, align 8, !range !22
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %282, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %274 = load i32*, i32** %273, align 8
  %275 = icmp eq i32* %274, null
  br i1 %275, label %281, label %276

276:                                              ; preds = %272
  %277 = ptrtoint i32* %274 to i64
  %278 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %279 = bitcast i32** %278 to i64*
  store i64 %277, i64* %279, align 8
  %280 = bitcast i32* %274 to i8*
  tail call void @_ZdlPv(i8* %280) #9
  br label %281

281:                                              ; preds = %276, %272
  store i8 0, i8* %269, align 8
  br label %282

282:                                              ; preds = %268, %281
  %283 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %284 = load i8, i8* %283, align 8, !range !22
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %296, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %295, label %290

290:                                              ; preds = %286
  %291 = ptrtoint i32* %288 to i64
  %292 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %293 = bitcast i32** %292 to i64*
  store i64 %291, i64* %293, align 8
  %294 = bitcast i32* %288 to i8*
  tail call void @_ZdlPv(i8* %294) #9
  br label %295

295:                                              ; preds = %290, %286
  store i8 0, i8* %283, align 8
  br label %296

296:                                              ; preds = %282, %295
  %297 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %298 = load i8, i8* %297, align 8, !range !22
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %310, label %300

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %302 = load i32*, i32** %301, align 8
  %303 = icmp eq i32* %302, null
  br i1 %303, label %309, label %304

304:                                              ; preds = %300
  %305 = ptrtoint i32* %302 to i64
  %306 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %307 = bitcast i32** %306 to i64*
  store i64 %305, i64* %307, align 8
  %308 = bitcast i32* %302 to i8*
  tail call void @_ZdlPv(i8* %308) #9
  br label %309

309:                                              ; preds = %304, %300
  store i8 0, i8* %297, align 8
  br label %310

310:                                              ; preds = %296, %309
  %311 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %312 = load i8, i8* %311, align 8, !range !22
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %324, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %316 = load i32*, i32** %315, align 8
  %317 = icmp eq i32* %316, null
  br i1 %317, label %323, label %318

318:                                              ; preds = %314
  %319 = ptrtoint i32* %316 to i64
  %320 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %321 = bitcast i32** %320 to i64*
  store i64 %319, i64* %321, align 8
  %322 = bitcast i32* %316 to i8*
  tail call void @_ZdlPv(i8* %322) #9
  br label %323

323:                                              ; preds = %318, %314
  store i8 0, i8* %311, align 8
  br label %324

324:                                              ; preds = %310, %323
  %325 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load i8, i8* %325, align 8, !range !22
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %338, label %328

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %330 = load i32*, i32** %329, align 8
  %331 = icmp eq i32* %330, null
  br i1 %331, label %337, label %332

332:                                              ; preds = %328
  %333 = ptrtoint i32* %330 to i64
  %334 = getelementptr inbounds %"class.headless::dom_snapshot::NodeTreeSnapshot", %"class.headless::dom_snapshot::NodeTreeSnapshot"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %335 = bitcast i32** %334 to i64*
  store i64 %333, i64* %335, align 8
  %336 = bitcast i32* %330 to i8*
  tail call void @_ZdlPv(i8* %336) #9
  br label %337

337:                                              ; preds = %332, %328
  store i8 0, i8* %325, align 8
  br label %338

338:                                              ; preds = %324, %337
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.44", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.44"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.44"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback.44"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.44"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.44"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.44"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.59", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.59"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.59"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback.59"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.59"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.59"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.59"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.66", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.66"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.66"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback.66"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.66"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.66"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.66"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback.66", %"class.base::OnceCallback.66"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot13DisableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot12EnableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot17GetSnapshotResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless12dom_snapshot21CaptureSnapshotResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!22 = !{i8 0, i8 2}
