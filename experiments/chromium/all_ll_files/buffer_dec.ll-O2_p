; ModuleID = '../../third_party/libwebp/src/dec/buffer_dec.c'
source_filename = "../../third_party/libwebp/src/dec/buffer_dec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.WebPDecBuffer = type { i32, i32, i32, i32, %union.anon, [4 x i32], i8* }
%union.anon = type { %struct.WebPYUVABuffer }
%struct.WebPYUVABuffer = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.WebPDecoderOptions = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i32] }
%struct.WebPBitstreamFeatures = type { i32, i32, i32, i32, i32, [5 x i32] }

@kModeBpp = internal unnamed_addr constant [13 x i8] c"\03\04\03\04\04\02\02\04\04\04\02\01\01", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @WebPFlipBuffer(%struct.WebPDecBuffer*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.WebPDecBuffer* %0, null
  br i1 %2, label %56, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp ugt i32 %5, 10
  %7 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, -1
  br i1 %6, label %20, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 1
  %12 = bitcast i8** %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = mul nsw i32 %13, %9
  %15 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  store i8* %18, i8** %15, align 8
  %19 = sub nsw i32 0, %13
  store i32 %19, i32* %12, align 8
  br label %56

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = mul nsw i32 %22, %9
  %24 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = sext i32 %23 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8* %27, i8** %24, align 8
  %28 = sub nsw i32 0, %22
  store i32 %28, i32* %21, align 8
  %29 = ashr i32 %9, 1
  %30 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = mul nsw i32 %31, %29
  %33 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = sext i32 %32 to i64
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  store i8* %36, i8** %33, align 8
  %37 = sub nsw i32 0, %31
  store i32 %37, i32* %30, align 4
  %38 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 6
  %39 = load i32, i32* %38, align 8
  %40 = mul nsw i32 %39, %29
  %41 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  store i8* %44, i8** %41, align 8
  %45 = sub nsw i32 0, %39
  store i32 %45, i32* %38, align 8
  %46 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 3
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %56, label %49

49:                                               ; preds = %20
  %50 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 7
  %51 = load i32, i32* %50, align 4
  %52 = mul nsw i32 %51, %9
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %47, i64 %53
  store i8* %54, i8** %46, align 8
  %55 = sub nsw i32 0, %51
  store i32 %55, i32* %50, align 4
  br label %56

56:                                               ; preds = %10, %20, %49, %1
  %57 = phi i32 [ 2, %1 ], [ 0, %49 ], [ 0, %20 ], [ 0, %10 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPAllocateDecBuffer(i32, i32, %struct.WebPDecoderOptions* readonly, %struct.WebPDecBuffer*) local_unnamed_addr #1 {
  %5 = icmp eq %struct.WebPDecBuffer* %3, null
  %6 = icmp slt i32 %0, 1
  %7 = or i1 %6, %5
  %8 = icmp slt i32 %1, 1
  %9 = or i1 %8, %7
  br i1 %9, label %187, label %10

10:                                               ; preds = %4
  %11 = icmp ne %struct.WebPDecoderOptions* %2, null
  br i1 %11, label %12, label %45

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.WebPDecoderOptions, %struct.WebPDecoderOptions* %2, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %39, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.WebPDecoderOptions, %struct.WebPDecoderOptions* %2, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.WebPDecoderOptions, %struct.WebPDecoderOptions* %2, i64 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.WebPDecoderOptions, %struct.WebPDecoderOptions* %2, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.WebPDecoderOptions, %struct.WebPDecoderOptions* %2, i64 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = or i32 %24, %22
  %26 = icmp slt i32 %25, 0
  %27 = icmp slt i32 %18, 1
  %28 = or i1 %27, %26
  %29 = icmp slt i32 %20, 1
  %30 = or i1 %29, %28
  br i1 %30, label %187, label %31

31:                                               ; preds = %16
  %32 = and i32 %24, -2
  %33 = and i32 %22, -2
  %34 = add nsw i32 %33, %18
  %35 = icmp sgt i32 %34, %0
  %36 = add nsw i32 %32, %20
  %37 = icmp sgt i32 %36, %1
  %38 = or i1 %35, %37
  br i1 %38, label %187, label %39

39:                                               ; preds = %31, %12
  %40 = phi i32 [ %20, %31 ], [ %1, %12 ]
  %41 = phi i32 [ %18, %31 ], [ %0, %12 ]
  %42 = getelementptr inbounds %struct.WebPDecoderOptions, %struct.WebPDecoderOptions* %2, i64 0, i32 7
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %187

45:                                               ; preds = %39, %10
  %46 = phi i32 [ %40, %39 ], [ %1, %10 ]
  %47 = phi i32 [ %41, %39 ], [ %0, %10 ]
  %48 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 1
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 2
  store i32 %46, i32* %49, align 8
  %50 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %47, 1
  %53 = icmp slt i32 %46, 1
  %54 = or i1 %53, %52
  %55 = icmp ugt i32 %51, 12
  %56 = or i1 %54, %55
  br i1 %56, label %187, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 1
  br i1 %60, label %61, label %127

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 6
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %65, label %127

65:                                               ; preds = %61
  %66 = sext i32 %47 to i64
  %67 = zext i32 %51 to i64
  %68 = getelementptr inbounds [13 x i8], [13 x i8]* @kModeBpp, i64 0, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = mul nsw i64 %70, %66
  %72 = icmp ugt i64 %71, 4294967295
  br i1 %72, label %187, label %73

73:                                               ; preds = %65
  %74 = zext i8 %69 to i32
  %75 = mul nsw i32 %47, %74
  %76 = sext i32 %75 to i64
  %77 = sext i32 %46 to i64
  %78 = mul nsw i64 %76, %77
  %79 = icmp ugt i32 %51, 10
  br i1 %79, label %80, label %92

80:                                               ; preds = %73
  %81 = add nuw nsw i32 %47, 1
  %82 = sdiv i32 %81, 2
  %83 = sext i32 %82 to i64
  %84 = add nuw nsw i32 %46, 1
  %85 = sdiv i32 %84, 2
  %86 = sext i32 %85 to i64
  %87 = mul nsw i64 %83, %86
  %88 = icmp eq i32 %51, 12
  %89 = mul nsw i64 %66, %77
  %90 = select i1 %88, i32 %47, i32 0
  %91 = select i1 %88, i64 %89, i64 0
  br label %92

92:                                               ; preds = %80, %73
  %93 = phi i32 [ 0, %73 ], [ %82, %80 ]
  %94 = phi i32 [ 0, %73 ], [ %90, %80 ]
  %95 = phi i64 [ 0, %73 ], [ %87, %80 ]
  %96 = phi i64 [ 0, %73 ], [ %91, %80 ]
  %97 = shl nsw i64 %95, 1
  %98 = add i64 %97, %78
  %99 = add i64 %98, %96
  %100 = tail call i8* @WebPSafeMalloc(i64 %99, i64 1) #5
  %101 = icmp eq i8* %100, null
  br i1 %101, label %187, label %102

102:                                              ; preds = %92
  store i8* %100, i8** %62, align 8
  %103 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 0
  store i8* %100, i8** %103, align 8
  br i1 %79, label %104, label %122

104:                                              ; preds = %102
  %105 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 4
  store i32 %75, i32* %105, align 8
  %106 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 8
  store i64 %78, i64* %106, align 8
  %107 = getelementptr inbounds i8, i8* %100, i64 %78
  %108 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 1
  store i8* %107, i8** %108, align 8
  %109 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 5
  store i32 %93, i32* %109, align 4
  %110 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 9
  store i64 %95, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %107, i64 %95
  %112 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 2
  store i8* %111, i8** %112, align 8
  %113 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 6
  store i32 %93, i32* %113, align 8
  %114 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 10
  store i64 %95, i64* %114, align 8
  %115 = icmp eq i32 %51, 12
  br i1 %115, label %116, label %119

116:                                              ; preds = %104
  %117 = getelementptr inbounds i8, i8* %107, i64 %97
  %118 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 3
  store i8* %117, i8** %118, align 8
  br label %119

119:                                              ; preds = %116, %104
  %120 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 11
  store i64 %96, i64* %120, align 8
  %121 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 7
  store i32 %94, i32* %121, align 4
  br label %127

122:                                              ; preds = %102
  %123 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 1
  %124 = bitcast i8** %123 to i32*
  store i32 %75, i32* %124, align 8
  %125 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 2
  %126 = bitcast i8** %125 to i64*
  store i64 %78, i64* %126, align 8
  br label %127

127:                                              ; preds = %57, %61, %119, %122
  %128 = tail call fastcc i32 @CheckDecBuffer(%struct.WebPDecBuffer* nonnull %3) #5
  %129 = icmp ne i32 %128, 0
  %130 = xor i1 %11, true
  %131 = or i1 %129, %130
  br i1 %131, label %187, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.WebPDecoderOptions, %struct.WebPDecoderOptions* %2, i64 0, i32 12
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %187, label %136

136:                                              ; preds = %132
  %137 = load i32, i32* %50, align 8
  %138 = icmp ugt i32 %137, 10
  %139 = load i32, i32* %49, align 8
  %140 = add nsw i32 %139, -1
  br i1 %138, label %151, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 1
  %143 = bitcast i8** %142 to i32*
  %144 = load i32, i32* %143, align 8
  %145 = mul nsw i32 %144, %140
  %146 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = sext i32 %145 to i64
  %149 = getelementptr inbounds i8, i8* %147, i64 %148
  store i8* %149, i8** %146, align 8
  %150 = sub nsw i32 0, %144
  store i32 %150, i32* %143, align 8
  br label %187

151:                                              ; preds = %136
  %152 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 4
  %153 = load i32, i32* %152, align 8
  %154 = mul nsw i32 %153, %140
  %155 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = sext i32 %154 to i64
  %158 = getelementptr inbounds i8, i8* %156, i64 %157
  store i8* %158, i8** %155, align 8
  %159 = sub nsw i32 0, %153
  store i32 %159, i32* %152, align 8
  %160 = ashr i32 %140, 1
  %161 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 5
  %162 = load i32, i32* %161, align 4
  %163 = mul nsw i32 %162, %160
  %164 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 1
  %165 = load i8*, i8** %164, align 8
  %166 = sext i32 %163 to i64
  %167 = getelementptr inbounds i8, i8* %165, i64 %166
  store i8* %167, i8** %164, align 8
  %168 = sub nsw i32 0, %162
  store i32 %168, i32* %161, align 4
  %169 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 6
  %170 = load i32, i32* %169, align 8
  %171 = mul nsw i32 %170, %160
  %172 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 2
  %173 = load i8*, i8** %172, align 8
  %174 = sext i32 %171 to i64
  %175 = getelementptr inbounds i8, i8* %173, i64 %174
  store i8* %175, i8** %172, align 8
  %176 = sub nsw i32 0, %170
  store i32 %176, i32* %169, align 8
  %177 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 3
  %178 = load i8*, i8** %177, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %187, label %180

180:                                              ; preds = %151
  %181 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %3, i64 0, i32 4, i32 0, i32 7
  %182 = load i32, i32* %181, align 4
  %183 = mul nsw i32 %182, %140
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8, i8* %178, i64 %184
  store i8* %185, i8** %177, align 8
  %186 = sub nsw i32 0, %182
  store i32 %186, i32* %181, align 4
  br label %187

187:                                              ; preds = %31, %92, %65, %45, %16, %180, %151, %141, %127, %132, %39, %4
  %188 = phi i32 [ 2, %31 ], [ 2, %4 ], [ 2, %39 ], [ %128, %127 ], [ 0, %132 ], [ 0, %141 ], [ 0, %151 ], [ 0, %180 ], [ 2, %16 ], [ 1, %92 ], [ 2, %65 ], [ 2, %45 ]
  ret i32 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPInitDecBufferInternal(%struct.WebPDecBuffer*, i32) local_unnamed_addr #1 {
  %3 = and i32 %1, -256
  %4 = icmp ne i32 %3, 512
  %5 = icmp eq %struct.WebPDecBuffer* %0, null
  %6 = or i1 %5, %4
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.WebPDecBuffer* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 120, i1 false)
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i32 [ 1, %7 ], [ 0, %2 ]
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @WebPFreeDecBuffer(%struct.WebPDecBuffer*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.WebPDecBuffer* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 6
  %9 = load i8*, i8** %8, align 8
  tail call void @WebPSafeFree(i8* %9) #5
  br label %10

10:                                               ; preds = %7, %3
  %11 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 6
  store i8* null, i8** %11, align 8
  br label %12

12:                                               ; preds = %1, %10
  ret void
}

declare void @WebPSafeFree(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @WebPCopyDecBuffer(%struct.WebPDecBuffer* readonly, %struct.WebPDecBuffer*) local_unnamed_addr #1 {
  %3 = icmp ne %struct.WebPDecBuffer* %0, null
  %4 = icmp ne %struct.WebPDecBuffer* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = bitcast %struct.WebPDecBuffer* %1 to i8*
  %8 = bitcast %struct.WebPDecBuffer* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %8, i64 120, i1 false)
  %9 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 6
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 3
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 6
  store i8* null, i8** %14, align 8
  br label %15

15:                                               ; preds = %6, %12, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @WebPGrabDecBuffer(%struct.WebPDecBuffer*, %struct.WebPDecBuffer*) local_unnamed_addr #1 {
  %3 = icmp ne %struct.WebPDecBuffer* %0, null
  %4 = icmp ne %struct.WebPDecBuffer* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %struct.WebPDecBuffer* %1 to i8*
  %8 = bitcast %struct.WebPDecBuffer* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %8, i64 120, i1 false)
  %9 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 6
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 3
  store i32 1, i32* %13, align 4
  store i8* null, i8** %9, align 8
  br label %14

14:                                               ; preds = %6, %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPCopyDecBufferPixels(%struct.WebPDecBuffer* nocapture readonly, %struct.WebPDecBuffer* nocapture) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 1
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 2
  store i32 %7, i32* %8, align 8
  %9 = tail call fastcc i32 @CheckDecBuffer(%struct.WebPDecBuffer* %1)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %85

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %13, 10
  %15 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  br i1 %14, label %33, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 1
  %19 = bitcast i8** %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 1
  %24 = bitcast i8** %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = load i32, i32* %3, align 4
  %27 = zext i32 %13 to i64
  %28 = getelementptr inbounds [13 x i8], [13 x i8]* @kModeBpp, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nsw i32 %26, %30
  %32 = load i32, i32* %6, align 8
  tail call void @WebPCopyPlane(i8* %16, i32 %20, i8* %22, i32 %25, i32 %31, i32 %32) #5
  br label %85

33:                                               ; preds = %11
  %34 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = load i32, i32* %3, align 4
  %41 = load i32, i32* %6, align 8
  tail call void @WebPCopyPlane(i8* %16, i32 %35, i8* %37, i32 %39, i32 %40, i32 %41) #5
  %42 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 5
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = load i32, i32* %3, align 4
  %51 = add nsw i32 %50, 1
  %52 = sdiv i32 %51, 2
  %53 = load i32, i32* %6, align 8
  %54 = add nsw i32 %53, 1
  %55 = sdiv i32 %54, 2
  tail call void @WebPCopyPlane(i8* %43, i32 %45, i8* %47, i32 %49, i32 %52, i32 %55) #5
  %56 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 2
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 6
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 2
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 6
  %63 = load i32, i32* %62, align 8
  %64 = load i32, i32* %3, align 4
  %65 = add nsw i32 %64, 1
  %66 = sdiv i32 %65, 2
  %67 = load i32, i32* %6, align 8
  %68 = add nsw i32 %67, 1
  %69 = sdiv i32 %68, 2
  tail call void @WebPCopyPlane(i8* %57, i32 %59, i8* %61, i32 %63, i32 %66, i32 %69) #5
  %70 = load i32, i32* %12, align 8
  switch i32 %70, label %71 [
    i32 12, label %74
    i32 5, label %74
    i32 4, label %74
    i32 3, label %74
    i32 1, label %74
  ]

71:                                               ; preds = %33
  %72 = add i32 %70, -7
  %73 = icmp ugt i32 %72, 3
  br i1 %73, label %85, label %74

74:                                               ; preds = %33, %33, %33, %33, %33, %71
  %75 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 3
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 7
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 3
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %1, i64 0, i32 4, i32 0, i32 7
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* %3, align 4
  %84 = load i32, i32* %6, align 8
  tail call void @WebPCopyPlane(i8* %76, i32 %78, i8* %80, i32 %82, i32 %83, i32 %84) #5
  br label %85

85:                                               ; preds = %17, %71, %74, %2
  %86 = phi i32 [ 2, %2 ], [ 0, %74 ], [ 0, %71 ], [ 0, %17 ]
  ret i32 %86
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc i32 @CheckDecBuffer(%struct.WebPDecBuffer* nocapture readonly) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %3, 12
  br i1 %8, label %125, label %9

9:                                                ; preds = %1
  %10 = icmp ugt i32 %3, 10
  br i1 %10, label %11, label %95

11:                                               ; preds = %9
  %12 = add nsw i32 %5, 1
  %13 = sdiv i32 %12, 2
  %14 = add nsw i32 %7, 1
  %15 = sdiv i32 %14, 2
  %16 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %17, 0
  %19 = sub nsw i32 0, %17
  %20 = select i1 %18, i32 %19, i32 %17
  %21 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  %24 = sub nsw i32 0, %22
  %25 = select i1 %23, i32 %24, i32 %22
  %26 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 6
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %27, 0
  %29 = sub nsw i32 0, %27
  %30 = select i1 %28, i32 %29, i32 %27
  %31 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 7
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = zext i32 %20 to i64
  %37 = add nsw i32 %7, -1
  %38 = sext i32 %37 to i64
  %39 = mul nsw i64 %36, %38
  %40 = sext i32 %5 to i64
  %41 = add nsw i64 %39, %40
  %42 = zext i32 %25 to i64
  %43 = add nsw i32 %15, -1
  %44 = sext i32 %43 to i64
  %45 = mul nsw i64 %42, %44
  %46 = sext i32 %13 to i64
  %47 = add nsw i64 %45, %46
  %48 = zext i32 %30 to i64
  %49 = mul nsw i64 %48, %44
  %50 = add nsw i64 %49, %46
  %51 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 8
  %52 = load i64, i64* %51, align 8
  %53 = icmp ule i64 %41, %52
  %54 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 9
  %55 = load i64, i64* %54, align 8
  %56 = icmp ule i64 %47, %55
  %57 = and i1 %53, %56
  %58 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 10
  %59 = load i64, i64* %58, align 8
  %60 = icmp ule i64 %50, %59
  %61 = and i1 %57, %60
  %62 = icmp sge i32 %20, %5
  %63 = and i1 %62, %61
  %64 = icmp sge i32 %25, %13
  %65 = and i1 %64, %63
  %66 = icmp sge i32 %30, %13
  %67 = and i1 %66, %65
  %68 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp ne i8* %69, null
  %71 = and i1 %70, %67
  %72 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 1
  %73 = load i8*, i8** %72, align 8
  %74 = icmp ne i8* %73, null
  %75 = and i1 %74, %71
  %76 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 2
  %77 = load i8*, i8** %76, align 8
  %78 = icmp ne i8* %77, null
  %79 = and i1 %78, %75
  %80 = icmp eq i32 %3, 12
  br i1 %80, label %81, label %123

81:                                               ; preds = %11
  %82 = zext i32 %35 to i64
  %83 = mul nsw i64 %82, %38
  %84 = add nsw i64 %83, %40
  %85 = icmp sge i32 %35, %5
  %86 = and i1 %85, %79
  %87 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 11
  %88 = load i64, i64* %87, align 8
  %89 = icmp ule i64 %84, %88
  %90 = and i1 %86, %89
  %91 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 3
  %92 = load i8*, i8** %91, align 8
  %93 = icmp ne i8* %92, null
  %94 = and i1 %90, %93
  br i1 %94, label %124, label %125

95:                                               ; preds = %9
  %96 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 1
  %97 = bitcast i8** %96 to i32*
  %98 = load i32, i32* %97, align 8
  %99 = icmp slt i32 %98, 0
  %100 = sub nsw i32 0, %98
  %101 = select i1 %99, i32 %100, i32 %98
  %102 = zext i32 %101 to i64
  %103 = add nsw i32 %7, -1
  %104 = sext i32 %103 to i64
  %105 = mul nsw i64 %102, %104
  %106 = zext i32 %3 to i64
  %107 = getelementptr inbounds [13 x i8], [13 x i8]* @kModeBpp, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = mul nsw i32 %5, %109
  %111 = sext i32 %110 to i64
  %112 = add nsw i64 %105, %111
  %113 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 2
  %114 = bitcast i8** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = icmp ule i64 %112, %115
  %117 = icmp sge i32 %101, %110
  %118 = and i1 %117, %116
  %119 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 4, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = icmp ne i8* %120, null
  %122 = and i1 %121, %118
  br i1 %122, label %124, label %125

123:                                              ; preds = %11
  br i1 %79, label %124, label %125

124:                                              ; preds = %81, %95, %123
  br label %125

125:                                              ; preds = %1, %81, %95, %123, %124
  %126 = phi i32 [ 0, %124 ], [ 2, %123 ], [ 2, %95 ], [ 2, %81 ], [ 2, %1 ]
  ret i32 %126
}

declare void @WebPCopyPlane(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebPAvoidSlowMemory(%struct.WebPDecBuffer* nocapture readonly, %struct.WebPBitstreamFeatures* readonly) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 1
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -7
  %10 = icmp ult i32 %9, 4
  %11 = icmp ne %struct.WebPBitstreamFeatures* %1, null
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %18

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 0
  %17 = zext i1 %16 to i32
  br label %18

18:                                               ; preds = %13, %6, %2
  %19 = phi i32 [ 0, %6 ], [ 0, %2 ], [ %17, %13 ]
  ret i32 %19
}

declare i8* @WebPSafeMalloc(i64, i64) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
