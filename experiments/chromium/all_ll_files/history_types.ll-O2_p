; ModuleID = '../../components/history/core/browser/history_types.cc'
source_filename = "../../components/history/core/browser/history_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.history::VisitRow" = type <{ i64, i64, %"class.base::Time", i64, i32, [4 x i8], i64, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.history::QueryResults" = type { i8, %"class.std::__1::vector", %"class.std::__1::map" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.history::URLResult"*, %"class.history::URLResult"*, %"class.std::__1::__compressed_pair.27" }
%"class.history::URLResult" = type <{ %"class.history::URLRow.base", [7 x i8], %"class.base::Time", %"struct.history::VisitContentAnnotations", %"class.query_parser::Snippet", %"class.std::__1::vector.20", i8, [7 x i8] }>
%"class.history::URLRow.base" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string.4", i32, i32, %"class.base::Time", i8 }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.history::VisitContentAnnotations" = type { i64, %"struct.history::VisitContentModelAnnotations" }
%"struct.history::VisitContentModelAnnotations" = type { float, %"class.std::__1::vector.13", i64 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"*, %"class.std::__1::__compressed_pair.15" }
%"struct.history::VisitContentModelAnnotations::Category" = type { i32, i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.history::VisitContentModelAnnotations::Category"* }
%"class.query_parser::Snippet" = type { %"class.std::__1::basic_string.4", %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.22" }
%"struct.std::__1::pair" = type { i64, i64 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.history::URLResult"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"struct.history::QueryOptions" = type <{ %"class.base::Time", %"class.base::Time", i32, i32, i32, [4 x i8] }>
%"struct.history::QueryURLResult" = type { i8, [7 x i8], %"class.history::URLRow", %"class.std::__1::vector.60" }
%"class.history::URLRow" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string.4", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.history::VisitRow"*, %"class.history::VisitRow"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.history::VisitRow"* }
%"struct.history::MostVisitedURL" = type { %class.GURL, %"class.std::__1::basic_string.4" }
%"struct.history::FilteredURL" = type { %class.GURL, %"class.std::__1::basic_string.4", double, %"struct.history::FilteredURL::ExtendedInfo" }
%"struct.history::FilteredURL::ExtendedInfo" = type { i32, i32, i64, %"class.base::Time" }
%"class.history::PageUsageData" = type { i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string.4", double }
%"struct.history::TopSitesDelta" = type { %"class.std::__1::vector.67", %"class.std::__1::vector.74", %"class.std::__1::vector.74" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.history::MostVisitedURL"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.history::MostVisitedURLWithRank"*, %"struct.history::MostVisitedURLWithRank"*, %"class.std::__1::__compressed_pair.76" }
%"struct.history::MostVisitedURLWithRank" = type <{ %"struct.history::MostVisitedURL", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.history::MostVisitedURLWithRank"* }
%"struct.history::HistoryAddPageArgs" = type { %class.GURL, %"class.base::Time", %"struct.history::Context"*, i32, %class.GURL, %"class.std::__1::vector.81", i32, i8, i32, i8, i8, i8, %"class.absl::optional" }
%"struct.history::Context" = type { i8 }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"class.std::__1::basic_string.4" }
%"struct.history::DomainMetricSet" = type { %"class.absl::optional.88", %"class.absl::optional.88", %"class.absl::optional.88", %"class.base::Time" }
%"class.absl::optional.88" = type { %"class.absl::optional_internal::optional_data.89" }
%"class.absl::optional_internal::optional_data.89" = type { %"class.absl::optional_internal::optional_data_base.90" }
%"class.absl::optional_internal::optional_data_base.90" = type { %"class.absl::optional_internal::optional_data_dtor_base.91" }
%"class.absl::optional_internal::optional_data_dtor_base.91" = type { i8, %union.anon.92 }
%union.anon.92 = type { %"struct.history::DomainMetricCountType" }
%"struct.history::DomainMetricCountType" = type { i32, %"class.base::Time" }
%"struct.history::ExpireHistoryArgs" = type { %"class.std::__1::set", %"class.base::Time", %"class.base::Time" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.48" }
%"class.std::__1::__tree.48" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.history::DeletionInfo" = type { %"class.history::DeletionTimeRange", i8, %"class.std::__1::vector.93", %"class.std::__1::set", %"class.absl::optional.100", %"class.std::__1::map.105" }
%"class.history::DeletionTimeRange" = type { %"class.base::Time", %"class.base::Time" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.history::URLRow"*, %"class.history::URLRow"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.history::URLRow"* }
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, %union.anon.104 }
%union.anon.104 = type { %"class.std::__1::set" }
%"class.std::__1::map.105" = type { %"class.std::__1::__tree.106" }
%"class.std::__1::__tree.106" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.history::AnnotatedVisit" = type { %"class.history::URLRow", %"class.history::VisitRow", %"struct.history::VisitContextAnnotations", %"struct.history::VisitContentAnnotations" }
%"struct.history::VisitContextAnnotations" = type <{ i8, i8, i8, i8, i8, i8, [2 x i8], %"class.base::TimeDelta", i32, [4 x i8] }>
%"struct.history::Cluster" = type { %"class.std::__1::vector.114", %"class.std::__1::vector.121" }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::basic_string.4"* }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"struct.history::AnnotatedVisit"*, %"struct.history::AnnotatedVisit"*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.history::AnnotatedVisit"* }
%"class.std::__1::__tree_node.131" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.132" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.132" = type { %"struct.std::__1::pair.40" }
%"struct.std::__1::pair.40" = type { %class.GURL, %"class.base::StackVector" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<unsigned long, 4>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.43" }
%"struct.base::StackAllocator<unsigned long, 4>::Source" = type { [32 x i8], i8, [7 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<unsigned long, 4>::Source"* }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { i64*, i64*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64* }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.base::StackAllocator" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %class.GURL* }
%"class.std::__1::tuple.145" = type { i8 }
%"class.std::__1::__tree_node.133" = type { %"class.std::__1::__tree_node_base.base", %class.GURL }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.129" }
%"struct.std::__1::pair.129" = type { %class.GURL, %"struct.std::__1::pair.130" }
%"struct.std::__1::pair.130" = type { i32, %"class.base::Time" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorIN7history14AnnotatedVisitENS_9allocatorIS2_EEEC2ERKS5_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4absl17optional_internal13optional_dataINSt3__13setI4GURLNS2_4lessIS4_EENS2_9allocatorIS4_EEEELb0EEaSEOSA_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16__treeINS_12__value_typeI4GURLNS_4pairIiN4base4TimeEEEEENS_19__map_value_compareIS2_S7_NS_4lessIS2_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE = comdat any

$_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE25__emplace_unique_key_argsIS1_JRKS1_EEENS_4pairINS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorImN4base14StackAllocatorImLm4EEEE21__push_back_slow_pathIRKmEEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS2_JRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorImN4base14StackAllocatorImLm4EEEE6assignINS_11__wrap_iterIPKmEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorIN7history8VisitRowENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE30__emplace_hint_unique_key_argsIS1_JRKS1_EEENS_4pairINS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEbEENS_21__tree_const_iteratorIS1_SF_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE12__find_equalIS1_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS1_PNS_11__tree_nodeIS1_S9_EElEERPNS_15__tree_end_nodeISB_EESC_RKT_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN7history8VisitRowC1Ev = hidden unnamed_addr alias void (%"class.history::VisitRow"*), void (%"class.history::VisitRow"*)* @_ZN7history8VisitRowC2Ev
@_ZN7history8VisitRowC1ElN4base4TimeElN2ui14PageTransitionElbb = hidden unnamed_addr alias void (%"class.history::VisitRow"*, i64, i64, i64, i32, i64, i1, i1), void (%"class.history::VisitRow"*, i64, i64, i64, i32, i64, i1, i1)* @_ZN7history8VisitRowC2ElN4base4TimeElN2ui14PageTransitionElbb
@_ZN7history8VisitRowD1Ev = hidden unnamed_addr alias void (%"class.history::VisitRow"*), void (%"class.history::VisitRow"*)* @_ZN7history8VisitRowD2Ev
@_ZN7history12QueryResultsC1Ev = hidden unnamed_addr alias void (%"class.history::QueryResults"*), void (%"class.history::QueryResults"*)* @_ZN7history12QueryResultsC2Ev
@_ZN7history12QueryResultsD1Ev = hidden unnamed_addr alias void (%"class.history::QueryResults"*), void (%"class.history::QueryResults"*)* @_ZN7history12QueryResultsD2Ev
@_ZN7history12QueryResultsC1EOS0_ = hidden unnamed_addr alias void (%"class.history::QueryResults"*, %"class.history::QueryResults"*), void (%"class.history::QueryResults"*, %"class.history::QueryResults"*)* @_ZN7history12QueryResultsC2EOS0_
@_ZN7history12QueryOptionsC1Ev = hidden unnamed_addr alias void (%"struct.history::QueryOptions"*), void (%"struct.history::QueryOptions"*)* @_ZN7history12QueryOptionsC2Ev
@_ZN7history14QueryURLResultC1Ev = hidden unnamed_addr alias void (%"struct.history::QueryURLResult"*), void (%"struct.history::QueryURLResult"*)* @_ZN7history14QueryURLResultC2Ev
@_ZN7history14QueryURLResultD1Ev = hidden unnamed_addr alias void (%"struct.history::QueryURLResult"*), void (%"struct.history::QueryURLResult"*)* @_ZN7history14QueryURLResultD2Ev
@_ZN7history14QueryURLResultC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::QueryURLResult"*, %"struct.history::QueryURLResult"*), void (%"struct.history::QueryURLResult"*, %"struct.history::QueryURLResult"*)* @_ZN7history14QueryURLResultC2ERKS0_
@_ZN7history14QueryURLResultC1EOS0_ = hidden unnamed_addr alias void (%"struct.history::QueryURLResult"*, %"struct.history::QueryURLResult"*), void (%"struct.history::QueryURLResult"*, %"struct.history::QueryURLResult"*)* @_ZN7history14QueryURLResultC2EOS0_
@_ZN7history14MostVisitedURLC1Ev = hidden unnamed_addr alias void (%"struct.history::MostVisitedURL"*), void (%"struct.history::MostVisitedURL"*)* @_ZN7history14MostVisitedURLC2Ev
@_ZN7history14MostVisitedURLC1ERK4GURLRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE = hidden unnamed_addr alias void (%"struct.history::MostVisitedURL"*, %class.GURL*, %"class.std::__1::basic_string.4"*), void (%"struct.history::MostVisitedURL"*, %class.GURL*, %"class.std::__1::basic_string.4"*)* @_ZN7history14MostVisitedURLC2ERK4GURLRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE
@_ZN7history14MostVisitedURLC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"*), void (%"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"*)* @_ZN7history14MostVisitedURLC2ERKS0_
@_ZN7history14MostVisitedURLC1EOS0_ = hidden unnamed_addr alias void (%"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"*), void (%"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"*)* @_ZN7history14MostVisitedURLC2EOS0_
@_ZN7history14MostVisitedURLD1Ev = hidden unnamed_addr alias void (%"struct.history::MostVisitedURL"*), void (%"struct.history::MostVisitedURL"*)* @_ZN7history14MostVisitedURLD2Ev
@_ZN7history11FilteredURLC1Ev = hidden unnamed_addr alias void (%"struct.history::FilteredURL"*), void (%"struct.history::FilteredURL"*)* @_ZN7history11FilteredURLC2Ev
@_ZN7history11FilteredURLC1ERKNS_13PageUsageDataE = hidden unnamed_addr alias void (%"struct.history::FilteredURL"*, %"class.history::PageUsageData"*), void (%"struct.history::FilteredURL"*, %"class.history::PageUsageData"*)* @_ZN7history11FilteredURLC2ERKNS_13PageUsageDataE
@_ZN7history11FilteredURLC1EOS0_ = hidden unnamed_addr alias void (%"struct.history::FilteredURL"*, %"struct.history::FilteredURL"*), void (%"struct.history::FilteredURL"*, %"struct.history::FilteredURL"*)* @_ZN7history11FilteredURLC2EOS0_
@_ZN7history11FilteredURLD1Ev = hidden unnamed_addr alias void (%"struct.history::FilteredURL"*), void (%"struct.history::FilteredURL"*)* @_ZN7history11FilteredURLD2Ev
@_ZN7history11FilteredURL12ExtendedInfoC1Ev = hidden unnamed_addr alias void (%"struct.history::FilteredURL::ExtendedInfo"*), void (%"struct.history::FilteredURL::ExtendedInfo"*)* @_ZN7history11FilteredURL12ExtendedInfoC2Ev
@_ZN7history13TopSitesDeltaC1Ev = hidden unnamed_addr alias void (%"struct.history::TopSitesDelta"*), void (%"struct.history::TopSitesDelta"*)* @_ZN7history13TopSitesDeltaC2Ev
@_ZN7history13TopSitesDeltaC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::TopSitesDelta"*, %"struct.history::TopSitesDelta"*), void (%"struct.history::TopSitesDelta"*, %"struct.history::TopSitesDelta"*)* @_ZN7history13TopSitesDeltaC2ERKS0_
@_ZN7history13TopSitesDeltaD1Ev = hidden unnamed_addr alias void (%"struct.history::TopSitesDelta"*), void (%"struct.history::TopSitesDelta"*)* @_ZN7history13TopSitesDeltaD2Ev
@_ZN7history18HistoryAddPageArgsC1Ev = hidden unnamed_addr alias void (%"struct.history::HistoryAddPageArgs"*), void (%"struct.history::HistoryAddPageArgs"*)* @_ZN7history18HistoryAddPageArgsC2Ev
@_ZN7history18HistoryAddPageArgsC1ERK4GURLN4base4TimeEPNS_7ContextEiS3_RKNSt3__16vectorIS1_NS8_9allocatorIS1_EEEEN2ui14PageTransitionEbNS_11VisitSourceEbbbN4absl8optionalINS8_12basic_stringIDsNS8_11char_traitsIDsEENSA_IDsEEEEEE = hidden unnamed_addr alias void (%"struct.history::HistoryAddPageArgs"*, %class.GURL*, i64, %"struct.history::Context"*, i32, %class.GURL*, %"class.std::__1::vector.81"*, i32, i1, i32, i1, i1, i1, %"class.absl::optional"*), void (%"struct.history::HistoryAddPageArgs"*, %class.GURL*, i64, %"struct.history::Context"*, i32, %class.GURL*, %"class.std::__1::vector.81"*, i32, i1, i32, i1, i1, i1, %"class.absl::optional"*)* @_ZN7history18HistoryAddPageArgsC2ERK4GURLN4base4TimeEPNS_7ContextEiS3_RKNSt3__16vectorIS1_NS8_9allocatorIS1_EEEEN2ui14PageTransitionEbNS_11VisitSourceEbbbN4absl8optionalINS8_12basic_stringIDsNS8_11char_traitsIDsEENSA_IDsEEEEEE
@_ZN7history18HistoryAddPageArgsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::HistoryAddPageArgs"*, %"struct.history::HistoryAddPageArgs"*), void (%"struct.history::HistoryAddPageArgs"*, %"struct.history::HistoryAddPageArgs"*)* @_ZN7history18HistoryAddPageArgsC2ERKS0_
@_ZN7history18HistoryAddPageArgsD1Ev = hidden unnamed_addr alias void (%"struct.history::HistoryAddPageArgs"*), void (%"struct.history::HistoryAddPageArgs"*)* @_ZN7history18HistoryAddPageArgsD2Ev
@_ZN7history15DomainMetricSetC1Ev = hidden unnamed_addr alias void (%"struct.history::DomainMetricSet"*), void (%"struct.history::DomainMetricSet"*)* @_ZN7history15DomainMetricSetC2Ev
@_ZN7history15DomainMetricSetC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::DomainMetricSet"*, %"struct.history::DomainMetricSet"*), void (%"struct.history::DomainMetricSet"*, %"struct.history::DomainMetricSet"*)* @_ZN7history15DomainMetricSetC2ERKS0_
@_ZN7history15DomainMetricSetD1Ev = hidden unnamed_addr alias void (%"struct.history::DomainMetricSet"*), void (%"struct.history::DomainMetricSet"*)* @_ZN7history15DomainMetricSetD2Ev
@_ZN7history17ExpireHistoryArgsC1Ev = hidden unnamed_addr alias void (%"struct.history::ExpireHistoryArgs"*), void (%"struct.history::ExpireHistoryArgs"*)* @_ZN7history17ExpireHistoryArgsC2Ev
@_ZN7history17ExpireHistoryArgsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::ExpireHistoryArgs"*, %"struct.history::ExpireHistoryArgs"*), void (%"struct.history::ExpireHistoryArgs"*, %"struct.history::ExpireHistoryArgs"*)* @_ZN7history17ExpireHistoryArgsC2ERKS0_
@_ZN7history17ExpireHistoryArgsD1Ev = hidden unnamed_addr alias void (%"struct.history::ExpireHistoryArgs"*), void (%"struct.history::ExpireHistoryArgs"*)* @_ZN7history17ExpireHistoryArgsD2Ev
@_ZN7history12DeletionInfoC1ERKNS_17DeletionTimeRangeEbNSt3__16vectorINS_6URLRowENS4_9allocatorIS6_EEEENS4_3setI4GURLNS4_4lessISB_EENS7_ISB_EEEEN4absl8optionalISF_EE = hidden unnamed_addr alias void (%"class.history::DeletionInfo"*, %"class.history::DeletionTimeRange"*, i1, %"class.std::__1::vector.93"*, %"class.std::__1::set"*, %"class.absl::optional.100"*), void (%"class.history::DeletionInfo"*, %"class.history::DeletionTimeRange"*, i1, %"class.std::__1::vector.93"*, %"class.std::__1::set"*, %"class.absl::optional.100"*)* @_ZN7history12DeletionInfoC2ERKNS_17DeletionTimeRangeEbNSt3__16vectorINS_6URLRowENS4_9allocatorIS6_EEEENS4_3setI4GURLNS4_4lessISB_EENS7_ISB_EEEEN4absl8optionalISF_EE
@_ZN7history12DeletionInfoD1Ev = hidden unnamed_addr alias void (%"class.history::DeletionInfo"*), void (%"class.history::DeletionInfo"*)* @_ZN7history12DeletionInfoD2Ev
@_ZN7history12DeletionInfoC1EOS0_ = hidden unnamed_addr alias void (%"class.history::DeletionInfo"*, %"class.history::DeletionInfo"*), void (%"class.history::DeletionInfo"*, %"class.history::DeletionInfo"*)* @_ZN7history12DeletionInfoC2EOS0_
@_ZN7history14AnnotatedVisitC1Ev = hidden unnamed_addr alias void (%"struct.history::AnnotatedVisit"*), void (%"struct.history::AnnotatedVisit"*)* @_ZN7history14AnnotatedVisitC2Ev
@_ZN7history14AnnotatedVisitC1ENS_6URLRowENS_8VisitRowENS_23VisitContextAnnotationsENS_23VisitContentAnnotationsE = hidden unnamed_addr alias void (%"struct.history::AnnotatedVisit"*, %"class.history::URLRow"*, %"class.history::VisitRow"*, %"struct.history::VisitContextAnnotations"*, %"struct.history::VisitContentAnnotations"*), void (%"struct.history::AnnotatedVisit"*, %"class.history::URLRow"*, %"class.history::VisitRow"*, %"struct.history::VisitContextAnnotations"*, %"struct.history::VisitContentAnnotations"*)* @_ZN7history14AnnotatedVisitC2ENS_6URLRowENS_8VisitRowENS_23VisitContextAnnotationsENS_23VisitContentAnnotationsE
@_ZN7history14AnnotatedVisitC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::AnnotatedVisit"*, %"struct.history::AnnotatedVisit"*), void (%"struct.history::AnnotatedVisit"*, %"struct.history::AnnotatedVisit"*)* @_ZN7history14AnnotatedVisitC2ERKS0_
@_ZN7history14AnnotatedVisitD1Ev = hidden unnamed_addr alias void (%"struct.history::AnnotatedVisit"*), void (%"struct.history::AnnotatedVisit"*)* @_ZN7history14AnnotatedVisitD2Ev
@_ZN7history7ClusterC1Ev = hidden unnamed_addr alias void (%"struct.history::Cluster"*), void (%"struct.history::Cluster"*)* @_ZN7history7ClusterC2Ev
@_ZN7history7ClusterC1ERKS0_ = hidden unnamed_addr alias void (%"struct.history::Cluster"*, %"struct.history::Cluster"*), void (%"struct.history::Cluster"*, %"struct.history::Cluster"*)* @_ZN7history7ClusterC2ERKS0_
@_ZN7history7ClusterD1Ev = hidden unnamed_addr alias void (%"struct.history::Cluster"*), void (%"struct.history::Cluster"*)* @_ZN7history7ClusterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history8VisitRowC2Ev(%"class.history::VisitRow"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %0, i64 0, i32 6
  %3 = bitcast %"class.history::VisitRow"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 36, i1 false)
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history8VisitRowC2ElN4base4TimeElN2ui14PageTransitionElbb(%"class.history::VisitRow"* nocapture, i64, i64, i64, i32, i64, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %9 = zext i1 %6 to i8
  %10 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %0, i64 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %0, i64 0, i32 1
  store i64 %1, i64* %11, align 8
  %12 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %0, i64 0, i32 3
  store i64 %3, i64* %13, align 8
  %14 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %0, i64 0, i32 4
  store i32 %4, i32* %14, align 8
  %15 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %0, i64 0, i32 6
  store i64 %5, i64* %15, align 8
  %16 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %0, i64 0, i32 7, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %0, i64 0, i32 8
  store i8 %9, i8* %17, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7history8VisitRowD2Ev(%"class.history::VisitRow"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12QueryResultsC2Ev(%"class.history::QueryResults"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #14
  %5 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12QueryResultsD2Ev(%"class.history::QueryResults"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0
  %3 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.131"**
  %5 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node.131"* %5) #14
  %6 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.history::URLResult"*, %"class.history::URLResult"** %7, align 8
  %9 = icmp eq %"class.history::URLResult"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.history::URLResult"* %8 to i8*
  %12 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load %"class.history::URLResult"*, %"class.history::URLResult"** %12, align 8
  %14 = icmp eq %"class.history::URLResult"* %13, %8
  br i1 %14, label %25, label %15

15:                                               ; preds = %10, %15
  %16 = phi %"class.history::URLResult"* [ %17, %15 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %16, i64 -1
  %18 = bitcast %"class.history::URLResult"* %17 to void (%"class.history::URLResult"*)***
  %19 = load void (%"class.history::URLResult"*)**, void (%"class.history::URLResult"*)*** %18, align 8
  %20 = load void (%"class.history::URLResult"*)*, void (%"class.history::URLResult"*)** %19, align 8
  tail call void %20(%"class.history::URLResult"* %17) #14
  %21 = icmp eq %"class.history::URLResult"* %17, %8
  br i1 %21, label %22, label %15

22:                                               ; preds = %15
  %23 = bitcast %"class.std::__1::vector"* %6 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %10
  %26 = phi i8* [ %24, %22 ], [ %11, %10 ]
  store %"class.history::URLResult"* %8, %"class.history::URLResult"** %12, align 8
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12QueryResultsC2EOS0_(%"class.history::QueryResults"*, %"class.history::QueryResults"* dereferenceable(56)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #14
  %6 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 0
  %12 = load i8, i8* %11, align 1, !range !2
  store i8 %12, i8* %3, align 1
  store i8 0, i8* %11, align 1
  %13 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 1
  %14 = bitcast %"class.std::__1::vector"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %13 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 %15, i64* %16, align 8
  %18 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 1, i32 0, i32 1
  %20 = bitcast %"class.history::URLResult"** %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.history::URLResult"** %19 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %20, align 8
  store i64 %21, i64* %22, align 8
  %24 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.history::URLResult"** %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.history::URLResult"** %25 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  store i64 %27, i64* %28, align 8
  %30 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 2
  %31 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %30, i64 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::map"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::map"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %8 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::__tree_end_node"* %36 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  %41 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %42 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %43 = load i64, i64* %41, align 8
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %41, align 8
  store i64 %43, i64* %42, align 8
  %45 = load i64, i64* %41, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 2
  br label %51

51:                                               ; preds = %2, %47
  %52 = phi %"class.std::__1::__tree_end_node"** [ %50, %47 ], [ %9, %2 ]
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %52, align 8
  %53 = load i64, i64* %42, align 8
  %54 = icmp eq i64 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 2
  %58 = select i1 %54, %"class.std::__1::__tree_end_node"** %31, %"class.std::__1::__tree_end_node"** %57
  store %"class.std::__1::__tree_end_node"* %36, %"class.std::__1::__tree_end_node"** %58, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7history12QueryResults4SwapEPS0_(%"class.history::QueryResults"*, %"class.history::QueryResults"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 0
  %5 = load i8, i8* %3, align 1, !range !2
  %6 = load i8, i8* %4, align 1, !range !2
  store i8 %6, i8* %3, align 1
  store i8 %5, i8* %4, align 1
  %7 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 1
  %9 = bitcast %"class.std::__1::vector"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 %10, i64* %11, align 8
  %13 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.history::URLResult"** %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.history::URLResult"** %14 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.history::URLResult"** %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.history::URLResult"** %20 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 8
  %25 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2
  %26 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::map"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::map"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  %32 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %34 = bitcast %"class.std::__1::__tree_end_node"* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::__tree_end_node"* %33 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %34, align 8
  store i64 %35, i64* %36, align 8
  %38 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %39 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %38, align 8
  %41 = load i64, i64* %39, align 8
  store i64 %41, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %42 = load i64, i64* %38, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %2
  %45 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %25, i64 0, i32 0, i32 0
  br label %50

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 2
  br label %50

50:                                               ; preds = %46, %44
  %51 = phi %"class.std::__1::__tree_end_node"** [ %49, %46 ], [ %45, %44 ]
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %51, align 8
  %52 = load i64, i64* %39, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 2
  br label %58

58:                                               ; preds = %50, %54
  %59 = phi %"class.std::__1::__tree_end_node"** [ %57, %54 ], [ %27, %50 ]
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %59, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(56) %"class.history::QueryResults"* @_ZN7history12QueryResultsaSEOS0_(%"class.history::QueryResults"* returned, %"class.history::QueryResults"* dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 0
  %5 = load i8, i8* %3, align 1, !range !2
  %6 = load i8, i8* %4, align 1, !range !2
  store i8 %6, i8* %3, align 1
  store i8 %5, i8* %4, align 1
  %7 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 1
  %9 = bitcast %"class.std::__1::vector"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 %10, i64* %11, align 8
  %13 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.history::URLResult"** %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.history::URLResult"** %14 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.history::URLResult"** %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.history::URLResult"** %20 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 8
  %25 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2
  %26 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::map"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::map"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  %32 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %34 = bitcast %"class.std::__1::__tree_end_node"* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::__tree_end_node"* %33 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %34, align 8
  store i64 %35, i64* %36, align 8
  %38 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %39 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %38, align 8
  %41 = load i64, i64* %39, align 8
  store i64 %41, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %42 = load i64, i64* %38, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %2
  %45 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %25, i64 0, i32 0, i32 0
  br label %50

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 2
  br label %50

50:                                               ; preds = %46, %44
  %51 = phi %"class.std::__1::__tree_end_node"** [ %49, %46 ], [ %45, %44 ]
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %51, align 8
  %52 = load i64, i64* %39, align 8
  %53 = icmp eq i64 %52, 0
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 2
  %57 = select i1 %53, %"class.std::__1::__tree_end_node"** %27, %"class.std::__1::__tree_end_node"** %56
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %57, align 8
  ret %"class.history::QueryResults"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK7history12QueryResults13MatchesForURLERK4GURLPm(%"class.history::QueryResults"*, %class.GURL* dereferenceable(120), i64*) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.131"**
  %6 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.131"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %18, %8 ], [ %4, %3 ]
  %10 = phi %"class.std::__1::__tree_node.131"* [ %19, %8 ], [ %6, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %11, %class.GURL* dereferenceable(120) %1) #14
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %10, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node.131"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %10, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node.131"* %10 to %"class.std::__1::__tree_node.131"**
  %17 = select i1 %12, %"class.std::__1::__tree_node.131"** %14, %"class.std::__1::__tree_node.131"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node.131"* %19, null
  br i1 %20, label %21, label %8

21:                                               ; preds = %8
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %4
  br i1 %22, label %27, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %class.GURL*
  %26 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %1, %class.GURL* dereferenceable(120) %25) #14
  br i1 %26, label %27, label %30

27:                                               ; preds = %3, %21, %23
  %28 = icmp eq i64* %2, null
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  store i64 0, i64* %2, align 8
  br label %45

30:                                               ; preds = %23
  %31 = icmp eq i64* %2, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 25
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 26
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::__tree_end_node"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  store i64 %40, i64* %2, align 8
  br label %41

41:                                               ; preds = %30, %32
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 25
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to i64**
  %44 = load i64*, i64** %43, align 8
  br label %45

45:                                               ; preds = %27, %29, %41
  %46 = phi i64* [ %44, %41 ], [ null, %29 ], [ null, %27 ]
  ret i64* %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12QueryResults13SetURLResultsEONSt3__16vectorINS_9URLResultENS1_9allocatorIS3_EEEE(%"class.history::QueryResults"*, %"class.std::__1::vector"* nocapture dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.history::URLResult"*, %"class.history::URLResult"** %4, align 8
  %6 = icmp eq %"class.history::URLResult"* %5, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.history::URLResult"* %5 to i8*
  %9 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.history::URLResult"*, %"class.history::URLResult"** %9, align 8
  %11 = icmp eq %"class.history::URLResult"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.history::URLResult"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %13, i64 -1
  %15 = bitcast %"class.history::URLResult"* %14 to void (%"class.history::URLResult"*)***
  %16 = load void (%"class.history::URLResult"*)**, void (%"class.history::URLResult"*)*** %15, align 8
  %17 = load void (%"class.history::URLResult"*)*, void (%"class.history::URLResult"*)** %16, align 8
  tail call void %17(%"class.history::URLResult"* %14) #14
  %18 = icmp eq %"class.history::URLResult"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.history::URLResult"* %5, %"class.history::URLResult"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #15
  %24 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #14
  br label %25

25:                                               ; preds = %2, %22
  %26 = bitcast %"class.std::__1::vector"* %1 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector"* %3 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %30 = bitcast %"class.history::URLResult"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 1
  %33 = bitcast %"class.history::URLResult"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.history::URLResult"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.history::URLResult"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #14
  %40 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %40, i64 0, i32 0
  %42 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node.131"**
  %44 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %43, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %41, %"class.std::__1::__tree_node.131"* %44) #14
  %45 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %40, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %47, align 8
  %48 = load i64, i64* %33, align 8
  %49 = load i64, i64* %28, align 8
  %50 = icmp eq i64 %48, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %52, %25
  ret void

52:                                               ; preds = %25, %52
  %53 = phi i64 [ %59, %52 ], [ %49, %25 ]
  %54 = phi i64 [ %57, %52 ], [ 0, %25 ]
  %55 = inttoptr i64 %53 to %"class.history::URLResult"*
  %56 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %55, i64 %54, i32 0, i32 2
  tail call void @_ZN7history12QueryResults18AddURLUsageAtIndexERK4GURLm(%"class.history::QueryResults"* %0, %class.GURL* dereferenceable(120) %56, i64 %54)
  %57 = add nuw i64 %54, 1
  %58 = load i64, i64* %33, align 8
  %59 = load i64, i64* %28, align 8
  %60 = sub i64 %58, %59
  %61 = sdiv exact i64 %60, 320
  %62 = icmp ult i64 %57, %61
  br i1 %62, label %52, label %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12QueryResults18AddURLUsageAtIndexERK4GURLm(%"class.history::QueryResults"*, %class.GURL* dereferenceable(120), i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.145", align 1
  %6 = alloca i64, align 8
  %7 = alloca %"class.base::StackVector", align 8
  store i64 %2, i64* %6, align 8
  %8 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.131"**
  %10 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.131"* %10, null
  br i1 %11, label %46, label %12

12:                                               ; preds = %3, %12
  %13 = phi %"class.std::__1::__tree_end_node"* [ %22, %12 ], [ %8, %3 ]
  %14 = phi %"class.std::__1::__tree_node.131"* [ %23, %12 ], [ %10, %3 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %15, %class.GURL* dereferenceable(120) %1) #14
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %14, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::__tree_node_base"** %17 to %"class.std::__1::__tree_node.131"**
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %14, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node.131"* %14 to %"class.std::__1::__tree_node.131"**
  %21 = select i1 %16, %"class.std::__1::__tree_node.131"** %18, %"class.std::__1::__tree_node.131"** %20
  %22 = select i1 %16, %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"* %19
  %23 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %21, align 8
  %24 = icmp eq %"class.std::__1::__tree_node.131"* %23, null
  br i1 %24, label %25, label %12

25:                                               ; preds = %12
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %22, %8
  br i1 %26, label %46, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %class.GURL*
  %30 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %1, %class.GURL* dereferenceable(120) %29) #14
  br i1 %30, label %46, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 26
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to i64**
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 27
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to i64**
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %34, %37
  br i1 %38, label %43, label %39

39:                                               ; preds = %31
  store i64 %2, i64* %34, align 8
  %40 = getelementptr inbounds i64, i64* %34, i64 1
  %41 = ptrtoint i64* %40 to i64
  %42 = bitcast %"class.std::__1::__tree_end_node"* %32 to i64*
  store i64 %41, i64* %42, align 8
  br label %91

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 25
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::vector.43"*
  call void @_ZNSt3__16vectorImN4base14StackAllocatorImLm4EEEE21__push_back_slow_pathIRKmEEvOT_(%"class.std::__1::vector.43"* %45, i64* nonnull dereferenceable(8) %6) #14
  br label %91

46:                                               ; preds = %27, %25, %3
  %47 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %47) #14
  %48 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 0, i32 0, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 32, i1 false)
  %49 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<unsigned long, 4>::Source"* %49, %"struct.base::StackAllocator<unsigned long, 4>::Source"** %51, align 8
  %52 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 2
  %53 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1
  %54 = ptrtoint %"class.base::StackVector"* %7 to i64
  %55 = bitcast %"struct.std::__1::__compressed_pair_elem.47"* %53 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast i64** %56 to i64*
  %58 = bitcast %"class.std::__1::vector.43"* %52 to i64*
  %59 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 2, i32 0, i32 1
  %60 = bitcast i64** %59 to i64*
  store i8 1, i8* %50, align 8
  %61 = ptrtoint i8* %50 to i64
  store i64 %54, i64* %58, align 8
  store i64 %61, i64* %57, align 8
  %62 = bitcast %"class.base::StackVector"* %7 to i64*
  store i64 %2, i64* %62, align 8
  %63 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 0, i32 0, i64 8
  %64 = ptrtoint i8* %63 to i64
  store i64 %64, i64* %60, align 8
  %65 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0
  %66 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14
  %67 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %class.GURL* %1, %class.GURL** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::tuple.145", %"class.std::__1::tuple.145"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %68) #14
  %69 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS2_JRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %65, %class.GURL* dereferenceable(120) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.145"* nonnull dereferenceable(1) %5) #14
  %70 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %69, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %68) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 25
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::vector.43"*
  %73 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = load i64*, i64** %59, align 8
  call void @_ZNSt3__16vectorImN4base14StackAllocatorImLm4EEEE6assignINS_11__wrap_iterIPKmEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.43"* %72, i64* %74, i64* %75) #14
  %76 = load i64*, i64** %73, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %90, label %78

78:                                               ; preds = %46
  %79 = ptrtoint i64* %76 to i64
  store i64 %79, i64* %60, align 8
  %80 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %7, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %81 = load %"struct.base::StackAllocator<unsigned long, 4>::Source"*, %"struct.base::StackAllocator<unsigned long, 4>::Source"** %80, align 8
  %82 = icmp ne %"struct.base::StackAllocator<unsigned long, 4>::Source"* %81, null
  %83 = bitcast %"struct.base::StackAllocator<unsigned long, 4>::Source"* %81 to i64*
  %84 = icmp eq i64* %76, %83
  %85 = and i1 %82, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.base::StackAllocator<unsigned long, 4>::Source", %"struct.base::StackAllocator<unsigned long, 4>::Source"* %81, i64 0, i32 1
  store i8 0, i8* %87, align 8
  br label %90

88:                                               ; preds = %78
  %89 = bitcast i64* %76 to i8*
  call void @_ZdlPv(i8* %89) #15
  br label %90

90:                                               ; preds = %46, %86, %88
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %47) #14
  br label %91

91:                                               ; preds = %43, %39, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12QueryResults9DeleteURLERK4GURL(%"class.history::QueryResults"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.131"**
  %5 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.131"* %5, null
  br i1 %6, label %38, label %7

7:                                                ; preds = %2, %20
  %8 = phi %"class.std::__1::__tree_end_node"* [ %21, %20 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node.131"* [ %22, %20 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %10, %class.GURL* dereferenceable(120) %1) #14
  %12 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %9, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::__tree_node_base"** %12 to %"class.std::__1::__tree_node.131"**
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %9, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node.131"* %9 to %"class.std::__1::__tree_node.131"**
  %16 = select i1 %11, %"class.std::__1::__tree_node.131"** %13, %"class.std::__1::__tree_node.131"** %15
  %17 = select i1 %11, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %14
  %18 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %16, align 8
  %19 = icmp eq %"class.std::__1::__tree_node.131"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %7, %34
  %21 = phi %"class.std::__1::__tree_end_node"* [ %17, %7 ], [ %3, %34 ]
  %22 = phi %"class.std::__1::__tree_node.131"* [ %18, %7 ], [ %36, %34 ]
  br label %7

23:                                               ; preds = %7
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %17, %3
  br i1 %24, label %38, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %class.GURL*
  %28 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %1, %class.GURL* dereferenceable(120) %27) #14
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 25
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to i64**
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = load i64, i64* %32, align 8
  tail call void @_ZN7history12QueryResults11DeleteRangeEmm(%"class.history::QueryResults"* %0, i64 %35, i64 %35)
  %36 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %4, align 8
  %37 = icmp eq %"class.std::__1::__tree_node.131"* %36, null
  br i1 %37, label %38, label %20

38:                                               ; preds = %29, %25, %23, %34, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12QueryResults11DeleteRangeEmm(%"class.history::QueryResults"*, i64, i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::set", align 8
  %5 = bitcast %"class.std::__1::set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %6, align 8
  %10 = icmp ugt i64 %1, %2
  %11 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.history::URLResult"*, %"class.history::URLResult"** %11, align 8
  br i1 %10, label %15, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0
  br label %53

15:                                               ; preds = %53, %3
  %16 = phi %"class.history::URLResult"* [ %12, %3 ], [ %60, %53 ]
  %17 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %16, i64 %1
  %18 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %16, i64 %2
  %19 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %18, i64 1
  %20 = icmp eq %"class.history::URLResult"* %17, %19
  br i1 %20, label %46, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = load %"class.history::URLResult"*, %"class.history::URLResult"** %22, align 8
  %24 = icmp eq %"class.history::URLResult"* %23, %19
  br i1 %24, label %34, label %25

25:                                               ; preds = %21, %25
  %26 = phi %"class.history::URLResult"* [ %30, %25 ], [ %17, %21 ]
  %27 = phi %"class.history::URLResult"* [ %29, %25 ], [ %19, %21 ]
  %28 = call dereferenceable(320) %"class.history::URLResult"* @_ZN7history9URLResultaSERKS0_(%"class.history::URLResult"* %26, %"class.history::URLResult"* dereferenceable(320) %27) #14
  %29 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %27, i64 1
  %30 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %26, i64 1
  %31 = icmp eq %"class.history::URLResult"* %29, %23
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = load %"class.history::URLResult"*, %"class.history::URLResult"** %22, align 8
  br label %34

34:                                               ; preds = %32, %21
  %35 = phi %"class.history::URLResult"* [ %19, %21 ], [ %33, %32 ]
  %36 = phi %"class.history::URLResult"* [ %17, %21 ], [ %30, %32 ]
  %37 = icmp eq %"class.history::URLResult"* %35, %36
  br i1 %37, label %45, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"class.history::URLResult"* [ %40, %38 ], [ %35, %34 ]
  %40 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %39, i64 -1
  %41 = bitcast %"class.history::URLResult"* %40 to void (%"class.history::URLResult"*)***
  %42 = load void (%"class.history::URLResult"*)**, void (%"class.history::URLResult"*)*** %41, align 8
  %43 = load void (%"class.history::URLResult"*)*, void (%"class.history::URLResult"*)** %42, align 8
  call void %43(%"class.history::URLResult"* %40) #14
  %44 = icmp eq %"class.history::URLResult"* %40, %36
  br i1 %44, label %45, label %38

45:                                               ; preds = %38, %34
  store %"class.history::URLResult"* %36, %"class.history::URLResult"** %22, align 8
  br label %46

46:                                               ; preds = %15, %45
  %47 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %48 = icmp eq %"class.std::__1::__tree_end_node"* %47, %8
  br i1 %48, label %61, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node.131"**
  %52 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0
  br label %132

53:                                               ; preds = %13, %53
  %54 = phi %"class.history::URLResult"* [ %12, %13 ], [ %60, %53 ]
  %55 = phi i64 [ %1, %13 ], [ %58, %53 ]
  %56 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %54, i64 %55, i32 0, i32 2
  %57 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE25__emplace_unique_key_argsIS1_JRKS1_EEENS_4pairINS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.48"* nonnull %14, %class.GURL* dereferenceable(120) %56, %class.GURL* dereferenceable(120) %56) #14
  %58 = add i64 %55, 1
  %59 = icmp ugt i64 %58, %2
  %60 = load %"class.history::URLResult"*, %"class.history::URLResult"** %11, align 8
  br i1 %59, label %15, label %53

61:                                               ; preds = %251, %46
  %62 = add i64 %2, 1
  %63 = xor i64 %2, -1
  %64 = add i64 %63, %1
  %65 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %68 = icmp eq %"class.std::__1::__tree_end_node"* %66, %67
  br i1 %68, label %128, label %69

69:                                               ; preds = %61, %106
  %70 = phi %"class.std::__1::__tree_end_node"* [ %107, %106 ], [ %66, %61 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 25
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 26
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::__tree_end_node"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %74, %76
  br i1 %77, label %78, label %109

78:                                               ; preds = %121, %69
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 1, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %82, label %90

82:                                               ; preds = %78
  %83 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node_base"*
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 2
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_end_node"**
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, %83
  br i1 %89, label %106, label %97

90:                                               ; preds = %78, %90
  %91 = phi %"class.std::__1::__tree_node_base"* [ %93, %90 ], [ %80, %78 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 0, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %95, label %90

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 0
  br label %106

97:                                               ; preds = %82, %97
  %98 = phi %"class.std::__1::__tree_end_node"** [ %101, %97 ], [ %85, %82 ]
  %99 = bitcast %"class.std::__1::__tree_end_node"** %98 to %"class.std::__1::__tree_node_base"**
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %100, i64 0, i32 2
  %102 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, %100
  br i1 %105, label %106, label %97

106:                                              ; preds = %97, %95, %82
  %107 = phi %"class.std::__1::__tree_end_node"* [ %96, %95 ], [ %86, %82 ], [ %102, %97 ]
  %108 = icmp eq %"class.std::__1::__tree_end_node"* %107, %67
  br i1 %108, label %128, label %69

109:                                              ; preds = %69, %121
  %110 = phi i64 [ %122, %121 ], [ %76, %69 ]
  %111 = phi i64 [ %123, %121 ], [ %74, %69 ]
  %112 = phi i64 [ %124, %121 ], [ 0, %69 ]
  %113 = inttoptr i64 %110 to i64*
  %114 = getelementptr inbounds i64, i64* %113, i64 %112
  %115 = load i64, i64* %114, align 8
  %116 = icmp ult i64 %115, %62
  br i1 %116, label %121, label %117

117:                                              ; preds = %109
  %118 = add i64 %64, %115
  store i64 %118, i64* %114, align 8
  %119 = load i64, i64* %73, align 8
  %120 = load i64, i64* %75, align 8
  br label %121

121:                                              ; preds = %117, %109
  %122 = phi i64 [ %110, %109 ], [ %120, %117 ]
  %123 = phi i64 [ %111, %109 ], [ %119, %117 ]
  %124 = add nuw i64 %112, 1
  %125 = sub i64 %123, %122
  %126 = ashr exact i64 %125, 3
  %127 = icmp ult i64 %124, %126
  br i1 %127, label %109, label %78

128:                                              ; preds = %106, %61
  %129 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0
  %130 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.133"**
  %131 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %130, align 8
  call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* nonnull %129, %"class.std::__1::__tree_node.133"* %131) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret void

132:                                              ; preds = %49, %251
  %133 = phi %"class.std::__1::__tree_end_node"* [ %47, %49 ], [ %252, %251 ]
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 4
  %135 = bitcast %"class.std::__1::__tree_end_node"* %134 to %class.GURL*
  %136 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %51, align 8
  %137 = icmp eq %"class.std::__1::__tree_node.131"* %136, null
  br i1 %137, label %223, label %138

138:                                              ; preds = %132, %138
  %139 = phi %"class.std::__1::__tree_end_node"* [ %148, %138 ], [ %50, %132 ]
  %140 = phi %"class.std::__1::__tree_node.131"* [ %149, %138 ], [ %136, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %140, i64 0, i32 1, i32 0, i32 0
  %142 = call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %141, %class.GURL* dereferenceable(120) %135) #14
  %143 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %140, i64 0, i32 0, i32 1
  %144 = bitcast %"class.std::__1::__tree_node_base"** %143 to %"class.std::__1::__tree_node.131"**
  %145 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %140, i64 0, i32 0, i32 0
  %146 = bitcast %"class.std::__1::__tree_node.131"* %140 to %"class.std::__1::__tree_node.131"**
  %147 = select i1 %142, %"class.std::__1::__tree_node.131"** %144, %"class.std::__1::__tree_node.131"** %146
  %148 = select i1 %142, %"class.std::__1::__tree_end_node"* %139, %"class.std::__1::__tree_end_node"* %145
  %149 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %147, align 8
  %150 = icmp eq %"class.std::__1::__tree_node.131"* %149, null
  br i1 %150, label %151, label %138

151:                                              ; preds = %138
  %152 = icmp eq %"class.std::__1::__tree_end_node"* %148, %50
  br i1 %152, label %223, label %153

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %148, i64 4
  %155 = bitcast %"class.std::__1::__tree_end_node"* %154 to %class.GURL*
  %156 = call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %135, %class.GURL* dereferenceable(120) %155) #14
  br i1 %156, label %223, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %148, i64 25
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %148, i64 26
  %160 = bitcast %"class.std::__1::__tree_end_node"* %159 to i64**
  %161 = bitcast %"class.std::__1::__tree_end_node"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.std::__1::__tree_end_node"* %158 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = sub i64 %162, %164
  %166 = lshr exact i64 %165, 3
  %167 = trunc i64 %166 to i32
  %168 = icmp sgt i32 %167, 0
  %169 = inttoptr i64 %164 to i64*
  %170 = inttoptr i64 %162 to i64*
  br i1 %168, label %175, label %171

171:                                              ; preds = %208, %157
  %172 = phi i64* [ %170, %157 ], [ %211, %208 ]
  %173 = phi i64* [ %169, %157 ], [ %212, %208 ]
  %174 = icmp eq i64* %173, %172
  br i1 %174, label %221, label %223

175:                                              ; preds = %157, %208
  %176 = phi i64 [ %210, %208 ], [ %164, %157 ]
  %177 = phi i64* [ %211, %208 ], [ %170, %157 ]
  %178 = phi i64* [ %212, %208 ], [ %169, %157 ]
  %179 = phi i64 [ %213, %208 ], [ %164, %157 ]
  %180 = phi i64 [ %214, %208 ], [ %162, %157 ]
  %181 = phi i64* [ %209, %208 ], [ %169, %157 ]
  %182 = phi i32 [ %216, %208 ], [ 0, %157 ]
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i64, i64* %181, i64 %183
  %185 = load i64, i64* %184, align 8
  %186 = icmp ult i64 %185, %1
  %187 = icmp ugt i64 %185, %2
  %188 = or i1 %186, %187
  br i1 %188, label %189, label %191

189:                                              ; preds = %175
  %190 = inttoptr i64 %179 to i64*
  br label %208

191:                                              ; preds = %175
  %192 = getelementptr inbounds i64, i64* %181, i64 %183
  %193 = getelementptr inbounds i64, i64* %192, i64 1
  %194 = ptrtoint i64* %193 to i64
  %195 = sub i64 %180, %194
  %196 = ashr exact i64 %195, 3
  %197 = icmp eq i64 %195, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %191
  %199 = bitcast i64* %192 to i8*
  %200 = bitcast i64* %193 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 %195, i1 false) #14
  %201 = load i64, i64* %163, align 8
  br label %202

202:                                              ; preds = %191, %198
  %203 = phi i64 [ %176, %191 ], [ %201, %198 ]
  %204 = getelementptr inbounds i64, i64* %192, i64 %196
  store i64* %204, i64** %160, align 8
  %205 = add nsw i32 %182, -1
  %206 = ptrtoint i64* %204 to i64
  %207 = inttoptr i64 %203 to i64*
  br label %208

208:                                              ; preds = %189, %202
  %209 = phi i64* [ %190, %189 ], [ %207, %202 ]
  %210 = phi i64 [ %176, %189 ], [ %203, %202 ]
  %211 = phi i64* [ %177, %189 ], [ %204, %202 ]
  %212 = phi i64* [ %178, %189 ], [ %207, %202 ]
  %213 = phi i64 [ %179, %189 ], [ %203, %202 ]
  %214 = phi i64 [ %180, %189 ], [ %206, %202 ]
  %215 = phi i32 [ %182, %189 ], [ %205, %202 ]
  %216 = add nsw i32 %215, 1
  %217 = sub i64 %214, %213
  %218 = lshr exact i64 %217, 3
  %219 = trunc i64 %218 to i32
  %220 = icmp slt i32 %216, %219
  br i1 %220, label %175, label %171

221:                                              ; preds = %171
  %222 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEE(%"class.std::__1::__tree"* %52, %"class.std::__1::__tree_end_node"* %148) #14
  br label %223

223:                                              ; preds = %153, %151, %132, %221, %171
  %224 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 1, i32 0
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node_base"* %225, null
  br i1 %226, label %227, label %235

227:                                              ; preds = %223
  %228 = bitcast %"class.std::__1::__tree_end_node"* %133 to %"class.std::__1::__tree_node_base"*
  %229 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 2
  %230 = bitcast %"class.std::__1::__tree_end_node"* %229 to %"class.std::__1::__tree_end_node"**
  %231 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %232 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %231, i64 0, i32 0
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  %234 = icmp eq %"class.std::__1::__tree_node_base"* %233, %228
  br i1 %234, label %251, label %242

235:                                              ; preds = %223, %235
  %236 = phi %"class.std::__1::__tree_node_base"* [ %238, %235 ], [ %225, %223 ]
  %237 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %236, i64 0, i32 0, i32 0
  %238 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %237, align 8
  %239 = icmp eq %"class.std::__1::__tree_node_base"* %238, null
  br i1 %239, label %240, label %235

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %236, i64 0, i32 0
  br label %251

242:                                              ; preds = %227, %242
  %243 = phi %"class.std::__1::__tree_end_node"** [ %246, %242 ], [ %230, %227 ]
  %244 = bitcast %"class.std::__1::__tree_end_node"** %243 to %"class.std::__1::__tree_node_base"**
  %245 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %246 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %245, i64 0, i32 2
  %247 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %246, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %247, i64 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = icmp eq %"class.std::__1::__tree_node_base"* %249, %245
  br i1 %250, label %251, label %242

251:                                              ; preds = %242, %227, %240
  %252 = phi %"class.std::__1::__tree_end_node"* [ %241, %240 ], [ %231, %227 ], [ %247, %242 ]
  %253 = icmp eq %"class.std::__1::__tree_end_node"* %252, %8
  br i1 %253, label %61, label %132
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12QueryResults15AdjustResultMapEmml(%"class.history::QueryResults"*, i64, i64, i64) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"class.history::QueryResults", %"class.history::QueryResults"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %18, label %9

9:                                                ; preds = %4, %47
  %10 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %6, %4 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 25
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 26
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::__tree_end_node"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %19, label %50

18:                                               ; preds = %47, %4
  ret void

19:                                               ; preds = %64, %9
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 1, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 2
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_end_node"**
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %24
  br i1 %30, label %47, label %38

31:                                               ; preds = %19, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %21, %19 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %23, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %23 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %23, %36
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %23 ], [ %43, %38 ]
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %7
  br i1 %49, label %18, label %9

50:                                               ; preds = %9, %64
  %51 = phi i64 [ %65, %64 ], [ %16, %9 ]
  %52 = phi i64 [ %66, %64 ], [ %14, %9 ]
  %53 = phi i64 [ %67, %64 ], [ 0, %9 ]
  %54 = inttoptr i64 %51 to i64*
  %55 = getelementptr inbounds i64, i64* %54, i64 %53
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %56, %1
  %58 = icmp ugt i64 %56, %2
  %59 = or i1 %57, %58
  br i1 %59, label %64, label %60

60:                                               ; preds = %50
  %61 = add i64 %56, %3
  store i64 %61, i64* %55, align 8
  %62 = load i64, i64* %13, align 8
  %63 = load i64, i64* %15, align 8
  br label %64

64:                                               ; preds = %50, %60
  %65 = phi i64 [ %51, %50 ], [ %63, %60 ]
  %66 = phi i64 [ %52, %50 ], [ %62, %60 ]
  %67 = add nuw i64 %53, 1
  %68 = sub i64 %66, %65
  %69 = ashr exact i64 %68, 3
  %70 = icmp ult i64 %67, %69
  br i1 %70, label %50, label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history12QueryOptionsC2Ev(%"struct.history::QueryOptions"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.history::QueryOptions"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12QueryOptions17SetRecentDayRangeEi(%"struct.history::QueryOptions"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = tail call i64 @_ZN4base4Time3NowEv() #14
  %5 = getelementptr inbounds %"struct.history::QueryOptions", %"struct.history::QueryOptions"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = icmp eq i32 %1, 2147483647
  %7 = sext i32 %1 to i64
  %8 = mul nsw i64 %7, 86400000000
  %9 = select i1 %6, i64 9223372036854775807, i64 %8
  %10 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %4, i64* %11, align 8
  %12 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  %13 = getelementptr inbounds %"struct.history::QueryOptions", %"struct.history::QueryOptions"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  ret void
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7history12QueryOptions18EffectiveBeginTimeEv(%"struct.history::QueryOptions"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.history::QueryOptions", %"struct.history::QueryOptions"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7history12QueryOptions16EffectiveEndTimeEv(%"struct.history::QueryOptions"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.history::QueryOptions", %"struct.history::QueryOptions"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %5 = select i1 %4, i64 9223372036854775807, i64 %3
  ret i64 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7history12QueryOptions17EffectiveMaxCountEv(%"struct.history::QueryOptions"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.history::QueryOptions", %"struct.history::QueryOptions"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i32 2147483647, i32 %3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14QueryURLResultC2Ev(%"struct.history::QueryURLResult"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 2
  tail call void @_ZN7history6URLRowC1Ev(%"class.history::URLRow"* %3) #14
  %4 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3
  %5 = bitcast %"class.std::__1::vector.60"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #14
  ret void
}

declare void @_ZN7history6URLRowC1Ev(%"class.history::URLRow"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14QueryURLResultD2Ev(%"struct.history::QueryURLResult"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %2, align 8
  %4 = icmp eq %"class.history::VisitRow"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.history::VisitRow"* %3 to i64
  %7 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.history::VisitRow"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.history::VisitRow"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 2
  tail call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* %11) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14QueryURLResultC2ERKS0_(%"struct.history::QueryURLResult"*, %"struct.history::QueryURLResult"* dereferenceable(216)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 2
  tail call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %6, %"class.history::URLRow"* dereferenceable(184) %7) #14
  %8 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector.60"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #14
  %11 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3, i32 0, i32 1
  %12 = bitcast %"class.history::VisitRow"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.60"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 6
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %86, label %19

19:                                               ; preds = %2
  %20 = icmp ugt i64 %17, 288230376151711743
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.60"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #16
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #15
  %25 = bitcast i8* %24 to %"class.history::VisitRow"*
  %26 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3, i32 0, i32 1
  %27 = bitcast %"class.history::VisitRow"** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector.60"* %8 to i8**
  store i8* %24, i8** %28, align 8
  %29 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %25, i64 %17
  %30 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"class.history::VisitRow"* %29, %"class.history::VisitRow"** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %9, i64 0, i32 0, i32 0
  %32 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %31, align 8
  %33 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %11, align 8
  %34 = bitcast %"class.history::VisitRow"** %26 to i64*
  %35 = ptrtoint i8* %24 to i64
  %36 = icmp eq %"class.history::VisitRow"* %32, %33
  br i1 %36, label %84, label %37

37:                                               ; preds = %23
  %38 = ptrtoint %"class.history::VisitRow"* %32 to i64
  %39 = getelementptr %"class.history::VisitRow", %"class.history::VisitRow"* %33, i64 -1, i32 0
  %40 = ptrtoint i64* %39 to i64
  %41 = sub i64 %40, %38
  %42 = lshr i64 %41, 6
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %37, %46
  %47 = phi %"class.history::VisitRow"* [ %53, %46 ], [ %25, %37 ]
  %48 = phi %"class.history::VisitRow"* [ %52, %46 ], [ %32, %37 ]
  %49 = phi i64 [ %54, %46 ], [ %44, %37 ]
  %50 = bitcast %"class.history::VisitRow"* %47 to i8*
  %51 = bitcast %"class.history::VisitRow"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 64, i1 false) #14
  %52 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %48, i64 1
  %53 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %47, i64 1
  %54 = add i64 %49, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %46, !llvm.loop !3

56:                                               ; preds = %46, %37
  %57 = phi %"class.history::VisitRow"* [ undef, %37 ], [ %53, %46 ]
  %58 = phi %"class.history::VisitRow"* [ %25, %37 ], [ %53, %46 ]
  %59 = phi %"class.history::VisitRow"* [ %32, %37 ], [ %52, %46 ]
  %60 = icmp ult i64 %41, 192
  br i1 %60, label %81, label %61

61:                                               ; preds = %56, %61
  %62 = phi %"class.history::VisitRow"* [ %79, %61 ], [ %58, %56 ]
  %63 = phi %"class.history::VisitRow"* [ %78, %61 ], [ %59, %56 ]
  %64 = bitcast %"class.history::VisitRow"* %62 to i8*
  %65 = bitcast %"class.history::VisitRow"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 64, i1 false) #14
  %66 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %63, i64 1
  %67 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %62, i64 1
  %68 = bitcast %"class.history::VisitRow"* %67 to i8*
  %69 = bitcast %"class.history::VisitRow"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 64, i1 false) #14
  %70 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %63, i64 2
  %71 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %62, i64 2
  %72 = bitcast %"class.history::VisitRow"* %71 to i8*
  %73 = bitcast %"class.history::VisitRow"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 64, i1 false) #14
  %74 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %63, i64 3
  %75 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %62, i64 3
  %76 = bitcast %"class.history::VisitRow"* %75 to i8*
  %77 = bitcast %"class.history::VisitRow"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 64, i1 false) #14
  %78 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %63, i64 4
  %79 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %62, i64 4
  %80 = icmp eq %"class.history::VisitRow"* %78, %33
  br i1 %80, label %81, label %61

81:                                               ; preds = %61, %56
  %82 = phi %"class.history::VisitRow"* [ %57, %56 ], [ %79, %61 ]
  %83 = ptrtoint %"class.history::VisitRow"* %82 to i64
  br label %84

84:                                               ; preds = %81, %23
  %85 = phi i64 [ %35, %23 ], [ %83, %81 ]
  store i64 %85, i64* %34, align 8
  br label %86

86:                                               ; preds = %2, %84
  ret void
}

declare void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14QueryURLResultC2EOS0_(%"struct.history::QueryURLResult"*, %"struct.history::QueryURLResult"* dereferenceable(216)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 2
  tail call void @_ZN7history6URLRowC1EOS0_(%"class.history::URLRow"* %6, %"class.history::URLRow"* dereferenceable(184) %7) #14
  %8 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector.60"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #14
  %11 = bitcast %"class.std::__1::vector.60"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.60"* %8 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast %"class.history::VisitRow"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"class.history::VisitRow"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.history::VisitRow"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.history::VisitRow"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.std::__1::vector.60"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7history6URLRowC1EOS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(216) %"struct.history::QueryURLResult"* @_ZN7history14QueryURLResultaSERKS0_(%"struct.history::QueryURLResult"* returned, %"struct.history::QueryURLResult"* dereferenceable(216)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 2
  %8 = tail call dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSERKS0_(%"class.history::URLRow"* %6, %"class.history::URLRow"* dereferenceable(184) %7) #14
  %9 = icmp eq %"struct.history::QueryURLResult"* %0, %1
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %12, align 8
  %14 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3, i32 0, i32 1
  %15 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %14, align 8
  tail call void @_ZNSt3__16vectorIN7history8VisitRowENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.60"* %11, %"class.history::VisitRow"* %13, %"class.history::VisitRow"* %15) #14
  br label %16

16:                                               ; preds = %2, %10
  ret %"struct.history::QueryURLResult"* %0
}

declare dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSERKS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(216) %"struct.history::QueryURLResult"* @_ZN7history14QueryURLResultaSEOS0_(%"struct.history::QueryURLResult"* returned, %"struct.history::QueryURLResult"* dereferenceable(216)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 2
  %8 = tail call dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSEOS0_(%"class.history::URLRow"* %6, %"class.history::URLRow"* dereferenceable(184) %7) #14
  %9 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %9, i64 0, i32 0, i32 0
  %12 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %11, align 8
  %13 = icmp eq %"class.history::VisitRow"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = ptrtoint %"class.history::VisitRow"* %12 to i64
  %16 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = bitcast %"class.history::VisitRow"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.history::VisitRow"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #15
  %19 = bitcast %"class.std::__1::vector.60"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #14
  br label %20

20:                                               ; preds = %2, %14
  %21 = bitcast %"class.std::__1::vector.60"* %10 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.60"* %9 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3, i32 0, i32 1
  %25 = bitcast %"class.history::VisitRow"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3, i32 0, i32 1
  %28 = bitcast %"class.history::VisitRow"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.history::VisitRow"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.history::QueryURLResult", %"struct.history::QueryURLResult"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.history::VisitRow"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.std::__1::vector.60"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #14
  ret %"struct.history::QueryURLResult"* %0
}

; Function Attrs: nounwind
declare dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSEOS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14MostVisitedURLC2Ev(%"struct.history::MostVisitedURL"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #14
  %3 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.4"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #14
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14MostVisitedURLC2ERK4GURLRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"struct.history::MostVisitedURL"*, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string.4"* nocapture readonly dereferenceable(24)) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %4, %class.GURL* dereferenceable(120) %1) #14
  %5 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.4"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  %12 = bitcast %"class.std::__1::basic_string.4"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #14
  br label %188

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string.4"* %5 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string.4"* %5 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #16
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #16
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #15
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.std::__1::basic_string.4"* %5 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !5
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !5
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !8, !noalias !5
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !8, !noalias !5
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !5
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !5
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !8, !noalias !5
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !8, !noalias !5
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !5
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !5
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !8, !noalias !5
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !8, !noalias !5
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !5
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !5
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !8, !noalias !5
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !8, !noalias !5
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !10

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !5
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !5
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !8, !noalias !5
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !8, !noalias !5
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !12

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !13

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !14

188:                                              ; preds = %153, %158, %133, %10
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14MostVisitedURLC2ERKS0_(%"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"* dereferenceable(144)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #14
  %5 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #14
  br label %189

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.4"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.4"* %5 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #16
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #16
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #15
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.4"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !15
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !15
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !18, !noalias !15
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !18, !noalias !15
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !15
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !15
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !18, !noalias !15
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !18, !noalias !15
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !15
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !15
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !18, !noalias !15
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !18, !noalias !15
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !15
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !15
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !18, !noalias !15
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !18, !noalias !15
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !20

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !15
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !15
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !18, !noalias !15
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !18, !noalias !15
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !21

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !22

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !23

189:                                              ; preds = %154, %159, %134, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14MostVisitedURLC2EOS0_(%"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"* dereferenceable(144)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #14
  %5 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14MostVisitedURLD2Ev(%"struct.history::MostVisitedURL"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string.4"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string.4"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %11) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(144) %"struct.history::MostVisitedURL"* @_ZN7history14MostVisitedURLaSERKS0_(%"struct.history::MostVisitedURL"* returned, %"struct.history::MostVisitedURL"* dereferenceable(144)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #14
  %6 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* %6, %"class.std::__1::basic_string.4"* dereferenceable(24) %7)
  ret %"struct.history::MostVisitedURL"* %0
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.4"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.4"*
  %35 = icmp ugt %"class.std::__1::basic_string.4"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !24
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !24
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !27, !noalias !24
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !27, !noalias !24
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !24
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !24
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !27, !noalias !24
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !27, !noalias !24
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !24
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !24
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !27, !noalias !24
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !27, !noalias !24
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !24
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !24
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !27, !noalias !24
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !27, !noalias !24
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !29

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !24
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !24
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !27, !noalias !24
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !27, !noalias !24
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !30

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !31

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !32

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #16
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #16
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #15
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !33
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !33
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !36, !noalias !33
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !36, !noalias !33
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !33
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !33
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !36, !noalias !33
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !36, !noalias !33
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !33
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !33
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !36, !noalias !33
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !36, !noalias !33
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !33
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !33
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !36, !noalias !33
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !36, !noalias !33
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !38

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !33
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !33
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !36, !noalias !33
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !36, !noalias !33
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !39

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !40

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !41

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !42
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !42
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !45, !noalias !42
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !45, !noalias !42
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !42
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !42
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !45, !noalias !42
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !45, !noalias !42
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !42
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !42
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !45, !noalias !42
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !45, !noalias !42
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !42
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !42
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !45, !noalias !42
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !45, !noalias !42
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !47

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !42
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !42
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !45, !noalias !42
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !45, !noalias !42
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !48

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !49

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !50

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #14
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.4"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11FilteredURLC2Ev(%"struct.history::FilteredURL"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #14
  %3 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.4"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11FilteredURLC2ERKNS_13PageUsageDataE(%"struct.history::FilteredURL"*, %"class.history::PageUsageData"* dereferenceable(168)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.history::PageUsageData", %"class.history::PageUsageData"* %1, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #14
  %5 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.history::PageUsageData", %"class.history::PageUsageData"* %1, i64 0, i32 3
  %7 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #14
  br label %189

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.history::PageUsageData", %"class.history::PageUsageData"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.4"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.4"* %5 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #16
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #16
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #15
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.4"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !51
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !51
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !54, !noalias !51
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !54, !noalias !51
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !51
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !51
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !54, !noalias !51
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !54, !noalias !51
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !51
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !51
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !54, !noalias !51
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !54, !noalias !51
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !51
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !51
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !54, !noalias !51
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !54, !noalias !51
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !56

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !51
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !51
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !54, !noalias !51
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !54, !noalias !51
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !57

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !58

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !59

189:                                              ; preds = %154, %159, %134, %11
  %190 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 2
  %191 = getelementptr inbounds %"class.history::PageUsageData", %"class.history::PageUsageData"* %1, i64 0, i32 4
  %192 = bitcast double* %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast double* %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 3
  %196 = bitcast %"struct.history::FilteredURL::ExtendedInfo"* %195 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11FilteredURLC2EOS0_(%"struct.history::FilteredURL"*, %"struct.history::FilteredURL"* dereferenceable(176)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #14
  %5 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %1, i64 0, i32 2
  %11 = bitcast double* %9 to i8*
  %12 = bitcast double* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11FilteredURLD2Ev(%"struct.history::FilteredURL"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string.4"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string.4"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.history::FilteredURL", %"struct.history::FilteredURL"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %11) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history11FilteredURL12ExtendedInfoC2Ev(%"struct.history::FilteredURL::ExtendedInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.history::FilteredURL::ExtendedInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history13TopSitesDeltaC2Ev(%"struct.history::TopSitesDelta"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"struct.history::TopSitesDelta"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history13TopSitesDeltaC2ERKS0_(%"struct.history::TopSitesDelta"*, %"struct.history::TopSitesDelta"* nocapture readonly dereferenceable(72)) unnamed_addr #3 align 2 {
  %3 = bitcast %"struct.history::TopSitesDelta"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #14
  %4 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.history::MostVisitedURL"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.history::TopSitesDelta"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 144
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 128102389400760775
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.history::TopSitesDelta"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #16
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #15
  %18 = bitcast i8* %17 to %"struct.history::MostVisitedURL"*
  %19 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.history::MostVisitedURL"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"struct.history::TopSitesDelta"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %18, i64 %10
  %23 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.history::MostVisitedURL"* %22, %"struct.history::MostVisitedURL"** %23, align 8
  %24 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"** %24, align 8
  %26 = load %"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"** %4, align 8
  %27 = bitcast %"struct.history::MostVisitedURL"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.history::MostVisitedURL"* %25, %26
  br i1 %29, label %38, label %30

30:                                               ; preds = %16, %30
  %31 = phi %"struct.history::MostVisitedURL"* [ %34, %30 ], [ %18, %16 ]
  %32 = phi %"struct.history::MostVisitedURL"* [ %33, %30 ], [ %25, %16 ]
  tail call void @_ZN7history14MostVisitedURLC2ERKS0_(%"struct.history::MostVisitedURL"* %31, %"struct.history::MostVisitedURL"* dereferenceable(144) %32) #14
  %33 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %32, i64 1
  %34 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %31, i64 1
  %35 = icmp eq %"struct.history::MostVisitedURL"* %33, %26
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"struct.history::MostVisitedURL"* %34 to i64
  br label %38

38:                                               ; preds = %36, %16
  %39 = phi i64 [ %28, %16 ], [ %37, %36 ]
  store i64 %39, i64* %27, align 8
  br label %40

40:                                               ; preds = %2, %38
  %41 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %1, i64 0, i32 1
  %43 = bitcast %"class.std::__1::vector.74"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #14
  %44 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %1, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast %"struct.history::MostVisitedURLWithRank"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.74"* %42 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = sdiv exact i64 %49, 152
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %85, label %52

52:                                               ; preds = %40
  %53 = icmp ugt i64 %50, 121360158379668102
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.74"* %41 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #16
  unreachable

56:                                               ; preds = %52
  %57 = tail call i8* @_Znwm(i64 %49) #15
  %58 = bitcast i8* %57 to %"struct.history::MostVisitedURLWithRank"*
  %59 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 1, i32 0, i32 1
  %60 = bitcast %"struct.history::MostVisitedURLWithRank"** %59 to i8**
  store i8* %57, i8** %60, align 8
  %61 = bitcast %"class.std::__1::vector.74"* %41 to i8**
  store i8* %57, i8** %61, align 8
  %62 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %58, i64 %50
  %63 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.history::MostVisitedURLWithRank"* %62, %"struct.history::MostVisitedURLWithRank"** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %42, i64 0, i32 0, i32 0
  %65 = load %"struct.history::MostVisitedURLWithRank"*, %"struct.history::MostVisitedURLWithRank"** %64, align 8
  %66 = load %"struct.history::MostVisitedURLWithRank"*, %"struct.history::MostVisitedURLWithRank"** %44, align 8
  %67 = bitcast %"struct.history::MostVisitedURLWithRank"** %59 to i64*
  %68 = ptrtoint i8* %57 to i64
  %69 = icmp eq %"struct.history::MostVisitedURLWithRank"* %65, %66
  br i1 %69, label %83, label %70

70:                                               ; preds = %56, %70
  %71 = phi %"struct.history::MostVisitedURLWithRank"* [ %79, %70 ], [ %58, %56 ]
  %72 = phi %"struct.history::MostVisitedURLWithRank"* [ %78, %70 ], [ %65, %56 ]
  %73 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %71, i64 0, i32 0
  %74 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %72, i64 0, i32 0
  tail call void @_ZN7history14MostVisitedURLC2ERKS0_(%"struct.history::MostVisitedURL"* %73, %"struct.history::MostVisitedURL"* dereferenceable(144) %74) #14
  %75 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %71, i64 0, i32 1
  %76 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %72, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  store i32 %77, i32* %75, align 8
  %78 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %72, i64 1
  %79 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %71, i64 1
  %80 = icmp eq %"struct.history::MostVisitedURLWithRank"* %78, %66
  br i1 %80, label %81, label %70

81:                                               ; preds = %70
  %82 = ptrtoint %"struct.history::MostVisitedURLWithRank"* %79 to i64
  br label %83

83:                                               ; preds = %81, %56
  %84 = phi i64 [ %68, %56 ], [ %82, %81 ]
  store i64 %84, i64* %67, align 8
  br label %85

85:                                               ; preds = %40, %83
  %86 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 2
  %87 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %1, i64 0, i32 2
  %88 = bitcast %"class.std::__1::vector.74"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #14
  %89 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %1, i64 0, i32 2, i32 0, i32 1
  %90 = bitcast %"struct.history::MostVisitedURLWithRank"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.std::__1::vector.74"* %87 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %91, %93
  %95 = sdiv exact i64 %94, 152
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %130, label %97

97:                                               ; preds = %85
  %98 = icmp ugt i64 %95, 121360158379668102
  br i1 %98, label %99, label %101

99:                                               ; preds = %97
  %100 = bitcast %"class.std::__1::vector.74"* %86 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %100) #16
  unreachable

101:                                              ; preds = %97
  %102 = tail call i8* @_Znwm(i64 %94) #15
  %103 = bitcast i8* %102 to %"struct.history::MostVisitedURLWithRank"*
  %104 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 2, i32 0, i32 1
  %105 = bitcast %"struct.history::MostVisitedURLWithRank"** %104 to i8**
  store i8* %102, i8** %105, align 8
  %106 = bitcast %"class.std::__1::vector.74"* %86 to i8**
  store i8* %102, i8** %106, align 8
  %107 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %103, i64 %95
  %108 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"struct.history::MostVisitedURLWithRank"* %107, %"struct.history::MostVisitedURLWithRank"** %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %87, i64 0, i32 0, i32 0
  %110 = load %"struct.history::MostVisitedURLWithRank"*, %"struct.history::MostVisitedURLWithRank"** %109, align 8
  %111 = load %"struct.history::MostVisitedURLWithRank"*, %"struct.history::MostVisitedURLWithRank"** %89, align 8
  %112 = bitcast %"struct.history::MostVisitedURLWithRank"** %104 to i64*
  %113 = ptrtoint i8* %102 to i64
  %114 = icmp eq %"struct.history::MostVisitedURLWithRank"* %110, %111
  br i1 %114, label %128, label %115

115:                                              ; preds = %101, %115
  %116 = phi %"struct.history::MostVisitedURLWithRank"* [ %124, %115 ], [ %103, %101 ]
  %117 = phi %"struct.history::MostVisitedURLWithRank"* [ %123, %115 ], [ %110, %101 ]
  %118 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %116, i64 0, i32 0
  %119 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %117, i64 0, i32 0
  tail call void @_ZN7history14MostVisitedURLC2ERKS0_(%"struct.history::MostVisitedURL"* %118, %"struct.history::MostVisitedURL"* dereferenceable(144) %119) #14
  %120 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %116, i64 0, i32 1
  %121 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %117, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  store i32 %122, i32* %120, align 8
  %123 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %117, i64 1
  %124 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %116, i64 1
  %125 = icmp eq %"struct.history::MostVisitedURLWithRank"* %123, %111
  br i1 %125, label %126, label %115

126:                                              ; preds = %115
  %127 = ptrtoint %"struct.history::MostVisitedURLWithRank"* %124 to i64
  br label %128

128:                                              ; preds = %126, %101
  %129 = phi i64 [ %113, %101 ], [ %127, %126 ]
  store i64 %129, i64* %112, align 8
  br label %130

130:                                              ; preds = %85, %128
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history13TopSitesDeltaD2Ev(%"struct.history::TopSitesDelta"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.history::MostVisitedURLWithRank"*, %"struct.history::MostVisitedURLWithRank"** %3, align 8
  %5 = icmp eq %"struct.history::MostVisitedURLWithRank"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.history::MostVisitedURLWithRank"* %4 to i8*
  %8 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"struct.history::MostVisitedURLWithRank"*, %"struct.history::MostVisitedURLWithRank"** %8, align 8
  %10 = icmp eq %"struct.history::MostVisitedURLWithRank"* %9, %4
  br i1 %10, label %28, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"struct.history::MostVisitedURLWithRank"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %12, i64 -1, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string.4"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = bitcast %"class.std::__1::basic_string.4"* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #15
  br label %22

22:                                               ; preds = %19, %11
  %23 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %13, i64 0, i32 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %23) #14
  %24 = icmp eq %"struct.history::MostVisitedURLWithRank"* %13, %4
  br i1 %24, label %25, label %11

25:                                               ; preds = %22
  %26 = bitcast %"class.std::__1::vector.74"* %2 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %6
  %29 = phi i8* [ %27, %25 ], [ %7, %6 ]
  store %"struct.history::MostVisitedURLWithRank"* %4, %"struct.history::MostVisitedURLWithRank"** %8, align 8
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %31, i64 0, i32 0, i32 0
  %33 = load %"struct.history::MostVisitedURLWithRank"*, %"struct.history::MostVisitedURLWithRank"** %32, align 8
  %34 = icmp eq %"struct.history::MostVisitedURLWithRank"* %33, null
  br i1 %34, label %59, label %35

35:                                               ; preds = %30
  %36 = bitcast %"struct.history::MostVisitedURLWithRank"* %33 to i8*
  %37 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 1, i32 0, i32 1
  %38 = load %"struct.history::MostVisitedURLWithRank"*, %"struct.history::MostVisitedURLWithRank"** %37, align 8
  %39 = icmp eq %"struct.history::MostVisitedURLWithRank"* %38, %33
  br i1 %39, label %57, label %40

40:                                               ; preds = %35, %51
  %41 = phi %"struct.history::MostVisitedURLWithRank"* [ %42, %51 ], [ %38, %35 ]
  %42 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %41, i64 -1
  %43 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %41, i64 -1, i32 0, i32 1
  %44 = bitcast %"class.std::__1::basic_string.4"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %40
  %49 = bitcast %"class.std::__1::basic_string.4"* %43 to i8**
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #15
  br label %51

51:                                               ; preds = %48, %40
  %52 = getelementptr inbounds %"struct.history::MostVisitedURLWithRank", %"struct.history::MostVisitedURLWithRank"* %42, i64 0, i32 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %52) #14
  %53 = icmp eq %"struct.history::MostVisitedURLWithRank"* %42, %33
  br i1 %53, label %54, label %40

54:                                               ; preds = %51
  %55 = bitcast %"class.std::__1::vector.74"* %31 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %35
  %58 = phi i8* [ %56, %54 ], [ %36, %35 ]
  store %"struct.history::MostVisitedURLWithRank"* %33, %"struct.history::MostVisitedURLWithRank"** %37, align 8
  tail call void @_ZdlPv(i8* %58) #15
  br label %59

59:                                               ; preds = %30, %57
  %60 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 0, i32 0, i32 0
  %61 = load %"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"** %60, align 8
  %62 = icmp eq %"struct.history::MostVisitedURL"* %61, null
  br i1 %62, label %87, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.history::MostVisitedURL"* %61 to i8*
  %65 = getelementptr inbounds %"struct.history::TopSitesDelta", %"struct.history::TopSitesDelta"* %0, i64 0, i32 0, i32 0, i32 1
  %66 = load %"struct.history::MostVisitedURL"*, %"struct.history::MostVisitedURL"** %65, align 8
  %67 = icmp eq %"struct.history::MostVisitedURL"* %66, %61
  br i1 %67, label %85, label %68

68:                                               ; preds = %63, %79
  %69 = phi %"struct.history::MostVisitedURL"* [ %70, %79 ], [ %66, %63 ]
  %70 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %69, i64 -1
  %71 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %69, i64 -1, i32 1
  %72 = bitcast %"class.std::__1::basic_string.4"* %71 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %68
  %77 = bitcast %"class.std::__1::basic_string.4"* %71 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #15
  br label %79

79:                                               ; preds = %76, %68
  %80 = getelementptr inbounds %"struct.history::MostVisitedURL", %"struct.history::MostVisitedURL"* %70, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %80) #14
  %81 = icmp eq %"struct.history::MostVisitedURL"* %70, %61
  br i1 %81, label %82, label %68

82:                                               ; preds = %79
  %83 = bitcast %"struct.history::TopSitesDelta"* %0 to i8**
  %84 = load i8*, i8** %83, align 8
  br label %85

85:                                               ; preds = %82, %63
  %86 = phi i8* [ %84, %82 ], [ %64, %63 ]
  store %"struct.history::MostVisitedURL"* %61, %"struct.history::MostVisitedURL"** %65, align 8
  tail call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %59, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history18HistoryAddPageArgsC2Ev(%"struct.history::HistoryAddPageArgs"*) unnamed_addr #3 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = alloca %class.GURL, align 8
  %4 = alloca %"class.std::__1::vector.81", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %6) #14
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %2) #14
  %7 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %7) #14
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %3) #14
  %8 = bitcast %"class.std::__1::vector.81"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.87* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #14
  call void @_ZN7history18HistoryAddPageArgsC2ERK4GURLN4base4TimeEPNS_7ContextEiS3_RKNSt3__16vectorIS1_NS8_9allocatorIS1_EEEEN2ui14PageTransitionEbNS_11VisitSourceEbbbN4absl8optionalINS8_12basic_stringIDsNS8_11char_traitsIDsEENSA_IDsEEEEEE(%"struct.history::HistoryAddPageArgs"* %0, %class.GURL* nonnull dereferenceable(120) %2, i64 0, %"struct.history::Context"* null, i32 0, %class.GURL* nonnull dereferenceable(120) %3, %"class.std::__1::vector.81"* nonnull dereferenceable(24) %4, i32 0, i1 zeroext false, i32 1, i1 zeroext false, i1 zeroext true, i1 zeroext undef, %"class.absl::optional"* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %7) #14
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history18HistoryAddPageArgsC2ERK4GURLN4base4TimeEPNS_7ContextEiS3_RKNSt3__16vectorIS1_NS8_9allocatorIS1_EEEEN2ui14PageTransitionEbNS_11VisitSourceEbbbN4absl8optionalINS8_12basic_stringIDsNS8_11char_traitsIDsEENSA_IDsEEEEEE(%"struct.history::HistoryAddPageArgs"*, %class.GURL* dereferenceable(120), i64, %"struct.history::Context"*, i32, %class.GURL* dereferenceable(120), %"class.std::__1::vector.81"* nocapture readonly dereferenceable(24), i32, i1 zeroext, i32, i1 zeroext, i1 zeroext, i1 zeroext, %"class.absl::optional"* nocapture readonly) unnamed_addr #3 align 2 {
  %15 = zext i1 %8 to i8
  %16 = zext i1 %10 to i8
  %17 = zext i1 %11 to i8
  %18 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %18, %class.GURL* dereferenceable(120) %1) #14
  %19 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %2, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 2
  store %"struct.history::Context"* %3, %"struct.history::Context"** %20, align 8
  %21 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 3
  store i32 %4, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 4
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %22, %class.GURL* dereferenceable(120) %5) #14
  %23 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 5
  %24 = bitcast %"class.std::__1::vector.81"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #14
  %25 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %6, i64 0, i32 0, i32 1
  %26 = bitcast %class.GURL** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.81"* %6 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = sdiv exact i64 %30, 120
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %61, label %33

33:                                               ; preds = %14
  %34 = icmp ugt i64 %31, 153722867280912930
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector.81"* %23 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #16
  unreachable

37:                                               ; preds = %33
  %38 = tail call i8* @_Znwm(i64 %30) #15
  %39 = bitcast i8* %38 to %class.GURL*
  %40 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = bitcast %class.GURL** %40 to i8**
  store i8* %38, i8** %41, align 8
  %42 = bitcast %"class.std::__1::vector.81"* %23 to i8**
  store i8* %38, i8** %42, align 8
  %43 = getelementptr inbounds %class.GURL, %class.GURL* %39, i64 %31
  %44 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %class.GURL* %43, %class.GURL** %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %6, i64 0, i32 0, i32 0
  %46 = load %class.GURL*, %class.GURL** %45, align 8
  %47 = load %class.GURL*, %class.GURL** %25, align 8
  %48 = bitcast %class.GURL** %40 to i64*
  %49 = ptrtoint i8* %38 to i64
  %50 = icmp eq %class.GURL* %46, %47
  br i1 %50, label %59, label %51

51:                                               ; preds = %37, %51
  %52 = phi %class.GURL* [ %55, %51 ], [ %39, %37 ]
  %53 = phi %class.GURL* [ %54, %51 ], [ %46, %37 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %52, %class.GURL* dereferenceable(120) %53) #14
  %54 = getelementptr inbounds %class.GURL, %class.GURL* %53, i64 1
  %55 = getelementptr inbounds %class.GURL, %class.GURL* %52, i64 1
  %56 = icmp eq %class.GURL* %54, %47
  br i1 %56, label %57, label %51

57:                                               ; preds = %51
  %58 = ptrtoint %class.GURL* %55 to i64
  br label %59

59:                                               ; preds = %57, %37
  %60 = phi i64 [ %49, %37 ], [ %58, %57 ]
  store i64 %60, i64* %48, align 8
  br label %61

61:                                               ; preds = %14, %59
  %62 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 6
  store i32 %7, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 7
  store i8 %15, i8* %63, align 4
  %64 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 8
  store i32 %9, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 9
  store i8 %16, i8* %65, align 4
  %66 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 10
  store i8 %17, i8* %66, align 1
  %67 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 32, i1 false) #14
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %257, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %73 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = bitcast %"class.std::__1::basic_string.4"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string.4"* %73 to i8*
  %80 = bitcast %"class.std::__1::basic_string.4"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #14
  br label %256

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i16*, i16** %82, align 8
  %84 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, 11
  br i1 %86, label %87, label %92

87:                                               ; preds = %81
  %88 = bitcast %"class.std::__1::basic_string.4"* %73 to i16*
  %89 = trunc i64 %85 to i8
  %90 = bitcast %"class.std::__1::basic_string.4"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  store i8 %89, i8* %91, align 1
  br label %109

92:                                               ; preds = %81
  %93 = icmp ugt i64 %85, 9223372036854775791
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::basic_string.4"* %73 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %95) #16
  unreachable

96:                                               ; preds = %92
  %97 = add nuw nsw i64 %85, 8
  %98 = and i64 %97, -8
  %99 = icmp slt i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  tail call void @abort() #16
  unreachable

101:                                              ; preds = %96
  %102 = shl i64 %98, 1
  %103 = tail call i8* @_Znwm(i64 %102) #15
  %104 = bitcast i8* %103 to i16*
  %105 = bitcast %"class.std::__1::basic_string.4"* %73 to i8**
  store i8* %103, i8** %105, align 8
  %106 = or i64 %98, -9223372036854775808
  %107 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %85, i64* %108, align 8
  br label %109

109:                                              ; preds = %101, %87
  %110 = phi i16* [ %88, %87 ], [ %104, %101 ]
  %111 = add nuw nsw i64 %85, 1
  %112 = add i64 %85, 1
  %113 = icmp ult i64 %112, 16
  br i1 %113, label %203, label %114

114:                                              ; preds = %109
  %115 = add i64 %85, 1
  %116 = getelementptr i16, i16* %110, i64 %115
  %117 = getelementptr i16, i16* %83, i64 %115
  %118 = icmp ult i16* %110, %117
  %119 = icmp ult i16* %83, %116
  %120 = and i1 %118, %119
  br i1 %120, label %203, label %121

121:                                              ; preds = %114
  %122 = and i64 %112, -16
  %123 = sub i64 %111, %122
  %124 = getelementptr i16, i16* %83, i64 %122
  %125 = getelementptr i16, i16* %110, i64 %122
  %126 = add i64 %122, -16
  %127 = lshr exact i64 %126, 4
  %128 = add nuw nsw i64 %127, 1
  %129 = and i64 %128, 3
  %130 = icmp ult i64 %126, 48
  br i1 %130, label %182, label %131

131:                                              ; preds = %121
  %132 = sub nsw i64 %128, %129
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %179, %133 ]
  %135 = phi i64 [ %132, %131 ], [ %180, %133 ]
  %136 = getelementptr i16, i16* %83, i64 %134
  %137 = getelementptr i16, i16* %110, i64 %134
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !60
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !60
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !63, !noalias !60
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !63, !noalias !60
  %146 = or i64 %134, 16
  %147 = getelementptr i16, i16* %83, i64 %146
  %148 = getelementptr i16, i16* %110, i64 %146
  %149 = bitcast i16* %147 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !60
  %151 = getelementptr i16, i16* %147, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !60
  %154 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !63, !noalias !60
  %155 = getelementptr i16, i16* %148, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !63, !noalias !60
  %157 = or i64 %134, 32
  %158 = getelementptr i16, i16* %83, i64 %157
  %159 = getelementptr i16, i16* %110, i64 %157
  %160 = bitcast i16* %158 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !60
  %162 = getelementptr i16, i16* %158, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !60
  %165 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %165, align 2, !alias.scope !63, !noalias !60
  %166 = getelementptr i16, i16* %159, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %167, align 2, !alias.scope !63, !noalias !60
  %168 = or i64 %134, 48
  %169 = getelementptr i16, i16* %83, i64 %168
  %170 = getelementptr i16, i16* %110, i64 %168
  %171 = bitcast i16* %169 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !60
  %173 = getelementptr i16, i16* %169, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !60
  %176 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %172, <8 x i16>* %176, align 2, !alias.scope !63, !noalias !60
  %177 = getelementptr i16, i16* %170, i64 8
  %178 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %175, <8 x i16>* %178, align 2, !alias.scope !63, !noalias !60
  %179 = add i64 %134, 64
  %180 = add i64 %135, -4
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %133, !llvm.loop !65

182:                                              ; preds = %133, %121
  %183 = phi i64 [ 0, %121 ], [ %179, %133 ]
  %184 = icmp eq i64 %129, 0
  br i1 %184, label %201, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %198, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %199, %185 ], [ %129, %182 ]
  %188 = getelementptr i16, i16* %83, i64 %186
  %189 = getelementptr i16, i16* %110, i64 %186
  %190 = bitcast i16* %188 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !60
  %192 = getelementptr i16, i16* %188, i64 8
  %193 = bitcast i16* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !60
  %195 = bitcast i16* %189 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %195, align 2, !alias.scope !63, !noalias !60
  %196 = getelementptr i16, i16* %189, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  store <8 x i16> %194, <8 x i16>* %197, align 2, !alias.scope !63, !noalias !60
  %198 = add i64 %186, 16
  %199 = add i64 %187, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %185, !llvm.loop !66

201:                                              ; preds = %185, %182
  %202 = icmp eq i64 %112, %122
  br i1 %202, label %256, label %203

203:                                              ; preds = %201, %114, %109
  %204 = phi i64 [ %111, %114 ], [ %111, %109 ], [ %123, %201 ]
  %205 = phi i16* [ %83, %114 ], [ %83, %109 ], [ %124, %201 ]
  %206 = phi i16* [ %110, %114 ], [ %110, %109 ], [ %125, %201 ]
  %207 = add i64 %204, -1
  %208 = and i64 %204, 7
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %221, label %210

210:                                              ; preds = %203, %210
  %211 = phi i64 [ %216, %210 ], [ %204, %203 ]
  %212 = phi i16* [ %218, %210 ], [ %205, %203 ]
  %213 = phi i16* [ %217, %210 ], [ %206, %203 ]
  %214 = phi i64 [ %219, %210 ], [ %208, %203 ]
  %215 = load i16, i16* %212, align 2
  store i16 %215, i16* %213, align 2
  %216 = add i64 %211, -1
  %217 = getelementptr inbounds i16, i16* %213, i64 1
  %218 = getelementptr inbounds i16, i16* %212, i64 1
  %219 = add i64 %214, -1
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %210, !llvm.loop !67

221:                                              ; preds = %210, %203
  %222 = phi i64 [ %204, %203 ], [ %216, %210 ]
  %223 = phi i16* [ %205, %203 ], [ %218, %210 ]
  %224 = phi i16* [ %206, %203 ], [ %217, %210 ]
  %225 = icmp ult i64 %207, 7
  br i1 %225, label %256, label %226

226:                                              ; preds = %221, %226
  %227 = phi i64 [ %252, %226 ], [ %222, %221 ]
  %228 = phi i16* [ %254, %226 ], [ %223, %221 ]
  %229 = phi i16* [ %253, %226 ], [ %224, %221 ]
  %230 = load i16, i16* %228, align 2
  store i16 %230, i16* %229, align 2
  %231 = getelementptr inbounds i16, i16* %229, i64 1
  %232 = getelementptr inbounds i16, i16* %228, i64 1
  %233 = load i16, i16* %232, align 2
  store i16 %233, i16* %231, align 2
  %234 = getelementptr inbounds i16, i16* %229, i64 2
  %235 = getelementptr inbounds i16, i16* %228, i64 2
  %236 = load i16, i16* %235, align 2
  store i16 %236, i16* %234, align 2
  %237 = getelementptr inbounds i16, i16* %229, i64 3
  %238 = getelementptr inbounds i16, i16* %228, i64 3
  %239 = load i16, i16* %238, align 2
  store i16 %239, i16* %237, align 2
  %240 = getelementptr inbounds i16, i16* %229, i64 4
  %241 = getelementptr inbounds i16, i16* %228, i64 4
  %242 = load i16, i16* %241, align 2
  store i16 %242, i16* %240, align 2
  %243 = getelementptr inbounds i16, i16* %229, i64 5
  %244 = getelementptr inbounds i16, i16* %228, i64 5
  %245 = load i16, i16* %244, align 2
  store i16 %245, i16* %243, align 2
  %246 = getelementptr inbounds i16, i16* %229, i64 6
  %247 = getelementptr inbounds i16, i16* %228, i64 6
  %248 = load i16, i16* %247, align 2
  store i16 %248, i16* %246, align 2
  %249 = getelementptr inbounds i16, i16* %229, i64 7
  %250 = getelementptr inbounds i16, i16* %228, i64 7
  %251 = load i16, i16* %250, align 2
  store i16 %251, i16* %249, align 2
  %252 = add i64 %227, -8
  %253 = getelementptr inbounds i16, i16* %229, i64 8
  %254 = getelementptr inbounds i16, i16* %228, i64 8
  %255 = icmp eq i64 %252, 0
  br i1 %255, label %256, label %226, !llvm.loop !68

256:                                              ; preds = %221, %226, %201, %78
  store i8 1, i8* %67, align 8
  br label %257

257:                                              ; preds = %61, %256
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history18HistoryAddPageArgsC2ERKS0_(%"struct.history::HistoryAddPageArgs"*, %"struct.history::HistoryAddPageArgs"* dereferenceable(336)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #14
  %5 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %1, i64 0, i32 1
  %7 = bitcast %"class.base::Time"* %5 to i8*
  %8 = bitcast %"class.base::Time"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 20, i1 false)
  %9 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %1, i64 0, i32 4
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %10) #14
  %11 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %1, i64 0, i32 5
  %13 = bitcast %"class.std::__1::vector.81"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #14
  %14 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %1, i64 0, i32 5, i32 0, i32 1
  %15 = bitcast %class.GURL** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.81"* %12 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = sdiv exact i64 %19, 120
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %2
  %23 = icmp ugt i64 %20, 153722867280912930
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.81"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #16
  unreachable

26:                                               ; preds = %22
  %27 = tail call i8* @_Znwm(i64 %19) #15
  %28 = bitcast i8* %27 to %class.GURL*
  %29 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 5, i32 0, i32 1
  %30 = bitcast %class.GURL** %29 to i8**
  store i8* %27, i8** %30, align 8
  %31 = bitcast %"class.std::__1::vector.81"* %11 to i8**
  store i8* %27, i8** %31, align 8
  %32 = getelementptr inbounds %class.GURL, %class.GURL* %28, i64 %20
  %33 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %class.GURL* %32, %class.GURL** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %12, i64 0, i32 0, i32 0
  %35 = load %class.GURL*, %class.GURL** %34, align 8
  %36 = load %class.GURL*, %class.GURL** %14, align 8
  %37 = bitcast %class.GURL** %29 to i64*
  %38 = ptrtoint i8* %27 to i64
  %39 = icmp eq %class.GURL* %35, %36
  br i1 %39, label %48, label %40

40:                                               ; preds = %26, %40
  %41 = phi %class.GURL* [ %44, %40 ], [ %28, %26 ]
  %42 = phi %class.GURL* [ %43, %40 ], [ %35, %26 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %41, %class.GURL* dereferenceable(120) %42) #14
  %43 = getelementptr inbounds %class.GURL, %class.GURL* %42, i64 1
  %44 = getelementptr inbounds %class.GURL, %class.GURL* %41, i64 1
  %45 = icmp eq %class.GURL* %43, %36
  br i1 %45, label %46, label %40

46:                                               ; preds = %40
  %47 = ptrtoint %class.GURL* %44 to i64
  br label %48

48:                                               ; preds = %46, %26
  %49 = phi i64 [ %38, %26 ], [ %47, %46 ]
  store i64 %49, i64* %37, align 8
  br label %50

50:                                               ; preds = %2, %48
  %51 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 6
  %52 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %1, i64 0, i32 6
  %53 = bitcast i32* %51 to i8*
  %54 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 15, i1 false)
  %55 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 32, i1 false) #14
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %245, label %59

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %61 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %62 = bitcast %"class.std::__1::basic_string.4"* %60 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %59
  %67 = bitcast %"class.std::__1::basic_string.4"* %61 to i8*
  %68 = bitcast %"class.std::__1::basic_string.4"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false) #14
  br label %244

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i16*, i16** %70, align 8
  %72 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = icmp ult i64 %73, 11
  br i1 %74, label %75, label %80

75:                                               ; preds = %69
  %76 = bitcast %"class.std::__1::basic_string.4"* %61 to i16*
  %77 = trunc i64 %73 to i8
  %78 = bitcast %"class.std::__1::basic_string.4"* %61 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %78, i64 0, i32 1, i32 1
  store i8 %77, i8* %79, align 1
  br label %97

80:                                               ; preds = %69
  %81 = icmp ugt i64 %73, 9223372036854775791
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = bitcast %"class.std::__1::basic_string.4"* %61 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %83) #16
  unreachable

84:                                               ; preds = %80
  %85 = add nuw nsw i64 %73, 8
  %86 = and i64 %85, -8
  %87 = icmp slt i64 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %84
  tail call void @abort() #16
  unreachable

89:                                               ; preds = %84
  %90 = shl i64 %86, 1
  %91 = tail call i8* @_Znwm(i64 %90) #15
  %92 = bitcast i8* %91 to i16*
  %93 = bitcast %"class.std::__1::basic_string.4"* %61 to i8**
  store i8* %91, i8** %93, align 8
  %94 = or i64 %86, -9223372036854775808
  %95 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %73, i64* %96, align 8
  br label %97

97:                                               ; preds = %89, %75
  %98 = phi i16* [ %76, %75 ], [ %92, %89 ]
  %99 = add nuw nsw i64 %73, 1
  %100 = add i64 %73, 1
  %101 = icmp ult i64 %100, 16
  br i1 %101, label %191, label %102

102:                                              ; preds = %97
  %103 = add i64 %73, 1
  %104 = getelementptr i16, i16* %98, i64 %103
  %105 = getelementptr i16, i16* %71, i64 %103
  %106 = icmp ult i16* %98, %105
  %107 = icmp ult i16* %71, %104
  %108 = and i1 %106, %107
  br i1 %108, label %191, label %109

109:                                              ; preds = %102
  %110 = and i64 %100, -16
  %111 = sub i64 %99, %110
  %112 = getelementptr i16, i16* %71, i64 %110
  %113 = getelementptr i16, i16* %98, i64 %110
  %114 = add i64 %110, -16
  %115 = lshr exact i64 %114, 4
  %116 = add nuw nsw i64 %115, 1
  %117 = and i64 %116, 3
  %118 = icmp ult i64 %114, 48
  br i1 %118, label %170, label %119

119:                                              ; preds = %109
  %120 = sub nsw i64 %116, %117
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i64 [ 0, %119 ], [ %167, %121 ]
  %123 = phi i64 [ %120, %119 ], [ %168, %121 ]
  %124 = getelementptr i16, i16* %71, i64 %122
  %125 = getelementptr i16, i16* %98, i64 %122
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !69
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !69
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !72, !noalias !69
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !72, !noalias !69
  %134 = or i64 %122, 16
  %135 = getelementptr i16, i16* %71, i64 %134
  %136 = getelementptr i16, i16* %98, i64 %134
  %137 = bitcast i16* %135 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !69
  %139 = getelementptr i16, i16* %135, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !69
  %142 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %142, align 2, !alias.scope !72, !noalias !69
  %143 = getelementptr i16, i16* %136, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !72, !noalias !69
  %145 = or i64 %122, 32
  %146 = getelementptr i16, i16* %71, i64 %145
  %147 = getelementptr i16, i16* %98, i64 %145
  %148 = bitcast i16* %146 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !69
  %150 = getelementptr i16, i16* %146, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !69
  %153 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %153, align 2, !alias.scope !72, !noalias !69
  %154 = getelementptr i16, i16* %147, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %152, <8 x i16>* %155, align 2, !alias.scope !72, !noalias !69
  %156 = or i64 %122, 48
  %157 = getelementptr i16, i16* %71, i64 %156
  %158 = getelementptr i16, i16* %98, i64 %156
  %159 = bitcast i16* %157 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !69
  %161 = getelementptr i16, i16* %157, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !69
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !72, !noalias !69
  %165 = getelementptr i16, i16* %158, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !72, !noalias !69
  %167 = add i64 %122, 64
  %168 = add i64 %123, -4
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %121, !llvm.loop !74

170:                                              ; preds = %121, %109
  %171 = phi i64 [ 0, %109 ], [ %167, %121 ]
  %172 = icmp eq i64 %117, 0
  br i1 %172, label %189, label %173

173:                                              ; preds = %170, %173
  %174 = phi i64 [ %186, %173 ], [ %171, %170 ]
  %175 = phi i64 [ %187, %173 ], [ %117, %170 ]
  %176 = getelementptr i16, i16* %71, i64 %174
  %177 = getelementptr i16, i16* %98, i64 %174
  %178 = bitcast i16* %176 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !69
  %180 = getelementptr i16, i16* %176, i64 8
  %181 = bitcast i16* %180 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !69
  %183 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %183, align 2, !alias.scope !72, !noalias !69
  %184 = getelementptr i16, i16* %177, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %185, align 2, !alias.scope !72, !noalias !69
  %186 = add i64 %174, 16
  %187 = add i64 %175, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %173, !llvm.loop !75

189:                                              ; preds = %173, %170
  %190 = icmp eq i64 %100, %110
  br i1 %190, label %244, label %191

191:                                              ; preds = %189, %102, %97
  %192 = phi i64 [ %99, %102 ], [ %99, %97 ], [ %111, %189 ]
  %193 = phi i16* [ %71, %102 ], [ %71, %97 ], [ %112, %189 ]
  %194 = phi i16* [ %98, %102 ], [ %98, %97 ], [ %113, %189 ]
  %195 = add i64 %192, -1
  %196 = and i64 %192, 7
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %209, label %198

198:                                              ; preds = %191, %198
  %199 = phi i64 [ %204, %198 ], [ %192, %191 ]
  %200 = phi i16* [ %206, %198 ], [ %193, %191 ]
  %201 = phi i16* [ %205, %198 ], [ %194, %191 ]
  %202 = phi i64 [ %207, %198 ], [ %196, %191 ]
  %203 = load i16, i16* %200, align 2
  store i16 %203, i16* %201, align 2
  %204 = add i64 %199, -1
  %205 = getelementptr inbounds i16, i16* %201, i64 1
  %206 = getelementptr inbounds i16, i16* %200, i64 1
  %207 = add i64 %202, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %198, !llvm.loop !76

209:                                              ; preds = %198, %191
  %210 = phi i64 [ %192, %191 ], [ %204, %198 ]
  %211 = phi i16* [ %193, %191 ], [ %206, %198 ]
  %212 = phi i16* [ %194, %191 ], [ %205, %198 ]
  %213 = icmp ult i64 %195, 7
  br i1 %213, label %244, label %214

214:                                              ; preds = %209, %214
  %215 = phi i64 [ %240, %214 ], [ %210, %209 ]
  %216 = phi i16* [ %242, %214 ], [ %211, %209 ]
  %217 = phi i16* [ %241, %214 ], [ %212, %209 ]
  %218 = load i16, i16* %216, align 2
  store i16 %218, i16* %217, align 2
  %219 = getelementptr inbounds i16, i16* %217, i64 1
  %220 = getelementptr inbounds i16, i16* %216, i64 1
  %221 = load i16, i16* %220, align 2
  store i16 %221, i16* %219, align 2
  %222 = getelementptr inbounds i16, i16* %217, i64 2
  %223 = getelementptr inbounds i16, i16* %216, i64 2
  %224 = load i16, i16* %223, align 2
  store i16 %224, i16* %222, align 2
  %225 = getelementptr inbounds i16, i16* %217, i64 3
  %226 = getelementptr inbounds i16, i16* %216, i64 3
  %227 = load i16, i16* %226, align 2
  store i16 %227, i16* %225, align 2
  %228 = getelementptr inbounds i16, i16* %217, i64 4
  %229 = getelementptr inbounds i16, i16* %216, i64 4
  %230 = load i16, i16* %229, align 2
  store i16 %230, i16* %228, align 2
  %231 = getelementptr inbounds i16, i16* %217, i64 5
  %232 = getelementptr inbounds i16, i16* %216, i64 5
  %233 = load i16, i16* %232, align 2
  store i16 %233, i16* %231, align 2
  %234 = getelementptr inbounds i16, i16* %217, i64 6
  %235 = getelementptr inbounds i16, i16* %216, i64 6
  %236 = load i16, i16* %235, align 2
  store i16 %236, i16* %234, align 2
  %237 = getelementptr inbounds i16, i16* %217, i64 7
  %238 = getelementptr inbounds i16, i16* %216, i64 7
  %239 = load i16, i16* %238, align 2
  store i16 %239, i16* %237, align 2
  %240 = add i64 %215, -8
  %241 = getelementptr inbounds i16, i16* %217, i64 8
  %242 = getelementptr inbounds i16, i16* %216, i64 8
  %243 = icmp eq i64 %240, 0
  br i1 %243, label %244, label %214, !llvm.loop !77

244:                                              ; preds = %209, %214, %189, %66
  store i8 1, i8* %55, align 8
  br label %245

245:                                              ; preds = %50, %244
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history18HistoryAddPageArgsD2Ev(%"struct.history::HistoryAddPageArgs"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = bitcast %"class.std::__1::basic_string.4"* %6 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #15
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %16, i64 0, i32 0, i32 0
  %18 = load %class.GURL*, %class.GURL** %17, align 8
  %19 = icmp eq %class.GURL* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = bitcast %class.GURL* %18 to i8*
  %22 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 5, i32 0, i32 1
  %23 = load %class.GURL*, %class.GURL** %22, align 8
  %24 = icmp eq %class.GURL* %23, %18
  br i1 %24, label %32, label %25

25:                                               ; preds = %20, %25
  %26 = phi %class.GURL* [ %27, %25 ], [ %23, %20 ]
  %27 = getelementptr inbounds %class.GURL, %class.GURL* %26, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %27) #14
  %28 = icmp eq %class.GURL* %27, %18
  br i1 %28, label %29, label %25

29:                                               ; preds = %25
  %30 = bitcast %"class.std::__1::vector.81"* %16 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi i8* [ %31, %29 ], [ %21, %20 ]
  store %class.GURL* %18, %class.GURL** %22, align 8
  tail call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %15, %32
  %35 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 4
  tail call void @_ZN4GURLD1Ev(%class.GURL* %35) #14
  %36 = getelementptr inbounds %"struct.history::HistoryAddPageArgs", %"struct.history::HistoryAddPageArgs"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %36) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history15DomainMetricSetC2Ev(%"struct.history::DomainMetricSet"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.history::DomainMetricSet", %"struct.history::DomainMetricSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.history::DomainMetricSet", %"struct.history::DomainMetricSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.history::DomainMetricSet", %"struct.history::DomainMetricSet"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.history::DomainMetricSet", %"struct.history::DomainMetricSet"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history15DomainMetricSetC2ERKS0_(%"struct.history::DomainMetricSet"* nocapture, %"struct.history::DomainMetricSet"* nocapture readonly dereferenceable(80)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::DomainMetricSet", %"struct.history::DomainMetricSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.history::DomainMetricSet", %"struct.history::DomainMetricSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 80, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7history15DomainMetricSetD2Ev(%"struct.history::DomainMetricSet"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"struct.history::DomainMetricSet"* @_ZN7history15DomainMetricSetaSERKS0_(%"struct.history::DomainMetricSet"* returned, %"struct.history::DomainMetricSet"* nocapture readonly dereferenceable(80)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::DomainMetricSet", %"struct.history::DomainMetricSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.history::DomainMetricSet", %"struct.history::DomainMetricSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 80, i1 false)
  ret %"struct.history::DomainMetricSet"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history17ExpireHistoryArgsC2Ev(%"struct.history::ExpireHistoryArgs"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history17ExpireHistoryArgsC2ERKS0_(%"struct.history::ExpireHistoryArgs"*, %"struct.history::ExpireHistoryArgs"* readonly dereferenceable(40)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::__compressed_pair.49"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %4, align 8
  %8 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = icmp eq %"class.std::__1::__tree_end_node"* %9, %10
  br i1 %11, label %47, label %12

12:                                               ; preds = %2, %44
  %13 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %9, %2 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 4
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %class.GURL*
  %16 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE30__emplace_hint_unique_key_argsIS1_JRKS1_EEENS_4pairINS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEbEENS_21__tree_const_iteratorIS1_SF_lEERKT_DpOT0_(%"class.std::__1::__tree.48"* %3, %"class.std::__1::__tree_end_node"* %5, %class.GURL* dereferenceable(120) %15, %class.GURL* dereferenceable(120) %15) #14
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 1, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 2
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_end_node"**
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, %21
  br i1 %27, label %44, label %35

28:                                               ; preds = %12, %28
  %29 = phi %"class.std::__1::__tree_node_base"* [ %31, %28 ], [ %18, %12 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0
  br label %44

35:                                               ; preds = %20, %35
  %36 = phi %"class.std::__1::__tree_end_node"** [ %39, %35 ], [ %23, %20 ]
  %37 = bitcast %"class.std::__1::__tree_end_node"** %36 to %"class.std::__1::__tree_node_base"**
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %38
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %33, %20
  %45 = phi %"class.std::__1::__tree_end_node"* [ %34, %33 ], [ %24, %20 ], [ %40, %35 ]
  %46 = icmp eq %"class.std::__1::__tree_end_node"* %45, %10
  br i1 %46, label %47, label %12

47:                                               ; preds = %44, %2
  %48 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %1, i64 0, i32 1
  %50 = bitcast %"class.base::Time"* %48 to i8*
  %51 = bitcast %"class.base::Time"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history17ExpireHistoryArgsD2Ev(%"struct.history::ExpireHistoryArgs"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.133"**
  %5 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %4, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* %2, %"class.std::__1::__tree_node.133"* %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history17ExpireHistoryArgs21SetTimeRangeForOneDayEN4base4TimeE(%"struct.history::ExpireHistoryArgs"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::Time", align 8
  %4 = alloca %"class.base::Time", align 8
  %5 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = call i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"* nonnull %3, i1 zeroext true) #14
  %7 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = bitcast %"class.base::Time"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %6, i64 129600000000) #14
  %10 = extractvalue { i64, i1 } %9, 1
  %11 = extractvalue { i64, i1 } %9, 0
  %12 = select i1 %10, i64 9223372036854775807, i64 %11, !prof !78
  %13 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = call i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"* nonnull %4, i1 zeroext true) #14
  %15 = getelementptr inbounds %"struct.history::ExpireHistoryArgs", %"struct.history::ExpireHistoryArgs"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %14, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZN7history17DeletionTimeRange7InvalidEv() local_unnamed_addr #2 align 2 {
  ret { i64, i64 } { i64 9223372036854775807, i64 -9223372036854775808 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZN7history17DeletionTimeRange7AllTimeEv() local_unnamed_addr #2 align 2 {
  ret { i64, i64 } { i64 0, i64 9223372036854775807 }
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7history17DeletionTimeRange7IsValidEv(%"class.history::DeletionTimeRange"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.history::DeletionTimeRange", %"class.history::DeletionTimeRange"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.history::DeletionTimeRange", %"class.history::DeletionTimeRange"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp sle i64 %7, %3
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7history17DeletionTimeRange9IsAllTimeEv(%"class.history::DeletionTimeRange"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.history::DeletionTimeRange", %"class.history::DeletionTimeRange"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.history::DeletionTimeRange", %"class.history::DeletionTimeRange"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = icmp eq i64 %7, 9223372036854775807
  %10 = or i1 %8, %9
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12DeletionInfo13ForAllHistoryEv(%"class.history::DeletionInfo"* noalias sret) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::set", align 8
  %3 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = bitcast %"class.history::DeletionInfo"* %0 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9223372036854775807>, <2 x i64>* %7, align 8
  %8 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::vector.93"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  %11 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = bitcast %"class.std::__1::__compressed_pair.49"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #14
  %16 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node_base"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0
  call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* nonnull %20, %"class.std::__1::__tree_node.133"* null) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12DeletionInfo7ForUrlsENSt3__16vectorINS_6URLRowENS1_9allocatorIS3_EEEENS1_3setI4GURLNS1_4lessIS8_EENS4_IS8_EEEE(%"class.history::DeletionInfo"* noalias sret, %"class.std::__1::vector.93"* nocapture, %"class.std::__1::set"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::set", align 8
  %5 = bitcast %"class.std::__1::vector.93"* %1 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.history::URLRow"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.93"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #14
  %11 = bitcast %"class.std::__1::set"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::set"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__compressed_pair.49"* %15 to i64*
  %17 = bitcast %"class.std::__1::__compressed_pair.49"* %14 to i64*
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = inttoptr i64 %18 to %"class.std::__1::__tree_node.133"*
  br i1 %22, label %25, label %28

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"** %26, align 8
  %27 = ptrtoint %"class.std::__1::__tree_end_node"* %23 to i64
  br label %35

28:                                               ; preds = %3
  %29 = inttoptr i64 %18 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %30, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #14
  %34 = load i64, i64* %20, align 8
  br label %35

35:                                               ; preds = %25, %28
  %36 = phi i64 [ 0, %25 ], [ %34, %28 ]
  %37 = phi i64 [ %27, %25 ], [ %12, %28 ]
  %38 = bitcast %"class.history::DeletionInfo"* %0 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 -9223372036854775808>, <2 x i64>* %38, align 8
  %39 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 1
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2
  %41 = bitcast %"class.std::__1::vector.93"* %40 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.history::URLRow"** %42 to i64*
  store i64 %9, i64* %43, align 8
  %44 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3
  %45 = bitcast %"class.std::__1::set"* %44 to i64*
  store i64 %37, i64* %45, align 8
  %46 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %47 = bitcast %"class.std::__1::__compressed_pair.49"* %46 to i64*
  store i64 %18, i64* %47, align 8
  %48 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i64 %36, i64* %48, align 8
  %49 = icmp eq i64 %36, 0
  %50 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  br i1 %49, label %51, label %53

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %44, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"** %52, align 8
  br label %58

53:                                               ; preds = %35
  %54 = inttoptr i64 %18 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"** %56, align 8
  store %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = bitcast %"class.std::__1::__tree_end_node"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #14
  br label %58

58:                                               ; preds = %53, %51
  %59 = phi %"class.std::__1::__tree_node.133"* [ %24, %51 ], [ null, %53 ]
  %60 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #14
  %61 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %63 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %64 = bitcast %"class.std::__1::__tree_node_base"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %62, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0
  call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* nonnull %65, %"class.std::__1::__tree_node.133"* %59) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12DeletionInfoC2ERKNS_17DeletionTimeRangeEbNSt3__16vectorINS_6URLRowENS4_9allocatorIS6_EEEENS4_3setI4GURLNS4_4lessISB_EENS7_ISB_EEEEN4absl8optionalISF_EE(%"class.history::DeletionInfo"*, %"class.history::DeletionTimeRange"* nocapture readonly dereferenceable(16), i1 zeroext, %"class.std::__1::vector.93"* nocapture, %"class.std::__1::set"*, %"class.absl::optional.100"*) unnamed_addr #3 align 2 {
  %7 = zext i1 %2 to i8
  %8 = bitcast %"class.history::DeletionInfo"* %0 to i8*
  %9 = bitcast %"class.history::DeletionTimeRange"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 1
  store i8 %7, i8* %10, align 8
  %11 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::vector.93"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #14
  %13 = bitcast %"class.std::__1::vector.93"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.93"* %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %3, i64 0, i32 0, i32 1
  %17 = bitcast %"class.history::URLRow"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %20 = bitcast %"class.history::URLRow"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.history::URLRow"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.history::URLRow"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.std::__1::vector.93"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #14
  %27 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3
  %28 = bitcast %"class.std::__1::set"* %4 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::set"* %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::__compressed_pair.49"* %32 to i64*
  %34 = bitcast %"class.std::__1::__compressed_pair.49"* %31 to i64*
  %35 = load i64, i64* %33, align 8
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  %40 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  br i1 %39, label %41, label %43

41:                                               ; preds = %6
  %42 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %27, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %42, align 8
  br label %49

43:                                               ; preds = %6
  %44 = inttoptr i64 %35 to %"class.std::__1::__tree_node_base"*
  %45 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %47, %"class.std::__1::__tree_end_node"** %45, align 8
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #14
  br label %49

49:                                               ; preds = %41, %43
  %50 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.absl::optional.100", %"class.absl::optional.100"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 32, i1 false) #14
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %79, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.absl::optional.100", %"class.absl::optional.100"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = bitcast %"class.std::__1::set"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::set"* %56 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.absl::optional.100", %"class.absl::optional.100"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %62 = bitcast %"class.std::__1::__compressed_pair.49"* %61 to i64*
  %63 = bitcast %"class.std::__1::__compressed_pair.49"* %60 to i64*
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.absl::optional.100", %"class.absl::optional.100"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %65, align 8
  store i64 %67, i64* %66, align 8
  %68 = icmp eq i64 %67, 0
  %69 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  br i1 %68, label %70, label %72

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %56, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %71, align 8
  br label %78

72:                                               ; preds = %54
  %73 = inttoptr i64 %64 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %55, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %73, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %75, align 8
  %76 = getelementptr inbounds %"class.absl::optional.100", %"class.absl::optional.100"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %76, %"class.std::__1::__tree_end_node"** %74, align 8
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #14
  br label %78

78:                                               ; preds = %72, %70
  store i8 1, i8* %50, align 8
  br label %79

79:                                               ; preds = %49, %78
  %80 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %82 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %83 = bitcast %"class.std::__1::__tree_node_base"** %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %82, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12DeletionInfoD2Ev(%"class.history::DeletionInfo"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0
  %3 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLNS_4pairIiN4base4TimeEEEEENS_19__map_value_compareIS2_S7_NS_4lessIS2_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.106"* %2, %"class.std::__1::__tree_node"* %5) #14
  %6 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.133"**
  %13 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %12, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* %10, %"class.std::__1::__tree_node.133"* %13) #14
  store i8 0, i8* %6, align 8
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.133"**
  %18 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %17, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* %15, %"class.std::__1::__tree_node.133"* %18) #14
  %19 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.history::URLRow"*, %"class.history::URLRow"** %20, align 8
  %22 = icmp eq %"class.history::URLRow"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %14
  %24 = bitcast %"class.history::URLRow"* %21 to i8*
  %25 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %26 = load %"class.history::URLRow"*, %"class.history::URLRow"** %25, align 8
  %27 = icmp eq %"class.history::URLRow"* %26, %21
  br i1 %27, label %38, label %28

28:                                               ; preds = %23, %28
  %29 = phi %"class.history::URLRow"* [ %30, %28 ], [ %26, %23 ]
  %30 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %29, i64 -1
  %31 = bitcast %"class.history::URLRow"* %30 to void (%"class.history::URLRow"*)***
  %32 = load void (%"class.history::URLRow"*)**, void (%"class.history::URLRow"*)*** %31, align 8
  %33 = load void (%"class.history::URLRow"*)*, void (%"class.history::URLRow"*)** %32, align 8
  tail call void %33(%"class.history::URLRow"* %30) #14
  %34 = icmp eq %"class.history::URLRow"* %30, %21
  br i1 %34, label %35, label %28

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.93"* %19 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %23
  %39 = phi i8* [ %37, %35 ], [ %24, %23 ]
  store %"class.history::URLRow"* %21, %"class.history::URLRow"** %25, align 8
  tail call void @_ZdlPv(i8* %39) #15
  br label %40

40:                                               ; preds = %14, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history12DeletionInfoC2EOS0_(%"class.history::DeletionInfo"*, %"class.history::DeletionInfo"* dereferenceable(128)) unnamed_addr #3 align 2 {
  %3 = bitcast %"class.history::DeletionInfo"* %0 to i8*
  %4 = bitcast %"class.history::DeletionInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 17, i1 false)
  %5 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 2
  %7 = bitcast %"class.std::__1::vector.93"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %8 = bitcast %"class.std::__1::vector.93"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.93"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.history::URLRow"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = bitcast %"class.history::URLRow"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.history::URLRow"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.history::URLRow"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector.93"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #14
  %22 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 3
  %24 = bitcast %"class.std::__1::set"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::set"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %28 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 3, i32 0, i32 1
  %29 = bitcast %"class.std::__1::__compressed_pair.49"* %28 to i64*
  %30 = bitcast %"class.std::__1::__compressed_pair.49"* %27 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  %32 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  %36 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  br i1 %35, label %37, label %39

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %22, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %36, %"class.std::__1::__tree_end_node"** %38, align 8
  br label %45

39:                                               ; preds = %2
  %40 = inttoptr i64 %31 to %"class.std::__1::__tree_node_base"*
  %41 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %23, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %36, %"class.std::__1::__tree_end_node"** %42, align 8
  %43 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %41, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #14
  br label %45

45:                                               ; preds = %37, %39
  %46 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #14
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %75, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = bitcast %"class.std::__1::set"* %51 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::set"* %52 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::__compressed_pair.49"* %57 to i64*
  %59 = bitcast %"class.std::__1::__compressed_pair.49"* %56 to i64*
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %61, align 8
  store i64 %63, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  %65 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  br i1 %64, label %66, label %68

66:                                               ; preds = %50
  %67 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %52, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %65, %"class.std::__1::__tree_end_node"** %67, align 8
  br label %74

68:                                               ; preds = %50
  %69 = inttoptr i64 %60 to %"class.std::__1::__tree_node_base"*
  %70 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %51, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %65, %"class.std::__1::__tree_end_node"** %71, align 8
  %72 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %70, align 8
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #14
  br label %74

74:                                               ; preds = %68, %66
  store i8 1, i8* %46, align 8
  br label %75

75:                                               ; preds = %45, %74
  %76 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5
  %77 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 5
  %78 = bitcast %"class.std::__1::map.105"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::map.105"* %76 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %82 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %83 = bitcast %"class.std::__1::__compressed_pair.107"* %82 to i64*
  %84 = bitcast %"class.std::__1::__compressed_pair.107"* %81 to i64*
  %85 = load i64, i64* %83, align 8
  store i64 %85, i64* %84, align 8
  %86 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %87 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %86, align 8
  store i64 %88, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  %90 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  br i1 %89, label %91, label %93

91:                                               ; preds = %75
  %92 = getelementptr inbounds %"class.std::__1::map.105", %"class.std::__1::map.105"* %76, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %90, %"class.std::__1::__tree_end_node"** %92, align 8
  br label %99

93:                                               ; preds = %75
  %94 = inttoptr i64 %85 to %"class.std::__1::__tree_node_base"*
  %95 = getelementptr inbounds %"class.std::__1::map.105", %"class.std::__1::map.105"* %77, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %94, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %90, %"class.std::__1::__tree_end_node"** %96, align 8
  %97 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %97, %"class.std::__1::__tree_end_node"** %95, align 8
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #14
  br label %99

99:                                               ; preds = %91, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(128) %"class.history::DeletionInfo"* @_ZN7history12DeletionInfoaSEOS0_(%"class.history::DeletionInfo"* returned, %"class.history::DeletionInfo"* dereferenceable(128)) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.history::DeletionInfo"* %0 to i8*
  %4 = bitcast %"class.history::DeletionInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 17, i1 false)
  %5 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.history::URLRow"*, %"class.history::URLRow"** %7, align 8
  %9 = icmp eq %"class.history::URLRow"* %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.history::URLRow"* %8 to i8*
  %12 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load %"class.history::URLRow"*, %"class.history::URLRow"** %12, align 8
  %14 = icmp eq %"class.history::URLRow"* %13, %8
  br i1 %14, label %25, label %15

15:                                               ; preds = %10, %15
  %16 = phi %"class.history::URLRow"* [ %17, %15 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %16, i64 -1
  %18 = bitcast %"class.history::URLRow"* %17 to void (%"class.history::URLRow"*)***
  %19 = load void (%"class.history::URLRow"*)**, void (%"class.history::URLRow"*)*** %18, align 8
  %20 = load void (%"class.history::URLRow"*)*, void (%"class.history::URLRow"*)** %19, align 8
  tail call void %20(%"class.history::URLRow"* %17) #14
  %21 = icmp eq %"class.history::URLRow"* %17, %8
  br i1 %21, label %22, label %15

22:                                               ; preds = %15
  %23 = bitcast %"class.std::__1::vector.93"* %5 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %10
  %26 = phi i8* [ %24, %22 ], [ %11, %10 ]
  store %"class.history::URLRow"* %8, %"class.history::URLRow"** %12, align 8
  tail call void @_ZdlPv(i8* %26) #15
  %27 = bitcast %"class.std::__1::vector.93"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #14
  br label %28

28:                                               ; preds = %2, %25
  %29 = bitcast %"class.std::__1::vector.93"* %6 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.93"* %5 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 2, i32 0, i32 1
  %33 = bitcast %"class.history::URLRow"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %36 = bitcast %"class.history::URLRow"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.history::URLRow"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.history::URLRow"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.93"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #14
  %43 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 3
  %45 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %43, i64 0, i32 0
  %46 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node.133"**
  %48 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %47, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* %45, %"class.std::__1::__tree_node.133"* %48) #14
  %49 = bitcast %"class.std::__1::set"* %44 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::set"* %43 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to i64*
  %54 = bitcast %"class.std::__1::__tree_end_node"* %46 to i64*
  %55 = load i64, i64* %53, align 8
  store i64 %55, i64* %54, align 8
  %56 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %28
  %61 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %43, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %46, %"class.std::__1::__tree_end_node"** %61, align 8
  br label %67

62:                                               ; preds = %28
  %63 = inttoptr i64 %55 to %"class.std::__1::__tree_node_base"*
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %46, %"class.std::__1::__tree_end_node"** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %44, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"** %65, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #14
  br label %67

67:                                               ; preds = %60, %62
  %68 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 4, i32 0
  %69 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 4, i32 0
  %70 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data.101"* @_ZN4absl17optional_internal13optional_dataINSt3__13setI4GURLNS2_4lessIS4_EENS2_9allocatorIS4_EEEELb0EEaSEOSA_(%"class.absl::optional_internal::optional_data.101"* %68, %"class.absl::optional_internal::optional_data.101"* dereferenceable(32) %69) #14
  %71 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5
  %72 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 5
  %73 = getelementptr inbounds %"class.std::__1::map.105", %"class.std::__1::map.105"* %71, i64 0, i32 0
  %74 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node"**
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %75, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLNS_4pairIiN4base4TimeEEEEENS_19__map_value_compareIS2_S7_NS_4lessIS2_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.106"* %73, %"class.std::__1::__tree_node"* %76) #14
  %77 = bitcast %"class.std::__1::map.105"* %72 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::map.105"* %71 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to i64*
  %82 = bitcast %"class.std::__1::__tree_end_node"* %74 to i64*
  %83 = load i64, i64* %81, align 8
  store i64 %83, i64* %82, align 8
  %84 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %85 = getelementptr inbounds %"class.history::DeletionInfo", %"class.history::DeletionInfo"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %84, align 8
  store i64 %86, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %67
  %89 = getelementptr inbounds %"class.std::__1::map.105", %"class.std::__1::map.105"* %71, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %89, align 8
  br label %95

90:                                               ; preds = %67
  %91 = inttoptr i64 %83 to %"class.std::__1::__tree_node_base"*
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::map.105", %"class.std::__1::map.105"* %72, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %80, %"class.std::__1::__tree_end_node"** %93, align 8
  %94 = bitcast %"class.std::__1::__tree_end_node"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #14
  br label %95

95:                                               ; preds = %88, %90
  ret %"class.history::DeletionInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14AnnotatedVisitC2Ev(%"struct.history::AnnotatedVisit"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 0
  tail call void @_ZN7history6URLRowC1Ev(%"class.history::URLRow"* %2) #14
  %3 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 1, i32 6
  %5 = bitcast %"class.history::VisitRow"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 36, i1 false) #14
  %6 = bitcast i64* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 17, i1 false) #14
  %7 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 2, i32 7, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 6, i1 false) #14
  store i64 -1000000, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 2, i32 8
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 3, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 3, i32 1
  tail call void @_ZN7history28VisitContentModelAnnotationsC1Ev(%"struct.history::VisitContentModelAnnotations"* %11) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14AnnotatedVisitC2ENS_6URLRowENS_8VisitRowENS_23VisitContextAnnotationsENS_23VisitContentAnnotationsE(%"struct.history::AnnotatedVisit"*, %"class.history::URLRow"*, %"class.history::VisitRow"* nocapture readonly, %"struct.history::VisitContextAnnotations"* nocapture readonly byval(%"struct.history::VisitContextAnnotations") align 8, %"struct.history::VisitContentAnnotations"*) unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 0
  tail call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %6, %"class.history::URLRow"* dereferenceable(184) %1) #14
  %7 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 1
  %8 = bitcast %"class.history::VisitRow"* %7 to i8*
  %9 = bitcast %"class.history::VisitRow"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 64, i1 false)
  %10 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.history::VisitContextAnnotations", %"struct.history::VisitContextAnnotations"* %3, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %11, i64 24, i1 false)
  %12 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %4, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 3, i32 1
  %16 = getelementptr inbounds %"struct.history::VisitContentAnnotations", %"struct.history::VisitContentAnnotations"* %4, i64 0, i32 1
  tail call void @_ZN7history28VisitContentModelAnnotationsC1ERKS0_(%"struct.history::VisitContentModelAnnotations"* %15, %"struct.history::VisitContentModelAnnotations"* dereferenceable(40) %16) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14AnnotatedVisitC2ERKS0_(%"struct.history::AnnotatedVisit"*, %"struct.history::AnnotatedVisit"* dereferenceable(320)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %1, i64 0, i32 0
  tail call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %3, %"class.history::URLRow"* dereferenceable(184) %4) #14
  %5 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %1, i64 0, i32 1
  %7 = bitcast %"class.history::VisitRow"* %5 to i8*
  %8 = bitcast %"class.history::VisitRow"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 84, i1 false)
  %9 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 3, i32 0
  %10 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %1, i64 0, i32 3, i32 0
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 3, i32 1
  %13 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %1, i64 0, i32 3, i32 1
  tail call void @_ZN7history28VisitContentModelAnnotationsC1ERKS0_(%"struct.history::VisitContentModelAnnotations"* %12, %"struct.history::VisitContentModelAnnotations"* dereferenceable(40) %13) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history14AnnotatedVisitD2Ev(%"struct.history::AnnotatedVisit"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 3, i32 1
  tail call void @_ZN7history28VisitContentModelAnnotationsD1Ev(%"struct.history::VisitContentModelAnnotations"* %2) #14
  %3 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %0, i64 0, i32 0
  tail call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history7ClusterC2Ev(%"struct.history::Cluster"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"struct.history::Cluster"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history7ClusterC2ERKS0_(%"struct.history::Cluster"*, %"struct.history::Cluster"* dereferenceable(48)) unnamed_addr #3 align 2 {
  %3 = bitcast %"struct.history::Cluster"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #14
  %4 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string.4"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.history::Cluster"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %226, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 768614336404564650
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.history::Cluster"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #16
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #15
  %18 = bitcast i8* %17 to %"class.std::__1::basic_string.4"*
  %19 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string.4"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"struct.history::Cluster"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %18, i64 %10
  %23 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string.4"* %22, %"class.std::__1::basic_string.4"** %23, align 8
  %24 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %24, align 8
  %26 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %4, align 8
  %27 = bitcast %"class.std::__1::basic_string.4"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.std::__1::basic_string.4"* %25, %26
  br i1 %29, label %224, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.std::__1::basic_string.4"*
  br label %32

32:                                               ; preds = %218, %30
  %33 = phi %"class.std::__1::basic_string.4"* [ %220, %218 ], [ %31, %30 ]
  %34 = phi %"class.std::__1::basic_string.4"* [ %219, %218 ], [ %25, %30 ]
  %35 = bitcast %"class.std::__1::basic_string.4"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::basic_string.4"* %33 to i8*
  %41 = bitcast %"class.std::__1::basic_string.4"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #14
  br label %218

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, 11
  br i1 %47, label %48, label %53

48:                                               ; preds = %42
  %49 = bitcast %"class.std::__1::basic_string.4"* %33 to i16*
  %50 = trunc i64 %46 to i8
  %51 = bitcast %"class.std::__1::basic_string.4"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  store i8 %50, i8* %52, align 1
  br label %70

53:                                               ; preds = %42
  %54 = icmp ugt i64 %46, 9223372036854775791
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::basic_string.4"* %33 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %56) #16
  unreachable

57:                                               ; preds = %53
  %58 = add nuw nsw i64 %46, 8
  %59 = and i64 %58, -8
  %60 = icmp slt i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  tail call void @abort() #16
  unreachable

62:                                               ; preds = %57
  %63 = shl i64 %59, 1
  %64 = tail call i8* @_Znwm(i64 %63) #15
  %65 = bitcast i8* %64 to i16*
  %66 = bitcast %"class.std::__1::basic_string.4"* %33 to i8**
  store i8* %64, i8** %66, align 8
  %67 = or i64 %59, -9223372036854775808
  %68 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %46, i64* %69, align 8
  br label %70

70:                                               ; preds = %62, %48
  %71 = phi i16* [ %49, %48 ], [ %65, %62 ]
  %72 = add nuw nsw i64 %46, 1
  %73 = add i64 %46, 1
  %74 = icmp ult i64 %73, 16
  br i1 %74, label %165, label %75

75:                                               ; preds = %70
  %76 = getelementptr i16, i16* %71, i64 1
  %77 = getelementptr i16, i16* %76, i64 %46
  %78 = getelementptr i16, i16* %44, i64 1
  %79 = getelementptr i16, i16* %78, i64 %46
  %80 = icmp ult i16* %71, %79
  %81 = icmp ult i16* %44, %77
  %82 = and i1 %80, %81
  br i1 %82, label %165, label %83

83:                                               ; preds = %75
  %84 = and i64 %73, -16
  %85 = sub i64 %72, %84
  %86 = getelementptr i16, i16* %44, i64 %84
  %87 = getelementptr i16, i16* %71, i64 %84
  %88 = add i64 %84, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %144, label %93

93:                                               ; preds = %83
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i16, i16* %44, i64 %96
  %99 = getelementptr i16, i16* %71, i64 %96
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !79
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !79
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !82, !noalias !79
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !82, !noalias !79
  %108 = or i64 %96, 16
  %109 = getelementptr i16, i16* %44, i64 %108
  %110 = getelementptr i16, i16* %71, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !79
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !79
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !82, !noalias !79
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !82, !noalias !79
  %119 = or i64 %96, 32
  %120 = getelementptr i16, i16* %44, i64 %119
  %121 = getelementptr i16, i16* %71, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !79
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !79
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !82, !noalias !79
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !82, !noalias !79
  %130 = or i64 %96, 48
  %131 = getelementptr i16, i16* %44, i64 %130
  %132 = getelementptr i16, i16* %71, i64 %130
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !79
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !79
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !82, !noalias !79
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !82, !noalias !79
  %141 = add i64 %96, 64
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !84

144:                                              ; preds = %95, %83
  %145 = phi i64 [ 0, %83 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i16, i16* %44, i64 %148
  %151 = getelementptr i16, i16* %71, i64 %148
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !79
  %154 = getelementptr i16, i16* %150, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !79
  %157 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !82, !noalias !79
  %158 = getelementptr i16, i16* %151, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !82, !noalias !79
  %160 = add i64 %148, 16
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !85

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %73, %84
  br i1 %164, label %218, label %165

165:                                              ; preds = %163, %75, %70
  %166 = phi i64 [ %72, %75 ], [ %72, %70 ], [ %85, %163 ]
  %167 = phi i16* [ %44, %75 ], [ %44, %70 ], [ %86, %163 ]
  %168 = phi i16* [ %71, %75 ], [ %71, %70 ], [ %87, %163 ]
  %169 = add i64 %166, -1
  %170 = and i64 %166, 7
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %183, label %172

172:                                              ; preds = %165, %172
  %173 = phi i64 [ %178, %172 ], [ %166, %165 ]
  %174 = phi i16* [ %180, %172 ], [ %167, %165 ]
  %175 = phi i16* [ %179, %172 ], [ %168, %165 ]
  %176 = phi i64 [ %181, %172 ], [ %170, %165 ]
  %177 = load i16, i16* %174, align 2
  store i16 %177, i16* %175, align 2
  %178 = add i64 %173, -1
  %179 = getelementptr inbounds i16, i16* %175, i64 1
  %180 = getelementptr inbounds i16, i16* %174, i64 1
  %181 = add i64 %176, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %172, !llvm.loop !86

183:                                              ; preds = %172, %165
  %184 = phi i64 [ %166, %165 ], [ %178, %172 ]
  %185 = phi i16* [ %167, %165 ], [ %180, %172 ]
  %186 = phi i16* [ %168, %165 ], [ %179, %172 ]
  %187 = icmp ult i64 %169, 7
  br i1 %187, label %218, label %188

188:                                              ; preds = %183, %188
  %189 = phi i64 [ %214, %188 ], [ %184, %183 ]
  %190 = phi i16* [ %216, %188 ], [ %185, %183 ]
  %191 = phi i16* [ %215, %188 ], [ %186, %183 ]
  %192 = load i16, i16* %190, align 2
  store i16 %192, i16* %191, align 2
  %193 = getelementptr inbounds i16, i16* %191, i64 1
  %194 = getelementptr inbounds i16, i16* %190, i64 1
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %191, i64 2
  %197 = getelementptr inbounds i16, i16* %190, i64 2
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %191, i64 3
  %200 = getelementptr inbounds i16, i16* %190, i64 3
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %191, i64 4
  %203 = getelementptr inbounds i16, i16* %190, i64 4
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %191, i64 5
  %206 = getelementptr inbounds i16, i16* %190, i64 5
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %191, i64 6
  %209 = getelementptr inbounds i16, i16* %190, i64 6
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %191, i64 7
  %212 = getelementptr inbounds i16, i16* %190, i64 7
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = add i64 %189, -8
  %215 = getelementptr inbounds i16, i16* %191, i64 8
  %216 = getelementptr inbounds i16, i16* %190, i64 8
  %217 = icmp eq i64 %214, 0
  br i1 %217, label %218, label %188, !llvm.loop !87

218:                                              ; preds = %183, %188, %163, %39
  %219 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %34, i64 1
  %220 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %33, i64 1
  %221 = icmp eq %"class.std::__1::basic_string.4"* %219, %26
  br i1 %221, label %222, label %32

222:                                              ; preds = %218
  %223 = ptrtoint %"class.std::__1::basic_string.4"* %220 to i64
  br label %224

224:                                              ; preds = %16, %222
  %225 = phi i64 [ %28, %16 ], [ %223, %222 ]
  store i64 %225, i64* %27, align 8
  br label %226

226:                                              ; preds = %2, %224
  %227 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %0, i64 0, i32 1
  %228 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %1, i64 0, i32 1
  tail call void @_ZNSt3__16vectorIN7history14AnnotatedVisitENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.121"* %227, %"class.std::__1::vector.121"* dereferenceable(24) %228)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history14AnnotatedVisitENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.121"*, %"class.std::__1::vector.121"* dereferenceable(24)) unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.121"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #14
  %4 = getelementptr inbounds %"class.std::__1::vector.121", %"class.std::__1::vector.121"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.history::AnnotatedVisit"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.121"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 320
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %53, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 57646075230342348
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.121"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #16
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #15
  %18 = bitcast i8* %17 to %"struct.history::AnnotatedVisit"*
  %19 = getelementptr inbounds %"class.std::__1::vector.121", %"class.std::__1::vector.121"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.history::AnnotatedVisit"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.121"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.121", %"class.std::__1::vector.121"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.history::AnnotatedVisit"* %22, %"struct.history::AnnotatedVisit"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.121", %"class.std::__1::vector.121"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.history::AnnotatedVisit"*, %"struct.history::AnnotatedVisit"** %24, align 8
  %26 = load %"struct.history::AnnotatedVisit"*, %"struct.history::AnnotatedVisit"** %4, align 8
  %27 = bitcast %"struct.history::AnnotatedVisit"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.history::AnnotatedVisit"* %25, %26
  br i1 %29, label %51, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.history::AnnotatedVisit"*
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi %"struct.history::AnnotatedVisit"* [ %47, %32 ], [ %31, %30 ]
  %34 = phi %"struct.history::AnnotatedVisit"* [ %46, %32 ], [ %25, %30 ]
  %35 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %33, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %34, i64 0, i32 0
  tail call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %35, %"class.history::URLRow"* dereferenceable(184) %36) #14
  %37 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %33, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %34, i64 0, i32 1
  %39 = bitcast %"class.history::VisitRow"* %37 to i8*
  %40 = bitcast %"class.history::VisitRow"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 84, i1 false) #14
  %41 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %33, i64 0, i32 3, i32 0
  %42 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %34, i64 0, i32 3, i32 0
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %33, i64 0, i32 3, i32 1
  %45 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %34, i64 0, i32 3, i32 1
  tail call void @_ZN7history28VisitContentModelAnnotationsC1ERKS0_(%"struct.history::VisitContentModelAnnotations"* %44, %"struct.history::VisitContentModelAnnotations"* dereferenceable(40) %45) #14
  %46 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %34, i64 1
  %47 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %33, i64 1
  %48 = icmp eq %"struct.history::AnnotatedVisit"* %46, %26
  br i1 %48, label %49, label %32

49:                                               ; preds = %32
  %50 = ptrtoint %"struct.history::AnnotatedVisit"* %47 to i64
  br label %51

51:                                               ; preds = %16, %49
  %52 = phi i64 [ %28, %16 ], [ %50, %49 ]
  store i64 %52, i64* %27, align 8
  br label %53

53:                                               ; preds = %2, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history7ClusterD2Ev(%"struct.history::Cluster"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.121", %"class.std::__1::vector.121"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.history::AnnotatedVisit"*, %"struct.history::AnnotatedVisit"** %3, align 8
  %5 = icmp eq %"struct.history::AnnotatedVisit"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.history::AnnotatedVisit"* %4 to i8*
  %8 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.history::AnnotatedVisit"*, %"struct.history::AnnotatedVisit"** %8, align 8
  %10 = icmp eq %"struct.history::AnnotatedVisit"* %9, %4
  br i1 %10, label %20, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.history::AnnotatedVisit"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %12, i64 -1, i32 3, i32 1
  tail call void @_ZN7history28VisitContentModelAnnotationsD1Ev(%"struct.history::VisitContentModelAnnotations"* %14) #14
  %15 = getelementptr inbounds %"struct.history::AnnotatedVisit", %"struct.history::AnnotatedVisit"* %13, i64 0, i32 0
  tail call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* %15) #14
  %16 = icmp eq %"struct.history::AnnotatedVisit"* %13, %4
  br i1 %16, label %17, label %11

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::vector.121"* %2 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %17, %6
  %21 = phi i8* [ %19, %17 ], [ %7, %6 ]
  store %"struct.history::AnnotatedVisit"* %4, %"struct.history::AnnotatedVisit"** %8, align 8
  tail call void @_ZdlPv(i8* %21) #15
  br label %22

22:                                               ; preds = %1, %20
  %23 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %23, align 8
  %25 = icmp eq %"class.std::__1::basic_string.4"* %24, null
  br i1 %25, label %48, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::basic_string.4"* %24 to i8*
  %28 = getelementptr inbounds %"struct.history::Cluster", %"struct.history::Cluster"* %0, i64 0, i32 0, i32 0, i32 1
  %29 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %28, align 8
  %30 = icmp eq %"class.std::__1::basic_string.4"* %29, %24
  br i1 %30, label %46, label %31

31:                                               ; preds = %26, %41
  %32 = phi %"class.std::__1::basic_string.4"* [ %33, %41 ], [ %29, %26 ]
  %33 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %32, i64 -1
  %34 = bitcast %"class.std::__1::basic_string.4"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string.4"* %33 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #15
  br label %41

41:                                               ; preds = %38, %31
  %42 = icmp eq %"class.std::__1::basic_string.4"* %33, %24
  br i1 %42, label %43, label %31

43:                                               ; preds = %41
  %44 = bitcast %"struct.history::Cluster"* %0 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %26
  %47 = phi i8* [ %45, %43 ], [ %27, %26 ]
  store %"class.std::__1::basic_string.4"* %24, %"class.std::__1::basic_string.4"** %28, align 8
  tail call void @_ZdlPv(i8* %47) #15
  br label %48

48:                                               ; preds = %22, %46
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #14
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !78
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #14
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #14
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #14
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #9

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional_internal::optional_data.101"* @_ZN4absl17optional_internal13optional_dataINSt3__13setI4GURLNS2_4lessIS4_EENS2_9allocatorIS4_EEEELb0EEaSEOSA_(%"class.absl::optional_internal::optional_data.101"*, %"class.absl::optional_internal::optional_data.101"* dereferenceable(32)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %35, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node.133"**
  %16 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %15, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* %13, %"class.std::__1::__tree_node.133"* %16) #14
  %17 = bitcast %"class.std::__1::set"* %7 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::set"* %11 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to i64*
  %22 = bitcast %"class.std::__1::__tree_end_node"* %14 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %29, align 8
  br label %67

30:                                               ; preds = %12
  %31 = inttoptr i64 %23 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"** %33, align 8
  %34 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #14
  br label %67

35:                                               ; preds = %6
  %36 = bitcast %"class.std::__1::set"* %7 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::set"* %11 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::__compressed_pair.49"* %40 to i64*
  %42 = bitcast %"class.std::__1::__compressed_pair.49"* %39 to i64*
  %43 = load i64, i64* %41, align 8
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %46 = load i64, i64* %44, align 8
  store i64 %46, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  %48 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  br i1 %47, label %49, label %51

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %50, align 8
  br label %57

51:                                               ; preds = %35
  %52 = inttoptr i64 %43 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"** %53, align 8
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #14
  br label %57

57:                                               ; preds = %51, %49
  store i8 1, i8* %8, align 8
  br label %67

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %64 = getelementptr inbounds %"class.absl::optional_internal::optional_data.101", %"class.absl::optional_internal::optional_data.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node.133"**
  %66 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %65, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* %63, %"class.std::__1::__tree_node.133"* %66) #14
  store i8 0, i8* %59, align 8
  br label %67

67:                                               ; preds = %62, %58, %57, %30, %28
  ret %"class.absl::optional_internal::optional_data.101"* %0
}

declare void @_ZN7history28VisitContentModelAnnotationsC1Ev(%"struct.history::VisitContentModelAnnotations"*) unnamed_addr #5

declare void @_ZN7history28VisitContentModelAnnotationsC1ERKS0_(%"struct.history::VisitContentModelAnnotations"*, %"struct.history::VisitContentModelAnnotations"* dereferenceable(40)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7history28VisitContentModelAnnotationsD1Ev(%"struct.history::VisitContentModelAnnotations"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #3 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #16
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #16
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #15
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !88
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !88
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !91, !noalias !88
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !91, !noalias !88
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !88
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !88
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !91, !noalias !88
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !91, !noalias !88
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !88
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !88
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !91, !noalias !88
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !91, !noalias !88
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !88
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !88
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !91, !noalias !88
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !91, !noalias !88
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !93

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !88
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !88
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !91, !noalias !88
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !91, !noalias !88
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !94

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !95

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !96

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !97

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !98

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !99

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !101
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !101
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !104, !noalias !101
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !104, !noalias !101
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !101
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !101
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !104, !noalias !101
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !104, !noalias !101
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !101
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !101
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !104, !noalias !101
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !104, !noalias !101
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !101
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !101
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !104, !noalias !101
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !104, !noalias !101
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !106

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !101
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !101
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !104, !noalias !101
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !104, !noalias !101
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !107

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !108

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !109

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #15
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeI4GURLNS_4pairIiN4base4TimeEEEEENS_19__map_value_compareIS2_S7_NS_4lessIS2_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.106"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLNS_4pairIiN4base4TimeEEEEENS_19__map_value_compareIS2_S7_NS_4lessIS2_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.106"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLNS_4pairIiN4base4TimeEEEEENS_19__map_value_compareIS2_S7_NS_4lessIS2_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.106"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %10) #14
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #15
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.131"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.131"* %1, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.131"* %1 to %"class.std::__1::__tree_node.131"**
  %6 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.131"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.131"**
  %9 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.131"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = icmp eq i64* %11, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %4
  %14 = ptrtoint i64* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %16 = bitcast i64** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %18 = load %"struct.base::StackAllocator<unsigned long, 4>::Source"*, %"struct.base::StackAllocator<unsigned long, 4>::Source"** %17, align 8
  %19 = icmp ne %"struct.base::StackAllocator<unsigned long, 4>::Source"* %18, null
  %20 = bitcast %"struct.base::StackAllocator<unsigned long, 4>::Source"* %18 to i64*
  %21 = icmp eq i64* %11, %20
  %22 = and i1 %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"struct.base::StackAllocator<unsigned long, 4>::Source", %"struct.base::StackAllocator<unsigned long, 4>::Source"* %18, i64 0, i32 1
  store i8 0, i8* %24, align 8
  br label %27

25:                                               ; preds = %13
  %26 = bitcast i64* %11 to i8*
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %4, %23, %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %28) #14
  %29 = bitcast %"class.std::__1::__tree_node.131"* %1 to i8*
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %2, %27
  ret void
}

declare zeroext i1 @_ZNK4GURLltERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"*, %"class.std::__1::__tree_node.133"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.133"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.133"* %1 to %"class.std::__1::__tree_node.133"**
  %6 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %5, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* %0, %"class.std::__1::__tree_node.133"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.133"**
  %9 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %8, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.48"* %0, %"class.std::__1::__tree_node.133"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %1, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %10) #14
  %11 = bitcast %"class.std::__1::__tree_node.133"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #15
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE25__emplace_unique_key_argsIS1_JRKS1_EEENS_4pairINS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.48"*, %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.133"**
  %6 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.133"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node.133"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %1, %class.GURL* dereferenceable(120) %13) #14
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %13, %class.GURL* dereferenceable(120) %1) #14
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node.133"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node.133"**
  %41 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node.133"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 152) #15, !noalias !110
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast i8* %45 to %class.GURL*
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %46, %class.GURL* dereferenceable(120) %2) #14, !noalias !110
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node.133"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree.48"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #14
  %65 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node.133"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare dereferenceable(320) %"class.history::URLResult"* @_ZN7history9URLResultaSERKS0_(%"class.history::URLResult"*, %"class.history::URLResult"* dereferenceable(320)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #14
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 25
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to i64**
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %65, label %50

50:                                               ; preds = %38
  %51 = ptrtoint i64* %48 to i64
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 26
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 28
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"struct.base::StackAllocator<unsigned long, 4>::Source"**
  %56 = load %"struct.base::StackAllocator<unsigned long, 4>::Source"*, %"struct.base::StackAllocator<unsigned long, 4>::Source"** %55, align 8
  %57 = icmp ne %"struct.base::StackAllocator<unsigned long, 4>::Source"* %56, null
  %58 = bitcast %"struct.base::StackAllocator<unsigned long, 4>::Source"* %56 to i64*
  %59 = icmp eq i64* %48, %58
  %60 = and i1 %57, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"struct.base::StackAllocator<unsigned long, 4>::Source", %"struct.base::StackAllocator<unsigned long, 4>::Source"* %56, i64 0, i32 1
  store i8 0, i8* %62, align 8
  br label %65

63:                                               ; preds = %50
  %64 = bitcast i64* %48 to i8*
  tail call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %38, %61, %63
  %66 = bitcast %"class.std::__1::__tree_end_node"* %45 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %66) #14
  %67 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %67) #15
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImN4base14StackAllocatorImLm4EEEE21__push_back_slow_pathIRKmEEvOT_(%"class.std::__1::vector.43"*, i64* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 1
  %5 = bitcast i64** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.43"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 2305843009213693951
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector.43"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #16
  unreachable

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i64** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, 1152921504606846975
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 2
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 2305843009213693951, %15 ]
  %29 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %30 = load %"struct.base::StackAllocator<unsigned long, 4>::Source"*, %"struct.base::StackAllocator<unsigned long, 4>::Source"** %29, align 8
  %31 = icmp eq %"struct.base::StackAllocator<unsigned long, 4>::Source"* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.base::StackAllocator<unsigned long, 4>::Source", %"struct.base::StackAllocator<unsigned long, 4>::Source"* %30, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = icmp ult i64 %28, 5
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  store i8 1, i8* %33, align 8
  %39 = bitcast %"class.base::StackAllocator"* %3 to i64**
  %40 = load i64*, i64** %39, align 8
  br label %48

41:                                               ; preds = %32, %27
  %42 = icmp ugt i64 %28, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #16
  unreachable

44:                                               ; preds = %41
  %45 = shl i64 %28, 3
  %46 = tail call i8* @_Znwm(i64 %45) #15
  %47 = bitcast i8* %46 to i64*
  br label %48

48:                                               ; preds = %22, %38, %44
  %49 = phi i64 [ 0, %22 ], [ %28, %38 ], [ %28, %44 ]
  %50 = phi i64* [ null, %22 ], [ %40, %38 ], [ %47, %44 ]
  %51 = getelementptr inbounds i64, i64* %50, i64 %10
  %52 = getelementptr inbounds i64, i64* %50, i64 %49
  %53 = ptrtoint i64* %52 to i64
  %54 = load i64, i64* %1, align 8
  store i64 %54, i64* %51, align 8
  %55 = getelementptr inbounds i64, i64* %51, i64 1
  %56 = ptrtoint i64* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = ptrtoint i64* %58 to i64
  %60 = load i64*, i64** %4, align 8
  %61 = icmp eq i64* %60, %58
  br i1 %61, label %216, label %62

62:                                               ; preds = %48
  %63 = getelementptr i64, i64* %60, i64 -1
  %64 = ptrtoint i64* %63 to i64
  %65 = sub i64 %64, %59
  %66 = lshr i64 %65, 3
  %67 = add nuw nsw i64 %66, 1
  %68 = icmp ult i64 %67, 4
  br i1 %68, label %161, label %69

69:                                               ; preds = %62
  %70 = getelementptr i64, i64* %60, i64 -1
  %71 = ptrtoint i64* %70 to i64
  %72 = sub i64 %71, %59
  %73 = lshr i64 %72, 3
  %74 = xor i64 %73, -1
  %75 = add nsw i64 %10, %74
  %76 = getelementptr i64, i64* %50, i64 %75
  %77 = xor i64 %73, -1
  %78 = getelementptr i64, i64* %60, i64 %77
  %79 = icmp ult i64* %76, %60
  %80 = icmp ult i64* %78, %51
  %81 = and i1 %79, %80
  br i1 %81, label %161, label %82

82:                                               ; preds = %69
  %83 = and i64 %67, 4611686018427387900
  %84 = sub nsw i64 0, %83
  %85 = getelementptr i64, i64* %51, i64 %84
  %86 = sub nsw i64 0, %83
  %87 = getelementptr i64, i64* %60, i64 %86
  %88 = add nsw i64 %83, -4
  %89 = lshr exact i64 %88, 2
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 1
  %92 = icmp eq i64 %88, 0
  br i1 %92, label %139, label %93

93:                                               ; preds = %82
  %94 = sub nuw nsw i64 %90, %91
  %95 = getelementptr i64, i64* %51, i64 -1
  %96 = getelementptr i64, i64* %60, i64 -1
  %97 = getelementptr i64, i64* %51, i64 -1
  %98 = getelementptr i64, i64* %60, i64 -1
  br label %99

99:                                               ; preds = %99, %93
  %100 = phi i64 [ 0, %93 ], [ %134, %99 ]
  %101 = phi i64 [ %94, %93 ], [ %135, %99 ]
  %102 = sub i64 0, %100
  %103 = sub i64 0, %100
  %104 = getelementptr inbounds i64, i64* %95, i64 %102
  %105 = getelementptr inbounds i64, i64* %96, i64 %103
  %106 = getelementptr inbounds i64, i64* %105, i64 -1
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !113
  %109 = getelementptr inbounds i64, i64* %105, i64 -2
  %110 = getelementptr inbounds i64, i64* %109, i64 -1
  %111 = bitcast i64* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !113
  %113 = getelementptr inbounds i64, i64* %104, i64 -1
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %114, align 8, !alias.scope !116, !noalias !113
  %115 = getelementptr inbounds i64, i64* %104, i64 -2
  %116 = getelementptr inbounds i64, i64* %115, i64 -1
  %117 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %117, align 8, !alias.scope !116, !noalias !113
  %118 = sub nuw nsw i64 -4, %100
  %119 = sub nuw nsw i64 -4, %100
  %120 = getelementptr inbounds i64, i64* %97, i64 %118
  %121 = getelementptr inbounds i64, i64* %98, i64 %119
  %122 = getelementptr inbounds i64, i64* %121, i64 -1
  %123 = bitcast i64* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !113
  %125 = getelementptr inbounds i64, i64* %121, i64 -2
  %126 = getelementptr inbounds i64, i64* %125, i64 -1
  %127 = bitcast i64* %126 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8, !alias.scope !113
  %129 = getelementptr inbounds i64, i64* %120, i64 -1
  %130 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %130, align 8, !alias.scope !116, !noalias !113
  %131 = getelementptr inbounds i64, i64* %120, i64 -2
  %132 = getelementptr inbounds i64, i64* %131, i64 -1
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %133, align 8, !alias.scope !116, !noalias !113
  %134 = add i64 %100, 8
  %135 = add i64 %101, -2
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %99, !llvm.loop !118

137:                                              ; preds = %99
  %138 = sub nuw nsw i64 -8, %100
  br label %139

139:                                              ; preds = %137, %82
  %140 = phi i64 [ 0, %82 ], [ %138, %137 ]
  %141 = icmp eq i64 %91, 0
  br i1 %141, label %159, label %142

142:                                              ; preds = %139
  %143 = getelementptr i64, i64* %51, i64 -1
  %144 = getelementptr i64, i64* %60, i64 -1
  %145 = getelementptr inbounds i64, i64* %143, i64 %140
  %146 = getelementptr inbounds i64, i64* %144, i64 %140
  %147 = getelementptr inbounds i64, i64* %146, i64 -1
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !113
  %150 = getelementptr inbounds i64, i64* %146, i64 -2
  %151 = getelementptr inbounds i64, i64* %150, i64 -1
  %152 = bitcast i64* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !113
  %154 = getelementptr inbounds i64, i64* %145, i64 -1
  %155 = bitcast i64* %154 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %155, align 8, !alias.scope !116, !noalias !113
  %156 = getelementptr inbounds i64, i64* %145, i64 -2
  %157 = getelementptr inbounds i64, i64* %156, i64 -1
  %158 = bitcast i64* %157 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %158, align 8, !alias.scope !116, !noalias !113
  br label %159

159:                                              ; preds = %139, %142
  %160 = icmp eq i64 %67, %83
  br i1 %160, label %213, label %161

161:                                              ; preds = %159, %69, %62
  %162 = phi i64* [ %51, %69 ], [ %51, %62 ], [ %85, %159 ]
  %163 = phi i64* [ %60, %69 ], [ %60, %62 ], [ %87, %159 ]
  %164 = getelementptr i64, i64* %163, i64 -1
  %165 = ptrtoint i64* %164 to i64
  %166 = sub i64 %165, %59
  %167 = lshr i64 %166, 3
  %168 = add nuw nsw i64 %167, 1
  %169 = and i64 %168, 7
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %180, label %171

171:                                              ; preds = %161, %171
  %172 = phi i64* [ %175, %171 ], [ %162, %161 ]
  %173 = phi i64* [ %176, %171 ], [ %163, %161 ]
  %174 = phi i64 [ %178, %171 ], [ %169, %161 ]
  %175 = getelementptr inbounds i64, i64* %172, i64 -1
  %176 = getelementptr inbounds i64, i64* %173, i64 -1
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = add i64 %174, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %171, !llvm.loop !119

180:                                              ; preds = %171, %161
  %181 = phi i64* [ undef, %161 ], [ %175, %171 ]
  %182 = phi i64* [ %162, %161 ], [ %175, %171 ]
  %183 = phi i64* [ %163, %161 ], [ %176, %171 ]
  %184 = icmp ult i64 %166, 56
  br i1 %184, label %213, label %185

185:                                              ; preds = %180, %185
  %186 = phi i64* [ %209, %185 ], [ %182, %180 ]
  %187 = phi i64* [ %210, %185 ], [ %183, %180 ]
  %188 = getelementptr inbounds i64, i64* %186, i64 -1
  %189 = getelementptr inbounds i64, i64* %187, i64 -1
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %188, align 8
  %191 = getelementptr inbounds i64, i64* %186, i64 -2
  %192 = getelementptr inbounds i64, i64* %187, i64 -2
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %191, align 8
  %194 = getelementptr inbounds i64, i64* %186, i64 -3
  %195 = getelementptr inbounds i64, i64* %187, i64 -3
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = getelementptr inbounds i64, i64* %186, i64 -4
  %198 = getelementptr inbounds i64, i64* %187, i64 -4
  %199 = load i64, i64* %198, align 8
  store i64 %199, i64* %197, align 8
  %200 = getelementptr inbounds i64, i64* %186, i64 -5
  %201 = getelementptr inbounds i64, i64* %187, i64 -5
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds i64, i64* %186, i64 -6
  %204 = getelementptr inbounds i64, i64* %187, i64 -6
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %203, align 8
  %206 = getelementptr inbounds i64, i64* %186, i64 -7
  %207 = getelementptr inbounds i64, i64* %187, i64 -7
  %208 = load i64, i64* %207, align 8
  store i64 %208, i64* %206, align 8
  %209 = getelementptr inbounds i64, i64* %186, i64 -8
  %210 = getelementptr inbounds i64, i64* %187, i64 -8
  %211 = load i64, i64* %210, align 8
  store i64 %211, i64* %209, align 8
  %212 = icmp eq i64* %210, %58
  br i1 %212, label %213, label %185, !llvm.loop !120

213:                                              ; preds = %180, %185, %159
  %214 = phi i64* [ %85, %159 ], [ %181, %180 ], [ %209, %185 ]
  %215 = load i64, i64* %7, align 8
  br label %216

216:                                              ; preds = %48, %213
  %217 = phi i64* [ %214, %213 ], [ %51, %48 ]
  %218 = phi i64 [ %215, %213 ], [ %59, %48 ]
  %219 = ptrtoint i64* %217 to i64
  store i64 %219, i64* %7, align 8
  store i64 %56, i64* %5, align 8
  store i64 %53, i64* %17, align 8
  %220 = icmp eq i64 %218, 0
  br i1 %220, label %233, label %221

221:                                              ; preds = %216
  %222 = inttoptr i64 %218 to i64*
  %223 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %224 = load %"struct.base::StackAllocator<unsigned long, 4>::Source"*, %"struct.base::StackAllocator<unsigned long, 4>::Source"** %223, align 8
  %225 = icmp ne %"struct.base::StackAllocator<unsigned long, 4>::Source"* %224, null
  %226 = bitcast %"struct.base::StackAllocator<unsigned long, 4>::Source"* %224 to i64*
  %227 = icmp eq i64* %222, %226
  %228 = and i1 %225, %227
  br i1 %228, label %229, label %231

229:                                              ; preds = %221
  %230 = getelementptr inbounds %"struct.base::StackAllocator<unsigned long, 4>::Source", %"struct.base::StackAllocator<unsigned long, 4>::Source"* %224, i64 0, i32 1
  store i8 0, i8* %230, align 8
  br label %233

231:                                              ; preds = %221
  %232 = inttoptr i64 %218 to i8*
  tail call void @_ZdlPv(i8* %232) #15
  br label %233

233:                                              ; preds = %216, %229, %231
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS2_JRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %class.GURL* dereferenceable(120), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.145"* dereferenceable(1)) local_unnamed_addr #3 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.131"**
  %8 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.131"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node.131"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %1, %class.GURL* dereferenceable(120) %15) #14
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %15, %class.GURL* dereferenceable(120) %1) #14
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node.131"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node.131"**
  %43 = load %"class.std::__1::__tree_node.131"*, %"class.std::__1::__tree_node.131"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node.131"* %43, null
  br i1 %44, label %45, label %86

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 232) #15, !noalias !121
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %class.GURL*, %class.GURL** %48, align 8, !noalias !121
  %50 = bitcast i8* %47 to %class.GURL*
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %50, %class.GURL* dereferenceable(120) %49) #14, !noalias !121
  %51 = getelementptr inbounds i8, i8* %46, i64 152
  %52 = getelementptr inbounds i8, i8* %46, i64 184
  %53 = getelementptr inbounds i8, i8* %46, i64 192
  %54 = bitcast i8* %53 to i8**
  store i8* %51, i8** %54, align 8, !noalias !121
  %55 = getelementptr inbounds i8, i8* %46, i64 200
  %56 = getelementptr inbounds i8, i8* %46, i64 224
  %57 = ptrtoint i8* %51 to i64
  %58 = bitcast i8* %56 to i64*
  store i64 %57, i64* %58, align 8, !noalias !121
  %59 = getelementptr inbounds i8, i8* %46, i64 216
  %60 = bitcast i8* %59 to i64*
  %61 = bitcast i8* %55 to i64*
  %62 = getelementptr inbounds i8, i8* %46, i64 208
  %63 = bitcast i8* %62 to i64*
  store i8 1, i8* %52, align 8, !noalias !121
  %64 = ptrtoint i8* %52 to i64
  store i64 %57, i64* %61, align 8, !noalias !121
  store i64 %57, i64* %63, align 8, !noalias !121
  store i64 %64, i64* %60, align 8, !noalias !121
  %65 = bitcast i8* %46 to %"class.std::__1::__tree_node.131"*
  %66 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %67 = getelementptr inbounds i8, i8* %46, i64 16
  %68 = bitcast i8* %67 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %68, align 8
  %69 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %45
  %76 = ptrtoint %"class.std::__1::__tree_node_base"* %73 to i64
  %77 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %76, i64* %77, align 8
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %79

79:                                               ; preds = %75, %45
  %80 = phi %"class.std::__1::__tree_node_base"* [ %66, %45 ], [ %78, %75 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %82, %"class.std::__1::__tree_node_base"* %80) #14
  %83 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %83, align 8
  br label %86

86:                                               ; preds = %79, %39
  %87 = phi i8 [ 1, %79 ], [ 0, %39 ]
  %88 = phi %"class.std::__1::__tree_node.131"* [ %65, %79 ], [ %43, %39 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_node.131", %"class.std::__1::__tree_node.131"* %88, i64 0, i32 0, i32 0
  %90 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %89, 0
  %91 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %90, i8 %87, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImN4base14StackAllocatorImLm4EEEE6assignINS_11__wrap_iterIPKmEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.43"*, i64*, i64*) local_unnamed_addr #3 comdat align 2 {
  %4 = bitcast i64* %1 to i8*
  %5 = ptrtoint i64* %1 to i64
  %6 = ptrtoint i64* %2 to i64
  %7 = sub i64 %6, %5
  %8 = ashr exact i64 %7, 3
  %9 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i64** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.43"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ugt i64 %8, %15
  %17 = inttoptr i64 %13 to i64*
  br i1 %16, label %203, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 1
  %20 = bitcast i64** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %13
  %23 = ashr exact i64 %22, 3
  %24 = icmp ugt i64 %8, %23
  %25 = getelementptr inbounds i64, i64* %1, i64 %23
  %26 = select i1 %24, i64* %25, i64* %2
  %27 = ptrtoint i64* %26 to i64
  %28 = sub i64 %27, %5
  %29 = ashr exact i64 %28, 3
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %18
  %32 = inttoptr i64 %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %4, i64 %28, i1 false) #14
  br label %33

33:                                               ; preds = %18, %31
  br i1 %24, label %34, label %201

34:                                               ; preds = %33
  %35 = load i64, i64* %20, align 8
  %36 = icmp eq i64* %26, %2
  br i1 %36, label %199, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to i64*
  %39 = xor i64 %23, -1
  %40 = getelementptr i64, i64* %2, i64 %39
  %41 = ptrtoint i64* %40 to i64
  %42 = sub i64 %41, %5
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, 4
  br i1 %45, label %143, label %46

46:                                               ; preds = %37
  %47 = inttoptr i64 %35 to i8*
  %48 = xor i64 %23, -1
  %49 = getelementptr i64, i64* %2, i64 %48
  %50 = ptrtoint i64* %49 to i64
  %51 = sub i64 %50, %5
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = getelementptr i64, i64* %38, i64 %53
  %55 = add nsw i64 %23, %52
  %56 = add nsw i64 %55, 1
  %57 = getelementptr i64, i64* %1, i64 %56
  %58 = bitcast i64* %57 to i8*
  %59 = icmp ult i8* %47, %58
  %60 = icmp ult i64* %25, %54
  %61 = and i1 %59, %60
  br i1 %61, label %143, label %62

62:                                               ; preds = %46
  %63 = and i64 %44, 4611686018427387900
  %64 = getelementptr i64, i64* %38, i64 %63
  %65 = getelementptr i64, i64* %25, i64 %63
  %66 = add nsw i64 %63, -4
  %67 = lshr exact i64 %66, 2
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 12
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i64, i64* %38, i64 %74
  %77 = getelementptr i64, i64* %25, i64 %74
  %78 = bitcast i64* %77 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8, !alias.scope !124
  %80 = getelementptr i64, i64* %77, i64 2
  %81 = bitcast i64* %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !124
  %83 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %83, align 8, !alias.scope !127, !noalias !124
  %84 = getelementptr i64, i64* %76, i64 2
  %85 = bitcast i64* %84 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %85, align 8, !alias.scope !127, !noalias !124
  %86 = or i64 %74, 4
  %87 = getelementptr i64, i64* %38, i64 %86
  %88 = getelementptr i64, i64* %25, i64 %86
  %89 = bitcast i64* %88 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8, !alias.scope !124
  %91 = getelementptr i64, i64* %88, i64 2
  %92 = bitcast i64* %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !124
  %94 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %94, align 8, !alias.scope !127, !noalias !124
  %95 = getelementptr i64, i64* %87, i64 2
  %96 = bitcast i64* %95 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %96, align 8, !alias.scope !127, !noalias !124
  %97 = or i64 %74, 8
  %98 = getelementptr i64, i64* %38, i64 %97
  %99 = getelementptr i64, i64* %25, i64 %97
  %100 = bitcast i64* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !alias.scope !124
  %102 = getelementptr i64, i64* %99, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !124
  %105 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %105, align 8, !alias.scope !127, !noalias !124
  %106 = getelementptr i64, i64* %98, i64 2
  %107 = bitcast i64* %106 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %107, align 8, !alias.scope !127, !noalias !124
  %108 = or i64 %74, 12
  %109 = getelementptr i64, i64* %38, i64 %108
  %110 = getelementptr i64, i64* %25, i64 %108
  %111 = bitcast i64* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !124
  %113 = getelementptr i64, i64* %110, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !124
  %116 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !127, !noalias !124
  %117 = getelementptr i64, i64* %109, i64 2
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 8, !alias.scope !127, !noalias !124
  %119 = add i64 %74, 16
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !129

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i64, i64* %38, i64 %126
  %129 = getelementptr i64, i64* %25, i64 %126
  %130 = bitcast i64* %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !124
  %132 = getelementptr i64, i64* %129, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !124
  %135 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %135, align 8, !alias.scope !127, !noalias !124
  %136 = getelementptr i64, i64* %128, i64 2
  %137 = bitcast i64* %136 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %137, align 8, !alias.scope !127, !noalias !124
  %138 = add i64 %126, 4
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !130

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %44, %63
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %46, %37
  %144 = phi i64* [ %38, %46 ], [ %38, %37 ], [ %64, %141 ]
  %145 = phi i64* [ %25, %46 ], [ %25, %37 ], [ %65, %141 ]
  %146 = ptrtoint i64* %145 to i64
  %147 = getelementptr i64, i64* %2, i64 -1
  %148 = ptrtoint i64* %147 to i64
  %149 = sub i64 %148, %146
  %150 = lshr i64 %149, 3
  %151 = add nuw nsw i64 %150, 1
  %152 = and i64 %151, 7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %163, label %154

154:                                              ; preds = %143, %154
  %155 = phi i64* [ %160, %154 ], [ %144, %143 ]
  %156 = phi i64* [ %159, %154 ], [ %145, %143 ]
  %157 = phi i64 [ %161, %154 ], [ %152, %143 ]
  %158 = load i64, i64* %156, align 8
  store i64 %158, i64* %155, align 8
  %159 = getelementptr inbounds i64, i64* %156, i64 1
  %160 = getelementptr inbounds i64, i64* %155, i64 1
  %161 = add i64 %157, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %154, !llvm.loop !131

163:                                              ; preds = %154, %143
  %164 = phi i64* [ undef, %143 ], [ %160, %154 ]
  %165 = phi i64* [ %144, %143 ], [ %160, %154 ]
  %166 = phi i64* [ %145, %143 ], [ %159, %154 ]
  %167 = icmp ult i64 %149, 56
  br i1 %167, label %196, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64* [ %194, %168 ], [ %165, %163 ]
  %170 = phi i64* [ %193, %168 ], [ %166, %163 ]
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %169, align 8
  %172 = getelementptr inbounds i64, i64* %170, i64 1
  %173 = getelementptr inbounds i64, i64* %169, i64 1
  %174 = load i64, i64* %172, align 8
  store i64 %174, i64* %173, align 8
  %175 = getelementptr inbounds i64, i64* %170, i64 2
  %176 = getelementptr inbounds i64, i64* %169, i64 2
  %177 = load i64, i64* %175, align 8
  store i64 %177, i64* %176, align 8
  %178 = getelementptr inbounds i64, i64* %170, i64 3
  %179 = getelementptr inbounds i64, i64* %169, i64 3
  %180 = load i64, i64* %178, align 8
  store i64 %180, i64* %179, align 8
  %181 = getelementptr inbounds i64, i64* %170, i64 4
  %182 = getelementptr inbounds i64, i64* %169, i64 4
  %183 = load i64, i64* %181, align 8
  store i64 %183, i64* %182, align 8
  %184 = getelementptr inbounds i64, i64* %170, i64 5
  %185 = getelementptr inbounds i64, i64* %169, i64 5
  %186 = load i64, i64* %184, align 8
  store i64 %186, i64* %185, align 8
  %187 = getelementptr inbounds i64, i64* %170, i64 6
  %188 = getelementptr inbounds i64, i64* %169, i64 6
  %189 = load i64, i64* %187, align 8
  store i64 %189, i64* %188, align 8
  %190 = getelementptr inbounds i64, i64* %170, i64 7
  %191 = getelementptr inbounds i64, i64* %169, i64 7
  %192 = load i64, i64* %190, align 8
  store i64 %192, i64* %191, align 8
  %193 = getelementptr inbounds i64, i64* %170, i64 8
  %194 = getelementptr inbounds i64, i64* %169, i64 8
  %195 = icmp eq i64* %193, %2
  br i1 %195, label %196, label %168, !llvm.loop !132

196:                                              ; preds = %163, %168, %141
  %197 = phi i64* [ %64, %141 ], [ %164, %163 ], [ %194, %168 ]
  %198 = ptrtoint i64* %197 to i64
  br label %199

199:                                              ; preds = %34, %196
  %200 = phi i64 [ %35, %34 ], [ %198, %196 ]
  store i64 %200, i64* %20, align 8
  br label %419

201:                                              ; preds = %33
  %202 = getelementptr inbounds i64, i64* %17, i64 %29
  store i64* %202, i64** %19, align 8
  br label %419

203:                                              ; preds = %3
  %204 = icmp eq i64 %13, 0
  br i1 %204, label %220, label %205

205:                                              ; preds = %203
  %206 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 1
  %207 = bitcast i64** %206 to i64*
  store i64 %13, i64* %207, align 8
  %208 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %209 = load %"struct.base::StackAllocator<unsigned long, 4>::Source"*, %"struct.base::StackAllocator<unsigned long, 4>::Source"** %208, align 8
  %210 = icmp ne %"struct.base::StackAllocator<unsigned long, 4>::Source"* %209, null
  %211 = bitcast %"struct.base::StackAllocator<unsigned long, 4>::Source"* %209 to i64*
  %212 = icmp eq i64* %17, %211
  %213 = and i1 %210, %212
  br i1 %213, label %214, label %216

214:                                              ; preds = %205
  %215 = getelementptr inbounds %"struct.base::StackAllocator<unsigned long, 4>::Source", %"struct.base::StackAllocator<unsigned long, 4>::Source"* %209, i64 0, i32 1
  store i8 0, i8* %215, align 8
  br label %218

216:                                              ; preds = %205
  %217 = inttoptr i64 %13 to i8*
  tail call void @_ZdlPv(i8* %217) #15
  br label %218

218:                                              ; preds = %216, %214
  %219 = bitcast %"class.std::__1::vector.43"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %219, i8 0, i64 24, i1 false) #14
  br label %220

220:                                              ; preds = %203, %218
  %221 = phi i64 [ %11, %203 ], [ 0, %218 ]
  %222 = icmp ugt i64 %8, 2305843009213693951
  br i1 %222, label %223, label %225

223:                                              ; preds = %220
  %224 = bitcast %"class.std::__1::vector.43"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %224) #16
  unreachable

225:                                              ; preds = %220
  %226 = ashr exact i64 %221, 3
  %227 = icmp ult i64 %226, 1152921504606846975
  br i1 %227, label %228, label %235

228:                                              ; preds = %225
  %229 = ashr exact i64 %221, 2
  %230 = icmp ult i64 %229, %8
  br i1 %230, label %235, label %231

231:                                              ; preds = %228
  %232 = icmp ugt i64 %229, 2305843009213693951
  br i1 %232, label %233, label %235

233:                                              ; preds = %231
  %234 = bitcast %"class.std::__1::vector.43"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %234) #16
  unreachable

235:                                              ; preds = %228, %225, %231
  %236 = phi i64 [ %229, %231 ], [ 2305843009213693951, %225 ], [ %8, %228 ]
  %237 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %237, i64 0, i32 0
  %239 = load %"struct.base::StackAllocator<unsigned long, 4>::Source"*, %"struct.base::StackAllocator<unsigned long, 4>::Source"** %238, align 8
  %240 = icmp eq %"struct.base::StackAllocator<unsigned long, 4>::Source"* %239, null
  br i1 %240, label %251, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds %"struct.base::StackAllocator<unsigned long, 4>::Source", %"struct.base::StackAllocator<unsigned long, 4>::Source"* %239, i64 0, i32 1
  %243 = load i8, i8* %242, align 8, !range !2
  %244 = icmp eq i8 %243, 0
  %245 = icmp ult i64 %236, 5
  %246 = and i1 %245, %244
  br i1 %246, label %247, label %251

247:                                              ; preds = %241
  store i8 1, i8* %242, align 8
  %248 = bitcast %"class.base::StackAllocator"* %237 to i64**
  %249 = load i64*, i64** %248, align 8
  %250 = bitcast i64* %249 to i8*
  br label %255

251:                                              ; preds = %241, %235
  %252 = shl i64 %236, 3
  %253 = tail call i8* @_Znwm(i64 %252) #15
  %254 = bitcast i8* %253 to i64*
  br label %255

255:                                              ; preds = %247, %251
  %256 = phi i8* [ %250, %247 ], [ %253, %251 ]
  %257 = phi i64* [ %249, %247 ], [ %254, %251 ]
  %258 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 1
  store i64* %257, i64** %258, align 8
  %259 = bitcast %"class.std::__1::vector.43"* %0 to i8**
  store i8* %256, i8** %259, align 8
  %260 = getelementptr inbounds i64, i64* %257, i64 %236
  store i64* %260, i64** %9, align 8
  %261 = bitcast i64** %258 to i64*
  %262 = icmp eq i64* %1, %2
  br i1 %262, label %416, label %263

263:                                              ; preds = %255
  %264 = getelementptr i64, i64* %2, i64 -1
  %265 = ptrtoint i64* %264 to i64
  %266 = sub i64 %265, %5
  %267 = lshr i64 %266, 3
  %268 = add nuw nsw i64 %267, 1
  %269 = icmp ult i64 %268, 4
  br i1 %269, label %363, label %270

270:                                              ; preds = %263
  %271 = getelementptr i64, i64* %2, i64 -1
  %272 = ptrtoint i64* %271 to i64
  %273 = sub i64 %272, %5
  %274 = lshr i64 %273, 3
  %275 = add nuw nsw i64 %274, 1
  %276 = getelementptr i64, i64* %257, i64 %275
  %277 = getelementptr i64, i64* %1, i64 %275
  %278 = bitcast i64* %277 to i8*
  %279 = icmp ult i8* %256, %278
  %280 = icmp ugt i64* %276, %1
  %281 = and i1 %279, %280
  br i1 %281, label %363, label %282

282:                                              ; preds = %270
  %283 = and i64 %268, 4611686018427387900
  %284 = getelementptr i64, i64* %257, i64 %283
  %285 = getelementptr i64, i64* %1, i64 %283
  %286 = add nsw i64 %283, -4
  %287 = lshr exact i64 %286, 2
  %288 = add nuw nsw i64 %287, 1
  %289 = and i64 %288, 3
  %290 = icmp ult i64 %286, 12
  br i1 %290, label %342, label %291

291:                                              ; preds = %282
  %292 = sub nsw i64 %288, %289
  br label %293

293:                                              ; preds = %293, %291
  %294 = phi i64 [ 0, %291 ], [ %339, %293 ]
  %295 = phi i64 [ %292, %291 ], [ %340, %293 ]
  %296 = getelementptr i64, i64* %257, i64 %294
  %297 = getelementptr i64, i64* %1, i64 %294
  %298 = bitcast i64* %297 to <2 x i64>*
  %299 = load <2 x i64>, <2 x i64>* %298, align 8, !alias.scope !133
  %300 = getelementptr i64, i64* %297, i64 2
  %301 = bitcast i64* %300 to <2 x i64>*
  %302 = load <2 x i64>, <2 x i64>* %301, align 8, !alias.scope !133
  %303 = bitcast i64* %296 to <2 x i64>*
  store <2 x i64> %299, <2 x i64>* %303, align 8, !alias.scope !136, !noalias !133
  %304 = getelementptr i64, i64* %296, i64 2
  %305 = bitcast i64* %304 to <2 x i64>*
  store <2 x i64> %302, <2 x i64>* %305, align 8, !alias.scope !136, !noalias !133
  %306 = or i64 %294, 4
  %307 = getelementptr i64, i64* %257, i64 %306
  %308 = getelementptr i64, i64* %1, i64 %306
  %309 = bitcast i64* %308 to <2 x i64>*
  %310 = load <2 x i64>, <2 x i64>* %309, align 8, !alias.scope !133
  %311 = getelementptr i64, i64* %308, i64 2
  %312 = bitcast i64* %311 to <2 x i64>*
  %313 = load <2 x i64>, <2 x i64>* %312, align 8, !alias.scope !133
  %314 = bitcast i64* %307 to <2 x i64>*
  store <2 x i64> %310, <2 x i64>* %314, align 8, !alias.scope !136, !noalias !133
  %315 = getelementptr i64, i64* %307, i64 2
  %316 = bitcast i64* %315 to <2 x i64>*
  store <2 x i64> %313, <2 x i64>* %316, align 8, !alias.scope !136, !noalias !133
  %317 = or i64 %294, 8
  %318 = getelementptr i64, i64* %257, i64 %317
  %319 = getelementptr i64, i64* %1, i64 %317
  %320 = bitcast i64* %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8, !alias.scope !133
  %322 = getelementptr i64, i64* %319, i64 2
  %323 = bitcast i64* %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 8, !alias.scope !133
  %325 = bitcast i64* %318 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 8, !alias.scope !136, !noalias !133
  %326 = getelementptr i64, i64* %318, i64 2
  %327 = bitcast i64* %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 8, !alias.scope !136, !noalias !133
  %328 = or i64 %294, 12
  %329 = getelementptr i64, i64* %257, i64 %328
  %330 = getelementptr i64, i64* %1, i64 %328
  %331 = bitcast i64* %330 to <2 x i64>*
  %332 = load <2 x i64>, <2 x i64>* %331, align 8, !alias.scope !133
  %333 = getelementptr i64, i64* %330, i64 2
  %334 = bitcast i64* %333 to <2 x i64>*
  %335 = load <2 x i64>, <2 x i64>* %334, align 8, !alias.scope !133
  %336 = bitcast i64* %329 to <2 x i64>*
  store <2 x i64> %332, <2 x i64>* %336, align 8, !alias.scope !136, !noalias !133
  %337 = getelementptr i64, i64* %329, i64 2
  %338 = bitcast i64* %337 to <2 x i64>*
  store <2 x i64> %335, <2 x i64>* %338, align 8, !alias.scope !136, !noalias !133
  %339 = add i64 %294, 16
  %340 = add i64 %295, -4
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %293, !llvm.loop !138

342:                                              ; preds = %293, %282
  %343 = phi i64 [ 0, %282 ], [ %339, %293 ]
  %344 = icmp eq i64 %289, 0
  br i1 %344, label %361, label %345

345:                                              ; preds = %342, %345
  %346 = phi i64 [ %358, %345 ], [ %343, %342 ]
  %347 = phi i64 [ %359, %345 ], [ %289, %342 ]
  %348 = getelementptr i64, i64* %257, i64 %346
  %349 = getelementptr i64, i64* %1, i64 %346
  %350 = bitcast i64* %349 to <2 x i64>*
  %351 = load <2 x i64>, <2 x i64>* %350, align 8, !alias.scope !133
  %352 = getelementptr i64, i64* %349, i64 2
  %353 = bitcast i64* %352 to <2 x i64>*
  %354 = load <2 x i64>, <2 x i64>* %353, align 8, !alias.scope !133
  %355 = bitcast i64* %348 to <2 x i64>*
  store <2 x i64> %351, <2 x i64>* %355, align 8, !alias.scope !136, !noalias !133
  %356 = getelementptr i64, i64* %348, i64 2
  %357 = bitcast i64* %356 to <2 x i64>*
  store <2 x i64> %354, <2 x i64>* %357, align 8, !alias.scope !136, !noalias !133
  %358 = add i64 %346, 4
  %359 = add i64 %347, -1
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %361, label %345, !llvm.loop !139

361:                                              ; preds = %345, %342
  %362 = icmp eq i64 %268, %283
  br i1 %362, label %416, label %363

363:                                              ; preds = %361, %270, %263
  %364 = phi i64* [ %257, %270 ], [ %257, %263 ], [ %284, %361 ]
  %365 = phi i64* [ %1, %270 ], [ %1, %263 ], [ %285, %361 ]
  %366 = ptrtoint i64* %365 to i64
  %367 = getelementptr i64, i64* %2, i64 -1
  %368 = ptrtoint i64* %367 to i64
  %369 = sub i64 %368, %366
  %370 = lshr i64 %369, 3
  %371 = add nuw nsw i64 %370, 1
  %372 = and i64 %371, 7
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %383, label %374

374:                                              ; preds = %363, %374
  %375 = phi i64* [ %380, %374 ], [ %364, %363 ]
  %376 = phi i64* [ %379, %374 ], [ %365, %363 ]
  %377 = phi i64 [ %381, %374 ], [ %372, %363 ]
  %378 = load i64, i64* %376, align 8
  store i64 %378, i64* %375, align 8
  %379 = getelementptr inbounds i64, i64* %376, i64 1
  %380 = getelementptr inbounds i64, i64* %375, i64 1
  %381 = add i64 %377, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %374, !llvm.loop !140

383:                                              ; preds = %374, %363
  %384 = phi i64* [ undef, %363 ], [ %380, %374 ]
  %385 = phi i64* [ %364, %363 ], [ %380, %374 ]
  %386 = phi i64* [ %365, %363 ], [ %379, %374 ]
  %387 = icmp ult i64 %369, 56
  br i1 %387, label %416, label %388

388:                                              ; preds = %383, %388
  %389 = phi i64* [ %414, %388 ], [ %385, %383 ]
  %390 = phi i64* [ %413, %388 ], [ %386, %383 ]
  %391 = load i64, i64* %390, align 8
  store i64 %391, i64* %389, align 8
  %392 = getelementptr inbounds i64, i64* %390, i64 1
  %393 = getelementptr inbounds i64, i64* %389, i64 1
  %394 = load i64, i64* %392, align 8
  store i64 %394, i64* %393, align 8
  %395 = getelementptr inbounds i64, i64* %390, i64 2
  %396 = getelementptr inbounds i64, i64* %389, i64 2
  %397 = load i64, i64* %395, align 8
  store i64 %397, i64* %396, align 8
  %398 = getelementptr inbounds i64, i64* %390, i64 3
  %399 = getelementptr inbounds i64, i64* %389, i64 3
  %400 = load i64, i64* %398, align 8
  store i64 %400, i64* %399, align 8
  %401 = getelementptr inbounds i64, i64* %390, i64 4
  %402 = getelementptr inbounds i64, i64* %389, i64 4
  %403 = load i64, i64* %401, align 8
  store i64 %403, i64* %402, align 8
  %404 = getelementptr inbounds i64, i64* %390, i64 5
  %405 = getelementptr inbounds i64, i64* %389, i64 5
  %406 = load i64, i64* %404, align 8
  store i64 %406, i64* %405, align 8
  %407 = getelementptr inbounds i64, i64* %390, i64 6
  %408 = getelementptr inbounds i64, i64* %389, i64 6
  %409 = load i64, i64* %407, align 8
  store i64 %409, i64* %408, align 8
  %410 = getelementptr inbounds i64, i64* %390, i64 7
  %411 = getelementptr inbounds i64, i64* %389, i64 7
  %412 = load i64, i64* %410, align 8
  store i64 %412, i64* %411, align 8
  %413 = getelementptr inbounds i64, i64* %390, i64 8
  %414 = getelementptr inbounds i64, i64* %389, i64 8
  %415 = icmp eq i64* %413, %2
  br i1 %415, label %416, label %388, !llvm.loop !141

416:                                              ; preds = %383, %388, %361, %255
  %417 = phi i64* [ %257, %255 ], [ %284, %361 ], [ %384, %383 ], [ %414, %388 ]
  %418 = ptrtoint i64* %417 to i64
  store i64 %418, i64* %261, align 8
  br label %419

419:                                              ; preds = %199, %201, %416
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history8VisitRowENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.60"*, %"class.history::VisitRow"*, %"class.history::VisitRow"*) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint %"class.history::VisitRow"* %1 to i64
  %5 = ptrtoint %"class.history::VisitRow"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 6
  %8 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.history::VisitRow"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.60"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 6
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.history::VisitRow"*
  br i1 %15, label %99, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.history::VisitRow"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 6
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 %22
  %25 = select i1 %23, %"class.history::VisitRow"* %24, %"class.history::VisitRow"* %2
  %26 = ptrtoint %"class.history::VisitRow"* %25 to i64
  %27 = sub i64 %26, %4
  %28 = ashr exact i64 %27, 6
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.history::VisitRow"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #14
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %97

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"class.history::VisitRow"* %25, %2
  br i1 %36, label %95, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to i8*
  %39 = xor i64 %22, -1
  %40 = getelementptr %"class.history::VisitRow", %"class.history::VisitRow"* %2, i64 %39, i32 0
  %41 = ptrtoint i64* %40 to i64
  %42 = sub i64 %41, %4
  %43 = lshr i64 %42, 6
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37, %47
  %48 = phi i64 [ %56, %47 ], [ %35, %37 ]
  %49 = phi i8* [ %57, %47 ], [ %38, %37 ]
  %50 = phi %"class.history::VisitRow"* [ %53, %47 ], [ %24, %37 ]
  %51 = phi i64 [ %58, %47 ], [ %45, %37 ]
  %52 = bitcast %"class.history::VisitRow"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %52, i64 64, i1 false) #14
  %53 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %50, i64 1
  %54 = inttoptr i64 %48 to %"class.history::VisitRow"*
  %55 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %54, i64 1
  %56 = ptrtoint %"class.history::VisitRow"* %55 to i64
  %57 = bitcast %"class.history::VisitRow"* %55 to i8*
  %58 = add i64 %51, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %47, !llvm.loop !142

60:                                               ; preds = %47
  %61 = ptrtoint %"class.history::VisitRow"* %55 to i64
  %62 = bitcast %"class.history::VisitRow"* %55 to i8*
  br label %63

63:                                               ; preds = %37, %60
  %64 = phi %"class.history::VisitRow"* [ undef, %37 ], [ %55, %60 ]
  %65 = phi i64 [ %35, %37 ], [ %61, %60 ]
  %66 = phi i8* [ %38, %37 ], [ %62, %60 ]
  %67 = phi %"class.history::VisitRow"* [ %24, %37 ], [ %53, %60 ]
  %68 = icmp ult i64 %42, 192
  br i1 %68, label %92, label %69

69:                                               ; preds = %63
  %70 = inttoptr i64 %65 to %"class.history::VisitRow"*
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi %"class.history::VisitRow"* [ %70, %69 ], [ %89, %71 ]
  %73 = phi i8* [ %66, %69 ], [ %91, %71 ]
  %74 = phi %"class.history::VisitRow"* [ %67, %69 ], [ %88, %71 ]
  %75 = bitcast %"class.history::VisitRow"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %75, i64 64, i1 false) #14
  %76 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %74, i64 1
  %77 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %72, i64 1
  %78 = bitcast %"class.history::VisitRow"* %77 to i8*
  %79 = bitcast %"class.history::VisitRow"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 64, i1 false) #14
  %80 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %74, i64 2
  %81 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %72, i64 2
  %82 = bitcast %"class.history::VisitRow"* %81 to i8*
  %83 = bitcast %"class.history::VisitRow"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 64, i1 false) #14
  %84 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %74, i64 3
  %85 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %72, i64 3
  %86 = bitcast %"class.history::VisitRow"* %85 to i8*
  %87 = bitcast %"class.history::VisitRow"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 64, i1 false) #14
  %88 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %74, i64 4
  %89 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %72, i64 4
  %90 = icmp eq %"class.history::VisitRow"* %88, %2
  %91 = bitcast %"class.history::VisitRow"* %89 to i8*
  br i1 %90, label %92, label %71

92:                                               ; preds = %71, %63
  %93 = phi %"class.history::VisitRow"* [ %64, %63 ], [ %89, %71 ]
  %94 = ptrtoint %"class.history::VisitRow"* %93 to i64
  br label %95

95:                                               ; preds = %92, %34
  %96 = phi i64 [ %35, %34 ], [ %94, %92 ]
  store i64 %96, i64* %19, align 8
  br label %181

97:                                               ; preds = %33
  %98 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %16, i64 %28
  store %"class.history::VisitRow"* %98, %"class.history::VisitRow"** %18, align 8
  br label %181

99:                                               ; preds = %3
  %100 = icmp eq i64 %12, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 1
  %103 = bitcast %"class.history::VisitRow"** %102 to i64*
  store i64 %12, i64* %103, align 8
  %104 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %104) #15
  %105 = bitcast %"class.std::__1::vector.60"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #14
  br label %106

106:                                              ; preds = %99, %101
  %107 = phi i64 [ %10, %99 ], [ 0, %101 ]
  %108 = icmp ugt i64 %7, 288230376151711743
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = bitcast %"class.std::__1::vector.60"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #16
  unreachable

111:                                              ; preds = %106
  %112 = ashr exact i64 %107, 6
  %113 = icmp ult i64 %112, 144115188075855871
  br i1 %113, label %114, label %121

114:                                              ; preds = %111
  %115 = ashr exact i64 %107, 5
  %116 = icmp ult i64 %115, %7
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = icmp ugt i64 %115, 288230376151711743
  br i1 %118, label %119, label %121

119:                                              ; preds = %117
  %120 = bitcast %"class.std::__1::vector.60"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #16
  unreachable

121:                                              ; preds = %114, %111, %117
  %122 = phi i64 [ %115, %117 ], [ 288230376151711743, %111 ], [ %7, %114 ]
  %123 = shl i64 %122, 6
  %124 = tail call i8* @_Znwm(i64 %123) #15
  %125 = bitcast i8* %124 to %"class.history::VisitRow"*
  %126 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 1
  %127 = bitcast %"class.history::VisitRow"** %126 to i8**
  store i8* %124, i8** %127, align 8
  %128 = bitcast %"class.std::__1::vector.60"* %0 to i8**
  store i8* %124, i8** %128, align 8
  %129 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %125, i64 %122
  store %"class.history::VisitRow"* %129, %"class.history::VisitRow"** %8, align 8
  %130 = bitcast %"class.history::VisitRow"** %126 to i64*
  %131 = ptrtoint i8* %124 to i64
  %132 = icmp eq %"class.history::VisitRow"* %1, %2
  br i1 %132, label %179, label %133

133:                                              ; preds = %121
  %134 = getelementptr %"class.history::VisitRow", %"class.history::VisitRow"* %2, i64 -1, i32 0
  %135 = ptrtoint i64* %134 to i64
  %136 = sub i64 %135, %4
  %137 = lshr i64 %136, 6
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 3
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %151, label %141

141:                                              ; preds = %133, %141
  %142 = phi %"class.history::VisitRow"* [ %148, %141 ], [ %125, %133 ]
  %143 = phi %"class.history::VisitRow"* [ %147, %141 ], [ %1, %133 ]
  %144 = phi i64 [ %149, %141 ], [ %139, %133 ]
  %145 = bitcast %"class.history::VisitRow"* %142 to i8*
  %146 = bitcast %"class.history::VisitRow"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %146, i64 64, i1 false) #14
  %147 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %143, i64 1
  %148 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %142, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %141, !llvm.loop !143

151:                                              ; preds = %141, %133
  %152 = phi %"class.history::VisitRow"* [ undef, %133 ], [ %148, %141 ]
  %153 = phi %"class.history::VisitRow"* [ %125, %133 ], [ %148, %141 ]
  %154 = phi %"class.history::VisitRow"* [ %1, %133 ], [ %147, %141 ]
  %155 = icmp ult i64 %136, 192
  br i1 %155, label %176, label %156

156:                                              ; preds = %151, %156
  %157 = phi %"class.history::VisitRow"* [ %174, %156 ], [ %153, %151 ]
  %158 = phi %"class.history::VisitRow"* [ %173, %156 ], [ %154, %151 ]
  %159 = bitcast %"class.history::VisitRow"* %157 to i8*
  %160 = bitcast %"class.history::VisitRow"* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %160, i64 64, i1 false) #14
  %161 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %158, i64 1
  %162 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %157, i64 1
  %163 = bitcast %"class.history::VisitRow"* %162 to i8*
  %164 = bitcast %"class.history::VisitRow"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 64, i1 false) #14
  %165 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %158, i64 2
  %166 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %157, i64 2
  %167 = bitcast %"class.history::VisitRow"* %166 to i8*
  %168 = bitcast %"class.history::VisitRow"* %165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 64, i1 false) #14
  %169 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %158, i64 3
  %170 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %157, i64 3
  %171 = bitcast %"class.history::VisitRow"* %170 to i8*
  %172 = bitcast %"class.history::VisitRow"* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %172, i64 64, i1 false) #14
  %173 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %158, i64 4
  %174 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %157, i64 4
  %175 = icmp eq %"class.history::VisitRow"* %173, %2
  br i1 %175, label %176, label %156

176:                                              ; preds = %156, %151
  %177 = phi %"class.history::VisitRow"* [ %152, %151 ], [ %174, %156 ]
  %178 = ptrtoint %"class.history::VisitRow"* %177 to i64
  br label %179

179:                                              ; preds = %176, %121
  %180 = phi i64 [ %131, %121 ], [ %178, %176 ]
  store i64 %180, i64* %130, align 8
  br label %181

181:                                              ; preds = %95, %97, %179
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE30__emplace_hint_unique_key_argsIS1_JRKS1_EEENS_4pairINS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEbEENS_21__tree_const_iteratorIS1_SF_lEERKT_DpOT0_(%"class.std::__1::__tree.48"*, %"class.std::__1::__tree_end_node"*, %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %6, align 8
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE12__find_equalIS1_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS1_PNS_11__tree_nodeIS1_S9_EElEERPNS_15__tree_end_nodeISB_EESC_RKT_(%"class.std::__1::__tree.48"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %class.GURL* dereferenceable(120) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node.133"**
  %11 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node.133"* %11, null
  br i1 %12, label %13, label %40

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 152) #15, !noalias !144
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast i8* %15 to %class.GURL*
  call void @_ZN4GURLC1ERKS_(%class.GURL* %16, %class.GURL* dereferenceable(120) %3) #14, !noalias !144
  %17 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i8* %14 to %"class.std::__1::__tree_node.133"*
  %20 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %21 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #14
  %22 = bitcast i8* %21 to i64*
  store i64 %18, i64* %22, align 8
  %23 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 0
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %13
  %30 = ptrtoint %"class.std::__1::__tree_node_base"* %27 to i64
  %31 = bitcast %"class.std::__1::__tree.48"* %0 to i64*
  store i64 %30, i64* %31, align 8
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %33

33:                                               ; preds = %29, %13
  %34 = phi %"class.std::__1::__tree_node_base"* [ %20, %13 ], [ %32, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"* %34) #14
  %37 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %37, align 8
  br label %40

40:                                               ; preds = %33, %4
  %41 = phi i8 [ 1, %33 ], [ 0, %4 ]
  %42 = phi %"class.std::__1::__tree_node.133"* [ %19, %33 ], [ %11, %4 ]
  %43 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %42, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %44 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %43, 0
  %45 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %44, i8 %41, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE12__find_equalIS1_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS1_PNS_11__tree_nodeIS1_S9_EElEERPNS_15__tree_end_nodeISB_EESC_RKT_(%"class.std::__1::__tree.48"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %class.GURL* dereferenceable(120)) local_unnamed_addr #3 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %class.GURL*
  %12 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %4, %class.GURL* dereferenceable(120) %11) #14
  br i1 %12, label %13, label %86

13:                                               ; preds = %5, %9
  %14 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 0
  %15 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = icmp eq %"class.std::__1::__tree_end_node"* %15, %1
  br i1 %16, label %43, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"class.std::__1::__tree_node_base"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 1
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %37, label %21

26:                                               ; preds = %17, %26
  %27 = phi %"class.std::__1::__tree_end_node"* [ %31, %26 ], [ %1, %17 ]
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 2
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_end_node"**
  %31 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %28
  br i1 %34, label %26, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  br label %37

37:                                               ; preds = %21, %35
  %38 = phi %"class.std::__1::__tree_node_base"* [ %36, %35 ], [ %22, %21 ]
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 1
  %41 = bitcast %"class.std::__1::__tree_node_base"* %40 to %class.GURL*
  %42 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %41, %class.GURL* dereferenceable(120) %4) #14
  br i1 %42, label %43, label %53

43:                                               ; preds = %13, %37
  %44 = phi i64 [ %39, %37 ], [ %6, %13 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %168

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %44, i64* %50, align 8
  %51 = inttoptr i64 %44 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 1
  br label %168

53:                                               ; preds = %37
  %54 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.133"**
  %55 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.133"* %55, null
  br i1 %56, label %84, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %59

59:                                               ; preds = %80, %57
  %60 = phi %"class.std::__1::__tree_node.133"* [ %83, %80 ], [ %55, %57 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %82, %80 ], [ %58, %57 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %60, i64 0, i32 1
  %63 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %4, %class.GURL* dereferenceable(120) %62) #14
  br i1 %63, label %64, label %70

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %60, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %80

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %60, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %168

70:                                               ; preds = %59
  %71 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %62, %class.GURL* dereferenceable(120) %4) #14
  br i1 %71, label %72, label %78

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %60, i64 0, i32 0, i32 1
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %60, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %168

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %60, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %79, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %168

80:                                               ; preds = %72, %64
  %81 = phi %"class.std::__1::__tree_node_base"* [ %66, %64 ], [ %74, %72 ]
  %82 = phi %"class.std::__1::__tree_node_base"** [ %65, %64 ], [ %73, %72 ]
  %83 = bitcast %"class.std::__1::__tree_node_base"* %81 to %"class.std::__1::__tree_node.133"*
  br label %59

84:                                               ; preds = %53
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %168

86:                                               ; preds = %9
  %87 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %11, %class.GURL* dereferenceable(120) %4) #14
  br i1 %87, label %88, label %165

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %100

92:                                               ; preds = %88
  %93 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to %"class.std::__1::__tree_end_node"**
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, %93
  br i1 %99, label %116, label %107

100:                                              ; preds = %88, %100
  %101 = phi %"class.std::__1::__tree_node_base"* [ %103, %100 ], [ %90, %88 ]
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %100

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 0
  br label %116

107:                                              ; preds = %92, %107
  %108 = phi %"class.std::__1::__tree_end_node"** [ %111, %107 ], [ %95, %92 ]
  %109 = bitcast %"class.std::__1::__tree_end_node"** %108 to %"class.std::__1::__tree_node_base"**
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %110, i64 0, i32 2
  %112 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, %110
  br i1 %115, label %116, label %107

116:                                              ; preds = %107, %105, %92
  %117 = phi %"class.std::__1::__tree_end_node"* [ %106, %105 ], [ %96, %92 ], [ %112, %107 ]
  %118 = icmp eq %"class.std::__1::__tree_end_node"* %117, %7
  br i1 %118, label %125, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 4
  %121 = bitcast %"class.std::__1::__tree_end_node"* %120 to %class.GURL*
  %122 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %4, %class.GURL* dereferenceable(120) %121) #14
  br i1 %122, label %123, label %132

123:                                              ; preds = %119
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi %"class.std::__1::__tree_node_base"* [ %124, %123 ], [ %90, %116 ]
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %128, label %130

128:                                              ; preds = %125
  %129 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %129, align 8
  br label %168

130:                                              ; preds = %125
  store %"class.std::__1::__tree_end_node"* %117, %"class.std::__1::__tree_end_node"** %2, align 8
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  br label %168

132:                                              ; preds = %119
  %133 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.133"**
  %134 = load %"class.std::__1::__tree_node.133"*, %"class.std::__1::__tree_node.133"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node.133"* %134, null
  br i1 %135, label %163, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.std::__1::__tree.48", %"class.std::__1::__tree.48"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %138

138:                                              ; preds = %159, %136
  %139 = phi %"class.std::__1::__tree_node.133"* [ %162, %159 ], [ %134, %136 ]
  %140 = phi %"class.std::__1::__tree_node_base"** [ %161, %159 ], [ %137, %136 ]
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %139, i64 0, i32 1
  %142 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %4, %class.GURL* dereferenceable(120) %141) #14
  br i1 %142, label %143, label %149

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %139, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %147, label %159

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %139, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %168

149:                                              ; preds = %138
  %150 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %141, %class.GURL* dereferenceable(120) %4) #14
  br i1 %150, label %151, label %157

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %139, i64 0, i32 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %159

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %139, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %156, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %168

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.std::__1::__tree_node.133", %"class.std::__1::__tree_node.133"* %139, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %168

159:                                              ; preds = %151, %143
  %160 = phi %"class.std::__1::__tree_node_base"* [ %145, %143 ], [ %153, %151 ]
  %161 = phi %"class.std::__1::__tree_node_base"** [ %144, %143 ], [ %152, %151 ]
  %162 = bitcast %"class.std::__1::__tree_node_base"* %160 to %"class.std::__1::__tree_node.133"*
  br label %138

163:                                              ; preds = %132
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %168

165:                                              ; preds = %86
  %166 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %166, align 8
  %167 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %167, align 8
  br label %168

168:                                              ; preds = %128, %130, %147, %155, %157, %163, %48, %49, %68, %76, %78, %84, %165
  %169 = phi %"class.std::__1::__tree_node_base"** [ %3, %165 ], [ %45, %48 ], [ %52, %49 ], [ %65, %68 ], [ %73, %76 ], [ %61, %78 ], [ %85, %84 ], [ %89, %128 ], [ %131, %130 ], [ %144, %147 ], [ %152, %155 ], [ %140, %157 ], [ %164, %163 ]
  ret %"class.std::__1::__tree_node_base"** %169
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !4}
!13 = distinct !{!13, !4}
!14 = distinct !{!14, !11}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !4}
!22 = distinct !{!22, !4}
!23 = distinct !{!23, !11}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !4}
!31 = distinct !{!31, !4}
!32 = distinct !{!32, !11}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !4}
!40 = distinct !{!40, !4}
!41 = distinct !{!41, !11}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !11}
!48 = distinct !{!48, !4}
!49 = distinct !{!49, !4}
!50 = distinct !{!50, !11}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !11}
!57 = distinct !{!57, !4}
!58 = distinct !{!58, !4}
!59 = distinct !{!59, !11}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !11}
!66 = distinct !{!66, !4}
!67 = distinct !{!67, !4}
!68 = distinct !{!68, !11}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !11}
!75 = distinct !{!75, !4}
!76 = distinct !{!76, !4}
!77 = distinct !{!77, !11}
!78 = !{!"branch_weights", i32 1, i32 2000}
!79 = !{!80}
!80 = distinct !{!80, !81}
!81 = distinct !{!81, !"LVerDomain"}
!82 = !{!83}
!83 = distinct !{!83, !81}
!84 = distinct !{!84, !11}
!85 = distinct !{!85, !4}
!86 = distinct !{!86, !4}
!87 = distinct !{!87, !11}
!88 = !{!89}
!89 = distinct !{!89, !90}
!90 = distinct !{!90, !"LVerDomain"}
!91 = !{!92}
!92 = distinct !{!92, !90}
!93 = distinct !{!93, !11}
!94 = distinct !{!94, !4}
!95 = distinct !{!95, !4}
!96 = distinct !{!96, !11}
!97 = distinct !{!97, !11}
!98 = distinct !{!98, !4}
!99 = distinct !{!99, !100, !11}
!100 = !{!"llvm.loop.unroll.runtime.disable"}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !11}
!107 = distinct !{!107, !4}
!108 = distinct !{!108, !4}
!109 = distinct !{!109, !11}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_: argument 0"}
!112 = distinct !{!112, !"_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_"}
!113 = !{!114}
!114 = distinct !{!114, !115}
!115 = distinct !{!115, !"LVerDomain"}
!116 = !{!117}
!117 = distinct !{!117, !115}
!118 = distinct !{!118, !11}
!119 = distinct !{!119, !4}
!120 = distinct !{!120, !11}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!123 = distinct !{!123, !"_ZNSt3__16__treeINS_12__value_typeI4GURLN4base11StackVectorImLm4EEEEENS_19__map_value_compareIS2_S6_NS_4lessIS2_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!124 = !{!125}
!125 = distinct !{!125, !126}
!126 = distinct !{!126, !"LVerDomain"}
!127 = !{!128}
!128 = distinct !{!128, !126}
!129 = distinct !{!129, !11}
!130 = distinct !{!130, !4}
!131 = distinct !{!131, !4}
!132 = distinct !{!132, !11}
!133 = !{!134}
!134 = distinct !{!134, !135}
!135 = distinct !{!135, !"LVerDomain"}
!136 = !{!137}
!137 = distinct !{!137, !135}
!138 = distinct !{!138, !11}
!139 = distinct !{!139, !4}
!140 = distinct !{!140, !4}
!141 = distinct !{!141, !11}
!142 = distinct !{!142, !4}
!143 = distinct !{!143, !4}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_: argument 0"}
!146 = distinct !{!146, !"_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_"}
