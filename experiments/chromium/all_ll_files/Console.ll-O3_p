; ModuleID = 'gen/v8/src/inspector/protocol/Console.cpp'
source_filename = "gen/v8/src/inspector/protocol/Console.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.v8_crdtp::DeserializerDescriptor::Field" = type { %"class.v8_crdtp::span", i8, i1 (%"class.v8_crdtp::DeserializerState"*, i8*)* }
%"class.v8_crdtp::span" = type { i8*, i64 }
%"class.v8_crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr", %"class.v8_crdtp::cbor::CBORTokenizer", %"struct.v8_crdtp::Status", %"class.std::__1::vector.2" }
%"class.std::__1::shared_ptr" = type { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8_crdtp::cbor::CBORTokenizer" = type { %"class.v8_crdtp::span.1", i32, %"struct.v8_crdtp::Status", i64, i32, i64 }
%"class.v8_crdtp::span.1" = type { i8*, i64 }
%"struct.v8_crdtp::Status" = type { i32, i64 }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.v8_crdtp::span"*, %"class.v8_crdtp::span"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.v8_crdtp::span"* }
%"class.v8_crdtp::DeserializerDescriptor" = type <{ %"struct.v8_crdtp::DeserializerDescriptor::Field"*, i64, i32, [4 x i8] }>
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"struct.std::__1::pair.99"*, %"struct.std::__1::pair.99"*, %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::pair.99" = type { %"class.v8_crdtp::span.1", { i64, i64 } }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::pair.99"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.72" }
%"struct.std::__1::pair" = type { %"class.v8_crdtp::span.1", %"class.v8_crdtp::span.1" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8_inspector::protocol::Console::ConsoleMessage" = type { %"class.v8_crdtp::ProtocolObject", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe.24", %"class.v8_crdtp::detail::ValueMaybe.24" }
%"class.v8_crdtp::ProtocolObject" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_crdtp::Serializable" = type { i32 (...)** }
%"class.v8_inspector::String16" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" = type { i16*, i64, i64 }
%"class.v8_crdtp::detail::ValueMaybe" = type { i8, %"class.v8_inspector::String16" }
%"class.v8_crdtp::detail::ValueMaybe.24" = type { i8, i32 }
%"class.v8_crdtp::ContainerSerializer" = type { %"class.std::__1::vector"*, %"class.v8_crdtp::cbor::EnvelopeEncoder" }
%"class.v8_crdtp::cbor::EnvelopeEncoder" = type { i64 }
%"class.v8_inspector::protocol::Console::Frontend" = type { %"class.v8_crdtp::FrontendChannel"* }
%"class.v8_crdtp::FrontendChannel" = type { i32 (...)** }
%"class.v8_crdtp::ObjectSerializer" = type { %"class.std::__1::vector", %"class.v8_crdtp::ContainerSerializer" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_crdtp::Dispatchable"*)* }
%"class.v8_crdtp::Dispatchable" = type { %"class.v8_crdtp::span.1", %"struct.v8_crdtp::Status", i8, i32, %"class.v8_crdtp::span.1", i8, %"class.v8_crdtp::span.1", %"class.v8_crdtp::span.1" }
%"class.v8_inspector::protocol::Console::DomainDispatcherImpl" = type { %"class.v8_crdtp::DomainDispatcher", %"class.v8_inspector::protocol::Console::Backend"* }
%"class.v8_crdtp::DomainDispatcher" = type { i32 (...)**, %"class.v8_crdtp::FrontendChannel"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.34", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.50", [4 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i64 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { float }
%"class.v8_inspector::protocol::Console::Backend" = type { i32 (...)** }
%"class.v8_crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string.61" }
%"class.std::__1::basic_string.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.64 }
%union.anon.64 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.v8_crdtp::DomainDispatcher::WeakPtr" = type { %"class.v8_crdtp::DomainDispatcher"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.65 }
%struct.anon.65 = type { i8 }
%"class.v8_crdtp::UberDispatcher" = type { i32 (...)**, %"class.v8_crdtp::FrontendChannel"*, %"class.std::__1::vector.70", %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.std::__1::pair.79"*, %"struct.std::__1::pair.79"*, %"class.std::__1::__compressed_pair.80" }
%"struct.std::__1::pair.79" = type opaque
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::pair.79"* }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon.54 }
%class.anon.54 = type { %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, { i64, i64 } }

$_ZN12v8_inspector8protocol7Console14ConsoleMessageD2Ev = comdat any

$_ZN12v8_inspector8protocol7Console14ConsoleMessageD0Ev = comdat any

$_ZN12v8_inspector8protocol7Console20DomainDispatcherImplD0Ev = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt = comdat any

$_ZNSt3__110__function16__policy_invokerIFvRKN8v8_crdtp12DispatchableEEE12__call_emptyEPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZN12v8_inspector8protocol7Console8Metainfo10domainNameE = hidden local_unnamed_addr constant [8 x i8] c"Console\00", align 1
@_ZN12v8_inspector8protocol7Console8Metainfo13commandPrefixE = hidden local_unnamed_addr constant [9 x i8] c"Console.\00", align 1
@_ZN12v8_inspector8protocol7Console8Metainfo7versionE = hidden local_unnamed_addr constant [4 x i8] c"1.3\00", align 1
@.str = private unnamed_addr constant [4 x i8] c"xml\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum3XmlE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"javascript\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum10JavascriptE = hidden local_unnamed_addr global i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"network\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum7NetworkE = hidden local_unnamed_addr global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), align 8
@.str.3 = private unnamed_addr constant [12 x i8] c"console-api\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum10ConsoleApiE = hidden local_unnamed_addr global i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"storage\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum7StorageE = hidden local_unnamed_addr global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), align 8
@.str.5 = private unnamed_addr constant [9 x i8] c"appcache\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum8AppcacheE = hidden local_unnamed_addr global i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), align 8
@.str.6 = private unnamed_addr constant [10 x i8] c"rendering\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum9RenderingE = hidden local_unnamed_addr global i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), align 8
@.str.7 = private unnamed_addr constant [9 x i8] c"security\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum8SecurityE = hidden local_unnamed_addr global i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), align 8
@.str.8 = private unnamed_addr constant [6 x i8] c"other\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum5OtherE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), align 8
@.str.9 = private unnamed_addr constant [12 x i8] c"deprecation\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum11DeprecationE = hidden local_unnamed_addr global i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), align 8
@.str.10 = private unnamed_addr constant [7 x i8] c"worker\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum6WorkerE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), align 8
@.str.11 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum3LogE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), align 8
@.str.12 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum7WarningE = hidden local_unnamed_addr global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), align 8
@.str.13 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum5ErrorE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), align 8
@.str.14 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum5DebugE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), align 8
@.str.15 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum4InfoE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), align 8
@_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields = internal global [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"] zeroinitializer, align 16
@.str.16 = private unnamed_addr constant [7 x i8] c"column\00", align 1
@_ZGVZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields = internal global i64 0, align 8
@.str.17 = private unnamed_addr constant [6 x i8] c"level\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6s_desc = internal global %"class.v8_crdtp::DeserializerDescriptor" zeroinitializer, align 8
@_ZGVZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6s_desc = internal global i64 0, align 8
@.str.22 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"Console.messageAdded\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"Console.clearMessages\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"Console.disable\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"Console.enable\00", align 1
@_ZTVN12v8_inspector8protocol7Console14ConsoleMessageE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*, %"class.std::__1::vector"*)* @_ZNK12v8_inspector8protocol7Console14ConsoleMessage16AppendSerializedEPNSt3__16vectorIhNS3_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*)* @_ZN12v8_inspector8protocol7Console14ConsoleMessageD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*)* @_ZN12v8_inspector8protocol7Console14ConsoleMessageD0Ev to i8*)] }, align 8
@_ZTVN12v8_inspector8protocol7Console20DomainDispatcherImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_crdtp::DomainDispatcher"*)* @_ZN8v8_crdtp16DomainDispatcherD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*)* @_ZN12v8_inspector8protocol7Console20DomainDispatcherImplD0Ev to i8*), i8* bitcast (void (%"class.std::__1::function"*, %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, i8*, i64)* @_ZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEE to i8*)] }, align 8
@_ZZN12v8_inspector8protocol7Console12_GLOBAL__N_113CommandByNameEN8v8_crdtp4spanIhEEE8commands = internal unnamed_addr global %"class.std::__1::vector.97"* null, align 8
@_ZGVZN12v8_inspector8protocol7Console12_GLOBAL__N_113CommandByNameEN8v8_crdtp4spanIhEEE8commands = internal global i64 0, align 8
@.str.29 = private unnamed_addr constant [14 x i8] c"clearMessages\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"enable\00", align 1
@.ref.tmp = private unnamed_addr constant [3 x %"struct.std::__1::pair.99"] [%"struct.std::__1::pair.99" { %"class.v8_crdtp::span.1" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i32 0, i32 0), i64 13 }, { i64, i64 } { i64 ptrtoint (void (%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"*)* @_ZN12v8_inspector8protocol7Console20DomainDispatcherImpl13clearMessagesERKN8v8_crdtp12DispatchableE to i64), i64 0 } }, %"struct.std::__1::pair.99" { %"class.v8_crdtp::span.1" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i32 0, i32 0), i64 7 }, { i64, i64 } { i64 ptrtoint (void (%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"*)* @_ZN12v8_inspector8protocol7Console20DomainDispatcherImpl7disableERKN8v8_crdtp12DispatchableE to i64), i64 0 } }, %"struct.std::__1::pair.99" { %"class.v8_crdtp::span.1" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i64 6 }, { i64, i64 } { i64 ptrtoint (void (%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"*)* @_ZN12v8_inspector8protocol7Console20DomainDispatcherImpl6enableERKN8v8_crdtp12DispatchableE to i64), i64 0 } }], align 8
@_ZZN12v8_inspector8protocol7Console12_GLOBAL__N_115SortedRedirectsEvE9redirects = internal unnamed_addr global %"class.std::__1::vector.70"* null, align 8
@_ZGVZN12v8_inspector8protocol7Console12_GLOBAL__N_115SortedRedirectsEvE9redirects = internal global i64 0, align 8
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(24) %"class.v8_crdtp::DeserializerDescriptor"* @_ZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %8, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i8** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 0, i32 0, i32 0), align 16
  store i64 6, i64* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 0, i32 0, i32 1), align 8
  store i8 1, i8* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 0, i32 1), align 16
  store i1 (%"class.v8_crdtp::DeserializerState"*, i8*)* @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_08__invokeEPN8v8_crdtp17DeserializerStateEPv", i1 (%"class.v8_crdtp::DeserializerState"*, i8*)** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 0, i32 2), align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i8** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 1, i32 0, i32 0), align 16
  store i64 5, i64* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 1, i32 0, i32 1), align 8
  store i8 0, i8* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 1, i32 1), align 16
  store i1 (%"class.v8_crdtp::DeserializerState"*, i8*)* @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_18__invokeEPN8v8_crdtp17DeserializerStateEPv", i1 (%"class.v8_crdtp::DeserializerState"*, i8*)** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 1, i32 2), align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i8** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 2, i32 0, i32 0), align 16
  store i64 4, i64* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 2, i32 0, i32 1), align 8
  store i8 1, i8* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 2, i32 1), align 16
  store i1 (%"class.v8_crdtp::DeserializerState"*, i8*)* @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_28__invokeEPN8v8_crdtp17DeserializerStateEPv", i1 (%"class.v8_crdtp::DeserializerState"*, i8*)** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 2, i32 2), align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i8** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 3, i32 0, i32 0), align 16
  store i64 6, i64* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 3, i32 0, i32 1), align 8
  store i8 0, i8* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 3, i32 1), align 16
  store i1 (%"class.v8_crdtp::DeserializerState"*, i8*)* @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_38__invokeEPN8v8_crdtp17DeserializerStateEPv", i1 (%"class.v8_crdtp::DeserializerState"*, i8*)** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 3, i32 2), align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i8** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 4, i32 0, i32 0), align 16
  store i64 4, i64* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 4, i32 0, i32 1), align 8
  store i8 0, i8* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 4, i32 1), align 16
  store i1 (%"class.v8_crdtp::DeserializerState"*, i8*)* @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_48__invokeEPN8v8_crdtp17DeserializerStateEPv", i1 (%"class.v8_crdtp::DeserializerState"*, i8*)** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 4, i32 2), align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i8** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 5, i32 0, i32 0), align 16
  store i64 3, i64* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 5, i32 0, i32 1), align 8
  store i8 1, i8* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 5, i32 1), align 16
  store i1 (%"class.v8_crdtp::DeserializerState"*, i8*)* @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_58__invokeEPN8v8_crdtp17DeserializerStateEPv", i1 (%"class.v8_crdtp::DeserializerState"*, i8*)** getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 5, i32 2), align 8
  %7 = tail call {}* @llvm.invariant.start.p0i8(i64 192, i8* bitcast ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields) #11
  br label %8

8:                                                ; preds = %3, %6, %0
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6s_desc to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %16, !prof !2

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6s_desc) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  tail call void @_ZN8v8_crdtp22DeserializerDescriptorC1EPKNS0_5FieldEm(%"class.v8_crdtp::DeserializerDescriptor"* nonnull @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6s_desc, %"struct.v8_crdtp::DeserializerDescriptor::Field"* getelementptr inbounds ([6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"], [6 x %"struct.v8_crdtp::DeserializerDescriptor::Field"]* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6fields, i64 0, i64 0), i64 6) #11
  %15 = tail call {}* @llvm.invariant.start.p0i8(i64 24, i8* bitcast (%"class.v8_crdtp::DeserializerDescriptor"* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6s_desc to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6s_desc) #11
  br label %16

16:                                               ; preds = %11, %14, %8
  ret %"class.v8_crdtp::DeserializerDescriptor"* @_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvE6s_desc
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

declare void @_ZN8v8_crdtp22DeserializerDescriptorC1EPKNS0_5FieldEm(%"class.v8_crdtp::DeserializerDescriptor"*, %"struct.v8_crdtp::DeserializerDescriptor::Field"*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol7Console14ConsoleMessage16AppendSerializedEPNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.v8_inspector::protocol::Console::ConsoleMessage"*, %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_crdtp::ContainerSerializer", align 8
  %4 = bitcast %"class.v8_crdtp::ContainerSerializer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = tail call zeroext i8 @_ZN8v8_crdtp4cbor30EncodeIndefiniteLengthMapStartEv() #11
  call void @_ZN8v8_crdtp19ContainerSerializerC1EPNSt3__16vectorIhNS1_9allocatorIhEEEEh(%"class.v8_crdtp::ContainerSerializer"* nonnull %3, %"class.std::__1::vector"* %1, i8 zeroext %5) #11
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8_crdtp::ContainerSerializer", %"class.v8_crdtp::ContainerSerializer"* %3, i64 0, i32 0
  %8 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i64 6, %"class.std::__1::vector"* %8) #11
  %9 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE9SerializeERKS2_PNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.v8_inspector::String16"* dereferenceable(32) %6, %"class.std::__1::vector"* %9) #11
  %10 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i64 5, %"class.std::__1::vector"* %11) #11
  %12 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE9SerializeERKS2_PNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.v8_inspector::String16"* dereferenceable(32) %10, %"class.std::__1::vector"* %12) #11
  %13 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 3
  %14 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i64 4, %"class.std::__1::vector"* %14) #11
  %15 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE9SerializeERKS2_PNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.v8_inspector::String16"* dereferenceable(32) %13, %"class.std::__1::vector"* %15) #11
  %16 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 4, i32 0
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 4, i32 1
  %21 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i64 3, %"class.std::__1::vector"* %21) #11
  %22 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE9SerializeERKS2_PNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.v8_inspector::String16"* dereferenceable(32) %20, %"class.std::__1::vector"* %22) #11
  br label %23

23:                                               ; preds = %2, %19
  %24 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 5, i32 0
  %25 = load i8, i8* %24, align 4, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 5, i32 1
  %29 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i64 4, %"class.std::__1::vector"* %29) #11
  %30 = load i32, i32* %28, align 4
  %31 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp18ProtocolTypeTraitsIivE9SerializeEiPNSt3__16vectorIhNS2_9allocatorIhEEEE(i32 %30, %"class.std::__1::vector"* %31) #11
  br label %32

32:                                               ; preds = %23, %27
  %33 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 6, i32 0
  %34 = load i8, i8* %33, align 4, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 6, i32 1
  %38 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i64 6, %"class.std::__1::vector"* %38) #11
  %39 = load i32, i32* %37, align 4
  %40 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  call void @_ZN8v8_crdtp18ProtocolTypeTraitsIivE9SerializeEiPNSt3__16vectorIhNS2_9allocatorIhEEEE(i32 %39, %"class.std::__1::vector"* %40) #11
  br label %41

41:                                               ; preds = %32, %36
  call void @_ZN8v8_crdtp19ContainerSerializer10EncodeStopEv(%"class.v8_crdtp::ContainerSerializer"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

declare zeroext i8 @_ZN8v8_crdtp4cbor30EncodeIndefiniteLengthMapStartEv() local_unnamed_addr #3

declare void @_ZN8v8_crdtp19ContainerSerializerC1EPNSt3__16vectorIhNS1_9allocatorIhEEEEh(%"class.v8_crdtp::ContainerSerializer"*, %"class.std::__1::vector"*, i8 zeroext) unnamed_addr #3

declare void @_ZN8v8_crdtp19ContainerSerializer10EncodeStopEv(%"class.v8_crdtp::ContainerSerializer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol7Console8Frontend12messageAddedENSt3__110unique_ptrINS1_14ConsoleMessageENS3_14default_deleteIS5_EEEE(%"class.v8_inspector::protocol::Console::Frontend"* nocapture readonly, %"class.v8_inspector::protocol::Console::ConsoleMessage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_crdtp::ObjectSerializer", align 8
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::Console::Frontend", %"class.v8_inspector::protocol::Console::Frontend"* %0, i64 0, i32 0
  %5 = load %"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::FrontendChannel"** %4, align 8
  %6 = icmp eq %"class.v8_crdtp::FrontendChannel"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8_crdtp::ObjectSerializer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #11
  call void @_ZN8v8_crdtp16ObjectSerializerC1Ev(%"class.v8_crdtp::ObjectSerializer"* nonnull %3) #11
  %9 = getelementptr inbounds %"class.v8_crdtp::ObjectSerializer", %"class.v8_crdtp::ObjectSerializer"* %3, i64 0, i32 1, i32 0
  %10 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %9, align 8
  call void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i64 7, %"class.std::__1::vector"* %10) #11
  %11 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %9, align 8
  %12 = bitcast %"class.v8_inspector::protocol::Console::ConsoleMessage"* %1 to void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*, %"class.std::__1::vector"*)***
  %13 = load void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*, %"class.std::__1::vector"*)**, void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*, %"class.std::__1::vector"*)*** %12, align 8
  %14 = load void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*, %"class.std::__1::vector"*)*, void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*, %"class.std::__1::vector"*)** %13, align 8
  call void %14(%"class.v8_inspector::protocol::Console::ConsoleMessage"* %1, %"class.std::__1::vector"* %11) #11
  %15 = load %"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::FrontendChannel"** %4, align 8
  %16 = call %"class.v8_crdtp::Serializable"* @_ZN8v8_crdtp16ObjectSerializer6FinishEv(%"class.v8_crdtp::ObjectSerializer"* nonnull %3) #11
  %17 = call %"class.v8_crdtp::Serializable"* @_ZN8v8_crdtp18CreateNotificationEPKcNSt3__110unique_ptrINS_12SerializableENS2_14default_deleteIS4_EEEE(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), %"class.v8_crdtp::Serializable"* %16) #11
  %18 = bitcast %"class.v8_crdtp::FrontendChannel"* %15 to void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)***
  %19 = load void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)**, void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)*, void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)** %19, i64 3
  %21 = load void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)*, void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)** %20, align 8
  call void %21(%"class.v8_crdtp::FrontendChannel"* %15, %"class.v8_crdtp::Serializable"* %17) #11
  call void @_ZN8v8_crdtp16ObjectSerializerD1Ev(%"class.v8_crdtp::ObjectSerializer"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #11
  br label %22

22:                                               ; preds = %2, %7
  %23 = icmp eq %"class.v8_inspector::protocol::Console::ConsoleMessage"* %1, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::protocol::Console::ConsoleMessage"* %1 to void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*)***
  %26 = load void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*)**, void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*)*, void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*)** %26, i64 2
  %28 = load void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*)*, void (%"class.v8_inspector::protocol::Console::ConsoleMessage"*)** %27, align 8
  call void %28(%"class.v8_inspector::protocol::Console::ConsoleMessage"* nonnull %1) #11
  br label %29

29:                                               ; preds = %22, %24
  ret void
}

declare void @_ZN8v8_crdtp16ObjectSerializerC1Ev(%"class.v8_crdtp::ObjectSerializer"*) unnamed_addr #3

declare %"class.v8_crdtp::Serializable"* @_ZN8v8_crdtp18CreateNotificationEPKcNSt3__110unique_ptrINS_12SerializableENS2_14default_deleteIS4_EEEE(i8*, %"class.v8_crdtp::Serializable"*) local_unnamed_addr #3

declare %"class.v8_crdtp::Serializable"* @_ZN8v8_crdtp16ObjectSerializer6FinishEv(%"class.v8_crdtp::ObjectSerializer"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8v8_crdtp16ObjectSerializerD1Ev(%"class.v8_crdtp::ObjectSerializer"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol7Console8Frontend5flushEv(%"class.v8_inspector::protocol::Console::Frontend"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::Console::Frontend", %"class.v8_inspector::protocol::Console::Frontend"* %0, i64 0, i32 0
  %3 = load %"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::FrontendChannel"** %2, align 8
  %4 = bitcast %"class.v8_crdtp::FrontendChannel"* %3 to void (%"class.v8_crdtp::FrontendChannel"*)***
  %5 = load void (%"class.v8_crdtp::FrontendChannel"*)**, void (%"class.v8_crdtp::FrontendChannel"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.v8_crdtp::FrontendChannel"*)*, void (%"class.v8_crdtp::FrontendChannel"*)** %5, i64 5
  %7 = load void (%"class.v8_crdtp::FrontendChannel"*)*, void (%"class.v8_crdtp::FrontendChannel"*)** %6, align 8
  tail call void %7(%"class.v8_crdtp::FrontendChannel"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol7Console8Frontend19sendRawNotificationENSt3__110unique_ptrIN8v8_crdtp12SerializableENS3_14default_deleteIS6_EEEE(%"class.v8_inspector::protocol::Console::Frontend"* nocapture readonly, %"class.v8_crdtp::Serializable"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::Console::Frontend", %"class.v8_inspector::protocol::Console::Frontend"* %0, i64 0, i32 0
  %4 = load %"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::FrontendChannel"** %3, align 8
  %5 = bitcast %"class.v8_crdtp::FrontendChannel"* %4 to void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)***
  %6 = load void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)**, void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)*, void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)** %6, i64 3
  %8 = load void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)*, void (%"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::Serializable"*)** %7, align 8
  tail call void %8(%"class.v8_crdtp::FrontendChannel"* %4, %"class.v8_crdtp::Serializable"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEE(%"class.std::__1::function"* noalias nocapture sret, %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, i8*, i64) unnamed_addr #0 align 2 {
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN12v8_inspector8protocol7Console12_GLOBAL__N_113CommandByNameEN8v8_crdtp4spanIhEEE8commands to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %20, !prof !2

7:                                                ; preds = %4
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12v8_inspector8protocol7Console12_GLOBAL__N_113CommandByNameEN8v8_crdtp4spanIhEEE8commands) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %7
  %11 = tail call i8* @_Znwm(i64 24) #12
  %12 = tail call i8* @_Znwm(i64 96) #12
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %11 to i8**
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 96
  %16 = getelementptr inbounds i8, i8* %11, i64 16
  %17 = bitcast i8* %16 to i8**
  store i8* %15, i8** %17, align 8
  %18 = bitcast i8* %13 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast ([3 x %"struct.std::__1::pair.99"]* @.ref.tmp to i8*), i64 96, i1 false) #11
  %19 = ptrtoint i8* %15 to i64
  store i64 %19, i64* %18, align 8
  store i8* %11, i8** bitcast (%"class.std::__1::vector.97"** @_ZZN12v8_inspector8protocol7Console12_GLOBAL__N_113CommandByNameEN8v8_crdtp4spanIhEEE8commands to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12v8_inspector8protocol7Console12_GLOBAL__N_113CommandByNameEN8v8_crdtp4spanIhEEE8commands) #11
  br label %20

20:                                               ; preds = %10, %7, %4
  %21 = load %"class.std::__1::vector.97"*, %"class.std::__1::vector.97"** @_ZZN12v8_inspector8protocol7Console12_GLOBAL__N_113CommandByNameEN8v8_crdtp4spanIhEEE8commands, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %21, i64 0, i32 0, i32 0
  %23 = load %"struct.std::__1::pair.99"*, %"struct.std::__1::pair.99"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %21, i64 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::pair.99"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = ptrtoint %"struct.std::__1::pair.99"* %23 to i64
  %28 = sub i64 %26, %27
  %29 = icmp eq i64 %28, 0
  %30 = inttoptr i64 %26 to %"struct.std::__1::pair.99"*
  br i1 %29, label %51, label %31

31:                                               ; preds = %20
  %32 = ashr exact i64 %28, 5
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi %"struct.std::__1::pair.99"* [ %23, %31 ], [ %47, %33 ]
  %35 = phi i64 [ %32, %31 ], [ %46, %33 ]
  %36 = lshr i64 %35, 1
  %37 = getelementptr inbounds %"struct.std::__1::pair.99", %"struct.std::__1::pair.99"* %34, i64 %36
  %38 = getelementptr inbounds %"struct.std::__1::pair.99", %"struct.std::__1::pair.99"* %37, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.99", %"struct.std::__1::pair.99"* %34, i64 %36, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = tail call zeroext i1 @_ZN8v8_crdtp12SpanLessThanENS_4spanIhEES1_(i8* %39, i64 %41, i8* %2, i64 %3) #11
  %43 = getelementptr inbounds %"struct.std::__1::pair.99", %"struct.std::__1::pair.99"* %37, i64 1
  %44 = xor i64 %36, -1
  %45 = add i64 %35, %44
  %46 = select i1 %42, i64 %45, i64 %36
  %47 = select i1 %42, %"struct.std::__1::pair.99"* %43, %"struct.std::__1::pair.99"* %34
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %49, label %33

49:                                               ; preds = %33
  %50 = load %"struct.std::__1::pair.99"*, %"struct.std::__1::pair.99"** %24, align 8
  br label %51

51:                                               ; preds = %49, %20
  %52 = phi %"struct.std::__1::pair.99"* [ %30, %20 ], [ %50, %49 ]
  %53 = phi %"struct.std::__1::pair.99"* [ %23, %20 ], [ %47, %49 ]
  %54 = icmp eq %"struct.std::__1::pair.99"* %53, %52
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.std::__1::pair.99", %"struct.std::__1::pair.99"* %53, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.99", %"struct.std::__1::pair.99"* %53, i64 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = tail call zeroext i1 @_ZN8v8_crdtp10SpanEqualsENS_4spanIhEES1_(i8* %57, i64 %59, i8* %2, i64 %3) #11
  br i1 %60, label %61, label %68

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.std::__1::pair.99", %"struct.std::__1::pair.99"* %53, i64 0, i32 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = insertvalue { i64, i64 } undef, i64 %63, 0
  %65 = getelementptr inbounds %"struct.std::__1::pair.99", %"struct.std::__1::pair.99"* %53, i64 0, i32 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = insertvalue { i64, i64 } %64, i64 %66, 1
  br label %68

68:                                               ; preds = %51, %55, %61
  %69 = phi { i64, i64 } [ %67, %61 ], [ zeroinitializer, %55 ], [ zeroinitializer, %51 ]
  %70 = extractvalue { i64, i64 } %69, 0
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %81, label %72

72:                                               ; preds = %68
  %73 = extractvalue { i64, i64 } %69, 1
  %74 = tail call i8* @_Znwm(i64 24) #12, !noalias !4
  %75 = bitcast i8* %74 to %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"**
  store %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %1, %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"** %75, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 8
  %77 = bitcast i8* %76 to i64*
  store i64 %70, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %74, i64 16
  %79 = bitcast i8* %78 to i64*
  store i64 %73, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %74, i8** %80, align 8
  br label %81

81:                                               ; preds = %68, %72
  %82 = phi void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_crdtp::Dispatchable"*)* [ @"_ZNSt3__110__function16__policy_invokerIFvRKN8v8_crdtp12DispatchableEEE11__call_implINS0_20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchENS2_4spanIhEEE3$_6S6_EEEEvPKNS0_16__policy_storageES5_", %72 ], [ @_ZNSt3__110__function16__policy_invokerIFvRKN8v8_crdtp12DispatchableEEE12__call_emptyEPKNS0_16__policy_storageES5_, %68 ]
  %83 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %72 ], [ @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %68 ]
  %84 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_crdtp::Dispatchable"*)* %82, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_crdtp::Dispatchable"*)** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* %83, %"struct.std::__1::__function::__policy"** %85, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol7Console20DomainDispatcherImpl13clearMessagesERKN8v8_crdtp12DispatchableE(%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"* nocapture readonly dereferenceable(96)) #0 align 2 {
  %3 = alloca %"class.v8_crdtp::DispatchResponse", align 8
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 0
  %5 = tail call %"class.v8_crdtp::DomainDispatcher::WeakPtr"* @_ZN8v8_crdtp16DomainDispatcher7weakPtrEv(%"class.v8_crdtp::DomainDispatcher"* %4) #11
  %6 = bitcast %"class.v8_crdtp::DispatchResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 1
  %8 = load %"class.v8_inspector::protocol::Console::Backend"*, %"class.v8_inspector::protocol::Console::Backend"** %7, align 8
  %9 = bitcast %"class.v8_inspector::protocol::Console::Backend"* %8 to void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)***
  %10 = load void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)**, void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)*, void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)** %10, i64 2
  %12 = load void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)*, void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)** %11, align 8
  call void %12(%"class.v8_crdtp::DispatchResponse"* nonnull sret %3, %"class.v8_inspector::protocol::Console::Backend"* %8) #11
  %13 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::FrontendChannel"** %17, align 8
  %19 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8_crdtp::FrontendChannel"* %18 to void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)***
  %26 = load void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)**, void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)*, void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)** %26, i64 4
  %28 = load void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)*, void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)** %27, align 8
  call void %28(%"class.v8_crdtp::FrontendChannel"* %18, i32 %20, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), i64 21, i8* %22, i64 %24) #11
  br label %36

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8_crdtp::DomainDispatcher::WeakPtr", %"class.v8_crdtp::DomainDispatcher::WeakPtr"* %5, i64 0, i32 0
  %31 = load %"class.v8_crdtp::DomainDispatcher"*, %"class.v8_crdtp::DomainDispatcher"** %30, align 8
  %32 = icmp eq %"class.v8_crdtp::DomainDispatcher"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  call void @_ZN8v8_crdtp16DomainDispatcher12sendResponseEiRKNS_16DispatchResponseENSt3__110unique_ptrINS_12SerializableENS4_14default_deleteIS6_EEEE(%"class.v8_crdtp::DomainDispatcher"* nonnull %31, i32 %35, %"class.v8_crdtp::DispatchResponse"* nonnull dereferenceable(32) %3, %"class.v8_crdtp::Serializable"* null) #11
  br label %36

36:                                               ; preds = %33, %29, %16
  %37 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %3, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string.61"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %36, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  %46 = icmp eq %"class.v8_crdtp::DomainDispatcher::WeakPtr"* %5, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  call void @_ZN8v8_crdtp16DomainDispatcher7WeakPtrD1Ev(%"class.v8_crdtp::DomainDispatcher::WeakPtr"* nonnull %5) #11
  %48 = bitcast %"class.v8_crdtp::DomainDispatcher::WeakPtr"* %5 to i8*
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %45, %47
  ret void
}

declare %"class.v8_crdtp::DomainDispatcher::WeakPtr"* @_ZN8v8_crdtp16DomainDispatcher7weakPtrEv(%"class.v8_crdtp::DomainDispatcher"*) local_unnamed_addr #3

declare void @_ZN8v8_crdtp16DomainDispatcher12sendResponseEiRKNS_16DispatchResponseENSt3__110unique_ptrINS_12SerializableENS4_14default_deleteIS6_EEEE(%"class.v8_crdtp::DomainDispatcher"*, i32, %"class.v8_crdtp::DispatchResponse"* dereferenceable(32), %"class.v8_crdtp::Serializable"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol7Console20DomainDispatcherImpl7disableERKN8v8_crdtp12DispatchableE(%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"* nocapture readonly dereferenceable(96)) #0 align 2 {
  %3 = alloca %"class.v8_crdtp::DispatchResponse", align 8
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 0
  %5 = tail call %"class.v8_crdtp::DomainDispatcher::WeakPtr"* @_ZN8v8_crdtp16DomainDispatcher7weakPtrEv(%"class.v8_crdtp::DomainDispatcher"* %4) #11
  %6 = bitcast %"class.v8_crdtp::DispatchResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 1
  %8 = load %"class.v8_inspector::protocol::Console::Backend"*, %"class.v8_inspector::protocol::Console::Backend"** %7, align 8
  %9 = bitcast %"class.v8_inspector::protocol::Console::Backend"* %8 to void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)***
  %10 = load void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)**, void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)*, void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)** %10, i64 3
  %12 = load void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)*, void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)** %11, align 8
  call void %12(%"class.v8_crdtp::DispatchResponse"* nonnull sret %3, %"class.v8_inspector::protocol::Console::Backend"* %8) #11
  %13 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::FrontendChannel"** %17, align 8
  %19 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8_crdtp::FrontendChannel"* %18 to void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)***
  %26 = load void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)**, void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)*, void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)** %26, i64 4
  %28 = load void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)*, void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)** %27, align 8
  call void %28(%"class.v8_crdtp::FrontendChannel"* %18, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i64 15, i8* %22, i64 %24) #11
  br label %36

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8_crdtp::DomainDispatcher::WeakPtr", %"class.v8_crdtp::DomainDispatcher::WeakPtr"* %5, i64 0, i32 0
  %31 = load %"class.v8_crdtp::DomainDispatcher"*, %"class.v8_crdtp::DomainDispatcher"** %30, align 8
  %32 = icmp eq %"class.v8_crdtp::DomainDispatcher"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  call void @_ZN8v8_crdtp16DomainDispatcher12sendResponseEiRKNS_16DispatchResponseENSt3__110unique_ptrINS_12SerializableENS4_14default_deleteIS6_EEEE(%"class.v8_crdtp::DomainDispatcher"* nonnull %31, i32 %35, %"class.v8_crdtp::DispatchResponse"* nonnull dereferenceable(32) %3, %"class.v8_crdtp::Serializable"* null) #11
  br label %36

36:                                               ; preds = %33, %29, %16
  %37 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %3, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string.61"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %36, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  %46 = icmp eq %"class.v8_crdtp::DomainDispatcher::WeakPtr"* %5, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  call void @_ZN8v8_crdtp16DomainDispatcher7WeakPtrD1Ev(%"class.v8_crdtp::DomainDispatcher::WeakPtr"* nonnull %5) #11
  %48 = bitcast %"class.v8_crdtp::DomainDispatcher::WeakPtr"* %5 to i8*
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %45, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol7Console20DomainDispatcherImpl6enableERKN8v8_crdtp12DispatchableE(%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"* nocapture readonly dereferenceable(96)) #0 align 2 {
  %3 = alloca %"class.v8_crdtp::DispatchResponse", align 8
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 0
  %5 = tail call %"class.v8_crdtp::DomainDispatcher::WeakPtr"* @_ZN8v8_crdtp16DomainDispatcher7weakPtrEv(%"class.v8_crdtp::DomainDispatcher"* %4) #11
  %6 = bitcast %"class.v8_crdtp::DispatchResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 1
  %8 = load %"class.v8_inspector::protocol::Console::Backend"*, %"class.v8_inspector::protocol::Console::Backend"** %7, align 8
  %9 = bitcast %"class.v8_inspector::protocol::Console::Backend"* %8 to void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)***
  %10 = load void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)**, void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)*, void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)** %10, i64 4
  %12 = load void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)*, void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::protocol::Console::Backend"*)** %11, align 8
  call void %12(%"class.v8_crdtp::DispatchResponse"* nonnull sret %3, %"class.v8_inspector::protocol::Console::Backend"* %8) #11
  %13 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::FrontendChannel"** %17, align 8
  %19 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8_crdtp::FrontendChannel"* %18 to void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)***
  %26 = load void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)**, void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)*, void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)** %26, i64 4
  %28 = load void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)*, void (%"class.v8_crdtp::FrontendChannel"*, i32, i8*, i64, i8*, i64)** %27, align 8
  call void %28(%"class.v8_crdtp::FrontendChannel"* %18, i32 %20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i64 14, i8* %22, i64 %24) #11
  br label %36

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8_crdtp::DomainDispatcher::WeakPtr", %"class.v8_crdtp::DomainDispatcher::WeakPtr"* %5, i64 0, i32 0
  %31 = load %"class.v8_crdtp::DomainDispatcher"*, %"class.v8_crdtp::DomainDispatcher"** %30, align 8
  %32 = icmp eq %"class.v8_crdtp::DomainDispatcher"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.v8_crdtp::Dispatchable", %"class.v8_crdtp::Dispatchable"* %1, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  call void @_ZN8v8_crdtp16DomainDispatcher12sendResponseEiRKNS_16DispatchResponseENSt3__110unique_ptrINS_12SerializableENS4_14default_deleteIS6_EEEE(%"class.v8_crdtp::DomainDispatcher"* nonnull %31, i32 %35, %"class.v8_crdtp::DispatchResponse"* nonnull dereferenceable(32) %3, %"class.v8_crdtp::Serializable"* null) #11
  br label %36

36:                                               ; preds = %33, %29, %16
  %37 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %3, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string.61"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %36, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  %46 = icmp eq %"class.v8_crdtp::DomainDispatcher::WeakPtr"* %5, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  call void @_ZN8v8_crdtp16DomainDispatcher7WeakPtrD1Ev(%"class.v8_crdtp::DomainDispatcher::WeakPtr"* nonnull %5) #11
  %48 = bitcast %"class.v8_crdtp::DomainDispatcher::WeakPtr"* %5 to i8*
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %45, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol7Console10Dispatcher4wireEPN8v8_crdtp14UberDispatcherEPNS1_7BackendE(%"class.v8_crdtp::UberDispatcher"*, %"class.v8_inspector::protocol::Console::Backend"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8_inspector::protocol::Console::Backend"* %1 to i64
  %4 = getelementptr inbounds %"class.v8_crdtp::UberDispatcher", %"class.v8_crdtp::UberDispatcher"* %0, i64 0, i32 1
  %5 = load %"class.v8_crdtp::FrontendChannel"*, %"class.v8_crdtp::FrontendChannel"** %4, align 8
  %6 = tail call i8* @_Znwm(i64 64) #12
  %7 = bitcast i8* %6 to %"class.v8_crdtp::DomainDispatcher"*
  tail call void @_ZN8v8_crdtp16DomainDispatcherC2EPNS_15FrontendChannelE(%"class.v8_crdtp::DomainDispatcher"* nonnull %7, %"class.v8_crdtp::FrontendChannel"* %5) #11
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Console20DomainDispatcherImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 56
  %10 = bitcast i8* %9 to i64*
  store i64 %3, i64* %10, align 8
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN12v8_inspector8protocol7Console12_GLOBAL__N_115SortedRedirectsEvE9redirects to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %18, !prof !2

13:                                               ; preds = %2
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12v8_inspector8protocol7Console12_GLOBAL__N_115SortedRedirectsEvE9redirects) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #11
  store i8* %17, i8** bitcast (%"class.std::__1::vector.70"** @_ZZN12v8_inspector8protocol7Console12_GLOBAL__N_115SortedRedirectsEvE9redirects to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12v8_inspector8protocol7Console12_GLOBAL__N_115SortedRedirectsEvE9redirects) #11
  br label %18

18:                                               ; preds = %16, %13, %2
  %19 = load %"class.std::__1::vector.70"*, %"class.std::__1::vector.70"** @_ZZN12v8_inspector8protocol7Console12_GLOBAL__N_115SortedRedirectsEvE9redirects, align 8
  tail call void @_ZN8v8_crdtp14UberDispatcher11WireBackendENS_4spanIhEERKNSt3__16vectorINS3_4pairIS2_S2_EENS3_9allocatorIS6_EEEENS3_10unique_ptrINS_16DomainDispatcherENS3_14default_deleteISD_EEEE(%"class.v8_crdtp::UberDispatcher"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12v8_inspector8protocol7Console8Metainfo10domainNameE, i64 0, i64 0), i64 7, %"class.std::__1::vector.70"* dereferenceable(24) %19, %"class.v8_crdtp::DomainDispatcher"* nonnull %7) #11
  ret void
}

declare void @_ZN8v8_crdtp14UberDispatcher11WireBackendENS_4spanIhEERKNSt3__16vectorINS3_4pairIS2_S2_EENS3_9allocatorIS6_EEEENS3_10unique_ptrINS_16DomainDispatcherENS3_14default_deleteISD_EEEE(%"class.v8_crdtp::UberDispatcher"*, i8*, i64, %"class.std::__1::vector.70"* dereferenceable(24), %"class.v8_crdtp::DomainDispatcher"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Console14ConsoleMessageD2Ev(%"class.v8_inspector::protocol::Console::ConsoleMessage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Console14ConsoleMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 4, i32 1
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 3
  %13 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 2
  %22 = bitcast %"class.v8_inspector::String16"* %21 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.v8_inspector::String16"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 1
  %31 = bitcast %"class.v8_inspector::String16"* %30 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = bitcast %"class.v8_inspector::String16"* %30 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %29, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Console14ConsoleMessageD0Ev(%"class.v8_inspector::protocol::Console::ConsoleMessage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Console14ConsoleMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 4, i32 1
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 3
  %13 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 2
  %22 = bitcast %"class.v8_inspector::String16"* %21 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.v8_inspector::String16"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %26, %20
  %30 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 1
  %31 = bitcast %"class.v8_inspector::String16"* %30 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = bitcast %"class.v8_inspector::String16"* %30 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %29, %35
  %39 = bitcast %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8v8_crdtp16DomainDispatcherD2Ev(%"class.v8_crdtp::DomainDispatcher"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Console20DomainDispatcherImplD0Ev(%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::Console::DomainDispatcherImpl", %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0, i64 0, i32 0
  tail call void @_ZN8v8_crdtp16DomainDispatcherD2Ev(%"class.v8_crdtp::DomainDispatcher"* %2) #11
  %3 = bitcast %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal zeroext i1 @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_08__invokeEPN8v8_crdtp17DeserializerStateEPv"(%"class.v8_crdtp::DeserializerState"*, i8* nocapture) #5 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  %5 = call zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIivE11DeserializeEPNS_17DeserializerStateEPi(%"class.v8_crdtp::DeserializerState"* %0, i32* nonnull %3) #11
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 152
  %8 = load i32, i32* %3, align 4
  %9 = getelementptr inbounds i8, i8* %1, i64 156
  %10 = bitcast i8* %9 to i32*
  store i32 %8, i32* %10, align 4
  store i8 1, i8* %7, align 4
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i1 [ true, %6 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  ret i1 %12
}

declare zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIivE11DeserializeEPNS_17DeserializerStateEPi(%"class.v8_crdtp::DeserializerState"*, i32*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal zeroext i1 @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_18__invokeEPN8v8_crdtp17DeserializerStateEPv"(%"class.v8_crdtp::DeserializerState"*, i8*) #5 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 40
  %4 = bitcast i8* %3 to %"class.v8_inspector::String16"*
  %5 = tail call zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE11DeserializeEPNS_17DeserializerStateEPS2_(%"class.v8_crdtp::DeserializerState"* %0, %"class.v8_inspector::String16"* %4) #11
  ret i1 %5
}

declare zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE11DeserializeEPNS_17DeserializerStateEPS2_(%"class.v8_crdtp::DeserializerState"*, %"class.v8_inspector::String16"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal zeroext i1 @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_28__invokeEPN8v8_crdtp17DeserializerStateEPv"(%"class.v8_crdtp::DeserializerState"*, i8* nocapture) #5 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  %5 = call zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIivE11DeserializeEPNS_17DeserializerStateEPi(%"class.v8_crdtp::DeserializerState"* %0, i32* nonnull %3) #11
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 144
  %8 = load i32, i32* %3, align 4
  %9 = getelementptr inbounds i8, i8* %1, i64 148
  %10 = bitcast i8* %9 to i32*
  store i32 %8, i32* %10, align 4
  store i8 1, i8* %7, align 4
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i1 [ true, %6 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  ret i1 %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal zeroext i1 @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_38__invokeEPN8v8_crdtp17DeserializerStateEPv"(%"class.v8_crdtp::DeserializerState"*, i8*) #5 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to %"class.v8_inspector::String16"*
  %5 = tail call zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE11DeserializeEPNS_17DeserializerStateEPS2_(%"class.v8_crdtp::DeserializerState"* %0, %"class.v8_inspector::String16"* %4) #11
  ret i1 %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal zeroext i1 @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_48__invokeEPN8v8_crdtp17DeserializerStateEPv"(%"class.v8_crdtp::DeserializerState"*, i8*) #5 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 72
  %4 = bitcast i8* %3 to %"class.v8_inspector::String16"*
  %5 = tail call zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE11DeserializeEPNS_17DeserializerStateEPS2_(%"class.v8_crdtp::DeserializerState"* %0, %"class.v8_inspector::String16"* %4) #11
  ret i1 %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal zeroext i1 @"_ZZN12v8_inspector8protocol7Console14ConsoleMessage23deserializer_descriptorEvEN3$_58__invokeEPN8v8_crdtp17DeserializerStateEPv"(%"class.v8_crdtp::DeserializerState"*, i8*) #5 align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  %6 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 32, i1 false) #11
  %7 = call zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE11DeserializeEPNS_17DeserializerStateEPS2_(%"class.v8_crdtp::DeserializerState"* %0, %"class.v8_inspector::String16"* nonnull %3) #11
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %1, i64 104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %6, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #11
  %10 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds i8, i8* %1, i64 112
  %14 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0
  %16 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #11
  %17 = load i64, i64* %10, align 8
  %18 = getelementptr inbounds i8, i8* %1, i64 136
  %19 = bitcast i8* %18 to i64*
  store i64 %17, i64* %19, align 8
  store i8 1, i8* %9, align 8
  %20 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %8
  %25 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %24, %8, %2
  %28 = phi i1 [ false, %2 ], [ true, %8 ], [ true, %24 ]
  %29 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %27, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = getelementptr i16, i16* %25, i64 %39
  %41 = sub i64 %22, %39
  %42 = getelementptr i16, i16* %19, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %25, i64 %51
  %54 = getelementptr i16, i16* %19, i64 %51
  %55 = bitcast i16* %54 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !9
  %57 = getelementptr i16, i16* %54, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !9
  %60 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !12, !noalias !9
  %61 = getelementptr i16, i16* %53, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !12, !noalias !9
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %25, i64 %63
  %65 = getelementptr i16, i16* %19, i64 %63
  %66 = bitcast i16* %65 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !9
  %68 = getelementptr i16, i16* %65, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !9
  %71 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !12, !noalias !9
  %72 = getelementptr i16, i16* %64, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !12, !noalias !9
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %25, i64 %74
  %76 = getelementptr i16, i16* %19, i64 %74
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !9
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !9
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !12, !noalias !9
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !12, !noalias !9
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %25, i64 %85
  %87 = getelementptr i16, i16* %19, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !9
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !9
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !12, !noalias !9
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !12, !noalias !9
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !14

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %25, i64 %103
  %106 = getelementptr i16, i16* %19, i64 %103
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !9
  %109 = getelementptr i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !9
  %112 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !12, !noalias !9
  %113 = getelementptr i16, i16* %105, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !12, !noalias !9
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !16

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %40, %118 ]
  %122 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %42, %118 ]
  %124 = add i64 %122, -1
  %125 = and i64 %122, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i16* [ %134, %127 ], [ %121, %120 ]
  %129 = phi i64 [ %133, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %135, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %130, align 2
  store i16 %132, i16* %128, align 2
  %133 = add i64 %129, -1
  %134 = getelementptr inbounds i16, i16* %128, i64 1
  %135 = getelementptr inbounds i16, i16* %130, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !18

138:                                              ; preds = %127, %120
  %139 = phi i16* [ %121, %120 ], [ %134, %127 ]
  %140 = phi i64 [ %122, %120 ], [ %133, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %135, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i16* [ %170, %143 ], [ %139, %138 ]
  %145 = phi i64 [ %169, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %171, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %146, align 2
  store i16 %147, i16* %144, align 2
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %146, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %144, i64 2
  %152 = getelementptr inbounds i16, i16* %146, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %144, i64 3
  %155 = getelementptr inbounds i16, i16* %146, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %144, i64 4
  %158 = getelementptr inbounds i16, i16* %146, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %144, i64 5
  %161 = getelementptr inbounds i16, i16* %146, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %144, i64 6
  %164 = getelementptr inbounds i16, i16* %146, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %144, i64 7
  %167 = getelementptr inbounds i16, i16* %146, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %145, -8
  %170 = getelementptr inbounds i16, i16* %144, i64 8
  %171 = getelementptr inbounds i16, i16* %146, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !19

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = getelementptr i16, i16* %190, i64 %201
  %203 = sub i64 %22, %201
  %204 = getelementptr i16, i16* %19, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %190, i64 %213
  %216 = getelementptr i16, i16* %19, i64 %213
  %217 = bitcast i16* %216 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !20
  %219 = getelementptr i16, i16* %216, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !20
  %222 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !23, !noalias !20
  %223 = getelementptr i16, i16* %215, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !23, !noalias !20
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %190, i64 %225
  %227 = getelementptr i16, i16* %19, i64 %225
  %228 = bitcast i16* %227 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !20
  %230 = getelementptr i16, i16* %227, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !20
  %233 = bitcast i16* %226 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !23, !noalias !20
  %234 = getelementptr i16, i16* %226, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !23, !noalias !20
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %190, i64 %236
  %238 = getelementptr i16, i16* %19, i64 %236
  %239 = bitcast i16* %238 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !20
  %241 = getelementptr i16, i16* %238, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !20
  %244 = bitcast i16* %237 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !23, !noalias !20
  %245 = getelementptr i16, i16* %237, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !23, !noalias !20
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %190, i64 %247
  %249 = getelementptr i16, i16* %19, i64 %247
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !20
  %252 = getelementptr i16, i16* %249, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !20
  %255 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !23, !noalias !20
  %256 = getelementptr i16, i16* %248, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !23, !noalias !20
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !25

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %190, i64 %265
  %268 = getelementptr i16, i16* %19, i64 %265
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !20
  %271 = getelementptr i16, i16* %268, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !20
  %274 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !23, !noalias !20
  %275 = getelementptr i16, i16* %267, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !23, !noalias !20
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !26

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %202, %280 ]
  %284 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %204, %280 ]
  %286 = add i64 %284, -1
  %287 = and i64 %284, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i16* [ %296, %289 ], [ %283, %282 ]
  %291 = phi i64 [ %295, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %297, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %292, align 2
  store i16 %294, i16* %290, align 2
  %295 = add i64 %291, -1
  %296 = getelementptr inbounds i16, i16* %290, i64 1
  %297 = getelementptr inbounds i16, i16* %292, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !27

300:                                              ; preds = %289, %282
  %301 = phi i16* [ %283, %282 ], [ %296, %289 ]
  %302 = phi i64 [ %284, %282 ], [ %295, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %297, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i16* [ %332, %305 ], [ %301, %300 ]
  %307 = phi i64 [ %331, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %333, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %308, align 2
  store i16 %309, i16* %306, align 2
  %310 = getelementptr inbounds i16, i16* %306, i64 1
  %311 = getelementptr inbounds i16, i16* %308, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %306, i64 2
  %314 = getelementptr inbounds i16, i16* %308, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %306, i64 3
  %317 = getelementptr inbounds i16, i16* %308, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %306, i64 4
  %320 = getelementptr inbounds i16, i16* %308, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %306, i64 5
  %323 = getelementptr inbounds i16, i16* %308, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %306, i64 6
  %326 = getelementptr inbounds i16, i16* %308, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %306, i64 7
  %329 = getelementptr inbounds i16, i16* %308, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %307, -8
  %332 = getelementptr inbounds i16, i16* %306, i64 8
  %333 = getelementptr inbounds i16, i16* %308, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !28

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = getelementptr i16, i16* %356, i64 %368
  %370 = sub i64 %349, %368
  %371 = getelementptr i16, i16* %348, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %356, i64 %380
  %383 = getelementptr i16, i16* %348, i64 %380
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !29
  %386 = getelementptr i16, i16* %383, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !29
  %389 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !32, !noalias !29
  %390 = getelementptr i16, i16* %382, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !32, !noalias !29
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %356, i64 %392
  %394 = getelementptr i16, i16* %348, i64 %392
  %395 = bitcast i16* %394 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !29
  %397 = getelementptr i16, i16* %394, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !29
  %400 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !32, !noalias !29
  %401 = getelementptr i16, i16* %393, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !32, !noalias !29
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %356, i64 %403
  %405 = getelementptr i16, i16* %348, i64 %403
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !29
  %408 = getelementptr i16, i16* %405, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !29
  %411 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !32, !noalias !29
  %412 = getelementptr i16, i16* %404, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !32, !noalias !29
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %356, i64 %414
  %416 = getelementptr i16, i16* %348, i64 %414
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !29
  %419 = getelementptr i16, i16* %416, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !29
  %422 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !32, !noalias !29
  %423 = getelementptr i16, i16* %415, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !32, !noalias !29
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !34

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %356, i64 %432
  %435 = getelementptr i16, i16* %348, i64 %432
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !29
  %438 = getelementptr i16, i16* %435, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !29
  %441 = bitcast i16* %434 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !32, !noalias !29
  %442 = getelementptr i16, i16* %434, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !32, !noalias !29
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !35

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %369, %447 ]
  %451 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %371, %447 ]
  %453 = add i64 %451, -1
  %454 = and i64 %451, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i16* [ %463, %456 ], [ %450, %449 ]
  %458 = phi i64 [ %462, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %464, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %459, align 2
  store i16 %461, i16* %457, align 2
  %462 = add i64 %458, -1
  %463 = getelementptr inbounds i16, i16* %457, i64 1
  %464 = getelementptr inbounds i16, i16* %459, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !36

467:                                              ; preds = %456, %449
  %468 = phi i16* [ %450, %449 ], [ %463, %456 ]
  %469 = phi i64 [ %451, %449 ], [ %462, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %464, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i16* [ %499, %472 ], [ %468, %467 ]
  %474 = phi i64 [ %498, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %500, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %473, align 2
  %477 = getelementptr inbounds i16, i16* %473, i64 1
  %478 = getelementptr inbounds i16, i16* %475, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %473, i64 2
  %481 = getelementptr inbounds i16, i16* %475, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %473, i64 3
  %484 = getelementptr inbounds i16, i16* %475, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %473, i64 4
  %487 = getelementptr inbounds i16, i16* %475, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %473, i64 5
  %490 = getelementptr inbounds i16, i16* %475, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %473, i64 6
  %493 = getelementptr inbounds i16, i16* %475, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %473, i64 7
  %496 = getelementptr inbounds i16, i16* %475, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %474, -8
  %499 = getelementptr inbounds i16, i16* %473, i64 8
  %500 = getelementptr inbounds i16, i16* %475, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !37

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = getelementptr i16, i16* %42, i64 %55
  %57 = sub i64 %4, %55
  %58 = getelementptr i16, i16* %24, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %42, i64 %67
  %70 = getelementptr i16, i16* %24, i64 %67
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !38
  %73 = getelementptr i16, i16* %70, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !38
  %76 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !41, !noalias !38
  %77 = getelementptr i16, i16* %69, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !41, !noalias !38
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %42, i64 %79
  %81 = getelementptr i16, i16* %24, i64 %79
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !38
  %84 = getelementptr i16, i16* %81, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !38
  %87 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !41, !noalias !38
  %88 = getelementptr i16, i16* %80, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !41, !noalias !38
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %42, i64 %90
  %92 = getelementptr i16, i16* %24, i64 %90
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !38
  %95 = getelementptr i16, i16* %92, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !38
  %98 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !41, !noalias !38
  %99 = getelementptr i16, i16* %91, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !41, !noalias !38
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %42, i64 %101
  %103 = getelementptr i16, i16* %24, i64 %101
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !38
  %106 = getelementptr i16, i16* %103, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !38
  %109 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !41, !noalias !38
  %110 = getelementptr i16, i16* %102, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !41, !noalias !38
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !43

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %42, i64 %119
  %122 = getelementptr i16, i16* %24, i64 %119
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !38
  %125 = getelementptr i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !38
  %128 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !41, !noalias !38
  %129 = getelementptr i16, i16* %121, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !41, !noalias !38
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !44

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %56, %134 ]
  %138 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %58, %134 ]
  %140 = add i64 %138, -1
  %141 = and i64 %138, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i16* [ %150, %143 ], [ %137, %136 ]
  %145 = phi i64 [ %149, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %151, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %144, align 2
  %149 = add i64 %145, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %146, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !45

154:                                              ; preds = %143, %136
  %155 = phi i16* [ %137, %136 ], [ %150, %143 ]
  %156 = phi i64 [ %138, %136 ], [ %149, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %151, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i16* [ %186, %159 ], [ %155, %154 ]
  %161 = phi i64 [ %185, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %187, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %160, align 2
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %162, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = getelementptr inbounds i16, i16* %162, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = getelementptr inbounds i16, i16* %162, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = getelementptr inbounds i16, i16* %162, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = getelementptr inbounds i16, i16* %162, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = getelementptr inbounds i16, i16* %162, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = getelementptr inbounds i16, i16* %162, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %161, -8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = getelementptr inbounds i16, i16* %162, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !46

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = getelementptr i16, i16* %192, i64 %195
  %197 = sub i64 %6, %195
  %198 = getelementptr i16, i16* %7, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %192, i64 %207
  %210 = getelementptr i16, i16* %7, i64 %207
  %211 = bitcast i16* %210 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %210, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %209, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %192, i64 %219
  %221 = getelementptr i16, i16* %7, i64 %219
  %222 = bitcast i16* %221 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %221, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %220, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %192, i64 %230
  %232 = getelementptr i16, i16* %7, i64 %230
  %233 = bitcast i16* %232 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %232, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %231, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %192, i64 %241
  %243 = getelementptr i16, i16* %7, i64 %241
  %244 = bitcast i16* %243 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %243, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %242, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !47

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %192, i64 %259
  %262 = getelementptr i16, i16* %7, i64 %259
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %262, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %261, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !48

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i16* [ %192, %191 ], [ %196, %274 ]
  %278 = phi i64 [ %6, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %7, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i16* [ %286, %280 ], [ %277, %276 ]
  %282 = phi i64 [ %285, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %287, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %281, align 2
  %285 = add i64 %282, -1
  %286 = getelementptr inbounds i16, i16* %281, i64 1
  %287 = getelementptr inbounds i16, i16* %283, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !49

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = getelementptr i16, i16* %295, i64 %314
  %316 = sub i64 %291, %314
  %317 = getelementptr i16, i16* %297, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %295, i64 %326
  %329 = getelementptr i16, i16* %297, i64 %326
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !51
  %332 = getelementptr i16, i16* %329, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !51
  %335 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !54, !noalias !51
  %336 = getelementptr i16, i16* %328, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !54, !noalias !51
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %295, i64 %338
  %340 = getelementptr i16, i16* %297, i64 %338
  %341 = bitcast i16* %340 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !51
  %343 = getelementptr i16, i16* %340, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !51
  %346 = bitcast i16* %339 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !54, !noalias !51
  %347 = getelementptr i16, i16* %339, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !54, !noalias !51
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %295, i64 %349
  %351 = getelementptr i16, i16* %297, i64 %349
  %352 = bitcast i16* %351 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !51
  %354 = getelementptr i16, i16* %351, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !51
  %357 = bitcast i16* %350 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !54, !noalias !51
  %358 = getelementptr i16, i16* %350, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !54, !noalias !51
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %295, i64 %360
  %362 = getelementptr i16, i16* %297, i64 %360
  %363 = bitcast i16* %362 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !51
  %365 = getelementptr i16, i16* %362, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !51
  %368 = bitcast i16* %361 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !54, !noalias !51
  %369 = getelementptr i16, i16* %361, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !54, !noalias !51
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !56

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %295, i64 %378
  %381 = getelementptr i16, i16* %297, i64 %378
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !51
  %384 = getelementptr i16, i16* %381, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !51
  %387 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !54, !noalias !51
  %388 = getelementptr i16, i16* %380, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !54, !noalias !51
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !57

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %315, %393 ]
  %397 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %317, %393 ]
  %399 = add i64 %397, -1
  %400 = and i64 %397, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i16* [ %409, %402 ], [ %396, %395 ]
  %404 = phi i64 [ %408, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %410, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %405, align 2
  store i16 %407, i16* %403, align 2
  %408 = add i64 %404, -1
  %409 = getelementptr inbounds i16, i16* %403, i64 1
  %410 = getelementptr inbounds i16, i16* %405, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !58

413:                                              ; preds = %402, %395
  %414 = phi i16* [ %396, %395 ], [ %409, %402 ]
  %415 = phi i64 [ %397, %395 ], [ %408, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %410, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i16* [ %445, %418 ], [ %414, %413 ]
  %420 = phi i64 [ %444, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %446, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %421, align 2
  store i16 %422, i16* %419, align 2
  %423 = getelementptr inbounds i16, i16* %419, i64 1
  %424 = getelementptr inbounds i16, i16* %421, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %419, i64 2
  %427 = getelementptr inbounds i16, i16* %421, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %419, i64 3
  %430 = getelementptr inbounds i16, i16* %421, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %419, i64 4
  %433 = getelementptr inbounds i16, i16* %421, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %419, i64 5
  %436 = getelementptr inbounds i16, i16* %421, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %419, i64 6
  %439 = getelementptr inbounds i16, i16* %421, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %419, i64 7
  %442 = getelementptr inbounds i16, i16* %421, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %420, -8
  %445 = getelementptr inbounds i16, i16* %419, i64 8
  %446 = getelementptr inbounds i16, i16* %421, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !59

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare zeroext i1 @_ZN8v8_crdtp10SpanEqualsENS_4spanIhEES1_(i8*, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare zeroext i1 @_ZN8v8_crdtp12SpanLessThanENS_4spanIhEES1_(i8*, i64, i8*, i64) local_unnamed_addr #4

declare void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #3

declare void @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE9SerializeERKS2_PNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::vector"*) local_unnamed_addr #3

declare void @_ZN8v8_crdtp18ProtocolTypeTraitsIivE9SerializeEiPNSt3__16vectorIhNS2_9allocatorIhEEEE(i32, %"class.std::__1::vector"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvRKN8v8_crdtp12DispatchableEEE12__call_emptyEPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.v8_crdtp::Dispatchable"* dereferenceable(96)) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #14
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #10 comdat {
  tail call void @abort() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRKN8v8_crdtp12DispatchableEEE11__call_implINS0_20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchENS2_4spanIhEEE3$_6S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.v8_crdtp::Dispatchable"* dereferenceable(96)) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %4 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %3, align 8
  %5 = bitcast %"class.std::__1::__function::__default_alloc_func"* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %4, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 %10
  %12 = bitcast i8* %11 to %"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*
  %13 = and i64 %8, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %2
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %8, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"*)**
  %21 = load void (%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"*)*, void (%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"*)** %20, align 8
  br label %24

22:                                               ; preds = %2
  %23 = inttoptr i64 %8 to void (%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"*, %"class.v8_crdtp::Dispatchable"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.v8_inspector::protocol::Console::DomainDispatcherImpl"* %12, %"class.v8_crdtp::Dispatchable"* dereferenceable(96) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !60
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8v8_crdtp16DomainDispatcher7WeakPtrD1Ev(%"class.v8_crdtp::DomainDispatcher::WeakPtr"*) unnamed_addr #4

declare void @_ZN8v8_crdtp16DomainDispatcherC2EPNS_15FrontendChannelE(%"class.v8_crdtp::DomainDispatcher"*, %"class.v8_crdtp::FrontendChannel"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!7 = distinct !{!7, !8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = distinct !{!19, !15}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !15}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !17}
!28 = distinct !{!28, !15}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !15}
!35 = distinct !{!35, !17}
!36 = distinct !{!36, !17}
!37 = distinct !{!37, !15}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !15}
!44 = distinct !{!44, !17}
!45 = distinct !{!45, !17}
!46 = distinct !{!46, !15}
!47 = distinct !{!47, !15}
!48 = distinct !{!48, !17}
!49 = distinct !{!49, !50, !15}
!50 = !{!"llvm.loop.unroll.runtime.disable"}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !15}
!57 = distinct !{!57, !17}
!58 = distinct !{!58, !17}
!59 = distinct !{!59, !15}
!60 = !{!61, !63}
!61 = distinct !{!61, !62, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!63 = distinct !{!63, !64, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN12v8_inspector8protocol7Console20DomainDispatcherImpl8DispatchEN8v8_crdtp4spanIhEEE3$_6FvRKNS8_12DispatchableEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
