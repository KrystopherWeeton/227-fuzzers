; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceOperand.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceOperand.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.270" }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.254", i32, [4 x i8] }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID.0", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.Ice::StringID.0" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.Ice::LiveRange" = type { %"class.std::__1::vector", %"class.std::__1::unordered_map", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.2", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.2" = type <{ %"class.llvm::SmallVectorImpl.3", %"struct.llvm::SmallVectorStorage.8", [7 x i8] }>
%"class.llvm::SmallVectorImpl.3" = type { %"class.llvm::SmallVectorTemplateBase.4" }
%"class.llvm::SmallVectorTemplateBase.4" = type { %"class.llvm::SmallVectorTemplateCommon.5" }
%"class.llvm::SmallVectorTemplateCommon.5" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.6" }
%"struct.llvm::AlignedCharArrayUnion.6" = type { %"struct.llvm::AlignedCharArray.7" }
%"struct.llvm::AlignedCharArray.7" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.8" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.23", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11", %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.Ice::sz_allocator.16" }
%"struct.Ice::sz_allocator.16" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.Ice::sz_allocator.20" }
%"struct.Ice::sz_allocator.20" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { float }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257", %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.Ice::sz_allocator.259" }
%"struct.Ice::sz_allocator.259" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.Ice::sz_allocator.273" }
%"struct.Ice::sz_allocator.273" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::ClFlags" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.std::__1::vector.123", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i32, i8, i8, i32, i8, %"class.std::__1::basic_string", i32, i8, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::vector.123", i8, i32, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", i8, [7 x i8], %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.Ice::RangeSpec" = type { %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc" }
%"struct.Ice::RangeSpec::Desc" = type <{ %"class.std::__1::unordered_set.317", %"class.llvm::BitVector", i32, i8, [3 x i8] }>
%"class.std::__1::unordered_set.317" = type { %"class.std::__1::__hash_table.318" }
%"class.std::__1::__hash_table.318" = type <{ %"class.std::__1::unique_ptr.319", %"class.std::__1::__compressed_pair.329", %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.336", [4 x i8] }>
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321", %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::__hash_node_base.322"** }
%"struct.std::__1::__hash_node_base.322" = type { %"struct.std::__1::__hash_node_base.322"* }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.std::__1::__bucket_list_deallocator.324" }
%"class.std::__1::__bucket_list_deallocator.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.std::__1::__hash_node_base.322" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.llvm::BitVector" = type { i64*, i32, i32 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8, [6 x i8] }>
%"class.Ice::StringID" = type { i64 }
%"class.Ice::RelocatableTuple" = type { i32, %"class.llvm::SmallVector.26", %"class.Ice::StringID", %"class.std::__1::basic_string" }
%"class.llvm::SmallVector.26" = type { %"class.llvm::SmallVectorImpl.27", %"struct.llvm::SmallVectorStorage.31" }
%"class.llvm::SmallVectorImpl.27" = type { %"class.llvm::SmallVectorTemplateBase.28" }
%"class.llvm::SmallVectorTemplateBase.28" = type { %"class.llvm::SmallVectorTemplateCommon.29" }
%"class.llvm::SmallVectorTemplateCommon.29" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.30" }
%"struct.llvm::AlignedCharArrayUnion.30" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.31" = type { [3 x %"struct.llvm::AlignedCharArrayUnion.30"] }
%"class.Ice::RelocOffset" = type { i8, i8, i32 }
%"class.Ice::RegWeight" = type { i32 }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.316", i32, i8, i8, i8, i32, %"class.std::__1::vector.233", %"class.std::__1::vector.233", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr.35", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.233", i32, [4 x i8], %"class.std::__1::vector.239", %"class.std::__1::vector.239", %"class.std::__1::vector.239", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.176", %"class.std::__1::vector.281", %"class.Ice::CfgNode"*, %"class.std::__1::vector.287", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.46", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.60", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.94", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.100", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.156", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.172", %"class.std::__1::unique_ptr.209", i8, %"class.std::__1::unique_ptr.215", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.221", %"class.llvm::SmallVector.227", %"class.llvm::SmallVector.227" }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr.35", %"class.std::__1::vector.39", %"class.std::__1::vector.46", %"class.std::__1::vector.53" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.41" }
%"class.Ice::VariableDeclaration" = type opaque
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::unique_ptr.35"* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.109" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID", %"class.Ice::StringID", i32, %"class.std::__1::vector.102" }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { i64*, i64*, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i64* }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.114" }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.151" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.123", %"class.std::__1::vector.130", %"class.std::__1::vector.144", %"class.std::__1::vector.132", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.139" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.132", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { double*, double*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { double* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { i64*, i64*, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { i64* }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.162"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.168, %union.anon.170, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.168 = type { i64 }
%union.anon.170 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.172" = type <{ [128 x %"class.std::__1::unique_ptr.173"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type { i32 (...)**, %"class.Ice::GlobalContext"* }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.llvm::SmallVector.221" = type { %"class.llvm::SmallVectorImpl.222", %"struct.llvm::SmallVectorStorage.226" }
%"class.llvm::SmallVectorImpl.222" = type { %"class.llvm::SmallVectorTemplateBase.223" }
%"class.llvm::SmallVectorTemplateBase.223" = type { %"class.llvm::SmallVectorTemplateCommon.224" }
%"class.llvm::SmallVectorTemplateCommon.224" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.225" }
%"struct.llvm::AlignedCharArrayUnion.225" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.226" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.225"] }
%"class.llvm::SmallVector.227" = type { %"class.llvm::SmallVectorImpl.228", %"struct.llvm::SmallVectorStorage.232" }
%"class.llvm::SmallVectorImpl.228" = type { %"class.llvm::SmallVectorTemplateBase.229" }
%"class.llvm::SmallVectorTemplateBase.229" = type { %"class.llvm::SmallVectorTemplateCommon.230" }
%"class.llvm::SmallVectorTemplateCommon.230" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.231" }
%"struct.llvm::AlignedCharArrayUnion.231" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.232" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.231"] }
%"class.std::__1::vector.239" = type { %"class.std::__1::__vector_base.240" }
%"class.std::__1::__vector_base.240" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242", %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.Ice::sz_allocator.244" }
%"struct.Ice::sz_allocator.244" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map.63" }
%"class.std::__1::unordered_map.63" = type { %"class.std::__1::__hash_table.64" }
%"class.std::__1::__hash_table.64" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base.68"** }
%"struct.std::__1::__hash_node_base.68" = type { %"struct.std::__1::__hash_node_base.68"* }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::__bucket_list_deallocator.70" }
%"class.std::__1::__bucket_list_deallocator.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.std::__1::__hash_node_base.68" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.Ice::TargetLowering"* }
%"class.Ice::TargetLowering" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.Ice::LoweringContext", i32, [4 x i8] }>
%"class.Ice::LoweringContext" = type { %"class.Ice::CfgNode"*, %"class.Ice::Inst"*, %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.Ice::Variable"*, %"class.Ice::Variable"* }
%"class.llvm::ilist_iterator" = type { %"class.llvm::ilist_node_impl"* }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.266" }
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.274" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.268", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275", %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.Ice::sz_allocator.277" }
%"struct.Ice::sz_allocator.277" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.185", %"class.Ice::StringID", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.185" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.2", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.188", i8, [7 x i8] }>
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.191" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.190 }
%union.anon.190 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.283" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID", %"class.Ice::StringID" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.254", i32 }>
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284", %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.Ice::sz_allocator.286" }
%"struct.Ice::sz_allocator.286" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.312" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.289" }
%"class.std::__1::__hash_table.289" = type <{ %"class.std::__1::unique_ptr.290", %"class.std::__1::__compressed_pair.299", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.307", [4 x i8] }>
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.293"** }
%"struct.std::__1::__hash_node_base.293" = type { %"struct.std::__1::__hash_node_base.293"* }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.std::__1::__bucket_list_deallocator.295" }
%"class.std::__1::__bucket_list_deallocator.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.Ice::sz_allocator.298" }
%"struct.Ice::sz_allocator.298" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300", %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::__hash_node_base.293" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.Ice::sz_allocator.302" }
%"struct.Ice::sz_allocator.302" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313", %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.Ice::sz_allocator.315" }
%"struct.Ice::sz_allocator.315" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::StringID.316" = type { i64 }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.Ice::sz_allocator.238" }
%"struct.Ice::sz_allocator.238" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::tuple.367" = type { %"struct.std::__1::__tuple_impl.368" }
%"struct.std::__1::__tuple_impl.368" = type { %"class.std::__1::__tuple_leaf.369" }
%"class.std::__1::__tuple_leaf.369" = type { i32* }
%"class.std::__1::tuple.356" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.Ice::ConstantPrimitive" = type { %"class.Ice::Constant.base", i32 }
%"class.Ice::Constant.base" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8 }>
%"class.Ice::ConstantPrimitive.342" = type { %"class.Ice::Constant.base", i64 }
%"class.Ice::ConstantPrimitive.343" = type { %"class.Ice::Constant.base", float }
%"class.Ice::ConstantPrimitive.344" = type { %"class.Ice::Constant.base", double }
%"class.Ice::ConstantRelocatable" = type { %"class.Ice::Constant.base", i32, %"class.llvm::SmallVector.26", %"class.Ice::StringID", %"class.std::__1::basic_string" }
%"class.Ice::ConstantUndef" = type { %"class.Ice::Constant.base", [6 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::default_delete.349" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359", %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::__hash_node.353"* }
%"struct.std::__1::__hash_node.353" = type { %"struct.std::__1::__hash_node_base.68", i64, %"struct.std::__1::__hash_value_type.352" }
%"struct.std::__1::__hash_value_type.352" = type { %"struct.std::__1::pair.351" }
%"struct.std::__1::pair.351" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.346" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.78"*, i8, [7 x i8] }>
%"class.std::__1::allocator.78" = type { i8 }
%"struct.std::__1::pair.376" = type { i8*, i64 }
%"struct.std::__1::__split_buffer.383" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.275", %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.Ice::sz_allocator.277"* }

$_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE6resizeEmRKS2_ = comdat any

$_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE6resizeEm = comdat any

$_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEED2Ev = comdat any

$_ZNK3Ice8Constant4emitEPKNS_3CfgE = comdat any

$_ZN3Ice19ConstantRelocatableD2Ev = comdat any

$_ZN3Ice19ConstantRelocatableD0Ev = comdat any

$_ZN3Ice7Operand9asBooleanEv = comdat any

$_ZNK3Ice8Constant9hashValueEv = comdat any

$_ZNK3Ice13ConstantUndef4dumpEPKNS_3CfgERN4llvm11raw_ostreamE = comdat any

$_ZN3Ice7OperandD2Ev = comdat any

$_ZN3Ice13ConstantUndefD0Ev = comdat any

$_ZN3Ice8VariableD2Ev = comdat any

$_ZN3Ice8VariableD0Ev = comdat any

$_ZNK3Ice8Variable9hashValueEv = comdat any

$_ZN3Ice8Variable7setNameEPKNS_3CfgERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE = comdat any

$_ZN3Ice8Variable8setIsArgEb = comdat any

$_ZNK3Ice8Variable13getBaseRegNumEv = comdat any

$_ZN3Ice10StringPool14getOrAddStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS8_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISY_EEEEEEmOT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm = comdat any

$_ZNKSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEclEPS6_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE6rehashEm = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE8__appendEmRKS2_ = comdat any

$_ZNSt3__114__split_bufferIN3Ice16VariableTrackingERNS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEEC2EmmS6_ = comdat any

$_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS5_EE = comdat any

$_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEEC2ERKS8_ = comdat any

$_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEE11__vallocateEm = comdat any

$_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE8__appendEm = comdat any

@_ZN3Ice7RegNumT5LimitE = hidden local_unnamed_addr global i32 0, align 4
@_ZN3Ice17VariablesMetadata13NoDefinitionsE = hidden local_unnamed_addr global %"class.std::__1::vector.268"* null, align 8
@_ZZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableEE21NoDefinitionsInstance = internal global %"class.std::__1::vector.268" zeroinitializer, align 8
@_ZGVZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableEE21NoDefinitionsInstance = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZTVN3Ice19ConstantRelocatableE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::Constant"*, %"class.Ice::Cfg"*)* @_ZNK3Ice8Constant4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::ConstantRelocatable"*, %"class.Ice::Cfg"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19ConstantRelocatable4dumpEPKNS_3CfgERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::ConstantRelocatable"*)* @_ZN3Ice19ConstantRelocatableD2Ev to i8*), i8* bitcast (void (%"class.Ice::ConstantRelocatable"*)* @_ZN3Ice19ConstantRelocatableD0Ev to i8*), i8* bitcast (%"class.Ice::Variable"* (%"class.Ice::Operand"*)* @_ZN3Ice7Operand9asBooleanEv to i8*), i8* bitcast (i32 (%"class.Ice::Constant"*)* @_ZNK3Ice8Constant9hashValueEv to i8*), i8* bitcast (void (%"class.Ice::ConstantRelocatable"*, %"class.Ice::TargetLowering"*)* @_ZNK3Ice19ConstantRelocatable4emitEPNS_14TargetLoweringE to i8*)] }, align 8
@_ZTVN3Ice13ConstantUndefE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::Constant"*, %"class.Ice::Cfg"*)* @_ZNK3Ice8Constant4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::ConstantUndef"*, %"class.Ice::Cfg"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice13ConstantUndef4dumpEPKNS_3CfgERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::Operand"*)* @_ZN3Ice7OperandD2Ev to i8*), i8* bitcast (void (%"class.Ice::ConstantUndef"*)* @_ZN3Ice13ConstantUndefD0Ev to i8*), i8* bitcast (%"class.Ice::Variable"* (%"class.Ice::Operand"*)* @_ZN3Ice7Operand9asBooleanEv to i8*), i8* bitcast (i32 (%"class.Ice::Constant"*)* @_ZNK3Ice8Constant9hashValueEv to i8*), i8* bitcast (void (%"class.Ice::ConstantUndef"*, %"class.Ice::TargetLowering"*)* @_ZNK3Ice13ConstantUndef4emitEPNS_14TargetLoweringE to i8*)] }, align 8
@_ZTVN3Ice8VariableE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::Variable"*, %"class.Ice::Cfg"*)* @_ZNK3Ice8Variable4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Variable"*, %"class.Ice::Cfg"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice8Variable4dumpEPKNS_3CfgERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::Variable"*)* @_ZN3Ice8VariableD2Ev to i8*), i8* bitcast (void (%"class.Ice::Variable"*)* @_ZN3Ice8VariableD0Ev to i8*), i8* bitcast (%"class.Ice::Variable"* (%"class.Ice::Operand"*)* @_ZN3Ice7Operand9asBooleanEv to i8*), i8* bitcast (i32 (%"class.Ice::Variable"*)* @_ZNK3Ice8Variable9hashValueEv to i8*), i8* bitcast (void (%"class.Ice::Variable"*, %"class.Ice::Cfg"*, %"class.std::__1::basic_string"*)* @_ZN3Ice8Variable7setNameEPKNS_3CfgERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.Ice::Variable"*, i1)* @_ZN3Ice8Variable8setIsArgEb to i8*), i8* bitcast (i32 (%"class.Ice::Variable"*)* @_ZNK3Ice8Variable13getBaseRegNumEv to i8*)] }, align 8
@_ZN3Ice7ClFlags5FlagsE = external local_unnamed_addr global %"class.Ice::ClFlags", align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice8Constant18initShouldBePooledEv(%"class.Ice::Constant"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN3Ice14TargetLowering14shouldBePooledEPKNS_8ConstantE(%"class.Ice::Constant"* %0) #16
  %3 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %0, i64 0, i32 2
  %4 = zext i1 %2 to i8
  store i8 %4, i8* %3, align 8
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZN3Ice14TargetLowering14shouldBePooledEPKNS_8ConstantE(%"class.Ice::Constant"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN3IceeqERKNS_16RelocatableTupleES2_(%"class.Ice::RelocatableTuple"* nocapture readonly dereferenceable(96), %"class.Ice::RelocatableTuple"* nocapture readonly dereferenceable(96)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.Ice::RelocatableTuple", %"class.Ice::RelocatableTuple"* %0, i64 0, i32 2, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.Ice::RelocatableTuple", %"class.Ice::RelocatableTuple"* %1, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %107

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.Ice::RelocatableTuple", %"class.Ice::RelocatableTuple"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.Ice::RelocatableTuple", %"class.Ice::RelocatableTuple"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.Ice::RelocatableTuple", %"class.Ice::RelocatableTuple"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.Ice::RelocatableTuple", %"class.Ice::RelocatableTuple"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.llvm::SmallVectorTemplateCommon.29"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp eq i64 %19, 0
  %22 = inttoptr i64 %18 to %"class.Ice::RelocOffset"**
  br i1 %21, label %26, label %40

23:                                               ; preds = %40, %49
  %24 = phi i32 [ %52, %49 ], [ %43, %40 ]
  %25 = icmp ne i8 %47, 0
  br label %26

26:                                               ; preds = %23, %8
  %27 = phi i1 [ true, %8 ], [ %25, %23 ]
  %28 = phi i32 [ %10, %8 ], [ %24, %23 ]
  %29 = getelementptr inbounds %"class.Ice::RelocatableTuple", %"class.Ice::RelocatableTuple"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.Ice::RelocatableTuple", %"class.Ice::RelocatableTuple"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.llvm::SmallVectorTemplateCommon.29"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp ne i64 %35, 0
  %38 = and i1 %27, %37
  %39 = inttoptr i64 %34 to %"class.Ice::RelocOffset"**
  br i1 %38, label %59, label %56

40:                                               ; preds = %8, %49
  %41 = phi i64 [ %54, %49 ], [ 0, %8 ]
  %42 = phi i32 [ %53, %49 ], [ 0, %8 ]
  %43 = phi i32 [ %52, %49 ], [ %10, %8 ]
  %44 = getelementptr inbounds %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %22, i64 %41
  %45 = load %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %44, align 8
  %46 = getelementptr inbounds %"class.Ice::RelocOffset", %"class.Ice::RelocOffset"* %45, i64 0, i32 1
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %23, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.Ice::RelocOffset", %"class.Ice::RelocOffset"* %45, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, %43
  %53 = add i32 %42, 1
  %54 = zext i32 %53 to i64
  %55 = icmp ugt i64 %20, %54
  br i1 %55, label %40, label %23

56:                                               ; preds = %68, %26
  %57 = phi i32 [ %12, %26 ], [ %71, %68 ]
  %58 = phi i1 [ %27, %26 ], [ true, %68 ]
  br i1 %58, label %75, label %77

59:                                               ; preds = %26, %68
  %60 = phi i64 [ %73, %68 ], [ 0, %26 ]
  %61 = phi i32 [ %72, %68 ], [ 0, %26 ]
  %62 = phi i32 [ %71, %68 ], [ %12, %26 ]
  %63 = getelementptr inbounds %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %39, i64 %60
  %64 = load %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %63, align 8
  %65 = getelementptr inbounds %"class.Ice::RelocOffset", %"class.Ice::RelocOffset"* %64, i64 0, i32 1
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.Ice::RelocOffset", %"class.Ice::RelocOffset"* %64, i64 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = add nsw i32 %70, %62
  %72 = add i32 %61, 1
  %73 = zext i32 %72 to i64
  %74 = icmp ugt i64 %36, %73
  br i1 %74, label %59, label %56

75:                                               ; preds = %56
  %76 = icmp eq i32 %28, %57
  br label %107

77:                                               ; preds = %59, %56
  %78 = icmp eq i64 %20, %36
  br i1 %78, label %79, label %107

79:                                               ; preds = %77
  %80 = icmp eq i64 %19, 0
  br i1 %80, label %107, label %81

81:                                               ; preds = %79, %103
  %82 = phi i64 [ %105, %103 ], [ 0, %79 ]
  %83 = phi i32 [ %104, %103 ], [ 0, %79 ]
  %84 = getelementptr inbounds %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %22, i64 %82
  %85 = load %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %84, align 8
  %86 = getelementptr inbounds %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %39, i64 %82
  %87 = load %"class.Ice::RelocOffset"*, %"class.Ice::RelocOffset"** %86, align 8
  %88 = getelementptr inbounds %"class.Ice::RelocOffset", %"class.Ice::RelocOffset"* %85, i64 0, i32 1
  %89 = load i8, i8* %88, align 1, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.Ice::RelocOffset", %"class.Ice::RelocOffset"* %87, i64 0, i32 1
  %93 = load i8, i8* %92, align 1, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.Ice::RelocOffset", %"class.Ice::RelocOffset"* %85, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.Ice::RelocOffset", %"class.Ice::RelocOffset"* %87, i64 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %103, label %107

101:                                              ; preds = %91, %81
  %102 = icmp eq %"class.Ice::RelocOffset"* %85, %87
  br i1 %102, label %103, label %107

103:                                              ; preds = %95, %101
  %104 = add i32 %83, 1
  %105 = zext i32 %104 to i64
  %106 = icmp ugt i64 %20, %105
  br i1 %106, label %81, label %107

107:                                              ; preds = %95, %101, %103, %79, %2, %77, %75
  %108 = phi i1 [ false, %2 ], [ %76, %75 ], [ false, %77 ], [ true, %79 ], [ false, %95 ], [ false, %101 ], [ true, %103 ]
  ret i1 %108
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN3IceltERKNS_9RegWeightES2_(%"class.Ice::RegWeight"* nocapture readonly dereferenceable(4), %"class.Ice::RegWeight"* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN3IceleERKNS_9RegWeightES2_(%"class.Ice::RegWeight"* nocapture readonly dereferenceable(4), %"class.Ice::RegWeight"* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp uge i32 %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN3IceeqERKNS_9RegWeightES2_(%"class.Ice::RegWeight"* nocapture readonly dereferenceable(4), %"class.Ice::RegWeight"* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"*, i32, i32, %"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple.367", align 8
  %6 = alloca %"class.std::__1::tuple.356", align 1
  %7 = alloca i32, align 4
  store i32 %1, i32* %7, align 4
  %8 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 33), align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::tuple.367"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.std::__1::tuple.367", %"class.std::__1::tuple.367"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::tuple.356", %"class.std::__1::tuple.356"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #17
  %15 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %11, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.367"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.356"* nonnull dereferenceable(1) %6) #16
  %16 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %15, 0
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 3
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %17 to %"class.Ice::CfgNode"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  store %"class.Ice::CfgNode"* %3, %"class.Ice::CfgNode"** %18, align 8
  %19 = load i32, i32* %7, align 4
  %20 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  br label %33

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %25, align 8
  %27 = icmp eq %"struct.std::__1::pair"* %24, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 -1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %1
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i32 %2, i32* %29, align 4
  br label %106

33:                                               ; preds = %28, %22, %10
  %34 = phi %"struct.std::__1::pair"* [ %26, %28 ], [ %24, %22 ], [ %21, %10 ]
  %35 = phi i32 [ %1, %28 ], [ %1, %22 ], [ %19, %10 ]
  %36 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %37, align 8
  %39 = icmp ult %"struct.std::__1::pair"* %34, %38
  %40 = ptrtoint %"struct.std::__1::pair"* %38 to i64
  br i1 %39, label %41, label %50

41:                                               ; preds = %33
  %42 = bitcast %"struct.std::__1::pair"* %34 to i64*
  %43 = zext i32 %2 to i64
  %44 = shl nuw i64 %43, 32
  %45 = zext i32 %35 to i64
  %46 = or i64 %44, %45
  store i64 %46, i64* %42, align 4
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  %48 = ptrtoint %"struct.std::__1::pair"* %47 to i64
  %49 = bitcast %"struct.std::__1::pair"** %36 to i64*
  store i64 %48, i64* %49, align 8
  br label %106

50:                                               ; preds = %33
  %51 = ptrtoint %"struct.std::__1::pair"* %34 to i64
  %52 = bitcast %"struct.std::__1::pair"** %36 to i64*
  %53 = bitcast %"class.Ice::LiveRange"* %0 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %51, %54
  %56 = ashr exact i64 %55, 3
  %57 = add nsw i64 %56, 1
  %58 = icmp ugt i64 %57, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = bitcast %"class.Ice::LiveRange"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #18
  unreachable

61:                                               ; preds = %50
  %62 = bitcast %"struct.std::__1::pair"** %37 to i64*
  %63 = sub i64 %40, %54
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %64, 1152921504606846975
  br i1 %65, label %66, label %71

66:                                               ; preds = %61
  %67 = ashr exact i64 %63, 2
  %68 = icmp ult i64 %67, %57
  %69 = select i1 %68, i64 %57, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %66, %61
  %72 = phi i64 [ %69, %66 ], [ 2305843009213693951, %61 ]
  %73 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #16
  %74 = shl i64 %72, 3
  %75 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %73, i64 %74, i64 4) #16
  %76 = bitcast i8* %75 to %"struct.std::__1::pair"*
  br label %77

77:                                               ; preds = %71, %66
  %78 = phi i64 [ %72, %71 ], [ 0, %66 ]
  %79 = phi %"struct.std::__1::pair"* [ %76, %71 ], [ null, %66 ]
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 %56
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 %78
  %82 = ptrtoint %"struct.std::__1::pair"* %81 to i64
  %83 = bitcast %"struct.std::__1::pair"* %80 to i64*
  %84 = zext i32 %2 to i64
  %85 = shl nuw i64 %84, 32
  %86 = zext i32 %35 to i64
  %87 = or i64 %85, %86
  store i64 %87, i64* %83, align 4
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 1
  %89 = ptrtoint %"struct.std::__1::pair"* %88 to i64
  %90 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %90, align 8
  %92 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %36, align 8
  %93 = icmp eq %"struct.std::__1::pair"* %92, %91
  br i1 %93, label %103, label %94

94:                                               ; preds = %77, %94
  %95 = phi %"struct.std::__1::pair"* [ %97, %94 ], [ %80, %77 ]
  %96 = phi %"struct.std::__1::pair"* [ %98, %94 ], [ %92, %77 ]
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 -1
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 -1
  %99 = bitcast %"struct.std::__1::pair"* %98 to i64*
  %100 = bitcast %"struct.std::__1::pair"* %97 to i64*
  %101 = load i64, i64* %99, align 4
  store i64 %101, i64* %100, align 4
  %102 = icmp eq %"struct.std::__1::pair"* %98, %91
  br i1 %102, label %103, label %94

103:                                              ; preds = %94, %77
  %104 = phi %"struct.std::__1::pair"* [ %80, %77 ], [ %97, %94 ]
  %105 = ptrtoint %"struct.std::__1::pair"* %104 to i64
  store i64 %105, i64* %53, align 8
  store i64 %89, i64* %52, align 8
  store i64 %82, i64* %62, align 8
  br label %106

106:                                              ; preds = %103, %41, %32
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice9LiveRange10endsBeforeERKS0_(%"class.Ice::LiveRange"* nocapture readonly, %"class.Ice::LiveRange"* nocapture readonly dereferenceable(96)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  br i1 %7, label %20, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp eq %"struct.std::__1::pair"* %10, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 -1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sle i32 %16, %18
  br label %20

20:                                               ; preds = %2, %8, %14
  %21 = phi i1 [ %19, %14 ], [ true, %8 ], [ true, %2 ]
  ret i1 %21
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice9LiveRange8overlapsERKS0_b(%"class.Ice::LiveRange"* nocapture readonly, %"class.Ice::LiveRange"* nocapture readonly dereferenceable(96), i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::__wrap_iter"* %4 to i64*
  %6 = bitcast %"class.Ice::LiveRange"* %0 to i64*
  %7 = select i1 %2, i64* %5, i64* %6
  %8 = bitcast i64* %7 to %"struct.std::__1::pair"**
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %14 = icmp eq %"struct.std::__1::pair"* %11, %9
  br i1 %14, label %49, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %1, i64 0, i32 2
  %17 = bitcast %"class.std::__1::__wrap_iter"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.Ice::LiveRange"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = select i1 %2, i64 %18, i64 %20
  br label %22

22:                                               ; preds = %15, %37
  %23 = phi %"struct.std::__1::pair"* [ %38, %37 ], [ %9, %15 ]
  %24 = phi i64 [ %33, %37 ], [ %21, %15 ]
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 0
  %27 = inttoptr i64 %24 to %"struct.std::__1::pair"*
  %28 = icmp eq %"struct.std::__1::pair"* %13, %27
  br i1 %28, label %49, label %29

29:                                               ; preds = %22
  %30 = load i32, i32* %25, align 4
  br label %31

31:                                               ; preds = %29, %45
  %32 = phi %"struct.std::__1::pair"* [ %46, %45 ], [ %27, %29 ]
  %33 = phi i64 [ %47, %45 ], [ %24, %29 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %30, %35
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 1
  %39 = icmp eq %"struct.std::__1::pair"* %11, %38
  br i1 %39, label %49, label %22

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %26, align 4
  %44 = icmp sgt i32 %42, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 1
  %47 = ptrtoint %"struct.std::__1::pair"* %46 to i64
  %48 = icmp eq %"struct.std::__1::pair"* %13, %46
  br i1 %48, label %49, label %31

49:                                               ; preds = %37, %22, %45, %40, %3
  %50 = phi i1 [ false, %3 ], [ true, %40 ], [ false, %45 ], [ false, %22 ], [ false, %37 ]
  ret i1 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice9LiveRange12overlapsInstEib(%"class.Ice::LiveRange"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::__wrap_iter"* %4 to i64*
  %6 = bitcast %"class.Ice::LiveRange"* %0 to i64*
  %7 = select i1 %2, i64* %5, i64* %6
  %8 = bitcast i64* %7 to %"struct.std::__1::pair"**
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = icmp eq %"struct.std::__1::pair"* %9, %11
  br i1 %12, label %25, label %15

13:                                               ; preds = %20
  %14 = icmp eq %"struct.std::__1::pair"* %24, %11
  br i1 %14, label %25, label %15

15:                                               ; preds = %3, %13
  %16 = phi %"struct.std::__1::pair"* [ %24, %13 ], [ %9, %3 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, %1
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, %1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  br i1 %23, label %25, label %13

25:                                               ; preds = %15, %20, %13, %3
  %26 = phi i1 [ false, %3 ], [ false, %13 ], [ true, %20 ], [ false, %15 ]
  ret i1 %26
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice9LiveRange13containsValueEib(%"class.Ice::LiveRange"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = xor i1 %2, true
  br label %11

11:                                               ; preds = %9, %23
  %12 = phi %"struct.std::__1::pair"* [ %5, %9 ], [ %24, %23 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, %1
  %20 = icmp eq i32 %18, %1
  %21 = and i1 %20, %10
  %22 = or i1 %19, %21
  br i1 %22, label %26, label %23

23:                                               ; preds = %16, %11
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 1
  %25 = icmp eq %"struct.std::__1::pair"* %24, %7
  br i1 %25, label %26, label %11

26:                                               ; preds = %16, %23, %3
  %27 = phi i1 [ false, %3 ], [ false, %23 ], [ true, %16 ]
  ret i1 %27
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice9LiveRange4trimEi(%"class.Ice::LiveRange"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 2, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %6, %4
  br i1 %7, label %16, label %8

8:                                                ; preds = %2, %13
  %9 = phi %"struct.std::__1::pair"* [ %14, %13 ], [ %6, %2 ]
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 1
  store %"struct.std::__1::pair"* %14, %"struct.std::__1::pair"** %5, align 8
  %15 = icmp eq %"struct.std::__1::pair"* %14, %4
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %13, %2
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden %"class.Ice::Variable"* @_ZNK3Ice8Variable6asTypeEPKNS_3CfgENS_4TypeENS_7RegNumTE(%"class.Ice::Variable"* readnone returned, %"class.Ice::Cfg"* nocapture readnone, i32, i32) local_unnamed_addr #5 align 2 {
  ret %"class.Ice::Variable"* %0
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3Ice8Variable9getWeightEPKNS_3CfgE(%"class.Ice::Variable"* nocapture readonly, %"class.Ice::Cfg"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 4
  switch i8 %4, label %5 [
    i8 1, label %25
    i8 2, label %24
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 24, i32 0, i32 0, i32 0
  %7 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %6, align 8
  %8 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %7, i64 0, i32 2
  %12 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %7, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast %"class.Ice::VariableTracking"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.266"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 72
  %19 = icmp ugt i64 %18, %10
  br i1 %19, label %20, label %25

20:                                               ; preds = %5
  %21 = inttoptr i64 %16 to %"class.Ice::VariableTracking"*
  %22 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %21, i64 %10, i32 6, i32 0
  %23 = load i32, i32* %22, align 8
  br label %25

24:                                               ; preds = %2
  br label %25

25:                                               ; preds = %2, %24, %20, %5
  %26 = phi i32 [ -1, %2 ], [ %23, %20 ], [ 1, %5 ], [ 0, %24 ]
  ret i32 %26
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3Ice17VariablesMetadata12getUseWeightEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* nocapture readonly, %"class.Ice::Variable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.Ice::VariableTracking"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.266"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 72
  %14 = icmp ugt i64 %13, %5
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = inttoptr i64 %11 to %"class.Ice::VariableTracking"*
  %17 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %16, i64 %5, i32 6, i32 0
  %18 = load i32, i32* %17, align 8
  br label %19

19:                                               ; preds = %2, %15
  %20 = phi i32 [ %18, %15 ], [ 1, %2 ]
  ret i32 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice16VariableTracking7markUseENS_12MetadataKindEPKNS_4InstEPNS_7CfgNodeEb(%"class.Ice::VariableTracking"* nocapture, i32, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %3, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 6, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = icmp ult i32 %7, 15
  %13 = select i1 %12, i32 %7, i32 15
  %14 = shl nuw nsw i32 %13, 1
  %15 = shl i32 1, %14
  %16 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %9, i32 %15) #17
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = icmp eq i32 %18, -1
  %20 = or i1 %17, %19
  %21 = select i1 %20, i32 -2, i32 %18
  store i32 %21, i32* %8, align 4
  br label %22

22:                                               ; preds = %5, %11
  %23 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %45, label %26

26:                                               ; preds = %22
  %27 = icmp eq %"class.Ice::Inst"* %2, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp ne i32 %30, 12
  %32 = xor i1 %4, true
  %33 = and i1 %31, %32
  br i1 %33, label %35, label %43

34:                                               ; preds = %26
  br i1 %4, label %43, label %35

35:                                               ; preds = %34, %28
  switch i32 %24, label %45 [
    i32 0, label %36
    i32 1, label %36
    i32 2, label %38
  ]

36:                                               ; preds = %35, %35
  store i32 2, i32* %23, align 4
  %37 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 2
  store %"class.Ice::CfgNode"* %3, %"class.Ice::CfgNode"** %37, align 8
  br label %45

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 2
  %40 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %39, align 8
  %41 = icmp ne %"class.Ice::CfgNode"* %40, %3
  %42 = or i1 %41, %4
  br i1 %42, label %43, label %45

43:                                               ; preds = %34, %38, %28
  store i32 3, i32* %23, align 4
  %44 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 2
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %44, align 8
  br label %45

45:                                               ; preds = %38, %36, %35, %43, %22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice16VariableTracking7markDefENS_12MetadataKindEPKNS_4InstEPNS_7CfgNodeE(%"class.Ice::VariableTracking"*, i32, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.Ice::Inst"* %2 to i64
  tail call void @_ZN3Ice16VariableTracking7markUseENS_12MetadataKindEPKNS_4InstEPNS_7CfgNodeEb(%"class.Ice::VariableTracking"* %0, i32 undef, %"class.Ice::Inst"* %2, %"class.Ice::CfgNode"* %3, i1 zeroext false) #19
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %96, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 5
  %9 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %8, align 8
  %10 = icmp eq %"class.Ice::Inst"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = bitcast %"class.Ice::Inst"** %8 to i64*
  store i64 %5, i64* %12, align 8
  br label %80

13:                                               ; preds = %7
  %14 = icmp eq i32 %1, 2
  br i1 %14, label %15, label %80

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %19, align 8
  %21 = icmp eq %"class.Ice::Inst"** %18, %20
  %22 = ptrtoint %"class.Ice::Inst"** %20 to i64
  br i1 %21, label %28, label %23

23:                                               ; preds = %15
  %24 = bitcast %"class.Ice::Inst"** %18 to i64*
  store i64 %5, i64* %24, align 8
  %25 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %18, i64 1
  %26 = ptrtoint %"class.Ice::Inst"** %25 to i64
  %27 = bitcast %"class.Ice::Inst"*** %17 to i64*
  store i64 %26, i64* %27, align 8
  br label %80

28:                                               ; preds = %15
  %29 = ptrtoint %"class.Ice::Inst"** %18 to i64
  %30 = bitcast %"class.Ice::Inst"*** %17 to i64*
  %31 = bitcast %"class.std::__1::vector.268"* %16 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %34, 1
  %36 = icmp ugt i64 %35, 2305843009213693951
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::vector.268"* %16 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #18
  unreachable

39:                                               ; preds = %28
  %40 = bitcast %"class.Ice::Inst"*** %19 to i64*
  %41 = sub i64 %22, %32
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %42, 1152921504606846975
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = ashr exact i64 %41, 2
  %46 = icmp ult i64 %45, %35
  %47 = select i1 %46, i64 %35, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %44, %39
  %50 = phi i64 [ %47, %44 ], [ 2305843009213693951, %39 ]
  %51 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #16
  %52 = shl i64 %50, 3
  %53 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %51, i64 %52, i64 8) #16
  %54 = bitcast i8* %53 to %"class.Ice::Inst"**
  br label %55

55:                                               ; preds = %49, %44
  %56 = phi i64 [ %50, %49 ], [ 0, %44 ]
  %57 = phi %"class.Ice::Inst"** [ %54, %49 ], [ null, %44 ]
  %58 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %57, i64 %34
  %59 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %57, i64 %56
  %60 = ptrtoint %"class.Ice::Inst"** %59 to i64
  %61 = bitcast %"class.Ice::Inst"** %58 to i64*
  store i64 %5, i64* %61, align 8
  %62 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %58, i64 1
  %63 = ptrtoint %"class.Ice::Inst"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %16, i64 0, i32 0, i32 0
  %65 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %64, align 8
  %66 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %17, align 8
  %67 = icmp eq %"class.Ice::Inst"** %66, %65
  br i1 %67, label %77, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.Ice::Inst"** [ %71, %68 ], [ %58, %55 ]
  %70 = phi %"class.Ice::Inst"** [ %72, %68 ], [ %66, %55 ]
  %71 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %69, i64 -1
  %72 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %70, i64 -1
  %73 = bitcast %"class.Ice::Inst"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.Ice::Inst"** %71 to i64*
  store i64 %74, i64* %75, align 8
  %76 = icmp eq %"class.Ice::Inst"** %72, %65
  br i1 %76, label %77, label %68

77:                                               ; preds = %68, %55
  %78 = phi %"class.Ice::Inst"** [ %58, %55 ], [ %71, %68 ]
  %79 = ptrtoint %"class.Ice::Inst"** %78 to i64
  store i64 %79, i64* %31, align 8
  store i64 %63, i64* %30, align 8
  store i64 %60, i64* %40, align 8
  br label %80

80:                                               ; preds = %77, %23, %13, %11
  %81 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  switch i32 %82, label %96 [
    i32 0, label %83
    i32 1, label %85
    i32 2, label %91
  ]

83:                                               ; preds = %80
  store i32 1, i32* %81, align 8
  %84 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 3
  store %"class.Ice::CfgNode"* %3, %"class.Ice::CfgNode"** %84, align 8
  br label %96

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 3
  %87 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %86, align 8
  %88 = icmp eq %"class.Ice::CfgNode"* %87, %3
  br i1 %88, label %89, label %90

89:                                               ; preds = %85
  store i32 2, i32* %81, align 8
  br label %96

90:                                               ; preds = %85
  store i32 3, i32* %81, align 8
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %86, align 8
  br label %96

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 3
  %93 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %92, align 8
  %94 = icmp eq %"class.Ice::CfgNode"* %93, %3
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  store i32 3, i32* %81, align 8
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %92, align 8
  br label %96

96:                                               ; preds = %83, %80, %90, %89, %95, %91, %4
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Inst"* @_ZNK3Ice16VariableTracking29getFirstDefinitionSingleBlockEv(%"class.Ice::VariableTracking"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 5
  %8 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.Ice::Inst"* [ %8, %6 ], [ null, %1 ]
  ret %"class.Ice::Inst"* %10
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Inst"* @_ZNK3Ice16VariableTracking19getSingleDefinitionEv(%"class.Ice::VariableTracking"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 5
  %7 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.Ice::Inst"* [ %7, %5 ], [ null, %1 ]
  ret %"class.Ice::Inst"* %9
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Inst"* @_ZNK3Ice16VariableTracking18getFirstDefinitionEv(%"class.Ice::VariableTracking"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %0, i64 0, i32 5
  %8 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.Ice::Inst"* [ %8, %6 ], [ null, %1 ]
  ret %"class.Ice::Inst"* %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice17VariablesMetadata4initENS_12MetadataKindE(%"class.Ice::VariablesMetadata"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.Ice::VariableTracking", align 8
  %4 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %7, align 8
  %9 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %9, align 8
  %11 = icmp eq %"class.Ice::VariableTracking"* %10, %8
  br i1 %11, label %24, label %12

12:                                               ; preds = %2, %22
  %13 = phi %"class.Ice::VariableTracking"* [ %14, %22 ], [ %10, %2 ]
  %14 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %13, i64 -1
  %15 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %13, i64 -1, i32 4, i32 0, i32 0
  %16 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %15, align 8
  %17 = icmp eq %"class.Ice::Inst"** %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = ptrtoint %"class.Ice::Inst"** %16 to i64
  %20 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %13, i64 -1, i32 4, i32 0, i32 1
  %21 = bitcast %"class.Ice::Inst"*** %20 to i64*
  store i64 %19, i64* %21, align 8
  br label %22

22:                                               ; preds = %18, %12
  %23 = icmp eq %"class.Ice::VariableTracking"* %14, %8
  br i1 %23, label %24, label %12

24:                                               ; preds = %22, %2
  store %"class.Ice::VariableTracking"* %8, %"class.Ice::VariableTracking"** %9, align 8
  %25 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %4, align 8
  %26 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %25, i64 0, i32 17
  %27 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %25, i64 0, i32 17, i32 0, i32 1
  %28 = bitcast %"class.Ice::Variable"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.239"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = lshr exact i64 %32, 3
  %34 = and i64 %33, 4294967295
  %35 = bitcast %"class.Ice::VariableTracking"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #17
  %36 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %3, i64 0, i32 0
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %3, i64 0, i32 1
  store i32 1, i32* %37, align 4
  %38 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %3, i64 0, i32 2
  %39 = bitcast %"class.Ice::CfgNode"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 60, i1 false) #17
  call void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE6resizeEmRKS2_(%"class.std::__1::vector.266"* %6, i64 %34, %"class.Ice::VariableTracking"* nonnull dereferenceable(72) %3) #19
  %40 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %3, i64 0, i32 4, i32 0, i32 0
  %41 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %40, align 8
  %42 = icmp eq %"class.Ice::Inst"** %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %24
  %44 = ptrtoint %"class.Ice::Inst"** %41 to i64
  %45 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %3, i64 0, i32 4, i32 0, i32 1
  %46 = bitcast %"class.Ice::Inst"*** %45 to i64*
  store i64 %44, i64* %46, align 8
  br label %47

47:                                               ; preds = %24, %43
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #17
  %48 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %4, align 8
  %49 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %48, i64 0, i32 19, i32 0, i32 0
  %50 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %49, align 8
  %51 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %48, i64 0, i32 19, i32 0, i32 1
  %52 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %51, align 8
  %53 = icmp eq %"class.Ice::Variable"** %50, %52
  br i1 %53, label %54, label %61

54:                                               ; preds = %93, %47
  %55 = phi %"class.Ice::Cfg"* [ %48, %47 ], [ %96, %93 ]
  %56 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %55, i64 0, i32 14, i32 0, i32 0
  %57 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %56, align 8
  %58 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %55, i64 0, i32 14, i32 0, i32 1
  %59 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %58, align 8
  %60 = icmp eq %"class.Ice::CfgNode"** %57, %59
  br i1 %60, label %97, label %98

61:                                               ; preds = %47, %93
  %62 = phi %"class.Ice::Cfg"* [ %96, %93 ], [ %48, %47 ]
  %63 = phi %"class.Ice::Variable"** [ %94, %93 ], [ %50, %47 ]
  %64 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %63, align 8
  %65 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %62, i64 0, i32 13
  %66 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %65, align 8
  %67 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %64, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = zext i32 %68 to i64
  %70 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %7, align 8
  %71 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %66, i64 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %70, i64 %69, i32 6, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %87, label %76

76:                                               ; preds = %61
  %77 = icmp ult i32 %72, 15
  %78 = select i1 %77, i32 %72, i32 15
  %79 = shl nuw nsw i32 %78, 1
  %80 = shl i32 1, %79
  %81 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %74, i32 %80) #17
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = icmp eq i32 %83, -1
  %85 = or i1 %82, %84
  %86 = select i1 %85, i32 -2, i32 %83
  store i32 %86, i32* %73, align 4
  br label %87

87:                                               ; preds = %76, %61
  %88 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %70, i64 %69, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 3
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  store i32 3, i32* %88, align 4
  %92 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %70, i64 %69, i32 2
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %92, align 8
  br label %93

93:                                               ; preds = %87, %91
  %94 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %63, i64 1
  %95 = icmp eq %"class.Ice::Variable"** %94, %52
  %96 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %4, align 8
  br i1 %95, label %54, label %61

97:                                               ; preds = %98, %54
  ret void

98:                                               ; preds = %54, %98
  %99 = phi %"class.Ice::CfgNode"** [ %101, %98 ], [ %57, %54 ]
  %100 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %99, align 8
  call void @_ZN3Ice17VariablesMetadata7addNodeEPNS_7CfgNodeE(%"class.Ice::VariablesMetadata"* %0, %"class.Ice::CfgNode"* %100) #19
  %101 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %99, i64 1
  %102 = icmp eq %"class.Ice::CfgNode"** %101, %59
  br i1 %102, label %97, label %98
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE6resizeEmRKS2_(%"class.std::__1::vector.266"*, i64, %"class.Ice::VariableTracking"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.Ice::VariableTracking"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.266"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 72
  %11 = icmp ult i64 %10, %1
  %12 = inttoptr i64 %8 to %"class.Ice::VariableTracking"*
  %13 = inttoptr i64 %6 to %"class.Ice::VariableTracking"*
  br i1 %11, label %14, label %16

14:                                               ; preds = %3
  %15 = sub i64 %1, %10
  tail call void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE8__appendEmRKS2_(%"class.std::__1::vector.266"* %0, i64 %15, %"class.Ice::VariableTracking"* dereferenceable(72) %2) #19
  br label %34

16:                                               ; preds = %3
  %17 = icmp ugt i64 %10, %1
  br i1 %17, label %18, label %34

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %12, i64 %1
  %20 = icmp eq %"class.Ice::VariableTracking"* %19, %13
  br i1 %20, label %33, label %21

21:                                               ; preds = %18, %31
  %22 = phi %"class.Ice::VariableTracking"* [ %23, %31 ], [ %13, %18 ]
  %23 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %22, i64 -1
  %24 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %22, i64 -1, i32 4, i32 0, i32 0
  %25 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %24, align 8
  %26 = icmp eq %"class.Ice::Inst"** %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %21
  %28 = ptrtoint %"class.Ice::Inst"** %25 to i64
  %29 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %22, i64 -1, i32 4, i32 0, i32 1
  %30 = bitcast %"class.Ice::Inst"*** %29 to i64*
  store i64 %28, i64* %30, align 8
  br label %31

31:                                               ; preds = %27, %21
  %32 = icmp eq %"class.Ice::VariableTracking"* %23, %19
  br i1 %32, label %33, label %21

33:                                               ; preds = %31, %18
  store %"class.Ice::VariableTracking"* %19, %"class.Ice::VariableTracking"** %4, align 8
  br label %34

34:                                               ; preds = %16, %33, %14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice17VariablesMetadata7addNodeEPNS_7CfgNodeE(%"class.Ice::VariablesMetadata"*, %"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 0
  %4 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %4, i64 0, i32 17
  %6 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %4, i64 0, i32 17, i32 0, i32 1
  %7 = bitcast %"class.Ice::Variable"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.239"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = lshr exact i64 %11, 3
  %13 = and i64 %12, 4294967295
  %14 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %"class.Ice::VariableTracking"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.266"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 72
  %22 = icmp ult i64 %21, %13
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  tail call void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.266"* %14, i64 %13) #19
  br label %24

24:                                               ; preds = %23, %2
  %25 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.llvm::ilist_node_base"** %25 to %"class.llvm::ilist_node_impl"**
  %28 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %27, align 8
  %29 = icmp eq %"class.llvm::ilist_node_impl"* %28, %26
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %14, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 1
  br label %42

33:                                               ; preds = %103, %24
  %34 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.llvm::ilist_node_base"** %34 to %"class.llvm::ilist_node_impl"**
  %37 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %36, align 8
  %38 = icmp eq %"class.llvm::ilist_node_impl"* %37, %35
  br i1 %38, label %108, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %14, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 1
  br label %109

42:                                               ; preds = %30, %103
  %43 = phi %"class.llvm::ilist_node_impl"* [ %28, %30 ], [ %106, %103 ]
  %44 = icmp eq %"class.llvm::ilist_node_impl"* %43, null
  %45 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %43, i64 -1, i32 0, i32 1
  %46 = bitcast %"class.llvm::ilist_node_base"** %45 to %"class.Ice::Inst"*
  %47 = select i1 %44, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %46
  %48 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %47, i64 0, i32 4
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %103

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %47, i64 0, i32 10
  %53 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %52, align 8
  %54 = icmp eq %"class.Ice::Variable"* %53, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = zext i32 %57 to i64
  %59 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %31, align 8
  %60 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %59, i64 %58
  %61 = load i32, i32* %32, align 8
  tail call void @_ZN3Ice16VariableTracking7markDefENS_12MetadataKindEPKNS_4InstEPNS_7CfgNodeE(%"class.Ice::VariableTracking"* %60, i32 %61, %"class.Ice::Inst"* %47, %"class.Ice::CfgNode"* %1) #19
  br label %62

62:                                               ; preds = %51, %55
  %63 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %47, i64 0, i32 13
  %64 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %47, i64 0, i32 13, i32 0, i32 1
  %65 = bitcast %"class.Ice::Operand"*** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.254"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = lshr exact i64 %69, 3
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %103, label %73

73:                                               ; preds = %62, %95
  %74 = phi i64 [ %96, %95 ], [ %68, %62 ]
  %75 = phi i64 [ %97, %95 ], [ %66, %62 ]
  %76 = phi i64 [ %98, %95 ], [ 0, %62 ]
  %77 = inttoptr i64 %74 to %"class.Ice::Operand"**
  %78 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %77, i64 %76
  %79 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %78, align 8
  %80 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %79, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, -18
  %83 = icmp ugt i32 %82, 14
  %84 = icmp eq %"class.Ice::Operand"* %79, null
  %85 = or i1 %84, %83
  br i1 %85, label %95, label %86

86:                                               ; preds = %73
  %87 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %79, i64 1
  %88 = bitcast %"class.Ice::Operand"* %87 to i32*
  %89 = load i32, i32* %88, align 8
  %90 = zext i32 %89 to i64
  %91 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %31, align 8
  %92 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %91, i64 %90
  tail call void @_ZN3Ice16VariableTracking7markUseENS_12MetadataKindEPKNS_4InstEPNS_7CfgNodeEb(%"class.Ice::VariableTracking"* %92, i32 undef, %"class.Ice::Inst"* %47, %"class.Ice::CfgNode"* %1, i1 zeroext false) #19
  %93 = load i64, i64* %65, align 8
  %94 = load i64, i64* %67, align 8
  br label %95

95:                                               ; preds = %73, %86
  %96 = phi i64 [ %74, %73 ], [ %94, %86 ]
  %97 = phi i64 [ %75, %73 ], [ %93, %86 ]
  %98 = add nuw nsw i64 %76, 1
  %99 = sub i64 %97, %96
  %100 = lshr exact i64 %99, 3
  %101 = and i64 %100, 4294967295
  %102 = icmp ult i64 %98, %101
  br i1 %102, label %73, label %103

103:                                              ; preds = %95, %62, %42
  %104 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %43, i64 0, i32 0, i32 1
  %105 = bitcast %"class.llvm::ilist_node_base"** %104 to %"class.llvm::ilist_node_impl"**
  %106 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %105, align 8
  %107 = icmp eq %"class.llvm::ilist_node_impl"* %106, %26
  br i1 %107, label %33, label %42

108:                                              ; preds = %172, %33
  ret void

109:                                              ; preds = %39, %172
  %110 = phi %"class.llvm::ilist_node_impl"* [ %37, %39 ], [ %175, %172 ]
  %111 = icmp eq %"class.llvm::ilist_node_impl"* %110, null
  %112 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %110, i64 -1, i32 0, i32 1
  %113 = bitcast %"class.llvm::ilist_node_base"** %112 to %"class.Ice::Inst"*
  %114 = select i1 %111, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %113
  %115 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %114, i64 0, i32 4
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %172

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %114, i64 0, i32 10
  %120 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %119, align 8
  %121 = icmp eq %"class.Ice::Variable"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %120, i64 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = zext i32 %124 to i64
  %126 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %40, align 8
  %127 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %126, i64 %125
  %128 = load i32, i32* %41, align 8
  tail call void @_ZN3Ice16VariableTracking7markDefENS_12MetadataKindEPKNS_4InstEPNS_7CfgNodeE(%"class.Ice::VariableTracking"* %127, i32 %128, %"class.Ice::Inst"* %114, %"class.Ice::CfgNode"* %1) #19
  br label %129

129:                                              ; preds = %118, %122
  %130 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %114, i64 0, i32 13
  %131 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %114, i64 0, i32 13, i32 0, i32 1
  %132 = bitcast %"class.Ice::Operand"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.std::__1::vector.254"* %130 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %133, %135
  %137 = lshr exact i64 %136, 3
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %172, label %140

140:                                              ; preds = %129
  %141 = inttoptr i64 %135 to %"class.Ice::Operand"**
  %142 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %114, i64 0, i32 13, i32 0, i32 0
  %143 = and i64 %137, 4294967295
  br label %144

144:                                              ; preds = %170, %140
  %145 = phi %"class.Ice::Operand"** [ %141, %140 ], [ %171, %170 ]
  %146 = phi i64 [ 0, %140 ], [ %168, %170 ]
  %147 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %145, i64 %146
  %148 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %147, align 8
  %149 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %148, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %167, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %148, i64 0, i32 4
  %154 = zext i32 %150 to i64
  br label %155

155:                                              ; preds = %155, %152
  %156 = phi i64 [ 0, %152 ], [ %165, %155 ]
  %157 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %153, align 8
  %158 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %157, i64 %156
  %159 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %158, align 8
  %160 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %159, i64 0, i32 1
  %161 = load i32, i32* %160, align 8
  %162 = zext i32 %161 to i64
  %163 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %40, align 8
  %164 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %163, i64 %162
  tail call void @_ZN3Ice16VariableTracking7markUseENS_12MetadataKindEPKNS_4InstEPNS_7CfgNodeEb(%"class.Ice::VariableTracking"* %164, i32 undef, %"class.Ice::Inst"* %114, %"class.Ice::CfgNode"* %1, i1 zeroext false) #19
  %165 = add nuw nsw i64 %156, 1
  %166 = icmp eq i64 %165, %154
  br i1 %166, label %167, label %155

167:                                              ; preds = %155, %144
  %168 = add nuw nsw i64 %146, 1
  %169 = icmp eq i64 %168, %143
  br i1 %169, label %172, label %170

170:                                              ; preds = %167
  %171 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %142, align 8
  br label %144

172:                                              ; preds = %167, %129, %109
  %173 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %110, i64 0, i32 0, i32 1
  %174 = bitcast %"class.llvm::ilist_node_base"** %173 to %"class.llvm::ilist_node_impl"**
  %175 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %174, align 8
  %176 = icmp eq %"class.llvm::ilist_node_impl"* %175, %35
  br i1 %176, label %108, label %109
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.266"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.Ice::VariableTracking"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.266"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.Ice::VariableTracking"*
  %12 = inttoptr i64 %5 to %"class.Ice::VariableTracking"*
  br i1 %10, label %13, label %15

13:                                               ; preds = %2
  %14 = sub i64 %1, %9
  tail call void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE8__appendEm(%"class.std::__1::vector.266"* %0, i64 %14) #19
  br label %33

15:                                               ; preds = %2
  %16 = icmp ugt i64 %9, %1
  br i1 %16, label %17, label %33

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %11, i64 %1
  %19 = icmp eq %"class.Ice::VariableTracking"* %18, %12
  br i1 %19, label %32, label %20

20:                                               ; preds = %17, %30
  %21 = phi %"class.Ice::VariableTracking"* [ %22, %30 ], [ %12, %17 ]
  %22 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %21, i64 -1
  %23 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %21, i64 -1, i32 4, i32 0, i32 0
  %24 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %23, align 8
  %25 = icmp eq %"class.Ice::Inst"** %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %20
  %27 = ptrtoint %"class.Ice::Inst"** %24 to i64
  %28 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %21, i64 -1, i32 4, i32 0, i32 1
  %29 = bitcast %"class.Ice::Inst"*** %28 to i64*
  store i64 %27, i64* %29, align 8
  br label %30

30:                                               ; preds = %26, %20
  %31 = icmp eq %"class.Ice::VariableTracking"* %22, %18
  br i1 %31, label %32, label %20

32:                                               ; preds = %30, %17
  store %"class.Ice::VariableTracking"* %18, %"class.Ice::VariableTracking"** %3, align 8
  br label %33

33:                                               ; preds = %15, %32, %13
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice17VariablesMetadata10isMultiDefEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* nocapture readonly, %"class.Ice::Variable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.Ice::VariableTracking"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.266"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 72
  %18 = icmp ugt i64 %17, %9
  br i1 %18, label %19, label %24

19:                                               ; preds = %6
  %20 = inttoptr i64 %15 to %"class.Ice::VariableTracking"*
  %21 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %20, i64 %9, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp ne i32 %22, 1
  br label %24

24:                                               ; preds = %2, %6, %19
  %25 = phi i1 [ %23, %19 ], [ false, %2 ], [ true, %6 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice17VariablesMetadata12isMultiBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* nocapture readonly, %"class.Ice::Variable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %33

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 6
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %"class.Ice::VariableTracking"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.266"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 72
  %22 = icmp ugt i64 %21, %13
  br i1 %22, label %23, label %33

23:                                               ; preds = %10
  %24 = inttoptr i64 %19 to %"class.Ice::VariableTracking"*
  %25 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %24, i64 %13, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp ult i32 %26, 4
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = trunc i32 %26 to i4
  %30 = lshr i4 -7, %29
  %31 = and i4 %30, 1
  %32 = icmp ne i4 %31, 0
  ret i1 %32

33:                                               ; preds = %23, %6, %2, %10
  %34 = phi i1 [ true, %2 ], [ false, %6 ], [ true, %10 ], [ true, %23 ]
  ret i1 %34
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice17VariablesMetadata13isSingleBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* nocapture readonly, %"class.Ice::Variable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 6
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %31

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %"class.Ice::VariableTracking"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.266"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 72
  %22 = icmp ugt i64 %21, %13
  br i1 %22, label %23, label %31

23:                                               ; preds = %10
  %24 = inttoptr i64 %19 to %"class.Ice::VariableTracking"*
  %25 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %24, i64 %13, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp ult i32 %26, 4
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = trunc i32 %26 to i4
  %30 = icmp eq i4 %29, 2
  ret i1 %30

31:                                               ; preds = %23, %6, %2, %10
  ret i1 false
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Inst"* @_ZNK3Ice17VariablesMetadata29getFirstDefinitionSingleBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* nocapture readonly, %"class.Ice::Variable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.Ice::VariableTracking"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.266"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 72
  %14 = icmp ugt i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.Ice::VariableTracking"*
  br i1 %14, label %16, label %24

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %15, i64 %5, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -1
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %15, i64 %5, i32 5
  %23 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %22, align 8
  br label %24

24:                                               ; preds = %21, %16, %2
  %25 = phi %"class.Ice::Inst"* [ null, %2 ], [ %23, %21 ], [ null, %16 ]
  ret %"class.Ice::Inst"* %25
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Inst"* @_ZNK3Ice17VariablesMetadata19getSingleDefinitionEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* nocapture readonly, %"class.Ice::Variable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.Ice::VariableTracking"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.266"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 72
  %14 = icmp ugt i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.Ice::VariableTracking"*
  br i1 %14, label %16, label %23

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %15, i64 %5, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %15, i64 %5, i32 5
  %22 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %21, align 8
  br label %23

23:                                               ; preds = %20, %16, %2
  %24 = phi %"class.Ice::Inst"* [ null, %2 ], [ %22, %20 ], [ null, %16 ]
  ret %"class.Ice::Inst"* %24
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Inst"* @_ZNK3Ice17VariablesMetadata18getFirstDefinitionEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* nocapture readonly, %"class.Ice::Variable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.Ice::VariableTracking"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.266"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 72
  %14 = icmp ugt i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.Ice::VariableTracking"*
  br i1 %14, label %16, label %24

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %15, i64 %5, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -1
  %20 = icmp ult i32 %19, 3
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %15, i64 %5, i32 5
  %23 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %22, align 8
  br label %24

24:                                               ; preds = %21, %16, %2
  %25 = phi %"class.Ice::Inst"* [ null, %2 ], [ %23, %21 ], [ null, %16 ]
  ret %"class.Ice::Inst"* %25
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden dereferenceable(32) %"class.std::__1::vector.268"* @_ZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* nocapture readonly, %"class.Ice::Variable"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.Ice::VariableTracking"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.266"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 72
  %14 = icmp ugt i64 %13, %5
  br i1 %14, label %27, label %15

15:                                               ; preds = %2
  %16 = load %"class.std::__1::vector.268"*, %"class.std::__1::vector.268"** @_ZN3Ice17VariablesMetadata13NoDefinitionsE, align 8
  %17 = icmp eq %"class.std::__1::vector.268"* %16, null
  br i1 %17, label %18, label %30

18:                                               ; preds = %15
  %19 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableEE21NoDefinitionsInstance to i8*) acquire, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %26, !prof !3

21:                                               ; preds = %18
  %22 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableEE21NoDefinitionsInstance) #17
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%"class.std::__1::vector.268"* @_ZZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableEE21NoDefinitionsInstance to i8*), i8 0, i64 32, i1 false) #17
  %25 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__1::vector.268"*)* @_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__1::vector.268"* @_ZZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableEE21NoDefinitionsInstance to i8*), i8* nonnull @__dso_handle) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableEE21NoDefinitionsInstance) #17
  br label %26

26:                                               ; preds = %21, %24, %18
  store %"class.std::__1::vector.268"* @_ZZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableEE21NoDefinitionsInstance, %"class.std::__1::vector.268"** @_ZN3Ice17VariablesMetadata13NoDefinitionsE, align 8
  br label %30

27:                                               ; preds = %2
  %28 = inttoptr i64 %11 to %"class.Ice::VariableTracking"*
  %29 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %28, i64 %5, i32 4
  br label %30

30:                                               ; preds = %15, %26, %27
  %31 = phi %"class.std::__1::vector.268"* [ %29, %27 ], [ @_ZZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableEE21NoDefinitionsInstance, %26 ], [ %16, %15 ]
  ret %"class.std::__1::vector.268"* %31
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEED2Ev(%"class.std::__1::vector.268"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %2, align 8
  %4 = icmp eq %"class.Ice::Inst"** %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.Ice::Inst"** %3 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.Ice::Inst"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::CfgNode"* @_ZNK3Ice17VariablesMetadata15getLocalUseNodeEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* nocapture readonly, %"class.Ice::Variable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.Ice::VariableTracking"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.266"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 72
  %14 = icmp ugt i64 %13, %5
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = inttoptr i64 %11 to %"class.Ice::VariableTracking"*
  %17 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %16, i64 %5, i32 2
  %18 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %17, align 8
  br label %19

19:                                               ; preds = %2, %15
  %20 = phi %"class.Ice::CfgNode"* [ %18, %15 ], [ null, %2 ]
  ret %"class.Ice::CfgNode"* %20
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice8Variable4emitEPKNS_3CfgE(%"class.Ice::Variable"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice8Variable4dumpEPKNS_3CfgERN4llvm11raw_ostreamE(%"class.Ice::Variable"* nocapture, %"class.Ice::Cfg"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE4emitEPNS_14TargetLoweringE(%"class.Ice::ConstantPrimitive"*, %"class.Ice::TargetLowering"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.Ice::TargetLowering"* %1 to void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive"*)***
  %4 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive"*)** %4, i64 31
  %6 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive"*)** %5, align 8
  tail call void %6(%"class.Ice::TargetLowering"* %1, %"class.Ice::ConstantPrimitive"* %0) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice17ConstantPrimitiveIlLNS_7Operand11OperandKindE2EE4emitEPNS_14TargetLoweringE(%"class.Ice::ConstantPrimitive.342"*, %"class.Ice::TargetLowering"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.Ice::TargetLowering"* %1 to void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.342"*)***
  %4 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.342"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.342"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.342"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.342"*)** %4, i64 32
  %6 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.342"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.342"*)** %5, align 8
  tail call void %6(%"class.Ice::TargetLowering"* %1, %"class.Ice::ConstantPrimitive.342"* %0) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice17ConstantPrimitiveIfLNS_7Operand11OperandKindE3EE4emitEPNS_14TargetLoweringE(%"class.Ice::ConstantPrimitive.343"*, %"class.Ice::TargetLowering"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.Ice::TargetLowering"* %1 to void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.343"*)***
  %4 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.343"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.343"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.343"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.343"*)** %4, i64 33
  %6 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.343"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.343"*)** %5, align 8
  tail call void %6(%"class.Ice::TargetLowering"* %1, %"class.Ice::ConstantPrimitive.343"* %0) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice17ConstantPrimitiveIdLNS_7Operand11OperandKindE4EE4emitEPNS_14TargetLoweringE(%"class.Ice::ConstantPrimitive.344"*, %"class.Ice::TargetLowering"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.Ice::TargetLowering"* %1 to void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.344"*)***
  %4 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.344"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.344"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.344"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.344"*)** %4, i64 34
  %6 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.344"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantPrimitive.344"*)** %5, align 8
  tail call void %6(%"class.Ice::TargetLowering"* %1, %"class.Ice::ConstantPrimitive.344"* %0) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice19ConstantRelocatable4emitEPNS_14TargetLoweringE(%"class.Ice::ConstantRelocatable"*, %"class.Ice::TargetLowering"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.Ice::TargetLowering"* %1 to void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantRelocatable"*)***
  %4 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantRelocatable"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantRelocatable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantRelocatable"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantRelocatable"*)** %4, i64 36
  %6 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantRelocatable"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantRelocatable"*)** %5, align 8
  tail call void %6(%"class.Ice::TargetLowering"* %1, %"class.Ice::ConstantRelocatable"* %0) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice19ConstantRelocatable17emitWithoutPrefixEPKNS_14TargetLoweringEPKc(%"class.Ice::ConstantRelocatable"*, %"class.Ice::TargetLowering"*, i8*) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK3Ice14TargetLowering17emitWithoutPrefixEPKNS_19ConstantRelocatableEPKc(%"class.Ice::TargetLowering"* %1, %"class.Ice::ConstantRelocatable"* %0, i8* %2) #16
  ret void
}

; Function Attrs: optsize
declare void @_ZNK3Ice14TargetLowering17emitWithoutPrefixEPKNS_19ConstantRelocatableEPKc(%"class.Ice::TargetLowering"*, %"class.Ice::ConstantRelocatable"*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19ConstantRelocatable4dumpEPKNS_3CfgERN4llvm11raw_ostreamE(%"class.Ice::ConstantRelocatable"* nocapture, %"class.Ice::Cfg"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice13ConstantUndef4emitEPNS_14TargetLoweringE(%"class.Ice::ConstantUndef"*, %"class.Ice::TargetLowering"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.Ice::TargetLowering"* %1 to void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantUndef"*)***
  %4 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantUndef"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantUndef"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantUndef"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantUndef"*)** %4, i64 35
  %6 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantUndef"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::ConstantUndef"*)** %5, align 8
  tail call void %6(%"class.Ice::TargetLowering"* %1, %"class.Ice::ConstantUndef"* %0) #16
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice9LiveRange4dumpERN4llvm11raw_ostreamE(%"class.Ice::LiveRange"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN3IcelsERN4llvm11raw_ostreamERKNS_9LiveRangeE(%"class.llvm::raw_ostream"* readnone returned dereferenceable(40), %"class.Ice::LiveRange"* nocapture readnone dereferenceable(96)) local_unnamed_addr #5 {
  ret %"class.llvm::raw_ostream"* %0
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN3IcelsERN4llvm11raw_ostreamERKNS_9RegWeightE(%"class.llvm::raw_ostream"* readnone returned dereferenceable(40), %"class.Ice::RegWeight"* nocapture readnone dereferenceable(4)) local_unnamed_addr #5 {
  ret %"class.llvm::raw_ostream"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice8Constant4emitEPKNS_3CfgE(%"class.Ice::Constant"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 23, i32 0, i32 0, i32 0
  %4 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %3, align 8
  %5 = bitcast %"class.Ice::Constant"* %0 to void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)***
  %6 = load void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)**, void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)*, void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)** %6, i64 6
  %8 = load void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)*, void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)** %7, align 8
  tail call void %8(%"class.Ice::Constant"* %0, %"class.Ice::TargetLowering"* %4) #16
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice19ConstantRelocatableD2Ev(%"class.Ice::ConstantRelocatable"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::ConstantRelocatable", %"class.Ice::ConstantRelocatable"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3Ice19ConstantRelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::ConstantRelocatable", %"class.Ice::ConstantRelocatable"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.Ice::ConstantRelocatable", %"class.Ice::ConstantRelocatable"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.Ice::ConstantRelocatable", %"class.Ice::ConstantRelocatable"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @free(i8* %13) #16
  br label %17

17:                                               ; preds = %11, %16
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice19ConstantRelocatableD0Ev(%"class.Ice::ConstantRelocatable"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::ConstantRelocatable", %"class.Ice::ConstantRelocatable"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3Ice19ConstantRelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::ConstantRelocatable", %"class.Ice::ConstantRelocatable"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.Ice::ConstantRelocatable", %"class.Ice::ConstantRelocatable"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.Ice::ConstantRelocatable", %"class.Ice::ConstantRelocatable"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @free(i8* %13) #16
  br label %17

17:                                               ; preds = %11, %16
  %18 = bitcast %"class.Ice::ConstantRelocatable"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Variable"* @_ZN3Ice7Operand9asBooleanEv(%"class.Ice::Operand"*) unnamed_addr #0 comdat align 2 {
  ret %"class.Ice::Variable"* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice8Constant9hashValueEv(%"class.Ice::Constant"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice13ConstantUndef4dumpEPKNS_3CfgERN4llvm11raw_ostreamE(%"class.Ice::ConstantUndef"*, %"class.Ice::Cfg"*, %"class.llvm::raw_ostream"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice7OperandD2Ev(%"class.Ice::Operand"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13ConstantUndefD0Ev(%"class.Ice::ConstantUndef"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.Ice::ConstantUndef"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8VariableD2Ev(%"class.Ice::Variable"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3Ice8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 12, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %10, label %11, label %6

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 12, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %12, align 8
  %13 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  %18 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  store i64 %17, i64* %19, align 8
  br label %20

20:                                               ; preds = %11, %16
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8VariableD0Ev(%"class.Ice::Variable"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3Ice8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 12, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %10, label %11, label %6

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 12, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %12, align 8
  %13 = bitcast %"class.Ice::Variable"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice8Variable9hashValueEv(%"class.Ice::Variable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8Variable7setNameEPKNS_3CfgERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.Ice::Variable"*, %"class.Ice::Cfg"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 21, i32 0, i32 0, i32 0
  %15 = load %"class.Ice::StringPool"*, %"class.Ice::StringPool"** %14, align 8
  %16 = tail call i64 @_ZN3Ice10StringPool14getOrAddStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::StringPool"* %15, %"class.std::__1::basic_string"* dereferenceable(24) %2) #16
  %17 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 2, i32 0
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %3, %13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8Variable8setIsArgEb(%"class.Ice::Variable"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 3
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice8Variable13getBaseRegNumEv(%"class.Ice::Variable"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #8

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZN3Ice10StringPool14getOrAddStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::StringPool"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.356", align 1
  %5 = getelementptr inbounds %"class.Ice::StringPool", %"class.Ice::StringPool"* %0, i64 0, i32 1, i32 0
  %6 = tail call %"struct.std::__1::__hash_node_base.68"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table.64"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %7 = icmp eq %"struct.std::__1::__hash_node_base.68"* %6, null
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 24) #20
  %10 = bitcast i8* %9 to %"class.std::__1::basic_string"*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %16, i64 24, i1 false) #17
  br label %22

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %19, i64 %21) #16
  br label %22

22:                                               ; preds = %15, %17
  %23 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::tuple.356", %"class.std::__1::tuple.356"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #17
  %26 = call { %"struct.std::__1::__hash_node_base.68"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.64"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.356"* nonnull dereferenceable(1) %4) #16
  %27 = extractvalue { %"struct.std::__1::__hash_node_base.68"*, i8 } %26, 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %27, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  %29 = bitcast %"struct.std::__1::__hash_node_base.68"* %28 to %"class.std::__1::basic_string"**
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = bitcast %"struct.std::__1::__hash_node_base.68"* %28 to i8**
  store i8* %9, i8** %31, align 8
  %32 = icmp eq %"class.std::__1::basic_string"* %30, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %22
  %34 = bitcast %"struct.std::__1::__hash_node_base.68"* %28 to %"struct.std::__1::default_delete.349"*
  call void @_ZNKSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEclEPS6_(%"struct.std::__1::default_delete.349"* %34, %"class.std::__1::basic_string"* nonnull %30) #16
  br label %39

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %6, i64 5
  %37 = bitcast %"struct.std::__1::__hash_node_base.68"* %36 to %"class.std::__1::basic_string"**
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  br label %39

39:                                               ; preds = %33, %22, %35
  %40 = phi %"class.std::__1::basic_string"* [ %38, %35 ], [ %10, %22 ], [ %10, %33 ]
  %41 = ptrtoint %"class.std::__1::basic_string"* %40 to i64
  ret i64 %41
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.68"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table.64"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #17, !range !4
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.68"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.68"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.68"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.68"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.68"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.68"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.68"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.68"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #17
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.68"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.68"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.68"* %112
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2) #19
  br label %212

9:                                                ; preds = %5
  %10 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8* %1, i64 %2) #19
  br label %212

11:                                               ; preds = %3
  %12 = icmp ult i64 %2, 65
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8* %1, i64 %2) #19
  br label %212

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -40
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = getelementptr inbounds i8, i8* %16, i64 -16
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = getelementptr inbounds i8, i8* %16, i64 -56
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 1
  %26 = add i64 %25, %22
  %27 = getelementptr inbounds i8, i8* %16, i64 -48
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 1
  %30 = add i64 %29, %2
  %31 = getelementptr inbounds i8, i8* %16, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 1
  %34 = xor i64 %33, %30
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  %43 = getelementptr inbounds i8, i8* %16, i64 -64
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %2
  %47 = add i64 %19, %46
  %48 = add i64 %47, %42
  %49 = lshr i64 %48, 21
  %50 = shl i64 %48, 43
  %51 = or i64 %50, %49
  %52 = add i64 %46, %25
  %53 = add i64 %52, %29
  %54 = lshr i64 %53, 44
  %55 = shl i64 %53, 20
  %56 = or i64 %55, %54
  %57 = add i64 %53, %19
  %58 = add i64 %56, %46
  %59 = add i64 %58, %51
  %60 = getelementptr inbounds i8, i8* %16, i64 -32
  %61 = add i64 %26, -5435081209227447693
  %62 = bitcast i8* %60 to i64*
  %63 = load i64, i64* %62, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 1
  %67 = add i64 %61, %63
  %68 = add i64 %67, %19
  %69 = add i64 %68, %66
  %70 = lshr i64 %69, 21
  %71 = shl i64 %69, 43
  %72 = or i64 %71, %70
  %73 = add i64 %67, %33
  %74 = add i64 %73, %22
  %75 = lshr i64 %74, 44
  %76 = shl i64 %74, 20
  %77 = or i64 %76, %75
  %78 = add i64 %74, %66
  %79 = add i64 %77, %67
  %80 = add i64 %79, %72
  %81 = mul i64 %19, -5435081209227447693
  %82 = bitcast i8* %1 to i64*
  %83 = load i64, i64* %82, align 1
  %84 = add i64 %83, %81
  %85 = add i64 %2, -1
  %86 = and i64 %85, -64
  br label %87

87:                                               ; preds = %175, %15
  %88 = phi i64 [ %83, %15 ], [ %177, %175 ]
  %89 = phi i64 [ %80, %15 ], [ %171, %175 ]
  %90 = phi i64 [ %78, %15 ], [ %169, %175 ]
  %91 = phi i64 [ %57, %15 ], [ %147, %175 ]
  %92 = phi i64 [ %59, %15 ], [ %149, %175 ]
  %93 = phi i64 [ %42, %15 ], [ %117, %175 ]
  %94 = phi i64 [ %84, %15 ], [ %127, %175 ]
  %95 = phi i64 [ %86, %15 ], [ %173, %175 ]
  %96 = phi i8* [ %1, %15 ], [ %172, %175 ]
  %97 = phi i64 [ %26, %15 ], [ %122, %175 ]
  %98 = getelementptr inbounds i8, i8* %96, i64 8
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 1
  %101 = add i64 %94, %91
  %102 = add i64 %101, %97
  %103 = add i64 %102, %100
  %104 = lshr i64 %103, 37
  %105 = shl i64 %103, 27
  %106 = or i64 %105, %104
  %107 = mul i64 %106, -5435081209227447693
  %108 = add i64 %97, %92
  %109 = getelementptr inbounds i8, i8* %96, i64 48
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 1
  %112 = add i64 %108, %111
  %113 = lshr i64 %112, 42
  %114 = shl i64 %112, 22
  %115 = or i64 %114, %113
  %116 = mul i64 %115, -5435081209227447693
  %117 = xor i64 %107, %89
  %118 = getelementptr inbounds i8, i8* %96, i64 40
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = add i64 %120, %91
  %122 = add i64 %121, %116
  %123 = add i64 %93, %90
  %124 = lshr i64 %123, 33
  %125 = shl i64 %123, 31
  %126 = or i64 %125, %124
  %127 = mul i64 %126, -5435081209227447693
  %128 = mul i64 %92, -5435081209227447693
  %129 = getelementptr inbounds i8, i8* %96, i64 16
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 1
  %132 = getelementptr inbounds i8, i8* %96, i64 24
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 1
  %135 = add i64 %88, %128
  %136 = add i64 %135, %90
  %137 = add i64 %136, %134
  %138 = add i64 %137, %117
  %139 = lshr i64 %138, 21
  %140 = shl i64 %138, 43
  %141 = or i64 %140, %139
  %142 = add i64 %135, %100
  %143 = add i64 %142, %131
  %144 = lshr i64 %143, 44
  %145 = shl i64 %143, 20
  %146 = or i64 %145, %144
  %147 = add i64 %143, %134
  %148 = add i64 %146, %135
  %149 = add i64 %148, %141
  %150 = getelementptr inbounds i8, i8* %96, i64 32
  %151 = add i64 %127, %89
  %152 = add i64 %122, %131
  %153 = bitcast i8* %150 to i64*
  %154 = load i64, i64* %153, align 1
  %155 = getelementptr inbounds i8, i8* %96, i64 56
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 1
  %158 = add i64 %151, %154
  %159 = add i64 %152, %158
  %160 = add i64 %159, %157
  %161 = lshr i64 %160, 21
  %162 = shl i64 %160, 43
  %163 = or i64 %162, %161
  %164 = add i64 %158, %120
  %165 = add i64 %164, %111
  %166 = lshr i64 %165, 44
  %167 = shl i64 %165, 20
  %168 = or i64 %167, %166
  %169 = add i64 %165, %157
  %170 = add i64 %168, %158
  %171 = add i64 %170, %163
  %172 = getelementptr inbounds i8, i8* %96, i64 64
  %173 = add i64 %95, -64
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %87
  %176 = bitcast i8* %172 to i64*
  %177 = load i64, i64* %176, align 1
  br label %87

178:                                              ; preds = %87
  %179 = xor i64 %169, %147
  %180 = mul i64 %179, -7070675565921424023
  %181 = lshr i64 %180, 47
  %182 = xor i64 %180, %169
  %183 = xor i64 %182, %181
  %184 = mul i64 %183, -7070675565921424023
  %185 = lshr i64 %184, 47
  %186 = xor i64 %185, %184
  %187 = mul i64 %186, -7070675565921424023
  %188 = lshr i64 %122, 47
  %189 = xor i64 %188, %122
  %190 = mul i64 %189, -5435081209227447693
  %191 = add i64 %190, %117
  %192 = add i64 %191, %187
  %193 = xor i64 %171, %149
  %194 = mul i64 %193, -7070675565921424023
  %195 = lshr i64 %194, 47
  %196 = xor i64 %194, %171
  %197 = xor i64 %196, %195
  %198 = mul i64 %197, -7070675565921424023
  %199 = lshr i64 %198, 47
  %200 = xor i64 %199, %198
  %201 = mul i64 %200, -7070675565921424023
  %202 = add i64 %201, %127
  %203 = xor i64 %202, %192
  %204 = mul i64 %203, -7070675565921424023
  %205 = lshr i64 %204, 47
  %206 = xor i64 %204, %202
  %207 = xor i64 %206, %205
  %208 = mul i64 %207, -7070675565921424023
  %209 = lshr i64 %208, 47
  %210 = xor i64 %209, %208
  %211 = mul i64 %210, -7070675565921424023
  br label %212

212:                                              ; preds = %178, %13, %9, %7
  %213 = phi i64 [ %8, %7 ], [ %10, %9 ], [ %14, %13 ], [ %211, %178 ]
  ret i64 %213
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to i64*
  %4 = load i64, i64* %3, align 1
  %5 = mul i64 %4, -5435081209227447693
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 1
  %9 = getelementptr inbounds i8, i8* %0, i64 %1
  %10 = getelementptr inbounds i8, i8* %9, i64 -8
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = mul i64 %12, -7286425919675154353
  %14 = getelementptr inbounds i8, i8* %9, i64 -16
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = mul i64 %16, -4348849565147123417
  %18 = sub i64 %5, %8
  %19 = lshr i64 %18, 43
  %20 = shl i64 %18, 21
  %21 = or i64 %20, %19
  %22 = lshr i64 %13, 30
  %23 = mul i64 %12, -4737503975807385600
  %24 = or i64 %22, %23
  %25 = add i64 %17, %21
  %26 = add i64 %25, %24
  %27 = xor i64 %8, -3942382747735136937
  %28 = lshr i64 %27, 20
  %29 = shl i64 %27, 44
  %30 = or i64 %29, %28
  %31 = add i64 %5, %1
  %32 = sub i64 %31, %13
  %33 = add i64 %32, %30
  %34 = xor i64 %33, %26
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  ret i64 %42
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %0, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 1
  %6 = bitcast i8* %0 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %0, i64 %1
  %9 = getelementptr inbounds i8, i8* %8, i64 -16
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = add i64 %11, %1
  %13 = mul i64 %12, -4348849565147123417
  %14 = add i64 %13, %7
  %15 = add i64 %14, %5
  %16 = lshr i64 %15, 52
  %17 = shl i64 %15, 12
  %18 = or i64 %17, %16
  %19 = lshr i64 %14, 37
  %20 = shl i64 %14, 27
  %21 = or i64 %20, %19
  %22 = getelementptr inbounds i8, i8* %0, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = add i64 %14, %24
  %26 = lshr i64 %25, 7
  %27 = shl i64 %25, 57
  %28 = or i64 %27, %26
  %29 = getelementptr inbounds i8, i8* %0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 1
  %32 = add i64 %25, %31
  %33 = lshr i64 %32, 31
  %34 = shl i64 %32, 33
  %35 = or i64 %34, %33
  %36 = add i64 %28, %21
  %37 = add i64 %36, %18
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds i8, i8* %8, i64 -32
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 1
  %42 = add i64 %41, %31
  %43 = getelementptr inbounds i8, i8* %8, i64 -8
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %5
  %47 = add i64 %46, %42
  %48 = lshr i64 %47, 52
  %49 = shl i64 %47, 12
  %50 = or i64 %49, %48
  %51 = lshr i64 %42, 37
  %52 = shl i64 %42, 27
  %53 = or i64 %52, %51
  %54 = getelementptr inbounds i8, i8* %8, i64 -24
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 1
  %57 = add i64 %56, %42
  %58 = lshr i64 %57, 7
  %59 = shl i64 %57, 57
  %60 = or i64 %59, %58
  %61 = add i64 %57, %11
  %62 = add i64 %61, %46
  %63 = lshr i64 %61, 31
  %64 = shl i64 %61, 33
  %65 = or i64 %64, %63
  %66 = add i64 %32, %5
  %67 = add i64 %66, %53
  %68 = add i64 %67, %60
  %69 = add i64 %68, %50
  %70 = add i64 %69, %65
  %71 = mul i64 %70, -7286425919675154353
  %72 = add i64 %62, %38
  %73 = mul i64 %72, -4348849565147123417
  %74 = add i64 %71, %73
  %75 = lshr i64 %74, 47
  %76 = xor i64 %75, %74
  %77 = mul i64 %76, -4348849565147123417
  %78 = add i64 %77, %38
  %79 = lshr i64 %78, 47
  %80 = xor i64 %79, %78
  %81 = mul i64 %80, -7286425919675154353
  ret i64 %81
}

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.68"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.64"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.356"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = alloca %"class.std::__1::unique_ptr.357", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = zext i8 %10 to i64
  %18 = select i1 %11, i8* %13, i8* %16
  %19 = select i1 %11, i64 %15, i64 %17
  %20 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #17
  %21 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %18, i64 %19) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #17
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %115, label %25

25:                                               ; preds = %5
  %26 = call i64 @llvm.ctpop.i64(i64 %23) #17, !range !4
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, -1
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %21, %23
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.68"* %40, null
  br i1 %41, label %115, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.68"* %44, null
  br i1 %45, label %115, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  %48 = load i8, i8* %9, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %14, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = load i8*, i8** %12, align 8
  %54 = select i1 %49, i8* %53, i8* %16
  %55 = icmp eq i64 %52, 0
  br label %56

56:                                               ; preds = %46, %99
  %57 = phi %"struct.std::__1::__hash_node_base.68"* [ %44, %46 ], [ %101, %99 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.68"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %21
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %27, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %47
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %23
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %23
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %36
  br i1 %71, label %72, label %115

72:                                               ; preds = %56, %69
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.68"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %57, i64 3
  %79 = bitcast %"struct.std::__1::__hash_node_base.68"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  %83 = icmp eq i64 %82, %52
  br i1 %83, label %84, label %99

84:                                               ; preds = %72
  %85 = bitcast %"struct.std::__1::__hash_node_base.68"* %73 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base.68"* %73 to i8*
  %88 = select i1 %77, i8* %86, i8* %87
  br i1 %77, label %95, label %89

89:                                               ; preds = %84
  br i1 %55, label %207, label %90

90:                                               ; preds = %89
  %91 = ptrtoint i8* %86 to i64
  %92 = trunc i64 %91 to i8
  %93 = load i8, i8* %54, align 1
  %94 = icmp eq i8 %93, %92
  br i1 %94, label %103, label %99

95:                                               ; preds = %84
  br i1 %55, label %207, label %96

96:                                               ; preds = %95
  %97 = call i32 @bcmp(i8* %88, i8* %54, i64 %52) #17
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %207, label %99

99:                                               ; preds = %110, %90, %72, %96
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %57, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.68"* %101, null
  br i1 %102, label %115, label %56

103:                                              ; preds = %90, %110
  %104 = phi i64 [ %107, %110 ], [ %81, %90 ]
  %105 = phi i8* [ %108, %110 ], [ %87, %90 ]
  %106 = phi i8* [ %111, %110 ], [ %54, %90 ]
  %107 = add i64 %104, -1
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %207, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds i8, i8* %106, i64 1
  %112 = load i8, i8* %108, align 1
  %113 = load i8, i8* %111, align 1
  %114 = icmp eq i8 %112, %113
  br i1 %114, label %103, label %99

115:                                              ; preds = %69, %99, %42, %35, %5
  %116 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %42 ], [ %36, %99 ], [ %36, %69 ]
  %117 = bitcast %"class.std::__1::unique_ptr.357"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #17
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.357"* %7, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr.357"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS8_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISY_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.357"* nonnull sret %7, %"class.std::__1::__hash_table.64"* %0, i64 %21, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1) %2, %"class.std::__1::tuple"* dereferenceable(8) %3, %"class.std::__1::tuple.356"* dereferenceable(1) %4) #19
  %120 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 2, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 1
  %123 = uitofp i64 %122 to float
  %124 = uitofp i64 %23 to float
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 3, i32 0, i32 0
  %126 = load float, float* %125, align 4
  %127 = fmul float %126, %124
  %128 = fcmp olt float %127, %123
  %129 = or i1 %24, %128
  br i1 %129, label %130, label %153

130:                                              ; preds = %115
  %131 = shl i64 %23, 1
  %132 = icmp ult i64 %23, 3
  %133 = call i64 @llvm.ctpop.i64(i64 %23) #17, !range !4
  %134 = icmp ugt i64 %133, 1
  %135 = or i1 %132, %134
  %136 = zext i1 %135 to i64
  %137 = or i64 %131, %136
  %138 = fdiv float %123, %126
  %139 = call float @llvm.ceil.f32(float %138) #17
  %140 = fptoui float %139 to i64
  %141 = icmp ult i64 %137, %140
  %142 = select i1 %141, i64 %140, i64 %137
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.64"* %0, i64 %142) #19
  %143 = load i64, i64* %22, align 8
  %144 = call i64 @llvm.ctpop.i64(i64 %143) #17, !range !4
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %130
  %147 = add i64 %143, -1
  %148 = and i64 %147, %21
  br label %153

149:                                              ; preds = %130
  %150 = icmp ult i64 %21, %143
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %21, %143
  br label %153

153:                                              ; preds = %151, %149, %146, %115
  %154 = phi i64 [ %23, %115 ], [ %143, %146 ], [ %143, %149 ], [ %143, %151 ]
  %155 = phi i64 [ %116, %115 ], [ %148, %146 ], [ %21, %149 ], [ %152, %151 ]
  %156 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %156, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %157, i64 %155
  %159 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base.68"* %159, null
  br i1 %160, label %161, label %194

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 1, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %162, i64 0, i32 0
  %164 = bitcast %"struct.std::__1::__hash_node_base.68"* %162 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.std::__1::unique_ptr.357"* %7 to i64**
  %167 = load i64*, i64** %166, align 8
  store i64 %165, i64* %167, align 8
  %168 = load %"struct.std::__1::__hash_node.353"*, %"struct.std::__1::__hash_node.353"** %118, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node.353", %"struct.std::__1::__hash_node.353"* %168, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.68"* %169, %"struct.std::__1::__hash_node_base.68"** %163, align 8
  %170 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %156, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %170, i64 %155
  store %"struct.std::__1::__hash_node_base.68"* %162, %"struct.std::__1::__hash_node_base.68"** %171, align 8
  %172 = load %"struct.std::__1::__hash_node.353"*, %"struct.std::__1::__hash_node.353"** %118, align 8
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node.353", %"struct.std::__1::__hash_node.353"* %172, i64 0, i32 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base.68"* %174, null
  br i1 %175, label %202, label %176

176:                                              ; preds = %161
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node.353", %"struct.std::__1::__hash_node.353"* %172, i64 0, i32 0
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %174, i64 1
  %179 = bitcast %"struct.std::__1::__hash_node_base.68"* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = call i64 @llvm.ctpop.i64(i64 %154) #17, !range !4
  %182 = icmp ugt i64 %181, 1
  br i1 %182, label %186, label %183

183:                                              ; preds = %176
  %184 = add i64 %154, -1
  %185 = and i64 %180, %184
  br label %190

186:                                              ; preds = %176
  %187 = icmp ult i64 %180, %154
  br i1 %187, label %190, label %188

188:                                              ; preds = %186
  %189 = urem i64 %180, %154
  br label %190

190:                                              ; preds = %183, %186, %188
  %191 = phi i64 [ %185, %183 ], [ %189, %188 ], [ %180, %186 ]
  %192 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %156, align 8
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %192, i64 %191
  store %"struct.std::__1::__hash_node_base.68"* %177, %"struct.std::__1::__hash_node_base.68"** %193, align 8
  br label %202

194:                                              ; preds = %153
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %159, i64 0, i32 0
  %196 = bitcast %"struct.std::__1::__hash_node_base.68"* %159 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.std::__1::unique_ptr.357"* %7 to i64**
  %199 = load i64*, i64** %198, align 8
  store i64 %197, i64* %199, align 8
  %200 = load %"struct.std::__1::__hash_node.353"*, %"struct.std::__1::__hash_node.353"** %118, align 8
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node.353", %"struct.std::__1::__hash_node.353"* %200, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.68"* %201, %"struct.std::__1::__hash_node_base.68"** %195, align 8
  br label %202

202:                                              ; preds = %194, %190, %161
  %203 = load %"struct.std::__1::__hash_node.353"*, %"struct.std::__1::__hash_node.353"** %118, align 8
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node.353", %"struct.std::__1::__hash_node.353"* %203, i64 0, i32 0
  %205 = load i64, i64* %120, align 8
  %206 = add i64 %205, 1
  store i64 %206, i64* %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #17
  br label %207

207:                                              ; preds = %89, %95, %96, %103, %202
  %208 = phi i8 [ 1, %202 ], [ 0, %103 ], [ 0, %96 ], [ 0, %95 ], [ 0, %89 ]
  %209 = phi %"struct.std::__1::__hash_node_base.68"* [ %204, %202 ], [ %57, %103 ], [ %57, %96 ], [ %57, %95 ], [ %57, %89 ]
  %210 = insertvalue { %"struct.std::__1::__hash_node_base.68"*, i8 } undef, %"struct.std::__1::__hash_node_base.68"* %209, 0
  %211 = insertvalue { %"struct.std::__1::__hash_node_base.68"*, i8 } %210, i8 %208, 1
  ret { %"struct.std::__1::__hash_node_base.68"*, i8 } %211
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS8_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISY_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.357"* noalias sret, %"class.std::__1::__hash_table.64"*, i64, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.356"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.357"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.357"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.357"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 24, i1 false)
  %11 = tail call i8* @_Znwm(i64 48) #20
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.357"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast %"class.std::__1::allocator.78"** %8 to %"class.std::__1::__compressed_pair.75"**
  store %"class.std::__1::__compressed_pair.75"* %7, %"class.std::__1::__compressed_pair.75"** %14, align 8
  store i8 0, i8* %9, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %6
  %23 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %23, i64 24, i1 false) #17
  br label %30

24:                                               ; preds = %6
  %25 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %25, i8* %27, i64 %29) #16
  br label %30

30:                                               ; preds = %22, %24
  %31 = getelementptr inbounds i8, i8* %11, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 8
  store i8 1, i8* %9, align 8
  %33 = getelementptr inbounds i8, i8* %11, i64 8
  %34 = bitcast i8* %33 to i64*
  store i64 %2, i64* %34, align 8
  %35 = bitcast i8* %11 to %"struct.std::__1::__hash_node_base.68"**
  store %"struct.std::__1::__hash_node_base.68"* null, %"struct.std::__1::__hash_node_base.68"** %35, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.64"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.64"* %0, i64 %10) #19
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.64"* %0, i64 %42) #19
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #12

; Function Attrs: optsize
declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.64"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %159, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #20
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.64"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.68"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.68"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #20
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.70", %"class.std::__1::__bucket_list_deallocator.70"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  br label %24

19:                                               ; preds = %24
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.68"* %22, null
  br i1 %23, label %167, label %30

24:                                               ; preds = %24, %17
  %25 = phi i64 [ %28, %24 ], [ 0, %17 ]
  %26 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %11, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base.68"* null, %"struct.std::__1::__hash_node_base.68"** %27, align 8
  %28 = add nuw i64 %25, 1
  %29 = icmp eq i64 %28, %1
  br i1 %29, label %19, label %24

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %22, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base.68"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !4
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = add i64 %1, -1
  %38 = and i64 %33, %37
  br label %43

39:                                               ; preds = %30
  %40 = icmp ult i64 %33, %1
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %33, %1
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %33, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %11, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.68"* %20, %"struct.std::__1::__hash_node_base.68"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %22, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.68"* %48, null
  br i1 %49, label %167, label %50

50:                                               ; preds = %43
  %51 = add i64 %1, -1
  br label %52

52:                                               ; preds = %50, %153
  %53 = phi %"struct.std::__1::__hash_node_base.68"* [ %48, %50 ], [ %157, %153 ]
  %54 = phi i64 [ %44, %50 ], [ %155, %153 ]
  %55 = phi %"struct.std::__1::__hash_node_base.68"* [ %22, %50 ], [ %154, %153 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.68"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  br i1 %35, label %61, label %59

59:                                               ; preds = %52
  %60 = and i64 %58, %51
  br label %65

61:                                               ; preds = %52
  %62 = icmp ult i64 %58, %1
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %58, %1
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %58, %61 ]
  %67 = icmp eq i64 %66, %54
  br i1 %67, label %153, label %68

68:                                               ; preds = %65
  %69 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %11, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %69, i64 %66
  %71 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.68"* %71, null
  br i1 %72, label %91, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %53, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.68"* %75, null
  br i1 %76, label %139, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %53, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base.68"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %53, i64 3
  %84 = bitcast %"struct.std::__1::__hash_node_base.68"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %81 to i64
  %87 = select i1 %82, i64 %85, i64 %86
  %88 = bitcast %"struct.std::__1::__hash_node_base.68"* %78 to i8**
  %89 = bitcast %"struct.std::__1::__hash_node_base.68"* %78 to i8*
  %90 = icmp eq i64 %87, 0
  br label %92

91:                                               ; preds = %68
  store %"struct.std::__1::__hash_node_base.68"* %55, %"struct.std::__1::__hash_node_base.68"** %70, align 8
  br label %153

92:                                               ; preds = %77, %135
  %93 = phi %"struct.std::__1::__hash_node_base.68"* [ %75, %77 ], [ %137, %135 ]
  %94 = phi %"struct.std::__1::__hash_node_base.68"* [ %53, %77 ], [ %93, %135 ]
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %93, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base.68"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %93, i64 3
  %101 = bitcast %"struct.std::__1::__hash_node_base.68"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  %105 = icmp eq i64 %87, %104
  br i1 %105, label %106, label %139

106:                                              ; preds = %92
  %107 = load i8*, i8** %88, align 8
  %108 = select i1 %82, i8* %107, i8* %89
  %109 = bitcast %"struct.std::__1::__hash_node_base.68"* %95 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.68"* %95 to i8*
  %112 = select i1 %99, i8* %110, i8* %111
  br i1 %82, label %119, label %113

113:                                              ; preds = %106
  br i1 %90, label %135, label %114

114:                                              ; preds = %113
  %115 = ptrtoint i8* %107 to i64
  %116 = trunc i64 %115 to i8
  %117 = load i8, i8* %112, align 1
  %118 = icmp eq i8 %117, %116
  br i1 %118, label %120, label %139

119:                                              ; preds = %106
  br i1 %90, label %135, label %132

120:                                              ; preds = %114, %127
  %121 = phi i64 [ %124, %127 ], [ %86, %114 ]
  %122 = phi i8* [ %125, %127 ], [ %89, %114 ]
  %123 = phi i8* [ %128, %127 ], [ %112, %114 ]
  %124 = add i64 %121, -1
  %125 = getelementptr inbounds i8, i8* %122, i64 1
  %126 = icmp eq i64 %124, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = load i8, i8* %125, align 1
  %130 = load i8, i8* %128, align 1
  %131 = icmp eq i8 %129, %130
  br i1 %131, label %120, label %139

132:                                              ; preds = %119
  %133 = tail call i32 @bcmp(i8* %108, i8* %112, i64 %87) #17
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %120, %113, %119, %132
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %93, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.68"* %137, null
  br i1 %138, label %139, label %92

139:                                              ; preds = %132, %135, %92, %114, %127, %73
  %140 = phi %"struct.std::__1::__hash_node_base.68"* [ %53, %73 ], [ %94, %127 ], [ %94, %132 ], [ %93, %135 ], [ %94, %92 ], [ %94, %114 ]
  %141 = bitcast %"struct.std::__1::__hash_node_base.68"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.68"* %55 to i64*
  store i64 %142, i64* %143, align 8
  %144 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %11, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %144, i64 %66
  %146 = bitcast %"struct.std::__1::__hash_node_base.68"** %145 to i64**
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %141, align 8
  %149 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %11, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %149, i64 %66
  %151 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %150, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %151, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.68"* %53, %"struct.std::__1::__hash_node_base.68"** %152, align 8
  br label %153

153:                                              ; preds = %65, %139, %91
  %154 = phi %"struct.std::__1::__hash_node_base.68"* [ %53, %91 ], [ %55, %139 ], [ %53, %65 ]
  %155 = phi i64 [ %66, %91 ], [ %54, %139 ], [ %54, %65 ]
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %154, i64 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.68"* %157, null
  br i1 %158, label %167, label %52

159:                                              ; preds = %2
  %160 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %160, align 8
  store %"struct.std::__1::__hash_node_base.68"** null, %"struct.std::__1::__hash_node_base.68"*** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.68"** %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.std::__1::__hash_node_base.68"** %161 to i8*
  tail call void @_ZdlPv(i8* %164) #20
  br label %165

165:                                              ; preds = %159, %163
  %166 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.70", %"class.std::__1::__bucket_list_deallocator.70"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %166, align 8
  br label %167

167:                                              ; preds = %153, %43, %19, %165
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEclEPS6_(%"struct.std::__1::default_delete.349"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::basic_string"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #20
  br label %12

12:                                               ; preds = %4, %9
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @_ZdlPv(i8* %13) #20
  br label %14

14:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.367"* dereferenceable(8), %"class.std::__1::tuple.356"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !4
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #16, !noalias !5
  %58 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %57, i64 32, i64 8) #16, !noalias !5
  %59 = getelementptr inbounds i8, i8* %58, i64 16
  %60 = getelementptr inbounds %"class.std::__1::tuple.367", %"class.std::__1::tuple.367"* %3, i64 0, i32 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8, !noalias !5
  %62 = bitcast i8* %59 to i32*
  %63 = load i32, i32* %61, align 4, !noalias !5
  store i32 %63, i32* %62, align 8, !noalias !5
  %64 = getelementptr inbounds i8, i8* %58, i64 24
  %65 = bitcast i8* %64 to %"class.Ice::CfgNode"**
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %65, align 8, !noalias !5
  %66 = getelementptr inbounds i8, i8* %58, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !5
  %68 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %68, align 8, !noalias !5
  %69 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !4
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #17
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %91) #19
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #17, !range !4
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, -1
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %58 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i8**
  store i8* %58, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base"* %111, %"struct.std::__1::__hash_node_base"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #17, !range !4
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %58 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8**
  br label %141

141:                                              ; preds = %136, %131
  %142 = phi i8** [ %135, %131 ], [ %140, %136 ]
  store i8* %58, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %151
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10) #19
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42) #19
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: optsize
declare %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.376", align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = add i64 %2, -1
  %12 = add i64 %11, %10
  %13 = sub i64 0, %2
  %14 = and i64 %12, %13
  %15 = sub i64 %14, %10
  %16 = add i64 %15, %1
  %17 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp ugt i64 %16, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %9, i64 %15
  %24 = getelementptr inbounds i8, i8* %23, i64 %1
  store i8* %24, i8** %8, align 8
  br label %45

25:                                               ; preds = %3
  %26 = add i64 %11, %1
  %27 = icmp ugt i64 %26, 1048576
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call noalias i8* @malloc(i64 %26) #16
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair.376"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %4, i64 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %4, i64 0, i32 1
  store i64 %26, i64* %33, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.4"* %30, %"struct.std::__1::pair.376"* nonnull dereferenceable(16) %4) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #17
  %34 = ptrtoint i8* %29 to i64
  %35 = add i64 %11, %34
  %36 = and i64 %35, %13
  %37 = inttoptr i64 %36 to i8*
  br label %45

38:                                               ; preds = %25
  tail call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"* %0) #19
  %39 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %11
  %42 = and i64 %41, %13
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %1
  store i8* %44, i8** %8, align 8
  br label %45

45:                                               ; preds = %28, %38, %22
  %46 = phi i8* [ %23, %22 ], [ %37, %28 ], [ %43, %38 ]
  ret i8* %46
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.4"*, %"struct.std::__1::pair.376"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.4", %"class.llvm::SmallVectorTemplateBase.4"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.4", %"class.llvm::SmallVectorTemplateBase.4"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.4", %"class.llvm::SmallVectorTemplateBase.4"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.4", %"class.llvm::SmallVectorTemplateBase.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #16
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.376"**
  %15 = bitcast %"struct.std::__1::pair.376"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %16, i64 1
  store %"struct.std::__1::pair.376"* %17, %"struct.std::__1::pair.376"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr i64 %9, 10
  %11 = and i64 %10, 33554431
  %12 = icmp ult i64 %11, 30
  %13 = select i1 %12, i64 %11, i64 30
  %14 = shl i64 1048576, %13
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = tail call noalias i8* @malloc(i64 %14) #16
  store i8* %16, i8** %2, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %3, i64 0, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* %17, i8** nonnull dereferenceable(8) %2) #19
  %18 = bitcast i8** %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %14
  %23 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #13

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !8

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #16
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %101, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #16
  %6 = shl i64 %1, 3
  %7 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %5, i64 %6, i64 8) #16
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = bitcast i8* %7 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %11, align 8
  %12 = icmp eq i64 %1, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %18, %4
  %14 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base"* %16, null
  br i1 %17, label %103, label %24

18:                                               ; preds = %4, %18
  %19 = phi i64 [ %22, %18 ], [ 1, %4 ]
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %19
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %21, align 8
  %22 = add nuw i64 %19, 1
  %23 = icmp eq i64 %22, %1
  br i1 %23, label %13, label %18

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 1
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !4
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = add i64 %1, -1
  %32 = and i64 %27, %31
  br label %37

33:                                               ; preds = %24
  %34 = icmp ult i64 %27, %1
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = urem i64 %27, %1
  br label %37

37:                                               ; preds = %30, %33, %35
  %38 = phi i64 [ %32, %30 ], [ %36, %35 ], [ %27, %33 ]
  %39 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, i64 %38
  store %"struct.std::__1::__hash_node_base"* %14, %"struct.std::__1::__hash_node_base"** %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %103, label %44

44:                                               ; preds = %37
  %45 = add i64 %1, -1
  br label %46

46:                                               ; preds = %44, %95
  %47 = phi %"struct.std::__1::__hash_node_base"* [ %42, %44 ], [ %99, %95 ]
  %48 = phi i64 [ %38, %44 ], [ %97, %95 ]
  %49 = phi %"struct.std::__1::__hash_node_base"* [ %16, %44 ], [ %96, %95 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  br i1 %29, label %55, label %53

53:                                               ; preds = %46
  %54 = and i64 %52, %45
  br label %59

55:                                               ; preds = %46
  %56 = icmp ult i64 %52, %1
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %52, %1
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %52, %55 ]
  %61 = icmp eq i64 %60, %48
  br i1 %61, label %95, label %62

62:                                               ; preds = %59
  %63 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, i64 %60
  %65 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i32*
  br label %71

70:                                               ; preds = %62
  store %"struct.std::__1::__hash_node_base"* %49, %"struct.std::__1::__hash_node_base"** %64, align 8
  br label %95

71:                                               ; preds = %67, %76
  %72 = phi %"struct.std::__1::__hash_node_base"* [ %74, %76 ], [ %47, %67 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %72, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base"* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %74, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i32*
  %79 = load i32, i32* %69, align 4
  %80 = load i32, i32* %78, align 4
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %71, label %82

82:                                               ; preds = %71, %76
  %83 = ptrtoint %"struct.std::__1::__hash_node_base"* %74 to i64
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  store i64 %83, i64* %85, align 8
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %60
  %88 = bitcast %"struct.std::__1::__hash_node_base"** %87 to i64**
  %89 = load i64*, i64** %88, align 8
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %84, align 8
  %91 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %91, i64 %60
  %93 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %47, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %95

95:                                               ; preds = %59, %82, %70
  %96 = phi %"struct.std::__1::__hash_node_base"* [ %47, %70 ], [ %49, %82 ], [ %47, %59 ]
  %97 = phi i64 [ %60, %70 ], [ %48, %82 ], [ %48, %59 ]
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %96, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base"* %99, null
  br i1 %100, label %103, label %46

101:                                              ; preds = %2
  %102 = bitcast %"class.std::__1::__hash_table"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false)
  br label %103

103:                                              ; preds = %95, %37, %13, %101
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE8__appendEmRKS2_(%"class.std::__1::vector.266"*, i64, %"class.Ice::VariableTracking"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__split_buffer.383", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.Ice::VariableTracking"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"class.Ice::VariableTracking"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = sdiv exact i64 %11, 72
  %13 = icmp ult i64 %12, %1
  br i1 %13, label %35, label %14

14:                                               ; preds = %3
  %15 = inttoptr i64 %10 to %"class.Ice::VariableTracking"*
  %16 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %15, i64 %1
  %17 = icmp eq i64 %1, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.Ice::VariableTracking"* %2 to i8*
  %20 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %2, i64 0, i32 4
  %21 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %2, i64 0, i32 5
  %22 = bitcast %"class.Ice::Inst"** %21 to i8*
  br label %25

23:                                               ; preds = %25
  %24 = ptrtoint %"class.Ice::VariableTracking"* %16 to i64
  br label %33

25:                                               ; preds = %25, %18
  %26 = phi %"class.Ice::VariableTracking"* [ %15, %18 ], [ %31, %25 ]
  %27 = bitcast %"class.Ice::VariableTracking"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %19, i64 24, i1 false) #17
  %28 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %26, i64 0, i32 4
  tail call void @_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEEC2ERKS8_(%"class.std::__1::vector.268"* %28, %"class.std::__1::vector.268"* dereferenceable(32) %20) #16
  %29 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %26, i64 0, i32 5
  %30 = bitcast %"class.Ice::Inst"** %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %22, i64 12, i1 false) #17
  %31 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %26, i64 1
  %32 = icmp eq %"class.Ice::VariableTracking"* %31, %16
  br i1 %32, label %23, label %25

33:                                               ; preds = %14, %23
  %34 = phi i64 [ %24, %23 ], [ %10, %14 ]
  store i64 %34, i64* %9, align 8
  br label %97

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %37 = bitcast %"struct.std::__1::__split_buffer.383"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #17
  %38 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %4, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %4, i64 0, i32 2
  %40 = bitcast %"class.std::__1::vector.266"* %0 to i64*
  %41 = bitcast %"struct.std::__1::__split_buffer.383"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 40, i1 false)
  %42 = load i64, i64* %40, align 8
  %43 = sub i64 %10, %42
  %44 = sdiv exact i64 %43, 72
  %45 = add i64 %44, %1
  %46 = icmp ugt i64 %45, 256204778801521550
  br i1 %46, label %47, label %49

47:                                               ; preds = %35
  %48 = bitcast %"class.std::__1::vector.266"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #18
  unreachable

49:                                               ; preds = %35
  %50 = sub i64 %7, %42
  %51 = sdiv exact i64 %50, 72
  %52 = icmp ult i64 %51, 128102389400760775
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = shl nsw i64 %51, 1
  %55 = icmp ult i64 %54, %45
  %56 = select i1 %55, i64 %45, i64 %54
  br label %57

57:                                               ; preds = %53, %49
  %58 = phi i64 [ %56, %53 ], [ 256204778801521550, %49 ]
  call void @_ZNSt3__114__split_bufferIN3Ice16VariableTrackingERNS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEEC2EmmS6_(%"struct.std::__1::__split_buffer.383"* nonnull %4, i64 %58, i64 %44, %"struct.Ice::sz_allocator.277"* dereferenceable(8) %36) #19
  %59 = bitcast %"class.Ice::VariableTracking"** %39 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"class.Ice::VariableTracking"*
  %62 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %61, i64 %1
  %63 = bitcast %"class.Ice::VariableTracking"* %2 to i8*
  %64 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %2, i64 0, i32 4
  %65 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %2, i64 0, i32 5
  %66 = bitcast %"class.Ice::Inst"** %65 to i8*
  br label %67

67:                                               ; preds = %67, %57
  %68 = phi %"class.Ice::VariableTracking"* [ %61, %57 ], [ %74, %67 ]
  %69 = phi i64 [ %60, %57 ], [ %75, %67 ]
  %70 = inttoptr i64 %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %63, i64 24, i1 false) #17
  %71 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %68, i64 0, i32 4
  call void @_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEEC2ERKS8_(%"class.std::__1::vector.268"* %71, %"class.std::__1::vector.268"* dereferenceable(32) %64) #16
  %72 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %68, i64 0, i32 5
  %73 = bitcast %"class.Ice::Inst"** %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %66, i64 12, i1 false) #17
  %74 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %68, i64 1
  %75 = ptrtoint %"class.Ice::VariableTracking"* %74 to i64
  %76 = icmp eq %"class.Ice::VariableTracking"* %62, %74
  br i1 %76, label %77, label %67

77:                                               ; preds = %67
  %78 = ptrtoint %"class.Ice::VariableTracking"* %62 to i64
  store i64 %78, i64* %59, align 8
  call void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS5_EE(%"class.std::__1::vector.266"* %0, %"struct.std::__1::__split_buffer.383"* nonnull dereferenceable(40) %4) #19
  %79 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %38, align 8
  %80 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %39, align 8
  %81 = icmp eq %"class.Ice::VariableTracking"* %80, %79
  br i1 %81, label %96, label %82

82:                                               ; preds = %77, %93
  %83 = phi %"class.Ice::VariableTracking"* [ %94, %93 ], [ %80, %77 ]
  %84 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %83, i64 -1
  store %"class.Ice::VariableTracking"* %84, %"class.Ice::VariableTracking"** %39, align 8
  %85 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %83, i64 -1, i32 4, i32 0, i32 0
  %86 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %85, align 8
  %87 = icmp eq %"class.Ice::Inst"** %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %82
  %89 = ptrtoint %"class.Ice::Inst"** %86 to i64
  %90 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %83, i64 -1, i32 4, i32 0, i32 1
  %91 = bitcast %"class.Ice::Inst"*** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %39, align 8
  br label %93

93:                                               ; preds = %88, %82
  %94 = phi %"class.Ice::VariableTracking"* [ %84, %82 ], [ %92, %88 ]
  %95 = icmp eq %"class.Ice::VariableTracking"* %94, %79
  br i1 %95, label %96, label %82

96:                                               ; preds = %93, %77
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #17
  br label %97

97:                                               ; preds = %96, %33
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3Ice16VariableTrackingERNS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEEC2EmmS6_(%"struct.std::__1::__split_buffer.383"*, i64, i64, %"struct.Ice::sz_allocator.277"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.Ice::VariableTracking"* null, %"class.Ice::VariableTracking"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %0, i64 0, i32 3, i32 1, i32 0
  store %"struct.Ice::sz_allocator.277"* %3, %"struct.Ice::sz_allocator.277"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #16
  %10 = mul i64 %1, 72
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 8) #16
  %12 = bitcast i8* %11 to %"class.Ice::VariableTracking"*
  br label %13

13:                                               ; preds = %4, %8
  %14 = phi %"class.Ice::VariableTracking"* [ %12, %8 ], [ null, %4 ]
  %15 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %0, i64 0, i32 0
  store %"class.Ice::VariableTracking"* %14, %"class.Ice::VariableTracking"** %15, align 8
  %16 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %14, i64 %2
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %0, i64 0, i32 2
  store %"class.Ice::VariableTracking"* %16, %"class.Ice::VariableTracking"** %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %0, i64 0, i32 1
  store %"class.Ice::VariableTracking"* %16, %"class.Ice::VariableTracking"** %18, align 8
  %19 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %14, i64 %1
  store %"class.Ice::VariableTracking"* %19, %"class.Ice::VariableTracking"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS5_EE(%"class.std::__1::vector.266"*, %"struct.std::__1::__split_buffer.383"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %1, i64 0, i32 1
  %8 = icmp eq %"class.Ice::VariableTracking"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"class.Ice::VariableTracking"* %4 to i64
  %11 = bitcast %"class.Ice::VariableTracking"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.266"* %0 to i64*
  br label %37

14:                                               ; preds = %2
  %15 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %7, align 8
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"class.Ice::VariableTracking"* [ %30, %16 ], [ %15, %14 ]
  %18 = phi %"class.Ice::VariableTracking"* [ %20, %16 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %17, i64 -1
  %20 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %18, i64 -1
  %21 = bitcast %"class.Ice::VariableTracking"* %19 to i8*
  %22 = bitcast %"class.Ice::VariableTracking"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #17
  %23 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %17, i64 -1, i32 4
  %24 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %18, i64 -1, i32 4
  tail call void @_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEEC2ERKS8_(%"class.std::__1::vector.268"* %23, %"class.std::__1::vector.268"* dereferenceable(32) %24) #16
  %25 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %17, i64 -1, i32 5
  %26 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %18, i64 -1, i32 5
  %27 = bitcast %"class.Ice::Inst"** %25 to i8*
  %28 = bitcast %"class.Ice::Inst"** %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 12, i1 false) #17
  %29 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %7, align 8
  %30 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %29, i64 -1
  store %"class.Ice::VariableTracking"* %30, %"class.Ice::VariableTracking"** %7, align 8
  %31 = icmp eq %"class.Ice::VariableTracking"* %20, %4
  br i1 %31, label %32, label %16

32:                                               ; preds = %16
  %33 = ptrtoint %"class.Ice::VariableTracking"* %30 to i64
  %34 = bitcast %"class.std::__1::vector.266"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.Ice::VariableTracking"** %7 to i64*
  br label %37

37:                                               ; preds = %9, %32
  %38 = phi i64* [ %11, %9 ], [ %36, %32 ]
  %39 = phi i64* [ %13, %9 ], [ %34, %32 ]
  %40 = phi i64 [ %12, %9 ], [ %33, %32 ]
  %41 = phi i64 [ %10, %9 ], [ %35, %32 ]
  store i64 %40, i64* %39, align 8
  store i64 %41, i64* %38, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %1, i64 0, i32 2
  %43 = bitcast %"class.Ice::VariableTracking"** %5 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.Ice::VariableTracking"** %42 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  store i64 %44, i64* %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %1, i64 0, i32 3, i32 0, i32 0
  %49 = bitcast %"class.Ice::VariableTracking"** %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.Ice::VariableTracking"** %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  store i64 %50, i64* %51, align 8
  %53 = load i64, i64* %38, align 8
  %54 = bitcast %"struct.std::__1::__split_buffer.383"* %1 to i64*
  store i64 %53, i64* %54, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEEC2ERKS8_(%"class.std::__1::vector.268"*, %"class.std::__1::vector.268"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %1, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %4 = bitcast %"class.llvm::BumpPtrAllocatorImpl"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.272"* %6 to i64*
  %8 = bitcast %"class.std::__1::vector.268"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #17
  store i64 %5, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"class.Ice::Inst"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.268"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = ashr exact i64 %14, 3
  tail call void @_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.268"* %0, i64 %17) #19
  %18 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %18, align 8
  %20 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %9, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"class.Ice::Inst"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq %"class.Ice::Inst"** %19, %20
  br i1 %24, label %41, label %25

25:                                               ; preds = %16
  %26 = inttoptr i64 %23 to i64*
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ %23, %25 ], [ %36, %27 ]
  %29 = phi i64* [ %26, %25 ], [ %38, %27 ]
  %30 = phi %"class.Ice::Inst"** [ %19, %25 ], [ %33, %27 ]
  %31 = bitcast %"class.Ice::Inst"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  %33 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %30, i64 1
  %34 = inttoptr i64 %28 to %"class.Ice::Inst"**
  %35 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %34, i64 1
  %36 = ptrtoint %"class.Ice::Inst"** %35 to i64
  %37 = icmp eq %"class.Ice::Inst"** %33, %20
  %38 = bitcast %"class.Ice::Inst"** %35 to i64*
  br i1 %37, label %39, label %27

39:                                               ; preds = %27
  %40 = ptrtoint %"class.Ice::Inst"** %35 to i64
  br label %41

41:                                               ; preds = %39, %16
  %42 = phi i64 [ %23, %16 ], [ %40, %39 ]
  store i64 %42, i64* %22, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN3Ice4InstENS1_12sz_allocatorIS4_NS1_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.268"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.268"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #18
  unreachable

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #16
  %8 = shl i64 %1, 3
  %9 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %7, i64 %8, i64 8) #16
  %10 = bitcast i8* %9 to %"class.Ice::Inst"**
  %11 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.Ice::Inst"*** %11 to i8**
  store i8* %9, i8** %12, align 8
  %13 = bitcast %"class.std::__1::vector.268"* %0 to i8**
  store i8* %9, i8** %13, align 8
  %14 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %10, i64 %1
  %15 = getelementptr inbounds %"class.std::__1::vector.268", %"class.std::__1::vector.268"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.Ice::Inst"** %14, %"class.Ice::Inst"*** %15, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE8__appendEm(%"class.std::__1::vector.266"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.383", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.Ice::VariableTracking"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.Ice::VariableTracking"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 72
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %31, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %9 to %"class.Ice::VariableTracking"*
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %14, i64 %1
  %18 = inttoptr i64 %9 to i8*
  %19 = add i64 %1, -1
  %20 = getelementptr %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %14, i64 %19, i32 0
  %21 = bitcast i32* %20 to i8*
  %22 = sub i64 0, %9
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = ptrtoint i8* %23 to i64
  %25 = urem i64 %24, 72
  %26 = add i64 %24, 72
  %27 = sub i64 %26, %25
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %27, i1 false) #17
  %28 = ptrtoint %"class.Ice::VariableTracking"* %17 to i64
  br label %29

29:                                               ; preds = %13, %16
  %30 = phi i64 [ %28, %16 ], [ %9, %13 ]
  store i64 %30, i64* %8, align 8
  br label %86

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::vector.266", %"class.std::__1::vector.266"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %33 = bitcast %"struct.std::__1::__split_buffer.383"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #17
  %34 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %3, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.std::__1::__split_buffer.383", %"struct.std::__1::__split_buffer.383"* %3, i64 0, i32 2
  %36 = bitcast %"class.std::__1::vector.266"* %0 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.383"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 40, i1 false)
  %38 = load i64, i64* %36, align 8
  %39 = sub i64 %9, %38
  %40 = sdiv exact i64 %39, 72
  %41 = add i64 %40, %1
  %42 = icmp ugt i64 %41, 256204778801521550
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = bitcast %"class.std::__1::vector.266"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #18
  unreachable

45:                                               ; preds = %31
  %46 = sub i64 %6, %38
  %47 = sdiv exact i64 %46, 72
  %48 = icmp ult i64 %47, 128102389400760775
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = shl nsw i64 %47, 1
  %51 = icmp ult i64 %50, %41
  %52 = select i1 %51, i64 %41, i64 %50
  br label %53

53:                                               ; preds = %45, %49
  %54 = phi i64 [ %52, %49 ], [ 256204778801521550, %45 ]
  call void @_ZNSt3__114__split_bufferIN3Ice16VariableTrackingERNS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEEC2EmmS6_(%"struct.std::__1::__split_buffer.383"* nonnull %3, i64 %54, i64 %40, %"struct.Ice::sz_allocator.277"* dereferenceable(8) %32) #19
  %55 = bitcast %"class.Ice::VariableTracking"** %35 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = inttoptr i64 %56 to %"class.Ice::VariableTracking"*
  %58 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %57, i64 %1
  br label %59

59:                                               ; preds = %53, %59
  %60 = phi %"class.Ice::VariableTracking"* [ %63, %59 ], [ %57, %53 ]
  %61 = phi i64 [ %64, %59 ], [ %56, %53 ]
  %62 = inttoptr i64 %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 72, i1 false) #17
  %63 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %60, i64 1
  %64 = ptrtoint %"class.Ice::VariableTracking"* %63 to i64
  %65 = icmp eq %"class.Ice::VariableTracking"* %58, %63
  br i1 %65, label %66, label %59

66:                                               ; preds = %59
  %67 = ptrtoint %"class.Ice::VariableTracking"* %58 to i64
  store i64 %67, i64* %55, align 8
  call void @_ZNSt3__16vectorIN3Ice16VariableTrackingENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS5_EE(%"class.std::__1::vector.266"* %0, %"struct.std::__1::__split_buffer.383"* nonnull dereferenceable(40) %3) #19
  %68 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %34, align 8
  %69 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %35, align 8
  %70 = icmp eq %"class.Ice::VariableTracking"* %69, %68
  br i1 %70, label %85, label %71

71:                                               ; preds = %66, %82
  %72 = phi %"class.Ice::VariableTracking"* [ %83, %82 ], [ %69, %66 ]
  %73 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %72, i64 -1
  store %"class.Ice::VariableTracking"* %73, %"class.Ice::VariableTracking"** %35, align 8
  %74 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %72, i64 -1, i32 4, i32 0, i32 0
  %75 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %74, align 8
  %76 = icmp eq %"class.Ice::Inst"** %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %71
  %78 = ptrtoint %"class.Ice::Inst"** %75 to i64
  %79 = getelementptr inbounds %"class.Ice::VariableTracking", %"class.Ice::VariableTracking"* %72, i64 -1, i32 4, i32 0, i32 1
  %80 = bitcast %"class.Ice::Inst"*** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = load %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"** %35, align 8
  br label %82

82:                                               ; preds = %77, %71
  %83 = phi %"class.Ice::VariableTracking"* [ %73, %71 ], [ %81, %77 ]
  %84 = icmp eq %"class.Ice::VariableTracking"* %83, %68
  br i1 %84, label %85, label %71

85:                                               ; preds = %82, %66
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #17
  br label %86

86:                                               ; preds = %85, %29
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind optsize }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind optsize }
attributes #19 = { optsize }
attributes #20 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{i64 0, i64 65}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISU_SF_EEEEEEmOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISU_SF_EEEEEEmOT_DpOT0_"}
!8 = !{!"branch_weights", i32 2000, i32 1}
