; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-common.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-common.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_atomic_int_t = type { i32 }
%struct.hb_atomic_ptr_t = type { %struct.hb_language_impl_t* }
%struct.hb_language_impl_t = type { [1 x i8] }
%struct.hb_atomic_ptr_t.1 = type { %struct.hb_language_item_t* }
%struct.hb_language_item_t = type { %struct.hb_language_item_t*, %struct.hb_language_impl_t* }
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_variation_t = type { i32, float }

@_hb_options = hidden local_unnamed_addr global %struct.hb_atomic_int_t zeroinitializer, align 4
@.str = private unnamed_addr constant [11 x i8] c"HB_OPTIONS\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"uniscribe-bug-compatible\00", align 1
@_ZL17direction_strings = internal constant [4 x [4 x i8]] [[4 x i8] c"ltr\00", [4 x i8] c"rtl\00", [4 x i8] c"ttb\00", [4 x i8] c"btt\00"], align 16
@.str.2 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@_ZZ23hb_language_get_defaultE16default_language = internal global %struct.hb_atomic_ptr_t zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [6 x i8] c"2.8.1\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@_ZL5langs = internal global %struct.hb_atomic_ptr_t.1 zeroinitializer, align 8
@_ZL9canon_map = internal unnamed_addr constant <{ [123 x i8], [133 x i8] }> <{ [123 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00-\00\000123456789\00\00\00\00\00\00\00abcdefghijklmnopqrstuvwxyz\00\00\00\00-\00abcdefghijklmnopqrstuvwxyz", [133 x i8] zeroinitializer }>, align 16
@switch.table.hb_direction_from_string = private unnamed_addr constant [10 x i32] [i32 7, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 5, i32 6], align 4

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_Z16_hb_options_initv() local_unnamed_addr #0 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #12
  %2 = icmp eq i8* %1, null
  br i1 %2, label %33, label %3

3:                                                ; preds = %0
  %4 = load i8, i8* %1, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %3, %14
  %7 = phi i8* [ %28, %14 ], [ %1, %3 ]
  %8 = phi i8 [ %24, %14 ], [ 2, %3 ]
  %9 = tail call i8* @strchr(i8* %7, i32 58) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = tail call i64 @strlen(i8* %7) #13
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  br label %14

14:                                               ; preds = %6, %11
  %15 = phi i8* [ %9, %6 ], [ %13, %11 ]
  %16 = ptrtoint i8* %15 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  %19 = tail call i32 @strncmp(i8* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i64 %18) #13
  %20 = icmp eq i32 %19, 0
  %21 = icmp eq i64 %18, 24
  %22 = and i1 %20, %21
  %23 = or i8 %8, 4
  %24 = select i1 %22, i8 %23, i8 %8
  %25 = load i8, i8* %15, align 1
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds i8, i8* %15, i64 1
  %28 = select i1 %26, i8* %15, i8* %27
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %6

31:                                               ; preds = %14
  %32 = zext i8 %24 to i32
  br label %33

33:                                               ; preds = %31, %3, %0
  %34 = phi i32 [ 2, %0 ], [ 2, %3 ], [ %32, %31 ]
  store atomic i32 %34, i32* getelementptr inbounds (%struct.hb_atomic_int_t, %struct.hb_atomic_int_t* @_hb_options, i64 0, i32 0) monotonic, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @hb_tag_from_string(i8* readonly, i32) local_unnamed_addr #4 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to [4 x i8]*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #12
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 1
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 2
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 3
  %9 = icmp ne i8* %0, null
  %10 = icmp ne i32 %1, 0
  %11 = and i1 %9, %10
  store i32 -1431655766, i32* %3, align 4
  br i1 %11, label %12, label %58

12:                                               ; preds = %2
  %13 = load i8, i8* %0, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %58, label %15

15:                                               ; preds = %12
  %16 = icmp ult i32 %1, 4
  %17 = select i1 %16, i32 %1, i32 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %36, label %19

19:                                               ; preds = %15
  %20 = icmp eq i8 %13, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %19, %28
  %22 = phi i32 [ %26, %28 ], [ 0, %19 ]
  %23 = phi i8 [ %31, %28 ], [ %13, %19 ]
  %24 = zext i32 %22 to i64
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 %24
  store i8 %23, i8* %25, align 1
  %26 = add nuw i32 %22, 1
  %27 = icmp ult i32 %26, %17
  br i1 %27, label %28, label %33

28:                                               ; preds = %21
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %21

33:                                               ; preds = %28, %21, %19
  %34 = phi i32 [ 0, %19 ], [ %26, %21 ], [ %26, %28 ]
  %35 = icmp ult i32 %34, 4
  br i1 %35, label %36, label %43

36:                                               ; preds = %15, %33
  %37 = phi i32 [ %34, %33 ], [ 0, %15 ]
  %38 = zext i32 %37 to i64
  %39 = getelementptr [4 x i8], [4 x i8]* %4, i64 0, i64 %38
  %40 = sub nuw nsw i32 3, %37
  %41 = zext i32 %40 to i64
  %42 = add nuw nsw i64 %41, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %39, i8 32, i64 %42, i1 false)
  br label %43

43:                                               ; preds = %36, %33
  %44 = load i8, i8* %5, align 4
  %45 = zext i8 %44 to i32
  %46 = shl nuw i32 %45, 24
  %47 = load i8, i8* %6, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 16
  %50 = or i32 %49, %46
  %51 = load i8, i8* %7, align 2
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = or i32 %50, %53
  %55 = load i8, i8* %8, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %54, %56
  br label %58

58:                                               ; preds = %2, %12, %43
  %59 = phi i32 [ %57, %43 ], [ 0, %12 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  ret i32 %59
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @hb_tag_to_string(i32, i8* nocapture) local_unnamed_addr #5 {
  %3 = lshr i32 %0, 24
  %4 = trunc i32 %3 to i8
  store i8 %4, i8* %1, align 1
  %5 = lshr i32 %0, 16
  %6 = trunc i32 %5 to i8
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %6, i8* %7, align 1
  %8 = lshr i32 %0, 8
  %9 = trunc i32 %8 to i8
  %10 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %9, i8* %10, align 1
  %11 = trunc i32 %0 to i8
  %12 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %11, i8* %12, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @hb_direction_from_string(i8* readonly, i32) local_unnamed_addr #6 {
  %3 = icmp ne i8* %0, null
  %4 = icmp ne i32 %1, 0
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %23, !prof !2

6:                                                ; preds = %2
  %7 = load i8, i8* %0, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %23, label %9, !prof !3

9:                                                ; preds = %6
  %10 = add i8 %7, -65
  %11 = icmp ult i8 %10, 26
  %12 = add i8 %7, 32
  %13 = select i1 %11, i8 %12, i8 %7
  %14 = add i8 %13, -98
  %15 = lshr i8 %14, 1
  %16 = shl i8 %14, 7
  %17 = or i8 %15, %16
  %18 = icmp ult i8 %17, 10
  br i1 %18, label %19, label %23

19:                                               ; preds = %9
  %20 = sext i8 %17 to i64
  %21 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table.hb_direction_from_string, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  ret i32 %22

23:                                               ; preds = %9, %2, %6
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @hb_direction_to_string(i32) local_unnamed_addr #7 {
  %2 = add nsw i32 %0, -4
  %3 = icmp ult i32 %2, 4
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* @_ZL17direction_strings, i64 0, i64 %4, i64 0
  %6 = select i1 %3, i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), !prof !2
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_language_impl_t* @hb_language_from_string(i8* readonly, i32) local_unnamed_addr #8 {
  %3 = alloca [64 x i8], align 16
  %4 = icmp ne i8* %0, null
  %5 = icmp ne i32 %1, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = load i8, i8* %0, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %7
  %11 = icmp sgt i32 %1, -1
  br i1 %11, label %12, label %23

12:                                               ; preds = %10
  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #12
  %14 = icmp slt i32 %1, 63
  %15 = select i1 %14, i32 %1, i32 63
  %16 = sext i32 %15 to i64
  %17 = icmp ugt i32 %15, 63
  %18 = sub nuw nsw i64 64, %16
  %19 = select i1 %17, i64 0, i64 %18
  %20 = getelementptr [64 x i8], [64 x i8]* %3, i64 0, i64 %16
  call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 -86, i64 %19, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %13, i8* nonnull align 1 %0, i64 %16, i1 false)
  %21 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 %16
  store i8 0, i8* %21, align 1
  %22 = call fastcc %struct.hb_language_item_t* @_ZL19lang_find_or_insertPKc(i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #12
  br label %25

23:                                               ; preds = %10
  %24 = tail call fastcc %struct.hb_language_item_t* @_ZL19lang_find_or_insertPKc(i8* nonnull %0)
  br label %25

25:                                               ; preds = %23, %12
  %26 = phi %struct.hb_language_item_t* [ %22, %12 ], [ %24, %23 ]
  %27 = icmp eq %struct.hb_language_item_t* %26, null
  br i1 %27, label %31, label %28, !prof !3

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.hb_language_item_t, %struct.hb_language_item_t* %26, i64 0, i32 1
  %30 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %29, align 8
  br label %31

31:                                               ; preds = %28, %25, %2, %7
  %32 = phi %struct.hb_language_impl_t* [ null, %7 ], [ null, %2 ], [ %30, %28 ], [ null, %25 ]
  ret %struct.hb_language_impl_t* %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.hb_language_item_t* @_ZL19lang_find_or_insertPKc(i8* nocapture readonly) unnamed_addr #8 {
  br label %2

2:                                                ; preds = %78, %1
  %3 = load atomic i64, i64* bitcast (%struct.hb_atomic_ptr_t.1* @_ZL5langs to i64*) acquire, align 8
  %4 = inttoptr i64 %3 to %struct.hb_language_item_t*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %2, %39
  %7 = phi %struct.hb_language_item_t* [ %41, %39 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.hb_language_item_t, %struct.hb_language_item_t* %7, i64 0, i32 1
  %9 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %8, align 8
  %10 = getelementptr inbounds %struct.hb_language_impl_t, %struct.hb_language_impl_t* %9, i64 0, i32 0, i64 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %6, %24
  %14 = phi i8 [ %27, %24 ], [ %11, %6 ]
  %15 = phi i8* [ %26, %24 ], [ %0, %6 ]
  %16 = phi i8* [ %25, %24 ], [ %10, %6 ]
  %17 = zext i8 %14 to i32
  %18 = load i8, i8* %15, align 1
  %19 = zext i8 %18 to i64
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [123 x i8], [133 x i8] }>* @_ZL9canon_map to [256 x i8]*), i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %17, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = getelementptr inbounds i8, i8* %16, i64 1
  %26 = getelementptr inbounds i8, i8* %15, i64 1
  %27 = load i8, i8* %25, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %13

29:                                               ; preds = %13, %24, %6
  %30 = phi i8* [ %0, %6 ], [ %26, %24 ], [ %15, %13 ]
  %31 = phi i8 [ 0, %6 ], [ 0, %24 ], [ %14, %13 ]
  %32 = zext i8 %31 to i32
  %33 = load i8, i8* %30, align 1
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [123 x i8], [133 x i8] }>* @_ZL9canon_map to [256 x i8]*), i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp eq i32 %32, %37
  br i1 %38, label %82, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %struct.hb_language_item_t, %struct.hb_language_item_t* %7, i64 0, i32 0
  %41 = load %struct.hb_language_item_t*, %struct.hb_language_item_t** %40, align 8
  %42 = icmp eq %struct.hb_language_item_t* %41, null
  br i1 %42, label %43, label %6

43:                                               ; preds = %39, %2
  %44 = tail call noalias i8* @calloc(i64 1, i64 16) #12
  %45 = icmp eq i8* %44, null
  br i1 %45, label %82, label %46, !prof !3

46:                                               ; preds = %43
  %47 = bitcast i8* %44 to %struct.hb_language_item_t**
  store %struct.hb_language_item_t* %4, %struct.hb_language_item_t** %47, align 8
  %48 = tail call i64 @strlen(i8* %0) #13
  %49 = add i64 %48, 1
  %50 = tail call noalias i8* @malloc(i64 %49) #12
  %51 = getelementptr inbounds i8, i8* %44, i64 8
  %52 = bitcast i8* %51 to i8**
  store i8* %50, i8** %52, align 8
  %53 = icmp eq i8* %50, null
  %54 = bitcast i8* %50 to %struct.hb_language_impl_t*
  br i1 %53, label %70, label %55, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* align 1 %0, i64 %49, i1 false) #12
  %56 = load i8, i8* %50, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %55, %58
  %59 = phi i8 [ %65, %58 ], [ %56, %55 ]
  %60 = phi i8* [ %64, %58 ], [ %50, %55 ]
  %61 = zext i8 %59 to i64
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [123 x i8], [133 x i8] }>* @_ZL9canon_map to [256 x i8]*), i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* %60, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %58

67:                                               ; preds = %58
  %68 = bitcast i8* %51 to %struct.hb_language_impl_t**
  %69 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %68, align 8
  br label %70

70:                                               ; preds = %67, %46, %55
  %71 = phi %struct.hb_language_impl_t* [ %69, %67 ], [ %54, %46 ], [ %54, %55 ]
  %72 = icmp eq %struct.hb_language_impl_t* %71, null
  br i1 %72, label %73, label %74, !prof !3

73:                                               ; preds = %70
  tail call void @free(i8* %44) #12
  br label %82

74:                                               ; preds = %70
  %75 = ptrtoint i8* %44 to i64
  %76 = cmpxchg weak i64* bitcast (%struct.hb_atomic_ptr_t.1* @_ZL5langs to i64*), i64 %3, i64 %75 acq_rel monotonic
  %77 = extractvalue { i64, i1 } %76, 1
  br i1 %77, label %80, label %78, !prof !2

78:                                               ; preds = %74
  %79 = load i8*, i8** %52, align 8
  tail call void @free(i8* %79) #12
  tail call void @free(i8* %44) #12
  br label %2

80:                                               ; preds = %74
  %81 = bitcast i8* %44 to %struct.hb_language_item_t*
  br label %82

82:                                               ; preds = %43, %29, %80, %73
  %83 = phi %struct.hb_language_item_t* [ null, %73 ], [ %81, %80 ], [ %7, %29 ], [ null, %43 ]
  ret %struct.hb_language_item_t* %83
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @hb_language_to_string(%struct.hb_language_impl_t* readnone) local_unnamed_addr #7 {
  %2 = getelementptr inbounds %struct.hb_language_impl_t, %struct.hb_language_impl_t* %0, i64 0, i32 0, i64 0
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_language_impl_t* @hb_language_get_default() local_unnamed_addr #8 {
  %1 = load atomic i64, i64* bitcast (%struct.hb_atomic_ptr_t* @_ZZ23hb_language_get_defaultE16default_language to i64*) acquire, align 8
  %2 = inttoptr i64 %1 to %struct.hb_language_impl_t*
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %4, label %20, !prof !3

4:                                                ; preds = %0
  %5 = tail call i8* @setlocale(i32 0, i8* null) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = load i8, i8* %5, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = tail call fastcc %struct.hb_language_item_t* @_ZL19lang_find_or_insertPKc(i8* nonnull %5) #12
  %12 = icmp eq %struct.hb_language_item_t* %11, null
  br i1 %12, label %16, label %13, !prof !3

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.hb_language_item_t, %struct.hb_language_item_t* %11, i64 0, i32 1
  %15 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %14, align 8
  br label %16

16:                                               ; preds = %4, %7, %10, %13
  %17 = phi %struct.hb_language_impl_t* [ null, %7 ], [ null, %4 ], [ %15, %13 ], [ null, %10 ]
  %18 = ptrtoint %struct.hb_language_impl_t* %17 to i64
  %19 = cmpxchg weak i64* bitcast (%struct.hb_atomic_ptr_t* @_ZZ23hb_language_get_defaultE16default_language to i64*), i64 0, i64 %18 acq_rel monotonic
  br label %20

20:                                               ; preds = %16, %0
  %21 = phi %struct.hb_language_impl_t* [ %17, %16 ], [ %2, %0 ]
  ret %struct.hb_language_impl_t* %21
}

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @hb_script_from_iso15924_tag(i32) local_unnamed_addr #7 {
  %2 = icmp eq i32 %0, 0
  br i1 %2, label %22, label %3, !prof !3

3:                                                ; preds = %1
  %4 = and i32 %0, -538976289
  %5 = or i32 %4, 2105376
  switch i32 %5, label %18 [
    i32 1365336425, label %22
    i32 1365336419, label %6
    i32 1098015086, label %7
    i32 1132032627, label %8
    i32 1197829995, label %9
    i32 1214344819, label %10
    i32 1214344820, label %11
    i32 1247898991, label %12
    i32 1281455206, label %13
    i32 1281455207, label %14
    i32 1400468069, label %15
    i32 1400468074, label %16
    i32 1400468078, label %17
  ]

6:                                                ; preds = %3
  br label %22

7:                                                ; preds = %3
  br label %22

8:                                                ; preds = %3
  br label %22

9:                                                ; preds = %3
  br label %22

10:                                               ; preds = %3
  br label %22

11:                                               ; preds = %3
  br label %22

12:                                               ; preds = %3
  br label %22

13:                                               ; preds = %3
  br label %22

14:                                               ; preds = %3
  br label %22

15:                                               ; preds = %3
  br label %22

16:                                               ; preds = %3
  br label %22

17:                                               ; preds = %3
  br label %22

18:                                               ; preds = %3
  %19 = and i32 %5, -1059004192
  %20 = icmp eq i32 %19, 1080057952
  %21 = select i1 %20, i32 %5, i32 1517976186
  br label %22

22:                                               ; preds = %18, %3, %1, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6
  %23 = phi i32 [ 1400468067, %17 ], [ 1400468067, %16 ], [ 1400468067, %15 ], [ 1281455214, %14 ], [ 1281455214, %13 ], [ 1214344807, %12 ], [ 1214344809, %11 ], [ 1214344809, %10 ], [ 1197830002, %9 ], [ 1132032620, %8 ], [ 1098015074, %7 ], [ 1131376756, %6 ], [ 0, %1 ], [ 1516858984, %3 ], [ %21, %18 ]
  ret i32 %23
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @hb_script_from_string(i8* readonly, i32) local_unnamed_addr #4 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to [4 x i8]*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #12
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 1
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 2
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 3
  %9 = icmp ne i8* %0, null
  %10 = icmp ne i32 %1, 0
  %11 = and i1 %9, %10
  store i32 -1431655766, i32* %3, align 4
  br i1 %11, label %12, label %41

12:                                               ; preds = %2
  %13 = load i8, i8* %0, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %41, label %15

15:                                               ; preds = %12
  %16 = icmp ult i32 %1, 4
  %17 = select i1 %16, i32 %1, i32 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %15
  %20 = zext i32 %17 to i64
  br label %21

21:                                               ; preds = %19, %27
  %22 = phi i64 [ 0, %19 ], [ %25, %27 ]
  %23 = phi i8 [ %13, %19 ], [ %29, %27 ]
  %24 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 %22
  store i8 %23, i8* %24, align 1
  %25 = add nuw nsw i64 %22, 1
  %26 = icmp ult i64 %25, %20
  br i1 %26, label %27, label %31

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %0, i64 %25
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %21

31:                                               ; preds = %27, %21
  %32 = trunc i64 %25 to i32
  %33 = icmp ult i32 %32, 4
  br i1 %33, label %34, label %42

34:                                               ; preds = %31, %15
  %35 = phi i32 [ %32, %31 ], [ 0, %15 ]
  %36 = zext i32 %35 to i64
  %37 = getelementptr [4 x i8], [4 x i8]* %4, i64 0, i64 %36
  %38 = sub nuw nsw i32 3, %35
  %39 = zext i32 %38 to i64
  %40 = add nuw nsw i64 %39, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 32, i64 %40, i1 false) #12
  br label %42

41:                                               ; preds = %12, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  br label %77

42:                                               ; preds = %31, %34
  %43 = load i8, i8* %5, align 4
  %44 = zext i8 %43 to i32
  %45 = shl nuw i32 %44, 24
  %46 = load i8, i8* %6, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 16
  %49 = or i32 %48, %45
  %50 = load i8, i8* %7, align 2
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = or i32 %49, %52
  %54 = load i8, i8* %8, align 1
  %55 = zext i8 %54 to i32
  %56 = or i32 %53, %55
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %77, label %58, !prof !3

58:                                               ; preds = %42
  %59 = and i32 %56, -538976289
  %60 = or i32 %59, 2105376
  switch i32 %60, label %73 [
    i32 1365336425, label %77
    i32 1365336419, label %61
    i32 1098015086, label %62
    i32 1132032627, label %63
    i32 1197829995, label %64
    i32 1214344819, label %65
    i32 1214344820, label %66
    i32 1247898991, label %67
    i32 1281455206, label %68
    i32 1281455207, label %69
    i32 1400468069, label %70
    i32 1400468074, label %71
    i32 1400468078, label %72
  ]

61:                                               ; preds = %58
  br label %77

62:                                               ; preds = %58
  br label %77

63:                                               ; preds = %58
  br label %77

64:                                               ; preds = %58
  br label %77

65:                                               ; preds = %58
  br label %77

66:                                               ; preds = %58
  br label %77

67:                                               ; preds = %58
  br label %77

68:                                               ; preds = %58
  br label %77

69:                                               ; preds = %58
  br label %77

70:                                               ; preds = %58
  br label %77

71:                                               ; preds = %58
  br label %77

72:                                               ; preds = %58
  br label %77

73:                                               ; preds = %58
  %74 = and i32 %60, -1059004192
  %75 = icmp eq i32 %74, 1080057952
  %76 = select i1 %75, i32 %60, i32 1517976186
  br label %77

77:                                               ; preds = %41, %42, %58, %61, %62, %63, %64, %65, %66, %67, %68, %69, %70, %71, %72, %73
  %78 = phi i32 [ 1400468067, %72 ], [ 1400468067, %71 ], [ 1400468067, %70 ], [ 1281455214, %69 ], [ 1281455214, %68 ], [ 1214344807, %67 ], [ 1214344809, %66 ], [ 1214344809, %65 ], [ 1197830002, %64 ], [ 1132032620, %63 ], [ 1098015074, %62 ], [ 1131376756, %61 ], [ 0, %42 ], [ 1516858984, %58 ], [ %76, %73 ], [ 0, %41 ]
  ret i32 %78
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @hb_script_to_iso15924_tag(i32 returned) local_unnamed_addr #7 {
  ret i32 %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @hb_script_get_horizontal_direction(i32) local_unnamed_addr #7 {
  switch i32 %0, label %3 [
    i32 1098015074, label %4
    i32 1214603890, label %4
    i32 1400468067, label %4
    i32 1416126817, label %4
    i32 1131442804, label %4
    i32 1265131890, label %4
    i32 1349021304, label %4
    i32 1315663727, label %4
    i32 1283023977, label %4
    i32 1098281844, label %4
    i32 1098018153, label %4
    i32 1349020777, label %4
    i32 1349678185, label %4
    i32 1398895202, label %4
    i32 1332898664, label %4
    i32 1398893938, label %4
    i32 1298230884, label %4
    i32 1298494051, label %4
    i32 1298494063, label %4
    i32 1298230889, label %4
    i32 1298493028, label %4
    i32 1315070324, label %4
    i32 1315009122, label %4
    i32 1348562029, label %4
    i32 1349020784, label %4
    i32 1214346354, label %4
    i32 1097100397, label %4
    i32 1383032935, label %4
    i32 1399809903, label %4
    i32 1399809892, label %4
    i32 1164736877, label %4
    i32 1130918515, label %4
    i32 1499822697, label %4
    i32 1215655527, label %2
    i32 1232363884, label %2
    i32 1383427698, label %2
  ]

2:                                                ; preds = %1, %1, %1
  br label %4

3:                                                ; preds = %1
  br label %4

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %3, %2
  %5 = phi i32 [ 4, %3 ], [ 0, %2 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ], [ 5, %1 ]
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @hb_version(i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #5 {
  store i32 2, i32* %0, align 4
  store i32 8, i32* %1, align 4
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @hb_version_string() local_unnamed_addr #7 {
  ret i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @hb_version_atleast(i32, i32, i32) local_unnamed_addr #7 {
  %4 = mul i32 %0, 10000
  %5 = mul i32 %1, 100
  %6 = add i32 %5, %4
  %7 = add i32 %6, %2
  %8 = icmp ult i32 %7, 20802
  %9 = zext i1 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_feature_from_string(i8*, i32, %struct.hb_feature_t*) local_unnamed_addr #8 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.hb_feature_t, align 4
  store i8* %0, i8** %7, align 8
  %9 = bitcast %struct.hb_feature_t* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %8, i64 0, i32 0
  %11 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %8, i64 0, i32 1
  %12 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %8, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %8, i64 0, i32 3
  %14 = icmp slt i32 %1, 0
  %15 = bitcast %struct.hb_feature_t* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -86, i64 16, i1 false)
  br i1 %14, label %16, label %19

16:                                               ; preds = %3
  %17 = tail call i64 @strlen(i8* %0) #13
  %18 = trunc i64 %17 to i32
  br label %19

19:                                               ; preds = %16, %3
  %20 = phi i32 [ %18, %16 ], [ %1, %3 ]
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %0, i64 %21
  %23 = icmp sgt i32 %20, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %19, %27
  %25 = phi i8* [ %28, %27 ], [ %0, %19 ]
  %26 = load i8, i8* %25, align 1
  switch i8 %26, label %30 [
    i8 32, label %27
    i8 12, label %27
    i8 10, label %27
    i8 13, label %27
    i8 9, label %27
    i8 11, label %27
  ]

27:                                               ; preds = %24, %24, %24, %24, %24, %24
  %28 = getelementptr inbounds i8, i8* %25, i64 1
  store i8* %28, i8** %7, align 8
  %29 = icmp eq i8* %28, %22
  br i1 %29, label %56, label %24

30:                                               ; preds = %24, %19
  %31 = phi i8* [ %0, %19 ], [ %25, %24 ]
  %32 = icmp eq i8* %31, %22
  br i1 %32, label %56, label %33

33:                                               ; preds = %30
  %34 = load i8, i8* %31, align 1
  %35 = icmp eq i8 %34, 45
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %31, i64 1
  store i8* %37, i8** %7, align 8
  br label %56

38:                                               ; preds = %33
  %39 = icmp ult i8* %31, %22
  br i1 %39, label %42, label %48

40:                                               ; preds = %45
  %41 = load i8, i8* %46, align 1
  br label %42

42:                                               ; preds = %38, %40
  %43 = phi i8 [ %41, %40 ], [ %34, %38 ]
  %44 = phi i8* [ %46, %40 ], [ %31, %38 ]
  switch i8 %43, label %48 [
    i8 32, label %45
    i8 12, label %45
    i8 10, label %45
    i8 13, label %45
    i8 9, label %45
    i8 11, label %45
  ]

45:                                               ; preds = %42, %42, %42, %42, %42, %42
  %46 = getelementptr inbounds i8, i8* %44, i64 1
  store i8* %46, i8** %7, align 8
  %47 = icmp eq i8* %46, %22
  br i1 %47, label %56, label %40

48:                                               ; preds = %42, %38
  %49 = phi i8 [ %34, %38 ], [ %43, %42 ]
  %50 = phi i8* [ %31, %38 ], [ %44, %42 ]
  %51 = icmp ne i8* %50, %22
  %52 = icmp eq i8 %49, 43
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = getelementptr inbounds i8, i8* %50, i64 1
  store i8* %55, i8** %7, align 8
  br label %56

56:                                               ; preds = %27, %45, %30, %48, %54, %36
  %57 = phi i32 [ 0, %36 ], [ 1, %54 ], [ 1, %48 ], [ 1, %30 ], [ 1, %45 ], [ 1, %27 ]
  store i32 %57, i32* %11, align 4
  %58 = call fastcc zeroext i1 @_ZL9parse_tagPPKcS0_Pj(i8** nonnull %7, i8* %22, i32* nonnull %10) #12
  br i1 %58, label %59, label %276, !prof !4

59:                                               ; preds = %56
  %60 = load i8*, i8** %7, align 8
  %61 = icmp ult i8* %60, %22
  br i1 %61, label %62, label %69

62:                                               ; preds = %59, %65
  %63 = phi i8* [ %66, %65 ], [ %60, %59 ]
  %64 = load i8, i8* %63, align 1
  switch i8 %64, label %69 [
    i8 32, label %65
    i8 12, label %65
    i8 10, label %65
    i8 13, label %65
    i8 9, label %65
    i8 11, label %65
  ]

65:                                               ; preds = %62, %62, %62, %62, %62, %62
  %66 = getelementptr inbounds i8, i8* %63, i64 1
  store i8* %66, i8** %7, align 8
  %67 = icmp eq i8* %66, %22
  br i1 %67, label %68, label %62

68:                                               ; preds = %65
  store i32 0, i32* %12, align 4
  store i32 -1, i32* %13, align 4
  br label %170

69:                                               ; preds = %62, %59
  %70 = phi i8* [ %60, %59 ], [ %63, %62 ]
  store i32 0, i32* %12, align 4
  store i32 -1, i32* %13, align 4
  %71 = icmp ult i8* %70, %22
  br i1 %71, label %72, label %78

72:                                               ; preds = %69, %75
  %73 = phi i8* [ %76, %75 ], [ %70, %69 ]
  %74 = load i8, i8* %73, align 1
  switch i8 %74, label %78 [
    i8 32, label %75
    i8 12, label %75
    i8 10, label %75
    i8 13, label %75
    i8 9, label %75
    i8 11, label %75
  ]

75:                                               ; preds = %72, %72, %72, %72, %72, %72
  %76 = getelementptr inbounds i8, i8* %73, i64 1
  store i8* %76, i8** %7, align 8
  %77 = icmp eq i8* %76, %22
  br i1 %77, label %170, label %72

78:                                               ; preds = %72, %69
  %79 = phi i8* [ %70, %69 ], [ %73, %72 ]
  %80 = icmp eq i8* %79, %22
  br i1 %80, label %170, label %81

81:                                               ; preds = %78
  %82 = load i8, i8* %79, align 1
  %83 = icmp eq i8 %82, 91
  br i1 %83, label %84, label %153

84:                                               ; preds = %81
  %85 = getelementptr inbounds i8, i8* %79, i64 1
  store i8* %85, i8** %7, align 8
  %86 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #12
  store i32 -1431655766, i32* %4, align 4
  %87 = call zeroext i1 @_Z12hb_parse_intPPKcS0_Pib(i8** nonnull %7, i8* %22, i32* nonnull %4, i1 zeroext false) #12
  br i1 %87, label %88, label %90, !prof !2

88:                                               ; preds = %84
  %89 = load i32, i32* %4, align 4
  store i32 %89, i32* %12, align 4
  br label %90

90:                                               ; preds = %88, %84
  %91 = phi i32 [ %89, %88 ], [ 0, %84 ]
  %92 = phi i1 [ true, %88 ], [ false, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #12
  %93 = load i8*, i8** %7, align 8
  %94 = icmp ult i8* %93, %22
  br i1 %94, label %95, label %101

95:                                               ; preds = %90, %98
  %96 = phi i8* [ %99, %98 ], [ %93, %90 ]
  %97 = load i8, i8* %96, align 1
  switch i8 %97, label %101 [
    i8 32, label %98
    i8 12, label %98
    i8 10, label %98
    i8 13, label %98
    i8 9, label %98
    i8 11, label %98
  ]

98:                                               ; preds = %95, %95, %95, %95, %95, %95
  %99 = getelementptr inbounds i8, i8* %96, i64 1
  store i8* %99, i8** %7, align 8
  %100 = icmp eq i8* %99, %22
  br i1 %100, label %132, label %95

101:                                              ; preds = %95, %90
  %102 = phi i8* [ %93, %90 ], [ %96, %95 ]
  %103 = icmp eq i8* %102, %22
  br i1 %103, label %132, label %104

104:                                              ; preds = %101
  %105 = load i8, i8* %102, align 1
  %106 = icmp eq i8 %105, 58
  br i1 %106, label %123, label %107

107:                                              ; preds = %104
  %108 = icmp ult i8* %102, %22
  br i1 %108, label %111, label %117

109:                                              ; preds = %114
  %110 = load i8, i8* %115, align 1
  br label %111

111:                                              ; preds = %107, %109
  %112 = phi i8 [ %110, %109 ], [ %105, %107 ]
  %113 = phi i8* [ %115, %109 ], [ %102, %107 ]
  switch i8 %112, label %117 [
    i8 32, label %114
    i8 12, label %114
    i8 10, label %114
    i8 13, label %114
    i8 9, label %114
    i8 11, label %114
  ]

114:                                              ; preds = %111, %111, %111, %111, %111, %111
  %115 = getelementptr inbounds i8, i8* %113, i64 1
  store i8* %115, i8** %7, align 8
  %116 = icmp eq i8* %115, %22
  br i1 %116, label %132, label %109

117:                                              ; preds = %111, %107
  %118 = phi i8 [ %105, %107 ], [ %112, %111 ]
  %119 = phi i8* [ %102, %107 ], [ %113, %111 ]
  %120 = icmp ne i8* %119, %22
  %121 = icmp eq i8 %118, 59
  %122 = and i1 %121, %120
  br i1 %122, label %123, label %132

123:                                              ; preds = %117, %104
  %124 = phi i8* [ %102, %104 ], [ %119, %117 ]
  %125 = getelementptr inbounds i8, i8* %124, i64 1
  store i8* %125, i8** %7, align 8
  %126 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #12
  store i32 -1431655766, i32* %5, align 4
  %127 = call zeroext i1 @_Z12hb_parse_intPPKcS0_Pib(i8** nonnull %7, i8* %22, i32* nonnull %5, i1 zeroext false) #12
  br i1 %127, label %128, label %130, !prof !2

128:                                              ; preds = %123
  %129 = load i32, i32* %5, align 4
  store i32 %129, i32* %13, align 4
  br label %130

130:                                              ; preds = %128, %123
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #12
  %131 = load i8*, i8** %7, align 8
  br label %136

132:                                              ; preds = %98, %114, %117, %101
  %133 = phi i8* [ %119, %117 ], [ %22, %101 ], [ %22, %114 ], [ %22, %98 ]
  br i1 %92, label %134, label %136

134:                                              ; preds = %132
  %135 = add i32 %91, 1
  store i32 %135, i32* %13, align 4
  br label %136

136:                                              ; preds = %134, %132, %130
  %137 = phi i8* [ %133, %134 ], [ %133, %132 ], [ %131, %130 ]
  %138 = icmp ult i8* %137, %22
  br i1 %138, label %139, label %145

139:                                              ; preds = %136, %142
  %140 = phi i8* [ %143, %142 ], [ %137, %136 ]
  %141 = load i8, i8* %140, align 1
  switch i8 %141, label %145 [
    i8 32, label %142
    i8 12, label %142
    i8 10, label %142
    i8 13, label %142
    i8 9, label %142
    i8 11, label %142
  ]

142:                                              ; preds = %139, %139, %139, %139, %139, %139
  %143 = getelementptr inbounds i8, i8* %140, i64 1
  store i8* %143, i8** %7, align 8
  %144 = icmp eq i8* %143, %22
  br i1 %144, label %276, label %139, !prof !5

145:                                              ; preds = %139, %136
  %146 = phi i8* [ %137, %136 ], [ %140, %139 ]
  %147 = icmp eq i8* %146, %22
  br i1 %147, label %276, label %148, !prof !5

148:                                              ; preds = %145
  %149 = load i8, i8* %146, align 1
  %150 = icmp eq i8 %149, 93
  br i1 %150, label %151, label %276, !prof !4

151:                                              ; preds = %148
  %152 = getelementptr inbounds i8, i8* %146, i64 1
  store i8* %152, i8** %7, align 8
  br label %153

153:                                              ; preds = %151, %81
  %154 = phi i8* [ %152, %151 ], [ %79, %81 ]
  %155 = icmp ult i8* %154, %22
  br i1 %155, label %156, label %162

156:                                              ; preds = %153, %159
  %157 = phi i8* [ %160, %159 ], [ %154, %153 ]
  %158 = load i8, i8* %157, align 1
  switch i8 %158, label %162 [
    i8 32, label %159
    i8 12, label %159
    i8 10, label %159
    i8 13, label %159
    i8 9, label %159
    i8 11, label %159
  ]

159:                                              ; preds = %156, %156, %156, %156, %156, %156
  %160 = getelementptr inbounds i8, i8* %157, i64 1
  store i8* %160, i8** %7, align 8
  %161 = icmp eq i8* %160, %22
  br i1 %161, label %170, label %156

162:                                              ; preds = %156, %153
  %163 = phi i8* [ %154, %153 ], [ %157, %156 ]
  %164 = icmp eq i8* %163, %22
  br i1 %164, label %170, label %165

165:                                              ; preds = %162
  %166 = load i8, i8* %163, align 1
  %167 = icmp eq i8 %166, 61
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = getelementptr inbounds i8, i8* %163, i64 1
  store i8* %169, i8** %7, align 8
  br label %170

170:                                              ; preds = %75, %159, %68, %168, %165, %162, %78
  %171 = phi i1 [ false, %168 ], [ true, %165 ], [ true, %162 ], [ true, %78 ], [ true, %68 ], [ true, %159 ], [ true, %75 ]
  %172 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #12
  store i32 -1431655766, i32* %6, align 4
  %173 = call zeroext i1 @_Z12hb_parse_intPPKcS0_Pib(i8** nonnull %7, i8* %22, i32* nonnull %6, i1 zeroext false) #12
  br i1 %173, label %174, label %177, !prof !2

174:                                              ; preds = %170
  %175 = load i32, i32* %6, align 4
  store i32 %175, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #12
  %176 = load i8*, i8** %7, align 8
  br label %265

177:                                              ; preds = %170
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #12
  %178 = load i8*, i8** %7, align 8
  %179 = icmp ult i8* %178, %22
  %180 = ptrtoint i8* %178 to i64
  br i1 %179, label %181, label %189

181:                                              ; preds = %177, %185
  %182 = phi i64 [ %188, %185 ], [ %180, %177 ]
  %183 = phi i8* [ %186, %185 ], [ %178, %177 ]
  %184 = load i8, i8* %183, align 1
  switch i8 %184, label %189 [
    i8 32, label %185
    i8 12, label %185
    i8 10, label %185
    i8 13, label %185
    i8 9, label %185
    i8 11, label %185
  ]

185:                                              ; preds = %181, %181, %181, %181, %181, %181
  %186 = getelementptr inbounds i8, i8* %183, i64 1
  store i8* %186, i8** %7, align 8
  %187 = icmp eq i8* %186, %22
  %188 = ptrtoint i8* %186 to i64
  br i1 %187, label %209, label %181

189:                                              ; preds = %181, %177
  %190 = phi i64 [ %180, %177 ], [ %182, %181 ]
  %191 = phi i8* [ %178, %177 ], [ %183, %181 ]
  %192 = icmp ult i8* %191, %22
  br i1 %192, label %193, label %213

193:                                              ; preds = %189
  %194 = load i8, i8* %191, align 1
  %195 = and i8 %194, -33
  %196 = add i8 %195, -65
  %197 = icmp ult i8 %196, 26
  br i1 %197, label %203, label %213

198:                                              ; preds = %203
  %199 = load i8, i8* %205, align 1
  %200 = and i8 %199, -33
  %201 = add i8 %200, -65
  %202 = icmp ult i8 %201, 26
  br i1 %202, label %203, label %211

203:                                              ; preds = %193, %198
  %204 = phi i8* [ %205, %198 ], [ %191, %193 ]
  %205 = getelementptr inbounds i8, i8* %204, i64 1
  store i8* %205, i8** %7, align 8
  %206 = icmp eq i8* %205, %22
  br i1 %206, label %207, label %198

207:                                              ; preds = %203
  %208 = ptrtoint i8* %22 to i64
  br label %213

209:                                              ; preds = %185
  %210 = ptrtoint i8* %22 to i64
  br label %213

211:                                              ; preds = %198
  %212 = ptrtoint i8* %205 to i64
  br label %213

213:                                              ; preds = %211, %209, %207, %193, %189
  %214 = phi i8* [ %191, %189 ], [ %22, %209 ], [ %22, %207 ], [ %191, %193 ], [ %205, %211 ]
  %215 = phi i8* [ %191, %189 ], [ %22, %209 ], [ %191, %207 ], [ %191, %193 ], [ %191, %211 ]
  %216 = phi i64 [ %190, %189 ], [ %210, %209 ], [ %208, %207 ], [ %190, %193 ], [ %212, %211 ]
  %217 = ptrtoint i8* %214 to i64
  %218 = ptrtoint i8* %215 to i64
  %219 = sub i64 %217, %218
  %220 = icmp eq i64 %219, 2
  br i1 %220, label %221, label %236

221:                                              ; preds = %213
  %222 = load i8, i8* %215, align 1
  %223 = add i8 %222, -65
  %224 = icmp ult i8 %223, 26
  %225 = add i8 %222, 32
  %226 = select i1 %224, i8 %225, i8 %222
  %227 = icmp eq i8 %226, 111
  br i1 %227, label %228, label %236

228:                                              ; preds = %221
  %229 = getelementptr inbounds i8, i8* %215, i64 1
  %230 = load i8, i8* %229, align 1
  %231 = add i8 %230, -65
  %232 = icmp ult i8 %231, 26
  %233 = add i8 %230, 32
  %234 = select i1 %232, i8 %233, i8 %230
  %235 = icmp eq i8 %234, 110
  br i1 %235, label %262, label %236

236:                                              ; preds = %228, %221, %213
  %237 = sub i64 %216, %218
  %238 = icmp eq i64 %237, 3
  br i1 %238, label %239, label %264

239:                                              ; preds = %236
  %240 = load i8, i8* %215, align 1
  %241 = add i8 %240, -65
  %242 = icmp ult i8 %241, 26
  %243 = add i8 %240, 32
  %244 = select i1 %242, i8 %243, i8 %240
  %245 = icmp eq i8 %244, 111
  br i1 %245, label %246, label %264

246:                                              ; preds = %239
  %247 = getelementptr inbounds i8, i8* %215, i64 1
  %248 = load i8, i8* %247, align 1
  %249 = add i8 %248, -65
  %250 = icmp ult i8 %249, 26
  %251 = add i8 %248, 32
  %252 = select i1 %250, i8 %251, i8 %248
  %253 = icmp eq i8 %252, 102
  br i1 %253, label %254, label %264

254:                                              ; preds = %246
  %255 = getelementptr inbounds i8, i8* %215, i64 2
  %256 = load i8, i8* %255, align 1
  %257 = add i8 %256, -65
  %258 = icmp ult i8 %257, 26
  %259 = add i8 %256, 32
  %260 = select i1 %258, i8 %259, i8 %256
  %261 = icmp eq i8 %260, 102
  br i1 %261, label %262, label %264

262:                                              ; preds = %254, %228
  %263 = phi i32 [ 1, %228 ], [ 0, %254 ]
  store i32 %263, i32* %11, align 4
  br label %265

264:                                              ; preds = %254, %246, %239, %236
  br i1 %171, label %265, label %276, !prof !4

265:                                              ; preds = %264, %262, %174
  %266 = phi i8* [ %214, %264 ], [ %214, %262 ], [ %176, %174 ]
  %267 = icmp ult i8* %266, %22
  br i1 %267, label %268, label %278

268:                                              ; preds = %265, %271
  %269 = phi i8* [ %272, %271 ], [ %266, %265 ]
  %270 = load i8, i8* %269, align 1
  switch i8 %270, label %278 [
    i8 32, label %271
    i8 12, label %271
    i8 10, label %271
    i8 13, label %271
    i8 9, label %271
    i8 11, label %271
  ]

271:                                              ; preds = %268, %268, %268, %268, %268, %268
  %272 = getelementptr inbounds i8, i8* %269, i64 1
  store i8* %272, i8** %7, align 8
  %273 = icmp eq i8* %272, %22
  br i1 %273, label %274, label %268

274:                                              ; preds = %271
  %275 = icmp eq %struct.hb_feature_t* %2, null
  br i1 %275, label %288, label %283

276:                                              ; preds = %142, %264, %56, %145, %148
  %277 = icmp eq %struct.hb_feature_t* %2, null
  br i1 %277, label %288, label %286

278:                                              ; preds = %268, %265
  %279 = phi i8* [ %266, %265 ], [ %269, %268 ]
  %280 = icmp eq i8* %279, %22
  %281 = icmp ne %struct.hb_feature_t* %2, null
  br i1 %280, label %282, label %285, !prof !2

282:                                              ; preds = %278
  br i1 %281, label %283, label %288

283:                                              ; preds = %274, %282
  %284 = bitcast %struct.hb_feature_t* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %284, i8* nonnull align 4 %9, i64 16, i1 false)
  br label %288

285:                                              ; preds = %278
  br i1 %281, label %286, label %288

286:                                              ; preds = %276, %285
  %287 = bitcast %struct.hb_feature_t* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %287, i8 0, i64 16, i1 false)
  br label %288

288:                                              ; preds = %274, %276, %285, %286, %282, %283
  %289 = phi i32 [ 1, %283 ], [ 1, %282 ], [ 0, %286 ], [ 0, %285 ], [ 1, %274 ], [ 0, %276 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %289
}

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_feature_to_string(%struct.hb_feature_t* nocapture readonly, i8* nocapture, i32) local_unnamed_addr #8 {
  %4 = alloca [128 x i8], align 16
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %114, label %6, !prof !3

6:                                                ; preds = %3
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 128, i1 false)
  %8 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  store i8 45, i8* %7, align 16
  br label %12

12:                                               ; preds = %11, %6
  %13 = phi i32 [ 1, %11 ], [ 0, %6 ]
  %14 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %16
  %18 = lshr i32 %15, 24
  %19 = trunc i32 %18 to i8
  store i8 %19, i8* %17, align 1
  %20 = lshr i32 %15, 16
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %15, 8
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds i8, i8* %17, i64 2
  store i8 %24, i8* %25, align 1
  %26 = trunc i32 %15 to i8
  %27 = getelementptr inbounds i8, i8* %17, i64 3
  store i8 %26, i8* %27, align 1
  %28 = or i32 %13, 4
  %29 = zext i32 %28 to i64
  %30 = add nuw nsw i64 %29, 7
  %31 = and i64 %30, 7
  %32 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 32
  %35 = add nsw i64 %29, -1
  br i1 %34, label %115, label %36

36:                                               ; preds = %141, %139, %133, %131, %124, %117, %115, %12
  %37 = phi i64 [ %29, %12 ], [ %35, %115 ], [ %35, %117 ], [ %123, %124 ], [ %130, %131 ], [ %130, %133 ], [ %138, %139 ], [ %148, %141 ]
  %38 = trunc i64 %37 to i32
  %39 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %0, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %50

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %0, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %91, label %46

46:                                               ; preds = %42
  %47 = add i32 %38, 1
  %48 = and i64 %37, 4294967295
  %49 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %48
  store i8 91, i8* %49, align 1
  br label %66

50:                                               ; preds = %36
  %51 = add i32 %38, 1
  %52 = and i64 %37, 4294967295
  %53 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %52
  store i8 91, i8* %53, align 1
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %54
  %56 = sub i64 127, %37
  %57 = and i64 %56, 4294967295
  %58 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %55, i64 %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 %40) #12
  %59 = icmp sgt i32 %58, 0
  %60 = select i1 %59, i32 %58, i32 0
  %61 = add i32 %60, %51
  %62 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %0, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = load i32, i32* %39, align 4
  %65 = add i32 %64, 1
  br label %66

66:                                               ; preds = %46, %50
  %67 = phi i32 [ %65, %50 ], [ 1, %46 ]
  %68 = phi i32 [ %63, %50 ], [ %44, %46 ]
  %69 = phi i32 [ %61, %50 ], [ %47, %46 ]
  %70 = icmp eq i32 %68, %67
  br i1 %70, label %85, label %71

71:                                               ; preds = %66
  %72 = add i32 %69, 1
  %73 = zext i32 %69 to i64
  %74 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %73
  store i8 58, i8* %74, align 1
  %75 = icmp eq i32 %68, -1
  br i1 %75, label %85, label %76

76:                                               ; preds = %71
  %77 = zext i32 %72 to i64
  %78 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %77
  %79 = sub i32 127, %69
  %80 = zext i32 %79 to i64
  %81 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %78, i64 %80, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 %68) #12
  %82 = icmp sgt i32 %81, 0
  %83 = select i1 %82, i32 %81, i32 0
  %84 = add i32 %83, %72
  br label %85

85:                                               ; preds = %71, %66, %76
  %86 = phi i32 [ %69, %66 ], [ %72, %71 ], [ %84, %76 ]
  %87 = add i32 %86, 1
  %88 = zext i32 %86 to i64
  %89 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %88
  store i8 93, i8* %89, align 1
  %90 = load i32, i32* %8, align 4
  br label %91

91:                                               ; preds = %42, %85
  %92 = phi i32 [ %9, %42 ], [ %90, %85 ]
  %93 = phi i32 [ %38, %42 ], [ %87, %85 ]
  %94 = icmp ugt i32 %92, 1
  br i1 %94, label %95, label %107

95:                                               ; preds = %91
  %96 = add i32 %93, 1
  %97 = zext i32 %93 to i64
  %98 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %97
  store i8 61, i8* %98, align 1
  %99 = zext i32 %96 to i64
  %100 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %99
  %101 = sub i32 127, %93
  %102 = zext i32 %101 to i64
  %103 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %100, i64 %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 %92) #12
  %104 = icmp sgt i32 %103, 0
  %105 = select i1 %104, i32 %103, i32 0
  %106 = add i32 %105, %96
  br label %107

107:                                              ; preds = %95, %91
  %108 = phi i32 [ %106, %95 ], [ %93, %91 ]
  %109 = add i32 %2, -1
  %110 = icmp ugt i32 %108, %109
  %111 = select i1 %110, i32 %109, i32 %108
  %112 = zext i32 %111 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 16 %7, i64 %112, i1 false)
  %113 = getelementptr inbounds i8, i8* %1, i64 %112
  store i8 0, i8* %113, align 1
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #12
  br label %114

114:                                              ; preds = %3, %107
  ret void

115:                                              ; preds = %12
  %116 = icmp eq i64 %35, 0
  br i1 %116, label %36, label %117

117:                                              ; preds = %115
  %118 = and i64 %29, 1
  %119 = or i64 %118, 2
  %120 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = icmp eq i8 %121, 32
  %123 = add nsw i64 %29, -2
  br i1 %122, label %124, label %36

124:                                              ; preds = %117
  %125 = add nuw nsw i64 %29, 1
  %126 = and i64 %125, 3
  %127 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = icmp eq i8 %128, 32
  %130 = add nsw i64 %29, -3
  br i1 %129, label %131, label %36

131:                                              ; preds = %124
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %36, label %133

133:                                              ; preds = %131
  %134 = and i64 %29, 1
  %135 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 32
  %138 = add nsw i64 %29, -4
  br i1 %137, label %139, label %36

139:                                              ; preds = %133
  %140 = icmp eq i64 %138, 0
  br i1 %140, label %36, label %141

141:                                              ; preds = %139
  %142 = add nuw nsw i64 %29, 4294967291
  %143 = and i64 %142, 4294967295
  %144 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 32
  %147 = add nsw i64 %29, -5
  %148 = select i1 %146, i64 %147, i64 %138
  br label %36
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_variation_from_string(i8*, i32, %struct.hb_variation_t*) local_unnamed_addr #8 {
  %4 = alloca double, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.hb_variation_t*
  store i8* %0, i8** %5, align 8
  %8 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = bitcast i64* %6 to i32*
  store i32 -1431655766, i32* %9, align 8
  %10 = getelementptr inbounds %struct.hb_variation_t, %struct.hb_variation_t* %7, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %11 = icmp slt i32 %1, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* %0) #13
  %14 = trunc i64 %13 to i32
  br label %15

15:                                               ; preds = %12, %3
  %16 = phi i32 [ %14, %12 ], [ %1, %3 ]
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = call fastcc zeroext i1 @_ZL9parse_tagPPKcS0_Pj(i8** nonnull %5, i8* %18, i32* nonnull %9) #12
  br i1 %19, label %20, label %54, !prof !4

20:                                               ; preds = %15
  %21 = load i8*, i8** %5, align 8
  %22 = icmp ult i8* %21, %18
  br i1 %22, label %23, label %29

23:                                               ; preds = %20, %26
  %24 = phi i8* [ %27, %26 ], [ %21, %20 ]
  %25 = load i8, i8* %24, align 1
  switch i8 %25, label %29 [
    i8 32, label %26
    i8 12, label %26
    i8 10, label %26
    i8 13, label %26
    i8 9, label %26
    i8 11, label %26
  ]

26:                                               ; preds = %23, %23, %23, %23, %23, %23
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  store i8* %27, i8** %5, align 8
  %28 = icmp eq i8* %27, %18
  br i1 %28, label %37, label %23

29:                                               ; preds = %23, %20
  %30 = phi i8* [ %21, %20 ], [ %24, %23 ]
  %31 = icmp eq i8* %30, %18
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = load i8, i8* %30, align 1
  %34 = icmp eq i8 %33, 61
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %36, i8** %5, align 8
  br label %37

37:                                               ; preds = %26, %35, %32, %29
  %38 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %39 = call zeroext i1 @_Z15hb_parse_doublePPKcS0_Pdb(i8** nonnull %5, i8* %18, double* nonnull %4, i1 zeroext false) #12
  br i1 %39, label %41, label %40, !prof !2

40:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  br label %54

41:                                               ; preds = %37
  %42 = load double, double* %4, align 8
  %43 = fptrunc double %42 to float
  store float %43, float* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  %44 = load i8*, i8** %5, align 8
  %45 = icmp ult i8* %44, %18
  br i1 %45, label %46, label %56

46:                                               ; preds = %41, %49
  %47 = phi i8* [ %50, %49 ], [ %44, %41 ]
  %48 = load i8, i8* %47, align 1
  switch i8 %48, label %56 [
    i8 32, label %49
    i8 12, label %49
    i8 10, label %49
    i8 13, label %49
    i8 9, label %49
    i8 11, label %49
  ]

49:                                               ; preds = %46, %46, %46, %46, %46, %46
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  store i8* %50, i8** %5, align 8
  %51 = icmp eq i8* %50, %18
  br i1 %51, label %52, label %46

52:                                               ; preds = %49
  %53 = icmp eq %struct.hb_variation_t* %2, null
  br i1 %53, label %67, label %61

54:                                               ; preds = %40, %15
  %55 = icmp eq %struct.hb_variation_t* %2, null
  br i1 %55, label %67, label %65

56:                                               ; preds = %46, %41
  %57 = phi i8* [ %44, %41 ], [ %47, %46 ]
  %58 = icmp eq i8* %57, %18
  %59 = icmp ne %struct.hb_variation_t* %2, null
  br i1 %58, label %60, label %64, !prof !2

60:                                               ; preds = %56
  br i1 %59, label %61, label %67

61:                                               ; preds = %52, %60
  %62 = bitcast %struct.hb_variation_t* %2 to i64*
  %63 = load i64, i64* %6, align 8
  store i64 %63, i64* %62, align 4
  br label %67

64:                                               ; preds = %56
  br i1 %59, label %65, label %67

65:                                               ; preds = %54, %64
  %66 = bitcast %struct.hb_variation_t* %2 to i64*
  store i64 0, i64* %66, align 4
  br label %67

67:                                               ; preds = %52, %54, %64, %65, %60, %61
  %68 = phi i32 [ 1, %61 ], [ 1, %60 ], [ 0, %65 ], [ 0, %64 ], [ 1, %52 ], [ 0, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_variation_to_string(%struct.hb_variation_t* nocapture readonly, i8* nocapture, i32) local_unnamed_addr #8 {
  %4 = alloca [128 x i8], align 16
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %44, label %6, !prof !3

6:                                                ; preds = %3
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 128, i1 false)
  %8 = getelementptr inbounds %struct.hb_variation_t, %struct.hb_variation_t* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = lshr i32 %9, 24
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* %7, align 16
  %12 = lshr i32 %9, 16
  %13 = trunc i32 %12 to i8
  %14 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 1
  store i8 %13, i8* %14, align 1
  %15 = lshr i32 %9, 8
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 2
  store i8 %16, i8* %17, align 2
  %18 = trunc i32 %9 to i8
  %19 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 3
  store i8 %18, i8* %19, align 1
  %20 = icmp eq i8 %18, 32
  br i1 %20, label %21, label %23

21:                                               ; preds = %6
  %22 = icmp eq i8 %16, 32
  br i1 %22, label %45, label %23

23:                                               ; preds = %47, %45, %21, %6
  %24 = phi i32 [ 4, %6 ], [ 3, %21 ], [ 2, %45 ], [ %49, %47 ]
  %25 = add nuw nsw i32 %24, 1
  %26 = zext i32 %24 to i64
  %27 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %26
  store i8 61, i8* %27, align 1
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %28
  %30 = xor i32 %24, 127
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %struct.hb_variation_t, %struct.hb_variation_t* %0, i64 0, i32 1
  %33 = load float, float* %32, align 4
  %34 = fpext float %33 to double
  %35 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %29, i64 %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), double %34) #12
  %36 = icmp sgt i32 %35, 0
  %37 = select i1 %36, i32 %35, i32 0
  %38 = add nuw i32 %37, %25
  %39 = add i32 %2, -1
  %40 = icmp ugt i32 %38, %39
  %41 = select i1 %40, i32 %39, i32 %38
  %42 = zext i32 %41 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 16 %7, i64 %42, i1 false)
  %43 = getelementptr inbounds i8, i8* %1, i64 %42
  store i8 0, i8* %43, align 1
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #12
  br label %44

44:                                               ; preds = %3, %23
  ret void

45:                                               ; preds = %21
  %46 = icmp eq i8 %13, 32
  br i1 %46, label %47, label %23

47:                                               ; preds = %45
  %48 = icmp ne i8 %11, 32
  %49 = zext i1 %48 to i32
  br label %23
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @hb_color_get_alpha(i32) local_unnamed_addr #7 {
  %2 = trunc i32 %0 to i8
  ret i8 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @hb_color_get_red(i32) local_unnamed_addr #7 {
  %2 = lshr i32 %0, 8
  %3 = trunc i32 %2 to i8
  ret i8 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @hb_color_get_green(i32) local_unnamed_addr #7 {
  %2 = lshr i32 %0, 16
  %3 = trunc i32 %2 to i8
  ret i8 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @hb_color_get_blue(i32) local_unnamed_addr #7 {
  %2 = lshr i32 %0, 24
  %3 = trunc i32 %2 to i8
  ret i8 %3
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL9parse_tagPPKcS0_Pj(i8** nocapture, i8* readnone, i32* nocapture) unnamed_addr #8 {
  %4 = alloca i32, align 4
  %5 = load i8*, i8** %0, align 8
  %6 = icmp ult i8* %5, %1
  br i1 %6, label %7, label %13

7:                                                ; preds = %3, %10
  %8 = phi i8* [ %11, %10 ], [ %5, %3 ]
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %13 [
    i8 32, label %10
    i8 12, label %10
    i8 10, label %10
    i8 13, label %10
    i8 9, label %10
    i8 11, label %10
  ]

10:                                               ; preds = %7, %7, %7, %7, %7, %7
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %11, i8** %0, align 8
  %12 = icmp eq i8* %11, %1
  br i1 %12, label %115, label %7

13:                                               ; preds = %7, %3
  %14 = phi i8* [ %5, %3 ], [ %8, %7 ]
  %15 = icmp ult i8* %14, %1
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = load i8, i8* %14, align 1
  switch i8 %17, label %20 [
    i8 39, label %18
    i8 34, label %18
  ]

18:                                               ; preds = %16, %16
  %19 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %19, i8** %0, align 8
  br label %20

20:                                               ; preds = %16, %18, %13
  %21 = phi i8* [ %19, %18 ], [ %14, %13 ], [ %14, %16 ]
  %22 = phi i8 [ %17, %18 ], [ 0, %13 ], [ 0, %16 ]
  %23 = icmp ult i8* %21, %1
  br i1 %23, label %24, label %115

24:                                               ; preds = %20, %35
  %25 = phi i8* [ %36, %35 ], [ %21, %20 ]
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, -33
  %28 = add i8 %27, -65
  %29 = icmp ult i8 %28, 26
  %30 = add i8 %26, -48
  %31 = icmp ult i8 %30, 10
  %32 = or i1 %31, %29
  %33 = icmp eq i8 %26, 95
  %34 = or i1 %33, %32
  br i1 %34, label %35, label %38

35:                                               ; preds = %24
  %36 = getelementptr inbounds i8, i8* %25, i64 1
  store i8* %36, i8** %0, align 8
  %37 = icmp eq i8* %36, %1
  br i1 %37, label %38, label %24

38:                                               ; preds = %24, %35
  %39 = phi i8* [ %1, %35 ], [ %25, %24 ]
  %40 = icmp eq i8* %21, %39
  br i1 %40, label %115, label %41

41:                                               ; preds = %38
  %42 = ptrtoint i8* %39 to i64
  %43 = ptrtoint i8* %21 to i64
  %44 = sub i64 %42, %43
  %45 = icmp sgt i64 %44, 4
  br i1 %45, label %115, label %46

46:                                               ; preds = %41
  %47 = trunc i64 %44 to i32
  %48 = bitcast i32* %4 to [4 x i8]*
  %49 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #12
  %50 = getelementptr inbounds [4 x i8], [4 x i8]* %48, i64 0, i64 1
  %51 = getelementptr inbounds [4 x i8], [4 x i8]* %48, i64 0, i64 2
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* %48, i64 0, i64 3
  %53 = icmp ne i8* %21, null
  %54 = icmp ne i32 %47, 0
  %55 = and i1 %53, %54
  store i32 -1431655766, i32* %4, align 4
  br i1 %55, label %56, label %100

56:                                               ; preds = %46
  %57 = load i8, i8* %21, align 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %100, label %59

59:                                               ; preds = %56
  %60 = icmp ult i32 %47, 4
  %61 = select i1 %60, i32 %47, i32 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %59
  %64 = zext i32 %61 to i64
  br label %65

65:                                               ; preds = %63, %71
  %66 = phi i64 [ 0, %63 ], [ %69, %71 ]
  %67 = phi i8 [ %57, %63 ], [ %73, %71 ]
  %68 = getelementptr inbounds [4 x i8], [4 x i8]* %48, i64 0, i64 %66
  store i8 %67, i8* %68, align 1
  %69 = add nuw nsw i64 %66, 1
  %70 = icmp ult i64 %69, %64
  br i1 %70, label %71, label %75

71:                                               ; preds = %65
  %72 = getelementptr inbounds i8, i8* %21, i64 %69
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %65

75:                                               ; preds = %71, %65
  %76 = trunc i64 %69 to i32
  %77 = icmp ult i32 %76, 4
  br i1 %77, label %78, label %85

78:                                               ; preds = %75, %59
  %79 = phi i32 [ %76, %75 ], [ 0, %59 ]
  %80 = zext i32 %79 to i64
  %81 = getelementptr [4 x i8], [4 x i8]* %48, i64 0, i64 %80
  %82 = sub nuw nsw i32 3, %79
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %83, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %81, i8 32, i64 %84, i1 false) #12
  br label %85

85:                                               ; preds = %78, %75
  %86 = load i8, i8* %49, align 4
  %87 = zext i8 %86 to i32
  %88 = shl nuw i32 %87, 24
  %89 = load i8, i8* %50, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 16
  %92 = or i32 %91, %88
  %93 = load i8, i8* %51, align 2
  %94 = zext i8 %93 to i32
  %95 = shl nuw nsw i32 %94, 8
  %96 = or i32 %92, %95
  %97 = load i8, i8* %52, align 1
  %98 = zext i8 %97 to i32
  %99 = or i32 %96, %98
  br label %100

100:                                              ; preds = %46, %56, %85
  %101 = phi i32 [ %99, %85 ], [ 0, %56 ], [ 0, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #12
  store i32 %101, i32* %2, align 4
  %102 = icmp eq i8 %22, 0
  br i1 %102, label %115, label %103

103:                                              ; preds = %100
  %104 = load i8*, i8** %0, align 8
  %105 = ptrtoint i8* %104 to i64
  %106 = sub i64 %105, %43
  %107 = icmp ne i64 %106, 4
  %108 = icmp eq i8* %104, %1
  %109 = or i1 %108, %107
  br i1 %109, label %115, label %110

110:                                              ; preds = %103
  %111 = load i8, i8* %104, align 1
  %112 = icmp eq i8 %111, %22
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  %114 = getelementptr inbounds i8, i8* %104, i64 1
  store i8* %114, i8** %0, align 8
  br label %115

115:                                              ; preds = %10, %20, %103, %113, %100, %110, %38, %41
  %116 = phi i1 [ false, %41 ], [ false, %38 ], [ false, %103 ], [ false, %110 ], [ true, %100 ], [ true, %113 ], [ false, %20 ], [ false, %10 ]
  ret i1 %116
}

declare hidden zeroext i1 @_Z12hb_parse_intPPKcS0_Pib(i8**, i8*, i32*, i1 zeroext) local_unnamed_addr #11

declare hidden zeroext i1 @_Z15hb_parse_doublePPKcS0_Pdb(i8**, i8*, double*, i1 zeroext) local_unnamed_addr #11

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 1073205, i32 2146410443}
